uint64_t sub_23BBE616C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for DownloadButtonFeature(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadButtonFeature<A>, v4);
  v5 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v5);
  return sub_23BC71CDC();
}

uint64_t DownloadButton.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v12 = type metadata accessor for DownloadButtonFeature(255, a3, a4, v11);
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadButtonFeature<A>, v12);
  v13 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v13);
  result = sub_23BC71CD0();
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v15;
  *(_BYTE *)(a5 + 16) = v16 & 1;
  return result;
}

uint64_t sub_23BBE62B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BBE62D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_23BBE62F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v27 = a4;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F48);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  v13 = v4[1];
  v15 = *((_BYTE *)v4 + 16);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v28 = *(_OWORD *)(a3 + 16);
  v29 = v14;
  v30 = v13;
  v31 = v15;
  sub_23BBE87B8(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
  sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
  sub_23BC72048();
  if (a1)
  {
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a1;
    *(_QWORD *)(v17 + 24) = a2;
    v18 = sub_23BBE8860;
  }
  else
  {
    v18 = 0;
  }
  sub_23BBE87B8(a1);
  sub_23BBE87C8((uint64_t)v18);
  KeyPath = swift_getKeyPath();
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = a1 == 0;
  v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v26);
  v22 = (uint64_t *)&v12[*(int *)(v25 + 36)];
  *v22 = KeyPath;
  v22[1] = (uint64_t)sub_23BBE87F0;
  v22[2] = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  return sub_23BBE87F8((uint64_t)v12, v27, &qword_256A73F48);
}

uint64_t sub_23BBE652C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71FF4();
  *a1 = result;
  return result;
}

uint64_t sub_23BBE6568(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8]();
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *v1;
  v6 = v1[1];
  v7 = *((_BYTE *)v1 + 16);
  sub_23BC71CA0();
  v8 = sub_23BC71CB8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
  v9 = swift_allocObject();
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v9 + 24) = v11;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v6;
  *(_BYTE *)(v9 + 48) = v7;
  v14 = v10;
  v15 = v11;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74090);
  sub_23BBE869C(&qword_256A74098, &qword_256A74090, MEMORY[0x24BDF41A8]);
  return sub_23BC7203C();
}

uint64_t sub_23BBE66B0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A740A0);
  sub_23BBE85F0();
  return sub_23BC72024();
}

double sub_23BBE6730@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  double result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  __int128 v16;

  v2 = sub_23BC72000();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC71FF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v6 = sub_23BC72018();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23BC720F0();
  sub_23BC71D18();
  v7 = v12;
  v8 = v13;
  v9 = v14;
  v10 = v15;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  result = *(double *)&v16;
  *(_OWORD *)(a1 + 40) = v16;
  return result;
}

uint64_t sub_23BBE6860(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v2;
  v9 = v2[1];
  v10 = *((_BYTE *)v2 + 16);
  sub_23BC71CA0();
  v11 = sub_23BC71CB8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
  v12 = swift_allocObject();
  v13 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 24) = v14;
  *(_QWORD *)(v12 + 32) = v8;
  *(_QWORD *)(v12 + 40) = v9;
  *(_BYTE *)(v12 + 48) = v10;
  v17 = v13;
  v18 = v14;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  v22 = a1;
  v23 = BYTE4(a1) & 1;
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74050);
  sub_23BBE869C(&qword_256A74058, &qword_256A74050, MEMORY[0x24BDF41A8]);
  return sub_23BC7203C();
}

uint64_t sub_23BBE69B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74060);
  sub_23BBE869C(&qword_256A74068, &qword_256A74060, MEMORY[0x24BDF4750]);
  return sub_23BC72024();
}

uint64_t sub_23BBE6A64@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = sub_23BC720F0();
  a2[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74070);
  return sub_23BBE6AB8(a1 | ((HIDWORD(a1) & 1) << 32), (char *)a2 + *(int *)(v5 + 44));
}

uint64_t sub_23BBE6AB8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a2;
  v3 = sub_23BC72000();
  v4 = *(_QWORD *)(v3 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74078);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  BYTE4(v30) = BYTE4(a1) & 1;
  v29 = 1065353216;
  LODWORD(v30) = a1;
  sub_23BBE854C();
  v27 = v13;
  sub_23BC71CE8();
  sub_23BC71FF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF3FD0], v3);
  v14 = sub_23BC72018();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_23BC720F0();
  sub_23BC71D18();
  LOBYTE(v6) = v31;
  v15 = v32;
  LOBYTE(v4) = v33;
  v16 = v35;
  v25 = v34;
  v26 = v30;
  v17 = v8;
  v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v18(v11, v13, v7);
  v19 = v28;
  v18(v28, v11, v7);
  v20 = &v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74088) + 48)];
  v21 = v26;
  *(_QWORD *)v20 = v14;
  *((_QWORD *)v20 + 1) = v21;
  v20[16] = (char)v6;
  *((_QWORD *)v20 + 3) = v15;
  v20[32] = v4;
  *((_QWORD *)v20 + 5) = v25;
  *((_QWORD *)v20 + 6) = v16;
  v22 = *(void (**)(char *, uint64_t))(v17 + 8);
  swift_retain();
  v22(v27, v7);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v22)(v11, v7);
}

uint64_t sub_23BBE6D00(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *v1;
  v7 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  sub_23BC71CA0();
  v9 = sub_23BC71CB8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
  v10 = swift_allocObject();
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v10 + 16) = v11;
  *(_QWORD *)(v10 + 24) = v12;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v7;
  *(_BYTE *)(v10 + 48) = v8;
  v15 = v11;
  v16 = v12;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
  sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
  return sub_23BC7203C();
}

uint64_t sub_23BBE6E48@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_23BC71C4C();
  MEMORY[0x24BDAC7A8]();
  sub_23BC722DC();
  MEMORY[0x24BDAC7A8]();
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v9 = type metadata accessor for DownloadButton(0, a1, a2, v8);
  sub_23BBE616C(v9, v10, v11, v12);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC72300();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v14;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_23BBE6FF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71FF4();
  *a1 = result;
  return result;
}

uint64_t DownloadButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (**v39)();
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  unsigned __int16 v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char v108;

  v98 = a2;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF0);
  MEMORY[0x24BDAC7A8](v96);
  v97 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v75 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v74 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F00);
  v73 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v72 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F08);
  MEMORY[0x24BDAC7A8](v76);
  v77 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F10);
  v71 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v70 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F18);
  MEMORY[0x24BDAC7A8](v81);
  v89 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F20);
  MEMORY[0x24BDAC7A8](v85);
  v87 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F28);
  MEMORY[0x24BDAC7A8](v80);
  v83 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F30);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F38);
  MEMORY[0x24BDAC7A8](v92);
  v90 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F40);
  MEMORY[0x24BDAC7A8](v93);
  v91 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F48);
  MEMORY[0x24BDAC7A8](v82);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F50);
  v17 = MEMORY[0x24BDAC7A8](v95);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v69 - v20;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F58);
  MEMORY[0x24BDAC7A8](v99);
  v94 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v2;
  v24 = v2[1];
  v25 = *((_BYTE *)v2 + 16);
  v106 = *v2;
  v107 = v24;
  v108 = v25;
  sub_23BBE616C(a1, v26, v27, v28);
  v29 = *(_QWORD *)(a1 + 24);
  v30 = a1;
  v100 = *(_QWORD *)(a1 + 16);
  v101 = v100;
  v102 = v29;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  if (v106 == 1)
  {
    v69 = v21;
    v106 = v23;
    v107 = v24;
    v108 = v25;
    v34 = sub_23BBE616C(a1, v31, v32, v33);
    MEMORY[0x24BDAC7A8](v34);
    *(&v69 - 2) = (char *)v100;
    *(&v69 - 1) = (char *)v29;
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    if ((v105 & 1) != 0)
    {
      v106 = v23;
      v107 = v24;
      v108 = v25;
      sub_23BBE62F8(0, 0, a1, (uint64_t)v16);
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = v100;
      *(_QWORD *)(v38 + 24) = v29;
      *(_QWORD *)(v38 + 32) = v23;
      *(_QWORD *)(v38 + 40) = v24;
      *(_BYTE *)(v38 + 48) = v25;
      sub_23BBE817C((uint64_t)v16, (uint64_t)v19, &qword_256A73F48);
      v39 = (uint64_t (**)())&v19[*(int *)(v95 + 36)];
      *v39 = sub_23BBE7EB4;
      v39[1] = (uint64_t (*)())v38;
      v39[2] = 0;
      v39[3] = 0;
      sub_23BBE7EBC();
      sub_23BBE81C0((uint64_t)v16, &qword_256A73F48);
      v40 = (uint64_t)v19;
      v41 = (uint64_t)v69;
      sub_23BBE87F8(v40, (uint64_t)v69, &qword_256A73F50);
      sub_23BBE817C(v41, v91, &qword_256A73F50);
      swift_storeEnumTagMultiPayload();
      sub_23BBE7F2C();
      sub_23BBE8034();
      v42 = (uint64_t)v94;
      sub_23BC71E20();
      sub_23BBE81C0(v41, &qword_256A73F50);
      v43 = v97;
    }
    else
    {
      v48 = v100;
      v49 = v23;
      v50 = v30;
      v51 = v103 | ((unint64_t)v104 << 32);
      if ((v51 & 0x10000000000) != 0)
      {
        v58 = v90;
        v106 = v49;
        v107 = v24;
        if ((v51 & 0xFFFFFFFFFFLL) != 0)
        {
          v108 = v25;
          v59 = v74;
          sub_23BBE6D00(v50);
          v60 = v75;
          v61 = v88;
          (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v87, v59, v88);
          swift_storeEnumTagMultiPayload();
          sub_23BBE8464(&qword_256A73F98, &qword_256A73F30, (uint64_t (*)(void))sub_23BBE7F98, (uint64_t (*)(void))sub_23BBE80D8);
          sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
          sub_23BC71E20();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
          v43 = v97;
          v62 = (uint64_t)v58;
        }
        else
        {
          v65 = v25;
          v108 = v25;
          v66 = swift_allocObject();
          *(_QWORD *)(v66 + 16) = v48;
          *(_QWORD *)(v66 + 24) = v29;
          *(_QWORD *)(v66 + 32) = v49;
          *(_QWORD *)(v66 + 40) = v24;
          *(_BYTE *)(v66 + 48) = v65;
          sub_23BBE7EBC();
          sub_23BBE62F8((uint64_t)sub_23BBE8200, v66, v50, (uint64_t)v16);
          swift_release();
          sub_23BBE817C((uint64_t)v16, v83, &qword_256A73F48);
          swift_storeEnumTagMultiPayload();
          sub_23BBE7F98();
          sub_23BBE80D8();
          v62 = (uint64_t)v58;
          v67 = (uint64_t)v84;
          sub_23BC71E20();
          sub_23BBE817C(v67, v87, &qword_256A73F30);
          swift_storeEnumTagMultiPayload();
          sub_23BBE8464(&qword_256A73F98, &qword_256A73F30, (uint64_t (*)(void))sub_23BBE7F98, (uint64_t (*)(void))sub_23BBE80D8);
          sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
          sub_23BC71E20();
          sub_23BBE81C0(v67, &qword_256A73F30);
          sub_23BBE81C0((uint64_t)v16, &qword_256A73F48);
          v43 = v97;
        }
        v63 = v91;
      }
      else
      {
        v106 = v49;
        v107 = v24;
        v108 = v25;
        v52 = sub_23BBE616C(v30, v35, v36, v37);
        MEMORY[0x24BDAC7A8](v52);
        *(&v69 - 2) = (char *)v48;
        *(&v69 - 1) = (char *)v29;
        swift_getKeyPath();
        sub_23BC7218C();
        swift_release();
        swift_release();
        if ((v106 & 1) != 0)
        {
          v106 = v49;
          v107 = v24;
          v108 = v25;
          v53 = v70;
          sub_23BBE6860(v51 | ((HIDWORD(v51) & 1) << 32), v30);
          v54 = v71;
          v55 = v78;
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v77, v53, v78);
        }
        else
        {
          v106 = v49;
          v107 = v24;
          v108 = v25;
          v53 = v72;
          sub_23BBE6568(v30);
          v54 = v73;
          v55 = v79;
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v77, v53, v79);
        }
        swift_storeEnumTagMultiPayload();
        v56 = MEMORY[0x24BDF43B0];
        sub_23BBE869C(&qword_256A73FA8, &qword_256A73F10, MEMORY[0x24BDF43B0]);
        sub_23BBE869C(qword_256A73FB0, &qword_256A73F00, v56);
        v57 = v89;
        sub_23BC71E20();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
        v43 = v97;
        v63 = v91;
        sub_23BBE817C(v57, v83, &qword_256A73F18);
        swift_storeEnumTagMultiPayload();
        sub_23BBE7F98();
        sub_23BBE80D8();
        v64 = (uint64_t)v84;
        sub_23BC71E20();
        sub_23BBE817C(v64, v87, &qword_256A73F30);
        swift_storeEnumTagMultiPayload();
        sub_23BBE8464(&qword_256A73F98, &qword_256A73F30, (uint64_t (*)(void))sub_23BBE7F98, (uint64_t (*)(void))sub_23BBE80D8);
        sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
        v62 = (uint64_t)v90;
        sub_23BC71E20();
        sub_23BBE81C0(v64, &qword_256A73F30);
        sub_23BBE81C0(v89, &qword_256A73F18);
      }
      v42 = (uint64_t)v94;
      sub_23BBE817C(v62, v63, &qword_256A73F38);
      swift_storeEnumTagMultiPayload();
      sub_23BBE7F2C();
      sub_23BBE8034();
      sub_23BC71E20();
      sub_23BBE81C0(v62, &qword_256A73F38);
    }
    sub_23BBE817C(v42, v43, &qword_256A73F58);
    swift_storeEnumTagMultiPayload();
    sub_23BBE7EC4();
    sub_23BBE7F2C();
    sub_23BC71E20();
    v46 = v42;
    v47 = &qword_256A73F58;
  }
  else
  {
    v106 = v23;
    v107 = v24;
    v108 = v25;
    sub_23BBE62F8(0, 0, a1, (uint64_t)v16);
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = v100;
    *(_QWORD *)(v44 + 24) = v29;
    *(_QWORD *)(v44 + 32) = v23;
    *(_QWORD *)(v44 + 40) = v24;
    *(_BYTE *)(v44 + 48) = v25;
    sub_23BBE817C((uint64_t)v16, (uint64_t)v19, &qword_256A73F48);
    v45 = (uint64_t (**)())&v19[*(int *)(v95 + 36)];
    *v45 = sub_23BBE7EB4;
    v45[1] = (uint64_t (*)())v44;
    v45[2] = 0;
    v45[3] = 0;
    sub_23BBE7EBC();
    sub_23BBE81C0((uint64_t)v16, &qword_256A73F48);
    sub_23BBE87F8((uint64_t)v19, (uint64_t)v21, &qword_256A73F50);
    sub_23BBE817C((uint64_t)v21, v97, &qword_256A73F50);
    swift_storeEnumTagMultiPayload();
    sub_23BBE7EC4();
    sub_23BBE7F2C();
    sub_23BC71E20();
    v46 = (uint64_t)v21;
    v47 = &qword_256A73F50;
  }
  return sub_23BBE81C0(v46, v47);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24260ECF8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23BBE7E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = type metadata accessor for DownloadButton(0, a4, a5, a4);
  sub_23BBE616C(v5, v6, v7, v8);
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BBE7EAC()
{
  return swift_release();
}

uint64_t sub_23BBE7EB4()
{
  return sub_23BBE8208();
}

uint64_t sub_23BBE7EBC()
{
  return swift_retain();
}

uint64_t sub_23BBE7EC4()
{
  return sub_23BBE8464(&qword_256A73F60, &qword_256A73F58, (uint64_t (*)(void))sub_23BBE7F2C, (uint64_t (*)(void))sub_23BBE8034);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24260ED04](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23BBE7F2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A73F68;
  if (!qword_256A73F68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73F50);
    v2[0] = sub_23BBE7F98();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A73F68);
  }
  return result;
}

unint64_t sub_23BBE7F98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A73F70;
  if (!qword_256A73F70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73F48);
    v2[0] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23BBE869C(&qword_256A73F80, &qword_256A73F88, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A73F70);
  }
  return result;
}

unint64_t sub_23BBE8034()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A73F90;
  if (!qword_256A73F90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73F38);
    v2[0] = sub_23BBE8464(&qword_256A73F98, &qword_256A73F30, (uint64_t (*)(void))sub_23BBE7F98, (uint64_t (*)(void))sub_23BBE80D8);
    v2[1] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A73F90);
  }
  return result;
}

unint64_t sub_23BBE80D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256A73FA0;
  if (!qword_256A73FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73F18);
    v2 = MEMORY[0x24BDF43B0];
    v3[0] = sub_23BBE869C(&qword_256A73FA8, &qword_256A73F10, MEMORY[0x24BDF43B0]);
    v3[1] = sub_23BBE869C(qword_256A73FB0, &qword_256A73F00, v2);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A73FA0);
  }
  return result;
}

uint64_t sub_23BBE817C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BBE81C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23BBE8200()
{
  return sub_23BBE8208();
}

uint64_t sub_23BBE8208()
{
  uint64_t v0;

  return sub_23BBE7E38(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BBE8230()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BBE826C()
{
  return sub_23BC71F28();
}

uint64_t sub_23BBE8288()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for UpNextQueueButton()
{
  return sub_23BBE7EAC();
}

uint64_t _s14FitnessActions17UpNextQueueButtonVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UpNextQueueButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23BBE7EAC();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for UpNextQueueButton(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_23BBE7EAC();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpNextQueueButton(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UpNextQueueButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for DownloadButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadButton);
}

uint64_t sub_23BBE8430()
{
  return sub_23BBE8464(&qword_256A74038, &qword_256A74040, sub_23BBE7EC4, (uint64_t (*)(void))sub_23BBE7F2C);
}

uint64_t sub_23BBE8464(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BBE84D8()
{
  return sub_23BBE8208();
}

uint64_t sub_23BBE84E0()
{
  return sub_23BBE69B8();
}

uint64_t sub_23BBE850C@<X0>(uint64_t a1@<X8>)
{
  return sub_23BBE85C8(a1);
}

uint64_t sub_23BBE852C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23BBE6A64(*(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), a1);
}

unint64_t sub_23BBE854C()
{
  unint64_t result;

  result = qword_256A74080;
  if (!qword_256A74080)
  {
    result = MEMORY[0x24260ED10](MEMORY[0x24BEE14F0], MEMORY[0x24BEE14E8]);
    atomic_store(result, (unint64_t *)&qword_256A74080);
  }
  return result;
}

uint64_t sub_23BBE8594()
{
  return sub_23BBE66B0();
}

uint64_t sub_23BBE85A4@<X0>(uint64_t a1@<X8>)
{
  return sub_23BBE85C8(a1);
}

uint64_t sub_23BBE85C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BBE6E48(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23BBE85F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A740A8;
  if (!qword_256A740A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A740A0);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A740A8);
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  sub_23BBE7EAC();
  return swift_deallocObject();
}

uint64_t sub_23BBE8680()
{
  return sub_23BBE8208();
}

uint64_t sub_23BBE8688()
{
  return sub_23BBE8760();
}

uint64_t sub_23BBE869C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24260ED10](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BBE86DC@<X0>(uint64_t a1@<X8>)
{
  return sub_23BBE85C8(a1);
}

uint64_t sub_23BBE86F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BBE8724()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_23BBE874C()
{
  return sub_23BBE8760();
}

uint64_t sub_23BBE8760()
{
  return sub_23BC72024();
}

uint64_t sub_23BBE87B8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23BBE87C8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23BBE87E0()
{
  return swift_deallocObject();
}

_BYTE *sub_23BBE87F0(_BYTE *a1)
{
  uint64_t v1;

  return sub_23BC6C8B8(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_23BBE87F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BBE883C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BBE8860()
{
  uint64_t v0;

  return sub_23BC056FC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_23BBE8868@<X0>(uint64_t a1@<X8>)
{
  return sub_23BBE85C8(a1);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24260EC74](a1, v6, a5);
}

uint64_t DownloadButtonAction.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x1000000000000) != 0)
    __asm { BR              X9 }
  v3 = a2 & 0xFFFFFFFFFFLL;
  sub_23BC727B0();
  if ((v2 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v3 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

uint64_t static DownloadButtonAction.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return sub_23BBE95C4(a1 & 0xFFFFFFFFFFFFLL | ((HIWORD(a1) & 1) << 48), a2 & 0xFFFFFFFFFFFFLL | ((HIWORD(a2) & 1) << 48));
}

uint64_t sub_23BBE8994()
{
  return 0;
}

uint64_t sub_23BBE89A0()
{
  return 0;
}

void sub_23BBE89AC(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23BBE89B8()
{
  sub_23BBE9868();
  return sub_23BC72828();
}

uint64_t sub_23BBE89E0()
{
  sub_23BBE9868();
  return sub_23BC72834();
}

uint64_t sub_23BBE8A08(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BBE8A44 + 4 * byte_23BC72D56[a1]))(0xD000000000000014, 0x800000023BC81AF0);
}

uint64_t sub_23BBE8A44()
{
  return 0x6570704177656976;
}

unint64_t sub_23BBE8A64()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23BBE8A9C()
{
  uint64_t v0;

  return v0 + 6;
}

void sub_23BBE8AAC()
{
  JUMPOUT(0x23BBE8AB8);
}

uint64_t sub_23BBE8AC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23BBE8AF0()
{
  sub_23BBE9824();
  return sub_23BC72828();
}

uint64_t sub_23BBE8B18()
{
  sub_23BBE9824();
  return sub_23BC72834();
}

BOOL sub_23BBE8B40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23BBE8B54()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BBE8B98()
{
  return sub_23BC727B0();
}

uint64_t sub_23BBE8BC0()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BBE8C00()
{
  unsigned __int8 *v0;

  return sub_23BBE8A08(*v0);
}

uint64_t sub_23BBE8C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBE9934(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BBE8C2C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23BBE8C38()
{
  sub_23BBE96D0();
  return sub_23BC72828();
}

uint64_t sub_23BBE8C60()
{
  sub_23BBE96D0();
  return sub_23BC72834();
}

uint64_t sub_23BBE8C88()
{
  sub_23BBE98AC();
  return sub_23BC72828();
}

uint64_t sub_23BBE8CB0()
{
  sub_23BBE98AC();
  return sub_23BC72834();
}

uint64_t sub_23BBE8CD8()
{
  return 1;
}

uint64_t sub_23BBE8CE0()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BBE8D20()
{
  return sub_23BC727B0();
}

uint64_t sub_23BBE8D44()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BBE8D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBE9BD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BBE8DAC()
{
  sub_23BBE9714();
  return sub_23BC72828();
}

uint64_t sub_23BBE8DD4()
{
  sub_23BBE9714();
  return sub_23BC72834();
}

uint64_t sub_23BBE8DFC()
{
  sub_23BBE97E0();
  return sub_23BC72828();
}

uint64_t sub_23BBE8E24()
{
  sub_23BBE97E0();
  return sub_23BC72834();
}

uint64_t sub_23BBE8E4C()
{
  sub_23BBE979C();
  return sub_23BC72828();
}

uint64_t sub_23BBE8E74()
{
  sub_23BBE979C();
  return sub_23BC72834();
}

uint64_t sub_23BBE8E9C()
{
  sub_23BBE98F0();
  return sub_23BC72828();
}

uint64_t sub_23BBE8EC4()
{
  sub_23BBE98F0();
  return sub_23BC72834();
}

uint64_t DownloadButtonAction.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  char v46;
  char v47;

  v43 = a2 & 0xFFFFFFFFFFFFLL;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740C0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740C8);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740D0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v34 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740D8);
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v31 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740E0);
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v28 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740E8);
  v26 = *(_QWORD *)(v14 - 8);
  v27 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v25 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740F0);
  MEMORY[0x24BDAC7A8](v24);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740F8);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BBE96D0();
  sub_23BC7281C();
  if ((a2 & 0x1000000000000) != 0)
    __asm { BR              X9 }
  v47 = 6;
  sub_23BBE9714();
  v20 = v40;
  sub_23BC726A8();
  v45 = BYTE4(a2);
  v44 = a2;
  v46 = BYTE5(v43) & 1;
  sub_23BBE9758();
  v21 = v42;
  sub_23BC72720();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t DownloadButtonAction.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  DownloadButtonAction.hash(into:)((uint64_t)v3, a1 & 0xFFFFFFFFFFFFLL | ((HIWORD(a1) & 1) << 48));
  return sub_23BC727E0();
}

uint64_t DownloadButtonAction.init(from:)(_QWORD *a1)
{
  unint64_t v1;

  v1 = sub_23BBE9C4C(a1);
  return v1 & 0xFFFFFFFFFFFFLL | ((HIWORD(v1) & 1) << 48);
}

uint64_t sub_23BBE943C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BBE9C4C(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_WORD *)(a2 + 4) = WORD2(result);
    *(_BYTE *)(a2 + 6) = BYTE6(result) & 1;
  }
  return result;
}

uint64_t sub_23BBE9474(_QWORD *a1)
{
  unsigned int *v1;

  return DownloadButtonAction.encode(to:)(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48));
}

uint64_t sub_23BBE94AC()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  v2 = *((_BYTE *)v0 + 6);
  sub_23BC727A4();
  DownloadButtonAction.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 48));
  return sub_23BC727E0();
}

uint64_t sub_23BBE9504(uint64_t a1)
{
  unsigned int *v1;

  return DownloadButtonAction.hash(into:)(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48));
}

uint64_t sub_23BBE952C()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  v2 = *((_BYTE *)v0 + 6);
  sub_23BC727A4();
  DownloadButtonAction.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 48));
  return sub_23BC727E0();
}

uint64_t sub_23BBE9580(unsigned int *a1, unsigned int *a2)
{
  return sub_23BBE95C4(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48));
}

uint64_t sub_23BBE95C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if ((a1 & 0x1000000000000) != 0)
    return ((uint64_t (*)(void))((char *)&loc_23BBE9618 + 4 * byte_23BC72D63[a1 & 0xFFFFFFFFFFFFLL]))();
  if ((a2 & 0x1000000000000) != 0)
    return 0;
  v2 = a2 & 0xFFFFFFFFFFLL;
  if ((a1 & 0x10000000000) != 0)
  {
    if ((a1 & 0xFFFFFFFFFFLL) != 0)
    {
      if ((a2 & 0x10000000000) != 0)
        return v2 != 0;
    }
    else if ((a2 & 0x10000000000) != 0)
    {
      return v2 == 0;
    }
    return 0;
  }
  if ((a2 & 0x10000000000) != 0)
    return 0;
  if ((a1 & 0x100000000) != 0)
    return (a2 & 0x100000000) != 0;
  return (a2 & 0x100000000) == 0 && *(float *)&a1 == *(float *)&a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23BBE96D0()
{
  unint64_t result;

  result = qword_256A74100;
  if (!qword_256A74100)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73500, &type metadata for DownloadButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74100);
  }
  return result;
}

unint64_t sub_23BBE9714()
{
  unint64_t result;

  result = qword_256A74108;
  if (!qword_256A74108)
  {
    result = MEMORY[0x24260ED10](&unk_23BC734B0, &type metadata for DownloadButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74108);
  }
  return result;
}

unint64_t sub_23BBE9758()
{
  unint64_t result;

  result = qword_256A74110;
  if (!qword_256A74110)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadStatus, &type metadata for DownloadStatus);
    atomic_store(result, (unint64_t *)&qword_256A74110);
  }
  return result;
}

unint64_t sub_23BBE979C()
{
  unint64_t result;

  result = qword_256A74118;
  if (!qword_256A74118)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73460, &type metadata for DownloadButtonAction.RemoveDownloadConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74118);
  }
  return result;
}

unint64_t sub_23BBE97E0()
{
  unint64_t result;

  result = qword_256A74120;
  if (!qword_256A74120)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73410, &type metadata for DownloadButtonAction.RemoveDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74120);
  }
  return result;
}

unint64_t sub_23BBE9824()
{
  unint64_t result;

  result = qword_256A74128;
  if (!qword_256A74128)
  {
    result = MEMORY[0x24260ED10](&unk_23BC733C0, &type metadata for DownloadButtonAction.CancelRemoveDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74128);
  }
  return result;
}

unint64_t sub_23BBE9868()
{
  unint64_t result;

  result = qword_256A74130;
  if (!qword_256A74130)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73370, &type metadata for DownloadButtonAction.CancelDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74130);
  }
  return result;
}

unint64_t sub_23BBE98AC()
{
  unint64_t result;

  result = qword_256A74138;
  if (!qword_256A74138)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73320, &type metadata for DownloadButtonAction.DownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74138);
  }
  return result;
}

unint64_t sub_23BBE98F0()
{
  unint64_t result;

  result = qword_256A74140;
  if (!qword_256A74140)
  {
    result = MEMORY[0x24260ED10](&unk_23BC732D0, &type metadata for DownloadButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74140);
  }
  return result;
}

uint64_t sub_23BBE9934(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023BC81AF0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023BC81B10 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023BC81B30 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023BC81B60 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023BC81B80 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC81BB0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23BBE9BD4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BBE9C40()
{
  return 12383;
}

uint64_t sub_23BBE9C4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD v29[21];
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A741E0);
  v3 = *(_QWORD *)(v2 - 8);
  v29[13] = v2;
  v29[14] = v3;
  MEMORY[0x24BDAC7A8](v2);
  v29[17] = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A741E8);
  v29[10] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29[20] = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A741F0);
  v29[11] = *(_QWORD *)(v6 - 8);
  v29[12] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v29[19] = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A741F8);
  v29[8] = *(_QWORD *)(v8 - 8);
  v29[9] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v29[18] = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74200);
  v29[6] = *(_QWORD *)(v10 - 8);
  v29[7] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v29[16] = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74208);
  v29[4] = *(_QWORD *)(v12 - 8);
  v29[5] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v29[15] = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74210);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74218);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23BBE96D0();
  v23 = v32;
  sub_23BC72810();
  if (!v23)
  {
    v29[3] = v17;
    v29[1] = v15;
    v29[2] = v14;
    v32 = v19;
    v24 = sub_23BC72690();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X10 }
    v25 = sub_23BC725A0();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v27 = &type metadata for DownloadButtonAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

unint64_t sub_23BBEA444()
{
  unint64_t result;

  result = qword_256A74148;
  if (!qword_256A74148)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadButtonAction, &type metadata for DownloadButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A74148);
  }
  return result;
}

_DWORD *__swift_memcpy7_4(_DWORD *result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DownloadButtonAction(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 7))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DownloadButtonAction(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 7) = v3;
  return result;
}

uint64_t sub_23BBEA4F0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23BBEA510(uint64_t result, int a2)
{
  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    *(_BYTE *)(result + 6) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadButtonAction()
{
  return &type metadata for DownloadButtonAction;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DownloadButtonAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadButtonAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23BBEA62C + 4 * byte_23BC72D75[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23BBEA660 + 4 * byte_23BC72D70[v4]))();
}

uint64_t sub_23BBEA660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBEA668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BBEA670);
  return result;
}

uint64_t sub_23BBEA67C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BBEA684);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23BBEA688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBEA690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBEA69C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23BBEA6A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.CodingKeys()
{
  return &type metadata for DownloadButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for DownloadButtonAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.DownloadButtonTappedCodingKeys()
{
  return &type metadata for DownloadButtonAction.DownloadButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.CancelDownloadButtonTappedCodingKeys()
{
  return &type metadata for DownloadButtonAction.CancelDownloadButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.CancelRemoveDownloadButtonTappedCodingKeys()
{
  return &type metadata for DownloadButtonAction.CancelRemoveDownloadButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.RemoveDownloadButtonTappedCodingKeys()
{
  return &type metadata for DownloadButtonAction.RemoveDownloadButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.RemoveDownloadConfirmationTappedCodingKeys()
{
  return &type metadata for DownloadButtonAction.RemoveDownloadConfirmationTappedCodingKeys;
}

uint64_t getEnumTagSinglePayload for DownloadButtonAction.DownloadStatusUpdatedCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for DownloadButtonAction.DownloadStatusUpdatedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BBEA7B0 + 4 * byte_23BC72D7A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BBEA7D0 + 4 * byte_23BC72D7F[v4]))();
}

_BYTE *sub_23BBEA7B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BBEA7D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BBEA7D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BBEA7E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BBEA7E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BBEA7F0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23BBEA7FC()
{
  return 0;
}

ValueMetadata *type metadata accessor for DownloadButtonAction.DownloadStatusUpdatedCodingKeys()
{
  return &type metadata for DownloadButtonAction.DownloadStatusUpdatedCodingKeys;
}

unint64_t sub_23BBEA818()
{
  unint64_t result;

  result = qword_256A74150;
  if (!qword_256A74150)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73010, &type metadata for DownloadButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74150);
  }
  return result;
}

unint64_t sub_23BBEA860()
{
  unint64_t result;

  result = qword_256A74158;
  if (!qword_256A74158)
  {
    result = MEMORY[0x24260ED10](&unk_23BC732A8, &type metadata for DownloadButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74158);
  }
  return result;
}

unint64_t sub_23BBEA8A8()
{
  unint64_t result;

  result = qword_256A74160;
  if (!qword_256A74160)
  {
    result = MEMORY[0x24260ED10](&unk_23BC731C8, &type metadata for DownloadButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74160);
  }
  return result;
}

unint64_t sub_23BBEA8F0()
{
  unint64_t result;

  result = qword_256A74168;
  if (!qword_256A74168)
  {
    result = MEMORY[0x24260ED10](&unk_23BC731F0, &type metadata for DownloadButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74168);
  }
  return result;
}

unint64_t sub_23BBEA938()
{
  unint64_t result;

  result = qword_256A74170;
  if (!qword_256A74170)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73178, &type metadata for DownloadButtonAction.DownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74170);
  }
  return result;
}

unint64_t sub_23BBEA980()
{
  unint64_t result;

  result = qword_256A74178;
  if (!qword_256A74178)
  {
    result = MEMORY[0x24260ED10](&unk_23BC731A0, &type metadata for DownloadButtonAction.DownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74178);
  }
  return result;
}

unint64_t sub_23BBEA9C8()
{
  unint64_t result;

  result = qword_256A74180;
  if (!qword_256A74180)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73128, &type metadata for DownloadButtonAction.CancelDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74180);
  }
  return result;
}

unint64_t sub_23BBEAA10()
{
  unint64_t result;

  result = qword_256A74188;
  if (!qword_256A74188)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73150, &type metadata for DownloadButtonAction.CancelDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74188);
  }
  return result;
}

unint64_t sub_23BBEAA58()
{
  unint64_t result;

  result = qword_256A74190;
  if (!qword_256A74190)
  {
    result = MEMORY[0x24260ED10](&unk_23BC730D8, &type metadata for DownloadButtonAction.CancelRemoveDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74190);
  }
  return result;
}

unint64_t sub_23BBEAAA0()
{
  unint64_t result;

  result = qword_256A74198;
  if (!qword_256A74198)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73100, &type metadata for DownloadButtonAction.CancelRemoveDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74198);
  }
  return result;
}

unint64_t sub_23BBEAAE8()
{
  unint64_t result;

  result = qword_256A741A0;
  if (!qword_256A741A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73088, &type metadata for DownloadButtonAction.RemoveDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741A0);
  }
  return result;
}

unint64_t sub_23BBEAB30()
{
  unint64_t result;

  result = qword_256A741A8;
  if (!qword_256A741A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC730B0, &type metadata for DownloadButtonAction.RemoveDownloadButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741A8);
  }
  return result;
}

unint64_t sub_23BBEAB78()
{
  unint64_t result;

  result = qword_256A741B0;
  if (!qword_256A741B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73038, &type metadata for DownloadButtonAction.RemoveDownloadConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741B0);
  }
  return result;
}

unint64_t sub_23BBEABC0()
{
  unint64_t result;

  result = qword_256A741B8;
  if (!qword_256A741B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73060, &type metadata for DownloadButtonAction.RemoveDownloadConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741B8);
  }
  return result;
}

unint64_t sub_23BBEAC08()
{
  unint64_t result;

  result = qword_256A741C0;
  if (!qword_256A741C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC72F80, &type metadata for DownloadButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741C0);
  }
  return result;
}

unint64_t sub_23BBEAC50()
{
  unint64_t result;

  result = qword_256A741C8;
  if (!qword_256A741C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC72FA8, &type metadata for DownloadButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741C8);
  }
  return result;
}

unint64_t sub_23BBEAC98()
{
  unint64_t result;

  result = qword_256A741D0;
  if (!qword_256A741D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73218, &type metadata for DownloadButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741D0);
  }
  return result;
}

unint64_t sub_23BBEACE0()
{
  unint64_t result;

  result = qword_256A741D8;
  if (!qword_256A741D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73240, &type metadata for DownloadButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A741D8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_23BBEAD44()
{
  unint64_t result;

  result = qword_256A74228[0];
  if (!qword_256A74228[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadStatus, &type metadata for DownloadStatus);
    atomic_store(result, qword_256A74228);
  }
  return result;
}

uint64_t DownloadButtonEnvironment.init(queryDownloadStatus:requestDownload:cancelDownload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_23BBEAD9C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for StartWorkoutDetail(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for UpNextQueueMonitorEnvironment()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for UpNextQueueMonitorEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for UpNextQueueMonitorEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for UpNextQueueMonitorEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpNextQueueMonitorEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpNextQueueMonitorEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for DownloadButtonEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadButtonEnvironment);
}

uint64_t sub_23BBEAFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_23BBEB000(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_23BC72114();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_23BC72114();
}

uint64_t sub_23BBEB1B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74390);
  sub_23BBE869C(&qword_256A74398, &qword_256A74390, MEMORY[0x24BE2B5E8]);
  return sub_23BC71CDC();
}

uint64_t CreatePlanAlertView.init(store:createPlanAlertViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23BBEB2B0;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23BBEB28C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BBEB2B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t CreatePlanAlertView.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];

  v29 = a1;
  v30 = a3;
  MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanAlertView<A>);
  v5 = sub_23BC71E38();
  v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A742B0);
  v28 = *(_QWORD *)(a2 + 16);
  sub_23BC71D6C();
  sub_23BC71D6C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A742B8);
  swift_getTupleTypeMetadata2();
  v6 = sub_23BC72108();
  MEMORY[0x24260ED10](MEMORY[0x24BDF5428], v6);
  v7 = sub_23BC720B4();
  v8 = sub_23BC71D6C();
  v9 = v5;
  v24[1] = v5;
  v26 = MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v5);
  v25 = sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
  v46[0] = MEMORY[0x24260ED10](MEMORY[0x24BDF4700], v7);
  v46[1] = MEMORY[0x24BDECC60];
  v10 = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v8, v46);
  *(_QWORD *)&v40 = v9;
  *((_QWORD *)&v40 + 1) = v27;
  *(_QWORD *)&v41 = MEMORY[0x24BDF5158];
  *((_QWORD *)&v41 + 1) = v8;
  v42 = v26;
  v43 = v25;
  v44 = MEMORY[0x24BDF5138];
  v45 = v10;
  v11 = MEMORY[0x24260ECB0](0, &v40, MEMORY[0x24BDF3588], 0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v24 - v16;
  v18 = v3[1];
  v40 = *v3;
  v41 = v18;
  v42 = *((_QWORD *)v3 + 4);
  v19 = v3[1];
  v37 = *v3;
  v38 = v19;
  v39 = *((_QWORD *)v3 + 4);
  sub_23BBEB1B4();
  swift_getKeyPath();
  sub_23BC721A4();
  swift_release();
  swift_release();
  v20 = *(_QWORD *)(a2 + 24);
  v34 = v28;
  v35 = v20;
  v36 = &v40;
  v31 = v28;
  v32 = v20;
  v33 = &v40;
  swift_checkMetadataState();
  swift_checkMetadataState();
  sub_23BC71F88();
  swift_release();
  swift_release();
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v21(v17, v15, v11);
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v15, v11);
  v21(v30, v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v22)(v17, v11);
}

uint64_t sub_23BBEB6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BC71CAC();
  v9 = sub_23BC71CB8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 48) = v11;
  *(_QWORD *)(v10 + 64) = *(_QWORD *)(a1 + 32);
  v14 = a2;
  v15 = a3;
  v16 = a1;
  sub_23BBECAE0(a1);
  return sub_23BC7203C();
}

uint64_t sub_23BBEB7C4()
{
  uint64_t *v0;

  return sub_23BBEB6B0(v0[4], v0[2], v0[3]);
}

uint64_t sub_23BBEB7D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v6 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for CreatePlanAlertView(0, a1, a2, v10);
  sub_23BBEB1B4();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v13 & 1;
  *(_QWORD *)(a3 + 24) = v14;
  return result;
}

uint64_t sub_23BBEB94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v22 = a1;
  v23 = a3;
  v24 = a4;
  sub_23BC71D6C();
  sub_23BC71D6C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A742B8);
  swift_getTupleTypeMetadata2();
  v5 = sub_23BC72108();
  MEMORY[0x24260ED10](MEMORY[0x24BDF5428], v5);
  v6 = sub_23BC720B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - v8;
  v10 = sub_23BC71D6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v21 - v15;
  sub_23BC71E08();
  v25 = a2;
  v26 = v23;
  v27 = v22;
  sub_23BC720A8();
  v17 = MEMORY[0x24260ED10](MEMORY[0x24BDF4700], v6);
  sub_23BC71FAC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v28[0] = v17;
  v28[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24260ED10](MEMORY[0x24BDED308], v10, v28);
  v18 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v18(v16, v14, v10);
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  v18(v24, v16, v10);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_23BBEBB88@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_23BBEB94C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23BBEBB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  __int128 v34;
  __int128 v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  __int128 v38;
  uint64_t v39;
  __int128 *v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  __int128 *v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t);
  _QWORD v70[2];
  char *v71;
  void (*v72)(_QWORD);
  void (*v73)(_QWORD, _QWORD, _QWORD);
  uint64_t PlanAlertView;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD v83[2];
  uint64_t v84;
  __int128 *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  __int16 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(_QWORD, _QWORD, _QWORD);
  unsigned __int8 v98;
  unsigned __int8 v99;
  _QWORD v100[2];
  _QWORD v101[2];

  v73 = (void (*)(_QWORD, _QWORD, _QWORD))a3;
  v77 = a4;
  v7 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v9);
  v70[1] = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23BC722C4();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v70[0] = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23BC71D6C();
  v79 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v70 - v17;
  v19 = sub_23BC71D6C();
  v76 = *(void (**)(char *, uint64_t))(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v80 = (char *)v70 - v23;
  v72 = *(void (**)(_QWORD))(a1 + 24);
  v24 = *(_OWORD *)(a1 + 16);
  v92 = *(_OWORD *)a1;
  v93 = v24;
  v94 = *(_QWORD *)(a1 + 32);
  PlanAlertView = type metadata accessor for CreatePlanAlertView(0, a2, a3, v25);
  sub_23BBEB1B4();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v72(v92);
  sub_23BC720F0();
  v26 = v73;
  sub_23BC71FA0();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v15, a2);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a2;
  *(_QWORD *)(v27 + 24) = v26;
  v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 48) = v28;
  *(_QWORD *)(v27 + 64) = *(_QWORD *)(a1 + 32);
  sub_23BBECAE0(a1);
  v101[0] = v26;
  v101[1] = MEMORY[0x24BDEBEE0];
  v29 = MEMORY[0x24BDED308];
  v30 = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v16, v101);
  sub_23BC71FC4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v18, v16);
  v100[0] = v30;
  v100[1] = MEMORY[0x24BDF0910];
  v31 = MEMORY[0x24260ED10](v29, v19, v100);
  v32 = v76;
  v73 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v76 + 2);
  v73(v80, v22, v19);
  v33 = (void (*)(char *, uint64_t))v32[1];
  v78 = v22;
  v79 = v19;
  v33(v22, v19);
  v34 = *(_OWORD *)(a1 + 16);
  v92 = *(_OWORD *)a1;
  v93 = v34;
  v94 = *(_QWORD *)(a1 + 32);
  sub_23BBEB1B4();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v76 = v33;
  v75 = v31;
  if (v92 == 2)
    goto LABEL_5;
  if ((v92 & 1) == 0)
    goto LABEL_5;
  v35 = *(_OWORD *)(a1 + 16);
  v92 = *(_OWORD *)a1;
  v93 = v35;
  v94 = *(_QWORD *)(a1 + 32);
  sub_23BBEB1B4();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  if (*((_QWORD *)&v92 + 1))
  {
    sub_23BC722B8();
    sub_23BC722AC();
    sub_23BC722A0();
    swift_bridgeObjectRelease();
    sub_23BC722AC();
    sub_23BC722D0();
    type metadata accessor for LocalizationBundle();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v37 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v38 = *(_OWORD *)(a1 + 16);
    v92 = *(_OWORD *)a1;
    v93 = v38;
    v94 = *(_QWORD *)(a1 + 32);
    sub_23BBEB1B4();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v39 = sub_23BC71EC8();
    v41 = v40;
    v43 = v42;
    v45 = v44 & 1;
    KeyPath = swift_getKeyPath();
    v47 = swift_getKeyPath();
    v84 = v39;
    v85 = v41;
    v86 = v45;
    v87 = v43;
    v88 = KeyPath;
    v89 = xmmword_23BC735E0;
    v90 = v47;
    v91 = 1;
  }
  else
  {
LABEL_5:
    sub_23BC72288();
    type metadata accessor for LocalizationBundle();
    v48 = swift_getObjCClassFromMetadata();
    v49 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v48);
    v50 = *(_OWORD *)(a1 + 16);
    v92 = *(_OWORD *)a1;
    v93 = v50;
    v94 = *(_QWORD *)(a1 + 32);
    sub_23BBEB1B4();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v51 = sub_23BC71EC8();
    v53 = v52;
    v55 = v54;
    v57 = v56 & 1;
    v58 = swift_getKeyPath();
    v59 = swift_getKeyPath();
    v84 = v51;
    v85 = v53;
    v86 = v57;
    v87 = v55;
    v88 = v58;
    v89 = xmmword_23BC735E0;
    v90 = v59;
    v91 = 257;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74348);
  sub_23BBECBC4();
  sub_23BC71E20();
  v60 = v92;
  v62 = v93;
  v61 = v94;
  v63 = v95;
  v64 = v96;
  v65 = v97;
  LODWORD(v72) = v98;
  LODWORD(v71) = v99;
  v66 = (uint64_t)v78;
  v73(v78, v80, v79);
  v92 = v60;
  v93 = v62;
  v94 = v61;
  v95 = v63;
  v96 = v64;
  PlanAlertView = v63;
  v97 = v65;
  v73 = v65;
  v98 = v72;
  v99 = v71;
  v84 = v66;
  v85 = &v92;
  sub_23BBECCCC(v60, *((uint64_t *)&v60 + 1), v62);
  v67 = v79;
  v83[0] = v79;
  v83[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A742B8);
  v81 = v75;
  v82 = sub_23BBECD24();
  sub_23BBEB000(&v84, 2uLL, (uint64_t)v83);
  sub_23BBECD88(v60, *((uint64_t *)&v60 + 1), v62);
  v68 = (uint64_t (*)(char *, uint64_t))v76;
  v76(v80, v67);
  sub_23BBECD88(v92, *((uint64_t *)&v92 + 1), v93);
  return v68(v78, v67);
}

uint64_t sub_23BBEC4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for CreatePlanAlertView(0, a2, a3, a4);
  sub_23BBEB1B4();
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BBEC544()
{
  return sub_23BC71D0C();
}

uint64_t View.createPlanAlert<A>(store:createPlanAlertViewBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t PlanAlertView;
  _QWORD v20[2];
  char v21;
  uint64_t v22;
  uint64_t v23;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  swift_retain();
  swift_retain();
  v20[0] = sub_23BBEB2B0;
  v20[1] = v16;
  v21 = 0;
  v22 = a3;
  v23 = a4;
  PlanAlertView = type metadata accessor for CreatePlanAlertView(0, a6, a8, v17);
  MEMORY[0x24260E1F4](v20, a5, PlanAlertView, a7);
  sub_23BBE7EAC();
  return swift_release();
}

uint64_t type metadata accessor for CreatePlanAlertView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CreatePlanAlertView);
}

uint64_t sub_23BBEC658()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BBEC68C()
{
  sub_23BBE7EAC();
  return swift_release();
}

uint64_t sub_23BBEC6BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_23BBEC71C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23BBE7EAC();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_23BBEC7A8(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23BBE7EAC();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_23BBEC7FC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23BBEC844(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23BBEC88C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t PlanAlertView;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  PlanAlertView = type metadata accessor for CreatePlanAlertView(255, *a1, a1[1], a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanAlertView<A>, PlanAlertView);
  v5 = sub_23BC71E38();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A742B0);
  sub_23BC71D6C();
  sub_23BC71D6C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A742B8);
  swift_getTupleTypeMetadata2();
  v6 = sub_23BC72108();
  MEMORY[0x24260ED10](MEMORY[0x24BDF5428], v6);
  v7 = sub_23BC720B4();
  v8 = sub_23BC71D6C();
  MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v5);
  sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
  v10[0] = MEMORY[0x24260ED10](MEMORY[0x24BDF4700], v7);
  v10[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24260ED10](MEMORY[0x24BDED308], v8, v10);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BBECA38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t PlanAlertView;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  PlanAlertView = type metadata accessor for CreatePlanAlertView(255, a1[1], a1[3], a4);
  v6 = sub_23BC71D6C();
  v8[0] = v4;
  v8[1] = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanAlertView<A>, PlanAlertView);
  return MEMORY[0x24260ED10](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_23BBECAB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23BBEBB94(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23BBECAC0()
{
  uint64_t v0;

  return sub_23BBEC4E0(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0);
}

uint64_t sub_23BBECAE0(uint64_t a1)
{
  sub_23BBE7EBC();
  swift_retain();
  return a1;
}

uint64_t sub_23BBECB1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23BC71DF0();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23BBECB4C()
{
  return sub_23BC71DFC();
}

uint64_t sub_23BBECB78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71D90();
  *a1 = result;
  return result;
}

uint64_t sub_23BBECBA0()
{
  return sub_23BC71D9C();
}

unint64_t sub_23BBECBC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A74350;
  if (!qword_256A74350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A74348);
    v2[0] = sub_23BBECC48();
    v2[1] = sub_23BBE869C(&qword_256A74378, &qword_256A74380, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A74350);
  }
  return result;
}

unint64_t sub_23BBECC48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256A74358;
  if (!qword_256A74358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A74360);
    v2 = sub_23BBE869C(&qword_256A74368, &qword_256A74370, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A74358);
  }
  return result;
}

uint64_t sub_23BBECCCC(uint64_t a1, uint64_t a2, char a3)
{
  sub_23BBECD14(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_23BBECD14(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

unint64_t sub_23BBECD24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A74388;
  if (!qword_256A74388)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A742B8);
    v2[0] = sub_23BBECBC4();
    v2[1] = v2[0];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A74388);
  }
  return result;
}

uint64_t sub_23BBECD88(uint64_t a1, uint64_t a2, char a3)
{
  sub_23BBECDD0(a1, a2, a3 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BBECDD0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t objectdestroy_6Tm()
{
  sub_23BBE7EAC();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BBECE14()
{
  uint64_t v0;

  return sub_23BBEC4E0(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_23BBECE34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BBEB7D0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t static DownloadStatus.== infix(_:_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  BOOL v4;
  unsigned int v5;
  int v6;

  v2 = a2 & 0xFFFFFFFFFFLL;
  if ((a1 & 0x10000000000) != 0)
  {
    v4 = v2 == 0;
    v5 = (a2 >> 40) & (v2 == 0);
    v6 = !v4;
    if ((a1 & 0xFFFFFFFFFFLL) != 0)
      return (a2 >> 40) & v6;
    else
      return v5;
  }
  else
  {
    if ((a2 & 0x10000000000) != 0)
      return 0;
    if ((a1 & 0x100000000) != 0)
      return (a2 & 0x100000000) != 0;
    else
      return (a2 & 0x100000000) == 0 && *(float *)&a1 == *(float *)&a2;
  }
}

uint64_t DownloadStatus.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = a2 & 0xFFFFFFFFFFLL;
  if ((a2 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v2 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

uint64_t sub_23BBECF28(char a1)
{
  return *(_QWORD *)&aNodownlodownlo[8 * a1];
}

uint64_t sub_23BBECF50()
{
  char *v0;

  return sub_23BBECF28(*v0);
}

uint64_t sub_23BBECF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBF0508(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BBECF7C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23BBECF88()
{
  sub_23BBED354();
  return sub_23BC72828();
}

uint64_t sub_23BBECFB0()
{
  sub_23BBED354();
  return sub_23BC72834();
}

uint64_t sub_23BBECFD8()
{
  sub_23BBED398();
  return sub_23BC72828();
}

uint64_t sub_23BBED000()
{
  sub_23BBED398();
  return sub_23BC72834();
}

uint64_t sub_23BBED030()
{
  sub_23BBED3DC();
  return sub_23BC72828();
}

uint64_t sub_23BBED058()
{
  sub_23BBED3DC();
  return sub_23BC72834();
}

uint64_t sub_23BBED080()
{
  sub_23BBED420();
  return sub_23BC72828();
}

uint64_t sub_23BBED0A8()
{
  sub_23BBED420();
  return sub_23BC72834();
}

uint64_t DownloadStatus.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v27 = a2 & 0xFFFFFFFFFFLL;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743A0);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743A8);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743B0);
  v20 = *(_QWORD *)(v9 - 8);
  v21 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743B8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BBED354();
  sub_23BC7281C();
  if ((a2 & 0x10000000000) != 0)
  {
    if (v27)
    {
      v30 = 2;
      sub_23BBED398();
      v17 = v22;
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
    }
    else
    {
      v28 = 0;
      sub_23BBED420();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v21);
    }
  }
  else
  {
    v29 = 1;
    sub_23BBED3DC();
    sub_23BC726A8();
    v16 = v26;
    sub_23BC726CC();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_23BBED354()
{
  unint64_t result;

  result = qword_256A743C0;
  if (!qword_256A743C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC742E0, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A743C0);
  }
  return result;
}

unint64_t sub_23BBED398()
{
  unint64_t result;

  result = qword_256A743C8;
  if (!qword_256A743C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74290, &type metadata for DownloadStatus.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A743C8);
  }
  return result;
}

unint64_t sub_23BBED3DC()
{
  unint64_t result;

  result = qword_256A743D0;
  if (!qword_256A743D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74240, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A743D0);
  }
  return result;
}

unint64_t sub_23BBED420()
{
  unint64_t result;

  result = qword_256A743D8;
  if (!qword_256A743D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC741F0, &type metadata for DownloadStatus.NoDownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A743D8);
  }
  return result;
}

uint64_t DownloadStatus.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  DownloadStatus.hash(into:)((uint64_t)v3, a1 & 0xFFFFFFFFFFLL | (((a1 >> 40) & 1) << 40));
  return sub_23BC727E0();
}

uint64_t DownloadStatus.init(from:)(_QWORD *a1)
{
  unint64_t v1;

  v1 = sub_23BBF0658(a1);
  return v1 & 0xFFFFFFFFFFLL | (((v1 >> 40) & 1) << 40);
}

unint64_t sub_23BBED4E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_23BBF0658(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_BYTE *)(a2 + 4) = BYTE4(result);
    *(_BYTE *)(a2 + 5) = BYTE5(result) & 1;
  }
  return result;
}

uint64_t sub_23BBED518(_QWORD *a1)
{
  unsigned int *v1;

  return DownloadStatus.encode(to:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40));
}

uint64_t sub_23BBED550()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
  v2 = *((_BYTE *)v0 + 5);
  sub_23BC727A4();
  DownloadStatus.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 40));
  return sub_23BC727E0();
}

uint64_t sub_23BBED5A8(uint64_t a1)
{
  unsigned int *v1;

  return DownloadStatus.hash(into:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40));
}

uint64_t sub_23BBED5D0()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
  v2 = *((_BYTE *)v0 + 5);
  sub_23BC727A4();
  DownloadStatus.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 40));
  return sub_23BC727E0();
}

uint64_t sub_23BBED624(unsigned int *a1, unsigned int *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  v3 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
  if (*((_BYTE *)a1 + 5) != 1)
  {
    if ((*((_BYTE *)a2 + 5) & 1) != 0)
      return 0;
    if ((v2 & 0x100000000) != 0)
    {
      if ((v3 & 0x100000000) == 0)
        return 0;
    }
    else if ((v3 & 0x100000000) != 0 || *(float *)a1 != *(float *)a2)
    {
      return 0;
    }
    return 1;
  }
  if ((v2 & 0xFFFFFFFFFFLL) != 0)
  {
    if ((v3 & 0xFFFFFFFFFFLL) != 0)
      return *((unsigned __int8 *)a2 + 5);
    else
      return 0;
  }
  else if ((v3 & 0xFFFFFFFFFFLL) != 0)
  {
    return 0;
  }
  else
  {
    return *((unsigned __int8 *)a2 + 5);
  }
}

uint64_t DownloadLoadState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x1000000000000) != 0)
    return sub_23BC727B0();
  v3 = a2 & 0xFFFFFFFFFFLL;
  sub_23BC727B0();
  if ((v2 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v3 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

uint64_t static DownloadLoadState.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return sub_23BBF0470(a1 & 0xFFFFFFFFFFFFLL | ((HIWORD(a1) & 1) << 48), a2 & 0xFFFFFFFFFFFFLL | ((HIWORD(a2) & 1) << 48));
}

uint64_t sub_23BBED75C(char a1)
{
  return *(_QWORD *)&aIdle_5[8 * a1];
}

uint64_t sub_23BBED77C()
{
  char *v0;

  return sub_23BBED75C(*v0);
}

uint64_t sub_23BBED784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBF0BE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BBED7A8()
{
  sub_23BBF0AD0();
  return sub_23BC72828();
}

uint64_t sub_23BBED7D0()
{
  sub_23BBF0AD0();
  return sub_23BC72834();
}

uint64_t sub_23BBED7F8()
{
  sub_23BBF0B14();
  return sub_23BC72828();
}

uint64_t sub_23BBED820()
{
  sub_23BBF0B14();
  return sub_23BC72834();
}

uint64_t sub_23BBED848()
{
  sub_23BBF0B58();
  return sub_23BC72828();
}

uint64_t sub_23BBED870()
{
  sub_23BBF0B58();
  return sub_23BC72834();
}

uint64_t sub_23BBED898()
{
  sub_23BBF0B9C();
  return sub_23BC72828();
}

uint64_t sub_23BBED8C0()
{
  sub_23BBF0B9C();
  return sub_23BC72834();
}

uint64_t DownloadLoadState.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v26 = a2 & 0xFFFFFFFFFFFFLL;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743E0);
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743E8);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743F0);
  v19 = *(_QWORD *)(v9 - 8);
  v20 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A743F8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BBF0AD0();
  sub_23BC7281C();
  if ((a2 & 0x1000000000000) != 0)
  {
    if (v26)
    {
      v31 = 1;
      sub_23BBF0B58();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      v27 = 0;
      sub_23BBF0B9C();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
    }
  }
  else
  {
    v32 = 2;
    sub_23BBF0B14();
    v16 = v23;
    sub_23BC726A8();
    v29 = BYTE4(a2);
    v28 = a2;
    v30 = BYTE5(v26) & 1;
    sub_23BBE9758();
    v17 = v25;
    sub_23BC72720();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DownloadLoadState.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  DownloadLoadState.hash(into:)((uint64_t)v3, a1 & 0xFFFFFFFFFFFFLL | ((HIWORD(a1) & 1) << 48));
  return sub_23BC727E0();
}

uint64_t DownloadLoadState.init(from:)(_QWORD *a1)
{
  unint64_t v1;

  v1 = sub_23BBF0D14(a1);
  return v1 & 0xFFFFFFFFFFFFLL | ((HIWORD(v1) & 1) << 48);
}

unint64_t sub_23BBEDC08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_23BBF0D14(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_WORD *)(a2 + 4) = WORD2(result);
    *(_BYTE *)(a2 + 6) = BYTE6(result) & 1;
  }
  return result;
}

uint64_t sub_23BBEDC40(_QWORD *a1)
{
  unsigned int *v1;

  return DownloadLoadState.encode(to:)(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48));
}

uint64_t sub_23BBEDC78()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  v2 = *((_BYTE *)v0 + 6);
  sub_23BC727A4();
  DownloadLoadState.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 48));
  return sub_23BC727E0();
}

uint64_t sub_23BBEDCD0(uint64_t a1)
{
  unsigned int *v1;

  return DownloadLoadState.hash(into:)(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48));
}

uint64_t sub_23BBEDCF8()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  v2 = *((_BYTE *)v0 + 6);
  sub_23BC727A4();
  DownloadLoadState.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 48));
  return sub_23BC727E0();
}

uint64_t sub_23BBEDD4C(unsigned int *a1, unsigned int *a2)
{
  return sub_23BBF0470(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48));
}

unint64_t DownloadButtonState.downloadState.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned int *)(v1 + *(int *)(a1 + 48)) | ((unint64_t)*(unsigned __int16 *)(v1 + *(int *)(a1 + 48) + 4) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 48) + 6) << 48);
}

uint64_t DownloadButtonState.downloadState.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + *(int *)(a2 + 48);
  *(_WORD *)(v3 + 4) = WORD2(result);
  *(_DWORD *)v3 = result;
  *(_BYTE *)(v3 + 6) = BYTE6(result) & 1;
  return result;
}

uint64_t (*DownloadButtonState.downloadState.modify())()
{
  return nullsub_1;
}

uint64_t DownloadButtonState.removeConfirmation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BBE817C(v2 + *(int *)(a1 + 56), a2, &qword_256A74420);
}

uint64_t DownloadButtonState.removeConfirmation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BBF117C(a1, v2 + *(int *)(a2 + 56));
}

uint64_t (*DownloadButtonState.removeConfirmation.modify())()
{
  return nullsub_1;
}

uint64_t DownloadButtonState.init(identifier:locale:isSubscribed:shouldShowProgress:downloadState:bookmarkState:presentationContextKey:removeConfirmation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(a8, a1, a9);
  v18 = (int *)type metadata accessor for DownloadButtonState(0, a9, a10, v17);
  v19 = a8 + v18[9];
  v20 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  *(_BYTE *)(a8 + v18[10]) = a3;
  *(_BYTE *)(a8 + v18[11]) = a4;
  v21 = a8 + v18[12];
  *(_WORD *)(v21 + 4) = WORD2(a5);
  *(_DWORD *)v21 = a5;
  *(_BYTE *)(v21 + 6) = BYTE6(a5) & 1;
  v22 = a8 + v18[13];
  v23 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a6, v23);
  return sub_23BBE87F8(a7, a8 + v18[14], &qword_256A74420);
}

uint64_t DownloadButtonState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_23BC71C34();
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v23 = (uint64_t)&v21 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC72264();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  sub_23BC727BC();
  sub_23BC727BC();
  v15 = (unsigned int *)(v2 + *(int *)(a2 + 48));
  v16 = *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 2) << 32);
  if (*((_BYTE *)v15 + 6) == 1 || (sub_23BC727B0(), (v16 & 0x10000000000) != 0))
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BC727B0();
    sub_23BC727BC();
    if ((v16 & 0x100000000) == 0)
      sub_23BC727C8();
  }
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  sub_23BBE817C(v2 + *(int *)(a2 + 56), (uint64_t)v14, &qword_256A74420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
    return sub_23BC727B0();
  v18 = v23;
  sub_23BBE87F8((uint64_t)v14, v23, &qword_256A74428);
  sub_23BC727B0();
  sub_23BBE817C(v18, (uint64_t)v10, &qword_256A74428);
  v19 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v10, 1, v4) == 1)
  {
    sub_23BC727BC();
  }
  else
  {
    v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v10, v4);
    sub_23BC727BC();
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v4);
  }
  return sub_23BBE81C0(v18, &qword_256A74428);
}

uint64_t static DownloadButtonState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int *v9;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  char v18;

  if ((sub_23BC7227C() & 1) == 0)
    return 0;
  v9 = (int *)type metadata accessor for DownloadButtonState(0, a3, a4, v8);
  if ((MEMORY[0x24260DE7C](a1 + v9[9], a2 + v9[9]) & 1) == 0
    || *(unsigned __int8 *)(a1 + v9[10]) != *(unsigned __int8 *)(a2 + v9[10])
    || *(unsigned __int8 *)(a1 + v9[11]) != *(unsigned __int8 *)(a2 + v9[11]))
  {
    return 0;
  }
  v11 = v9[12];
  v12 = *(unsigned int *)(a1 + v11) | ((unint64_t)*(unsigned __int16 *)(a1 + v11 + 4) << 32);
  v13 = *(unsigned __int8 *)(a1 + v11 + 6);
  v14 = a2 + v11;
  v15 = *(unsigned int *)(a2 + v11) | ((unint64_t)*(unsigned __int16 *)(a2 + v11 + 4) << 32);
  v16 = *(_BYTE *)(v14 + 6);
  if (v13 == 1)
  {
    if ((v12 & 0xFFFFFFFFFFFFLL) != 0)
    {
      if ((v15 & 0xFFFFFFFFFFFFLL) != 0)
        v17 = v16;
      else
        v17 = 0;
      if ((v17 & 1) == 0)
        return 0;
    }
    else
    {
      if ((v15 & 0xFFFFFFFFFFFFLL) != 0)
        v18 = 0;
      else
        v18 = v16;
      if ((v18 & 1) == 0)
        return 0;
    }
    goto LABEL_33;
  }
  if ((v16 & 1) != 0)
    return 0;
  if ((v12 & 0x10000000000) != 0)
  {
    if ((v12 & 0xFFFFFFFFFFLL) != 0)
    {
      if ((v15 & 0x10000000000) == 0 || (v15 & 0xFFFFFFFFFFLL) == 0)
        return 0;
    }
    else if ((v15 & 0x10000000000) == 0 || (v15 & 0xFFFFFFFFFFLL) != 0)
    {
      return 0;
    }
    goto LABEL_33;
  }
  if ((v15 & 0x10000000000) != 0)
    return 0;
  if ((v12 & 0x100000000) != 0)
  {
    if ((v15 & 0x100000000) != 0)
      goto LABEL_33;
    return 0;
  }
  if ((v15 & 0x100000000) != 0 || *(float *)&v12 != *(float *)&v15)
    return 0;
LABEL_33:
  if ((sub_23BC71C1C() & 1) == 0)
    return 0;
  return sub_23BBEE428(a1 + v9[14], a2 + v9[14]);
}

uint64_t sub_23BBEE428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  unsigned int v21;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = sub_23BC71C34();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v35 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74698);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v35 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746A0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_23BBE817C(a1, (uint64_t)v18, &qword_256A74420);
  sub_23BBE817C(a2, v19, &qword_256A74420);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v20((uint64_t)v18, 1, v7) != 1)
  {
    sub_23BBE817C((uint64_t)v18, (uint64_t)v14, &qword_256A74420);
    if (v20(v19, 1, v7) == 1)
    {
      sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
      v23 = 0;
      v22 = &qword_256A746A0;
      goto LABEL_20;
    }
    v24 = v37;
    sub_23BBE87F8(v19, v37, &qword_256A74428);
    v25 = v39;
    v26 = v39 + *(int *)(v5 + 48);
    sub_23BBE817C((uint64_t)v14, v39, &qword_256A74428);
    sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
    sub_23BBE817C(v24, v26, &qword_256A74428);
    v27 = v38;
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    v29 = v40;
    if (v28(v25, 1, v40) == 1)
    {
      sub_23BBE81C0(v24, &qword_256A74428);
      if (v28(v26, 1, v29) == 1)
      {
        sub_23BBE81C0(v25, &qword_256A74428);
LABEL_17:
        v23 = 1;
LABEL_19:
        v22 = &qword_256A74420;
        goto LABEL_20;
      }
    }
    else
    {
      v30 = v36;
      sub_23BBE817C(v25, v36, &qword_256A74428);
      if (v28(v26, 1, v29) != 1)
      {
        v31 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v35, v26, v29);
        sub_23BBF377C((unint64_t *)&qword_256A746A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v32 = sub_23BC7227C();
        v33 = *(void (**)(char *, uint64_t))(v27 + 8);
        v33(v31, v29);
        sub_23BBE81C0(v24, &qword_256A74428);
        v33((char *)v30, v29);
        sub_23BBE81C0(v25, &qword_256A74428);
        if ((v32 & 1) != 0)
          goto LABEL_17;
LABEL_18:
        v23 = 0;
        goto LABEL_19;
      }
      sub_23BBE81C0(v24, &qword_256A74428);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v29);
    }
    sub_23BBE81C0(v25, &qword_256A74698);
    goto LABEL_18;
  }
  v21 = v20(v19, 1, v7);
  if (v21 == 1)
    v22 = &qword_256A74420;
  else
    v22 = &qword_256A746A0;
  if (v21 == 1)
    v23 = -1;
  else
    v23 = 0;
LABEL_20:
  sub_23BBE81C0((uint64_t)v18, v22);
  return v23 & 1;
}

uint64_t sub_23BBEE840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  unsigned int v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v44 = a1;
  v45 = (char *)a2;
  v2 = type metadata accessor for ResumeWorkoutConfirmation(0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v41 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74678);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74690);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_23BBE817C(v44, (uint64_t)v20, &qword_256A74688);
  sub_23BBE817C((uint64_t)v45, v21, &qword_256A74688);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v22((uint64_t)v20, 1, v7) != 1)
  {
    v26 = (uint64_t)v13;
    v45 = v11;
    v27 = v43;
    sub_23BBE817C((uint64_t)v20, (uint64_t)v16, &qword_256A74688);
    if (v22(v21, 1, v7) == 1)
    {
      sub_23BBE81C0((uint64_t)v16, &qword_256A74680);
      v25 = 0;
      v24 = &qword_256A74690;
      goto LABEL_26;
    }
    v28 = v26;
    sub_23BBE87F8(v21, v26, &qword_256A74680);
    v29 = (uint64_t)v6;
    v30 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_23BBE817C((uint64_t)v16, (uint64_t)v6, &qword_256A74680);
    sub_23BBE81C0((uint64_t)v16, &qword_256A74680);
    sub_23BBE817C(v28, v30, &qword_256A74680);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
    if (v31((uint64_t)v6, 1, v27) == 1)
    {
      sub_23BBE81C0(v28, &qword_256A74680);
      if (v31(v30, 1, v27) == 1)
      {
        sub_23BBE81C0((uint64_t)v6, &qword_256A74680);
LABEL_13:
        v25 = 1;
LABEL_25:
        v24 = &qword_256A74688;
        goto LABEL_26;
      }
      v34 = &qword_256A74678;
    }
    else
    {
      v32 = (uint64_t)v6;
      v33 = (uint64_t)v45;
      sub_23BBE817C(v32, (uint64_t)v45, &qword_256A74680);
      if (v31(v30, 1, v27) == 1)
      {
        v34 = &qword_256A74678;
      }
      else
      {
        v35 = v41;
        sub_23BBF3738(v30, v41, type metadata accessor for ResumeWorkoutConfirmation);
        if ((sub_23BC71C1C() & 1) != 0
          && *(_QWORD *)(v33 + *(int *)(v27 + 20)) == *(_QWORD *)(v35 + *(int *)(v27 + 20)))
        {
          v36 = *(int *)(v27 + 24);
          v37 = *(double *)(v33 + v36);
          v38 = *(double *)(v35 + v36);
          sub_23BBF36FC(v35, type metadata accessor for ResumeWorkoutConfirmation);
          sub_23BBE81C0(v28, &qword_256A74680);
          sub_23BBF36FC(v33, type metadata accessor for ResumeWorkoutConfirmation);
          sub_23BBE81C0(v29, &qword_256A74680);
          if (v37 == v38)
            goto LABEL_13;
LABEL_24:
          v25 = 0;
          goto LABEL_25;
        }
        sub_23BBF36FC(v35, type metadata accessor for ResumeWorkoutConfirmation);
        v34 = &qword_256A74680;
      }
      sub_23BBE81C0(v28, &qword_256A74680);
      sub_23BBF36FC(v33, type metadata accessor for ResumeWorkoutConfirmation);
    }
    sub_23BBE81C0(v29, v34);
    goto LABEL_24;
  }
  v23 = v22(v21, 1, v7);
  if (v23 == 1)
    v24 = &qword_256A74688;
  else
    v24 = &qword_256A74690;
  if (v23 == 1)
    v25 = -1;
  else
    v25 = 0;
LABEL_26:
  sub_23BBE81C0((uint64_t)v20, v24);
  return v25 & 1;
}

uint64_t sub_23BBEEC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  unsigned int v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  unsigned int (*v29)(uint64_t, uint64_t, int *);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;

  v4 = type metadata accessor for PlannedWorkoutConfirmation(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = (int *)v4;
  MEMORY[0x24BDAC7A8](v4);
  v38 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74658);
  MEMORY[0x24BDAC7A8](v6);
  v43 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v39 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v38 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74670);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_23BBE817C(a1, (uint64_t)v19, &qword_256A74668);
  sub_23BBE817C(a2, v20, &qword_256A74668);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v21((uint64_t)v19, 1, v8) != 1)
  {
    sub_23BBE817C((uint64_t)v19, (uint64_t)v15, &qword_256A74668);
    if (v21(v20, 1, v8) == 1)
    {
      sub_23BBE81C0((uint64_t)v15, &qword_256A74660);
      v24 = 0;
      v23 = &qword_256A74670;
      goto LABEL_27;
    }
    v25 = v42;
    sub_23BBE87F8(v20, v42, &qword_256A74660);
    v26 = v43;
    v27 = v43 + *(int *)(v6 + 48);
    sub_23BBE817C((uint64_t)v15, v43, &qword_256A74660);
    sub_23BBE81C0((uint64_t)v15, &qword_256A74660);
    sub_23BBE817C(v25, v27, &qword_256A74660);
    v28 = v41;
    v29 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v40 + 48);
    if (v29(v26, 1, v41) == 1)
    {
      sub_23BBE81C0(v25, &qword_256A74660);
      if (v29(v27, 1, v28) == 1)
      {
LABEL_12:
        sub_23BBE81C0(v26, &qword_256A74660);
        v24 = 1;
LABEL_26:
        v23 = &qword_256A74668;
        goto LABEL_27;
      }
      v31 = &qword_256A74658;
    }
    else
    {
      v30 = v39;
      sub_23BBE817C(v26, v39, &qword_256A74660);
      if (v29(v27, 1, v28) == 1)
      {
        v31 = &qword_256A74658;
      }
      else
      {
        v32 = v38;
        sub_23BBF3738(v27, v38, type metadata accessor for PlannedWorkoutConfirmation);
        if ((sub_23BC71C1C() & 1) != 0
          && *(_QWORD *)(v30 + v28[5]) == *(_QWORD *)(v32 + v28[5])
          && *(double *)(v30 + v28[6]) == *(double *)(v32 + v28[6]))
        {
          if ((v33 = v28[7],
                v34 = *(_QWORD *)(v30 + v33),
                v35 = *(_QWORD *)(v30 + v33 + 8),
                v36 = (_QWORD *)(v32 + v33),
                v34 == *v36)
            && v35 == v36[1]
            || (sub_23BC72744() & 1) != 0)
          {
            sub_23BBF36FC(v32, type metadata accessor for PlannedWorkoutConfirmation);
            sub_23BBE81C0(v25, &qword_256A74660);
            sub_23BBF36FC(v30, type metadata accessor for PlannedWorkoutConfirmation);
            goto LABEL_12;
          }
        }
        sub_23BBF36FC(v32, type metadata accessor for PlannedWorkoutConfirmation);
        v31 = &qword_256A74660;
      }
      sub_23BBE81C0(v25, &qword_256A74660);
      sub_23BBF36FC(v30, type metadata accessor for PlannedWorkoutConfirmation);
    }
    sub_23BBE81C0(v26, v31);
    v24 = 0;
    goto LABEL_26;
  }
  v22 = v21(v20, 1, v8);
  if (v22 == 1)
    v23 = &qword_256A74668;
  else
    v23 = &qword_256A74670;
  if (v22 == 1)
    v24 = -1;
  else
    v24 = 0;
LABEL_27:
  sub_23BBE81C0((uint64_t)v19, v23);
  return v24 & 1;
}

uint64_t sub_23BBEF0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  unsigned int v21;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = type metadata accessor for FutureWorkoutConfirmation(0);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v34 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74638);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v34 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74650);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_23BBE817C(a1, (uint64_t)v18, &qword_256A74648);
  sub_23BBE817C(a2, v19, &qword_256A74648);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v20((uint64_t)v18, 1, v7) != 1)
  {
    sub_23BBE817C((uint64_t)v18, (uint64_t)v14, &qword_256A74648);
    if (v20(v19, 1, v7) == 1)
    {
      sub_23BBE81C0((uint64_t)v14, &qword_256A74640);
      v23 = 0;
      v22 = &qword_256A74650;
      goto LABEL_27;
    }
    v24 = v37;
    sub_23BBE87F8(v19, v37, &qword_256A74640);
    v25 = v39;
    v26 = v39 + *(int *)(v5 + 48);
    sub_23BBE817C((uint64_t)v14, v39, &qword_256A74640);
    sub_23BBE81C0((uint64_t)v14, &qword_256A74640);
    sub_23BBE817C(v24, v26, &qword_256A74640);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    v28 = v38;
    if (v27(v25, 1, v38) == 1)
    {
      sub_23BBE81C0(v24, &qword_256A74640);
      if (v27(v26, 1, v28) == 1)
      {
        sub_23BBE81C0(v25, &qword_256A74640);
LABEL_13:
        v23 = 1;
LABEL_26:
        v22 = &qword_256A74648;
        goto LABEL_27;
      }
      v30 = &qword_256A74638;
    }
    else
    {
      v29 = v35;
      sub_23BBE817C(v25, v35, &qword_256A74640);
      if (v27(v26, 1, v28) == 1)
      {
        v30 = &qword_256A74638;
      }
      else
      {
        v31 = v34;
        sub_23BBF3738(v26, v34, type metadata accessor for FutureWorkoutConfirmation);
        if ((sub_23BC71C1C() & 1) != 0
          && *(_QWORD *)(v29 + *(int *)(v28 + 20)) == *(_QWORD *)(v31 + *(int *)(v28 + 20))
          && *(double *)(v29 + *(int *)(v28 + 24)) == *(double *)(v31 + *(int *)(v28 + 24)))
        {
          v32 = sub_23BC71BEC();
          sub_23BBF36FC(v31, type metadata accessor for FutureWorkoutConfirmation);
          sub_23BBE81C0(v24, &qword_256A74640);
          sub_23BBF36FC(v29, type metadata accessor for FutureWorkoutConfirmation);
          sub_23BBE81C0(v25, &qword_256A74640);
          if ((v32 & 1) != 0)
            goto LABEL_13;
LABEL_25:
          v23 = 0;
          goto LABEL_26;
        }
        sub_23BBF36FC(v31, type metadata accessor for FutureWorkoutConfirmation);
        v30 = &qword_256A74640;
      }
      sub_23BBE81C0(v24, &qword_256A74640);
      sub_23BBF36FC(v29, type metadata accessor for FutureWorkoutConfirmation);
    }
    sub_23BBE81C0(v25, v30);
    goto LABEL_25;
  }
  v21 = v20(v19, 1, v7);
  if (v21 == 1)
    v22 = &qword_256A74648;
  else
    v22 = &qword_256A74650;
  if (v21 == 1)
    v23 = -1;
  else
    v23 = 0;
LABEL_27:
  sub_23BBE81C0((uint64_t)v18, v22);
  return v23 & 1;
}

BOOL sub_23BBEF534(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23BBEF544()
{
  return sub_23BC727B0();
}

uint64_t sub_23BBEF568(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC81CE0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xED00006574617453 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC81D20)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23BBEF83C()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BBEF880(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BBEF8B8 + 4 * byte_23BC73780[a1]))(0xD000000000000012, 0x800000023BC81CE0);
}

uint64_t sub_23BBEF8B8()
{
  return 0x696669746E656469;
}

uint64_t sub_23BBEF8D4()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BBEF8E8()
{
  return 0x7263736275537369;
}

uint64_t sub_23BBEF908()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_23BBEF92C(uint64_t a1)
{
  return a1 + 4;
}

BOOL sub_23BBEF950(char *a1, char *a2)
{
  return sub_23BBEF534(*a1, *a2);
}

uint64_t sub_23BBEF964()
{
  return sub_23BBEF83C();
}

uint64_t sub_23BBEF970()
{
  return sub_23BBEF544();
}

uint64_t sub_23BBEF97C()
{
  sub_23BC727A4();
  sub_23BBEF544();
  return sub_23BC727E0();
}

uint64_t sub_23BBEF9C0()
{
  unsigned __int8 *v0;

  return sub_23BBEF880(*v0);
}

uint64_t sub_23BBEF9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBEF568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BBEF9F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BBF36F4();
  *a1 = result;
  return result;
}

uint64_t sub_23BBEFA20(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC74060, a1);
  return sub_23BC72828();
}

uint64_t sub_23BBEFA54(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC74060, a1);
  return sub_23BC72834();
}

uint64_t DownloadButtonState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v21 = a2;
  v22 = v5;
  v7 = type metadata accessor for DownloadButtonState.CodingKeys(255, v5, v6, a4);
  MEMORY[0x24260ED10](&unk_23BC74060, v7);
  v8 = sub_23BC7272C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v34 = 0;
  v12 = v23;
  v13 = v24;
  sub_23BC72720();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15 = v9;
  v16 = v21;
  v33 = 1;
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
  sub_23BC72720();
  v32 = 2;
  sub_23BC726F0();
  v31 = 3;
  sub_23BC726F0();
  v17 = (int *)(v12 + *(int *)(v16 + 48));
  v18 = *v17;
  v19 = *((_WORD *)v17 + 2);
  LOBYTE(v17) = *((_BYTE *)v17 + 6);
  v26 = v19;
  v25 = v18;
  v27 = (char)v17;
  v30 = 4;
  sub_23BBF11DC();
  sub_23BC72720();
  v29 = 5;
  sub_23BC71C34();
  sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23BC72720();
  v28 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  sub_23BBF1264(&qword_256A74458, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  sub_23BC72720();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v8);
}

uint64_t DownloadButtonState.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  DownloadButtonState.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t DownloadButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  char v33;
  char *v34;
  char *v35;
  uint64_t v36;
  int *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  __int16 v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v44 = a4;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v45);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BC71C34();
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BC71C4C();
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v50 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DownloadButtonState.CodingKeys(255, a2, a3, v14);
  MEMORY[0x24260ED10](&unk_23BC74060, v15);
  v58 = sub_23BC7269C();
  v54 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v17 = (char *)&v41 - v16;
  v56 = a2;
  v53 = a3;
  v19 = type metadata accessor for DownloadButtonState(0, a2, a3, v18);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v41 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v59 = v17;
  v23 = v60;
  sub_23BC72810();
  if (v23)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v50;
  v25 = v51;
  v42 = v20;
  v43 = (int *)v19;
  v60 = v22;
  v27 = v55;
  v26 = v56;
  v28 = v52;
  v70 = 0;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v60, v57, v26);
  v69 = 1;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v29 = v24;
  sub_23BC72684();
  v30 = v60;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v60[v43[9]], v29, v28);
  v68 = 2;
  v30[v43[10]] = sub_23BC72654() & 1;
  v67 = 3;
  v30[v43[11]] = sub_23BC72654() & 1;
  v66 = 4;
  sub_23BBF1220();
  sub_23BC72684();
  v31 = v49;
  v32 = v61;
  v33 = v63;
  v34 = &v30[v43[12]];
  *((_WORD *)v34 + 2) = v62;
  *(_DWORD *)v34 = v32;
  v34[6] = v33;
  v65 = 5;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v35 = v47;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v60[v43[13]], v35, v31);
  v64 = 6;
  sub_23BBF1264(&qword_256A74478, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v36 = (uint64_t)v46;
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v59, v58);
  v37 = v43;
  v38 = v60;
  sub_23BBE87F8(v36, (uint64_t)&v60[v43[14]], &qword_256A74420);
  v39 = v42;
  (*(void (**)(uint64_t, char *, int *))(v42 + 16))(v44, v38, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, int *))(v39 + 8))(v38, v37);
}

uint64_t sub_23BBF03EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DownloadButtonState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BBF0408(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DownloadButtonState.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_23BBF0424(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  DownloadButtonState.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BBF0464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DownloadButtonState.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_23BBF0470(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  unsigned int v5;
  __int16 v6;

  v2 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a1 & 0x1000000000000) == 0)
  {
    if ((a2 & 0x1000000000000) == 0)
    {
      v3 = a2 & 0xFFFFFFFFFFLL;
      if ((a1 & 0x10000000000) != 0)
      {
        if ((a1 & 0xFFFFFFFFFFLL) != 0)
        {
          if ((a2 & 0x10000000000) != 0)
            return v3 != 0;
        }
        else if ((a2 & 0x10000000000) != 0)
        {
          return v3 == 0;
        }
        return 0;
      }
      if ((a2 & 0x10000000000) == 0)
      {
        if ((a1 & 0x100000000) == 0)
          return (a2 & 0x100000000) == 0 && *(float *)&a1 == *(float *)&a2;
        if ((a2 & 0x100000000) != 0)
          return 1;
      }
    }
    return 0;
  }
  v4 = v2 == 0;
  v5 = HIWORD(a2) & (v2 == 0);
  v6 = !v4;
  if ((a1 & 0xFFFFFFFFFFFFLL) != 0)
    return (unsigned __int16)(HIWORD(a2) & v6);
  else
    return v5;
}

uint64_t sub_23BBF0508(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6F6C6E776F446F6ELL && a2 == 0xEA00000000006461;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEB00000000676E69 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23BBF0658(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;

  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746D0);
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746D8);
  v4 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v35 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746E8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23BBED354();
  v15 = v40;
  sub_23BC72810();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v40 = v7;
  v32 = v6;
  v16 = v37;
  v17 = v38;
  v18 = v11;
  v19 = sub_23BC72690();
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v20 = sub_23BC725A0();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v22 = &type metadata for DownloadStatus;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  if (!*(_BYTE *)(v19 + 32))
  {
    v41 = 0;
    sub_23BBED420();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v30 = 0;
LABEL_10:
    v29 = 1;
    v28 = (uint64_t)v39;
    goto LABEL_11;
  }
  if (*(_BYTE *)(v19 + 32) != 1)
  {
    v43 = 2;
    sub_23BBED398();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v30 = 1;
    goto LABEL_10;
  }
  v42 = 1;
  sub_23BBED3DC();
  sub_23BC72600();
  v24 = v34;
  v25 = sub_23BC72630();
  v26 = v16;
  v27 = v25;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v28 = (uint64_t)v39;
  v29 = 0;
  v30 = v27 & 0x1FFFFFFFFLL;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1(v28);
  return v30 | ((unint64_t)v29 << 40);
}

unint64_t sub_23BBF0AD0()
{
  unint64_t result;

  result = qword_256A74400;
  if (!qword_256A74400)
  {
    result = MEMORY[0x24260ED10](&unk_23BC741A0, &type metadata for DownloadLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74400);
  }
  return result;
}

unint64_t sub_23BBF0B14()
{
  unint64_t result;

  result = qword_256A74408;
  if (!qword_256A74408)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74150, &type metadata for DownloadLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74408);
  }
  return result;
}

unint64_t sub_23BBF0B58()
{
  unint64_t result;

  result = qword_256A74410;
  if (!qword_256A74410)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74100, &type metadata for DownloadLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74410);
  }
  return result;
}

unint64_t sub_23BBF0B9C()
{
  unint64_t result;

  result = qword_256A74418;
  if (!qword_256A74418)
  {
    result = MEMORY[0x24260ED10](&unk_23BC740B0, &type metadata for DownloadLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74418);
  }
  return result;
}

uint64_t sub_23BBF0BE0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23BBF0D14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  unsigned __int8 v42;
  char v43;
  char v44;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746B0);
  v3 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  v34 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746B8);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746C0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746C8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23BBF0AD0();
  v16 = v38;
  sub_23BC72810();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v30 = v8;
  v38 = v7;
  v18 = v35;
  v17 = v36;
  v19 = v12;
  v20 = sub_23BC72690();
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v23 = sub_23BC725A0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v25 = &type metadata for DownloadLoadState;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v11);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  if (*(_BYTE *)(v20 + 32))
  {
    if (*(_BYTE *)(v20 + 32) == 1)
    {
      v40 = 1;
      sub_23BBF0B58();
      sub_23BC72600();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v21 = 1;
      v22 = 1;
    }
    else
    {
      v38 = v12;
      v44 = 2;
      sub_23BBF0B14();
      v27 = v17;
      sub_23BC72600();
      sub_23BBEAD44();
      v28 = v33;
      sub_23BC72684();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v11);
      v22 = 0;
      v29 = 0x10000000000;
      if (!v43)
        v29 = 0;
      v21 = v29 | v41 | ((unint64_t)v42 << 32);
    }
  }
  else
  {
    v39 = 0;
    sub_23BBF0B9C();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v21 = 0;
    v22 = 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v21 | ((unint64_t)v22 << 48);
}

uint64_t sub_23BBF117C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DownloadButtonState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadButtonState);
}

uint64_t type metadata accessor for DownloadButtonState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadButtonState.CodingKeys);
}

unint64_t sub_23BBF11DC()
{
  unint64_t result;

  result = qword_256A74448;
  if (!qword_256A74448)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadLoadState, &type metadata for DownloadLoadState);
    atomic_store(result, (unint64_t *)&qword_256A74448);
  }
  return result;
}

unint64_t sub_23BBF1220()
{
  unint64_t result;

  result = qword_256A74468;
  if (!qword_256A74468)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadLoadState, &type metadata for DownloadLoadState);
    atomic_store(result, (unint64_t *)&qword_256A74468);
  }
  return result;
}

uint64_t sub_23BBF1264(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A74420);
    result = MEMORY[0x24260ED10](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BBF12AC()
{
  unint64_t result;

  result = qword_256A74480;
  if (!qword_256A74480)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadStatus, &type metadata for DownloadStatus);
    atomic_store(result, (unint64_t *)&qword_256A74480);
  }
  return result;
}

unint64_t sub_23BBF12F4()
{
  unint64_t result;

  result = qword_256A74488[0];
  if (!qword_256A74488[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadLoadState, &type metadata for DownloadLoadState);
    atomic_store(result, qword_256A74488);
  }
  return result;
}

void sub_23BBF1338()
{
  JUMPOUT(0x24260ED10);
}

uint64_t __swift_memcpy6_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DownloadStatus(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DownloadStatus(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

uint64_t sub_23BBF13A8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23BBF13C4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    *(_BYTE *)(result + 5) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadStatus()
{
  return &type metadata for DownloadStatus;
}

ValueMetadata *type metadata accessor for DownloadLoadState()
{
  return &type metadata for DownloadLoadState;
}

uint64_t sub_23BBF1408()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23BBF1410()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_23BC71C4C();
    if (v2 <= 0x3F)
    {
      result = sub_23BC71C34();
      if (v3 <= 0x3F)
      {
        result = sub_23BBF2D28();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_23BBF14E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  size_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  _DWORD *v29;
  int *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(unint64_t, unint64_t, uint64_t);
  void *v35;
  unsigned __int8 *v36;
  unsigned int v37;
  size_t v38;
  int v39;
  int v40;
  unsigned int v41;
  size_t __n;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = sub_23BC71C4C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v5 + v8;
  v46 = *(_QWORD *)(v7 + 64);
  v47 = v6;
  v10 = sub_23BC71C34();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  v13 = *(_DWORD *)(v11 + 80);
  v14 = *(_QWORD *)(v11 + 64);
  v15 = v14 + v13;
  if ((_DWORD)v12)
    v16 = *(_QWORD *)(v11 + 64);
  else
    v16 = v14 + 1;
  if (v12 >= 2)
    v17 = v16;
  else
    v17 = v16 + 1;
  v18 = ((v14
        + v13
        + ((v13 + ((v46 + (v9 & ~(unint64_t)v8) + 5) & 0xFFFFFFFFFFFFFFFCLL) + 7) & ~v13)) & ~v13)
      + v17;
  v19 = v13 | v8 | *(_DWORD *)(v4 + 80) & 0xFC | 3;
  if (v19 > 7 || ((*(_DWORD *)(v11 + 80) | v8 | *(_DWORD *)(v4 + 80)) & 0x100000) != 0 || v18 > 0x18)
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (uint64_t *)(v22 + ((v19 + 16) & ~v19));
    swift_retain();
  }
  else
  {
    __n = v17;
    v44 = v16;
    v24 = ~(unint64_t)v8;
    v25 = ~v13;
    v45 = v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
    v26 = ((unint64_t)a1 + v9) & v24;
    v27 = ((unint64_t)a2 + v9) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v26, v27, v47);
    v28 = (_BYTE *)(v26 + v46);
    *v28 = *(_BYTE *)(v27 + v46);
    v28[1] = *(_BYTE *)(v27 + v46 + 1);
    v29 = (_DWORD *)((v26 + v46 + 5) & 0xFFFFFFFFFFFFFFFCLL);
    v30 = (int *)((v27 + v46 + 5) & 0xFFFFFFFFFFFFFFFCLL);
    v31 = *v30;
    *(_DWORD *)((char *)v29 + 3) = *(int *)((char *)v30 + 3);
    *v29 = v31;
    v32 = ((unint64_t)v29 + v13 + 7) & ~v13;
    v33 = ((unint64_t)v30 + v13 + 7) & ~v13;
    v34 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
    v34(((unint64_t)v29 + v13 + 7) & v25, ((unint64_t)v30 + v13 + 7) & v25, v45);
    v35 = (void *)((v15 + v32) & v25);
    v36 = (unsigned __int8 *)((v15 + v33) & v25);
    v23 = a1;
    v37 = v12;
    if (v12 > 1)
    {
      v41 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(v36, v12, v45);
      v38 = v44;
      if (v41 >= 2)
      {
LABEL_32:
        memcpy(v35, v36, __n);
        return v23;
      }
    }
    else
    {
      v38 = v44;
      if (v36[v44])
      {
        v39 = (v36[v44] - 1) << (8 * v44);
        if (v44 > 3)
          v39 = 0;
        if ((_DWORD)v44)
        {
          if (v44 <= 3)
            v40 = v44;
          else
            v40 = 4;
          __asm { BR              X11 }
        }
        if (v39 != -1)
          goto LABEL_32;
      }
    }
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(v36, 1, v45))
    {
      memcpy(v35, v36, v38);
      if (v37 > 1)
        return v23;
      goto LABEL_30;
    }
    v34((unint64_t)v35, (unint64_t)v36, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v45);
    if (v37 <= 1)
LABEL_30:
      *((_BYTE *)v35 + v38) = 0;
  }
  return v23;
}

uint64_t sub_23BBF17FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t (*v19)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_23BC71C4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 5) & 0xFFFFFFFFFFFFFFFCLL;
  v9 = sub_23BC71C34();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + v11 + 7) & ~v11;
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  result = v19(v12, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = (v14 + v11 + v12) & ~v11;
  v16 = *(_DWORD *)(v10 + 84);
  if (v16)
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = v14 + 1;
  if (v16 > 1)
  {
    result = (*(uint64_t (**)(uint64_t))(v10 + 48))(v15);
    if (result >= 2)
      return result;
    goto LABEL_15;
  }
  if (!*(_BYTE *)(v15 + v17))
    goto LABEL_15;
  v18 = (*(unsigned __int8 *)(v15 + v17) - 1) << (8 * v17);
  if (v17 > 3)
    v18 = 0;
  if ((_DWORD)v17)
  {
    if (v17 > 3)
      LODWORD(v17) = 4;
    __asm { BR              X11 }
  }
  if (v18 == -1)
  {
LABEL_15:
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
    if (!(_DWORD)result)
      return v19(v15, v9);
  }
  return result;
}

uint64_t sub_23BBF199C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void *v25;
  _BYTE *v26;
  unsigned int v27;
  size_t v28;
  int v29;
  int v30;
  size_t v31;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = (_BYTE *)(v12 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = (_DWORD *)((unint64_t)(v14 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  v17 = (_DWORD *)((unint64_t)(v15 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v15) = *(_DWORD *)((char *)v17 + 3);
  *v16 = *v17;
  *(_DWORD *)((char *)v16 + 3) = (_DWORD)v15;
  v18 = sub_23BC71C34();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((unint64_t)v16 + v20 + 7) & ~v20;
  v22 = ((unint64_t)v17 + v20 + 7) & ~v20;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v23(v21, v22, v18);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = (void *)((v24 + v20 + v21) & ~v20);
  v26 = (_BYTE *)((v24 + v20 + v22) & ~v20);
  v27 = *(_DWORD *)(v19 + 84);
  if (v27)
    v28 = *(_QWORD *)(v19 + 64);
  else
    v28 = v24 + 1;
  if (v27 <= 1)
  {
    if (v26[v28])
    {
      v29 = (v26[v28] - 1) << (8 * v28);
      if (v28 > 3)
        v29 = 0;
      if ((_DWORD)v28)
      {
        if (v28 <= 3)
          v30 = v28;
        else
          v30 = 4;
        __asm { BR              X11 }
      }
      if (v29 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v26, 1, v18))
    {
      memcpy(v25, v26, v28);
      if (v27 > 1)
        return a1;
    }
    else
    {
      v23((uint64_t)v25, (uint64_t)v26, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      if (v27 > 1)
        return a1;
    }
    *((_BYTE *)v25 + v28) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v19 + 48))(v26, *(unsigned int *)(v19 + 84), v18) < 2)
    goto LABEL_14;
LABEL_20:
  if (v27 >= 2)
    v31 = v28;
  else
    v31 = v28 + 1;
  memcpy(v25, v26, v31);
  return a1;
}

uint64_t sub_23BBF1BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  size_t v28;
  char v29;
  int v30;
  int v31;
  uint64_t (*v32)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  uint64_t (*v37)(unsigned __int8 *, uint64_t, uint64_t);
  int v38;
  int v39;
  size_t v40;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = (_BYTE *)(v12 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = (_DWORD *)((unint64_t)(v14 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  v17 = (_DWORD *)((unint64_t)(v15 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v15) = *(_DWORD *)((char *)v17 + 3);
  *v16 = *v17;
  *(_DWORD *)((char *)v16 + 3) = (_DWORD)v15;
  v18 = sub_23BC71C34();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((unint64_t)v16 + v20 + 7) & ~v20;
  v22 = ((unint64_t)v17 + v20 + 7) & ~v20;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 24);
  v23(v21, v22, v18);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = (unsigned __int8 *)((v24 + v20 + v21) & ~v20);
  v26 = (unsigned __int8 *)((v24 + v20 + v22) & ~v20);
  v27 = *(unsigned int *)(v19 + 84);
  if ((_DWORD)v27)
    v28 = *(_QWORD *)(v19 + 64);
  else
    v28 = v24 + 1;
  if (v27 > 1)
  {
    v32 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48);
    v33 = v32(v25, *(unsigned int *)(v19 + 84), v18);
    v34 = v32(v26, v27, v18);
    if (v33 >= 2)
    {
      if (v34 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v26, 1, v18))
      {
        memcpy(v25, v26, v28);
        if (v27 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 16))(v25, v26, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
        if (v27 > 1)
          return a1;
      }
      v25[v28] = 0;
      return a1;
    }
    if (v34 >= 2)
    {
LABEL_31:
      if (!v32(v25, 1, v18))
        (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v25, v18);
      goto LABEL_41;
    }
LABEL_33:
    v37 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48);
    v38 = v37(v25, 1, v18);
    v39 = v37(v26, 1, v18);
    if (v38)
    {
      if (!v39)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 16))(v25, v26, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
        return a1;
      }
    }
    else
    {
      if (!v39)
      {
        v23((uint64_t)v25, (uint64_t)v26, v18);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v25, v18);
    }
    memcpy(v25, v26, v28);
    return a1;
  }
  v29 = 8 * v28;
  if (!v25[v28])
    goto LABEL_29;
  v30 = (v25[v28] - 1) << v29;
  if (v28 > 3)
    v30 = 0;
  if ((_DWORD)v28)
  {
    if (v28 <= 3)
      v31 = v28;
    else
      v31 = 4;
    __asm { BR              X12 }
  }
  if (v30 == -1)
  {
LABEL_29:
    if (v26[v28])
    {
      v35 = (v26[v28] - 1) << v29;
      if (v28 > 3)
        v35 = 0;
      if ((_DWORD)v28)
      {
        if (v28 <= 3)
          v36 = v28;
        else
          v36 = 4;
        __asm { BR              X11 }
      }
      if (v35 != -1)
      {
        v32 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v26[v28] || (v26[v28] - 1) << v29 == -1)
    goto LABEL_45;
LABEL_41:
  if (v27 >= 2)
    v40 = v28;
  else
    v40 = v28 + 1;
  memcpy(v25, v26, v40);
  return a1;
}

uint64_t sub_23BBF2024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void *v25;
  _BYTE *v26;
  unsigned int v27;
  size_t v28;
  int v29;
  int v30;
  size_t v31;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = (_BYTE *)(v12 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = (_DWORD *)((unint64_t)(v14 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  v17 = (_DWORD *)((unint64_t)(v15 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v15) = *(_DWORD *)((char *)v17 + 3);
  *v16 = *v17;
  *(_DWORD *)((char *)v16 + 3) = (_DWORD)v15;
  v18 = sub_23BC71C34();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((unint64_t)v16 + v20 + 7) & ~v20;
  v22 = ((unint64_t)v17 + v20 + 7) & ~v20;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  v23(v21, v22, v18);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = (void *)((v24 + v20 + v21) & ~v20);
  v26 = (_BYTE *)((v24 + v20 + v22) & ~v20);
  v27 = *(_DWORD *)(v19 + 84);
  if (v27)
    v28 = *(_QWORD *)(v19 + 64);
  else
    v28 = v24 + 1;
  if (v27 <= 1)
  {
    if (v26[v28])
    {
      v29 = (v26[v28] - 1) << (8 * v28);
      if (v28 > 3)
        v29 = 0;
      if ((_DWORD)v28)
      {
        if (v28 <= 3)
          v30 = v28;
        else
          v30 = 4;
        __asm { BR              X11 }
      }
      if (v29 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v26, 1, v18))
    {
      memcpy(v25, v26, v28);
      if (v27 > 1)
        return a1;
    }
    else
    {
      v23((uint64_t)v25, (uint64_t)v26, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      if (v27 > 1)
        return a1;
    }
    *((_BYTE *)v25 + v28) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v19 + 48))(v26, *(unsigned int *)(v19 + 84), v18) < 2)
    goto LABEL_14;
LABEL_20:
  if (v27 >= 2)
    v31 = v28;
  else
    v31 = v28 + 1;
  memcpy(v25, v26, v31);
  return a1;
}

uint64_t sub_23BBF226C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  size_t v28;
  char v29;
  int v30;
  int v31;
  uint64_t (*v32)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  uint64_t (*v37)(unsigned __int8 *, uint64_t, uint64_t);
  int v38;
  int v39;
  size_t v40;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = (_BYTE *)(v12 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = (_DWORD *)((unint64_t)(v14 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  v17 = (_DWORD *)((unint64_t)(v15 + 5) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v15) = *(_DWORD *)((char *)v17 + 3);
  *v16 = *v17;
  *(_DWORD *)((char *)v16 + 3) = (_DWORD)v15;
  v18 = sub_23BC71C34();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((unint64_t)v16 + v20 + 7) & ~v20;
  v22 = ((unint64_t)v17 + v20 + 7) & ~v20;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
  v23(v21, v22, v18);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = (unsigned __int8 *)((v24 + v20 + v21) & ~v20);
  v26 = (unsigned __int8 *)((v24 + v20 + v22) & ~v20);
  v27 = *(unsigned int *)(v19 + 84);
  if ((_DWORD)v27)
    v28 = *(_QWORD *)(v19 + 64);
  else
    v28 = v24 + 1;
  if (v27 > 1)
  {
    v32 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48);
    v33 = v32(v25, *(unsigned int *)(v19 + 84), v18);
    v34 = v32(v26, v27, v18);
    if (v33 >= 2)
    {
      if (v34 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v26, 1, v18))
      {
        memcpy(v25, v26, v28);
        if (v27 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 32))(v25, v26, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
        if (v27 > 1)
          return a1;
      }
      v25[v28] = 0;
      return a1;
    }
    if (v34 >= 2)
    {
LABEL_31:
      if (!v32(v25, 1, v18))
        (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v25, v18);
      goto LABEL_41;
    }
LABEL_33:
    v37 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48);
    v38 = v37(v25, 1, v18);
    v39 = v37(v26, 1, v18);
    if (v38)
    {
      if (!v39)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 32))(v25, v26, v18);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
        return a1;
      }
    }
    else
    {
      if (!v39)
      {
        v23((uint64_t)v25, (uint64_t)v26, v18);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v25, v18);
    }
    memcpy(v25, v26, v28);
    return a1;
  }
  v29 = 8 * v28;
  if (!v25[v28])
    goto LABEL_29;
  v30 = (v25[v28] - 1) << v29;
  if (v28 > 3)
    v30 = 0;
  if ((_DWORD)v28)
  {
    if (v28 <= 3)
      v31 = v28;
    else
      v31 = 4;
    __asm { BR              X12 }
  }
  if (v30 == -1)
  {
LABEL_29:
    if (v26[v28])
    {
      v35 = (v26[v28] - 1) << v29;
      if (v28 > 3)
        v35 = 0;
      if ((_DWORD)v28)
      {
        if (v28 <= 3)
          v36 = v28;
        else
          v36 = 4;
        __asm { BR              X11 }
      }
      if (v35 != -1)
      {
        v32 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v26[v28] || (v26[v28] - 1) << v29 == -1)
    goto LABEL_45;
LABEL_41:
  if (v27 >= 2)
    v40 = v28;
  else
    v40 = v28 + 1;
  memcpy(v25, v26, v40);
  return a1;
}

uint64_t sub_23BBF26AC(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  uint64_t (*v34)(unint64_t, uint64_t, uint64_t);
  unint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t result;
  unsigned int v40;
  BOOL v41;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_23BC71C4C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = sub_23BC71C34();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v11 <= v14)
    v15 = *(_DWORD *)(v13 + 84);
  else
    v15 = v11;
  v16 = v14 - 1;
  if (!(_DWORD)v14)
    v16 = 0;
  v17 = v16 - 1;
  if (v14 >= 2)
    v18 = v16 - 1;
  else
    v18 = 0;
  if (v15 <= v18)
    v15 = v18;
  if (v15 <= 0xFE)
    v19 = 254;
  else
    v19 = v15;
  if ((_DWORD)v14)
    v20 = v14 < 2;
  else
    v20 = 2;
  if (!a2)
    return 0;
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = *(_QWORD *)(v6 + 64) + v21;
  v23 = *(_QWORD *)(v9 + 64);
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = v24 + 7;
  v26 = *(_QWORD *)(v13 + 64);
  v27 = v26 + v24;
  if (a2 <= v19)
    goto LABEL_39;
  v28 = v20 + v26 + ((v27 + ((v25 + ((v23 + (v22 & ~v21) + 5) & 0xFFFFFFFFFFFFFFFCLL)) & ~v24)) & ~v24);
  v29 = 8 * v28;
  if (v28 > 3)
    goto LABEL_23;
  v31 = ((a2 - v19 + ~(-1 << v29)) >> v29) + 1;
  if (HIWORD(v31))
  {
    v30 = *(_DWORD *)(a1 + v28);
    if (!v30)
      goto LABEL_39;
    goto LABEL_30;
  }
  if (v31 > 0xFF)
  {
    v30 = *(unsigned __int16 *)(a1 + v28);
    if (!*(_WORD *)(a1 + v28))
      goto LABEL_39;
    goto LABEL_30;
  }
  if (v31 >= 2)
  {
LABEL_23:
    v30 = *(unsigned __int8 *)(a1 + v28);
    if (!*(_BYTE *)(a1 + v28))
      goto LABEL_39;
LABEL_30:
    v32 = (v30 - 1) << v29;
    if (v28 > 3)
      v32 = 0;
    if ((_DWORD)v28)
    {
      if (v28 <= 3)
        v33 = v28;
      else
        v33 = 4;
      __asm { BR              X12 }
    }
    return v19 + v32 + 1;
  }
LABEL_39:
  if ((_DWORD)v7 == v19)
  {
    v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v35 = a1;
    v14 = v7;
    v12 = v5;
    return v34(v35, v14, v12);
  }
  v35 = (v22 + a1) & ~v21;
  if ((_DWORD)v10 == v19)
  {
    v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
    v14 = v10;
    v12 = v8;
    return v34(v35, v14, v12);
  }
  v36 = (unsigned __int8 *)(v35 + v23);
  if (v15 <= 0xFE)
  {
    v37 = *v36;
    if (v37 >= 2)
      return ((v37 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  v38 = ~v24;
  if ((_DWORD)v14 == v19)
  {
    v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48);
    v35 = (v25 + ((unint64_t)(v36 + 5) & 0xFFFFFFFFFFFFFFFCLL)) & v38;
    return v34(v35, v14, v12);
  }
  if (!(_DWORD)v14)
    return 0;
  result = 0;
  if (v14 >= 2)
  {
    if (v17)
    {
      v40 = (*(uint64_t (**)(unint64_t))(v13 + 48))((v27
                                                                    + ((v25
                                                                      + ((unint64_t)(v36 + 5) & 0xFFFFFFFFFFFFFFFCLL)) & v38)) & v38);
      v41 = v40 >= 2;
      result = v40 - 2;
      if ((_DWORD)result == 0 || !v41)
        return 0;
    }
  }
  return result;
}

void sub_23BBF2968(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  size_t v19;
  unsigned int v20;
  unsigned int v21;
  int v22;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_23BC71C4C() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = 0;
  v12 = *(_QWORD *)(sub_23BC71C34() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  if (v10 <= v13)
    v14 = *(_DWORD *)(v12 + 84);
  else
    v14 = v10;
  v15 = v13 - 1;
  if (!v13)
    v15 = 0;
  v16 = v15 - 1;
  v17 = v13 < 2;
  if (v13 < 2)
    v16 = 0;
  if (v14 > v16)
    v16 = v14;
  if (v16 <= 0xFE)
    v18 = 254;
  else
    v18 = v16;
  if (!v13)
    ++v17;
  v19 = v17
      + *(_QWORD *)(v12 + 64)
      + ((*(_QWORD *)(v12 + 64)
        + *(unsigned __int8 *)(v12 + 80)
        + ((*(unsigned __int8 *)(v12 + 80)
          + 7
          + ((*(_QWORD *)(v9 + 64)
            + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
            + 5) & 0xFFFFFFFFFFFFFFFCLL)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  if (a3 > v18)
  {
    if (v19 > 3)
    {
      v11 = 1u;
      if (v18 >= a2)
LABEL_34:
        __asm { BR              X5 }
LABEL_27:
      v21 = ~v18 + a2;
      if (v19 < 4)
      {
        if ((_DWORD)v19)
        {
          v22 = v21 & ~(-1 << (8 * v19));
          bzero(a1, v19);
          if ((_DWORD)v19 == 3)
          {
            *(_WORD *)a1 = v22;
            a1[2] = BYTE2(v22);
          }
          else if ((_DWORD)v19 == 2)
          {
            *(_WORD *)a1 = v22;
          }
          else
          {
            *a1 = v22;
          }
        }
      }
      else
      {
        bzero(a1, v19);
        *(_DWORD *)a1 = v21;
      }
      __asm { BR              X10 }
    }
    v20 = ((a3 - v18 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v20))
    {
      v11 = 4u;
      if (v18 >= a2)
        goto LABEL_34;
      goto LABEL_27;
    }
    if (v20 >= 0x100)
      v11 = 2;
    else
      v11 = v20 > 1;
  }
  if (v18 >= a2)
    goto LABEL_34;
  goto LABEL_27;
}

void sub_23BBF2C1C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_23BBF2C24()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_23BBF2CE0()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_23BBF2D04()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_23BBF2D0C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_23BBF2D1C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_23BBF2D28()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_256A74510;
  if (!qword_256A74510)
  {
    sub_23BC71C34();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23BBF377C(&qword_256A74450, v1, MEMORY[0x24BDCEA70]);
    sub_23BBF377C((unint64_t *)&qword_256A74438, v1, MEMORY[0x24BDCEA88]);
    type metadata accessor for ModalPresentation();
  }
  return result;
}

uint64_t sub_23BBF2DF8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23BBF2E00(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23BBF2E4C + 4 * byte_23BC737C6[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23BBF2E80 + 4 * byte_23BC737C1[v4]))();
}

uint64_t sub_23BBF2E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBF2E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BBF2E90);
  return result;
}

uint64_t sub_23BBF2E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BBF2EA4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23BBF2EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBF2EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadLoadState.CodingKeys()
{
  return &type metadata for DownloadLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for DownloadLoadState.IdleCodingKeys()
{
  return &type metadata for DownloadLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadLoadState.FetchingCodingKeys()
{
  return &type metadata for DownloadLoadState.FetchingCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadLoadState.FetchedCodingKeys()
{
  return &type metadata for DownloadLoadState.FetchedCodingKeys;
}

uint64_t getEnumTagSinglePayload for PreviewButtonAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14FitnessActions17DownloadLoadStateO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BBF2FE8 + 4 * byte_23BC737D0[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BBF301C + 4 * byte_23BC737CB[v4]))();
}

uint64_t sub_23BBF301C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBF3024(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BBF302CLL);
  return result;
}

uint64_t sub_23BBF3038(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BBF3040);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BBF3044(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBF304C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadStatus.CodingKeys()
{
  return &type metadata for DownloadStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for DownloadStatus.NoDownloadCodingKeys()
{
  return &type metadata for DownloadStatus.NoDownloadCodingKeys;
}

uint64_t _s14FitnessActions17DownloadLoadStateO17FetchedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BBF30B8 + 4 * byte_23BC737D5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BBF30D8 + 4 * byte_23BC737DA[v4]))();
}

_BYTE *sub_23BBF30B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BBF30D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BBF30E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BBF30E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BBF30F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BBF30F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DownloadStatus.DownloadingCodingKeys()
{
  return &type metadata for DownloadStatus.DownloadingCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadStatus.DownloadedCodingKeys()
{
  return &type metadata for DownloadStatus.DownloadedCodingKeys;
}

unint64_t sub_23BBF3128()
{
  unint64_t result;

  result = qword_256A74598;
  if (!qword_256A74598)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73C68, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74598);
  }
  return result;
}

unint64_t sub_23BBF3170()
{
  unint64_t result;

  result = qword_256A745A0;
  if (!qword_256A745A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73D70, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745A0);
  }
  return result;
}

unint64_t sub_23BBF31B8()
{
  unint64_t result;

  result = qword_256A745A8;
  if (!qword_256A745A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73E28, &type metadata for DownloadLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745A8);
  }
  return result;
}

unint64_t sub_23BBF3200()
{
  unint64_t result;

  result = qword_256A745B0;
  if (!qword_256A745B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73F80, &type metadata for DownloadLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745B0);
  }
  return result;
}

void sub_23BBF3244()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BBF3254()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BBF3264()
{
  JUMPOUT(0x24260ED10);
}

unint64_t sub_23BBF3278()
{
  unint64_t result;

  result = qword_256A745B8;
  if (!qword_256A745B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73EA0, &type metadata for DownloadLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745B8);
  }
  return result;
}

unint64_t sub_23BBF32C0()
{
  unint64_t result;

  result = qword_256A745C0;
  if (!qword_256A745C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73EC8, &type metadata for DownloadLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745C0);
  }
  return result;
}

unint64_t sub_23BBF3308()
{
  unint64_t result;

  result = qword_256A745C8;
  if (!qword_256A745C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73E50, &type metadata for DownloadLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745C8);
  }
  return result;
}

unint64_t sub_23BBF3350()
{
  unint64_t result;

  result = qword_256A745D0;
  if (!qword_256A745D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73E78, &type metadata for DownloadLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745D0);
  }
  return result;
}

unint64_t sub_23BBF3398()
{
  unint64_t result;

  result = qword_256A745D8;
  if (!qword_256A745D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73D98, &type metadata for DownloadLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745D8);
  }
  return result;
}

unint64_t sub_23BBF33E0()
{
  unint64_t result;

  result = qword_256A745E0;
  if (!qword_256A745E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73DC0, &type metadata for DownloadLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745E0);
  }
  return result;
}

unint64_t sub_23BBF3428()
{
  unint64_t result;

  result = qword_256A745E8;
  if (!qword_256A745E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73EF0, &type metadata for DownloadLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745E8);
  }
  return result;
}

unint64_t sub_23BBF3470()
{
  unint64_t result;

  result = qword_256A745F0;
  if (!qword_256A745F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73F18, &type metadata for DownloadLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745F0);
  }
  return result;
}

unint64_t sub_23BBF34B8()
{
  unint64_t result;

  result = qword_256A745F8;
  if (!qword_256A745F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73C90, &type metadata for DownloadStatus.NoDownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A745F8);
  }
  return result;
}

unint64_t sub_23BBF3500()
{
  unint64_t result;

  result = qword_256A74600;
  if (!qword_256A74600)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73CB8, &type metadata for DownloadStatus.NoDownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74600);
  }
  return result;
}

unint64_t sub_23BBF3548()
{
  unint64_t result;

  result = qword_256A74608;
  if (!qword_256A74608)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73BD8, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74608);
  }
  return result;
}

unint64_t sub_23BBF3590()
{
  unint64_t result;

  result = qword_256A74610;
  if (!qword_256A74610)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73C00, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74610);
  }
  return result;
}

unint64_t sub_23BBF35D8()
{
  unint64_t result;

  result = qword_256A74618;
  if (!qword_256A74618)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73B88, &type metadata for DownloadStatus.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74618);
  }
  return result;
}

unint64_t sub_23BBF3620()
{
  unint64_t result;

  result = qword_256A74620;
  if (!qword_256A74620)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73BB0, &type metadata for DownloadStatus.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74620);
  }
  return result;
}

unint64_t sub_23BBF3668()
{
  unint64_t result;

  result = qword_256A74628;
  if (!qword_256A74628)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73CE0, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74628);
  }
  return result;
}

unint64_t sub_23BBF36B0()
{
  unint64_t result;

  result = qword_256A74630;
  if (!qword_256A74630)
  {
    result = MEMORY[0x24260ED10](&unk_23BC73D08, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74630);
  }
  return result;
}

uint64_t sub_23BBF36F4()
{
  return 7;
}

uint64_t sub_23BBF36FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23BBF3738(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BBF377C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24260ED10](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BBF37D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  char *v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v3 = v2;
  v5 = sub_23BC71C34();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, v3, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = *((_OWORD *)v11 + 1);
    v17 = *(_OWORD *)v11;
    v18 = v13;
    v19 = *((_QWORD *)v11 + 4);
    sub_23BC727B0();
    sub_23BC7254C();
  }
  else
  {
    v14 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48)];
    v15 = *((_OWORD *)v11 + 1);
    v17 = *(_OWORD *)v11;
    v18 = v15;
    v19 = *((_QWORD *)v11 + 4);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v14, v5);
    sub_23BC727B0();
    sub_23BC7254C();
    sub_23BBF60E8();
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BBF60B4((uint64_t)&v17);
}

uint64_t sub_23BBF394C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  __int128 v27;
  char v28;
  __int128 *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v8 = sub_23BC71C34();
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v43 - v11;
  v13 = type metadata accessor for DownloadButtonFeature.TaskIdentifier(0, a3, a4, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v43 - v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v21 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v22 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v24 = (char *)&v43 - v23;
  v25 = (char *)&v43 + *(int *)(v22 + 48) - v23;
  v48 = v14;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v26((char *)&v43 - v23, a1, v13);
  v26(v25, a2, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26(v17, (uint64_t)v24, v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = *((_OWORD *)v25 + 1);
      v49 = *(_OWORD *)v25;
      v50 = v27;
      v51 = *((_QWORD *)v25 + 4);
      v28 = MEMORY[0x24260E77C](v17, &v49);
      sub_23BBF60B4((uint64_t)&v49);
      v29 = (__int128 *)v17;
      goto LABEL_10;
    }
    v19 = v17;
  }
  else
  {
    v26(v19, (uint64_t)v24, v13);
    v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48);
    v31 = &v19[v30];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v32 = &v25[v30];
      v33 = *((_OWORD *)v25 + 1);
      v49 = *(_OWORD *)v25;
      v50 = v33;
      v51 = *((_QWORD *)v25 + 4);
      v35 = v45;
      v34 = v46;
      v36 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      v37 = v47;
      v36(v45, v31, v47);
      v38 = v44;
      v36(v44, v32, v37);
      v39 = MEMORY[0x24260E77C](v19, &v49);
      sub_23BBF60B4((uint64_t)v19);
      if ((v39 & 1) == 0)
      {
        v41 = *(void (**)(char *, uint64_t))(v34 + 8);
        v41(v38, v37);
        v41(v35, v37);
        sub_23BBF60B4((uint64_t)&v49);
        v28 = 0;
        goto LABEL_12;
      }
      v28 = sub_23BC71C1C();
      v40 = *(void (**)(char *, uint64_t))(v34 + 8);
      v40(v38, v37);
      v40(v35, v37);
      v29 = &v49;
LABEL_10:
      sub_23BBF60B4((uint64_t)v29);
LABEL_12:
      v21 = v48;
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(&v19[v30], v47);
  }
  sub_23BBF60B4((uint64_t)v19);
  v28 = 0;
  v13 = TupleTypeMetadata2;
LABEL_13:
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v13);
  return v28 & 1;
}

uint64_t sub_23BBF3C6C(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  sub_23BBF37D4((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t sub_23BBF3CB8(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  sub_23BBF37D4((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BBF3CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BBF394C(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

__n128 DownloadButtonFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __n128 result;

  sub_23BC71C28();
  v9 = a4 + *(int *)(type metadata accessor for DownloadButtonFeature(0, a2, a3, v8) + 36);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v9 = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 16) = v10;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v9 + 32) = result;
  return result;
}

uint64_t type metadata accessor for DownloadButtonFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadButtonFeature);
}

uint64_t DownloadButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _QWORD v24[6];
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a3;
  v24[5] = a1;
  v8 = *(_QWORD *)(a5 + 16);
  v9 = *(_QWORD *)(a5 + 24);
  v10 = type metadata accessor for DownloadButtonFeature.TaskIdentifier(0, v8, v9, a4);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v33 = a5;
  v28 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v26 = v12;
  v29 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A746F0);
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v32 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v27 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v24 - v19;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v25((char *)v24 - v19, a2, v8);
  if ((a4 & 0x1000000000000) != 0)
  {
    v24[4] = v16;
    __asm { BR              X10 }
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v8);
  result = type metadata accessor for DownloadButtonState(0, v8, v9, v21);
  v23 = a2 + *(int *)(result + 48);
  *(_WORD *)(v23 + 4) = WORD2(a4) & 0x1FF;
  *(_DWORD *)v23 = a4;
  *(_BYTE *)(v23 + 6) = 0;
  return result;
}

uint64_t type metadata accessor for DownloadButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadButtonFeature.TaskIdentifier);
}

uint64_t sub_23BBF4714(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BBF4754(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ActionTaskIdentifier(a2, a1);
  return a2;
}

unint64_t sub_23BBF4790()
{
  unint64_t result;

  result = qword_256A74700;
  if (!qword_256A74700)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B990, &type metadata for ActionTaskIdentifier);
    atomic_store(result, &qword_256A74700);
  }
  return result;
}

uint64_t sub_23BBF47D4(uint64_t a1)
{
  destroy for StartWorkoutButtonFeature.TaskIdentifier();
  return a1;
}

uint64_t sub_23BBF4808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_23BC723F0();
  v5[7] = sub_23BC723E4();
  v5[8] = sub_23BC723CC();
  v5[9] = v6;
  return swift_task_switch();
}

uint64_t sub_23BBF487C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD);

  v5 = v4[3];
  v6 = (_QWORD *)(v5 + *(int *)(type metadata accessor for DownloadButtonFeature(0, v4[5], v4[6], a4) + 36));
  v9 = (uint64_t (*)(_QWORD))(*(int *)*v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  v4[10] = v7;
  *v7 = v4;
  v7[1] = sub_23BBF48F0;
  return v9(v4[4]);
}

uint64_t sub_23BBF48F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *v2;
  v5 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    *(_DWORD *)(v4 + 112) = 0;
    v6 = v4 + 112;
    *(_WORD *)(v6 + 4) = 256;
    *(_BYTE *)(v6 + 6) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v6 - 8) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74860);
    *v7 = v5;
    v7[1] = sub_23BBF4A5C;
  }
  else
  {
    *(_DWORD *)(v4 + 120) = a1;
    v8 = v4 + 120;
    *(_WORD *)(v8 + 4) = WORD2(a1) & 0x1FF;
    *(_BYTE *)(v8 + 6) = 0;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 - 24) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74860);
    *v9 = v5;
    v9[1] = sub_23BBF49DC;
  }
  return sub_23BC7215C();
}

uint64_t sub_23BBF49DC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BBF4A28()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF4A5C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BBF4AA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release();
  MEMORY[0x24260EC20](v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF4AEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE2B558];
  v3 = sub_23BC72174();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23BBF4B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = *(_QWORD *)(a4 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  sub_23BC723F0();
  v5[12] = sub_23BC723E4();
  v5[13] = sub_23BC723CC();
  v5[14] = v6;
  return swift_task_switch();
}

uint64_t sub_23BBF4BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD);

  v5 = v4[5];
  v6 = v5 + *(int *)(type metadata accessor for DownloadButtonFeature(0, v4[7], v4[8], a4) + 36);
  v9 = (uint64_t (*)(_QWORD))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v4[15] = v7;
  *v7 = v4;
  v7[1] = sub_23BBF4C44;
  return v9(v4[6]);
}

uint64_t sub_23BBF4C44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BBF4CA4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF4CE8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BBF4D34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release();
  MEMORY[0x24260EC20](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF4D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_256A73EE0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = sub_23BC71C7C();
  __swift_project_value_buffer(v6, (uint64_t)qword_256A94570);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v5, v4);
  MEMORY[0x24260EC2C](v1);
  MEMORY[0x24260EC2C](v1);
  v8 = sub_23BC71C64();
  v9 = sub_23BC724D4();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 128);
  if (v10)
  {
    v13 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 56);
    v15 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v24 = v23;
    *(_DWORD *)v15 = 136315394;
    v7(v12, v13, v14);
    v16 = sub_23BC722F4();
    *(_QWORD *)(v0 + 16) = sub_23BBF9080(v16, v17, &v24);
    sub_23BC72510();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v13, v14);
    *(_WORD *)(v15 + 12) = 2114;
    MEMORY[0x24260EC2C](v11);
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v18;
    sub_23BC72510();
    *v22 = v18;
    MEMORY[0x24260EC20](v11);
    MEMORY[0x24260EC20](v11);
    _os_log_impl(&dword_23BBE4000, v8, v9, "Failed to download workout with identifier: %s -- %{public}@", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74868);
    swift_arrayDestroy();
    MEMORY[0x24260EDA0](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260EDA0](v23, -1, -1);
    MEMORY[0x24260EDA0](v15, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
    MEMORY[0x24260EC20](v11);
    MEMORY[0x24260EC20](v11);
  }

  *(_WORD *)(v0 + 148) = 256;
  *(_DWORD *)(v0 + 144) = 0;
  *(_BYTE *)(v0 + 150) = 0;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74860);
  *v19 = v0;
  v19[1] = sub_23BBF4CE8;
  return sub_23BC7215C();
}

uint64_t sub_23BBF5074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_23BC723F0();
  v5[7] = sub_23BC723E4();
  v5[8] = sub_23BC723CC();
  v5[9] = v6;
  return swift_task_switch();
}

uint64_t sub_23BBF50E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD);

  v5 = v4[3];
  v6 = v5 + *(int *)(type metadata accessor for DownloadButtonFeature(0, v4[5], v4[6], a4) + 36);
  v9 = (uint64_t (*)(_QWORD))(**(int **)(v6 + 32) + *(_QWORD *)(v6 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  v4[10] = v7;
  *v7 = v4;
  v7[1] = sub_23BBF515C;
  return v9(v4[4]);
}

uint64_t sub_23BBF515C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  *(_DWORD *)(v2 + 104) = 0;
  *(_WORD *)(v2 + 108) = 256;
  *(_BYTE *)(v2 + 110) = 0;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74860);
  *v4 = v2;
  v4[1] = sub_23BBF49DC;
  return sub_23BC7215C();
}

uint64_t sub_23BBF521C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF5254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(type metadata accessor for DownloadButtonFeature(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v12 = v4 + v10;
  v13 = v4 + ((v10 + *(_QWORD *)(v9 + 64) + v11) & ~v11);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_23BBF5304;
  return sub_23BBF5074(a1, v12, v13, v7, v8);
}

uint64_t sub_23BBF5304()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23BBF5350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(type metadata accessor for DownloadButtonFeature(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v12 = v4 + v10;
  v13 = v4 + ((v10 + *(_QWORD *)(v9 + 64) + v11) & ~v11);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_23BBF6148;
  return sub_23BBF4B30(a1, v12, v13, v7, v8);
}

uint64_t objectdestroyTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(type metadata accessor for DownloadButtonFeature(0, v5, *(_QWORD *)(v4 + 24), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v4 + v7;
  v11 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v4 + v9, v5);
  return swift_deallocObject();
}

uint64_t sub_23BBF54DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(type metadata accessor for DownloadButtonFeature(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v12 = v4 + v10;
  v13 = v4 + ((v10 + *(_QWORD *)(v9 + 64) + v11) & ~v11);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_23BBF6148;
  return sub_23BBF4808(a1, v12, v13, v7, v8);
}

uint64_t DownloadButtonFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_23BBF5598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_23BBF55A4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  return DownloadButtonFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4 | ((unint64_t)*((unsigned __int16 *)a4 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a4 + 6) << 48), a5);
}

unint64_t sub_23BBF55D0()
{
  unint64_t result;

  result = qword_256A74740;
  if (!qword_256A74740)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadButtonAction, &type metadata for DownloadButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A74740);
  }
  return result;
}

unint64_t sub_23BBF5618()
{
  unint64_t result;

  result = qword_256A74748;
  if (!qword_256A74748)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadButtonAction, &type metadata for DownloadButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A74748);
  }
  return result;
}

unint64_t sub_23BBF5660()
{
  unint64_t result;

  result = qword_256A74750[0];
  if (!qword_256A74750[0])
  {
    result = MEMORY[0x24260ED10](MEMORY[0x24BE2B430], MEMORY[0x24BE2B428]);
    atomic_store(result, qword_256A74750);
  }
  return result;
}

void sub_23BBF56A4()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BBF56B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71C34();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23BBF5724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23BC71C34();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 36);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
    v11 = *((_QWORD *)v10 + 5);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
    *((_QWORD *)v9 + 5) = v11;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BBF57F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BBF5848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 40) = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BBF58EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_retain();
  swift_release();
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BBF5990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_23BBF59FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + v7) = *v9;
  swift_release();
  *(_OWORD *)(v8 + 16) = v9[1];
  swift_release();
  *(_OWORD *)(v8 + 32) = v9[2];
  swift_release();
  return a1;
}

uint64_t sub_23BBF5A88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BBF5A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23BC71C34();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BBF5B10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BBF5B1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BC71C34();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_23BBF5B94()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = sub_23BC71C34();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = "(";
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23BBF5C18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    if (EnumCaseMultiPayload != 1)
    {
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48);
      v10 = a1 + v9;
      v11 = (uint64_t)a2 + v9;
      v12 = sub_23BC71C34();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23BBF5D04(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (EnumCaseMultiPayload != 1)
  {
    v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48);
    v5 = sub_23BC71C34();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

uint64_t sub_23BBF5D70(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
  if (EnumCaseMultiPayload != 1)
  {
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23BC71C34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BBF5E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    if (EnumCaseMultiPayload != 1)
    {
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48);
      v8 = a1 + v7;
      v9 = a2 + v7;
      v10 = sub_23BC71C34();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23BBF5F00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23BC71C34();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23BBF5FB0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A747D8) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23BC71C34();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWorkoutButtonAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButtonAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23BBF6094()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23BBF60A4()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BBF60B4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

unint64_t sub_23BBF60E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A74438;
  if (!qword_256A74438)
  {
    v1 = sub_23BC71C34();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_256A74438);
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void sub_23BBF614C(uint64_t a1, uint64_t a2, char a3)
{
  sub_23BC727A4();
  __asm { BR              X10 }
}

uint64_t sub_23BBF6194()
{
  sub_23BC727B0();
  sub_23BC7230C();
  return sub_23BC727E0();
}

void sub_23BBF6200()
{
  uint64_t v0;

  sub_23BBF614C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_23BBF620C()
{
  __asm { BR              X10 }
}

uint64_t sub_23BBF6240()
{
  sub_23BC727B0();
  return sub_23BC7230C();
}

void sub_23BBF629C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_23BC727A4();
  __asm { BR              X9 }
}

uint64_t sub_23BBF62D8()
{
  sub_23BC727B0();
  sub_23BC7230C();
  return sub_23BC727E0();
}

uint64_t sub_23BBF6344(uint64_t a1)
{
  return sub_23BBF96C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

__n128 StackButtonFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

void StackButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t started;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _QWORD v19[9];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v23 = a3;
  v20 = sub_23BC71C10();
  v19[8] = *(_QWORD *)(v20 - 8);
  v6 = MEMORY[0x24BDAC7A8](v20);
  v19[6] = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v19[7] = (char *)v19 - v8;
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  v10 = MEMORY[0x24BDAC7A8](started);
  MEMORY[0x24BDAC7A8](v10);
  v21 = (char *)v19 - v11;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74870);
  v24 = *(_QWORD *)(v22 - 8);
  v12 = MEMORY[0x24BDAC7A8](v22);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v16 = *(unsigned __int8 *)(a4 + 26);
  v17 = v4[3];
  v27 = v4[2];
  v28 = v17;
  v29 = v4[4];
  v18 = v4[1];
  v25 = *v4;
  v26 = v18;
  __asm { BR              X10 }
}

uint64_t sub_23BBF6574()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  uint64_t v4;

  v2 = v0;
  result = type metadata accessor for StackButtonState();
  v4 = *(int *)(result + 32);
  if (*(_BYTE *)(v1 + v4) == 3)
    *(_BYTE *)(v1 + v4) = v2 & 1;
  return result;
}

unint64_t sub_23BBF72A0()
{
  unint64_t result;

  result = qword_256A74878;
  if (!qword_256A74878)
  {
    result = MEMORY[0x24260ED10](&unk_23BC745EC, &type metadata for StackButtonFeature.TaskIdentifier);
    atomic_store(result, &qword_256A74878);
  }
  return result;
}

uint64_t sub_23BBF72E4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v4[10] = a1;
  v4[11] = sub_23BC723F0();
  v4[12] = sub_23BC723E4();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(*(int *)*a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v4[13] = v8;
  *v8 = v4;
  v8[1] = sub_23BBF7374;
  return v10(a3, a4);
}

uint64_t sub_23BBF7374()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 16) = 0;
    v4 = v2 + 16;
    *(_DWORD *)(v4 + 23) = 0;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 112) = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    *v5 = v3;
    v5[1] = sub_23BBF74FC;
  }
  else
  {
    *(_QWORD *)(v2 + 48) = 1;
    v6 = v2 + 48;
    *(_QWORD *)(v6 + 8) = 0;
    *(_QWORD *)(v6 + 16) = 0;
    *(_DWORD *)(v6 + 23) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v6 + 72) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    *v7 = v3;
    v7[1] = sub_23BBF7458;
  }
  return sub_23BC7215C();
}

uint64_t sub_23BBF7458()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBF74C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF74FC()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBF756C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release();
  MEMORY[0x24260EC20](v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF75AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v4[19] = a1;
  v4[20] = sub_23BC723F0();
  v4[21] = sub_23BC723E4();
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v4[22] = v8;
  *v8 = v4;
  v8[1] = sub_23BBF764C;
  return v10(v4 + 14, a3, a4);
}

uint64_t sub_23BBF764C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 192) = sub_23BC723CC();
  *(_QWORD *)(v2 + 200) = v3;
  return swift_task_switch();
}

uint64_t sub_23BBF76D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 208) = v2;
  *(_QWORD *)(v0 + 216) = v3;
  v4 = *(unsigned __int8 *)(v0 + 136);
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = v3;
  *(_WORD *)(v0 + 104) = v4;
  *(_BYTE *)(v0 + 106) = 3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
  *v5 = v0;
  v5[1] = sub_23BBF776C;
  return sub_23BC7215C();
}

uint64_t sub_23BBF776C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BBF77D4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF7808()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BBF7854()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  MEMORY[0x24260EC20](v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF7894()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BBF78E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)();

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 184);
  MEMORY[0x24260EC2C]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74950);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 48) = *(unsigned __int8 *)(v0 + 43);
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_WORD *)(v0 + 72) = 256;
    *(_BYTE *)(v0 + 74) = 3;
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    v2 = sub_23BBF7894;
  }
  else
  {
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_WORD *)(v0 + 40) = 256;
    *(_BYTE *)(v0 + 42) = 3;
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    v2 = sub_23BBF7808;
  }
  *v1 = v0;
  v1[1] = v2;
  return sub_23BC7215C();
}

uint64_t sub_23BBF79FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(v7 + 44) = a7;
  *(_BYTE *)(v7 + 43) = a6;
  *(_QWORD *)(v7 + 112) = a1;
  *(_QWORD *)(v7 + 120) = sub_23BC723F0();
  *(_QWORD *)(v7 + 128) = sub_23BC723E4();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 136) = v12;
  *v12 = v7;
  v12[1] = sub_23BBF7AA0;
  return v14(a3, a4, a5);
}

uint64_t sub_23BBF7AA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 16) = *(unsigned __int8 *)(v2 + 44);
    v4 = v2 + 16;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_DWORD *)(v4 + 23) = 0;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 160) = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    *v5 = v3;
    v5[1] = sub_23BBF7CC0;
  }
  else
  {
    *(_QWORD *)(v2 + 48) = 1;
    v6 = v2 + 48;
    *(_QWORD *)(v6 + 8) = 0;
    *(_QWORD *)(v6 + 16) = 0;
    *(_DWORD *)(v6 + 23) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v6 + 104) = v7;
    *(_QWORD *)(v6 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    *v7 = v3;
    v7[1] = sub_23BBF7B8C;
  }
  return sub_23BC7215C();
}

uint64_t sub_23BBF7B8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(unsigned __int8 *)(*v0 + 43);
  v5 = *v0;
  swift_task_dealloc();
  *(_QWORD *)(v1 + 80) = (v2 << 8) | 1;
  v1 += 80;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 26) = 4;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 88) = v3;
  *v3 = v5;
  v3[1] = sub_23BBF7C1C;
  return sub_23BC7215C();
}

uint64_t sub_23BBF7C1C()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBF7C8C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF7CC0()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBF7D30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_release();
  MEMORY[0x24260EC20](v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF7D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  *(_BYTE *)(v6 + 44) = a6;
  *(_BYTE *)(v6 + 43) = a5;
  *(_QWORD *)(v6 + 112) = a1;
  *(_QWORD *)(v6 + 120) = sub_23BC723F0();
  *(_QWORD *)(v6 + 128) = sub_23BC723E4();
  v12 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 136) = v10;
  *v10 = v6;
  v10[1] = sub_23BBF7E08;
  return v12(a3, a4);
}

uint64_t sub_23BBF7E08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 16) = *(unsigned __int8 *)(v2 + 44);
    v4 = v2 + 16;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_DWORD *)(v4 + 23) = 0;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 160) = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    *v5 = v3;
    v5[1] = sub_23BBF7FEC;
  }
  else
  {
    *(_QWORD *)(v2 + 48) = 0;
    v6 = v2 + 48;
    *(_DWORD *)(v6 + 23) = 0;
    *(_QWORD *)(v6 + 8) = 0;
    *(_QWORD *)(v6 + 16) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v6 + 104) = v7;
    *(_QWORD *)(v6 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74948);
    *v7 = v3;
    v7[1] = sub_23BBF7EF0;
  }
  return sub_23BC7215C();
}

uint64_t sub_23BBF7EF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(unsigned __int8 *)(*v0 + 43);
  v5 = *v0;
  swift_task_dealloc();
  *(_QWORD *)(v1 + 80) = v2 << 8;
  v1 += 80;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 26) = 4;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 88) = v3;
  *v3 = v5;
  v3[1] = sub_23BBF7F7C;
  return sub_23BC7215C();
}

uint64_t sub_23BBF7F7C()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBF7FEC()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBF805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  *(_BYTE *)(v4 + 92) = a3;
  *(_QWORD *)(v4 + 56) = sub_23BC723F0();
  *(_QWORD *)(v4 + 64) = sub_23BC723E4();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 72) = v8;
  *v8 = v4;
  v8[1] = sub_23BBF80EC;
  return v10(a3, a4);
}

uint64_t sub_23BBF80EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBF8174()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF81A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  swift_release();
  if (qword_256A73EE0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_23BC71C7C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A94570);
  MEMORY[0x24260EC2C](v1);
  MEMORY[0x24260EC2C](v1);
  v3 = sub_23BC71C64();
  v4 = sub_23BC724EC();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 80);
  if (v5)
  {
    v7 = *(unsigned __int8 *)(v0 + 92);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 67109378;
    *(_DWORD *)(v0 + 88) = v7;
    sub_23BC72510();
    *(_WORD *)(v8 + 8) = 2080;
    swift_getErrorValue();
    v10 = sub_23BC72768();
    *(_QWORD *)(v0 + 48) = sub_23BBF9080(v10, v11, &v13);
    sub_23BC72510();
    swift_bridgeObjectRelease();
    MEMORY[0x24260EC20](v6);
    MEMORY[0x24260EC20](v6);
    _os_log_impl(&dword_23BBE4000, v3, v4, "Failed to present toast confirmation with added status: %{BOOL}d, error: %s", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24260EDA0](v9, -1, -1);
    MEMORY[0x24260EDA0](v8, -1, -1);

    MEMORY[0x24260EC20](v6);
  }
  else
  {
    MEMORY[0x24260EC20](*(_QWORD *)(v0 + 80));
    MEMORY[0x24260EC20](v6);
    MEMORY[0x24260EC20](v6);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBF83C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BBF840C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 16;
  v5 = *(unsigned __int8 *)(v1 + 96);
  v6 = *(unsigned __int8 *)(v1 + 97);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BBF805C(a1, v4, v5, v6);
}

uint64_t sub_23BBF8478(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BBF84E8()
{
  return objectdestroy_3Tm();
}

uint64_t sub_23BBF84F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_BYTE *)(v1 + 113);
  v8 = *(_BYTE *)(v1 + 112);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23BBF6148;
  return sub_23BBF7D70(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_23BBF8570()
{
  return objectdestroy_3Tm();
}

uint64_t sub_23BBF8578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_QWORD *)(v1 + 112);
  v8 = *(_BYTE *)(v1 + 121);
  v9 = *(_BYTE *)(v1 + 120);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23BBF6148;
  return sub_23BBF79FC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_23BBF8608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23BBF8638(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 40))(a2, a1, started);
  return a2;
}

uint64_t sub_23BBF867C(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_23BBF86C0(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_23BBF86FC()
{
  return objectdestroy_3Tm();
}

uint64_t sub_23BBF8704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 16;
  v6 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF5304;
  return sub_23BBF75AC(a1, v4, v6, v5);
}

uint64_t sub_23BBF876C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23BBF879C()
{
  return objectdestroy_3Tm();
}

uint64_t objectdestroy_3Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BBF87FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 2;
  v6 = v1[12];
  v5 = v1[13];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BBF72E4(a1, v4, v6, v5);
}

unint64_t sub_23BBF8868()
{
  unint64_t result;

  result = qword_256A748D8;
  if (!qword_256A748D8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StackButtonAction, &type metadata for StackButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A748D8);
  }
  return result;
}

unint64_t sub_23BBF88B0()
{
  unint64_t result;

  result = qword_256A748E0;
  if (!qword_256A748E0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StackButtonAction, &type metadata for StackButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A748E0);
  }
  return result;
}

unint64_t sub_23BBF88F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A748E8;
  if (!qword_256A748E8)
  {
    v1 = type metadata accessor for StackButtonState();
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StackButtonState, v1);
    atomic_store(result, (unint64_t *)&qword_256A748E8);
  }
  return result;
}

uint64_t destroy for StackButtonEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for StackButtonEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for StackButtonEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_OWORD *assignWithTake for StackButtonEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StackButtonEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StackButtonEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StackButtonFeature()
{
  return &type metadata for StackButtonFeature;
}

uint64_t sub_23BBF8BFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for StackButtonFeature.TaskIdentifier(uint64_t a1)
{
  return sub_23BBF8C24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23BBF8C24(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14FitnessActions18StackButtonFeatureV14TaskIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BBF8BFC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for StackButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BBF8BFC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23BBF8C24(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for StackButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23BBF8C24(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StackButtonFeature.TaskIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StackButtonFeature.TaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BBF8DA8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23BBF8DB0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StackButtonFeature.TaskIdentifier()
{
  return &type metadata for StackButtonFeature.TaskIdentifier;
}

unint64_t sub_23BBF8DCC()
{
  unint64_t result;

  result = qword_256A748F0;
  if (!qword_256A748F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC745C4, &type metadata for StackButtonFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A748F0);
  }
  return result;
}

uint64_t sub_23BBF8E10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BBF8E24(a1, a2, a3, a4, &qword_256A74938, &qword_256A74940);
}

uint64_t sub_23BBF8E24(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23BC725B8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23BBF9754(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23BBF9030(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BBF8E24(a1, a2, a3, a4, &qword_256A74928, &qword_256A74930);
}

uint64_t sub_23BBF9044(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BBF8E24(a1, a2, a3, a4, &qword_256A74918, &qword_256A74920);
}

uint64_t sub_23BBF9058(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BBF8E24(a1, a2, a3, a4, &qword_256A74908, &qword_256A74910);
}

uint64_t sub_23BBF906C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BBF8E24(a1, a2, a3, a4, &qword_256A748F8, &qword_256A74900);
}

uint64_t sub_23BBF9080(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23BBF9150(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23BBF9870((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23BBF9870((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23BBF9150(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23BC7251C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23BBF9308(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23BC725AC();
  if (!v8)
  {
    sub_23BC725B8();
    __break(1u);
LABEL_17:
    result = sub_23BC725E8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23BBF9308(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23BBF939C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23BBF9574(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23BBF9574(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23BBF939C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23BBF9510(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23BC7257C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23BC725B8();
      __break(1u);
LABEL_10:
      v2 = sub_23BC72318();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23BC725E8();
    __break(1u);
LABEL_14:
    result = sub_23BC725B8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23BBF9510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74960);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23BBF9574(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74960);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23BC725E8();
  __break(1u);
  return result;
}

uint64_t sub_23BBF96C0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_23BBF96DC + 4 * byte_23BC74528[a3]))();
}

uint64_t sub_23BBF96DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_23BC72744();
}

uint64_t sub_23BBF9754(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23BC725E8();
  __break(1u);
  return result;
}

uint64_t sub_23BBF9870(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t PreviewButtonAction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PreviewButtonAction();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBF9A38(v0, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1))
    return sub_23BC727B0();
  sub_23BBF9A7C((uint64_t)v7, (uint64_t)v4);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
  sub_23BBF9AC4();
  sub_23BC727F8();
  return sub_23BBE81C0((uint64_t)v4, &qword_256A74968);
}

uint64_t type metadata accessor for PreviewButtonAction()
{
  uint64_t result;

  result = qword_256A74A88;
  if (!qword_256A74A88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BBF9A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewButtonAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BBF9A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BBF9AC4()
{
  unint64_t result;

  result = qword_256A74978;
  if (!qword_256A74978)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for PreviewLoadError, &type metadata for PreviewLoadError);
    atomic_store(result, (unint64_t *)&qword_256A74978);
  }
  return result;
}

uint64_t sub_23BBF9B0C(char a1)
{
  if (!a1)
    return 0x6570704177656976;
  if (a1 == 1)
    return 0xD000000000000013;
  return 0xD00000000000001BLL;
}

uint64_t sub_23BBF9B70()
{
  char *v0;

  return sub_23BBF9B0C(*v0);
}

uint64_t sub_23BBF9B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBFBDAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BBF9B9C()
{
  sub_23BBFAC50();
  return sub_23BC72828();
}

uint64_t sub_23BBF9BC4()
{
  sub_23BBFAC50();
  return sub_23BC72834();
}

uint64_t sub_23BBF9BEC()
{
  sub_23BBFAC94();
  return sub_23BC72828();
}

uint64_t sub_23BBF9C14()
{
  sub_23BBFAC94();
  return sub_23BC72834();
}

uint64_t sub_23BBF9C3C()
{
  sub_23BBFAD60();
  return sub_23BC72828();
}

uint64_t sub_23BBF9C64()
{
  sub_23BBFAD60();
  return sub_23BC72834();
}

uint64_t sub_23BBF9C8C()
{
  sub_23BBFADA4();
  return sub_23BC72828();
}

uint64_t sub_23BBF9CB4()
{
  sub_23BBFADA4();
  return sub_23BC72834();
}

uint64_t PreviewButtonAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74980);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74988);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74990);
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PreviewButtonAction();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74998);
  v34 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BBFAC50();
  sub_23BC7281C();
  sub_23BBF9A38(v33, (uint64_t)v14);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 2, v4);
  if (v18)
  {
    if (v18 == 1)
    {
      v35 = 0;
      sub_23BBFADA4();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
    }
    else
    {
      v36 = 1;
      sub_23BBFAD60();
      v23 = v26;
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v28);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v15);
  }
  else
  {
    v19 = v29;
    sub_23BBF9A7C((uint64_t)v14, v29);
    v37 = 2;
    sub_23BBFAC94();
    v20 = v30;
    sub_23BC726A8();
    sub_23BBFADE8(&qword_256A749B0, MEMORY[0x24BE37C50]);
    v21 = v32;
    sub_23BC72720();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v21);
    sub_23BBE81C0(v19, &qword_256A74968);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v15);
  }
}

uint64_t PreviewButtonAction.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PreviewButtonAction();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BBF9A38(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BBF9A7C((uint64_t)v8, (uint64_t)v5);
    sub_23BC727B0();
    sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    sub_23BBF9AC4();
    sub_23BC727F8();
    sub_23BBE81C0((uint64_t)v5, &qword_256A74968);
  }
  return sub_23BC727E0();
}

uint64_t PreviewButtonAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;

  v55 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A749E8);
  v4 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v53 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A749F0);
  v51 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v54 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A749F8);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74A00);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PreviewButtonAction();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v46 - v17;
  v19 = a1[3];
  v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_23BBFAC50();
  v59 = v12;
  v20 = v61;
  sub_23BC72810();
  if (!v20)
  {
    v47 = v16;
    v48 = v18;
    v22 = v56;
    v21 = v57;
    v23 = v58;
    v61 = v10;
    v24 = sub_23BC72690();
    v25 = v24;
    if (*(_QWORD *)(v24 + 16) == 1)
    {
      v26 = v59;
      v27 = v61;
      if (*(_BYTE *)(v24 + 32))
      {
        if (*(_BYTE *)(v24 + 32) != 1)
        {
          v64 = 2;
          sub_23BBFAC94();
          v34 = v23;
          v35 = v26;
          sub_23BC72600();
          v36 = v55;
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
          v57 = v25;
          v42 = v41;
          sub_23BBFADE8(&qword_256A74A08, MEMORY[0x24BE37C58]);
          v43 = (uint64_t)v47;
          v44 = v52;
          sub_23BC72684();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v9);
          v45 = (uint64_t)v60;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v43, 0, 2, v42);
          v39 = (uint64_t)v48;
          sub_23BBFAEA0(v43, (uint64_t)v48);
LABEL_12:
          sub_23BBFAEA0(v39, v36);
          return __swift_destroy_boxed_opaque_existential_1(v45);
        }
        v63 = 1;
        sub_23BBFAD60();
        v28 = v54;
        sub_23BC72600();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v21);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v9);
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
        v39 = (uint64_t)v48;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v48, 2, 2, v38);
      }
      else
      {
        v62 = 0;
        sub_23BBFADA4();
        sub_23BC72600();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v50);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v9);
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
        v39 = (uint64_t)v48;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v48, 1, 2, v40);
      }
      v45 = (uint64_t)v60;
      v36 = v55;
      goto LABEL_12;
    }
    v29 = v9;
    v30 = sub_23BC725A0();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v32 = v13;
    v33 = v59;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v29);
  }
  v45 = (uint64_t)v60;
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_23BBFA72C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PreviewButtonAction.init(from:)(a1, a2);
}

uint64_t sub_23BBFA740(_QWORD *a1)
{
  return PreviewButtonAction.encode(to:)(a1);
}

uint64_t sub_23BBFA758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBF9A38(v0, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1))
    return sub_23BC727B0();
  sub_23BBF9A7C((uint64_t)v7, (uint64_t)v5);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
  sub_23BBF9AC4();
  sub_23BC727F8();
  return sub_23BBE81C0((uint64_t)v5, &qword_256A74968);
}

uint64_t sub_23BBFA898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BBF9A38(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BBF9A7C((uint64_t)v8, (uint64_t)v6);
    sub_23BC727B0();
    sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    sub_23BBF9AC4();
    sub_23BC727F8();
    sub_23BBE81C0((uint64_t)v6, &qword_256A74968);
  }
  return sub_23BC727E0();
}

uint64_t _s14FitnessActions19PreviewButtonActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PreviewButtonAction();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74AF8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_23BBF9A38(a1, (uint64_t)v14);
  sub_23BBF9A38(a2, v15);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_23BBF9A38((uint64_t)v14, (uint64_t)v10);
    if (!v16((char *)v15, 2, v4))
    {
      sub_23BBF9A7C(v15, (uint64_t)v7);
      type metadata accessor for PreviewPlayerConfiguration(0);
      sub_23BBF377C(&qword_256A74B00, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
      sub_23BBFBEFC();
      sub_23BBFB910();
      v18 = sub_23BC72804();
      sub_23BBE81C0((uint64_t)v7, &qword_256A74968);
      sub_23BBE81C0((uint64_t)v10, &qword_256A74968);
      sub_23BBFBF40((uint64_t)v14);
      return v18 & 1;
    }
    sub_23BBE81C0((uint64_t)v10, &qword_256A74968);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_23BBE81C0((uint64_t)v14, &qword_256A74AF8);
    v18 = 0;
    return v18 & 1;
  }
  sub_23BBFBF40((uint64_t)v14);
  v18 = 1;
  return v18 & 1;
}

unint64_t sub_23BBFAC50()
{
  unint64_t result;

  result = qword_256A749A0;
  if (!qword_256A749A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74A98, &type metadata for PreviewButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A749A0);
  }
  return result;
}

unint64_t sub_23BBFAC94()
{
  unint64_t result;

  result = qword_256A749A8;
  if (!qword_256A749A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74A48, &type metadata for PreviewButtonAction.FetchedPreviewConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A749A8);
  }
  return result;
}

unint64_t sub_23BBFACD8()
{
  unint64_t result;

  result = qword_256A749C8;
  if (!qword_256A749C8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for PreviewLoadError, &type metadata for PreviewLoadError);
    atomic_store(result, (unint64_t *)&qword_256A749C8);
  }
  return result;
}

unint64_t sub_23BBFAD1C()
{
  unint64_t result;

  result = qword_256A749D0;
  if (!qword_256A749D0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for PreviewLoadError, &type metadata for PreviewLoadError);
    atomic_store(result, (unint64_t *)&qword_256A749D0);
  }
  return result;
}

unint64_t sub_23BBFAD60()
{
  unint64_t result;

  result = qword_256A749D8;
  if (!qword_256A749D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC749F8, &type metadata for PreviewButtonAction.PreviewButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A749D8);
  }
  return result;
}

unint64_t sub_23BBFADA4()
{
  unint64_t result;

  result = qword_256A749E0;
  if (!qword_256A749E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC749A8, &type metadata for PreviewButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A749E0);
  }
  return result;
}

uint64_t sub_23BBFADE8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A74968);
    v6[0] = sub_23BBF377C(&qword_256A749B8, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    v6[1] = sub_23BBF377C(&qword_256A749C0, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    v6[2] = sub_23BBFACD8();
    v6[3] = sub_23BBFAD1C();
    result = MEMORY[0x24260ED10](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BBFAEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewButtonAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BBFAEE4()
{
  return sub_23BBF377C(&qword_256A74A10, (uint64_t (*)(uint64_t))type metadata accessor for PreviewButtonAction, (uint64_t)&protocol conformance descriptor for PreviewButtonAction);
}

uint64_t *initializeBufferWithCopyOfBuffer for PreviewButtonAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v10 = sub_23BC71B5C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = type metadata accessor for PreviewPlayerConfiguration(0);
        v12 = *(int *)(v11 + 20);
        v13 = (uint64_t *)((char *)a1 + v12);
        v14 = (uint64_t *)((char *)a2 + v12);
        v16 = *v14;
        v15 = v14[1];
        *v13 = v16;
        v13[1] = v15;
        v17 = *(int *)(v11 + 24);
        v18 = (uint64_t *)((char *)a1 + v17);
        v19 = (uint64_t *)((char *)a2 + v17);
        v20 = v19[1];
        *v18 = *v19;
        v18[1] = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for PreviewButtonAction(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if (!(_DWORD)result)
    {
      v4 = sub_23BC71B5C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for PreviewPlayerConfiguration(0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *initializeWithCopy for PreviewButtonAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v8 = sub_23BC71B5C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = type metadata accessor for PreviewPlayerConfiguration(0);
      v10 = *(int *)(v9 + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v14 = *(_QWORD *)v12;
      v13 = *((_QWORD *)v12 + 1);
      *(_QWORD *)v11 = v14;
      *((_QWORD *)v11 + 1) = v13;
      v15 = *(int *)(v9 + 24);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithCopy for PreviewButtonAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        return a1;
      sub_23BBE81C0((uint64_t)a1, &qword_256A74968);
      if (!swift_getEnumCaseMultiPayload())
      {
        v21 = sub_23BC71B5C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = type metadata accessor for PreviewPlayerConfiguration(0);
        v23 = *(int *)(v22 + 20);
        v24 = &a1[v23];
        v25 = &a2[v23];
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
        v26 = *(int *)(v22 + 24);
        v27 = &a1[v26];
        v28 = &a2[v26];
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23BBE81C0((uint64_t)a1, &qword_256A74968);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_23BC71B5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v13 = type metadata accessor for PreviewPlayerConfiguration(0);
    v14 = *(int *)(v13 + 20);
    v15 = &a1[v14];
    v16 = &a2[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
    v17 = *(int *)(v13 + 24);
    v18 = &a1[v17];
    v19 = &a2[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

char *initializeWithTake for PreviewButtonAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v8 = sub_23BC71B5C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = type metadata accessor for PreviewPlayerConfiguration(0);
      *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
      *(_OWORD *)&a1[*(int *)(v9 + 24)] = *(_OWORD *)&a2[*(int *)(v9 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithTake for PreviewButtonAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        return a1;
      sub_23BBE81C0((uint64_t)a1, &qword_256A74968);
      if (!swift_getEnumCaseMultiPayload())
      {
        v15 = sub_23BC71B5C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        v16 = type metadata accessor for PreviewPlayerConfiguration(0);
        *(_OWORD *)&a1[*(int *)(v16 + 20)] = *(_OWORD *)&a2[*(int *)(v16 + 20)];
        *(_OWORD *)&a1[*(int *)(v16 + 24)] = *(_OWORD *)&a2[*(int *)(v16 + 24)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23BBE81C0((uint64_t)a1, &qword_256A74968);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_23BC71B5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v13 = type metadata accessor for PreviewPlayerConfiguration(0);
    *(_OWORD *)&a1[*(int *)(v13 + 20)] = *(_OWORD *)&a2[*(int *)(v13 + 20)];
    *(_OWORD *)&a1[*(int *)(v13 + 24)] = *(_OWORD *)&a2[*(int *)(v13 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewButtonAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BBFB720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PreviewButtonAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BBFB77C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BBFB7D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23BBFB810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

void sub_23BBFB854()
{
  unint64_t v0;

  sub_23BBFB8A8();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_23BBFB8A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A74A98)
  {
    type metadata accessor for PreviewPlayerConfiguration(255);
    sub_23BBFB910();
    v0 = sub_23BC727EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A74A98);
  }
}

unint64_t sub_23BBFB910()
{
  unint64_t result;

  result = qword_256A74AA0;
  if (!qword_256A74AA0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for PreviewLoadError, &type metadata for PreviewLoadError);
    atomic_store(result, (unint64_t *)&qword_256A74AA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PreviewButtonAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BBFB9A0 + 4 * byte_23BC74645[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BBFB9D4 + 4 * byte_23BC74640[v4]))();
}

uint64_t sub_23BBFB9D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBFB9DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BBFB9E4);
  return result;
}

uint64_t sub_23BBFB9F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BBFB9F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BBFB9FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BBFBA04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewButtonAction.CodingKeys()
{
  return &type metadata for PreviewButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for PreviewButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for PreviewButtonAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for PreviewButtonAction.PreviewButtonTappedCodingKeys()
{
  return &type metadata for PreviewButtonAction.PreviewButtonTappedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PreviewButtonAction.FetchedPreviewConfigurationCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BBFBA80 + 4 * byte_23BC7464A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BBFBAA0 + 4 * byte_23BC7464F[v4]))();
}

_BYTE *sub_23BBFBA80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BBFBAA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BBFBAA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BBFBAB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BBFBAB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BBFBAC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PreviewButtonAction.FetchedPreviewConfigurationCodingKeys()
{
  return &type metadata for PreviewButtonAction.FetchedPreviewConfigurationCodingKeys;
}

unint64_t sub_23BBFBAE0()
{
  unint64_t result;

  result = qword_256A74AA8;
  if (!qword_256A74AA8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74828, &type metadata for PreviewButtonAction.FetchedPreviewConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AA8);
  }
  return result;
}

unint64_t sub_23BBFBB28()
{
  unint64_t result;

  result = qword_256A74AB0;
  if (!qword_256A74AB0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74980, &type metadata for PreviewButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AB0);
  }
  return result;
}

unint64_t sub_23BBFBB70()
{
  unint64_t result;

  result = qword_256A74AB8;
  if (!qword_256A74AB8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC748A0, &type metadata for PreviewButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AB8);
  }
  return result;
}

unint64_t sub_23BBFBBB8()
{
  unint64_t result;

  result = qword_256A74AC0;
  if (!qword_256A74AC0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC748C8, &type metadata for PreviewButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AC0);
  }
  return result;
}

unint64_t sub_23BBFBC00()
{
  unint64_t result;

  result = qword_256A74AC8;
  if (!qword_256A74AC8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74850, &type metadata for PreviewButtonAction.PreviewButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AC8);
  }
  return result;
}

unint64_t sub_23BBFBC48()
{
  unint64_t result;

  result = qword_256A74AD0;
  if (!qword_256A74AD0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74878, &type metadata for PreviewButtonAction.PreviewButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AD0);
  }
  return result;
}

unint64_t sub_23BBFBC90()
{
  unint64_t result;

  result = qword_256A74AD8;
  if (!qword_256A74AD8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74798, &type metadata for PreviewButtonAction.FetchedPreviewConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AD8);
  }
  return result;
}

unint64_t sub_23BBFBCD8()
{
  unint64_t result;

  result = qword_256A74AE0;
  if (!qword_256A74AE0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC747C0, &type metadata for PreviewButtonAction.FetchedPreviewConfigurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AE0);
  }
  return result;
}

unint64_t sub_23BBFBD20()
{
  unint64_t result;

  result = qword_256A74AE8;
  if (!qword_256A74AE8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC748F0, &type metadata for PreviewButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AE8);
  }
  return result;
}

unint64_t sub_23BBFBD68()
{
  unint64_t result;

  result = qword_256A74AF0;
  if (!qword_256A74AF0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC74918, &type metadata for PreviewButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74AF0);
  }
  return result;
}

uint64_t sub_23BBFBDAC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023BC82030 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023BC82050)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23BBFBEFC()
{
  unint64_t result;

  result = qword_256A74B08[0];
  if (!qword_256A74B08[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for PreviewLoadError, &type metadata for PreviewLoadError);
    atomic_store(result, qword_256A74B08);
  }
  return result;
}

uint64_t sub_23BBFBF40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PreviewButtonAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PreviewButtonEnvironment.init(fetchPreviewConfiguration:presentPreviewPlayer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t destroy for ViewStackButtonEnvironment()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ViewStackButtonEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ViewStackButtonEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for ViewStackButtonEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewStackButtonEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewStackButtonEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for PreviewButtonEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewButtonEnvironment);
}

uint64_t ViewStackButtonEnvironment.init(resolveUpNextCount:navigateToStack:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

ValueMetadata *type metadata accessor for ViewStackButtonEnvironment()
{
  return &type metadata for ViewStackButtonEnvironment;
}

uint64_t CreatePlanAlertEnvironment.init(requireWorkoutPlan:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CreatePlanAlertEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for CreatePlanAlertEnvironment()
{
  return swift_release();
}

_QWORD *assignWithCopy for CreatePlanAlertEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for CreatePlanAlertEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreatePlanAlertEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreatePlanAlertEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanAlertEnvironment()
{
  return &type metadata for CreatePlanAlertEnvironment;
}

uint64_t sub_23BBFC29C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;
  _OWORD v6[2];
  uint64_t v7;

  (*(void (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v6, v2, a2);
  v4[0] = v6[0];
  v4[1] = v6[1];
  v5 = v7;
  sub_23BC727B0();
  sub_23BC7254C();
  return sub_23BBF60B4((uint64_t)v4);
}

uint64_t sub_23BBFC328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_OWORD *, uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;
  char v10;
  _OWORD v12[2];
  uint64_t v13;
  _OWORD v14[3];
  _BYTE v15[48];
  _OWORD v16[2];
  uint64_t v17;
  char v18;

  v6 = type metadata accessor for PreviewButtonFeature.TaskIdentifier(0, a3, a4, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v7 + 16);
  v8(v15, a1, v6);
  v8(v16, a2, v6);
  if ((v15[40] & 1) == 0)
  {
    v8(v14, (uint64_t)v15, v6);
    if ((v18 & 1) != 0)
      goto LABEL_3;
LABEL_5:
    v12[0] = v16[0];
    v12[1] = v16[1];
    v13 = v17;
    v10 = MEMORY[0x24260E77C](v14, v12);
    sub_23BBF60B4((uint64_t)v12);
    sub_23BBF60B4((uint64_t)v14);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v15, v6);
    return v10 & 1;
  }
  v8(v14, (uint64_t)v15, v6);
  if (v18 == 1)
    goto LABEL_5;
LABEL_3:
  sub_23BBF60B4((uint64_t)v14);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 8))(v15, TupleTypeMetadata2);
  v10 = 0;
  return v10 & 1;
}

uint64_t sub_23BBFC468(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  sub_23BBFC29C((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t sub_23BBFC4B4(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  sub_23BBFC29C((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BBFC4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BBFC328(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

__n128 PreviewButtonFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t PreviewButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t State;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(void);
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  _BYTE v109[40];
  char v110;

  v107 = (char *)a4;
  v105 = a3;
  v8 = type metadata accessor for PreviewPlayerConfiguration(0);
  v89[0] = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v90 = (uint64_t)v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89[1] = v10;
  MEMORY[0x24BDAC7A8](v9);
  v91 = (uint64_t)v89 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74B90);
  v102 = *(_QWORD *)(v12 - 8);
  v103 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v104 = (char *)v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v93 = (uint64_t)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v96 = (char *)v89 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v92 = (uint64_t)v89 - v20;
  State = type metadata accessor for PreviewLoadState(0);
  v22 = MEMORY[0x24BDAC7A8](State);
  v24 = (char *)v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v89 - v25;
  v101 = type metadata accessor for PreviewButtonAction();
  v27 = MEMORY[0x24BDAC7A8](v101);
  v29 = (char *)v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a5 + 16) - 8) + 64);
  v31 = MEMORY[0x24BDAC7A8](v27);
  v95 = (char *)v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v32 = v5[1];
  v33 = v5[2];
  v97 = *v5;
  v98 = v33;
  v34 = v5[3];
  v99 = v32;
  v100 = v34;
  v106 = v35;
  v36 = *(void (**)(void))(v35 + 16);
  v108 = (char *)v89 - v37;
  v38 = a2;
  v40 = v39;
  v94 = v36;
  v36();
  sub_23BBFD690((uint64_t)v107, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PreviewButtonAction);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v42 = v41(v29, 2, v14);
  if (!v42)
  {
    (*(void (**)(char *, uint64_t))(v106 + 8))(v108, v40);
    v48 = v38 + *(int *)(type metadata accessor for PreviewButtonState(0, v40, *(_QWORD *)(a5 + 24), v47) + 40);
    sub_23BBF36FC(v48, type metadata accessor for PreviewLoadState);
    sub_23BBF9A7C((uint64_t)v29, v48);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v48, 0, 2, v14);
  }
  if (v42 == 1)
  {
    v44 = *(_QWORD *)(a5 + 24);
    v45 = v38 + *(int *)(type metadata accessor for PreviewButtonState(0, v40, v44, v43) + 40);
    sub_23BBFD690(v45, (uint64_t)v26, type metadata accessor for PreviewLoadState);
    v46 = v41(v26, 2, v14);
    if (v46)
    {
      if (v46 != 1)
        return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v108, v40);
    }
    else
    {
      v55 = (uint64_t)v26;
      v56 = v92;
      sub_23BBF9A7C(v55, v92);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_23BBFCDB0(v56);
        return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v108, v40);
      }
    }
    sub_23BBF36FC(v45, type metadata accessor for PreviewLoadState);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v45, 2, 2, v14);
    v57 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
    v58 = v104;
    v96 = &v104[v57[12]];
    v59 = &v104[v57[16]];
    v107 = &v104[v57[20]];
    v60 = &v104[v57[24]];
    v61 = v108;
    v62 = v40;
    sub_23BC725F4();
    v110 = 0;
    v64 = type metadata accessor for PreviewButtonFeature.TaskIdentifier(0, v40, v44, v63);
    MEMORY[0x24260ED10](&unk_23BC74C78, v64);
    sub_23BC725F4();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v109, v64);
    v65 = *MEMORY[0x24BE2B570];
    v66 = sub_23BC72180();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 104))(v59, v65, v66);
    v67 = v95;
    ((void (*)(char *, char *, uint64_t))v94)(v95, v61, v40);
    v68 = v106;
    v69 = (*(unsigned __int8 *)(v106 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    v70 = (char *)swift_allocObject();
    *((_QWORD *)v70 + 2) = v62;
    *((_QWORD *)v70 + 3) = v44;
    v72 = v99;
    v71 = v100;
    *((_QWORD *)v70 + 4) = v97;
    *((_QWORD *)v70 + 5) = v72;
    *((_QWORD *)v70 + 6) = v98;
    *((_QWORD *)v70 + 7) = v71;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v70[v69], v67, v62);
    *(_QWORD *)v60 = &unk_256A74BB8;
    *((_QWORD *)v60 + 1) = v70;
    swift_retain();
    swift_retain();
    sub_23BBF4AE8();
    sub_23BBF4AEC((uint64_t)v107);
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v58, *MEMORY[0x24BE2B438], v103);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74BA8);
    sub_23BC723A8();
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v61, v62);
  }
  v50 = *(_QWORD *)(a5 + 24);
  v51 = v40;
  v52 = type metadata accessor for PreviewButtonState(0, v40, v50, v43);
  sub_23BBFD690(v38 + *(int *)(v52 + 40), (uint64_t)v24, type metadata accessor for PreviewLoadState);
  if (v41(v24, 2, v14))
  {
    (*(void (**)(char *, uint64_t))(v106 + 8))(v108, v40);
    return sub_23BBF36FC((uint64_t)v24, type metadata accessor for PreviewLoadState);
  }
  else
  {
    v53 = (uint64_t)v96;
    sub_23BBF9A7C((uint64_t)v24, (uint64_t)v96);
    v54 = v93;
    sub_23BBFCD68(v53, v93);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23BBFCDB0(v53);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v108, v51);
      return sub_23BBFCDB0(v54);
    }
    else
    {
      v73 = v91;
      sub_23BBFCDF0(v54, v91);
      v74 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
      v75 = v104;
      v76 = &v104[v74[16]];
      v77 = (uint64_t)&v104[v74[20]];
      v78 = &v104[v74[24]];
      sub_23BC725F4();
      v110 = 1;
      v80 = type metadata accessor for PreviewButtonFeature.TaskIdentifier(0, v51, v50, v79);
      MEMORY[0x24260ED10](&unk_23BC74C78, v80);
      sub_23BC725F4();
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v109, v80);
      v81 = *MEMORY[0x24BE2B570];
      v82 = sub_23BC72180();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(v76, v81, v82);
      v83 = v90;
      sub_23BBFD690(v73, v90, type metadata accessor for PreviewPlayerConfiguration);
      v84 = (*(unsigned __int8 *)(v89[0] + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v89[0] + 80);
      v85 = (_QWORD *)swift_allocObject();
      v85[2] = v51;
      v85[3] = v50;
      v86 = v99;
      v85[4] = v97;
      v85[5] = v86;
      v87 = (uint64_t)v85 + v84;
      v88 = v100;
      v85[6] = v98;
      v85[7] = v88;
      sub_23BBFCDF0(v83, v87);
      *(_QWORD *)v78 = &unk_256A74BA0;
      *((_QWORD *)v78 + 1) = v85;
      swift_retain();
      swift_retain();
      sub_23BBF4AE8();
      sub_23BBF4AEC(v77);
      (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v75, *MEMORY[0x24BE2B438], v103);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A74BA8);
      sub_23BC723A8();
      sub_23BBF36FC(v73, type metadata accessor for PreviewPlayerConfiguration);
      sub_23BBFCDB0((uint64_t)v96);
      return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v108, v51);
    }
  }
}

uint64_t sub_23BBFCD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BBFCDB0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BBFCDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewPlayerConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PreviewButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewButtonFeature.TaskIdentifier);
}

uint64_t sub_23BBFCE40(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v6[4] = a1;
  type metadata accessor for PreviewButtonAction();
  v6[5] = swift_task_alloc();
  type metadata accessor for PreviewPlayerConfiguration(0);
  v9 = swift_task_alloc();
  v6[6] = v9;
  v6[7] = sub_23BC723F0();
  v6[8] = sub_23BC723E4();
  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v10 = (_QWORD *)swift_task_alloc();
  v6[9] = v10;
  *v10 = v6;
  v10[1] = sub_23BBFCF1C;
  return v12(v9, a6);
}

uint64_t sub_23BBFCF1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 88) = sub_23BC723CC();
  *(_QWORD *)(v2 + 96) = v3;
  return swift_task_switch();
}

uint64_t sub_23BBFCFA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[5];
  sub_23BBFD690(v0[6], v1, type metadata accessor for PreviewPlayerConfiguration);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 2, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74CD0);
  *v3 = v0;
  v3[1] = sub_23BBFD058;
  return sub_23BC7215C();
}

uint64_t sub_23BBFD058()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for PreviewButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BBFD0B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_23BBF36FC(v1, type metadata accessor for PreviewPlayerConfiguration);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBFD110()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for PreviewButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BBFD170()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  MEMORY[0x24260EC20](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBFD1C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for PreviewButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BBFD220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint8_t *v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  _BYTE *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)();
  uint64_t v15;

  if (qword_256A73EE0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_23BC71C7C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A94570);
  MEMORY[0x24260EC2C](v1);
  MEMORY[0x24260EC2C](v1);
  v3 = sub_23BC71C64();
  v4 = sub_23BC724EC();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 80);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    MEMORY[0x24260EC2C](v6);
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v9;
    sub_23BC72510();
    *v8 = v9;
    MEMORY[0x24260EC20](v6);
    MEMORY[0x24260EC20](v6);
    _os_log_impl(&dword_23BBE4000, v3, v4, "Failed to fetch preview URL: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74868);
    swift_arrayDestroy();
    MEMORY[0x24260EDA0](v8, -1, -1);
    MEMORY[0x24260EDA0](v7, -1, -1);
  }
  else
  {
    MEMORY[0x24260EC20](*(_QWORD *)(v0 + 80));
    MEMORY[0x24260EC20](v6);
  }

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 80);
  MEMORY[0x24260EC2C]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74950);
  v10 = swift_dynamicCast();
  v11 = *(_BYTE **)(v0 + 40);
  if ((v10 & 1) != 0)
  {
    *v11 = *(_BYTE *)(v0 + 128);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 2, v12);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74CD0);
    v14 = sub_23BBFD1C0;
  }
  else
  {
    *v11 = 0;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 0, 2, v15);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74CD0);
    v14 = sub_23BBFD110;
  }
  *v13 = v0;
  v13[1] = v14;
  return sub_23BC7215C();
}

uint64_t sub_23BBFD518(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v6[2] = sub_23BC723F0();
  v6[3] = sub_23BC723E4();
  v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  v6[4] = v9;
  *v9 = v6;
  v9[1] = sub_23BBFD5A0;
  return v11(a6);
}

uint64_t sub_23BBFD5A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BBFD628()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBFD65C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BBFD690(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BBFD6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PreviewPlayerConfiguration(0) - 8) + 80);
  v2 = (v1 + 64) & ~v1;
  swift_release();
  swift_release();
  v3 = sub_23BC71B5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BBFD780(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PreviewPlayerConfiguration(0) - 8) + 80);
  v5 = v1[4];
  v6 = v1[5];
  v7 = (int *)v1[6];
  v8 = v1[7];
  v9 = (uint64_t)v1 + ((v4 + 64) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23BBF5304;
  return sub_23BBFD518(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_23BBFD828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BBFD89C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(v1[2] - 8) + 80);
  v5 = (int *)v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = (uint64_t)v1 + ((v4 + 64) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23BBF6148;
  return sub_23BBFCE40(a1, v5, v6, v7, v8, v9);
}

uint64_t PreviewButtonFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_23BBFD94C()
{
  return sub_23BBFD994(&qword_256A74BC0, (uint64_t)&protocol conformance descriptor for PreviewButtonAction);
}

uint64_t sub_23BBFD970()
{
  return sub_23BBFD994(qword_256A74BC8, (uint64_t)&protocol conformance descriptor for PreviewButtonAction);
}

uint64_t sub_23BBFD994(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PreviewButtonAction();
    result = MEMORY[0x24260ED10](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BBFD9D4()
{
  JUMPOUT(0x24260ED10);
}

uint64_t type metadata accessor for PreviewButtonFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewButtonFeature);
}

uint64_t sub_23BBFD9F4(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  BOOL v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  v4 = v3 == 1;
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t))(v5 - 8))(a1);
  *(_BYTE *)(a1 + 40) = v4;
  return a1;
}

uint64_t sub_23BBFDA50(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = v4 == 1;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v5;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_23BBFDAE4(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t sub_23BBFDB48(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23BBFDB84(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BBFDBD0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_23BBFDBEC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

void sub_23BBFDC14()
{
  JUMPOUT(0x24260ED10);
}

BOOL static PreviewLoadError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PreviewLoadError.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t sub_23BBFDC6C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6569766572506F6ELL;
  else
    return 0x6961466863746566;
}

BOOL sub_23BBFDCB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23BBFDCC8()
{
  char *v0;

  return sub_23BBFDC6C(*v0);
}

uint64_t sub_23BBFDCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC02E9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BBFDCF4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23BBFDD00()
{
  sub_23BBFDFC4();
  return sub_23BC72828();
}

uint64_t sub_23BBFDD28()
{
  sub_23BBFDFC4();
  return sub_23BC72834();
}

uint64_t sub_23BBFDD50()
{
  sub_23BBFE04C();
  return sub_23BC72828();
}

uint64_t sub_23BBFDD78()
{
  sub_23BBFE04C();
  return sub_23BC72834();
}

uint64_t sub_23BBFDDA0()
{
  sub_23BBFE008();
  return sub_23BC72828();
}

uint64_t sub_23BBFDDC8()
{
  sub_23BBFE008();
  return sub_23BC72834();
}

uint64_t PreviewLoadError.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74CD8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74CE0);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74CE8);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BBFDFC4();
  sub_23BC7281C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23BBFE008();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23BBFE04C();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_23BBFDFC4()
{
  unint64_t result;

  result = qword_256A74CF0;
  if (!qword_256A74CF0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7591C, &type metadata for PreviewLoadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74CF0);
  }
  return result;
}

unint64_t sub_23BBFE008()
{
  unint64_t result;

  result = qword_256A74CF8;
  if (!qword_256A74CF8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC758CC, &type metadata for PreviewLoadError.NoPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74CF8);
  }
  return result;
}

unint64_t sub_23BBFE04C()
{
  unint64_t result;

  result = qword_256A74D00;
  if (!qword_256A74D00)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7587C, &type metadata for PreviewLoadError.FetchFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74D00);
  }
  return result;
}

uint64_t PreviewLoadError.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t PreviewLoadError.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D08);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D10);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D18);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BBFDFC4();
  v11 = v33;
  sub_23BC72810();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23BC72690();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23BC725A0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v21 = &type metadata for PreviewLoadError;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23BBFE008();
    sub_23BC72600();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23BBFE04C();
    v22 = v6;
    sub_23BC72600();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23BBFE43C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PreviewLoadError.init(from:)(a1, a2);
}

uint64_t sub_23BBFE450(_QWORD *a1)
{
  return PreviewLoadError.encode(to:)(a1);
}

uint64_t PreviewPlayerConfiguration.streamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23BC71B5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PreviewPlayerConfiguration.contentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PreviewPlayerConfiguration(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PreviewPlayerConfiguration(uint64_t a1)
{
  return sub_23BC00E84(a1, qword_256A74E20);
}

uint64_t PreviewPlayerConfiguration.streamingProgramIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PreviewPlayerConfiguration(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PreviewPlayerConfiguration.init(streamingURL:contentIdentifier:streamingProgramIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;

  v12 = sub_23BC71B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for PreviewPlayerConfiguration(0);
  v14 = (_QWORD *)(a6 + *(int *)(result + 20));
  *v14 = a2;
  v14[1] = a3;
  v15 = (_QWORD *)(a6 + *(int *)(result + 24));
  *v15 = a4;
  v15[1] = a5;
  return result;
}

uint64_t PreviewPlayerConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23BC71B5C();
  sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23BC72264();
  v1 = type metadata accessor for PreviewPlayerConfiguration(0);
  if (*(_QWORD *)(v0 + *(int *)(v1 + 20) + 8))
  {
    sub_23BC727BC();
    swift_bridgeObjectRetain();
    sub_23BC7230C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BC727BC();
  }
  if (!*(_QWORD *)(v0 + *(int *)(v1 + 24) + 8))
    return sub_23BC727BC();
  sub_23BC727BC();
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BBFE6CC(char a1)
{
  if (!a1)
    return 0x6E696D6165727473;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0xD00000000000001ALL;
}

uint64_t sub_23BBFE730()
{
  char *v0;

  return sub_23BBFE6CC(*v0);
}

uint64_t sub_23BBFE738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC02F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BBFE75C()
{
  sub_23BC00E2C();
  return sub_23BC72828();
}

uint64_t sub_23BBFE784()
{
  sub_23BC00E2C();
  return sub_23BC72834();
}

uint64_t PreviewPlayerConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC00E2C();
  sub_23BC7281C();
  v8[15] = 0;
  sub_23BC71B5C();
  sub_23BBF377C(&qword_256A74D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_23BC72720();
  if (!v1)
  {
    type metadata accessor for PreviewPlayerConfiguration(0);
    v8[14] = 1;
    sub_23BC726B4();
    v8[13] = 2;
    sub_23BC726B4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PreviewPlayerConfiguration.hashValue.getter()
{
  sub_23BC727A4();
  PreviewPlayerConfiguration.hash(into:)();
  return sub_23BC727E0();
}

uint64_t PreviewPlayerConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;

  v24 = a2;
  v25 = sub_23BC71B5C();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D40);
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PreviewPlayerConfiguration(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC00E2C();
  v27 = v7;
  v11 = v29;
  sub_23BC72810();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = v5;
  v32 = 0;
  sub_23BBF377C(&qword_256A74D48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v12 = v25;
  v13 = v26;
  v14 = v27;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v13, v12);
  v31 = 1;
  v15 = sub_23BC72618();
  v16 = (uint64_t *)&v10[*(int *)(v8 + 20)];
  *v16 = v15;
  v16[1] = v17;
  v30 = 2;
  v18 = sub_23BC72618();
  v19 = v14;
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v28);
  v22 = (uint64_t *)&v10[*(int *)(v8 + 24)];
  *v22 = v18;
  v22[1] = v21;
  sub_23BBFD690((uint64_t)v10, v24, type metadata accessor for PreviewPlayerConfiguration);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23BBF36FC((uint64_t)v10, type metadata accessor for PreviewPlayerConfiguration);
}

uint64_t sub_23BBFEC3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PreviewPlayerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23BBFEC50(_QWORD *a1)
{
  return PreviewPlayerConfiguration.encode(to:)(a1);
}

uint64_t sub_23BBFEC64()
{
  sub_23BC727A4();
  PreviewPlayerConfiguration.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BBFECA4()
{
  sub_23BC727A4();
  PreviewPlayerConfiguration.hash(into:)();
  return sub_23BC727E0();
}

uint64_t PreviewLoadState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t State;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for PreviewLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBFD690(v0, (uint64_t)v7, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1))
    return sub_23BC727B0();
  sub_23BBF9A7C((uint64_t)v7, (uint64_t)v4);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
  sub_23BBF9AC4();
  sub_23BC727F8();
  return sub_23BBE81C0((uint64_t)v4, &qword_256A74968);
}

uint64_t sub_23BBFEE30(char a1)
{
  return *(_QWORD *)&aIdle_6[8 * a1];
}

uint64_t sub_23BBFEE50()
{
  char *v0;

  return sub_23BBFEE30(*v0);
}

uint64_t sub_23BBFEE58()
{
  sub_23BC00EB8();
  return sub_23BC72828();
}

uint64_t sub_23BBFEE80()
{
  sub_23BC00EB8();
  return sub_23BC72834();
}

uint64_t sub_23BBFEEA8()
{
  sub_23BC00EFC();
  return sub_23BC72828();
}

uint64_t sub_23BBFEED0()
{
  sub_23BC00EFC();
  return sub_23BC72834();
}

uint64_t sub_23BBFEEF8()
{
  sub_23BC00F40();
  return sub_23BC72828();
}

uint64_t sub_23BBFEF20()
{
  sub_23BC00F40();
  return sub_23BC72834();
}

uint64_t sub_23BBFEF48()
{
  sub_23BC00F84();
  return sub_23BC72828();
}

uint64_t sub_23BBFEF70()
{
  sub_23BC00F84();
  return sub_23BC72834();
}

uint64_t PreviewLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t State;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D50);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D58);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D60);
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for PreviewLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D68);
  v34 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC00EB8();
  sub_23BC7281C();
  sub_23BBFD690(v33, (uint64_t)v14, type metadata accessor for PreviewLoadState);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 2, v4);
  if (v18)
  {
    if (v18 == 1)
    {
      v35 = 0;
      sub_23BC00F84();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
    }
    else
    {
      v36 = 1;
      sub_23BC00F40();
      v23 = v26;
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v28);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v15);
  }
  else
  {
    v19 = v29;
    sub_23BBF9A7C((uint64_t)v14, v29);
    v37 = 2;
    sub_23BC00EFC();
    v20 = v30;
    sub_23BC726A8();
    sub_23BC00FC8(&qword_256A749B0, MEMORY[0x24BE37C50]);
    v21 = v32;
    sub_23BC72720();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v21);
    sub_23BBE81C0(v19, &qword_256A74968);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v15);
  }
}

uint64_t PreviewLoadState.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t State;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for PreviewLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BBFD690(v1, (uint64_t)v8, type metadata accessor for PreviewLoadState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BBF9A7C((uint64_t)v8, (uint64_t)v5);
    sub_23BC727B0();
    sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    sub_23BBF9AC4();
    sub_23BC727F8();
    sub_23BBE81C0((uint64_t)v5, &qword_256A74968);
  }
  return sub_23BC727E0();
}

uint64_t PreviewLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t State;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;

  v55 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D90);
  v4 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v53 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74D98);
  v51 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v54 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74DA0);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74DA8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for PreviewLoadState(0);
  v14 = MEMORY[0x24BDAC7A8](State);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v46 - v17;
  v19 = a1[3];
  v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_23BC00EB8();
  v59 = v12;
  v20 = v61;
  sub_23BC72810();
  if (!v20)
  {
    v47 = v16;
    v48 = v18;
    v22 = v56;
    v21 = v57;
    v23 = v58;
    v61 = v10;
    v24 = sub_23BC72690();
    v25 = v24;
    if (*(_QWORD *)(v24 + 16) == 1)
    {
      v26 = v59;
      v27 = v61;
      if (*(_BYTE *)(v24 + 32))
      {
        if (*(_BYTE *)(v24 + 32) != 1)
        {
          v64 = 2;
          sub_23BC00EFC();
          v34 = v23;
          v35 = v26;
          sub_23BC72600();
          v36 = v55;
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
          v57 = v25;
          v42 = v41;
          sub_23BC00FC8(&qword_256A74A08, MEMORY[0x24BE37C58]);
          v43 = (uint64_t)v47;
          v44 = v52;
          sub_23BC72684();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v9);
          v45 = (uint64_t)v60;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v43, 0, 2, v42);
          v39 = (uint64_t)v48;
          sub_23BC01080(v43, (uint64_t)v48);
LABEL_12:
          sub_23BC01080(v39, v36);
          return __swift_destroy_boxed_opaque_existential_1(v45);
        }
        v63 = 1;
        sub_23BC00F40();
        v28 = v54;
        sub_23BC72600();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v21);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v9);
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
        v39 = (uint64_t)v48;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v48, 2, 2, v38);
      }
      else
      {
        v62 = 0;
        sub_23BC00F84();
        sub_23BC72600();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v50);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v9);
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
        v39 = (uint64_t)v48;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v48, 1, 2, v40);
      }
      v45 = (uint64_t)v60;
      v36 = v55;
      goto LABEL_12;
    }
    v29 = v9;
    v30 = sub_23BC725A0();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v32 = State;
    v33 = v59;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v29);
  }
  v45 = (uint64_t)v60;
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_23BBFF9FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PreviewLoadState.init(from:)(a1, a2);
}

uint64_t sub_23BBFFA10(_QWORD *a1)
{
  return PreviewLoadState.encode(to:)(a1);
}

uint64_t sub_23BBFFA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBFD690(v0, (uint64_t)v7, type metadata accessor for PreviewLoadState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1))
    return sub_23BC727B0();
  sub_23BBF9A7C((uint64_t)v7, (uint64_t)v5);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
  sub_23BBF9AC4();
  sub_23BC727F8();
  return sub_23BBE81C0((uint64_t)v5, &qword_256A74968);
}

uint64_t sub_23BBFFB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BBFD690(v1, (uint64_t)v8, type metadata accessor for PreviewLoadState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BBF9A7C((uint64_t)v8, (uint64_t)v6);
    sub_23BC727B0();
    sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    sub_23BBF9AC4();
    sub_23BC727F8();
    sub_23BBE81C0((uint64_t)v6, &qword_256A74968);
  }
  return sub_23BC727E0();
}

uint64_t PreviewButtonState.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t PreviewButtonState.localizedTitle.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PreviewButtonState.loadState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BBFD690(v2 + *(int *)(a1 + 40), a2, type metadata accessor for PreviewLoadState);
}

uint64_t PreviewButtonState.loadState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BC010C4(a1, v2 + *(int *)(a2 + 40));
}

uint64_t (*PreviewButtonState.loadState.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PreviewButtonState.init(identifier:locale:loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t State;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a6;
  v38 = a5;
  v33 = a3;
  v34 = a1;
  v36 = a2;
  v35 = sub_23BC71C4C();
  v9 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v12);
  State = type metadata accessor for PreviewLoadState(0);
  v14 = MEMORY[0x24BDAC7A8](State);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a4);
  sub_23BBFD690(a3, (uint64_t)v16, type metadata accessor for PreviewLoadState);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v23 = v35;
  v22 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v36, v35);
  v24 = sub_23BC72300();
  v26 = v25;
  sub_23BBF36FC(v33, type metadata accessor for PreviewLoadState);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v23);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v34, a4);
  v27 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v37, v19, a4);
  v29 = type metadata accessor for PreviewButtonState(0, a4, v38, v28);
  result = sub_23BC01080((uint64_t)v16, v27 + *(int *)(v29 + 40));
  v31 = (uint64_t *)(v27 + *(int *)(v29 + 36));
  *v31 = v24;
  v31[1] = v26;
  return result;
}

uint64_t PreviewButtonState.init(identifier:loadState:localizedTitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, a1, a5);
  v14 = type metadata accessor for PreviewButtonState(0, a5, a6, v13);
  result = sub_23BC01080(a2, a7 + *(int *)(v14 + 40));
  v16 = (_QWORD *)(a7 + *(int *)(v14 + 36));
  *v16 = a3;
  v16[1] = a4;
  return result;
}

uint64_t sub_23BC00060(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A696C61636F6CLL && a2 == 0xEE00656C74695464 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BC001CC(char a1)
{
  return *(_QWORD *)&aIdentifilocali[8 * a1];
}

uint64_t sub_23BC001EC()
{
  char *v0;

  return sub_23BC001CC(*v0);
}

uint64_t sub_23BC001F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC00060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC00224@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC030EC();
  *a1 = result;
  return result;
}

uint64_t sub_23BC0024C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7569C, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC00280(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7569C, a1);
  return sub_23BC72834();
}

uint64_t PreviewButtonState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  v13 = a2;
  v5 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for PreviewButtonState.CodingKeys(255, v14, v5, a4);
  MEMORY[0x24260ED10](&unk_23BC7569C, v6);
  v7 = sub_23BC7272C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v18 = 0;
  v11 = v15;
  sub_23BC72720();
  if (!v11)
  {
    v17 = 1;
    sub_23BC726E4();
    v16 = 2;
    type metadata accessor for PreviewLoadState(0);
    sub_23BBF377C(&qword_256A74DB0, type metadata accessor for PreviewLoadState, (uint64_t)&protocol conformance descriptor for PreviewLoadState);
    sub_23BC72720();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t PreviewButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t State;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;

  v34 = a4;
  State = type metadata accessor for PreviewLoadState(0);
  v7 = MEMORY[0x24BDAC7A8](State);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PreviewButtonState.CodingKeys(255, a2, a3, v10);
  MEMORY[0x24260ED10](&unk_23BC7569C, v11);
  v42 = sub_23BC7269C();
  v37 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v13 = (char *)&v33 - v12;
  v39 = (char *)a3;
  v40 = a2;
  v15 = type metadata accessor for PreviewButtonState(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v33 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v43 = v13;
  v19 = v44;
  sub_23BC72810();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v44 = v16;
  v20 = (uint64_t)a1;
  v21 = v37;
  v22 = v38;
  v47 = 0;
  v23 = v40;
  sub_23BC72684();
  v24 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v39 = v18;
  v24(v18, v41, v23);
  v46 = 1;
  v25 = sub_23BC72648();
  v41 = (char *)v15;
  v26 = (uint64_t *)&v39[*(int *)(v15 + 36)];
  *v26 = v25;
  v26[1] = v27;
  v45 = 2;
  sub_23BBF377C(&qword_256A74DB8, type metadata accessor for PreviewLoadState, (uint64_t)&protocol conformance descriptor for PreviewLoadState);
  v28 = (uint64_t)v36;
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v43, v42);
  v29 = v41;
  v30 = v39;
  sub_23BC01080(v28, (uint64_t)&v39[*((int *)v41 + 10)]);
  v31 = v44;
  (*(void (**)(uint64_t, char *, char *))(v44 + 16))(v34, v30, v29);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return (*(uint64_t (**)(char *, char *))(v31 + 8))(v30, v29);
}

uint64_t sub_23BC007CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PreviewButtonState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BC007E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PreviewButtonState.encode(to:)(a1, a2, a3, a4);
}

uint64_t PreviewButtonState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t State;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for PreviewLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC72264();
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  sub_23BBFD690(v2 + *(int *)(a2 + 40), (uint64_t)v10, type metadata accessor for PreviewLoadState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 2, v4))
    return sub_23BC727B0();
  sub_23BBF9A7C((uint64_t)v10, (uint64_t)v7);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74970, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
  sub_23BBF9AC4();
  sub_23BC727F8();
  return sub_23BBE81C0((uint64_t)v7, &qword_256A74968);
}

uint64_t static PreviewButtonState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  if ((sub_23BC7227C() & 1) != 0
    && ((v9 = type metadata accessor for PreviewButtonState(0, a3, a4, v8),
         v10 = *(int *)(v9 + 36),
         v11 = *(_QWORD *)(a1 + v10),
         v12 = *(_QWORD *)(a1 + v10 + 8),
         v13 = (_QWORD *)(a2 + v10),
         v11 == *v13)
      ? (v14 = v12 == v13[1])
      : (v14 = 0),
        v14 || (sub_23BC72744() & 1) != 0))
  {
    return _s14FitnessActions16PreviewLoadStateO2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v9 + 40), a2 + *(int *)(v9 + 40));
  }
  else
  {
    return 0;
  }
}

uint64_t PreviewButtonState.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  PreviewButtonState.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t sub_23BC00A90(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  PreviewButtonState.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BC00AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static PreviewButtonState.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t _s14FitnessActions16PreviewLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t State;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for PreviewLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75080);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_23BBFD690(a1, (uint64_t)v14, type metadata accessor for PreviewLoadState);
  sub_23BBFD690(a2, v15, type metadata accessor for PreviewLoadState);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_23BBFD690((uint64_t)v14, (uint64_t)v10, type metadata accessor for PreviewLoadState);
    if (!v16((char *)v15, 2, v4))
    {
      sub_23BBF9A7C(v15, (uint64_t)v7);
      type metadata accessor for PreviewPlayerConfiguration(0);
      sub_23BBF377C(&qword_256A74B00, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
      sub_23BBFBEFC();
      sub_23BBFB910();
      v18 = sub_23BC72804();
      sub_23BBE81C0((uint64_t)v7, &qword_256A74968);
      sub_23BBE81C0((uint64_t)v10, &qword_256A74968);
      sub_23BBF36FC((uint64_t)v14, type metadata accessor for PreviewLoadState);
      return v18 & 1;
    }
    sub_23BBE81C0((uint64_t)v10, &qword_256A74968);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_23BBE81C0((uint64_t)v14, &qword_256A75080);
    v18 = 0;
    return v18 & 1;
  }
  sub_23BBF36FC((uint64_t)v14, type metadata accessor for PreviewLoadState);
  v18 = 1;
  return v18 & 1;
}

uint64_t _s14FitnessActions26PreviewPlayerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;

  if ((MEMORY[0x24260DD8C]() & 1) == 0)
    return 0;
  v4 = type metadata accessor for PreviewPlayerConfiguration(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (!v7)
  {
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v10 = *v6 == *v8 && v7 == v9;
  if (v10 || (v11 = sub_23BC72744(), result = 0, (v11 & 1) != 0))
  {
LABEL_11:
    v13 = *(int *)(v4 + 24);
    v14 = (_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    v17 = v16[1];
    if (v15)
    {
      if (v17)
      {
        v18 = *v14 == *v16 && v15 == v17;
        if (v18 || (sub_23BC72744() & 1) != 0)
          return 1;
      }
    }
    else if (!v17)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_23BC00E2C()
{
  unint64_t result;

  result = qword_256A74D30;
  if (!qword_256A74D30)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7582C, &type metadata for PreviewPlayerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74D30);
  }
  return result;
}

uint64_t type metadata accessor for PreviewLoadState(uint64_t a1)
{
  return sub_23BC00E84(a1, qword_256A74ED0);
}

uint64_t sub_23BC00E84(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23BC00EB8()
{
  unint64_t result;

  result = qword_256A74D70;
  if (!qword_256A74D70)
  {
    result = MEMORY[0x24260ED10](&unk_23BC757DC, &type metadata for PreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74D70);
  }
  return result;
}

unint64_t sub_23BC00EFC()
{
  unint64_t result;

  result = qword_256A74D78;
  if (!qword_256A74D78)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7578C, &type metadata for PreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74D78);
  }
  return result;
}

unint64_t sub_23BC00F40()
{
  unint64_t result;

  result = qword_256A74D80;
  if (!qword_256A74D80)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7573C, &type metadata for PreviewLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74D80);
  }
  return result;
}

unint64_t sub_23BC00F84()
{
  unint64_t result;

  result = qword_256A74D88;
  if (!qword_256A74D88)
  {
    result = MEMORY[0x24260ED10](&unk_23BC756EC, &type metadata for PreviewLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74D88);
  }
  return result;
}

uint64_t sub_23BC00FC8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A74968);
    v6[0] = sub_23BBF377C(&qword_256A749B8, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    v6[1] = sub_23BBF377C(&qword_256A749C0, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
    v6[2] = sub_23BBFACD8();
    v6[3] = sub_23BBFAD1C();
    result = MEMORY[0x24260ED10](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC01080(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for PreviewLoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t sub_23BC010C4(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for PreviewLoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t type metadata accessor for PreviewButtonState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewButtonState);
}

uint64_t type metadata accessor for PreviewButtonState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewButtonState.CodingKeys);
}

uint64_t sub_23BC01124()
{
  return sub_23BBF377C(&qword_256A74B00, type metadata accessor for PreviewPlayerConfiguration, (uint64_t)&protocol conformance descriptor for PreviewPlayerConfiguration);
}

uint64_t sub_23BC01150()
{
  return sub_23BBF377C(&qword_256A74DC0, type metadata accessor for PreviewLoadState, (uint64_t)&protocol conformance descriptor for PreviewLoadState);
}

void sub_23BC0117C()
{
  JUMPOUT(0x24260ED10);
}

ValueMetadata *type metadata accessor for PreviewLoadError()
{
  return &type metadata for PreviewLoadError;
}

uint64_t *initializeBufferWithCopyOfBuffer for PreviewPlayerConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BC71B5C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PreviewPlayerConfiguration(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BC71B5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreviewPlayerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_23BC71B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreviewPlayerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_23BC71B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PreviewPlayerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BC71B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for PreviewPlayerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23BC71B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewPlayerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC014C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_23BC71B5C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewPlayerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC01560(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BC71B5C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_23BC015DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71B5C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PreviewLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC0165C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PreviewLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC016B8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BC01710()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PreviewLoadState(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23BC017A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_23BC71B5C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  if ((((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 1)
    v13 = 1;
  else
    v13 = (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v14 = v10 | *(_DWORD *)(v6 + 80);
  if ((v14 & 0x1000F8) != 0 || v13 + 1 + ((v11 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v11) > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v14 & 0xF8 | 7u) + 16) & ~(unint64_t)(v14 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    v27 = *(_QWORD *)(v9 + 64) + 7;
    v28 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v17 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v17 = *v18;
    v17[1] = v18[1];
    v19 = (_BYTE *)(((unint64_t)v17 + v11 + 16) & ~v11);
    v20 = (_BYTE *)(((unint64_t)v18 + v11 + 16) & ~v11);
    v21 = v20[v13];
    swift_bridgeObjectRetain();
    if (v21 > 1)
    {
      memcpy(v19, v20, v13 + 1);
    }
    else if (v21 == 1)
    {
      *v19 = *v20;
      v19[v13] = 1;
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v19, v20, v28);
      v22 = (_QWORD *)((unint64_t)&v19[v27] & 0xFFFFFFFFFFFFFFF8);
      v23 = (_QWORD *)((unint64_t)&v20[v27] & 0xFFFFFFFFFFFFFFF8);
      *v22 = *v23;
      v22[1] = v23[1];
      v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
      v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v24 = *v25;
      v24[1] = v25[1];
      v19[v13] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_23BC0198C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  result = sub_23BC71B5C();
  v6 = *(_QWORD *)(result - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (v4 + v7 + 16) & ~v7;
  v9 = ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 <= 1)
    v9 = 1;
  if (!*(_BYTE *)(v8 + v9))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, result);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23BC01A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = sub_23BC71B5C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 23;
  v13 = (unint64_t)v7 + v11 + 23;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (_BYTE *)(v13 & v14);
  v16 = (_BYTE *)(((unint64_t)v8 + v12) & v14);
  v17 = *(_QWORD *)(v10 + 64) + 7;
  if ((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 1)
    v18 = 1;
  else
    v18 = (((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v19 = v16[v18];
  swift_bridgeObjectRetain();
  if (v19 > 1)
  {
    memcpy(v15, v16, v18 + 1);
  }
  else if (v19 == 1)
  {
    *v15 = *v16;
    v15[v18] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v15, v16, v9);
    v20 = (_QWORD *)((unint64_t)&v15[v17] & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)((unint64_t)&v16[v17] & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v20[1] = v21[1];
    v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v22[1] = v23[1];
    v15[v18] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23BC01BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = sub_23BC71B5C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 23;
  v13 = (unint64_t)v7 + v11 + 23;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (unsigned __int8 *)(v13 & v14);
  v16 = (unsigned __int8 *)(((unint64_t)v8 + v12) & v14);
  v17 = *(_QWORD *)(v10 + 64) + 7;
  if ((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 1)
    v18 = 1;
  else
    v18 = (((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v19 = v15[v18];
  v20 = v16[v18];
  if (v19 > 1)
  {
    if (v20 <= 1)
    {
      if (v20 != 1)
      {
LABEL_25:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v15, v16, v9);
        v25 = (_QWORD *)((unint64_t)&v15[v17] & 0xFFFFFFFFFFFFFFF8);
        v26 = (_QWORD *)((unint64_t)&v16[v17] & 0xFFFFFFFFFFFFFFF8);
        *v25 = *v26;
        v25[1] = v26[1];
        v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
        v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v27 = *v28;
        v27[1] = v28[1];
        v15[v18] = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      goto LABEL_17;
    }
LABEL_20:
    memcpy(v15, v16, v18 + 1);
    return a1;
  }
  if (v20 > 1)
  {
    if (v19 != 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v15, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_20;
  }
  if (v15 != v16)
  {
    if (v19 != 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v15, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v16[v18];
      v21 = v20 - 2;
      if (v20 >= 2)
      {
        v22 = v18 <= 3 ? v18 : 4;
        if (v22)
        {
          if (v22 == 4)
            v23 = *(_DWORD *)v16;
          else
            v23 = *v16;
          v24 = (v23 | (v21 << (8 * v18))) + 2;
          v20 = v23 + 2;
          if (v18 < 4)
            v20 = v24;
        }
      }
    }
    if (v20 != 1)
      goto LABEL_25;
LABEL_17:
    *v15 = *v16;
    v15[v18] = 1;
  }
  return a1;
}

uint64_t sub_23BC01E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  _OWORD *v20;
  _OWORD *v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = sub_23BC71B5C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 23;
  v13 = (unint64_t)v7 + v11 + 23;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (_BYTE *)(v13 & v14);
  v16 = (_BYTE *)(((unint64_t)v8 + v12) & v14);
  v17 = *(_QWORD *)(v10 + 64) + 7;
  if ((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 1)
    v18 = 1;
  else
    v18 = (((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v19 = v16[v18];
  if (v19 > 1)
  {
    memcpy(v15, v16, v18 + 1);
  }
  else if (v19 == 1)
  {
    *v15 = *v16;
    v15[v18] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v15, v16, v9);
    v20 = (_OWORD *)((unint64_t)&v15[v17] & 0xFFFFFFFFFFFFFFF8);
    v21 = (_OWORD *)((unint64_t)&v16[v17] & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
    v15[v18] = 0;
  }
  return a1;
}

uint64_t sub_23BC01F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  _OWORD *v25;
  _OWORD *v26;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = sub_23BC71B5C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 23;
  v13 = (unint64_t)v7 + v11 + 23;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (unsigned __int8 *)(v13 & v14);
  v16 = (unsigned __int8 *)(((unint64_t)v8 + v12) & v14);
  v17 = *(_QWORD *)(v10 + 64) + 7;
  if ((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 1)
    v18 = 1;
  else
    v18 = (((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v19 = v15[v18];
  v20 = v16[v18];
  if (v19 > 1)
  {
    if (v20 <= 1)
    {
      if (v20 != 1)
      {
LABEL_25:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(v15, v16, v9);
        v25 = (_OWORD *)((unint64_t)&v15[v17] & 0xFFFFFFFFFFFFFFF8);
        v26 = (_OWORD *)((unint64_t)&v16[v17] & 0xFFFFFFFFFFFFFFF8);
        *v25 = *v26;
        *(_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFF8);
        v15[v18] = 0;
        return a1;
      }
      goto LABEL_17;
    }
LABEL_20:
    memcpy(v15, v16, v18 + 1);
    return a1;
  }
  if (v20 > 1)
  {
    if (v19 != 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v15, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_20;
  }
  if (v15 != v16)
  {
    if (v19 != 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v15, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v16[v18];
      v21 = v20 - 2;
      if (v20 >= 2)
      {
        v22 = v18 <= 3 ? v18 : 4;
        if (v22)
        {
          if (v22 == 4)
            v23 = *(_DWORD *)v16;
          else
            v23 = *v16;
          v24 = (v23 | (v21 << (8 * v18))) + 2;
          v20 = v23 + 2;
          if (v18 < 4)
            v20 = v24;
        }
      }
    }
    if (v20 != 1)
      goto LABEL_25;
LABEL_17:
    *v15 = *v16;
    v15[v18] = 1;
  }
  return a1;
}

uint64_t sub_23BC02178(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(sub_23BC71B5C() - 8);
  if (((((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 1)
    v10 = 1;
  else
    v10 = ((((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  if (a2 <= v8)
    goto LABEL_25;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = v10 + ((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 16) & ~v12) + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v17 < 2)
    {
LABEL_25:
      if (v7 >= 0x7FFFFFFF)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      v19 = *(_QWORD *)(((a1 + v11 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v19 >= 0xFFFFFFFF)
        LODWORD(v19) = -1;
      return (v19 + 1);
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_25;
LABEL_18:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 > 3)
      LODWORD(v13) = 4;
    __asm { BR              X11 }
  }
  return v8 + v18 + 1;
}

void sub_23BC02348(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_23BC71B5C() - 8);
  v10 = ((((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v10 <= 1)
    v10 = 1;
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = v10 + ((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11) + 1;
  if (a3 <= v8)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v8 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

ValueMetadata *type metadata accessor for PreviewLoadState.CodingKeys()
{
  return &type metadata for PreviewLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for PreviewLoadState.IdleCodingKeys()
{
  return &type metadata for PreviewLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for PreviewLoadState.FetchingCodingKeys()
{
  return &type metadata for PreviewLoadState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PreviewLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC0261C + 4 * byte_23BC74CCE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC0263C + 4 * byte_23BC74CD3[v4]))();
}

_BYTE *sub_23BC0261C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC0263C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC02644(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC0264C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC02654(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC0265C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PreviewLoadState.FetchedCodingKeys()
{
  return &type metadata for PreviewLoadState.FetchedCodingKeys;
}

uint64_t _s14FitnessActions16PreviewLoadStateO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC026C4 + 4 * byte_23BC74CDD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC026F8 + 4 * byte_23BC74CD8[v4]))();
}

uint64_t sub_23BC026F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC02700(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC02708);
  return result;
}

uint64_t sub_23BC02714(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC0271CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC02720(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC02728(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewPlayerConfiguration.CodingKeys()
{
  return &type metadata for PreviewPlayerConfiguration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ViewStackButtonState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14FitnessActions16PreviewLoadErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC02820 + 4 * byte_23BC74CE7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC02854 + 4 * byte_23BC74CE2[v4]))();
}

uint64_t sub_23BC02854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC0285C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC02864);
  return result;
}

uint64_t sub_23BC02870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC02878);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC0287C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC02884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23BC02890(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewLoadError.CodingKeys()
{
  return &type metadata for PreviewLoadError.CodingKeys;
}

ValueMetadata *type metadata accessor for PreviewLoadError.FetchFailedCodingKeys()
{
  return &type metadata for PreviewLoadError.FetchFailedCodingKeys;
}

ValueMetadata *type metadata accessor for PreviewLoadError.NoPreviewCodingKeys()
{
  return &type metadata for PreviewLoadError.NoPreviewCodingKeys;
}

unint64_t sub_23BC028D0()
{
  unint64_t result;

  result = qword_256A74FE0;
  if (!qword_256A74FE0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC752F4, &type metadata for PreviewLoadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74FE0);
  }
  return result;
}

unint64_t sub_23BC02918()
{
  unint64_t result;

  result = qword_256A74FE8;
  if (!qword_256A74FE8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC753AC, &type metadata for PreviewPlayerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74FE8);
  }
  return result;
}

unint64_t sub_23BC02960()
{
  unint64_t result;

  result = qword_256A74FF0;
  if (!qword_256A74FF0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75464, &type metadata for PreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74FF0);
  }
  return result;
}

unint64_t sub_23BC029A8()
{
  unint64_t result;

  result = qword_256A74FF8;
  if (!qword_256A74FF8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC755BC, &type metadata for PreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A74FF8);
  }
  return result;
}

void sub_23BC029EC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC029FC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC02A0C()
{
  JUMPOUT(0x24260ED10);
}

unint64_t sub_23BC02A20()
{
  unint64_t result;

  result = qword_256A75000;
  if (!qword_256A75000)
  {
    result = MEMORY[0x24260ED10](&unk_23BC754DC, &type metadata for PreviewLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75000);
  }
  return result;
}

unint64_t sub_23BC02A68()
{
  unint64_t result;

  result = qword_256A75008;
  if (!qword_256A75008)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75504, &type metadata for PreviewLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75008);
  }
  return result;
}

unint64_t sub_23BC02AB0()
{
  unint64_t result;

  result = qword_256A75010;
  if (!qword_256A75010)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7548C, &type metadata for PreviewLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75010);
  }
  return result;
}

unint64_t sub_23BC02AF8()
{
  unint64_t result;

  result = qword_256A75018;
  if (!qword_256A75018)
  {
    result = MEMORY[0x24260ED10](&unk_23BC754B4, &type metadata for PreviewLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75018);
  }
  return result;
}

unint64_t sub_23BC02B40()
{
  unint64_t result;

  result = qword_256A75020;
  if (!qword_256A75020)
  {
    result = MEMORY[0x24260ED10](&unk_23BC753D4, &type metadata for PreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75020);
  }
  return result;
}

unint64_t sub_23BC02B88()
{
  unint64_t result;

  result = qword_256A75028;
  if (!qword_256A75028)
  {
    result = MEMORY[0x24260ED10](&unk_23BC753FC, &type metadata for PreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75028);
  }
  return result;
}

unint64_t sub_23BC02BD0()
{
  unint64_t result;

  result = qword_256A75030;
  if (!qword_256A75030)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7552C, &type metadata for PreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75030);
  }
  return result;
}

unint64_t sub_23BC02C18()
{
  unint64_t result;

  result = qword_256A75038;
  if (!qword_256A75038)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75554, &type metadata for PreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75038);
  }
  return result;
}

unint64_t sub_23BC02C60()
{
  unint64_t result;

  result = qword_256A75040;
  if (!qword_256A75040)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7531C, &type metadata for PreviewPlayerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75040);
  }
  return result;
}

unint64_t sub_23BC02CA8()
{
  unint64_t result;

  result = qword_256A75048;
  if (!qword_256A75048)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75344, &type metadata for PreviewPlayerConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75048);
  }
  return result;
}

unint64_t sub_23BC02CF0()
{
  unint64_t result;

  result = qword_256A75050;
  if (!qword_256A75050)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75214, &type metadata for PreviewLoadError.FetchFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75050);
  }
  return result;
}

unint64_t sub_23BC02D38()
{
  unint64_t result;

  result = qword_256A75058;
  if (!qword_256A75058)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7523C, &type metadata for PreviewLoadError.FetchFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75058);
  }
  return result;
}

unint64_t sub_23BC02D80()
{
  unint64_t result;

  result = qword_256A75060;
  if (!qword_256A75060)
  {
    result = MEMORY[0x24260ED10](&unk_23BC751C4, &type metadata for PreviewLoadError.NoPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75060);
  }
  return result;
}

unint64_t sub_23BC02DC8()
{
  unint64_t result;

  result = qword_256A75068;
  if (!qword_256A75068)
  {
    result = MEMORY[0x24260ED10](&unk_23BC751EC, &type metadata for PreviewLoadError.NoPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75068);
  }
  return result;
}

unint64_t sub_23BC02E10()
{
  unint64_t result;

  result = qword_256A75070;
  if (!qword_256A75070)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75264, &type metadata for PreviewLoadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75070);
  }
  return result;
}

unint64_t sub_23BC02E58()
{
  unint64_t result;

  result = qword_256A75078;
  if (!qword_256A75078)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7528C, &type metadata for PreviewLoadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75078);
  }
  return result;
}

uint64_t sub_23BC02E9C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6961466863746566 && a2 == 0xEB0000000064656CLL;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6569766572506F6ELL && a2 == 0xE900000000000077)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC02F9C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6E696D6165727473 && a2 == 0xEC0000004C525567;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82070 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023BC82090)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BC030EC()
{
  return 3;
}

uint64_t UpNextQueueButton.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a3 = sub_23BBEB2B0;
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_23BC0314C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t UpNextQueueButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75088);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *v1;
  v8 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v8;
  *(_BYTE *)(v10 + 32) = v9;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75090);
  sub_23BC03D44();
  sub_23BC72048();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v8;
  *(_BYTE *)(v11 + 32) = v9;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 16))(a1, v6, v3);
  v12 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A75138) + 36));
  *v12 = sub_23BC0417C;
  v12[1] = (uint64_t (*)())v11;
  v12[2] = 0;
  v12[3] = 0;
  sub_23BBE7EBC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23BC032E8()
{
  return sub_23BC040C0();
}

void sub_23BC03308(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _BYTE v29[40];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a4;
  v6 = a3 & 1;
  v7 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v7);
  v51 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v9);
  v47 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v43 = sub_23BC71EB0();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75108);
  MEMORY[0x24BDAC7A8](v32);
  v38 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v37 = sub_23BC720E4();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v35 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A750E8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A750D8);
  MEMORY[0x24BDAC7A8](v39);
  v40 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A750C8);
  MEMORY[0x24BDAC7A8](v45);
  v46 = &v29[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A750B8);
  v52 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v44 = &v29[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A750A8);
  MEMORY[0x24BDAC7A8](v57);
  v54 = &v29[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75160);
  MEMORY[0x24BDAC7A8](v55);
  v56 = &v29[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75168);
  MEMORY[0x24BDAC7A8](v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = &v29[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BBE7EBC();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75150);
  v27 = sub_23BBE869C(&qword_256A75158, &qword_256A75150, MEMORY[0x24BE2B5E8]);
  v34 = v26;
  v31 = v27;
  sub_23BC71CDC();
  v48 = a1;
  v50 = a2;
  v49 = v6;
  sub_23BBE7EAC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  sub_23BC72138();
  (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v25, v22);
  v28 = (char *)&loc_23BC03798 + dword_23BC03D24[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC037A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t ObjCClassFromMetadata;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = *(_QWORD *)(v1 - 240);
  v3 = *(_QWORD *)(v1 - 232);
  if (*v0 < 1)
  {
    v39 = 1;
  }
  else
  {
    v4 = sub_23BC7200C();
    sub_23BC720F0();
    sub_23BC71D18();
    *(_QWORD *)(v1 - 432) = *(_QWORD *)(v1 - 168);
    *(_DWORD *)(v1 - 436) = *(unsigned __int8 *)(v1 - 160);
    v5 = *(_QWORD *)(v1 - 152);
    v6 = *(_BYTE *)(v1 - 144);
    *(_QWORD *)(v1 - 448) = *(_QWORD *)(v1 - 136);
    *(_QWORD *)(v1 - 456) = *(_QWORD *)(v1 - 128);
    v7 = sub_23BC71E8C();
    sub_23BC71CC4();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v16 = *(_QWORD *)(v1 - 384);
    sub_23BC720D8();
    v17 = *(_QWORD *)(v1 - 376);
    v18 = *(_QWORD *)(v1 - 360);
    v19 = *(_QWORD *)(v1 - 368);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v16, v19);
    *(_WORD *)(v18 + *(int *)(*(_QWORD *)(v1 - 408) + 56)) = 256;
    v20 = *(_QWORD *)(v1 - 400);
    sub_23BBE817C(v18, v20 + *(int *)(*(_QWORD *)(v1 - 424) + 36), &qword_256A75108);
    v21 = *(_QWORD *)(v1 - 432);
    *(_QWORD *)v20 = v4;
    *(_QWORD *)(v20 + 8) = v21;
    *(_BYTE *)(v20 + 16) = *(_DWORD *)(v1 - 436);
    *(_QWORD *)(v20 + 24) = v5;
    *(_BYTE *)(v20 + 32) = v6;
    v22 = *(_QWORD *)(v1 - 456);
    *(_QWORD *)(v20 + 40) = *(_QWORD *)(v1 - 448);
    *(_QWORD *)(v20 + 48) = v22;
    *(_BYTE *)(v20 + 56) = v7;
    *(_QWORD *)(v20 + 64) = v9;
    *(_QWORD *)(v20 + 72) = v11;
    *(_QWORD *)(v20 + 80) = v13;
    *(_QWORD *)(v20 + 88) = v15;
    *(_BYTE *)(v20 + 96) = 0;
    swift_retain();
    sub_23BBE81C0(v18, &qword_256A75108);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v19);
    swift_release();
    sub_23BC71E98();
    sub_23BC71EA4();
    swift_release();
    v23 = *(_QWORD *)(v1 - 328);
    v24 = *(_QWORD *)(v1 - 336);
    v25 = *(_QWORD *)(v1 - 320);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v24, *MEMORY[0x24BDF17C8], v25);
    v26 = sub_23BC71EBC();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    KeyPath = swift_getKeyPath();
    v28 = *(_QWORD *)(v1 - 344);
    sub_23BBE817C(v20, v28, &qword_256A750E8);
    v29 = (uint64_t *)(v28 + *(int *)(*(_QWORD *)(v1 - 352) + 36));
    *v29 = KeyPath;
    v29[1] = v26;
    sub_23BBE81C0(v20, &qword_256A750E8);
    v30 = sub_23BC71FD0();
    v31 = swift_getKeyPath();
    *(_QWORD *)(v1 - 192) = v30;
    swift_retain();
    v32 = sub_23BC71D24();
    v33 = *(_QWORD *)(v1 - 296);
    sub_23BBE817C(v28, v33, &qword_256A750D8);
    swift_release();
    v34 = (uint64_t *)(v33 + *(int *)(*(_QWORD *)(v1 - 304) + 36));
    *v34 = v31;
    v34[1] = v32;
    sub_23BBE81C0(v28, &qword_256A750D8);
    sub_23BC72288();
    type metadata accessor for LocalizationBundle();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v36 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_23BBE7EBC();
    sub_23BC71CDC();
    sub_23BBE7EAC();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v3 = *(_QWORD *)(v1 - 232);
    *(_QWORD *)(v1 - 192) = sub_23BC72300();
    *(_QWORD *)(v1 - 184) = v37;
    sub_23BC03E80();
    sub_23BC04488();
    v38 = *(_QWORD *)(v1 - 312);
    sub_23BC71F40();
    swift_bridgeObjectRelease();
    sub_23BBE81C0(v33, &qword_256A750C8);
    sub_23BC044CC(v38, v3);
    v2 = *(_QWORD *)(v1 - 240);
    v39 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 248) + 56))(v3, v39, 1, v2);
  sub_23BBE817C(v3, *(_QWORD *)(v1 - 216), &qword_256A750A8);
  swift_storeEnumTagMultiPayload();
  sub_23BC03DB0();
  sub_23BC71E20();
  return sub_23BBE81C0(v3, &qword_256A750A8);
}

void sub_23BC03D38(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23BC03308(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

unint64_t sub_23BC03D44()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256A75098;
  if (!qword_256A75098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75090);
    v2 = sub_23BC03DB0();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A75098);
  }
  return result;
}

unint64_t sub_23BC03DB0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256A750A0;
  if (!qword_256A750A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A750A8);
    v2 = sub_23BC03E14();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A750A0);
  }
  return result;
}

unint64_t sub_23BC03E14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A750B0;
  if (!qword_256A750B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A750B8);
    v2[0] = sub_23BC03E80();
    v2[1] = sub_23BC04078();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A750B0);
  }
  return result;
}

unint64_t sub_23BC03E80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A750C0;
  if (!qword_256A750C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A750C8);
    v2[0] = sub_23BC03F04();
    v2[1] = sub_23BBE869C(&qword_256A75120, &qword_256A75128, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A750C0);
  }
  return result;
}

unint64_t sub_23BC03F04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A750D0;
  if (!qword_256A750D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A750D8);
    v2[0] = sub_23BC03F88();
    v2[1] = sub_23BBE869C(&qword_256A75110, &qword_256A75118, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A750D0);
  }
  return result;
}

unint64_t sub_23BC03F88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A750E0;
  if (!qword_256A750E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A750E8);
    v2[0] = sub_23BC0400C();
    v2[1] = sub_23BBE869C(&qword_256A75100, &qword_256A75108, MEMORY[0x24BDF1330]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A750E0);
  }
  return result;
}

unint64_t sub_23BC0400C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A750F0;
  if (!qword_256A750F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A750F8);
    v2[0] = sub_23BBE85F0();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A750F0);
  }
  return result;
}

unint64_t sub_23BC04078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A75130;
  if (!qword_256A75130)
  {
    v1 = sub_23BC71E68();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF1078], v1);
    atomic_store(result, (unint64_t *)&qword_256A75130);
  }
  return result;
}

uint64_t sub_23BC040C0()
{
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75150);
  sub_23BBE869C(&qword_256A75158, &qword_256A75150, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC0417C()
{
  return sub_23BC040C0();
}

uint64_t sub_23BC0419C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC041AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75088);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *v1;
  v8 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v8;
  *(_BYTE *)(v10 + 32) = v9;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75090);
  sub_23BC03D44();
  sub_23BC72048();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v8;
  *(_BYTE *)(v11 + 32) = v9;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 16))(a1, v6, v3);
  v12 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A75138) + 36));
  *v12 = sub_23BC0451C;
  v12[1] = (uint64_t (*)())v11;
  v12[2] = 0;
  v12[3] = 0;
  sub_23BBE7EBC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for UpNextQueueButton()
{
  return &type metadata for UpNextQueueButton;
}

unint64_t sub_23BC04334()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A75140;
  if (!qword_256A75140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75138);
    v2[0] = sub_23BBE869C(&qword_256A75148, &qword_256A75088, MEMORY[0x24BDF43B0]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A75140);
  }
  return result;
}

uint64_t objectdestroy_2Tm_0()
{
  sub_23BBE7EAC();
  return swift_deallocObject();
}

uint64_t sub_23BC043E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71DA8();
  *a1 = result;
  return result;
}

uint64_t sub_23BC04410()
{
  swift_retain();
  return sub_23BC71DB4();
}

uint64_t sub_23BC04438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71DC0();
  *a1 = result;
  return result;
}

uint64_t sub_23BC04460()
{
  swift_retain();
  return sub_23BC71DCC();
}

unint64_t sub_23BC04488()
{
  unint64_t result;

  result = qword_256A75180;
  if (!qword_256A75180)
  {
    result = MEMORY[0x24260ED10](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256A75180);
  }
  return result;
}

uint64_t sub_23BC044CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A750B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC04520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for PreviewButtonFeature(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for PreviewButtonFeature<A>, v4);
  v5 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v5);
  return sub_23BC71CDC();
}

uint64_t PreviewButton.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v12 = type metadata accessor for PreviewButtonFeature(255, a3, a4, v11);
  MEMORY[0x24260ED10](&protocol conformance descriptor for PreviewButtonFeature<A>, v12);
  v13 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v13);
  result = sub_23BC71CD0();
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v15;
  *(_BYTE *)(a5 + 16) = v16 & 1;
  return result;
}

uint64_t sub_23BC04668()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC0468C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v17[1] = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v4;
  v12 = v4[1];
  v14 = *((_BYTE *)v4 + 16);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v18 = *(_OWORD *)(a3 + 16);
  v19 = v13;
  v20 = v12;
  v21 = v14;
  sub_23BBE87B8(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
  sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
  sub_23BC72048();
  sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
  sub_23BC71EEC();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23BC047F4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = type metadata accessor for PreviewButton(0, a1, a2, a1);
  sub_23BC04520(v4, v5, v6, v7);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  sub_23BC04488();
  result = sub_23BC71ED4();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 16) = v10 & 1;
  *(_QWORD *)(a3 + 24) = v11;
  return result;
}

uint64_t sub_23BC048B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71FF4();
  *a1 = result;
  return result;
}

uint64_t PreviewButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75188);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v10 = *(unsigned __int8 *)(v2 + 16);
  v12 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  sub_23BC04A08(v8, v9, v10, v12, v11, (uint64_t)v7);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v9;
  *(_BYTE *)(v13 + 48) = v10;
  sub_23BBE817C((uint64_t)v7, a2, &qword_256A75188);
  v14 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A75190) + 36));
  *v14 = sub_23BC05350;
  v14[1] = (uint64_t (*)())v13;
  v14[2] = 0;
  v14[3] = 0;
  sub_23BBE7EBC();
  return sub_23BBE81C0((uint64_t)v7, &qword_256A75188);
}

uint64_t sub_23BC04A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t State;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  v87 = a6;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75258);
  MEMORY[0x24BDAC7A8](v72);
  v69 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75250);
  MEMORY[0x24BDAC7A8](v74);
  v73 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75260);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75240);
  MEMORY[0x24BDAC7A8](v86);
  v75 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  v16 = *(char **)(v15 - 8);
  v84 = v15;
  v85 = v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v79 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v80 = (uint64_t)&v66 - v19;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75268);
  MEMORY[0x24BDAC7A8](v82);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75270);
  v81 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for PreviewLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v26 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = a1;
  v91 = a2;
  v77 = a3;
  v27 = a3 & 1;
  v92 = v27;
  v29 = type metadata accessor for PreviewButton(0, a4, a5, v28);
  sub_23BC04520(v29, v30, v31, v32);
  v70 = a4;
  v88 = a4;
  v89 = a5;
  v71 = a5;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  v33 = v84;
  swift_release();
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v85 + 6))(v26, 2, v33))
  {
    v90 = a1;
    v91 = a2;
    v92 = v27;
    sub_23BC0468C(0, 0, v29, (uint64_t)v23);
    v34 = v81;
    v35 = v83;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v21, v23, v83);
    swift_storeEnumTagMultiPayload();
    v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
    v37 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v90 = v36;
    v91 = v37;
    swift_getOpaqueTypeConformance2();
    sub_23BC05488();
    sub_23BC71E20();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v35);
  }
  else
  {
    v67 = v29;
    v39 = v77;
    v68 = v23;
    v40 = (uint64_t)v76;
    v85 = v21;
    v41 = v83;
    v42 = (uint64_t)v26;
    v43 = v80;
    sub_23BBF9A7C(v42, v80);
    sub_23BBE817C(v43, (uint64_t)v79, &qword_256A74968);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = v41;
      v45 = (uint64_t)v85;
      v46 = v69;
      if (*v79 == 1)
      {
        swift_storeEnumTagMultiPayload();
        v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
        v48 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
        v90 = v47;
        v91 = v48;
        swift_getOpaqueTypeConformance2();
        v61 = (uint64_t)v73;
        sub_23BC71E20();
      }
      else
      {
        v90 = a1;
        v91 = a2;
        v92 = v39 & 1;
        v57 = (uint64_t)v68;
        sub_23BC0468C(0, 0, v67, (uint64_t)v68);
        v58 = v81;
        (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v46, v57, v44);
        swift_storeEnumTagMultiPayload();
        v59 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
        v60 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
        v90 = v59;
        v91 = v60;
        swift_getOpaqueTypeConformance2();
        v61 = (uint64_t)v73;
        sub_23BC71E20();
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v44);
      }
      sub_23BBE817C(v61, v40, &qword_256A75250);
      swift_storeEnumTagMultiPayload();
      v62 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
      v63 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
      v90 = v62;
      v91 = v63;
      swift_getOpaqueTypeConformance2();
      sub_23BC05558();
      v56 = (uint64_t)v75;
      sub_23BC71E20();
      sub_23BBE81C0(v61, &qword_256A75250);
    }
    else
    {
      v90 = a1;
      v91 = a2;
      v92 = v39 & 1;
      v49 = swift_allocObject();
      v50 = v71;
      *(_QWORD *)(v49 + 16) = v70;
      *(_QWORD *)(v49 + 24) = v50;
      *(_QWORD *)(v49 + 32) = a1;
      *(_QWORD *)(v49 + 40) = a2;
      *(_BYTE *)(v49 + 48) = v39 & 1;
      sub_23BBE7EBC();
      v51 = (uint64_t)v68;
      sub_23BC0468C((uint64_t)sub_23BC05610, v49, v67, (uint64_t)v68);
      swift_release();
      v52 = v81;
      v53 = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v40, v51, v41);
      swift_storeEnumTagMultiPayload();
      v54 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
      v55 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
      v90 = v54;
      v91 = v55;
      swift_getOpaqueTypeConformance2();
      sub_23BC05558();
      v56 = (uint64_t)v75;
      sub_23BC71E20();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
      sub_23BBE81C0((uint64_t)v79, &qword_256A74968);
      v45 = (uint64_t)v85;
    }
    sub_23BBE817C(v56, v45, &qword_256A75240);
    swift_storeEnumTagMultiPayload();
    v64 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
    v65 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v90 = v64;
    v91 = v65;
    swift_getOpaqueTypeConformance2();
    sub_23BC05488();
    sub_23BC71E20();
    sub_23BBE81C0(v56, &qword_256A75240);
    return sub_23BBE81C0(v80, &qword_256A74968);
  }
}

uint64_t sub_23BC05260(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  char v23;

  v12 = type metadata accessor for PreviewButtonAction();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = a1;
  v22[2] = a2;
  v23 = a3 & 1;
  v16 = type metadata accessor for PreviewButton(0, a4, a5, v15);
  sub_23BC04520(v16, v17, v18, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74968);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, a6, 2, v20);
  sub_23BC72198();
  swift_release();
  return sub_23BBFBF40((uint64_t)v14);
}

uint64_t sub_23BC05350()
{
  return sub_23BC05618(1);
}

uint64_t sub_23BC05358()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for PreviewButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewButton);
}

unint64_t sub_23BC053A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A75218;
  if (!qword_256A75218)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256A75190);
    v2[0] = sub_23BC0540C();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A75218);
  }
  return result;
}

unint64_t sub_23BC0540C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A75220;
  if (!qword_256A75220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75188);
    v2 = sub_23BC054A4(&qword_256A75228, &qword_256A75230, sub_23BC05488);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A75220);
  }
  return result;
}

uint64_t sub_23BC05488()
{
  return sub_23BC054A4(&qword_256A75238, &qword_256A75240, (uint64_t (*)(void))sub_23BC05558);
}

uint64_t sub_23BC054A4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[4];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
    v7[3] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = a3();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BC05558()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  _QWORD v3[4];

  result = qword_256A75248;
  if (!qword_256A75248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75250);
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
    v3[3] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = OpaqueTypeConformance2;
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A75248);
  }
  return result;
}

uint64_t sub_23BC05610()
{
  return sub_23BC05618(2);
}

uint64_t sub_23BC05618(uint64_t a1)
{
  uint64_t v1;

  return sub_23BC05260(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23BC0563C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC05668()
{
  return sub_23BC72024();
}

uint64_t sub_23BC056CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC047F4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for ReplaceScheduledWorkoutAlert()
{
  return &type metadata for ReplaceScheduledWorkoutAlert;
}

uint64_t sub_23BC056EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC056FC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23BC0571C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD v36[4];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;

  v49 = a1;
  v50 = a5;
  v7 = a4 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v39 = (char *)v36 - v13;
  v14 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75278);
  v47 = *(_QWORD *)(v16 - 8);
  v48 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v46 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v20 = sub_23BC71EC8();
  v40 = v21;
  v41 = v20;
  v23 = v22;
  v43 = v24;
  sub_23BC71CDC();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = a3;
  *(_BYTE *)(v25 + 32) = v7;
  sub_23BBE7EBC();
  v26 = (uint64_t)v39;
  sub_23BC720C0();
  v37 = v53;
  v38 = v52;
  v36[3] = v54;
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  v27 = (uint64_t)v42;
  swift_release();
  swift_release();
  sub_23BBE817C(v26, v27, &qword_256A74668);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v27, 1, v45) == 1)
  {
    v28 = type metadata accessor for PlannedWorkoutConfirmation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v51, 1, 1, v28);
  }
  else
  {
    sub_23BC06AF4(v27, v51);
  }
  v29 = sub_23BBE81C0(v26, &qword_256A74668);
  v30 = MEMORY[0x24BDAC7A8](v29);
  MEMORY[0x24BDAC7A8](v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75290);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75298);
  type metadata accessor for PlannedWorkoutConfirmation(0);
  sub_23BBE869C(&qword_256A752A0, &qword_256A75290, MEMORY[0x24BDEFB78]);
  sub_23BBE869C(&qword_256A752A8, &qword_256A75298, MEMORY[0x24BDF5428]);
  v31 = v46;
  v33 = v40;
  v32 = v41;
  v34 = v51;
  sub_23BC71F7C();
  swift_release();
  swift_release();
  sub_23BBECDD0(v32, v33, v23 & 1);
  swift_bridgeObjectRelease();
  sub_23BBE81C0(v34, &qword_256A74660);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v47 + 32))(v50, v31, v48);
}

uint64_t sub_23BC05C80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;

  v42 = a3;
  v43 = a1;
  v44 = a2;
  v48 = a4;
  v4 = sub_23BC71C34();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74698);
  MEMORY[0x24BDAC7A8](v45);
  v47 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v41 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v39 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v39 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15);
  if ((_DWORD)result == 1)
  {
    v26 = 0;
  }
  else
  {
    sub_23BC06AF4((uint64_t)v24, (uint64_t)v21);
    sub_23BBE817C((uint64_t)v21, (uint64_t)v19, &qword_256A74660);
    v27 = type metadata accessor for PlannedWorkoutConfirmation(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v19, 1, v27) == 1)
    {
      sub_23BBE81C0((uint64_t)v19, &qword_256A74660);
      v28 = v46;
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
      v29(v14, 1, 1, v4);
    }
    else
    {
      v28 = v46;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v14, v19, v4);
      sub_23BBF36FC((uint64_t)v19, type metadata accessor for PlannedWorkoutConfirmation);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v29(v14, 0, 1, v4);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
    sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
    sub_23BC71CDC();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v29(v12, 0, 1, v4);
    v30 = v47;
    v31 = v47 + *(int *)(v45 + 48);
    v32 = &qword_256A74428;
    sub_23BBE817C((uint64_t)v14, v47, &qword_256A74428);
    sub_23BBE817C((uint64_t)v12, v31, &qword_256A74428);
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (v33(v30, 1, v4) == 1)
    {
      sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v21, &qword_256A74660);
      if (v33(v31, 1, v4) == 1)
      {
        v34 = -1;
      }
      else
      {
        v32 = &qword_256A74698;
        v34 = 0;
      }
    }
    else
    {
      v35 = v41;
      sub_23BBE817C(v30, v41, &qword_256A74428);
      if (v33(v31, 1, v4) == 1)
      {
        sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v21, &qword_256A74660);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v35, v4);
        v34 = 0;
        v32 = &qword_256A74698;
      }
      else
      {
        v36 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v40, v31, v4);
        sub_23BC06D14();
        v37 = v35;
        v34 = sub_23BC7227C();
        v38 = *(void (**)(char *, uint64_t))(v28 + 8);
        v38(v36, v4);
        v32 = &qword_256A74428;
        sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v21, &qword_256A74660);
        v38((char *)v37, v4);
      }
    }
    result = sub_23BBE81C0(v30, v32);
    v26 = v34 & 1;
  }
  *v48 = v26;
  return result;
}

uint64_t sub_23BC06190()
{
  type metadata accessor for StartWorkoutButtonAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BC061C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, _BYTE *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  _BYTE v37[12];
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v38 = a4;
  v42 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for PlannedWorkoutConfirmation(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A742B0);
  v41 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v40 = &v37[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v39 = &v37[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = &v37[-v21];
  MEMORY[0x24BDAC7A8](v20);
  v24 = &v37[-v23];
  sub_23BC06B54(a1, (uint64_t)v14);
  v25 = (*(unsigned __int8 *)(v12 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a2;
  *(_QWORD *)(v26 + 24) = a3;
  LOBYTE(v13) = v38 & 1;
  *(_BYTE *)(v26 + 32) = v38 & 1;
  sub_23BC06C30((uint64_t)v14, v26 + v25);
  v46 = a2;
  v47 = a3;
  v48 = v13;
  sub_23BBE7EBC();
  sub_23BC72048();
  sub_23BC71CAC();
  v27 = sub_23BC71CB8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 0, 1, v27);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a2;
  *(_QWORD *)(v28 + 24) = a3;
  *(_BYTE *)(v28 + 32) = v13;
  v43 = a2;
  v44 = a3;
  v45 = v13;
  sub_23BBE7EBC();
  sub_23BC7203C();
  v29 = v41;
  v30 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v41 + 16);
  v31 = v39;
  v30(v39, v24, v15);
  v32 = v40;
  v30(v40, v22, v15);
  v33 = v42;
  v30(v42, v31, v15);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A752B0);
  v30(&v33[*(int *)(v34 + 48)], v32, v15);
  v35 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
  v35(v22, v15);
  v35(v24, v15);
  v35(v32, v15);
  return ((uint64_t (*)(_BYTE *, uint64_t))v35)(v31, v15);
}

uint64_t sub_23BC064E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t started;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  v8 = type metadata accessor for PlannedWorkoutConfirmation(0);
  v9 = *(_QWORD *)(a4 + *(int *)(v8 + 20));
  *v7 = *(_QWORD *)(a4 + *(int *)(v8 + 24));
  v7[1] = v9;
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BBF36FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
}

uint64_t sub_23BC06600()
{
  uint64_t started;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BBF36FC((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
}

uint64_t sub_23BC066F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_23BC0689C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23BC722C4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23BC722B8();
  sub_23BC722AC();
  type metadata accessor for PlannedWorkoutConfirmation(0);
  sub_23BC722A0();
  sub_23BC722AC();
  sub_23BC722D0();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_23BC06AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BC0571C(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_23BC06AE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23BC05C80(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_23BC06AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC06B3C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_23BC061C0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t sub_23BC06B48@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC0689C(a1);
}

uint64_t sub_23BC06B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlannedWorkoutConfirmation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC06B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlannedWorkoutConfirmation(0) - 8) + 80);
  v2 = (v1 + 33) & ~v1;
  sub_23BBE7EAC();
  v3 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BC06C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlannedWorkoutConfirmation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC06C74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlannedWorkoutConfirmation(0) - 8) + 80);
  return sub_23BC064E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), v0 + ((v1 + 33) & ~v1));
}

uint64_t sub_23BC06CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC066F4(a1);
}

uint64_t sub_23BC06CDC()
{
  return sub_23BC06600();
}

uint64_t sub_23BC06CE8@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC066F4(a1);
}

unint64_t sub_23BC06D14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A746A8;
  if (!qword_256A746A8)
  {
    v1 = sub_23BC71C34();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_256A746A8);
  }
  return result;
}

uint64_t sub_23BC06D5C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75290);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75298);
  type metadata accessor for PlannedWorkoutConfirmation(255);
  sub_23BBE869C(&qword_256A752A0, &qword_256A75290, MEMORY[0x24BDEFB78]);
  sub_23BBE869C(&qword_256A752A8, &qword_256A75298, MEMORY[0x24BDF5428]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of SharingIdentifierProtocol.localizedName(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

__n128 DynamicStartWorkoutFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t DynamicStartWorkoutFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3, int *a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unsigned int *v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  __int16 v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  _QWORD v35[6];
  _BYTE v36[48];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74940);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*((_BYTE *)a4 + 6) & 1) != 0)
  {
    v13 = *v4;
    v12 = v4[1];
    v14 = *a2;
    v15 = a2[1];
    result = type metadata accessor for DynamicStartWorkoutState();
    v17 = (unsigned int *)((char *)a2 + *(int *)(result + 28));
    if (*((_BYTE *)v17 + 6) == 1 && !(*v17 | ((unint64_t)*((unsigned __int16 *)v17 + 2) << 32)))
    {
      *((_WORD *)v17 + 2) = 0;
      *v17 = 1;
      *((_BYTE *)v17 + 6) = 1;
      v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
      v33 = &v11[v18[12]];
      v32 = &v11[v18[16]];
      v34 = &v11[v18[20]];
      v35[0] = v14;
      v19 = &v11[v18[24]];
      v35[1] = v15;
      swift_bridgeObjectRetain_n();
      sub_23BC72558();
      v36[40] = 5;
      sub_23BBF4754((uint64_t)v36, (uint64_t)v35);
      sub_23BBF4790();
      sub_23BC72558();
      sub_23BBF47D4((uint64_t)v36);
      v20 = *MEMORY[0x24BE2B570];
      v21 = sub_23BC72180();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v32, v20, v21);
      v22 = (_QWORD *)swift_allocObject();
      v22[2] = v13;
      v22[3] = v12;
      v22[4] = v14;
      v22[5] = v15;
      *(_QWORD *)v19 = &unk_256A752C0;
      *((_QWORD *)v19 + 1) = v22;
      swift_retain();
      sub_23BC723FC();
      v23 = *MEMORY[0x24BE2B558];
      v24 = sub_23BC72174();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v34, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE2B438], v8);
      v25 = *a3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = sub_23BBF8E10(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
      v27 = *(_QWORD *)(v25 + 16);
      v26 = *(_QWORD *)(v25 + 24);
      if (v27 >= v26 >> 1)
        v25 = sub_23BBF8E10(v26 > 1, v27 + 1, 1, v25);
      *(_QWORD *)(v25 + 16) = v27 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v27, v11, v8);
      *a3 = v25;
    }
  }
  else
  {
    v28 = *a4;
    v29 = *((_WORD *)a4 + 2);
    result = type metadata accessor for DynamicStartWorkoutState();
    v30 = (char *)a2 + *(int *)(result + 28);
    *((_WORD *)v30 + 2) = v29 & 0x1FF;
    *(_DWORD *)v30 = v28;
    v30[6] = 0;
  }
  return result;
}

uint64_t sub_23BC07114(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v5[2] = a1;
  v5[3] = sub_23BC723F0();
  v5[4] = sub_23BC723E4();
  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v9 = (_QWORD *)swift_task_alloc();
  v5[5] = v9;
  *v9 = v5;
  v9[1] = sub_23BC071AC;
  return v11(a4, a5);
}

uint64_t sub_23BC071AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *v2;
  v5 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    *(_DWORD *)(v4 + 72) = 0;
    v6 = v4 + 72;
    *(_WORD *)(v6 + 4) = 256;
    *(_BYTE *)(v6 + 6) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v6 - 8) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A752E0);
    *v7 = v5;
    v7[1] = sub_23BC0733C;
  }
  else
  {
    *(_DWORD *)(v4 + 80) = a1;
    v8 = v4 + 80;
    *(_WORD *)(v8 + 4) = WORD2(a1) & 0x1FF;
    *(_BYTE *)(v8 + 6) = 0;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 - 24) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A752E0);
    *v9 = v5;
    v9[1] = sub_23BC07298;
  }
  return sub_23BC7215C();
}

uint64_t sub_23BC07298()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC07308()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC0733C()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC073AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  MEMORY[0x24260EC20](v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC073EC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BC07418(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = (int *)v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23BBF5304;
  return sub_23BC07114(a1, v4, v5, v7, v6);
}

unint64_t sub_23BC07498()
{
  unint64_t result;

  result = qword_256A752C8;
  if (!qword_256A752C8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicStartWorkoutAction, &type metadata for DynamicStartWorkoutAction);
    atomic_store(result, (unint64_t *)&qword_256A752C8);
  }
  return result;
}

unint64_t sub_23BC074E0()
{
  unint64_t result;

  result = qword_256A752D0;
  if (!qword_256A752D0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicStartWorkoutAction, &type metadata for DynamicStartWorkoutAction);
    atomic_store(result, (unint64_t *)&qword_256A752D0);
  }
  return result;
}

unint64_t sub_23BC07528()
{
  unint64_t result;
  uint64_t started;

  result = qword_256A752D8;
  if (!qword_256A752D8)
  {
    started = type metadata accessor for DynamicStartWorkoutState();
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicStartWorkoutState, started);
    atomic_store(result, (unint64_t *)&qword_256A752D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicStartWorkoutFeature()
{
  return &type metadata for DynamicStartWorkoutFeature;
}

uint64_t sub_23BC07580()
{
  uint64_t v0;

  v0 = sub_23BC71C7C();
  __swift_allocate_value_buffer(v0, qword_256A94570);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A94570);
  return sub_23BC71C70();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t ViewStackButtonState.init(locale:upNextCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for ViewStackButtonState() + 20);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t type metadata accessor for ViewStackButtonState()
{
  uint64_t result;

  result = qword_256A75378;
  if (!qword_256A75378)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BC076EC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F437478654E7075;
  else
    return 0x656C61636F6CLL;
}

uint64_t sub_23BC07728()
{
  char *v0;

  return sub_23BC076EC(*v0);
}

uint64_t sub_23BC07730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC0884C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC07754()
{
  sub_23BC07924();
  return sub_23BC72828();
}

uint64_t sub_23BC0777C()
{
  sub_23BC07924();
  return sub_23BC72834();
}

uint64_t ViewStackButtonState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A752E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC07924();
  sub_23BC7281C();
  v8[15] = 0;
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
  sub_23BC72720();
  if (!v1)
  {
    type metadata accessor for ViewStackButtonState();
    v8[14] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
    sub_23BC07C58(&qword_256A752F8, MEMORY[0x24BE2B3F8]);
    sub_23BC72720();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23BC07924()
{
  unint64_t result;

  result = qword_256A752F0;
  if (!qword_256A752F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75EE8, &type metadata for ViewStackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A752F0);
  }
  return result;
}

uint64_t ViewStackButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v22 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  v21 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v24 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23BC71C4C();
  v23 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75300);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ViewStackButtonState();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC07924();
  sub_23BC72810();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = v9;
  v19 = a1;
  v20 = v6;
  v13 = v23;
  v12 = v24;
  v14 = v25;
  v30 = 0;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v15 = v26;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v15, v27);
  v29 = 1;
  sub_23BC07C58(&qword_256A75308, MEMORY[0x24BE2B410]);
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v28);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v11[*(int *)(v18 + 20)], v12, v14);
  sub_23BC07CBC((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_23BC07D00((uint64_t)v11);
}

uint64_t sub_23BC07C58(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75170);
    v6[0] = MEMORY[0x24BEE1798];
    v6[1] = MEMORY[0x24BEE1770];
    result = MEMORY[0x24260ED10](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC07CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ViewStackButtonState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC07D00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ViewStackButtonState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BC07D3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewStackButtonState.init(from:)(a1, a2);
}

uint64_t sub_23BC07D50(_QWORD *a1)
{
  return ViewStackButtonState.encode(to:)(a1);
}

uint64_t ViewStackButtonState.hash(into:)()
{
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  type metadata accessor for ViewStackButtonState();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  sub_23BC07DF4();
  return sub_23BC72264();
}

unint64_t sub_23BC07DF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A75310;
  if (!qword_256A75310)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75170);
    v2 = MEMORY[0x24BEE1778];
    result = MEMORY[0x24260ED10](MEMORY[0x24BE2B400], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A75310);
  }
  return result;
}

uint64_t static ViewStackButtonState.== infix(_:_:)()
{
  if ((MEMORY[0x24260DE7C]() & 1) == 0)
    return 0;
  type metadata accessor for ViewStackButtonState();
  return sub_23BC7212C();
}

uint64_t ViewStackButtonState.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  type metadata accessor for ViewStackButtonState();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  sub_23BC07DF4();
  sub_23BC72264();
  return sub_23BC727E0();
}

uint64_t sub_23BC07F4C()
{
  sub_23BC727A4();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  sub_23BC07DF4();
  sub_23BC72264();
  return sub_23BC727E0();
}

uint64_t sub_23BC07FF0()
{
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  sub_23BC07DF4();
  return sub_23BC72264();
}

uint64_t sub_23BC0807C()
{
  sub_23BC727A4();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  sub_23BC07DF4();
  sub_23BC72264();
  return sub_23BC727E0();
}

uint64_t sub_23BC0811C()
{
  return sub_23BBF377C((unint64_t *)&qword_256A75318, (uint64_t (*)(uint64_t))type metadata accessor for ViewStackButtonState, (uint64_t)&protocol conformance descriptor for ViewStackButtonState);
}

uint64_t sub_23BC08148()
{
  if ((MEMORY[0x24260DE7C]() & 1) != 0)
    return sub_23BC7212C();
  else
    return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewStackButtonState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BC71C4C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ViewStackButtonState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ViewStackButtonState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ViewStackButtonState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ViewStackButtonState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ViewStackButtonState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewStackButtonState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC084C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_23BC71C4C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ViewStackButtonState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC08548(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_23BC71C4C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23BC085C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BC71C4C();
  if (v0 <= 0x3F)
  {
    sub_23BC0864C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23BC0864C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A75388[0])
  {
    v0 = sub_23BC72144();
    if (!v1)
      atomic_store(v0, qword_256A75388);
  }
}

uint64_t storeEnumTagSinglePayload for ViewStackButtonState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC086F4 + 4 * byte_23BC75D45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC08728 + 4 * asc_23BC75D40[v4]))();
}

uint64_t sub_23BC08728(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC08730(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC08738);
  return result;
}

uint64_t sub_23BC08744(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC0874CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC08750(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC08758(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewStackButtonState.CodingKeys()
{
  return &type metadata for ViewStackButtonState.CodingKeys;
}

unint64_t sub_23BC08778()
{
  unint64_t result;

  result = qword_256A753B8;
  if (!qword_256A753B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75EC0, &type metadata for ViewStackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A753B8);
  }
  return result;
}

unint64_t sub_23BC087C0()
{
  unint64_t result;

  result = qword_256A753C0;
  if (!qword_256A753C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75E30, &type metadata for ViewStackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A753C0);
  }
  return result;
}

unint64_t sub_23BC08808()
{
  unint64_t result;

  result = qword_256A753C8;
  if (!qword_256A753C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75E58, &type metadata for ViewStackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A753C8);
  }
  return result;
}

uint64_t sub_23BC0884C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F437478654E7075 && a2 == 0xEB00000000746E75)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t DynamicStartWorkoutState.downloadState.getter()
{
  uint64_t v0;
  unsigned int *v1;

  v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for DynamicStartWorkoutState() + 28));
  return *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48);
}

uint64_t type metadata accessor for DynamicStartWorkoutState()
{
  uint64_t result;

  result = qword_256A75440;
  if (!qword_256A75440)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DynamicStartWorkoutState.downloadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for DynamicStartWorkoutState();
  v4 = v1 + *(int *)(result + 28);
  *(_WORD *)(v4 + 4) = WORD2(a1);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 6) = BYTE6(a1) & 1;
  return result;
}

uint64_t (*DynamicStartWorkoutState.downloadState.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for DynamicStartWorkoutState();
  return nullsub_1;
}

uint64_t DynamicStartWorkoutState.init(workoutIdentifier:locale:isSubscribed:downloadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int *started;
  char *v11;
  uint64_t v12;
  uint64_t result;
  char *v14;

  *a6 = a1;
  a6[1] = a2;
  started = (int *)type metadata accessor for DynamicStartWorkoutState();
  v11 = (char *)a6 + started[5];
  v12 = sub_23BC71C4C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
  *((_BYTE *)a6 + started[6]) = a4;
  v14 = (char *)a6 + started[7];
  *((_WORD *)v14 + 2) = WORD2(a5);
  *(_DWORD *)v14 = a5;
  v14[6] = BYTE6(a5) & 1;
  return result;
}

uint64_t DynamicStartWorkoutState.hash(into:)()
{
  uint64_t v0;
  uint64_t started;
  unsigned int *v2;
  unint64_t v3;

  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  started = type metadata accessor for DynamicStartWorkoutState();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  sub_23BC727BC();
  v2 = (unsigned int *)(v0 + *(int *)(started + 28));
  v3 = *v2 | ((unint64_t)*((unsigned __int16 *)v2 + 2) << 32);
  if (*((_BYTE *)v2 + 6) == 1)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v3 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v3 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

uint64_t sub_23BC08C08(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC08C40 + 4 * byte_23BC75F40[a1]))(0xD000000000000011, 0x800000023BC82160);
}

uint64_t sub_23BC08C40()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BC08C54()
{
  return 0x7263736275537369;
}

uint64_t sub_23BC08C74()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_23BC08C98()
{
  unsigned __int8 *v0;

  return sub_23BC08C08(*v0);
}

uint64_t sub_23BC08CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC09C60(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BC08CC4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23BC08CD0()
{
  sub_23BC0941C();
  return sub_23BC72828();
}

uint64_t sub_23BC08CF8()
{
  sub_23BC0941C();
  return sub_23BC72834();
}

uint64_t DynamicStartWorkoutState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t started;
  int *v10;
  int v11;
  __int16 v12;
  _BYTE v14[16];
  int v15;
  __int16 v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A753D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC0941C();
  sub_23BC7281C();
  v20 = 0;
  sub_23BC726E4();
  if (!v2)
  {
    started = type metadata accessor for DynamicStartWorkoutState();
    v19 = 1;
    sub_23BC71C4C();
    sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23BC72720();
    v18 = 2;
    sub_23BC726F0();
    v10 = (int *)(v3 + *(int *)(started + 28));
    v11 = *v10;
    v12 = *((_WORD *)v10 + 2);
    LOBYTE(v10) = *((_BYTE *)v10 + 6);
    v16 = v12;
    v15 = v11;
    v17 = (char)v10;
    v14[15] = 3;
    sub_23BBF11DC();
    sub_23BC72720();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DynamicStartWorkoutState.hashValue.getter()
{
  sub_23BC727A4();
  DynamicStartWorkoutState.hash(into:)();
  return sub_23BC727E0();
}

uint64_t DynamicStartWorkoutState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *started;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  __int16 v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v23 = a2;
  v3 = sub_23BC71C4C();
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A753E0);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = (int *)type metadata accessor for DynamicStartWorkoutState();
  MEMORY[0x24BDAC7A8](started);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23BC0941C();
  v13 = v28;
  sub_23BC72810();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  v14 = v6;
  v15 = v24;
  v16 = v25;
  v35 = 0;
  *v11 = sub_23BC72648();
  v11[1] = v17;
  v34 = 1;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v11 + started[5], v5, v16);
  v33 = 2;
  *((_BYTE *)v11 + started[6]) = sub_23BC72654() & 1;
  v32 = 3;
  sub_23BBF1220();
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v26);
  v18 = v29;
  v19 = v31;
  v20 = (char *)v11 + started[7];
  *((_WORD *)v20 + 2) = v30;
  *(_DWORD *)v20 = v18;
  v20[6] = v19;
  sub_23BC09460((uint64_t)v11, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_23BC094A4((uint64_t)v11);
}

uint64_t sub_23BC09234@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicStartWorkoutState.init(from:)(a1, a2);
}

uint64_t sub_23BC09248(_QWORD *a1)
{
  return DynamicStartWorkoutState.encode(to:)(a1);
}

uint64_t sub_23BC0925C()
{
  sub_23BC727A4();
  DynamicStartWorkoutState.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC0929C()
{
  sub_23BC727A4();
  DynamicStartWorkoutState.hash(into:)();
  return sub_23BC727E0();
}

uint64_t _s14FitnessActions24DynamicStartWorkoutStateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  int *started;
  uint64_t v8;
  unint64_t v9;
  int v10;
  char *v11;
  unint64_t v12;
  int v13;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_23BC72744(), result = 0, (v5 & 1) != 0))
  {
    started = (int *)type metadata accessor for DynamicStartWorkoutState();
    if ((MEMORY[0x24260DE7C]((char *)a1 + started[5], (char *)a2 + started[5]) & 1) != 0
      && *((unsigned __int8 *)a1 + started[6]) == *((unsigned __int8 *)a2 + started[6]))
    {
      v8 = started[7];
      v9 = *(unsigned int *)((char *)a1 + v8) | ((unint64_t)*(unsigned __int16 *)((char *)a1 + v8 + 4) << 32);
      v10 = *((unsigned __int8 *)a1 + v8 + 6);
      v11 = (char *)a2 + v8;
      v12 = *(unsigned int *)((char *)a2 + v8) | ((unint64_t)*(unsigned __int16 *)((char *)a2 + v8 + 4) << 32);
      v13 = v11[6];
      if (v10 == 1)
      {
        if ((v9 & 0xFFFFFFFFFFFFLL) != 0)
        {
          if (v13)
            return (v12 & 0xFFFFFFFFFFFFLL) != 0;
        }
        else if (v13)
        {
          return (v12 & 0xFFFFFFFFFFFFLL) == 0;
        }
        return 0;
      }
      if ((v13 & 1) == 0)
      {
        if ((v9 & 0x10000000000) != 0)
        {
          if ((v9 & 0xFFFFFFFFFFLL) != 0)
          {
            if ((v12 & 0x10000000000) != 0)
              return (v12 & 0xFFFFFFFFFFLL) != 0;
          }
          else if ((v12 & 0x10000000000) != 0)
          {
            return (v12 & 0xFFFFFFFFFFLL) == 0;
          }
          return 0;
        }
        if ((v12 & 0x10000000000) == 0)
        {
          if ((v9 & 0x100000000) == 0)
            return (v12 & 0x100000000) == 0 && *(float *)&v9 == *(float *)&v12;
          if ((v12 & 0x100000000) != 0)
            return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_23BC0941C()
{
  unint64_t result;

  result = qword_256A753D8;
  if (!qword_256A753D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7614C, &type metadata for DynamicStartWorkoutState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A753D8);
  }
  return result;
}

uint64_t sub_23BC09460(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for DynamicStartWorkoutState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_23BC094A4(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for DynamicStartWorkoutState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_23BC094E0()
{
  return sub_23BBF377C((unint64_t *)&qword_256A752D8, (uint64_t (*)(uint64_t))type metadata accessor for DynamicStartWorkoutState, (uint64_t)&protocol conformance descriptor for DynamicStartWorkoutState);
}

_QWORD *initializeBufferWithCopyOfBuffer for DynamicStartWorkoutState(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23BC71C4C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v14 = (_DWORD *)((char *)v4 + v13);
    v15 = (_DWORD *)((char *)a2 + v13);
    *v14 = *v15;
    *(_DWORD *)((char *)v14 + 3) = *(_DWORD *)((char *)v15 + 3);
  }
  return v4;
}

uint64_t destroy for DynamicStartWorkoutState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23BC71C4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for DynamicStartWorkoutState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BC71C4C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (_DWORD *)((char *)a1 + v12);
  v14 = (_DWORD *)((char *)a2 + v12);
  *v13 = *v14;
  *(_DWORD *)((char *)v13 + 3) = *(_DWORD *)((char *)v14 + 3);
  return a1;
}

_QWORD *assignWithCopy for DynamicStartWorkoutState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  int v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (_DWORD *)((char *)a1 + v10);
  v12 = (_DWORD *)((char *)a2 + v10);
  v13 = *(_DWORD *)((char *)v12 + 3);
  *v11 = *v12;
  *(_DWORD *)((char *)v11 + 3) = v13;
  return a1;
}

_OWORD *initializeWithTake for DynamicStartWorkoutState(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = (_DWORD *)((char *)a1 + v10);
  v12 = (_DWORD *)((char *)a2 + v10);
  *v11 = *v12;
  *(_DWORD *)((char *)v11 + 3) = *(_DWORD *)((char *)v12 + 3);
  return a1;
}

_QWORD *assignWithTake for DynamicStartWorkoutState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (_DWORD *)((char *)a1 + v11);
  v13 = (_DWORD *)((char *)a2 + v11);
  *v12 = *v13;
  *(_DWORD *)((char *)v12 + 3) = *(_DWORD *)((char *)v13 + 3);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicStartWorkoutState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC098A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23BC71C4C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DynamicStartWorkoutState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC09930(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23BC71C4C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23BC099A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71C4C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicStartWorkoutState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicStartWorkoutState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC09B08 + 4 * byte_23BC75F49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC09B3C + 4 * byte_23BC75F44[v4]))();
}

uint64_t sub_23BC09B3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC09B44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC09B4CLL);
  return result;
}

uint64_t sub_23BC09B58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC09B60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC09B64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC09B6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicStartWorkoutState.CodingKeys()
{
  return &type metadata for DynamicStartWorkoutState.CodingKeys;
}

unint64_t sub_23BC09B8C()
{
  unint64_t result;

  result = qword_256A75480;
  if (!qword_256A75480)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76124, &type metadata for DynamicStartWorkoutState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75480);
  }
  return result;
}

unint64_t sub_23BC09BD4()
{
  unint64_t result;

  result = qword_256A75488;
  if (!qword_256A75488)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76094, &type metadata for DynamicStartWorkoutState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75488);
  }
  return result;
}

unint64_t sub_23BC09C1C()
{
  unint64_t result;

  result = qword_256A75490;
  if (!qword_256A75490)
  {
    result = MEMORY[0x24260ED10](&unk_23BC760BC, &type metadata for DynamicStartWorkoutState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75490);
  }
  return result;
}

uint64_t sub_23BC09C60(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82160 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xED00006574617453)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BC09E24(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0x6570704177656976;
}

uint64_t sub_23BC09E68()
{
  char *v0;

  return sub_23BC09E24(*v0);
}

uint64_t sub_23BC09E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC0ACF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC09E94()
{
  sub_23BC0A1D0();
  return sub_23BC72828();
}

uint64_t sub_23BC09EBC()
{
  sub_23BC0A1D0();
  return sub_23BC72834();
}

uint64_t sub_23BC09EE4()
{
  sub_23BC0A214();
  return sub_23BC72828();
}

uint64_t sub_23BC09F0C()
{
  sub_23BC0A214();
  return sub_23BC72834();
}

uint64_t sub_23BC09F34()
{
  sub_23BC0A258();
  return sub_23BC72828();
}

uint64_t sub_23BC09F5C()
{
  sub_23BC0A258();
  return sub_23BC72834();
}

uint64_t DynamicStartWorkoutAction.encode(to:)(_QWORD *a1)
{
  unsigned int *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75498);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A754A0);
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A754A8);
  v25 = *(_QWORD *)(v8 - 8);
  v26 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *((unsigned __int16 *)v1 + 2);
  v12 = *v1;
  v13 = *((_BYTE *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC0A1D0();
  sub_23BC7281C();
  if ((v13 & 1) != 0)
  {
    v30 = 0;
    sub_23BC0A258();
    v14 = v26;
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v14);
  }
  else
  {
    v16 = v12 | (v11 << 32);
    v31 = 1;
    sub_23BC0A214();
    v17 = v22;
    v18 = v26;
    sub_23BC726A8();
    v28 = BYTE4(v16);
    v27 = v16;
    v29 = BYTE5(v16) & 1;
    sub_23BBE9758();
    v19 = v24;
    sub_23BC72720();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v18);
  }
}

unint64_t sub_23BC0A1D0()
{
  unint64_t result;

  result = qword_256A754B0;
  if (!qword_256A754B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76540, &type metadata for DynamicStartWorkoutAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A754B0);
  }
  return result;
}

unint64_t sub_23BC0A214()
{
  unint64_t result;

  result = qword_256A754B8;
  if (!qword_256A754B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC764F0, &type metadata for DynamicStartWorkoutAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A754B8);
  }
  return result;
}

unint64_t sub_23BC0A258()
{
  unint64_t result;

  result = qword_256A754C0;
  if (!qword_256A754C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC764A0, &type metadata for DynamicStartWorkoutAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A754C0);
  }
  return result;
}

uint64_t DynamicStartWorkoutAction.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int v38;
  unsigned __int8 v39;
  char v40;
  char v41;
  char v42;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A754C8);
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A754D0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A754D8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23BC0A1D0();
  v15 = v37;
  sub_23BC72810();
  if (v15)
    goto LABEL_6;
  v16 = v7;
  v31 = v6;
  v17 = v35;
  v37 = v11;
  v18 = v13;
  v19 = sub_23BC72690();
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v21 = sub_23BC725A0();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v23 = &type metadata for DynamicStartWorkoutAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v10);
LABEL_6:
    v24 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v20 = *(unsigned __int8 *)(v19 + 32);
  if ((v20 & 1) != 0)
  {
    v42 = 1;
    sub_23BC0A214();
    sub_23BC72600();
    LODWORD(v31) = v20;
    sub_23BBEAD44();
    v26 = v32;
    sub_23BC72684();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v10);
    v27 = 0x10000000000;
    if (!v40)
      v27 = 0;
    v28 = v27 | v38 | ((unint64_t)v39 << 32);
    v24 = (uint64_t)v36;
    LOBYTE(v20) = v31;
  }
  else
  {
    v41 = 0;
    sub_23BC0A258();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v10);
    v28 = 0;
    v24 = (uint64_t)v36;
  }
  v29 = v34;
  *v34 = v28;
  *((_WORD *)v29 + 2) = WORD2(v28);
  *((_BYTE *)v29 + 6) = v20 ^ 1;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23BC0A698@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return DynamicStartWorkoutAction.init(from:)(a1, a2);
}

uint64_t sub_23BC0A6AC(_QWORD *a1)
{
  return DynamicStartWorkoutAction.encode(to:)(a1);
}

uint64_t DynamicStartWorkoutAction.hash(into:)()
{
  unsigned int *v0;
  unint64_t v1;

  if ((*((_BYTE *)v0 + 6) & 1) != 0)
    return sub_23BC727B0();
  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  sub_23BC727B0();
  if ((v1 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v1 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

uint64_t DynamicStartWorkoutAction.hashValue.getter()
{
  sub_23BC727A4();
  DynamicStartWorkoutAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC0A7A4()
{
  sub_23BC727A4();
  DynamicStartWorkoutAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC0A800()
{
  sub_23BC727A4();
  DynamicStartWorkoutAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t _s14FitnessActions25DynamicStartWorkoutActionO2eeoiySbAC_ACtFZ_0(unsigned int *a1, float *a2)
{
  char v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  v3 = *((_BYTE *)a1 + 6);
  result = *((unsigned __int8 *)a2 + 6);
  if ((v3 & 1) == 0)
  {
    if ((result & 1) == 0)
    {
      v5 = *(unsigned int *)a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32);
      v6 = *a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32);
      if ((v6 & 0x10000000000) != 0)
      {
        if ((v6 & 0xFFFFFFFFFFLL) != 0)
        {
          if ((v5 & 0x10000000000) != 0)
            return (v5 & 0xFFFFFFFFFFLL) != 0;
        }
        else if ((v5 & 0x10000000000) != 0)
        {
          return (v5 & 0xFFFFFFFFFFLL) == 0;
        }
        return 0;
      }
      if ((v5 & 0x10000000000) == 0)
      {
        if ((v6 & 0x100000000) == 0)
          return (v5 & 0x100000000) == 0 && *(float *)&v6 == *a2;
        if ((v5 & 0x100000000) != 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_23BC0A8E8()
{
  unint64_t result;

  result = qword_256A754E0;
  if (!qword_256A754E0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicStartWorkoutAction, &type metadata for DynamicStartWorkoutAction);
    atomic_store(result, (unint64_t *)&qword_256A754E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicStartWorkoutAction()
{
  return &type metadata for DynamicStartWorkoutAction;
}

uint64_t storeEnumTagSinglePayload for DynamicStartWorkoutAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC0A988 + 4 * byte_23BC761A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC0A9BC + 4 * byte_23BC761A0[v4]))();
}

uint64_t sub_23BC0A9BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC0A9C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC0A9CCLL);
  return result;
}

uint64_t sub_23BC0A9D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC0A9E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC0A9E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC0A9EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicStartWorkoutAction.CodingKeys()
{
  return &type metadata for DynamicStartWorkoutAction.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicStartWorkoutAction.ViewAppearedCodingKeys()
{
  return &type metadata for DynamicStartWorkoutAction.ViewAppearedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for DynamicStartWorkoutAction.DownloadStatusUpdatedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC0AA58 + 4 * byte_23BC761AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC0AA78 + 4 * byte_23BC761AF[v4]))();
}

_BYTE *sub_23BC0AA58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC0AA78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC0AA80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC0AA88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC0AA90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC0AA98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DynamicStartWorkoutAction.DownloadStatusUpdatedCodingKeys()
{
  return &type metadata for DynamicStartWorkoutAction.DownloadStatusUpdatedCodingKeys;
}

unint64_t sub_23BC0AAB8()
{
  unint64_t result;

  result = qword_256A754E8;
  if (!qword_256A754E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76370, &type metadata for DynamicStartWorkoutAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A754E8);
  }
  return result;
}

unint64_t sub_23BC0AB00()
{
  unint64_t result;

  result = qword_256A754F0;
  if (!qword_256A754F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76478, &type metadata for DynamicStartWorkoutAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A754F0);
  }
  return result;
}

unint64_t sub_23BC0AB48()
{
  unint64_t result;

  result = qword_256A754F8;
  if (!qword_256A754F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76398, &type metadata for DynamicStartWorkoutAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A754F8);
  }
  return result;
}

unint64_t sub_23BC0AB90()
{
  unint64_t result;

  result = qword_256A75500;
  if (!qword_256A75500)
  {
    result = MEMORY[0x24260ED10](&unk_23BC763C0, &type metadata for DynamicStartWorkoutAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75500);
  }
  return result;
}

unint64_t sub_23BC0ABD8()
{
  unint64_t result;

  result = qword_256A75508;
  if (!qword_256A75508)
  {
    result = MEMORY[0x24260ED10](&unk_23BC762E0, &type metadata for DynamicStartWorkoutAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75508);
  }
  return result;
}

unint64_t sub_23BC0AC20()
{
  unint64_t result;

  result = qword_256A75510;
  if (!qword_256A75510)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76308, &type metadata for DynamicStartWorkoutAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75510);
  }
  return result;
}

unint64_t sub_23BC0AC68()
{
  unint64_t result;

  result = qword_256A75518;
  if (!qword_256A75518)
  {
    result = MEMORY[0x24260ED10](&unk_23BC763E8, &type metadata for DynamicStartWorkoutAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75518);
  }
  return result;
}

unint64_t sub_23BC0ACB0()
{
  unint64_t result;

  result = qword_256A75520;
  if (!qword_256A75520)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76410, &type metadata for DynamicStartWorkoutAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75520);
  }
  return result;
}

uint64_t sub_23BC0ACF4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC81BB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC0ADE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for BookmarkButtonFeature(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for BookmarkButtonFeature<A>, v4);
  v5 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v5);
  return sub_23BC71CDC();
}

uint64_t BookmarkButton.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v12 = type metadata accessor for BookmarkButtonFeature(255, a3, a4, v11);
  MEMORY[0x24260ED10](&protocol conformance descriptor for BookmarkButtonFeature<A>, v12);
  v13 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v13);
  result = sub_23BC71CD0();
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v15;
  *(_BYTE *)(a5 + 16) = v16 & 1;
  return result;
}

uint64_t sub_23BC0AF30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC0AF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v27 = a4;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A755F0);
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A755E0);
  MEMORY[0x24BDAC7A8](v25);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  v13 = v4[1];
  v15 = *((_BYTE *)v4 + 16);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v28 = *(_OWORD *)(a3 + 16);
  v29 = v14;
  v30 = v13;
  v31 = v15;
  sub_23BBE87B8(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75630);
  sub_23BBE869C(&qword_256A75638, &qword_256A75630, MEMORY[0x24BDF41A8]);
  sub_23BC72048();
  if (a1)
  {
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a1;
    *(_QWORD *)(v17 + 24) = a2;
    v18 = sub_23BBEB2B0;
  }
  else
  {
    v18 = 0;
  }
  sub_23BBE87B8(a1);
  sub_23BBE87C8((uint64_t)v18);
  KeyPath = swift_getKeyPath();
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = a1 == 0;
  v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v26);
  v22 = (uint64_t *)&v12[*(int *)(v25 + 36)];
  *v22 = KeyPath;
  v22[1] = (uint64_t)sub_23BBE87F0;
  v22[2] = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  return sub_23BC0C328((uint64_t)v12, v27);
}

uint64_t sub_23BC0B180()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75640);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75648);
  sub_23BBE869C(&qword_256A75650, &qword_256A75648, MEMORY[0x24BEE30C8]);
  swift_getOpaqueTypeConformance2();
  return sub_23BC72024();
}

uint64_t sub_23BC0B25C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = type metadata accessor for BookmarkButton(0, a1, a2, v10);
  sub_23BC0ADE8(v11, v12, v13, v14);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC72300();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v16;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_23BC0B414()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75648);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = sub_23BC71FF4();
  v3 = *MEMORY[0x24BDECF00];
  v4 = sub_23BC71D60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  sub_23BC0C3B4();
  result = sub_23BC7227C();
  if ((result & 1) != 0)
  {
    sub_23BBE869C(&qword_256A75650, &qword_256A75648, MEMORY[0x24BEE30C8]);
    sub_23BC71F34();
    sub_23BBE81C0((uint64_t)v2, &qword_256A75648);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BC0B548(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *v1;
  v7 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  sub_23BC71CA0();
  v9 = sub_23BC71CB8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
  v10 = swift_allocObject();
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v10 + 16) = v11;
  *(_QWORD *)(v10 + 24) = v12;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v7;
  *(_BYTE *)(v10 + 48) = v8;
  v15 = v11;
  v16 = v12;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
  sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
  return sub_23BC7203C();
}

uint64_t sub_23BC0B690@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = type metadata accessor for BookmarkButton(0, a1, a2, v10);
  sub_23BC0ADE8(v11, v12, v13, v14);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC72300();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v16;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t BookmarkButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75528);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v10 = *(unsigned __int8 *)(v2 + 16);
  v12 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  sub_23BC0B954(v8, v9, v10, v12, v11, (uint64_t)v7);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v9;
  *(_BYTE *)(v13 + 48) = v10;
  sub_23BBE817C((uint64_t)v7, a2, &qword_256A75528);
  v14 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A75530) + 36));
  *v14 = sub_23BC0BF7C;
  v14[1] = (uint64_t (*)())v13;
  v14[2] = 0;
  v14[3] = 0;
  sub_23BBE7EBC();
  return sub_23BBE81C0((uint64_t)v7, &qword_256A75528);
}

void sub_23BC0B954(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[5];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a6;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75608);
  MEMORY[0x24BDAC7A8](v28);
  v29 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v27[3] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v27[1] = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75600);
  MEMORY[0x24BDAC7A8](v35);
  v31 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75610);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A755E0);
  MEMORY[0x24BDAC7A8](v40);
  v32 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75618);
  MEMORY[0x24BDAC7A8](v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1;
  v43 = a1;
  v44 = a2;
  v37 = a2;
  v38 = a3;
  v45 = a3 & 1;
  v22 = type metadata accessor for BookmarkButton(0, a4, a5, v21);
  sub_23BC0ADE8(v22, v23, v24, v25);
  v27[2] = a4;
  v41 = a4;
  v42 = a5;
  v27[4] = a5;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  sub_23BC72138();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v26 = (char *)sub_23BC0BC04 + 4 * byte_23BC76590[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC0BC04()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((*v1 & 1) != 0)
  {
    v10 = *(_QWORD *)(v2 - 160);
    *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 144);
    *(_QWORD *)(v2 - 104) = v10;
    *(_BYTE *)(v2 - 96) = *(_DWORD *)(v2 - 148) & 1;
    v11 = *(_QWORD *)(v2 - 264);
    sub_23BC0B548(v0);
    v12 = *(_QWORD *)(v2 - 248);
    v13 = *(_QWORD *)(v2 - 216);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 16))(*(_QWORD *)(v2 - 224), v11, v13);
    swift_storeEnumTagMultiPayload();
    sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    sub_23BC0C108();
    v9 = *(_QWORD *)(v2 - 208);
    sub_23BC71E20();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  else
  {
    v3 = *(_QWORD *)(v2 - 144);
    v4 = *(_QWORD *)(v2 - 160);
    *(_QWORD *)(v2 - 112) = v3;
    *(_QWORD *)(v2 - 104) = v4;
    v5 = *(_DWORD *)(v2 - 148) & 1;
    *(_BYTE *)(v2 - 96) = v5;
    v6 = swift_allocObject();
    v7 = *(_QWORD *)(v2 - 240);
    *(_QWORD *)(v6 + 16) = *(_QWORD *)(v2 - 256);
    *(_QWORD *)(v6 + 24) = v7;
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v4;
    *(_BYTE *)(v6 + 48) = v5;
    sub_23BBE7EBC();
    v8 = *(_QWORD *)(v2 - 200);
    sub_23BC0AF54((uint64_t)sub_23BC0C22C, v6, v0, v8);
    swift_release();
    sub_23BBE817C(v8, *(_QWORD *)(v2 - 224), &qword_256A755E0);
    swift_storeEnumTagMultiPayload();
    sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    sub_23BC0C108();
    v9 = *(_QWORD *)(v2 - 208);
    sub_23BC71E20();
    sub_23BBE81C0(v8, &qword_256A755E0);
  }
  sub_23BBE817C(v9, *(_QWORD *)(v2 - 192), &qword_256A75600);
  swift_storeEnumTagMultiPayload();
  sub_23BC0C108();
  sub_23BC0C1A4();
  sub_23BC71E20();
  return sub_23BBE81C0(v9, &qword_256A75600);
}

uint64_t sub_23BC0BF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = type metadata accessor for BookmarkButton(0, a4, a5, a4);
  sub_23BC0ADE8(v5, v6, v7, v8);
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC0BF7C()
{
  return sub_23BC0C234();
}

uint64_t sub_23BC0BF84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for BookmarkButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BookmarkButton);
}

unint64_t sub_23BC0BFCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A755B8;
  if (!qword_256A755B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256A75530);
    v2[0] = sub_23BC0C038();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A755B8);
  }
  return result;
}

unint64_t sub_23BC0C038()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256A755C0;
  if (!qword_256A755C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75528);
    v2 = sub_23BC0C09C();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A755C0);
  }
  return result;
}

unint64_t sub_23BC0C09C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A755C8;
  if (!qword_256A755C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A755D0);
    v2[0] = sub_23BC0C108();
    v2[1] = sub_23BC0C1A4();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A755C8);
  }
  return result;
}

unint64_t sub_23BC0C108()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A755D8;
  if (!qword_256A755D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A755E0);
    v2[0] = sub_23BBE869C(&qword_256A755E8, &qword_256A755F0, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23BBE869C(&qword_256A73F80, &qword_256A73F88, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A755D8);
  }
  return result;
}

unint64_t sub_23BC0C1A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A755F8;
  if (!qword_256A755F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75600);
    v2[0] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23BC0C108();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A755F8);
  }
  return result;
}

uint64_t sub_23BC0C22C()
{
  return sub_23BC0C234();
}

uint64_t sub_23BC0C234()
{
  uint64_t v0;

  return sub_23BC0BF18(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BC0C25C()
{
  return sub_23BC0C234();
}

uint64_t sub_23BC0C264()
{
  return sub_23BC72024();
}

uint64_t sub_23BC0C2C8()
{
  return sub_23BC0C3A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC0B690);
}

uint64_t sub_23BC0C2D4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC0C300()
{
  return sub_23BC0B180();
}

uint64_t sub_23BC0C318()
{
  return swift_deallocObject();
}

uint64_t sub_23BC0C328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A755E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC0C370()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC0C394()
{
  return sub_23BC0C3A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC0B25C);
}

uint64_t sub_23BC0C3A0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_23BC0C3B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A75658;
  if (!qword_256A75658)
  {
    v1 = sub_23BC71D60();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDECF78], v1);
    atomic_store(result, (unint64_t *)&qword_256A75658);
  }
  return result;
}

uint64_t static ActionButtonBuilder.downloadedStatusViewBuilder(locale:action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC0C498(a1, a2, a3);
}

uint64_t sub_23BC0C420()
{
  return sub_23BC72024();
}

uint64_t static ActionButtonBuilder.bookmarkedStatusViewBuilder(locale:action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC0C498(a1, a2, a3);
}

uint64_t sub_23BC0C498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  sub_23BBE87B8(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
  sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
  return sub_23BC72048();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC0C58C()
{
  return sub_23BC72024();
}

ValueMetadata *type metadata accessor for ActionButtonBuilder()
{
  return &type metadata for ActionButtonBuilder;
}

uint64_t sub_23BC0C5F8()
{
  return sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
}

uint64_t sub_23BC0C624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23BC71C4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  result = sub_23BC72300();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_23BC0C77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC0C624(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23BC0C7B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71FF4();
  *a1 = result;
  return result;
}

uint64_t sub_23BC0C7EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC0C624(*(_QWORD *)(v1 + 16), a1);
}

void WorkoutMediaType.localizedTitle(labelContent:rawActivityType:locale:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v6);
  __asm { BR              X11 }
}

void sub_23BC0CE80()
{
  qword_256A94588 = 0x7269632E79616C70;
  unk_256A94590 = 0xEB00000000656C63;
}

uint64_t sub_23BC0CEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  uint64_t v10;

  v3 = sub_23BC71C4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  return sub_23BC72300();
}

BOOL static CreatePlanAlertAction.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t CreatePlanAlertAction.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t sub_23BC0D0B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC0D0F0 + 4 * byte_23BC766C0[a1]))(0xD000000000000013, 0x800000023BC823D0);
}

uint64_t sub_23BC0D0F0()
{
  return 0x6570704177656976;
}

uint64_t sub_23BC0D110()
{
  return 0x5474736575716572;
}

uint64_t sub_23BC0D134()
{
  return 0x417373696D736964;
}

uint64_t sub_23BC0D154()
{
  unsigned __int8 *v0;

  return sub_23BC0D0B8(*v0);
}

uint64_t sub_23BC0D15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC0D7E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC0D180()
{
  sub_23BC0D5FC();
  return sub_23BC72828();
}

uint64_t sub_23BC0D1A8()
{
  sub_23BC0D5FC();
  return sub_23BC72834();
}

uint64_t sub_23BC0D1D0()
{
  sub_23BC0D6C8();
  return sub_23BC72828();
}

uint64_t sub_23BC0D1F8()
{
  sub_23BC0D6C8();
  return sub_23BC72834();
}

uint64_t sub_23BC0D220()
{
  sub_23BC0D640();
  return sub_23BC72828();
}

uint64_t sub_23BC0D248()
{
  sub_23BC0D640();
  return sub_23BC72834();
}

uint64_t sub_23BC0D270()
{
  sub_23BC0D70C();
  return sub_23BC72828();
}

uint64_t sub_23BC0D298()
{
  sub_23BC0D70C();
  return sub_23BC72834();
}

uint64_t sub_23BC0D2C0()
{
  sub_23BC0D684();
  return sub_23BC72828();
}

uint64_t sub_23BC0D2E8()
{
  sub_23BC0D684();
  return sub_23BC72834();
}

void CreatePlanAlertAction.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75660);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75668);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75670);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75678);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75680);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC0D5FC();
  sub_23BC7281C();
  __asm { BR              X10 }
}

uint64_t sub_23BC0D4C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_23BC0D70C();
  sub_23BC726A8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

unint64_t sub_23BC0D5FC()
{
  unint64_t result;

  result = qword_256A75688;
  if (!qword_256A75688)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76B84, &type metadata for CreatePlanAlertAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75688);
  }
  return result;
}

unint64_t sub_23BC0D640()
{
  unint64_t result;

  result = qword_256A75690;
  if (!qword_256A75690)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76B34, &type metadata for CreatePlanAlertAction.RequestTimedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75690);
  }
  return result;
}

unint64_t sub_23BC0D684()
{
  unint64_t result;

  result = qword_256A75698;
  if (!qword_256A75698)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76AE4, &type metadata for CreatePlanAlertAction.WorkoutPlanReceivedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75698);
  }
  return result;
}

unint64_t sub_23BC0D6C8()
{
  unint64_t result;

  result = qword_256A756A0;
  if (!qword_256A756A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76A94, &type metadata for CreatePlanAlertAction.DismissAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756A0);
  }
  return result;
}

unint64_t sub_23BC0D70C()
{
  unint64_t result;

  result = qword_256A756A8;
  if (!qword_256A756A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76A44, &type metadata for CreatePlanAlertAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756A8);
  }
  return result;
}

uint64_t CreatePlanAlertAction.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t CreatePlanAlertAction.init(from:)(_QWORD *a1)
{
  return sub_23BC0D9C0(a1);
}

uint64_t sub_23BC0D7A8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BC0D9C0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23BC0D7D0(_QWORD *a1)
{
  unsigned __int8 *v1;

  CreatePlanAlertAction.encode(to:)(a1, *v1);
}

uint64_t sub_23BC0D7E8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x417373696D736964 && a2 == 0xEC0000007472656CLL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023BC823D0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5474736575716572 && a2 == 0xEF74754F64656D69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BC0D9C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75710);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75718);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75720);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75728);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75730);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23BC0D5FC();
  v17 = v25;
  sub_23BC72810();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_23BC72690();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_23BC725A0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v21 = &type metadata for CreatePlanAlertAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v12;
}

void sub_23BC0DCE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_23BC0D6C8();
  sub_23BC72600();
  if (!v0)
    JUMPOUT(0x23BC0DDB8);
  JUMPOUT(0x23BC0DC98);
}

void sub_23BC0DD28()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_23BC0D684();
  sub_23BC72600();
  if (!v0)
    JUMPOUT(0x23BC0DD68);
  JUMPOUT(0x23BC0DC98);
}

void sub_23BC0DD74()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_23BC0D640();
  sub_23BC72600();
  if (!v0)
    JUMPOUT(0x23BC0DDB8);
  JUMPOUT(0x23BC0DC98);
}

unint64_t sub_23BC0DDE8()
{
  unint64_t result;

  result = qword_256A756B0;
  if (!qword_256A756B0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanAlertAction, &type metadata for CreatePlanAlertAction);
    atomic_store(result, (unint64_t *)&qword_256A756B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanAlertAction()
{
  return &type metadata for CreatePlanAlertAction;
}

uint64_t _s14FitnessActions21CreatePlanAlertActionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC0DE90 + 4 * byte_23BC766D1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC0DEC4 + 4 * byte_23BC766CC[v4]))();
}

uint64_t sub_23BC0DEC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC0DECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC0DED4);
  return result;
}

uint64_t sub_23BC0DEE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC0DEE8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC0DEEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC0DEF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanAlertAction.CodingKeys()
{
  return &type metadata for CreatePlanAlertAction.CodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanAlertAction.ViewAppearedCodingKeys()
{
  return &type metadata for CreatePlanAlertAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanAlertAction.DismissAlertCodingKeys()
{
  return &type metadata for CreatePlanAlertAction.DismissAlertCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanAlertAction.WorkoutPlanReceivedCodingKeys()
{
  return &type metadata for CreatePlanAlertAction.WorkoutPlanReceivedCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanAlertAction.RequestTimedOutCodingKeys()
{
  return &type metadata for CreatePlanAlertAction.RequestTimedOutCodingKeys;
}

unint64_t sub_23BC0DF54()
{
  unint64_t result;

  result = qword_256A756B8;
  if (!qword_256A756B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76A1C, &type metadata for CreatePlanAlertAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756B8);
  }
  return result;
}

unint64_t sub_23BC0DF9C()
{
  unint64_t result;

  result = qword_256A756C0;
  if (!qword_256A756C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7693C, &type metadata for CreatePlanAlertAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756C0);
  }
  return result;
}

unint64_t sub_23BC0DFE4()
{
  unint64_t result;

  result = qword_256A756C8;
  if (!qword_256A756C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76964, &type metadata for CreatePlanAlertAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756C8);
  }
  return result;
}

unint64_t sub_23BC0E02C()
{
  unint64_t result;

  result = qword_256A756D0;
  if (!qword_256A756D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC768EC, &type metadata for CreatePlanAlertAction.DismissAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756D0);
  }
  return result;
}

unint64_t sub_23BC0E074()
{
  unint64_t result;

  result = qword_256A756D8;
  if (!qword_256A756D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76914, &type metadata for CreatePlanAlertAction.DismissAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756D8);
  }
  return result;
}

unint64_t sub_23BC0E0BC()
{
  unint64_t result;

  result = qword_256A756E0;
  if (!qword_256A756E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7689C, &type metadata for CreatePlanAlertAction.WorkoutPlanReceivedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756E0);
  }
  return result;
}

unint64_t sub_23BC0E104()
{
  unint64_t result;

  result = qword_256A756E8;
  if (!qword_256A756E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC768C4, &type metadata for CreatePlanAlertAction.WorkoutPlanReceivedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756E8);
  }
  return result;
}

unint64_t sub_23BC0E14C()
{
  unint64_t result;

  result = qword_256A756F0;
  if (!qword_256A756F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7684C, &type metadata for CreatePlanAlertAction.RequestTimedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756F0);
  }
  return result;
}

unint64_t sub_23BC0E194()
{
  unint64_t result;

  result = qword_256A756F8;
  if (!qword_256A756F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76874, &type metadata for CreatePlanAlertAction.RequestTimedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A756F8);
  }
  return result;
}

unint64_t sub_23BC0E1DC()
{
  unint64_t result;

  result = qword_256A75700;
  if (!qword_256A75700)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7698C, &type metadata for CreatePlanAlertAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75700);
  }
  return result;
}

unint64_t sub_23BC0E224()
{
  unint64_t result;

  result = qword_256A75708;
  if (!qword_256A75708)
  {
    result = MEMORY[0x24260ED10](&unk_23BC769B4, &type metadata for CreatePlanAlertAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A75708);
  }
  return result;
}

ValueMetadata *type metadata accessor for OngoingWorkoutAlert()
{
  return &type metadata for OngoingWorkoutAlert;
}

uint64_t sub_23BC0E278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC0E288(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;

  v7 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v11 = sub_23BC71EC8();
  v13 = v12;
  v15 = v14 & 1;
  sub_23BC71CDC();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  *(_BYTE *)(v16 + 32) = a4 & 1;
  sub_23BBE7EBC();
  sub_23BC720C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75738);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A742B0);
  sub_23BBE869C(&qword_256A75740, &qword_256A75738, MEMORY[0x24BDEFB78]);
  sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
  sub_23BC71F94();
  sub_23BBECDD0(v11, v13, v15);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23BC0E5BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;

  v35 = a3;
  v36 = a1;
  v37 = a2;
  v39 = a4;
  v38 = sub_23BC71C34();
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74698);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v34 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v20, 1, v9);
  if ((_DWORD)result == 1)
  {
    v22 = 0;
  }
  else
  {
    sub_23BC0EF90((uint64_t)v20, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
    sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
    sub_23BC71CDC();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v23 = v38;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v38);
    v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_23BC0EFD8((uint64_t)v17, (uint64_t)v8);
    sub_23BC0EFD8((uint64_t)v15, v24);
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v25((uint64_t)v8, 1, v23) == 1)
    {
      sub_23BBE81C0((uint64_t)v15, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v17, &qword_256A74428);
      v26 = v25(v24, 1, v23);
      if (v26 == 1)
        v27 = &qword_256A74428;
      else
        v27 = &qword_256A74698;
      if (v26 == 1)
        v28 = -1;
      else
        v28 = 0;
    }
    else
    {
      v29 = v34;
      sub_23BC0EFD8((uint64_t)v8, v34);
      if (v25(v24, 1, v23) == 1)
      {
        sub_23BBE81C0((uint64_t)v15, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v17, &qword_256A74428);
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v29, v23);
        v28 = 0;
        v27 = &qword_256A74698;
      }
      else
      {
        v30 = v33;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v33, v24, v23);
        sub_23BC06D14();
        v28 = sub_23BC7227C();
        v31 = *(void (**)(char *, uint64_t))(v4 + 8);
        v31(v30, v23);
        v27 = &qword_256A74428;
        sub_23BBE81C0((uint64_t)v15, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v17, &qword_256A74428);
        v31((char *)v29, v23);
      }
    }
    result = sub_23BBE81C0((uint64_t)v8, v27);
    v22 = v28 & 1;
  }
  *v39 = v22;
  return result;
}

uint64_t sub_23BC0E98C()
{
  type metadata accessor for StartWorkoutButtonAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BC0E9BC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  char v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BC71CAC();
  v9 = sub_23BC71CB8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_BYTE *)(v10 + 32) = a3 & 1;
  v13 = a1;
  v14 = a2;
  v15 = a3 & 1;
  sub_23BBE7EBC();
  return sub_23BC7203C();
}

uint64_t sub_23BC0EACC()
{
  uint64_t started;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BC0EF54((uint64_t)v2);
}

uint64_t sub_23BC0EBB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_23BC0ED58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_23BC0EF04(uint64_t a1)
{
  uint64_t v1;

  return sub_23BC0E288(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_23BC0EF14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23BC0E5BC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_23BC0EF20()
{
  uint64_t v0;

  return sub_23BC0E9BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_23BC0EF2C@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC0ED58(a1);
}

uint64_t sub_23BC0EF3C()
{
  return sub_23BC0EACC();
}

uint64_t sub_23BC0EF48@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC0EBB4(a1);
}

uint64_t sub_23BC0EF54(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_23BC0EF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC0EFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC0F020()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75738);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A742B0);
  sub_23BBE869C(&qword_256A75740, &qword_256A75738, MEMORY[0x24BDEFB78]);
  sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
  return swift_getOpaqueTypeConformance2();
}

id static NSBundle.localization.getter()
{
  uint64_t ObjCClassFromMetadata;

  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  return objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
}

uint64_t type metadata accessor for LocalizationBundle()
{
  return objc_opt_self();
}

uint64_t sub_23BC0F138()
{
  return swift_deallocClassInstance();
}

unint64_t DownloadState.LoadStatus.init(rawValue:)(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

uint64_t static DownloadState.LoadStatus.allCases.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DownloadState.LoadStatus(255, a1, a2, a4);
  sub_23BC72738();
  swift_allocObject();
  v4 = sub_23BC72378();
  *(_QWORD *)v5 = 0x706050403020100;
  *(_BYTE *)(v5 + 8) = 8;
  sub_23BC723C0();
  return v4;
}

uint64_t type metadata accessor for DownloadState.LoadStatus(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadState.LoadStatus);
}

uint64_t DownloadState.LoadStatus.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t sub_23BC0F1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus, a3);
  return sub_23BC72750();
}

uint64_t sub_23BC0F234(uint64_t a1)
{
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus, a1);
  return sub_23BC72348();
}

uint64_t sub_23BC0F280()
{
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus);
  return sub_23BC72360();
}

uint64_t sub_23BC0F2D0()
{
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus);
  return sub_23BC72354();
}

unint64_t sub_23BC0F320@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = DownloadState.LoadStatus.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23BC0F348@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = DownloadState.LoadStatus.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_23BC0F370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = static DownloadState.LoadStatus.allCases.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_23BC0F39C()
{
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus);
  return sub_23BC7236C();
}

uint64_t sub_23BC0F400()
{
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus);
  return sub_23BC7233C();
}

uint64_t DownloadState.init(identifier:loadStatus:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for DownloadState(0, a3, a4, v9);
  *(_BYTE *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t DownloadState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Status;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  sub_23BC72264();
  Status = type metadata accessor for DownloadState.LoadStatus(255, v2, v3, v4);
  sub_23BC724F8();
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus, Status);
  return sub_23BC72504();
}

BOOL static DownloadState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t Status;

  if ((sub_23BC7227C() & 1) == 0)
    return 0;
  v10 = *(int *)(type metadata accessor for DownloadState(0, a3, a4, v8) + 36);
  v11 = *(unsigned __int8 *)(a1 + v10);
  v12 = *(unsigned __int8 *)(a2 + v10);
  if (v11 != 9)
  {
    if (v12 == 9)
      return 0;
    Status = type metadata accessor for DownloadState.LoadStatus(0, a3, a4, v9);
    MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus, Status);
    return (sub_23BC72750() & 1) != 0;
  }
  return v12 == 9;
}

BOOL sub_23BC0F624(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23BC0F634()
{
  return sub_23BC727B0();
}

uint64_t sub_23BC0F658(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xEA00000000007375)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC0F74C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7461745364616F6CLL;
  else
    return 0x696669746E656469;
}

BOOL sub_23BC0F78C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23BC0F624(*a1, *a2);
}

uint64_t sub_23BC0F7A0()
{
  return sub_23BC0FF5C();
}

uint64_t sub_23BC0F7C0()
{
  return sub_23BC0F634();
}

uint64_t sub_23BC0F7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC0FFE8(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23BC0F634);
}

uint64_t sub_23BC0F7DC()
{
  char *v0;

  return sub_23BC0F74C(*v0);
}

uint64_t sub_23BC0F7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC0F658(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC0F818@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC148B8();
  *a1 = result;
  return result;
}

uint64_t sub_23BC0F840(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77C80, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC0F874(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77C80, a1);
  return sub_23BC72834();
}

uint64_t DownloadState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Status;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v19 = a2;
  v20 = v5;
  v7 = type metadata accessor for DownloadState.CodingKeys(255, v5, v6, a4);
  MEMORY[0x24260ED10](&unk_23BC77C80, v7);
  v8 = sub_23BC7272C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v6;
  v13 = v20;
  v14 = v21;
  sub_23BC7281C();
  v25 = 0;
  v15 = v22;
  sub_23BC72720();
  if (!v15)
  {
    v24 = *(_BYTE *)(v14 + *(int *)(v19 + 36));
    v23 = 1;
    Status = type metadata accessor for DownloadState.LoadStatus(0, v13, v12, v16);
    MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus, Status);
    sub_23BC726D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DownloadState.hashValue.getter(uint64_t a1)
{
  return sub_23BC10238(a1, (void (*)(_BYTE *, uint64_t))DownloadState.hash(into:));
}

uint64_t DownloadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Status;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  char v42;
  char v43;

  v32 = a4;
  v33 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DownloadState.CodingKeys(255, v8, v9, v10);
  MEMORY[0x24260ED10](&unk_23BC77C80, v11);
  v39 = sub_23BC7269C();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v13 = (char *)&v31 - v12;
  v36 = a2;
  v38 = a3;
  v15 = type metadata accessor for DownloadState(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v35 = v13;
  v19 = (uint64_t)v40;
  sub_23BC72810();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v31 = v16;
  v40 = a1;
  v20 = v18;
  v21 = v33;
  v22 = v34;
  v43 = 0;
  v23 = v38;
  v24 = v39;
  v25 = v35;
  v26 = v36;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v20, v22, v26);
  Status = type metadata accessor for DownloadState.LoadStatus(0, v26, v23, v27);
  v41 = 1;
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>.LoadStatus, Status);
  sub_23BC7263C();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v24);
  v20[*(int *)(v15 + 36)] = v42;
  v29 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v32, v20, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v20, v15);
}

uint64_t sub_23BC0FCF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DownloadState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BC0FD14(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DownloadState.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_23BC0FD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC12524(a1, a2, a3, (void (*)(_BYTE *, uint64_t))DownloadState.hash(into:));
}

BOOL sub_23BC0FD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DownloadState.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t DownloadProgress.init(identifier:progress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1, a2);
  result = type metadata accessor for DownloadProgress(0, a2, a3, v9);
  *(float *)(a4 + *(int *)(result + 36)) = a5;
  return result;
}

uint64_t DownloadProgress.hash(into:)()
{
  sub_23BC72264();
  return sub_23BC727C8();
}

BOOL static DownloadProgress.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((sub_23BC7227C() & 1) == 0)
    return 0;
  v9 = type metadata accessor for DownloadProgress(0, a3, a4, v8);
  return *(float *)(a1 + *(int *)(v9 + 36)) == *(float *)(a2 + *(int *)(v9 + 36));
}

uint64_t sub_23BC0FE6C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC0FF5C()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BC0FFA0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73736572676F7270;
  else
    return 0x696669746E656469;
}

uint64_t sub_23BC0FFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC0FFE8(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23BC166E8);
}

uint64_t sub_23BC0FFE8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_23BC727A4();
  a4(v8, *v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_23BC727E0();
}

uint64_t sub_23BC10038()
{
  char *v0;

  return sub_23BC0FFA0(*v0);
}

uint64_t sub_23BC10048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC0FE6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC10074(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77C30, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC100A8(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77C30, a1);
  return sub_23BC72834();
}

uint64_t DownloadProgress.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  v13 = a2;
  v5 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for DownloadProgress.CodingKeys(255, v14, v5, a4);
  MEMORY[0x24260ED10](&unk_23BC77C30, v6);
  v7 = sub_23BC7272C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v17 = 0;
  v11 = v15;
  sub_23BC72720();
  if (!v11)
  {
    v16 = 1;
    sub_23BC72708();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t DownloadProgress.hashValue.getter(uint64_t a1)
{
  return sub_23BC10238(a1, (void (*)(_BYTE *, uint64_t))DownloadProgress.hash(into:));
}

uint64_t sub_23BC10238(uint64_t a1, void (*a2)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_23BC727A4();
  a2(v5, a1);
  return sub_23BC727E0();
}

uint64_t DownloadProgress.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char v41;
  char v42;

  v32 = a4;
  v34 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v39 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DownloadProgress.CodingKeys(255, v8, v9, v10);
  MEMORY[0x24260ED10](&unk_23BC77C30, v11);
  v38 = sub_23BC7269C();
  v33 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v13 = (char *)&v30 - v12;
  v37 = a2;
  v35 = a3;
  v15 = type metadata accessor for DownloadProgress(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v36 = v13;
  v19 = (uint64_t)v40;
  sub_23BC72810();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v31 = v16;
  v40 = a1;
  v20 = v18;
  v22 = v33;
  v21 = v34;
  v42 = 0;
  v23 = v36;
  v24 = v38;
  v25 = v37;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v20, v39, v25);
  v41 = 1;
  sub_23BC7266C();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  *(_DWORD *)&v20[*(int *)(v15 + 36)] = v27;
  v28 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v32, v20, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v20, v15);
}

uint64_t sub_23BC1050C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DownloadProgress.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BC10528(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DownloadProgress.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_23BC10544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC12524(a1, a2, a3, (void (*)(_BYTE *, uint64_t))DownloadProgress.hash(into:));
}

BOOL sub_23BC10550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DownloadProgress.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t DownloadStatusMonitorState.downloadLoadState.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DownloadStatusMonitorState.downloadLoadState.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DownloadStatusMonitorState.downloadLoadState.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DownloadStatusMonitorState.init(downloadLoadState:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t DownloadStatusMonitorState.hash(into:)()
{
  sub_23BC145B8();
  swift_bridgeObjectRetain();
  sub_23BC72228();
  return swift_bridgeObjectRelease();
}

uint64_t static DownloadStatusMonitorState.== infix(_:_:)()
{
  sub_23BBF12F4();
  return sub_23BC72234();
}

uint64_t sub_23BC10660(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023BC824A0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23BC106E4()
{
  return 0xD000000000000011;
}

uint64_t sub_23BC10700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC10660(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC10730@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BBE8CD8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23BC1075C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77BE0, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC10790(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77BE0, a1);
  return sub_23BC72834();
}

uint64_t DownloadStatusMonitorState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17[2];
  uint64_t v18;
  _QWORD v19[4];

  v6 = *(_QWORD *)(a2 + 16);
  v17[0] = *(_QWORD *)(a2 + 24);
  v17[1] = v6;
  v7 = type metadata accessor for DownloadStatusMonitorState.CodingKeys(255, v6, v17[0], a4);
  MEMORY[0x24260ED10](&unk_23BC77BE0, v7);
  v8 = sub_23BC7272C();
  v18 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - v9;
  v11 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v19[3] = v11;
  v12 = v17[0];
  v13 = sub_23BC7221C();
  v14 = *(_QWORD *)(v12 + 16);
  v15 = sub_23BBF11DC();
  v19[0] = v14;
  v19[1] = v15;
  MEMORY[0x24260ED10](MEMORY[0x24BEE04C0], v13, v19);
  sub_23BC72720();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v10, v8);
}

uint64_t DownloadStatusMonitorState.hashValue.getter()
{
  sub_23BC727A4();
  DownloadStatusMonitorState.hash(into:)();
  return sub_23BC727E0();
}

uint64_t DownloadStatusMonitorState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];

  v19 = a5;
  v20 = a2;
  v8 = type metadata accessor for DownloadStatusMonitorState.CodingKeys(255, a2, a3, a4);
  MEMORY[0x24260ED10](&unk_23BC77BE0, v8);
  v21 = sub_23BC7269C();
  v9 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v11 = (char *)&v18 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC72810();
  if (!v5)
  {
    v12 = v19;
    v13 = sub_23BC7221C();
    v14 = *(_QWORD *)(a3 + 8);
    v15 = sub_23BBF1220();
    v22[0] = v14;
    v22[1] = v15;
    MEMORY[0x24260ED10](MEMORY[0x24BEE04E0], v13, v22);
    v16 = v21;
    sub_23BC72684();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
    *v12 = v22[3];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BC10B00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  return DownloadStatusMonitorState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t sub_23BC10B1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DownloadStatusMonitorState.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_23BC10B38()
{
  sub_23BC727A4();
  DownloadStatusMonitorState.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC10B78()
{
  return static DownloadStatusMonitorState.== infix(_:_:)();
}

void DownloadStatusMonitorAction.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for DownloadProgress(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  v10 = (char *)sub_23BC10C54 + 4 * byte_23BC76CD0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC10C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23BC727B0();
  v3 = type metadata accessor for DownloadState(0, v0, v1, v2);
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>, v3);
  sub_23BC72444();
  return swift_bridgeObjectRelease();
}

void static DownloadStatusMonitorAction.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  _QWORD v19[5];
  uint64_t v20;

  v20 = a2;
  v7 = type metadata accessor for DownloadProgress(0, a3, a4, a4);
  v19[2] = *(_QWORD *)(v7 - 8);
  v19[3] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v19[0] = (char *)v19 - v8;
  v19[1] = a4;
  v10 = type metadata accessor for DownloadStatusMonitorAction(0, a3, a4, v9);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v12);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v16 = (char *)v19 + *(int *)(v14 + 48) - v15;
  v19[4] = v11;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)v19 - v15, a1, v10);
  v17(v16, v20, v10);
  v18 = (char *)sub_23BC10E80 + 4 * byte_23BC76CD4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC10E80()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v2(v5, v1, v0);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    v9 = 0;
  }
  else
  {
    v10 = type metadata accessor for DownloadState(0, v3, *(_QWORD *)(v7 - 120), v8);
    MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>, v10);
    v9 = sub_23BC72438();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v7 - 96);
    v4 = v0;
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  return v9 & 1;
}

uint64_t sub_23BC11004(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023BC824C0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC81BB0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023BC824E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BC111AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC111E4 + 4 * byte_23BC76CD8[a1]))(0xD000000000000013, 0x800000023BC824C0);
}

uint64_t sub_23BC111E4()
{
  return 0x6570704177656976;
}

uint64_t sub_23BC11204(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_23BC1122C()
{
  return sub_23BBEF83C();
}

uint64_t sub_23BC11248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC1259C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23BBEF544);
}

uint64_t sub_23BC11254()
{
  unsigned __int8 *v0;

  return sub_23BC111AC(*v0);
}

uint64_t sub_23BC11260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC11004(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC1128C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC148C0();
  *a1 = result;
  return result;
}

uint64_t sub_23BC112B4(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77A50, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC112E8(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77A50, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC1131C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBE9BD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC1134C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77B90, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC11380(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77B90, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC113B4(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77B40, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC113E8(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77B40, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC1141C@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  return sub_23BC11490(a1, (uint64_t (*)(_QWORD, _QWORD))sub_23BBE8CD8, a2);
}

uint64_t sub_23BC11428(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77AF0, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC1145C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77AF0, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC11490@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(_QWORD, _QWORD)@<X4>, _BYTE *a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_23BC114D4(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77AA0, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC11508(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC77AA0, a1);
  return sub_23BC72834();
}

void DownloadStatusMonitorAction.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t updated;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v58 = a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v49 = type metadata accessor for DownloadStatusMonitorAction.DownloadProgressUpdatedCodingKeys(255, v5, v6, a4);
  v47 = MEMORY[0x24260ED10](&unk_23BC77B90, v49);
  v8 = sub_23BC7272C();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)v33 - v9;
  v52 = type metadata accessor for DownloadProgress(0, v5, v6, v10);
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v48 = (char *)v33 - v11;
  v13 = type metadata accessor for DownloadStatusMonitorAction.DownloadStatusUpdatedCodingKeys(255, v5, v6, v12);
  v42 = MEMORY[0x24260ED10](&unk_23BC77B40, v13);
  v43 = v13;
  v14 = sub_23BC7272C();
  v45 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v44 = (char *)v33 - v15;
  updated = type metadata accessor for DownloadStatusMonitorAction.UpdateDownloadStateCodingKeys(255, v5, v6, v16);
  v18 = MEMORY[0x24260ED10](&unk_23BC77AF0, updated);
  v41 = updated;
  v40 = v18;
  v39 = sub_23BC7272C();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v37 = (char *)v33 - v19;
  v21 = type metadata accessor for DownloadStatusMonitorAction.ViewAppearedCodingKeys(255, v5, v6, v20);
  v22 = MEMORY[0x24260ED10](&unk_23BC77AA0, v21);
  v36 = v21;
  v35 = v22;
  v34 = sub_23BC7272C();
  v33[2] = *(_QWORD *)(v34 - 8);
  v23 = MEMORY[0x24BDAC7A8](v34);
  v33[1] = (char *)v33 - v24;
  v25 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)v33 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DownloadStatusMonitorAction.CodingKeys(255, v5, v6, v28);
  MEMORY[0x24260ED10](&unk_23BC77A50, v29);
  v57 = sub_23BC7272C();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v31 = (char *)v33 - v30;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v56 = v31;
  sub_23BC7281C();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v59, v58);
  v32 = (char *)sub_23BC11894 + 4 * byte_23BC76CDC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC11894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *v2;
  *(_BYTE *)(v3 - 72) = 2;
  v5 = *(_QWORD *)(v3 - 232);
  v7 = *(_QWORD *)(v3 - 136);
  v6 = *(_QWORD *)(v3 - 128);
  sub_23BC726A8();
  *(_QWORD *)(v3 - 72) = v4;
  v9 = type metadata accessor for DownloadState(255, v0, v1, v8);
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>, v9);
  v10 = sub_23BC72450();
  *(_QWORD *)(v3 - 96) = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>, v9);
  MEMORY[0x24260ED10](MEMORY[0x24BEE1700], v10, v3 - 96);
  v11 = *(_QWORD *)(v3 - 216);
  sub_23BC72720();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 8))(v5, v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v7, v6);
  return swift_bridgeObjectRelease();
}

uint64_t DownloadStatusMonitorAction.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  sub_23BC727A4();
  DownloadStatusMonitorAction.hash(into:)((uint64_t)v5, a1, v2, v3);
  return sub_23BC727E0();
}

uint64_t DownloadStatusMonitorAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t updated;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  __int128 v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;

  v69 = a5;
  v8 = type metadata accessor for DownloadStatusMonitorAction.DownloadProgressUpdatedCodingKeys(255, a2, a3, a4);
  v76 = MEMORY[0x24260ED10](&unk_23BC77B90, v8);
  v77 = v8;
  v64 = sub_23BC7269C();
  v78 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (char *)&v53 - v9;
  v11 = type metadata accessor for DownloadStatusMonitorAction.DownloadStatusUpdatedCodingKeys(255, a2, a3, v10);
  v12 = MEMORY[0x24260ED10](&unk_23BC77B40, v11);
  v75 = v11;
  v74 = v12;
  v63 = sub_23BC7269C();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v67 = (char *)&v53 - v13;
  updated = type metadata accessor for DownloadStatusMonitorAction.UpdateDownloadStateCodingKeys(255, a2, a3, v14);
  v16 = MEMORY[0x24260ED10](&unk_23BC77AF0, updated);
  v73 = updated;
  v72 = v16;
  v61 = sub_23BC7269C();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v66 = (char *)&v53 - v17;
  v19 = type metadata accessor for DownloadStatusMonitorAction.ViewAppearedCodingKeys(255, a2, a3, v18);
  v20 = MEMORY[0x24260ED10](&unk_23BC77AA0, v19);
  v71 = v19;
  v70 = v20;
  v59 = sub_23BC7269C();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v65 = (char *)&v53 - v21;
  v23 = type metadata accessor for DownloadStatusMonitorAction.CodingKeys(255, a2, a3, v22);
  MEMORY[0x24260ED10](&unk_23BC77A50, v23);
  v24 = sub_23BC7269C();
  v81 = *(_QWORD *)(v24 - 8);
  v82 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v53 - v25;
  v79 = a2;
  v84 = a3;
  v80 = type metadata accessor for DownloadStatusMonitorAction(0, a2, a3, v27);
  v28 = *(_QWORD *)(v80 - 8);
  v29 = MEMORY[0x24BDAC7A8](v80);
  v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v53 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v53 - v35;
  v37 = a1;
  v38 = a1[3];
  v85 = v37;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  v83 = v26;
  v39 = v86;
  sub_23BC72810();
  if (!v39)
  {
    v55 = v31;
    v54 = v34;
    v56 = v36;
    v57 = v28;
    v86 = 0;
    v40 = v83;
    v41 = v82;
    *(_QWORD *)&v87 = sub_23BC72690();
    v42 = sub_23BC723C0();
    MEMORY[0x24260ED10](MEMORY[0x24BEE12C8], v42);
    *(_QWORD *)&v89 = sub_23BC72534();
    *((_QWORD *)&v89 + 1) = v43;
    *(_QWORD *)&v90 = v44;
    *((_QWORD *)&v90 + 1) = v45;
    v46 = sub_23BC72528();
    MEMORY[0x24260ED10](MEMORY[0x24BEE2190], v46);
    sub_23BC724A4();
    v47 = v87;
    if (v87 != 4)
    {
      v53 = v89;
      v87 = v89;
      v88 = v90;
      if ((sub_23BC724B0() & 1) != 0)
        __asm { BR              X9 }
    }
    v48 = v40;
    v49 = sub_23BC725A0();
    swift_allocError();
    v51 = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v51 = v80;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v51, *MEMORY[0x24BEE26D0], v49);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v48, v41);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
}

void sub_23BC12130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 160) = 1;
  v3 = *(_QWORD *)(v2 - 328);
  v4 = *(_QWORD *)(v2 - 168);
  sub_23BC72600();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 376) + 8))(v3, *(_QWORD *)(v2 - 368));
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8))(v0, v1);
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23BC124C8);
  }
  swift_unknownObjectRelease();
  JUMPOUT(0x23BC12100);
}

uint64_t sub_23BC124E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return DownloadStatusMonitorAction.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

void sub_23BC124FC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  DownloadStatusMonitorAction.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_23BC12518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC12524(a1, a2, a3, (void (*)(_BYTE *, uint64_t))DownloadStatusMonitorAction.hash(into:));
}

uint64_t sub_23BC12524(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  _BYTE v7[72];

  sub_23BC727A4();
  a4(v7, a2);
  return sub_23BC727E0();
}

void sub_23BC12570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static DownloadStatusMonitorAction.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t DownloadStatusMonitorEnvironment.init(makeAppActiveStream:makeDownloadProgressUpdateStream:makeDownloadUpdatedStream:queryAllDownloadStates:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t sub_23BC12590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC1259C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23BC166F4);
}

uint64_t sub_23BC1259C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_23BC727A4();
  a4(v8, *v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_23BC727E0();
}

__n128 DownloadStatusMonitorFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v4;
  return result;
}

void DownloadStatusMonitorFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD v22[16];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v22[13] = a3;
  v22[10] = a2;
  v7 = *(_QWORD *)(a5 + 16);
  MEMORY[0x24BDAC7A8](a1);
  v22[8] = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  v12 = type metadata accessor for DownloadProgress(0, v7, v10, v11);
  v22[9] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = type metadata accessor for DownloadStatusMonitorAction(255, v7, v10, v13);
  v15 = sub_23BC72150();
  v22[11] = *(_QWORD *)(v15 - 8);
  v22[12] = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  v17 = v5[1];
  v23 = *v5;
  v24 = v17;
  v18 = v5[3];
  v25 = v5[2];
  v26 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)v22 - v20, a4, v14);
  v21 = (char *)sub_23BC12768 + 4 * word_23BC76CE4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC12768(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 - 168) = *v2;
  MEMORY[0x24BDAC7A8](a1);
  v6 = type metadata accessor for DownloadState(255, v1, v3, v5);
  MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>, v6);
  v7 = sub_23BC72450();
  MEMORY[0x24260ED10](MEMORY[0x24BEE1718], v7);
  sub_23BC72330();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BC12D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(_QWORD *);

  v4[12] = a1;
  v8 = type metadata accessor for DownloadStatusMonitorAction(0, a3, a4, a4);
  v4[13] = v8;
  v4[14] = *(_QWORD *)(v8 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = type metadata accessor for DownloadProgress(255, a3, a4, v9);
  sub_23BC724F8();
  v4[17] = swift_task_alloc();
  v4[18] = sub_23BC723F0();
  v4[19] = sub_23BC723E4();
  v12 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v10 = (_QWORD *)swift_task_alloc();
  v4[20] = v10;
  *v10 = v4;
  v10[1] = sub_23BC12E68;
  return v12(v4 + 2);
}

uint64_t sub_23BC12E68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 176) = sub_23BC723CC();
  *(_QWORD *)(v2 + 184) = v3;
  return swift_task_switch();
}

uint64_t sub_23BC12EF4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23BC7242C();
  swift_task_dealloc();
  v0[24] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_23BC1303C;
  return sub_23BC723D8();
}

uint64_t sub_23BC1303C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BC13090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v1) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 120), v2, v1);
    swift_storeEnumTagMultiPayload();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v5;
    sub_23BC72168();
    *v5 = v0;
    v5[1] = sub_23BC131A8;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC131A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23BC13214()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[24] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[25] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23BC1303C;
  return sub_23BC723D8();
}

uint64_t sub_23BC132AC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC132F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(void);

  *(_QWORD *)(v4 + 96) = a1;
  v8 = type metadata accessor for DownloadState(0, a3, a4, a4);
  *(_QWORD *)(v4 + 104) = v8;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  sub_23BC724F8();
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  v10 = type metadata accessor for DownloadStatusMonitorAction(0, a3, a4, v9);
  *(_QWORD *)(v4 + 136) = v10;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  *(_QWORD *)(v4 + 168) = sub_23BC723F0();
  *(_QWORD *)(v4 + 176) = sub_23BC723E4();
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(a2 + 32);
  v13 = (uint64_t (*)(void))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 200) = v11;
  *v11 = v4;
  v11[1] = sub_23BC13420;
  return v13();
}

uint64_t sub_23BC13420(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23BC723CC();
  }
  else
  {
    v4[27] = a1;
    v4[28] = sub_23BC723CC();
    v4[29] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_23BC134CC()
{
  uint64_t v0;
  _QWORD *v1;

  **(_QWORD **)(v0 + 160) = *(_QWORD *)(v0 + 216);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v1;
  *(_QWORD *)(v0 + 248) = sub_23BC72168();
  *v1 = v0;
  v1[1] = sub_23BC13550;
  return sub_23BC7215C();
}

uint64_t sub_23BC13550()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v1 = *v0;
  v2 = *v0 + 16;
  v3 = *(int **)(*v0 + 184);
  v4 = *(_QWORD *)(*v0 + 160);
  v5 = *(_QWORD *)(*v0 + 136);
  v6 = *(_QWORD *)(*v0 + 144);
  v7 = *v0;
  swift_task_dealloc();
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v1 + 256) = v8;
  v8(v4, v5);
  v11 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 264) = v9;
  *v9 = v7;
  v9[1] = sub_23BC13600;
  return v11(v2);
}

uint64_t sub_23BC13600()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BC13660()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23BC7242C();
  swift_task_dealloc();
  v0[35] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[36] = v5;
  *v5 = v0;
  v5[1] = sub_23BC137A8;
  return sub_23BC723D8();
}

uint64_t sub_23BC137A8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BC137FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v1, v2);
    sub_23BC72738();
    swift_allocObject();
    v6 = sub_23BC72378();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v5, v2);
    sub_23BC723C0();
    if (MEMORY[0x24260E5F0](v6, v2))
    {
      v8 = *(_QWORD *)(v0 + 104);
      v9 = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadState<A>, v8);
      v10 = sub_23BC148C8(v6, v8, v9);
    }
    else
    {
      v10 = MEMORY[0x24BEE4B08];
    }
    v11 = *(uint64_t **)(v0 + 152);
    swift_bridgeObjectRelease();
    *v11 = v10;
    swift_storeEnumTagMultiPayload();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v12;
    *v12 = v0;
    v12[1] = sub_23BC139C4;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC139C4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 256);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_task_dealloc();
  v1(v2, v3);
  return swift_task_switch();
}

uint64_t sub_23BC13A30()
{
  uint64_t *v0;
  _QWORD *v1;

  (*(void (**)(uint64_t, uint64_t))(v0[14] + 8))(v0[15], v0[13]);
  v0[35] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[36] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23BC137A8;
  return sub_23BC723D8();
}

uint64_t sub_23BC13AD8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC13B38()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC13B98(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *);

  v4[12] = a1;
  v6 = type metadata accessor for DownloadStatusMonitorAction(0, a3, a4, a4);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = sub_23BC723F0();
  v4[17] = sub_23BC723E4();
  v9 = (uint64_t (*)(_QWORD *))(*(int *)*a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v4[18] = v7;
  *v7 = v4;
  v7[1] = sub_23BC13C50;
  return v9(v4 + 2);
}

uint64_t sub_23BC13C50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 160) = sub_23BC723CC();
  *(_QWORD *)(v2 + 168) = v3;
  return swift_task_switch();
}

uint64_t sub_23BC13CDC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23BC7242C();
  swift_task_dealloc();
  v0[22] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[23] = v5;
  *v5 = v0;
  v5[1] = sub_23BC13E30;
  return sub_23BC723D8();
}

uint64_t sub_23BC13E30()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BC13E84()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 200) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v2;
    sub_23BC72168();
    *v2 = v0;
    v2[1] = sub_23BC13F58;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC13F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23BC13FC4()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[22] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[23] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23BC13E30;
  return sub_23BC723D8();
}

uint64_t sub_23BC14068()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC140A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v4[2] = a1;
  v6 = type metadata accessor for DownloadStatusMonitorAction(0, a3, a4, a4);
  v4[3] = v6;
  v4[4] = *(_QWORD *)(v6 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = sub_23BC723F0();
  v4[7] = sub_23BC723E4();
  v9 = (uint64_t (*)(void))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_23BC14150;
  return v9();
}

uint64_t sub_23BC14150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23BC723CC();
  }
  else
  {
    v4[10] = a1;
    v4[11] = sub_23BC723CC();
    v4[12] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_23BC141FC()
{
  uint64_t v0;
  _QWORD *v1;

  **(_QWORD **)(v0 + 40) = *(_QWORD *)(v0 + 80);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  sub_23BC72168();
  *v1 = v0;
  v1[1] = sub_23BC1427C;
  return sub_23BC7215C();
}

uint64_t sub_23BC1427C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23BC142E8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC14328()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC14368(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for DownloadState(0, v11, v12, v12) + 36));
  if ((_DWORD)result != 9)
  {
    result = sub_23BC14518(result);
    if ((result & 0x1000000000000) == 0)
    {
      v14 = result;
      v15 = result & 0x10000000000;
      result = (uint64_t)MEMORY[0x24260E47C](&v21, a1, *a2, a3, &type metadata for DownloadLoadState, *(_QWORD *)(a4 + 24));
      if ((v21 & 0x100000000000000) != 0
        || (v16 = v21 | ((unint64_t)(WORD2(v21) | (BYTE6(v21) << 16)) << 32),
            (v16 & 0x1000000000000) != 0))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
        HIDWORD(v21) = (unsigned __int16)((v14 & 0xFFFFFFFFFFLL | (unint64_t)v15) >> 32);
        LODWORD(v21) = v14 | v15;
        goto LABEL_10;
      }
      v17 = v14 & 0xFFFFFFFFFFLL;
      if ((v16 & 0x10000000000) == 0)
      {
        if (!v15)
          return result;
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
        if (v17)
        {
          v21 = 0x10000000001;
LABEL_10:
          sub_23BC7221C();
          return sub_23BC7224C();
        }
LABEL_20:
        v21 = 0x10000000000;
        goto LABEL_10;
      }
      if ((v16 & 0xFFFFFFFFFFLL) != 0 && v17 == 0 && v15 != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
        goto LABEL_20;
      }
    }
  }
  return result;
}

uint64_t sub_23BC14518(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_23BC1453C + 4 * byte_23BC76CEC[a1]))();
}

uint64_t sub_23BC1453C()
{
  return 0x1000000000000;
}

uint64_t DownloadStatusMonitorFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t type metadata accessor for DownloadState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadState);
}

uint64_t type metadata accessor for DownloadState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadState.CodingKeys);
}

uint64_t type metadata accessor for DownloadProgress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadProgress);
}

uint64_t type metadata accessor for DownloadProgress.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadProgress.CodingKeys);
}

unint64_t sub_23BC145B8()
{
  unint64_t result;

  result = qword_256A757E0;
  if (!qword_256A757E0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadLoadState, &type metadata for DownloadLoadState);
    atomic_store(result, &qword_256A757E0);
  }
  return result;
}

uint64_t type metadata accessor for DownloadStatusMonitorState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorState.CodingKeys);
}

uint64_t type metadata accessor for DownloadStatusMonitorAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorAction);
}

uint64_t type metadata accessor for DownloadStatusMonitorAction.DownloadProgressUpdatedCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorAction.DownloadProgressUpdatedCodingKeys);
}

uint64_t type metadata accessor for DownloadStatusMonitorAction.DownloadStatusUpdatedCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorAction.DownloadStatusUpdatedCodingKeys);
}

uint64_t type metadata accessor for DownloadStatusMonitorAction.UpdateDownloadStateCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorAction.UpdateDownloadStateCodingKeys);
}

uint64_t type metadata accessor for DownloadStatusMonitorAction.ViewAppearedCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorAction.ViewAppearedCodingKeys);
}

uint64_t type metadata accessor for DownloadStatusMonitorAction.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorAction.CodingKeys);
}

uint64_t sub_23BC14650(uint64_t a1)
{
  uint64_t v1;

  return sub_23BC14368(a1, *(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for DownloadStatusMonitorFeature.TaskIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorFeature.TaskIdentifier);
}

uint64_t sub_23BC1467C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23BBF6148;
  return sub_23BC140A8(a1, v1 + 32, v4, v5);
}

uint64_t sub_23BC146E4(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BC1473C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23BBF6148;
  return sub_23BC12D6C(a1, v1 + 32, v4, v5);
}

uint64_t sub_23BC147A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23BBF5304;
  return sub_23BC132F8(a1, v1 + 32, v4, v5);
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC14850(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23BBF6148;
  return sub_23BC13B98(a1, v1 + 4, v4, v5);
}

uint64_t sub_23BC148B8()
{
  return 2;
}

uint64_t sub_23BC148C0()
{
  return 4;
}

uint64_t sub_23BC148C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x24260E5D8](v12))
  {
    sub_23BC72570();
    v15 = sub_23BC72564();
  }
  else
  {
    v15 = MEMORY[0x24BEE4B08];
  }
  v40 = MEMORY[0x24260E5F0](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_23BC72390();
    sub_23BC72384();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_23BC72588();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_23BC72258();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_23BC7227C();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_23BC14BD0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC14BE0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC14BF0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC14C00()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC14C10()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC14C20()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC14C30()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC14C40()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BC14C50()
{
  return sub_23BC15278();
}

_QWORD *sub_23BC14C5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_23BC14CE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_23BC14CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_23BC14D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_23BC14D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_23BC14DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_23BC14E18(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;
  BOOL v16;
  unsigned int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xF6)
    v6 = 246;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = v7 + 1;
  v10 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 >= 0xF6)
        return (*(uint64_t (**)(void))(v4 + 48))();
      v15 = *(unsigned __int8 *)(v7 + a1);
      v16 = v15 >= 9;
      v17 = v15 - 9;
      if (!v16)
        v17 = -1;
      if (v17 + 1 >= 2)
        return v17;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if ((_DWORD)v7 == -1)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BC14EE0 + 4 * byte_23BC76CF5[(v9 - 1)]))();
}

void sub_23BC14F48(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xF6u)
    v6 = 246;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v7 + 1);
        if (v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if (v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t getEnumTagSinglePayload for StartWorkoutButtonState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23BC151AC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23BC151F8 + 4 * byte_23BC76D08[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23BC1522C + 4 * byte_23BC76D03[v4]))();
}

uint64_t sub_23BC1522C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC15234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC1523CLL);
  return result;
}

uint64_t sub_23BC15248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC15250);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23BC15254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC1525C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC15268()
{
  return sub_23BC15278();
}

uint64_t sub_23BC15278()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23BC152E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = v7 & 0xFC | 3;
  v9 = v7 & 0x100000;
  if (v8 > 7 || v9 != 0 || ((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 > 0x18)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFCLL);
  }
  return v4;
}

uint64_t sub_23BC15398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_23BC153F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_23BC15450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_23BC154AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_23BC15508(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4) & 0xFFFFFFFC) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_23BC15578 + 4 * byte_23BC76D0D[v8]))();
}

void sub_23BC155D0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 3) & 0xFFFFFFFC) != 0xFFFFFFFC)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_23BC156B8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23BC156C0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23BC156C8);
}

void sub_23BC156E4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_23BC156EC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_23BC156F4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x23BC156FCLL);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t type metadata accessor for DownloadStatusMonitorState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorState);
}

uint64_t sub_23BC15720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for DownloadProgress(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_23BC15798(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 <= 8)
    v7 = 8;
  else
    v7 = ((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || (v7 | 1) > 0x18)
  {
    v10 = *(_QWORD *)__src;
    *v4 = *(_QWORD *)__src;
    v4 = (_QWORD *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v11 = __src[v7];
    if ((v7 & 0xFFFFFFFC) != 0 && v11 >= 2)
      v11 = *(_DWORD *)__src + 2;
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((unint64_t)&__src[v6 + 3] & 0xFFFFFFFFFFFFFCLL);
      *((_BYTE *)v4 + v7) = 1;
    }
    else if (v11)
    {
      memcpy(__dst, __src, v7 | 1);
    }
    else
    {
      *__dst = *(_QWORD *)__src;
      *((_BYTE *)__dst + v7) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

_DWORD *sub_23BC158B0(_DWORD *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = ((*(_QWORD *)(v2 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v3 <= 8)
    v3 = 8;
  v4 = v3 & 0xFFFFFFFC;
  v5 = *((unsigned __int8 *)result + v3);
  if (v5 >= 2 && v4 != 0)
    v5 = *result + 2;
  if (v5 == 1)
    return (_DWORD *)(*(uint64_t (**)(void))(v2 + 8))();
  if (!v5)
    return (_DWORD *)swift_bridgeObjectRelease();
  return result;
}

_BYTE *sub_23BC15910(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 <= 8)
    v7 = 8;
  else
    v7 = ((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  v8 = __src[v7];
  if (v8 >= 2 && (v7 & 0xFFFFFFFC) != 0)
    v8 = *(_DWORD *)__src + 2;
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(_DWORD *)((unint64_t)&__dst[v6 + 3] & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((unint64_t)&__src[v6 + 3] & 0xFFFFFFFFFFFFFCLL);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 | 1);
  }
  else
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v7] = 0;
    swift_bridgeObjectRetain();
  }
  return __dst;
}

unsigned __int8 *sub_23BC159E8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 <= 8)
      v8 = 8;
    else
      v8 = ((v7 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    v9 = __dst[v8];
    if (v9 >= 2 && (v8 & 0xFFFFFFFC) != 0)
      v9 = *(_DWORD *)__dst + 2;
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    else if (!v9)
    {
      swift_bridgeObjectRelease();
    }
    v11 = __src[v8];
    if ((v8 & 0xFFFFFFFC) != 0 && v11 >= 2)
      v11 = *(_DWORD *)__src + 2;
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(_DWORD *)((unint64_t)&__dst[v7 + 3] & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((unint64_t)&__src[v7 + 3] & 0xFFFFFFFFFFFFFCLL);
      __dst[v8] = 1;
    }
    else if (v11)
    {
      memcpy(__dst, __src, v8 | 1);
    }
    else
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v8] = 0;
      swift_bridgeObjectRetain();
    }
  }
  return __dst;
}

_BYTE *sub_23BC15B1C(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 <= 8)
    v7 = 8;
  else
    v7 = ((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  v8 = __src[v7];
  if (v8 >= 2 && (v7 & 0xFFFFFFFC) != 0)
    v8 = *(_DWORD *)__src + 2;
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_DWORD *)((unint64_t)&__dst[v6 + 3] & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((unint64_t)&__src[v6 + 3] & 0xFFFFFFFFFFFFFCLL);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 | 1);
  }
  else
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_23BC15BF0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 <= 8)
      v8 = 8;
    else
      v8 = ((v7 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
    v9 = __dst[v8];
    if (v9 >= 2 && (v8 & 0xFFFFFFFC) != 0)
      v9 = *(_DWORD *)__dst + 2;
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    }
    else if (!v9)
    {
      swift_bridgeObjectRelease();
    }
    v11 = __src[v8];
    if ((v8 & 0xFFFFFFFC) != 0 && v11 >= 2)
      v11 = *(_DWORD *)__src + 2;
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_DWORD *)((unint64_t)&__dst[v7 + 3] & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((unint64_t)&__src[v7 + 3] & 0xFFFFFFFFFFFFFCLL);
      __dst[v8] = 1;
    }
    else if (v11)
    {
      memcpy(__dst, __src, v8 | 1);
    }
    else
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v8] = 0;
    }
  }
  return __dst;
}

uint64_t sub_23BC15D20(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  int v9;
  int v11;
  int v12;
  unsigned int v13;

  v3 = 8;
  if (((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 > 8)
    v3 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((v3 & 0xFFFFFFFC) != 0)
    v4 = -253;
  else
    v4 = -252;
  if ((v3 & 0xFFFFFFFC) != 0)
    v5 = 253;
  else
    v5 = 252;
  if (!a2)
    return 0;
  if (v5 >= a2)
    goto LABEL_26;
  v6 = v3 | 1;
  v7 = 8 * (v3 | 1);
  if ((v3 | 1) <= 3)
  {
    v8 = (v4 + a2 + ~(-1 << v7)) >> v7;
    if (v8 > 0xFFFE)
    {
      v9 = *(_DWORD *)&a1[v6];
      if (!v9)
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v8 > 0xFE)
    {
      v9 = *(unsigned __int16 *)&a1[v6];
      if (!*(_WORD *)&a1[v6])
        goto LABEL_26;
      goto LABEL_19;
    }
    if (!v8)
      goto LABEL_26;
  }
  v9 = a1[v6];
  if (!a1[v6])
  {
LABEL_26:
    v13 = a1[v3] ^ 0xFF;
    if (v5 > v13)
      return v13 + 1;
    else
      return 0;
  }
LABEL_19:
  v11 = (v9 - 1) << v7;
  if (v6 >= 4)
    v11 = 0;
  if ((_DWORD)v6 == 1)
    v12 = *a1;
  else
    v12 = *(_DWORD *)a1;
  return v5 + (v12 | v11) + 1;
}

void sub_23BC15E10(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  int v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v5 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v5 <= 8)
    v5 = 8;
  if ((v5 & 0xFFFFFFFC) != 0)
    v6 = -253;
  else
    v6 = -252;
  if ((v5 & 0xFFFFFFFC) != 0)
    v7 = 253;
  else
    v7 = 252;
  v8 = v5 | 1;
  if (v7 >= a3)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = (v6 + a3 + ~(-1 << (8 * v8))) >> (8 * v8);
    if (v11 > 0xFFFE)
    {
      v9 = 4u;
    }
    else if (v11 >= 0xFF)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 != 0;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 >= a2)
    __asm { BR              X11 }
  v10 = ~v7 + a2;
  if (v8 < 4)
  {
    v10 &= ~(-1 << (8 * v8));
    bzero(a1, v8);
    if ((_DWORD)v8 == 1)
    {
      *a1 = v10;
      goto LABEL_24;
    }
  }
  else
  {
    bzero(a1, v8);
  }
  *(_DWORD *)a1 = v10;
LABEL_24:
  __asm { BR              X10 }
}

uint64_t sub_23BC15FBC(_DWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v2 <= 8)
    v2 = 8;
  v3 = v2 & 0xFFFFFFFC;
  v4 = *((unsigned __int8 *)a1 + v2);
  if (v4 >= 2 && v3 != 0)
    return (*a1 + 2);
  return v4;
}

void sub_23BC16004(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  char v5;
  unsigned int v6;

  v4 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v4 <= 8)
    v4 = 8;
  if (a2 > 1)
  {
    if ((_DWORD)v4)
      v5 = 2;
    else
      v5 = a2;
    if ((_DWORD)v4)
      v6 = a2 - 2;
    else
      v6 = 0;
    a1[v4] = v5;
    bzero(a1, v4);
    *(_DWORD *)a1 = v6;
  }
  else
  {
    a1[v4] = a2;
  }
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for DownloadStatusMonitorEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorEnvironment);
}

uint64_t sub_23BC160B4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BC160EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23BC1616C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23BC161F8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t sub_23BC1625C(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23BC162A4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for DownloadStatusMonitorFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DownloadStatusMonitorFeature);
}

uint64_t sub_23BC16304(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC16350 + 4 * byte_23BC76D2B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC16384 + 4 * byte_23BC76D26[v4]))();
}

uint64_t sub_23BC16384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC1638C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC16394);
  return result;
}

uint64_t sub_23BC163A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC163A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC163AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC163B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC163C4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC16404 + 4 * byte_23BC76D30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC16424 + 4 * byte_23BC76D35[v4]))();
}

_BYTE *sub_23BC16404(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC16424(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC1642C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC16434(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC1643C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC16444(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23BC16454(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC164A0 + 4 * byte_23BC76D3F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC164D4 + 4 * byte_23BC76D3A[v4]))();
}

uint64_t sub_23BC164D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC164DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC164E4);
  return result;
}

uint64_t sub_23BC164F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC164F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC164FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC16504(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23BC16510()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16520()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16530()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16540()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16550()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16560()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16570()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16580()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16590()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC165A0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC165B0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC165C0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC165D0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC165E0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC165F0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16600()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16610()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16620()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16630()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16640()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16650()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16660()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC16670()
{
  JUMPOUT(0x24260ED10);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23BC16714()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A760A8);
  sub_23BC17990();
  return sub_23BC71CDC();
}

uint64_t DynamicStartWorkoutView.init(store:startWorkoutActionViewBuilder:marketingActionViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a7 = sub_23BBEB2B0;
  *(_QWORD *)(a7 + 8) = result;
  *(_BYTE *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_23BC167E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t DynamicStartWorkoutView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  _QWORD v41[2];
  uint64_t v42;
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v35 = a2;
  v4 = a1[3];
  v28 = a1[2];
  v5 = v28;
  v29 = sub_23BC71E2C();
  v30 = sub_23BC71E2C();
  v31 = sub_23BC71E2C();
  v6 = sub_23BC71E2C();
  v7 = sub_23BC71FE8();
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_23BC71D6C();
  v34 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)&v28 - v14;
  v15 = v2[1];
  v47 = *v2;
  v48 = v15;
  v49 = v2[2];
  v50 = *((_QWORD *)v2 + 6);
  v36 = v5;
  v37 = v4;
  v17 = a1[4];
  v16 = a1[5];
  v38 = v17;
  v39 = v16;
  v40 = &v47;
  v46[0] = v17;
  v46[1] = v16;
  v18 = MEMORY[0x24BDEF3E0];
  v45[0] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v29, v46);
  v45[1] = v16;
  v19 = MEMORY[0x24260ED10](v18, v30, v45);
  v44[0] = v16;
  v44[1] = v19;
  v20 = MEMORY[0x24260ED10](v18, v31, v44);
  v43[0] = v16;
  v43[1] = v20;
  v21 = MEMORY[0x24260ED10](v18, v6, v43);
  sub_23BC71FDC();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v28;
  *(_QWORD *)(v22 + 24) = v4;
  *(_QWORD *)(v22 + 32) = v17;
  *(_QWORD *)(v22 + 40) = v16;
  v23 = v48;
  *(_OWORD *)(v22 + 48) = v47;
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 80) = v49;
  *(_QWORD *)(v22 + 96) = v50;
  sub_23BC17560((uint64_t)&v47);
  v42 = v21;
  v24 = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v7, &v42);
  sub_23BC71FC4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
  v41[0] = v24;
  v41[1] = MEMORY[0x24BDF0910];
  MEMORY[0x24260ED10](MEMORY[0x24BDED308], v10, v41);
  v25 = v32;
  sub_23BBECE40((uint64_t)v13, v10, v32);
  v26 = *(void (**)(char *, uint64_t))(v34 + 8);
  v26(v13, v10);
  sub_23BBEAFE8(v25, v10, v35);
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(v25, v10);
}

void sub_23BC16B44(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _QWORD v32[62];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v32[22] = a6;
  v11 = sub_23BC71E2C();
  v32[8] = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v32[7] = (char *)v32 - v13;
  v32[3] = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v32[4] = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v32[5] = (char *)v32 - v16;
  v32[16] = v17;
  v18 = sub_23BC71E2C();
  v32[12] = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v32[11] = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v32[10] = (char *)v32 - v21;
  v32[17] = v22;
  v23 = sub_23BC71E2C();
  v32[15] = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v32[14] = (char *)v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v32[13] = (char *)v32 - v27;
  v32[18] = *(_QWORD *)(a3 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  MEMORY[0x24BDAC7A8](v28);
  v32[19] = (char *)v32 - v29;
  v30 = sub_23BC71E2C();
  v32[20] = *(_QWORD *)(v30 - 8);
  v32[21] = v30;
  MEMORY[0x24BDAC7A8](v30);
  v31 = a1[1];
  v33 = *a1;
  v34 = v31;
  v35 = a1[2];
  v36 = *((_QWORD *)a1 + 6);
  v32[6] = a2;
  v32[58] = a2;
  v32[59] = a3;
  v32[23] = a4;
  v32[60] = a4;
  v32[61] = a5;
  type metadata accessor for DynamicStartWorkoutView();
}

uint64_t sub_23BC16DA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_23BC16714();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  v8 = swift_release();
  if (*(_BYTE *)(v7 - 144) == 1)
  {
    (*(void (**)(uint64_t))(v4 + 24))(v8);
    v9 = v0[19];
    v10 = v1;
    sub_23BBECE40(v6, v3, v9);
    v11 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8);
    v11(v6, v3);
    sub_23BBEAFE8(v9, v3, v6);
    v0[28] = v0[23];
    v0[29] = v10;
    v12 = MEMORY[0x24BDEF3E0];
    v13 = v0[16];
    v0[26] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v13, v0 + 28);
    v0[27] = v10;
    v14 = v12;
    v15 = v0[17];
    v16 = MEMORY[0x24260ED10](v14, v15, v0 + 26);
    v0[24] = v10;
    v0[25] = v16;
    MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v2, v0 + 24);
    sub_23BC5C5A4(v6, v3);
    v11(v6, v3);
    v11(v9, v3);
    v18 = v0[22];
    v17 = v0[23];
    v19 = v13;
    v20 = v15;
    v21 = v0[21];
  }
  else
  {
    v22 = v0[19];
    v0[1] = v2;
    v0[2] = v5;
    v23 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v7 - 144) = *(_OWORD *)v4;
    *(_OWORD *)(v7 - 128) = v23;
    *(_OWORD *)(v7 - 112) = *(_OWORD *)(v4 + 32);
    *(_QWORD *)(v7 - 96) = *(_QWORD *)(v4 + 48);
    sub_23BC16714();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    v24 = swift_release();
    v25 = *(_BYTE *)(v7 - 138);
    v0[9] = v3;
    if ((v25 & 1) != 0)
    {
      v26 = v6;
      (*(void (**)(uint64_t))(v4 + 24))(v24);
      v27 = v6;
      v28 = v3;
      v10 = v1;
      sub_23BBECE40(v27, v3, v22);
      v29 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8);
      v29(v26, v3);
      sub_23BBEAFE8(v22, v3, v26);
      v30 = v0[23];
      v0[32] = v30;
      v0[33] = v1;
      v31 = MEMORY[0x24BDEF3E0];
      v32 = v0[16];
      v0[30] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v32, v0 + 32);
      v0[31] = v10;
      v33 = v31;
      v20 = v0[17];
      MEMORY[0x24260ED10](v33, v20, v0 + 30);
      v34 = v0[13];
      sub_23BC5C5A4(v26, v28);
      v29(v26, v28);
      v35 = v22;
      v36 = v30;
      v29(v35, v28);
      v2 = v0[1];
    }
    else
    {
      v37 = *(unsigned int *)(v7 - 144) | ((unint64_t)*(unsigned __int16 *)(v7 - 140) << 32);
      if ((v37 & 0x10000000000) != 0)
      {
        v10 = v1;
        v50 = v0[18];
        if ((v37 & 0xFFFFFFFFFFLL) != 0)
        {
          v51 = v6;
          v48 = v0[10];
          (*(void (**)(uint64_t))(v4 + 24))(v24);
          v52 = v22;
          sub_23BBECE40(v51, v3, v22);
          v40 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
          v40(v51, v3);
          sub_23BBEAFE8(v22, v3, v51);
          v47 = v0[23];
          *(_QWORD *)(v7 - 192) = v47;
          *(_QWORD *)(v7 - 184) = v10;
          v44 = v0[16];
          MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v44, v7 - 192);
          sub_23BC5C668(v51, v44, v3);
          v40(v51, v3);
          v46 = v52;
          v49 = v3;
        }
        else
        {
          v48 = v0[10];
          v53 = v0[4];
          (*(void (**)(uint64_t))(v4 + 40))(v24);
          v55 = v0[5];
          v54 = v0[6];
          v47 = v0[23];
          sub_23BBECE40(v53, v54, v55);
          v40 = *(void (**)(uint64_t, uint64_t))(v0[3] + 8);
          v40(v53, v54);
          sub_23BBEAFE8(v55, v54, v53);
          v56 = v0[7];
          sub_23BC5C5A4(v53, v54);
          v40(v53, v54);
          v0[34] = v47;
          v0[35] = v10;
          v57 = v0[16];
          MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v57, v0 + 34);
          sub_23BC5C5A4(v56, v57);
          v58 = v56;
          v44 = v57;
          (*(void (**)(uint64_t, uint64_t))(v0[8] + 8))(v58, v57);
          v46 = v55;
          v49 = v54;
        }
      }
      else
      {
        v38 = v6;
        (*(void (**)(uint64_t))(v4 + 24))(v24);
        v10 = v1;
        v39 = v3;
        sub_23BBECE40(v6, v3, v22);
        v40 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8);
        v40(v6, v3);
        sub_23BBEAFE8(v22, v3, v6);
        v41 = v0[7];
        v42 = v6;
        v43 = v0[23];
        sub_23BC5C668(v42, v0[6], v39);
        v40(v38, v39);
        v0[36] = v43;
        v0[37] = v1;
        v44 = v0[16];
        MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v44, v0 + 36);
        v45 = v0[10];
        sub_23BC5C5A4(v41, v44);
        (*(void (**)(uint64_t, uint64_t))(v0[8] + 8))(v41, v44);
        v46 = v22;
        v47 = v43;
        v48 = v45;
        v49 = v39;
      }
      v40(v46, v49);
      v20 = v0[17];
      v2 = v0[1];
      v34 = v0[13];
      *(_QWORD *)(v7 - 208) = v47;
      *(_QWORD *)(v7 - 200) = v10;
      v59 = MEMORY[0x24BDEF3E0];
      *(_QWORD *)(v7 - 224) = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v44, v7 - 208);
      *(_QWORD *)(v7 - 216) = v10;
      MEMORY[0x24260ED10](v59, v20, v7 - 224);
      v60 = v44;
      v61 = v47;
      v62 = v0[11];
      sub_23BBEAFE8(v48, v20, v62);
      sub_23BC5C668(v62, v0[9], v20);
      v63 = *(void (**)(uint64_t, uint64_t))(v0[12] + 8);
      v64 = v62;
      v36 = v61;
      v32 = v60;
      v63(v64, v20);
      v63(v48, v20);
    }
    *(_QWORD *)(v7 - 240) = v36;
    *(_QWORD *)(v7 - 232) = v10;
    v65 = MEMORY[0x24BDEF3E0];
    *(_QWORD *)(v7 - 256) = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v32, v7 - 240);
    *(_QWORD *)(v7 - 248) = v10;
    v66 = MEMORY[0x24260ED10](v65, v20, v7 - 256);
    v0[46] = v10;
    v0[47] = v66;
    MEMORY[0x24260ED10](v65, v2, v0 + 46);
    v67 = v32;
    v68 = v0[14];
    sub_23BBEAFE8(v34, v2, v68);
    v17 = v36;
    v69 = v34;
    v5 = v0[2];
    sub_23BC5C668(v68, v0[9], v2);
    v70 = *(void (**)(uint64_t, uint64_t))(v0[15] + 8);
    v71 = v68;
    v19 = v67;
    v70(v71, v2);
    v70(v69, v2);
    v21 = v0[21];
    v18 = v0[22];
  }
  v0[44] = v17;
  v0[45] = v10;
  v72 = MEMORY[0x24BDEF3E0];
  v0[42] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v19, v0 + 44);
  v0[43] = v10;
  v73 = MEMORY[0x24260ED10](v72, v20, v0 + 42);
  v0[40] = v10;
  v0[41] = v73;
  v74 = MEMORY[0x24260ED10](v72, v2, v0 + 40);
  v0[38] = v10;
  v0[39] = v74;
  MEMORY[0x24260ED10](v72, v21, v0 + 38);
  sub_23BBEAFE8(v5, v21, v18);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0[20] + 8))(v5, v21);
}

void sub_23BC17490(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23BC16B44(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

void sub_23BC174A0()
{
  type metadata accessor for DynamicStartWorkoutView();
}

uint64_t sub_23BC174DC()
{
  sub_23BC16714();
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC17518()
{
  sub_23BBE7EAC();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23BC17550()
{
  sub_23BC174A0();
}

uint64_t sub_23BC17560(uint64_t a1)
{
  sub_23BBE7EBC();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BC175B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC175E8()
{
  sub_23BBE7EAC();
  swift_release();
  return swift_release();
}

uint64_t sub_23BC17620(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BC1769C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23BBE7EAC();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23BC17748(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23BBE7EAC();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_23BC177AC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23BC177F4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DynamicStartWorkoutView()
{
  JUMPOUT(0x24260EC74);
}

uint64_t sub_23BC1784C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = sub_23BC71E2C();
  v4 = sub_23BC71E2C();
  v5 = sub_23BC71E2C();
  v6 = sub_23BC71E2C();
  v7 = sub_23BC71FE8();
  v8 = sub_23BC71D6C();
  v16[0] = v1;
  v16[1] = v2;
  v9 = MEMORY[0x24BDEF3E0];
  v15[0] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v3, v16);
  v15[1] = v2;
  v14[0] = v2;
  v14[1] = MEMORY[0x24260ED10](v9, v4, v15);
  v13[0] = v2;
  v13[1] = MEMORY[0x24260ED10](v9, v5, v14);
  v12 = MEMORY[0x24260ED10](v9, v6, v13);
  v11[0] = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v7, &v12);
  v11[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x24260ED10](MEMORY[0x24BDED308], v8, v11);
}

unint64_t sub_23BC17990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A760B0;
  if (!qword_256A760B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A760A8);
    result = MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v1);
    atomic_store(result, (unint64_t *)&qword_256A760B0);
  }
  return result;
}

uint64_t StackButtonEnvironment.init(requireStackItem:fetchStartWorkoutDetail:requestAddStackItem:requestRemoveStackItem:presentToastConfirmation:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

ValueMetadata *type metadata accessor for StackButtonEnvironment()
{
  return &type metadata for StackButtonEnvironment;
}

uint64_t sub_23BC17A08()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;
  _OWORD v4[2];
  uint64_t v5;
  char v6;

  sub_23BC18E70(v0, (uint64_t)v4);
  v2[0] = v4[0];
  v2[1] = v4[1];
  v3 = v5;
  if ((v6 & 1) != 0)
  {
    sub_23BC727B0();
    sub_23BC7254C();
    sub_23BC727D4();
  }
  else
  {
    sub_23BC727B0();
    sub_23BC7254C();
  }
  return sub_23BBF60B4((uint64_t)v2);
}

uint64_t sub_23BC17ABC()
{
  sub_23BC727A4();
  sub_23BC17A08();
  return sub_23BC727E0();
}

uint64_t sub_23BC17AFC()
{
  sub_23BC727A4();
  sub_23BC17A08();
  return sub_23BC727E0();
}

__n128 StartWorkoutButtonFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  result = *(__n128 *)(a1 + 96);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

void StartWorkoutButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t started;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[8];
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v49 = a3;
  v50 = a4;
  v44 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74930);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)v39 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v39[4] = (char *)v39 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v39[1] = (char *)v39 - v13;
  v14 = sub_23BC71C10();
  v15 = *(_QWORD *)(v14 - 8);
  v39[6] = v14;
  v39[7] = v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v39[5] = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v39[0] = (char *)v39 - v18;
  started = type metadata accessor for StartWorkoutButtonAction();
  v20 = MEMORY[0x24BDAC7A8](started);
  v43 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v39 - v22;
  v24 = type metadata accessor for StartWorkoutDetailLoadState(0);
  v40 = *(_QWORD *)(v24 - 8);
  v25 = *(_QWORD *)(v40 + 64);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v39[2] = (char *)v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v39[3] = (char *)v39 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v30 = MEMORY[0x24BDAC7A8](v29);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v39 - v31;
  v33 = v4[5];
  v56 = v4[4];
  v57 = v33;
  v58 = v4[6];
  v34 = v4[1];
  v52 = *v4;
  v53 = v34;
  v35 = v4[3];
  v54 = v4[2];
  v55 = v35;
  v36 = *a2;
  v47 = a2[1];
  v48 = v36;
  v37 = (uint64_t)a2 + *(int *)(type metadata accessor for StartWorkoutButtonState(0) + 48);
  v51 = v32;
  sub_23BBFD690(v37, (uint64_t)v32, type metadata accessor for StartWorkoutDetailLoadState);
  sub_23BBFD690(v50, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  v38 = (char *)sub_23BC17E28 + 4 * word_23BC77DD0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC17E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  *(_OWORD *)(v0 + 144) = *(_OWORD *)v2;
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_BYTE *)(v2 + 24);
  v6 = *(_BYTE *)(v2 + 25);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  *(_OWORD *)v3 = *(_OWORD *)(v0 + 144);
  *(_QWORD *)(v3 + 16) = v4;
  *(_BYTE *)(v3 + 24) = v5;
  *(_BYTE *)(v3 + 25) = v6;
  sub_23BC71BF8();
  sub_23BBF36FC(*(_QWORD *)(v0 + 168), type metadata accessor for StartWorkoutDetailLoadState);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 0, 2, v7);
  return sub_23BBF8638(v3, v1);
}

uint64_t sub_23BC18E70(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StartWorkoutButtonFeature.TaskIdentifier(a2, a1);
  return a2;
}

unint64_t sub_23BC18EA4()
{
  unint64_t result;

  result = qword_256A760C0;
  if (!qword_256A760C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC77EB4, &type metadata for StartWorkoutButtonFeature.TaskIdentifier);
    atomic_store(result, &qword_256A760C0);
  }
  return result;
}

uint64_t sub_23BC18EE8(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t sub_23BC18F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v4[7] = a1;
  v4[8] = type metadata accessor for StartWorkoutButtonAction();
  v4[9] = swift_task_alloc();
  v4[10] = sub_23BC723F0();
  v4[11] = sub_23BC723E4();
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v4[12] = v8;
  *v8 = v4;
  v8[1] = sub_23BC18FD0;
  return v10(v4 + 2, a3, a4);
}

uint64_t sub_23BC18FD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 112) = sub_23BC723CC();
  *(_QWORD *)(v2 + 120) = v3;
  return swift_task_switch();
}

uint64_t sub_23BC1905C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_BYTE *)(v0 + 40);
  v3 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 8) = v3;
  *(_WORD *)(v1 + 24) = v2;
  swift_storeEnumTagMultiPayload();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
  *v4 = v0;
  v4[1] = sub_23BC190E8;
  return sub_23BC7215C();
}

uint64_t sub_23BC190E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BC19148()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC19184()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BC191E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  MEMORY[0x24260EC20](v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC1922C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BC1928C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)();

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 104);
  MEMORY[0x24260EC2C]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74950);
  v1 = swift_dynamicCast();
  v2 = *(_QWORD *)(v0 + 72);
  if ((v1 & 1) != 0)
  {
    v3 = *(unsigned __int8 *)(v0 + 41);
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)v2 = v3;
    *(_WORD *)(v2 + 24) = 256;
    swift_storeEnumTagMultiPayload();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
    v5 = sub_23BC1922C;
  }
  else
  {
    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = 0;
    *(_WORD *)(v2 + 24) = 256;
    swift_storeEnumTagMultiPayload();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
    v5 = sub_23BC19184;
  }
  *v4 = v0;
  v4[1] = v5;
  return sub_23BC7215C();
}

uint64_t sub_23BC193A0(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  int *v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t (*v12)(void);

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 48) = type metadata accessor for StartWorkoutButtonAction();
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  *(_QWORD *)(v5 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76138);
  *(_QWORD *)(v5 + 80) = swift_task_alloc();
  v7 = sub_23BC71C10();
  *(_QWORD *)(v5 + 88) = v7;
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  *(_QWORD *)(v5 + 112) = sub_23BC723F0();
  *(_QWORD *)(v5 + 120) = sub_23BC723E4();
  v8 = *a2;
  v9 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(v5 + 128) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(v5 + 144) = v9;
  *(_OWORD *)(v5 + 160) = *((_OWORD *)a2 + 4);
  v12 = (uint64_t (*)(void))((char *)v8 + *v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 176) = v10;
  *v10 = v5;
  v10[1] = sub_23BC194B8;
  return v12();
}

uint64_t sub_23BC194B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD, _QWORD);

  v2 = *v1;
  *(_QWORD *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 312) = sub_23BC723CC();
    *(_QWORD *)(v2 + 320) = v3;
    return swift_task_switch();
  }
  else
  {
    v6 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v2 + 128) + *(_QWORD *)(v2 + 128));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 192) = v5;
    *v5 = v2;
    v5[1] = sub_23BC1957C;
    return v6(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  }
}

uint64_t sub_23BC1957C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, _QWORD);

  v4 = *v2;
  *(_QWORD *)(v4 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    MEMORY[0x24260EC20](v1);
    a1 = 0.0;
  }
  *(double *)(v4 + 208) = a1;
  v7 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v4 + 144) + *(_QWORD *)(v4 + 144));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 216) = v5;
  *v5 = v4;
  v5[1] = sub_23BC19618;
  return v7(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_23BC19618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v6;
  _QWORD *v7;
  int *v8;
  _QWORD *v9;
  uint64_t v11;
  int *v12;

  v6 = (_QWORD *)*v3;
  v7 = (_QWORD *)*v3;
  swift_task_dealloc();
  if (v2)
  {
    v8 = (int *)v6[20];
    MEMORY[0x24260EC20](v2);
    v12 = (int *)((char *)v8 + *v8);
    v9 = (_QWORD *)swift_task_alloc();
    v6[28] = v9;
    *v9 = v7;
    v9[1] = sub_23BC196FC;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v12)(v6[10], v6[3], v6[4]);
  }
  else
  {
    v6[29] = a2;
    v6[30] = a1;
    v6[31] = sub_23BC723CC();
    v6[32] = v11;
    return swift_task_switch();
  }
}

uint64_t sub_23BC196FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    MEMORY[0x24260EC20](v0);
    sub_23BC723CC();
  }
  else
  {
    *(_QWORD *)(v2 + 272) = sub_23BC723CC();
    *(_QWORD *)(v2 + 280) = v3;
  }
  return swift_task_switch();
}

uint64_t sub_23BC197B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[29];
  v2 = v0[26];
  v3 = (_QWORD *)v0[9];
  v4 = v0[5];
  *v3 = v0[30];
  v3[1] = v1;
  v3[2] = v2;
  v3[3] = v4;
  swift_storeEnumTagMultiPayload();
  v5 = (_QWORD *)swift_task_alloc();
  v0[33] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
  *v5 = v0;
  v5[1] = sub_23BC19838;
  return sub_23BC7215C();
}

uint64_t sub_23BC19838()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BC19898()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = v0[11];
  v2 = v0[12];
  v3 = v0[10];
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[25];
    v5 = v0[7];
    sub_23BBE81C0(v0[10], &qword_256A76138);
    v6 = v0[5];
    if (v4)
    {
      *(_QWORD *)v0[7] = 0;
      *(_QWORD *)(v5 + 8) = v6;
      swift_storeEnumTagMultiPayload();
      v7 = (_QWORD *)swift_task_alloc();
      v0[38] = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
      v8 = sub_23BC19BF0;
    }
    else
    {
      *(_QWORD *)v0[7] = v0[26];
      *(_QWORD *)(v5 + 8) = v6;
      swift_storeEnumTagMultiPayload();
      v7 = (_QWORD *)swift_task_alloc();
      v0[36] = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
      v8 = sub_23BC19A80;
    }
    *v7 = v0;
    v7[1] = v8;
  }
  else
  {
    v9 = v0[26];
    v11 = v0[12];
    v10 = v0[13];
    v12 = v0[11];
    v13 = v0[8];
    v14 = v0[5];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 32))(v10, v0[10], v12);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A760B8);
    v16 = *(int *)(v15 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, v10, v12);
    *(_QWORD *)(v13 + v16) = v9;
    *(_QWORD *)(v13 + *(int *)(v15 + 64)) = v14;
    swift_storeEnumTagMultiPayload();
    v17 = (_QWORD *)swift_task_alloc();
    v0[37] = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
    *v17 = v0;
    v17[1] = sub_23BC19B0C;
  }
  return sub_23BC7215C();
}

uint64_t sub_23BC19A80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC19B0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BC19B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC19BF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC19C7C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC19CE8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
  *v1 = v0;
  v1[1] = sub_23BC19D58;
  return sub_23BC7215C();
}

uint64_t sub_23BC19D58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BC19DB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  MEMORY[0x24260EC20](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC19E30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)();

  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[12] + 56))(v0[10], 1, 1, v0[11]);
  v1 = v0[25];
  v2 = v0[7];
  sub_23BBE81C0(v0[10], &qword_256A76138);
  v3 = v0[5];
  if (v1)
  {
    *(_QWORD *)v0[7] = 0;
    *(_QWORD *)(v2 + 8) = v3;
    swift_storeEnumTagMultiPayload();
    v4 = (_QWORD *)swift_task_alloc();
    v0[38] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
    v5 = sub_23BC19BF0;
  }
  else
  {
    *(_QWORD *)v0[7] = v0[26];
    *(_QWORD *)(v2 + 8) = v3;
    swift_storeEnumTagMultiPayload();
    v4 = (_QWORD *)swift_task_alloc();
    v0[36] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76130);
    v5 = sub_23BC19A80;
  }
  *v4 = v0;
  v4[1] = v5;
  return sub_23BC7215C();
}

uint64_t sub_23BC19F30(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(double *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 48) = a7;
  *(_QWORD *)(v7 + 24) = a4;
  *(_QWORD *)(v7 + 32) = a5;
  *(_QWORD *)(v7 + 16) = a3;
  type metadata accessor for StartWorkoutDetailLoadState(0);
  *(_QWORD *)(v7 + 64) = swift_task_alloc();
  sub_23BC723F0();
  *(_QWORD *)(v7 + 72) = sub_23BC723E4();
  *(_QWORD *)(v7 + 80) = sub_23BC723CC();
  *(_QWORD *)(v7 + 88) = v8;
  return swift_task_switch();
}

uint64_t sub_23BC19FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD, uint64_t, double);

  v1 = *(_QWORD *)(v0 + 64);
  sub_23BBFD690(*(_QWORD *)(v0 + 16), v1, type metadata accessor for StartWorkoutDetailLoadState);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 2, v2))
  {
    v3 = *(_QWORD *)(v0 + 64);
    swift_release();
    sub_23BBF36FC(v3, type metadata accessor for StartWorkoutDetailLoadState);
LABEL_5:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)v4;
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v4 + 16);
  v5 = *(unsigned __int8 *)(v4 + 24);
  *(_BYTE *)(v0 + 136) = v5;
  v6 = *(_BYTE *)(v4 + 25);
  v7 = v4 + *(int *)(v2 + 48);
  v8 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  if ((v6 & 1) != 0)
  {
    swift_release();
    goto LABEL_5;
  }
  sub_23BC72420();
  v11 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, double))(**(int **)(*(_QWORD *)(v0 + 24) + 96)
                                                                        + *(_QWORD *)(*(_QWORD *)(v0 + 24) + 96));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *v10 = v0;
  v10[1] = sub_23BC1A164;
  return v11(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v5, *(double *)(v0 + 56));
}

uint64_t sub_23BC1A164()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23BBF876C(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(unsigned __int8 *)(v2 + 136), 0);
  return swift_task_switch();
}

uint64_t sub_23BC1A1DC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC1A218()
{
  uint64_t v0;

  swift_release();
  sub_23BBF876C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(unsigned __int8 *)(v0 + 136), 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC1A26C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(double *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 48) = a7;
  *(_QWORD *)(v7 + 24) = a4;
  *(_QWORD *)(v7 + 32) = a5;
  *(_QWORD *)(v7 + 16) = a3;
  type metadata accessor for StartWorkoutDetailLoadState(0);
  *(_QWORD *)(v7 + 64) = swift_task_alloc();
  sub_23BC723F0();
  *(_QWORD *)(v7 + 72) = sub_23BC723E4();
  *(_QWORD *)(v7 + 80) = sub_23BC723CC();
  *(_QWORD *)(v7 + 88) = v8;
  return swift_task_switch();
}

uint64_t sub_23BC1A304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD, uint64_t, double);

  v1 = *(_QWORD *)(v0 + 64);
  sub_23BBFD690(*(_QWORD *)(v0 + 16), v1, type metadata accessor for StartWorkoutDetailLoadState);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 2, v2))
  {
    v3 = *(_QWORD *)(v0 + 64);
    swift_release();
    sub_23BBF36FC(v3, type metadata accessor for StartWorkoutDetailLoadState);
LABEL_5:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)v4;
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v4 + 16);
  v5 = *(unsigned __int8 *)(v4 + 24);
  *(_BYTE *)(v0 + 136) = v5;
  v6 = *(_BYTE *)(v4 + 25);
  v7 = v4 + *(int *)(v2 + 48);
  v8 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  if ((v6 & 1) != 0)
  {
    swift_release();
    goto LABEL_5;
  }
  sub_23BC72420();
  v11 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, double))(**(int **)(*(_QWORD *)(v0 + 24) + 80)
                                                                        + *(_QWORD *)(*(_QWORD *)(v0 + 24) + 80));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *v10 = v0;
  v10[1] = sub_23BC1A4A0;
  return v11(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v5, *(double *)(v0 + 56));
}

uint64_t sub_23BC1A4A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23BBF876C(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(unsigned __int8 *)(v2 + 136), 0);
  return swift_task_switch();
}

uint64_t sub_23BC1A51C(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_23BC1A560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for StartWorkoutDetailLoadState(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 119) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = *(_QWORD *)(v1 + v7);
  v12 = *(_QWORD *)(v1 + v7 + 8);
  v13 = *(_QWORD *)(v1 + v8);
  v14 = *(double *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_23BBF6148;
  return sub_23BC1A26C(v14, a1, v9, v10, v11, v12, v13);
}

uint64_t sub_23BC1A634(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for StartWorkoutDetailLoadState(0) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 2, v3))
  {
    sub_23BBF876C(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(_BYTE *)(v2 + 25));
    v4 = v2 + *(int *)(v3 + 48);
    v5 = sub_23BC71C10();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BC1A7F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for StartWorkoutDetailLoadState(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 119) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = *(_QWORD *)(v1 + v7);
  v12 = *(_QWORD *)(v1 + v7 + 8);
  v13 = *(_QWORD *)(v1 + v8);
  v14 = *(double *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_23BBF5304;
  return sub_23BC19F30(v14, a1, v9, v10, v11, v12, v13);
}

uint64_t sub_23BC1A8C8()
{
  return objectdestroy_7Tm();
}

uint64_t sub_23BC1A8D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = (int **)(v1 + 2);
  v5 = v1[16];
  v6 = v1[17];
  v7 = v1[18];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23BBF6148;
  return sub_23BC193A0(a1, v4, v5, v6, v7);
}

uint64_t sub_23BC1A948()
{
  return objectdestroy_7Tm();
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BC1A9B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 16;
  v6 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BC18F0C(a1, v4, v6, v5);
}

uint64_t sub_23BC1AA20()
{
  return sub_23BBF377C(&qword_256A76108, (uint64_t (*)(uint64_t))type metadata accessor for StartWorkoutButtonAction, (uint64_t)&protocol conformance descriptor for StartWorkoutButtonAction);
}

uint64_t sub_23BC1AA4C()
{
  return sub_23BBF377C(&qword_256A76110, (uint64_t (*)(uint64_t))type metadata accessor for StartWorkoutButtonAction, (uint64_t)&protocol conformance descriptor for StartWorkoutButtonAction);
}

uint64_t sub_23BC1AA78()
{
  return sub_23BBF377C(&qword_256A76118, type metadata accessor for StartWorkoutButtonState, (uint64_t)&protocol conformance descriptor for StartWorkoutButtonState);
}

uint64_t destroy for StartWorkoutButtonEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for StartWorkoutButtonEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v3 = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for StartWorkoutButtonEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_OWORD *assignWithTake for StartWorkoutButtonEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWorkoutButtonEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButtonEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonFeature()
{
  return &type metadata for StartWorkoutButtonFeature;
}

uint64_t initializeWithCopy for StartWorkoutButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  char v6;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
  if (v4 == 1)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for StartWorkoutButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  char v6;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    if (v4 == 1)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v6 = 1;
    }
    else
    {
      v6 = 0;
    }
    *(_BYTE *)(a1 + 48) = v6;
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StartWorkoutButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    if (v4 == 1)
    {
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v4) = 0;
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_BYTE *)(a1 + 48) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWorkoutButtonFeature.TaskIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButtonFeature.TaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BC1B034(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_23BC1B050(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonFeature.TaskIdentifier()
{
  return &type metadata for StartWorkoutButtonFeature.TaskIdentifier;
}

unint64_t sub_23BC1B08C()
{
  unint64_t result;

  result = qword_256A76120;
  if (!qword_256A76120)
  {
    result = MEMORY[0x24260ED10](&unk_23BC77E8C, &type metadata for StartWorkoutButtonFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A76120);
  }
  return result;
}

uint64_t sub_23BC1B0D0(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  char v5;
  char v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _BYTE v11[40];
  double v12;
  _BYTE v13[56];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  double v17;
  char v18;

  sub_23BC18E70(a1, (uint64_t)v13);
  sub_23BC18E70(a2, (uint64_t)&v14);
  if ((v13[48] & 1) == 0)
  {
    sub_23BC18E70((uint64_t)v13, (uint64_t)v11);
    if ((v18 & 1) == 0)
    {
      v8 = v14;
      v9 = v15;
      v10 = v16;
      v6 = MEMORY[0x24260E77C](v11, &v8);
      sub_23BBF60B4((uint64_t)&v8);
      sub_23BBF60B4((uint64_t)v11);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_23BC18E70((uint64_t)v13, (uint64_t)v11);
  if (v18 != 1)
  {
LABEL_6:
    sub_23BBF60B4((uint64_t)v11);
    sub_23BBE81C0((uint64_t)v13, &qword_256A76128);
LABEL_10:
    v6 = 0;
    return v6 & 1;
  }
  v3 = v12;
  v4 = v17;
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v5 = MEMORY[0x24260E77C](v11, &v8);
  sub_23BBF60B4((uint64_t)&v8);
  sub_23BBF60B4((uint64_t)v11);
  if ((v5 & 1) == 0)
  {
    sub_23BC18EE8((uint64_t)v13);
    goto LABEL_10;
  }
  v6 = v3 == v4;
LABEL_8:
  sub_23BC18EE8((uint64_t)v13);
  return v6 & 1;
}

__n128 ViewStackButtonFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t ViewStackButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, char a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t result;
  char *v42;
  uint64_t v43;
  unint64_t *v44;
  char v45;
  char v46;

  v44 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74920);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v42 - v11;
  v14 = *v4;
  v13 = v4[1];
  v15 = v4[3];
  v43 = v4[2];
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
  v17 = v16[16];
  v18 = v16[20];
  v19 = v16[24];
  if ((a4 & 1) != 0)
  {
    v33 = &v10[v17];
    v42 = &v10[v18];
    v34 = &v10[v19];
    v46 = 1;
    sub_23BC1B5CC();
    sub_23BC72558();
    v35 = *MEMORY[0x24BE2B570];
    v36 = sub_23BC72180();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v33, v35, v36);
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = v14;
    v37[3] = v13;
    v37[4] = v43;
    v37[5] = v15;
    *(_QWORD *)v34 = &unk_256A76150;
    *((_QWORD *)v34 + 1) = v37;
    swift_retain();
    swift_retain();
    sub_23BC723FC();
    v38 = *MEMORY[0x24BE2B558];
    v39 = sub_23BC72174();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v42, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BE2B438], v6);
    v27 = v44;
    v28 = *v44;
    v29 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_23BBF9044(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
    v31 = *(_QWORD *)(v28 + 16);
    v40 = *(_QWORD *)(v28 + 24);
    v32 = v31 + 1;
    if (v31 >= v40 >> 1)
      v28 = sub_23BBF9044(v40 > 1, v31 + 1, 1, v28);
    v12 = v10;
  }
  else
  {
    v20 = &v12[v17];
    v42 = &v12[v18];
    v21 = &v12[v19];
    v45 = 0;
    sub_23BC1B5CC();
    sub_23BC72558();
    v22 = *MEMORY[0x24BE2B570];
    v23 = sub_23BC72180();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v20, v22, v23);
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v14;
    v24[3] = v13;
    v24[4] = v43;
    v24[5] = v15;
    *(_QWORD *)v21 = &unk_256A76160;
    *((_QWORD *)v21 + 1) = v24;
    swift_retain();
    swift_retain();
    sub_23BC723FC();
    v25 = *MEMORY[0x24BE2B558];
    v26 = sub_23BC72174();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v42, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v12, *MEMORY[0x24BE2B438], v6);
    v27 = v44;
    v28 = *v44;
    v29 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_23BBF9044(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
    v31 = *(_QWORD *)(v28 + 16);
    v30 = *(_QWORD *)(v28 + 24);
    v32 = v31 + 1;
    if (v31 >= v30 >> 1)
      v28 = sub_23BBF9044(v30 > 1, v31 + 1, 1, v28);
  }
  *(_QWORD *)(v28 + 16) = v32;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v28+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v31, v12, v29);
  *v27 = v28;
  return result;
}

unint64_t sub_23BC1B5CC()
{
  unint64_t result;

  result = qword_256A76140;
  if (!qword_256A76140)
  {
    result = MEMORY[0x24260ED10](&unk_23BC77FD0, &type metadata for ViewStackButtonFeature.TaskIdentifier);
    atomic_store(result, &qword_256A76140);
  }
  return result;
}

uint64_t sub_23BC1B610(uint64_t a1, int *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[2] = sub_23BC723F0();
  v2[3] = sub_23BC723E4();
  v6 = (uint64_t (*)(void))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23BC1B68C;
  return v6();
}

uint64_t sub_23BC1B68C()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC1B6FC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_23BC723F0();
  v4[3] = sub_23BC723E4();
  v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_23BBFD5A0;
  return v8();
}

uint64_t sub_23BC1B77C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF5304;
  return sub_23BC1B6FC(a1, v4, v5, v6);
}

uint64_t sub_23BC1B7F4(uint64_t a1, uint64_t a2, unint64_t *a3, char *a4)
{
  return ViewStackButtonFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4);
}

uint64_t objectdestroyTm_3()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC1B82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23BBF6148;
  return sub_23BC1B610(a1, v4);
}

unint64_t sub_23BC1B8A4()
{
  unint64_t result;

  result = qword_256A76168;
  if (!qword_256A76168)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for ViewStackButtonAction, &type metadata for ViewStackButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A76168);
  }
  return result;
}

unint64_t sub_23BC1B8EC()
{
  unint64_t result;

  result = qword_256A76170;
  if (!qword_256A76170)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for ViewStackButtonAction, &type metadata for ViewStackButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A76170);
  }
  return result;
}

unint64_t sub_23BC1B934()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A75318;
  if (!qword_256A75318)
  {
    v1 = type metadata accessor for ViewStackButtonState();
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for ViewStackButtonState, v1);
    atomic_store(result, (unint64_t *)&qword_256A75318);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewStackButtonFeature()
{
  return &type metadata for ViewStackButtonFeature;
}

uint64_t storeEnumTagSinglePayload for ViewStackButtonFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC1B9D8 + 4 * byte_23BC77F05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC1BA0C + 4 * byte_23BC77F00[v4]))();
}

uint64_t sub_23BC1BA0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC1BA14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC1BA1CLL);
  return result;
}

uint64_t sub_23BC1BA28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC1BA30);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC1BA34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC1BA3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewStackButtonFeature.TaskIdentifier()
{
  return &type metadata for ViewStackButtonFeature.TaskIdentifier;
}

unint64_t sub_23BC1BA5C()
{
  unint64_t result;

  result = qword_256A76178;
  if (!qword_256A76178)
  {
    result = MEMORY[0x24260ED10](&unk_23BC77FA8, &type metadata for ViewStackButtonFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A76178);
  }
  return result;
}

BOOL static StartWorkoutButtonContent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StartWorkoutButtonContent.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t StartWorkoutButtonContent.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t StartWorkoutButton.init(store:labelContent:layout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;

  v9 = *a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)a5 = sub_23BBEB2B0;
  *(_QWORD *)(a5 + 8) = v10;
  *(_BYTE *)(a5 + 16) = 0;
  *(_BYTE *)(a5 + 17) = v9;
  return sub_23BBE87F8(a4, a5 + 24, &qword_256A76180);
}

uint64_t sub_23BC1BBA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC1BBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;

  v4 = sub_23BC71C4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_BYTE *)(a1 + 17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v8 = sub_23BC0CEAC((uint64_t)&v13, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_23BC1BD00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  if (qword_256A73EE8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  result = sub_23BC71FF4();
  *a1 = result;
  return result;
}

uint64_t sub_23BC1BD70@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  _QWORD v48[2];
  char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _OWORD v68[4];

  v50 = a3;
  v51 = a2;
  v55 = a1;
  v61 = a4;
  v5 = sub_23BC72210();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BC721C8();
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23BC721E0();
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76250);
  MEMORY[0x24BDAC7A8](v11);
  v56 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v14 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  v53 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v49 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75270);
  v17 = *(_QWORD *)(v16 - 8);
  v58 = v16;
  v59 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v64 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23BC71C4C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v68[0]) = *(_BYTE *)(v4 + 17);
  v48[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  v48[0] = sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v23 = v50;
  v24 = v51;
  WorkoutMediaType.localizedTitle(labelContent:rawActivityType:locale:)((uint64_t)v68, v50, (uint64_t)v22, v51);
  v26 = v25;
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_23BC1D4EC((uint64_t *)v4, (uint64_t)v68);
  v29 = swift_allocObject();
  v30 = v68[1];
  *(_OWORD *)(v29 + 16) = v68[0];
  *(_OWORD *)(v29 + 32) = v30;
  v31 = v68[3];
  *(_OWORD *)(v29 + 48) = v68[2];
  *(_OWORD *)(v29 + 64) = v31;
  *(_QWORD *)(v29 + 80) = v23;
  v65 = v26;
  v66 = v28;
  v32 = v28;
  v67 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
  sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
  v33 = v49;
  sub_23BC72048();
  v34 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
  v35 = v52;
  sub_23BC71EEC();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v35);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v36 = v55;
  sub_23BC721D4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76258);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BC78010;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v38 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v26;
  *(_QWORD *)(inited + 56) = v32;
  *(_QWORD *)(inited + 72) = v38;
  strcpy((char *)(inited + 80), "impressionType");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = 0x6E6F74747562;
  *(_QWORD *)(inited + 104) = 0xE600000000000000;
  *(_QWORD *)(inited + 120) = v38;
  *(_QWORD *)(inited + 128) = 0x6973736572706D69;
  v39 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(_QWORD *)(inited + 144) = v36;
  *(_QWORD *)(inited + 168) = v39;
  *(_QWORD *)(inited + 176) = 0x657079546469;
  *(_QWORD *)(inited + 216) = v38;
  *(_QWORD *)(inited + 184) = 0xE600000000000000;
  *(_QWORD *)(inited + 192) = 0x64695F737469;
  *(_QWORD *)(inited + 200) = 0xE600000000000000;
  sub_23BC4C878(inited);
  sub_23BC721BC();
  v40 = MEMORY[0x24BEE4AF8];
  sub_23BC1DF90(MEMORY[0x24BEE4AF8]);
  sub_23BC1DF90(v40);
  v41 = v56;
  sub_23BC721EC();
  v42 = sub_23BC721F8();
  v43 = (uint64_t)v41;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
  v44 = v60;
  sub_23BC72204();
  *(_QWORD *)&v68[0] = v35;
  *((_QWORD *)&v68[0] + 1) = v34;
  swift_getOpaqueTypeConformance2();
  v45 = v58;
  v46 = v64;
  sub_23BC71EE0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v63);
  sub_23BBE81C0(v43, &qword_256A76250);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v46, v45);
}

uint64_t sub_23BC1C334(uint64_t a1, uint64_t a2)
{
  uint64_t started;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v5 = (uint64_t *)((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  *v5 = a2;
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BC0EF54((uint64_t)v5);
}

uint64_t StartWorkoutButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)();
  __int128 v8;
  __int128 v9;
  uint64_t (**v10)();
  _OWORD v12[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76188);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC1C510(v2, (uint64_t)v6);
  sub_23BC1D4EC(v2, (uint64_t)v12);
  v7 = (uint64_t (*)())swift_allocObject();
  v8 = v12[1];
  *((_OWORD *)v7 + 1) = v12[0];
  *((_OWORD *)v7 + 2) = v8;
  v9 = v12[3];
  *((_OWORD *)v7 + 3) = v12[2];
  *((_OWORD *)v7 + 4) = v9;
  sub_23BBE817C((uint64_t)v6, a1, &qword_256A76188);
  v10 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A76190) + 36));
  *v10 = sub_23BC1D528;
  v10[1] = v7;
  v10[2] = 0;
  v10[3] = 0;
  return sub_23BBE81C0((uint64_t)v6, &qword_256A76188);
}

uint64_t sub_23BC1C510@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t started;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v27;
  char v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t OpaqueTypeConformance2;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unsigned int v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t KeyPath;
  uint64_t *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  _QWORD v110[4];
  uint64_t v111;

  v102 = a2;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76220);
  MEMORY[0x24BDAC7A8](v96);
  v98 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76218);
  KeyPath = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v82 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76228);
  MEMORY[0x24BDAC7A8](v85);
  v87 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A761F8);
  MEMORY[0x24BDAC7A8](v91);
  v84 = (uint64_t *)((char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A761E8);
  v92 = *(_QWORD *)(v93 - 8);
  v7 = MEMORY[0x24BDAC7A8](v93);
  v86 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v89 = (uint64_t)&v76 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v88 = (uint64_t)&v76 - v11;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A761D8);
  MEMORY[0x24BDAC7A8](v95);
  v94 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A761C8);
  MEMORY[0x24BDAC7A8](v101);
  v97 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76230);
  MEMORY[0x24BDAC7A8](v100);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v99 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  v21 = v20;
  swift_release();
  swift_release();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 2, v22);
  if ((_DWORD)v23)
  {
    MEMORY[0x24BDAC7A8](v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
    sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    sub_23BC72048();
    v24 = v99;
    v25 = v104;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v15, v17, v104);
    swift_storeEnumTagMultiPayload();
    sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    sub_23BC1DCB0();
    sub_23BC71E20();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  }
  else
  {
    v27 = v103;
    v80 = v15;
    v28 = v21[25];
    v81 = v22;
    if ((v28 & 1) != 0)
    {
      MEMORY[0x24BDAC7A8](v23);
      v29 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
      sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
      v30 = v17;
      sub_23BC72048();
      v31 = v99;
      v32 = v104;
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v98, v17, v104);
      swift_storeEnumTagMultiPayload();
      sub_23BC1DD54(&qword_256A761D0, &qword_256A761D8, (uint64_t (*)(void))sub_23BC1DDB8, MEMORY[0x24BDF5578]);
      sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
      v33 = (uint64_t)v97;
      sub_23BC71E20();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
      v34 = (uint64_t)v80;
    }
    else
    {
      v35 = *((_QWORD *)v21 + 1);
      v76 = *(_QWORD *)v21;
      v36 = *((_QWORD *)v21 + 2);
      v77 = v21;
      v37 = v21[24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = v37;
      sub_23BC71CDC();
      swift_getKeyPath();
      sub_23BC7218C();
      swift_release();
      swift_release();
      v39 = sub_23BC6A060(v37, v111);
      swift_bridgeObjectRelease();
      v99 = v36;
      v79 = v37;
      v78 = v35;
      if (v39)
      {
        v40 = v76;
        sub_23BC1D4EC(v27, (uint64_t)&v111);
        sub_23BBE817C((uint64_t)(v27 + 3), (uint64_t)&v106, &qword_256A76180);
        if (*((_QWORD *)&v107 + 1))
        {
          sub_23BC1E42C(&v106, (uint64_t)v110);
          v41 = __swift_project_boxed_opaque_existential_1(v110, v110[3]);
          MEMORY[0x24BDAC7A8](v41);
          (*(void (**)(char *))(v43 + 16))((char *)&v76 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
          v44 = sub_23BC720FC();
          v45 = (uint64_t)v84;
          *v84 = v44;
          v103 = (uint64_t *)(v45 + *(int *)(v91 + 44));
          swift_retain();
          v46 = swift_bridgeObjectRetain();
          v47 = sub_23BC1E26C(v46);
          swift_bridgeObjectRelease();
          v105 = v47;
          KeyPath = swift_getKeyPath();
          sub_23BC1D4EC(&v111, (uint64_t)&v106);
          v48 = swift_allocObject();
          v49 = v107;
          *(_OWORD *)(v48 + 16) = v106;
          *(_OWORD *)(v48 + 32) = v49;
          v50 = v109;
          *(_OWORD *)(v48 + 48) = v108;
          *(_OWORD *)(v48 + 64) = v50;
          *(_QWORD *)(v48 + 80) = v40;
          *(_QWORD *)(v48 + 88) = v35;
          *(_QWORD *)(v48 + 96) = v36;
          *(_BYTE *)(v48 + 104) = v37;
          v51 = swift_allocObject();
          *(_QWORD *)(v51 + 16) = sub_23BC1E3D4;
          *(_QWORD *)(v51 + 24) = v48;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256A76238);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256A76240);
          sub_23BBE869C(&qword_256A76248, &qword_256A76238, MEMORY[0x24BEE12D8]);
          v52 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75270);
          v53 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
          *(_QWORD *)&v106 = v104;
          *((_QWORD *)&v106 + 1) = v53;
          OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
          *(_QWORD *)&v106 = v52;
          *((_QWORD *)&v106 + 1) = OpaqueTypeConformance2;
          swift_getOpaqueTypeConformance2();
          sub_23BC720CC();
          swift_release();
          sub_23BBE817C(v45, v87, &qword_256A761F8);
          swift_storeEnumTagMultiPayload();
          sub_23BC1DE24();
          sub_23BC1DEA8();
          v55 = (uint64_t)v86;
          sub_23BC71E20();
          sub_23BBE81C0(v45, &qword_256A761F8);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
        }
        else
        {
          sub_23BBE81C0((uint64_t)&v106, &qword_256A76180);
          v59 = swift_bridgeObjectRetain();
          v60 = sub_23BC1E26C(v59);
          swift_bridgeObjectRelease();
          v110[0] = v60;
          swift_getKeyPath();
          sub_23BC1D4EC(&v111, (uint64_t)&v106);
          v61 = swift_allocObject();
          v62 = v107;
          *(_OWORD *)(v61 + 16) = v106;
          *(_OWORD *)(v61 + 32) = v62;
          v63 = v109;
          *(_OWORD *)(v61 + 48) = v108;
          *(_OWORD *)(v61 + 64) = v63;
          *(_QWORD *)(v61 + 80) = v40;
          *(_QWORD *)(v61 + 88) = v35;
          *(_QWORD *)(v61 + 96) = v36;
          *(_BYTE *)(v61 + 104) = v38;
          v64 = swift_allocObject();
          *(_QWORD *)(v64 + 16) = sub_23BC1E3D4;
          *(_QWORD *)(v64 + 24) = v61;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256A76238);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256A76240);
          sub_23BBE869C(&qword_256A76248, &qword_256A76238, MEMORY[0x24BEE12D8]);
          v65 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75270);
          v66 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
          *(_QWORD *)&v106 = v104;
          *((_QWORD *)&v106 + 1) = v66;
          v67 = swift_getOpaqueTypeConformance2();
          *(_QWORD *)&v106 = v65;
          *((_QWORD *)&v106 + 1) = v67;
          swift_getOpaqueTypeConformance2();
          v68 = v82;
          sub_23BC720CC();
          v69 = KeyPath;
          v70 = v90;
          (*(void (**)(uint64_t, char *, uint64_t))(KeyPath + 16))(v87, v68, v90);
          swift_storeEnumTagMultiPayload();
          sub_23BC1DE24();
          sub_23BC1DEA8();
          v55 = (uint64_t)v86;
          sub_23BC71E20();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
        }
        v71 = v89;
        sub_23BBE87F8(v55, v89, &qword_256A761E8);
        sub_23BBF876C(v40, v78, v99, v79, 0);
        sub_23BC1E400((uint64_t)&v111);
        v72 = v71;
        v73 = v88;
        sub_23BBE87F8(v72, v88, &qword_256A761E8);
        v58 = v94;
        sub_23BBE87F8(v73, v94, &qword_256A761E8);
        v56 = 0;
        v57 = (uint64_t)v98;
        v33 = (uint64_t)v97;
      }
      else
      {
        v40 = v76;
        sub_23BBF876C(v76, v35, v36, v37, 0);
        v56 = 1;
        v57 = (uint64_t)v98;
        v33 = (uint64_t)v97;
        v58 = v94;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v58, v56, 1, v93);
      sub_23BBE817C(v58, v57, &qword_256A761D8);
      swift_storeEnumTagMultiPayload();
      sub_23BC1DD54(&qword_256A761D0, &qword_256A761D8, (uint64_t (*)(void))sub_23BC1DDB8, MEMORY[0x24BDF5578]);
      sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
      sub_23BC71E20();
      sub_23BBF876C(v40, v78, v99, v79, 0);
      sub_23BBE81C0(v58, &qword_256A761D8);
      v34 = (uint64_t)v80;
      v29 = v77;
    }
    v74 = &v29[*(int *)(v81 + 48)];
    sub_23BBE817C(v33, v34, &qword_256A761C8);
    swift_storeEnumTagMultiPayload();
    sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    sub_23BC1DCB0();
    sub_23BC71E20();
    sub_23BBE81C0(v33, &qword_256A761C8);
    v75 = sub_23BC71C10();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
  }
}

uint64_t sub_23BC1D400()
{
  uint64_t started;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BC0EF54((uint64_t)v2);
}

uint64_t sub_23BC1D4EC(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for StartWorkoutButton(a2, a1);
  return a2;
}

uint64_t sub_23BC1D520()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_23BC1D528()
{
  return sub_23BC1D400();
}

unint64_t sub_23BC1D534()
{
  unint64_t result;

  result = qword_256A76198;
  if (!qword_256A76198)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutButtonContent, &type metadata for StartWorkoutButtonContent);
    atomic_store(result, (unint64_t *)&qword_256A76198);
  }
  return result;
}

uint64_t sub_23BC1D578()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC1D588@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)();
  __int128 v8;
  __int128 v9;
  uint64_t (**v10)();
  _OWORD v12[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76188);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC1C510(v2, (uint64_t)v6);
  sub_23BC1D4EC(v2, (uint64_t)v12);
  v7 = (uint64_t (*)())swift_allocObject();
  v8 = v12[1];
  *((_OWORD *)v7 + 1) = v12[0];
  *((_OWORD *)v7 + 2) = v8;
  v9 = v12[3];
  *((_OWORD *)v7 + 3) = v12[2];
  *((_OWORD *)v7 + 4) = v9;
  sub_23BBE817C((uint64_t)v6, a1, &qword_256A76188);
  v10 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A76190) + 36));
  *v10 = sub_23BC1E68C;
  v10[1] = v7;
  v10[2] = 0;
  v10[3] = 0;
  return sub_23BBE81C0((uint64_t)v6, &qword_256A76188);
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButtonContent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC1D6C0 + 4 * byte_23BC78025[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC1D6F4 + 4 * byte_23BC78020[v4]))();
}

uint64_t sub_23BC1D6F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC1D6FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC1D704);
  return result;
}

uint64_t sub_23BC1D710(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC1D718);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC1D71C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC1D724(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonContent()
{
  return &type metadata for StartWorkoutButtonContent;
}

uint64_t destroy for StartWorkoutButton(uint64_t a1)
{
  uint64_t result;

  result = sub_23BBE7EAC();
  if (*(_QWORD *)(a1 + 48))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  return result;
}

uint64_t initializeWithCopy for StartWorkoutButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  v7 = (_OWORD *)(a1 + 24);
  v8 = a2 + 3;
  v9 = a2[6];
  if (v9)
  {
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 5);
    *v7 = *v8;
    *(_OWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 56) = a2[7];
  }
  return a1;
}

uint64_t assignWithCopy for StartWorkoutButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23BBE7EAC();
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  v7 = a2[6];
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 48) = v7;
      *(_QWORD *)(a1 + 56) = a2[7];
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 24, (uint64_t)(a2 + 3));
      return a1;
    }
LABEL_7:
    v8 = *(_OWORD *)(a2 + 3);
    v9 = *(_OWORD *)(a2 + 5);
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_OWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 40) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), a2 + 3);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for StartWorkoutButton(uint64_t a1, uint64_t a2)
{
  char v4;
  __int128 v5;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23BBE7EAC();
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWorkoutButton(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 48) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButton()
{
  return &type metadata for StartWorkoutButton;
}

unint64_t sub_23BC1DBA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A761A0;
  if (!qword_256A761A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A76190);
    v2[0] = sub_23BC1DD54(&qword_256A761A8, &qword_256A76188, (uint64_t (*)(void))sub_23BC1DC2C, MEMORY[0x24BDF3F50]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A761A0);
  }
  return result;
}

unint64_t sub_23BC1DC2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A761B0;
  if (!qword_256A761B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A761B8);
    v2[0] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23BC1DCB0();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A761B0);
  }
  return result;
}

unint64_t sub_23BC1DCB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A761C0;
  if (!qword_256A761C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A761C8);
    v2[0] = sub_23BC1DD54(&qword_256A761D0, &qword_256A761D8, (uint64_t (*)(void))sub_23BC1DDB8, MEMORY[0x24BDF5578]);
    v2[1] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A761C0);
  }
  return result;
}

uint64_t sub_23BC1DD54(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x24260ED10](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BC1DDB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A761E0;
  if (!qword_256A761E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A761E8);
    v2[0] = sub_23BC1DE24();
    v2[1] = sub_23BC1DEA8();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A761E0);
  }
  return result;
}

unint64_t sub_23BC1DE24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A761F0;
  if (!qword_256A761F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A761F8);
    v2[0] = sub_23BBE869C(&qword_256A76200, &qword_256A76208, MEMORY[0x24BDEB9A8]);
    v2[1] = sub_23BC1DEA8();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEC550], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A761F0);
  }
  return result;
}

unint64_t sub_23BC1DEA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_256A76210;
  if (!qword_256A76210)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A76218);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75270);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A73EF8);
    sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF4A08], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A76210);
  }
  return result;
}

uint64_t sub_23BC1DF7C()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_23BC1DF84()
{
  return sub_23BC1E4C8();
}

unint64_t sub_23BC1DF90(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76260);
  v2 = sub_23BC725DC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23BBE817C(v6, (uint64_t)&v15, &qword_256A76268);
    v7 = v15;
    v8 = v16;
    result = sub_23BC1E0C4(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23BC1E5E0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23BC1E0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23BC727A4();
  sub_23BC7230C();
  v4 = sub_23BC727E0();
  return sub_23BC1E128(a1, a2, v4);
}

unint64_t sub_23BC1E128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_23BC72744() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_23BC72744() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_23BC72744() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_23BC1E26C(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 4;
    while (1)
    {
      v7 = *(_QWORD *)(v3 + 8 * v5 + 32);
      if (!v4)
      {
        v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1)
          v10 = 1;
        else
          v10 = v9;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A76270);
        v11 = (_QWORD *)swift_allocObject();
        v12 = _swift_stdlib_malloc_size(v11);
        v13 = v12 - 32;
        if (v12 < 32)
          v13 = v12 - 17;
        v14 = v13 >> 4;
        v11[2] = v10;
        v11[3] = 2 * (v13 >> 4);
        v15 = (unint64_t)(v11 + 4);
        v16 = v2[3] >> 1;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[2 * v16 + 4])
            memmove(v11 + 4, v2 + 4, 16 * v16);
          v2[2] = 0;
        }
        v6 = (_QWORD *)(v15 + 16 * v16);
        v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v2 = v11;
      }
      v18 = __OFSUB__(v4--, 1);
      if (v18)
        break;
      *v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v4 = 0;
LABEL_23:
  v19 = v2[3];
  if (v19 < 2)
    return (uint64_t)v2;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v4);
  v21 = v20 - v4;
  if (!v18)
  {
    v2[2] = v21;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23BC1E3D8(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_23BC1E400(uint64_t a1)
{
  destroy for StartWorkoutButton(a1);
  return a1;
}

uint64_t sub_23BC1E42C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  sub_23BBE7EAC();
  if (*(_QWORD *)(v0 + 64))
    __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BC1E490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23BC1BD70(a1, *(unsigned __int8 *)(v3 + 104), a2, a3);
}

uint64_t sub_23BC1E4BC()
{
  return sub_23BC1E4C8();
}

uint64_t sub_23BC1E4C8()
{
  return sub_23BC72024();
}

uint64_t sub_23BC1E51C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC1BBC8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23BC1E524()
{
  return objectdestroy_2Tm_1();
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;

  sub_23BBE7EAC();
  if (*(_QWORD *)(v0 + 64))
    __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_23BC1E570()
{
  uint64_t v0;

  return sub_23BC1C334(v0 + 16, *(_QWORD *)(v0 + 80));
}

uint64_t sub_23BC1E57C()
{
  return sub_23BC72024();
}

_OWORD *sub_23BC1E5E0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23BC1E5F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BC1E60C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71FF4();
  *a1 = result;
  return result;
}

void StartWorkoutButtonAction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t started;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_23BC71C10();
  MEMORY[0x24BDAC7A8](v1);
  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  sub_23BC1E9C8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23BC1E75C + 4 * byte_23BC781E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC1E75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_BYTE *)(v0 + 25);
  v6 = *(unsigned __int8 *)(v0 + 24);
  sub_23BC727B0();
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = v4;
  *(_BYTE *)(v1 - 88) = v6;
  *(_BYTE *)(v1 - 87) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76280);
  sub_23BC1EA0C();
  sub_23BC1EA50();
  sub_23BC727F8();
  return sub_23BBF876C(v2, v3, v4, v6, v5);
}

void sub_23BC1E944()
{
  JUMPOUT(0x23BC1E920);
}

void sub_23BC1E950()
{
  JUMPOUT(0x23BC1E920);
}

void sub_23BC1E95C()
{
  JUMPOUT(0x23BC1E920);
}

void sub_23BC1E968()
{
  JUMPOUT(0x23BC1E920);
}

void sub_23BC1E974()
{
  JUMPOUT(0x23BC1E920);
}

void sub_23BC1E980()
{
  JUMPOUT(0x23BC1E920);
}

uint64_t type metadata accessor for StartWorkoutButtonAction()
{
  uint64_t result;

  result = qword_256A764E8;
  if (!qword_256A764E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BC1E9C8(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

unint64_t sub_23BC1EA0C()
{
  unint64_t result;

  result = qword_256A76288;
  if (!qword_256A76288)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetail, &type metadata for StartWorkoutDetail);
    atomic_store(result, (unint64_t *)&qword_256A76288);
  }
  return result;
}

unint64_t sub_23BC1EA50()
{
  unint64_t result;

  result = qword_256A76290;
  if (!qword_256A76290)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetailError, &type metadata for StartWorkoutDetailError);
    atomic_store(result, (unint64_t *)&qword_256A76290);
  }
  return result;
}

uint64_t sub_23BC1EA98(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC1EAD4 + 4 * byte_23BC781F0[a1]))(0xD000000000000019, 0x800000023BC82500);
}

uint64_t sub_23BC1EAD4()
{
  return 0x6570704177656976;
}

uint64_t sub_23BC1EAF4()
{
  uint64_t v0;

  return v0 + 6;
}

uint64_t sub_23BC1EBAC()
{
  return 0x65764F7472617473;
}

unint64_t sub_23BC1EBD0()
{
  return 0xD000000000000012;
}

uint64_t sub_23BC1EBEC()
{
  return 0x726F577472617473;
}

uint64_t sub_23BC1EC0C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7669746341776172;
  else
    return 0x6954656D75736572;
}

uint64_t sub_23BC1EC54(char a1)
{
  if (!a1)
    return 0xD000000000000011;
  if (a1 == 1)
    return 0x6954656D75736572;
  return 0x7669746341776172;
}

uint64_t sub_23BC1ECC0(char a1)
{
  return *(_QWORD *)&aTitle_0[8 * a1];
}

uint64_t sub_23BC1ECE0()
{
  sub_23BC22400();
  return sub_23BC72828();
}

uint64_t sub_23BC1ED08()
{
  sub_23BC22400();
  return sub_23BC72834();
}

uint64_t sub_23BC1ED30()
{
  sub_23BC224CC();
  return sub_23BC72828();
}

uint64_t sub_23BC1ED58()
{
  sub_23BC224CC();
  return sub_23BC72834();
}

uint64_t sub_23BC1ED80()
{
  sub_23BC222F0();
  return sub_23BC72828();
}

uint64_t sub_23BC1EDA8()
{
  sub_23BC222F0();
  return sub_23BC72834();
}

uint64_t sub_23BC1EDD0()
{
  unsigned __int8 *v0;

  return sub_23BC1EA98(*v0);
}

uint64_t sub_23BC1EDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC240B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BC1EDFC(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_23BC1EE08()
{
  sub_23BC22268();
  return sub_23BC72828();
}

uint64_t sub_23BC1EE30()
{
  sub_23BC22268();
  return sub_23BC72834();
}

uint64_t sub_23BC1EE58()
{
  char *v0;

  return sub_23BC1EC0C(*v0);
}

uint64_t sub_23BC1EE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC24A3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC1EE84()
{
  sub_23BC22444();
  return sub_23BC72828();
}

uint64_t sub_23BC1EEAC()
{
  sub_23BC22444();
  return sub_23BC72834();
}

uint64_t sub_23BC1EED4()
{
  sub_23BC22510();
  return sub_23BC72828();
}

uint64_t sub_23BC1EEFC()
{
  sub_23BC22510();
  return sub_23BC72834();
}

uint64_t sub_23BC1EF24()
{
  sub_23BC22378();
  return sub_23BC72828();
}

uint64_t sub_23BC1EF4C()
{
  sub_23BC22378();
  return sub_23BC72834();
}

uint64_t sub_23BC1EF74()
{
  sub_23BC22598();
  return sub_23BC72828();
}

uint64_t sub_23BC1EF9C()
{
  sub_23BC22598();
  return sub_23BC72834();
}

uint64_t sub_23BC1EFC4()
{
  char *v0;

  return sub_23BC1EC54(*v0);
}

uint64_t sub_23BC1EFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC246B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC1EFF0()
{
  sub_23BC22488();
  return sub_23BC72828();
}

uint64_t sub_23BC1F018()
{
  sub_23BC22488();
  return sub_23BC72834();
}

uint64_t sub_23BC1F040()
{
  sub_23BC225DC();
  return sub_23BC72828();
}

uint64_t sub_23BC1F068()
{
  sub_23BC225DC();
  return sub_23BC72834();
}

uint64_t sub_23BC1F090()
{
  char *v0;

  return sub_23BC1ECC0(*v0);
}

uint64_t sub_23BC1F098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC24820(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC1F0BC()
{
  sub_23BC22554();
  return sub_23BC72828();
}

uint64_t sub_23BC1F0E4()
{
  sub_23BC22554();
  return sub_23BC72834();
}

uint64_t sub_23BC1F10C()
{
  sub_23BC223BC();
  return sub_23BC72828();
}

uint64_t sub_23BC1F134()
{
  sub_23BC223BC();
  return sub_23BC72834();
}

uint64_t sub_23BC1F160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC249A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC1F188()
{
  sub_23BC22334();
  return sub_23BC72828();
}

uint64_t sub_23BC1F1B0()
{
  sub_23BC22334();
  return sub_23BC72834();
}

uint64_t sub_23BC1F1D8()
{
  sub_23BC22620();
  return sub_23BC72828();
}

uint64_t sub_23BC1F200()
{
  sub_23BC22620();
  return sub_23BC72834();
}

uint64_t sub_23BC1F228()
{
  sub_23BC222AC();
  return sub_23BC72828();
}

uint64_t sub_23BC1F250()
{
  sub_23BC222AC();
  return sub_23BC72834();
}

uint64_t sub_23BC1F278()
{
  sub_23BC22664();
  return sub_23BC72828();
}

uint64_t sub_23BC1F2A0()
{
  sub_23BC22664();
  return sub_23BC72834();
}

uint64_t sub_23BC1F2C8()
{
  sub_23BC227B8();
  return sub_23BC72828();
}

uint64_t sub_23BC1F2F0()
{
  sub_23BC227B8();
  return sub_23BC72834();
}

void StartWorkoutButtonAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t started;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _QWORD v25[12];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76298);
  v25[7] = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762A0);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v54 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762A8);
  v25[5] = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v52 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762B0);
  v25[6] = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v55 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762B8);
  v25[4] = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v49 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762C0);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762C8);
  v25[2] = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762D0);
  v25[3] = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v46 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23BC71C10();
  v48 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v47 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762D8);
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v34 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762E0);
  v25[0] = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v37 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762E8);
  v25[1] = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762F0);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v31 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A762F8);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v25[11] = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76300);
  v25[10] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v25[8] = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76308);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v25[9] = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76310);
  MEMORY[0x24BDAC7A8](v18);
  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v21 = (char *)v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76318);
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v23 = (char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC22268();
  v63 = v23;
  sub_23BC7281C();
  sub_23BC1E9C8(v65, (uint64_t)v21);
  v24 = (char *)sub_23BC1F934 + 4 * word_23BC78200[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC1F934()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v0;
  v2 = v0[1];
  *(_QWORD *)(v1 - 168) = *v0;
  v4 = v0[2];
  v5 = *((unsigned __int8 *)v0 + 25);
  *(_DWORD *)(v1 - 128) = v5;
  v6 = *((unsigned __int8 *)v0 + 24);
  *(_BYTE *)(v1 - 120) = 1;
  sub_23BC22664();
  v7 = *(_QWORD *)(v1 - 472);
  v9 = *(_QWORD *)(v1 - 152);
  v8 = *(_QWORD *)(v1 - 144);
  sub_23BC726A8();
  *(_QWORD *)(v1 - 120) = v3;
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 104) = v4;
  *(_BYTE *)(v1 - 96) = v6;
  *(_BYTE *)(v1 - 95) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76280);
  sub_23BC22840(&qword_256A763A8, MEMORY[0x24BE37C50]);
  v10 = *(_QWORD *)(v1 - 424);
  sub_23BC72720();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 440) + 8))(v7, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 160) + 8))(v9, v8);
  return sub_23BBF876C(*(_QWORD *)(v1 - 168), v2, v4, v6, *(_DWORD *)(v1 - 128));
}

void sub_23BC201BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 120) = 14;
  sub_23BC222F0();
  sub_23BC726A8();
  JUMPOUT(0x23BC20178);
}

uint64_t StartWorkoutButtonAction.hashValue.getter()
{
  sub_23BC727A4();
  StartWorkoutButtonAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t StartWorkoutButtonAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  _QWORD v56[19];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t started;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;

  v93 = a2;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A763D8);
  v100 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v91 = (char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A763E0);
  v72 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v89 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A763E8);
  v56[16] = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v90 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A763F0);
  v56[17] = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v92 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A763F8);
  v56[15] = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v87 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76400);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v85 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76408);
  v56[14] = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v86 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76410);
  v77 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v88 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76418);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v83 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76420);
  v56[12] = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v84 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76428);
  v56[13] = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v98 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76430);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v82 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76438);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v80 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76440);
  v56[11] = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v81 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76448);
  v56[10] = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v96 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76450);
  v56[18] = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v79 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76458);
  v95 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v20 = (char *)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutButtonAction();
  v21 = MEMORY[0x24BDAC7A8](started);
  v56[8] = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v56[9] = (char *)v56 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v56[7] = (char *)v56 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v56[6] = (char *)v56 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v56[5] = (char *)v56 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v78 = (char *)v56 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)v56 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)v56 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)v56 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)v56 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v56 - v45;
  v47 = a1[3];
  v102 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v47);
  sub_23BC22268();
  v97 = v20;
  v48 = v103;
  sub_23BC72810();
  if (!v48)
  {
    v56[2] = v41;
    v56[3] = v44;
    v56[1] = v35;
    v56[0] = v38;
    v103 = 0;
    v56[4] = v46;
    v49 = v101;
    v50 = v97;
    v51 = sub_23BC72690();
    if (*(_QWORD *)(v51 + 16) == 1)
      __asm { BR              X10 }
    v52 = sub_23BC725A0();
    swift_allocError();
    v54 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v54 = started;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v54, *MEMORY[0x24BEE26D0], v52);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v49);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
}

void sub_23BC21440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  *(_BYTE *)(v2 - 128) = 15;
  sub_23BC222AC();
  v3 = *(_QWORD *)(v2 - 232);
  v4 = *(_QWORD *)(v2 - 152);
  v5 = *(_QWORD *)(v2 - 136);
  sub_23BC72600();
  if (v5)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v0, v4);
    JUMPOUT(0x23BC21414);
  }
  *(_BYTE *)(v2 - 128) = 0;
  v6 = *(_QWORD *)(v2 - 352);
  sub_23BC72660();
  v7 = *(_QWORD *)(v2 - 200);
  v9 = v8;
  *(_BYTE *)(v2 - 128) = 1;
  v10 = sub_23BC72678();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v4);
  v11 = *(_QWORD **)(v2 - 592);
  *v11 = v9;
  v11[1] = v10;
  swift_storeEnumTagMultiPayload();
  sub_23BC227FC((uint64_t)v11, *(_QWORD *)(v2 - 624));
  JUMPOUT(0x23BC2196CLL);
}

uint64_t sub_23BC21A98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StartWorkoutButtonAction.init(from:)(a1, a2);
}

void sub_23BC21AAC(_QWORD *a1)
{
  StartWorkoutButtonAction.encode(to:)(a1);
}

uint64_t sub_23BC21AC0()
{
  sub_23BC727A4();
  StartWorkoutButtonAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC21B00()
{
  sub_23BC727A4();
  StartWorkoutButtonAction.hash(into:)();
  return sub_23BC727E0();
}

void _s14FitnessActions24StartWorkoutButtonActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t started;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[6];
  uint64_t v24;
  char *v25;

  v24 = a1;
  v25 = a2;
  v2 = sub_23BC71C10();
  v23[1] = *(_QWORD *)(v2 - 8);
  v23[2] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[0] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutButtonAction();
  v5 = MEMORY[0x24BDAC7A8](started);
  v23[5] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v23[3] = (char *)v23 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v23[4] = (char *)v23 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76688);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v23 + *(int *)(v18 + 48) - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC1E9C8(v24, (uint64_t)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = (uint64_t)v25;
  v25 = v20;
  sub_23BC1E9C8(v21, (uint64_t)v20);
  v22 = (char *)sub_23BC21D6C + 4 * byte_23BC78240[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC21D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  sub_23BC1E9C8(v1, v0);
  v4 = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(unsigned __int8 *)(v0 + 24);
  v7 = *(_BYTE *)(v0 + 25);
  v8 = *(uint64_t **)(v2 - 168);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23BBF876C(v4, v3, v5, v6, v7);
    sub_23BC24B44(v1);
    v9 = 0;
  }
  else
  {
    v11 = *v8;
    v12 = v8[1];
    v13 = v8[2];
    *(_QWORD *)(v2 - 192) = v13;
    *(_QWORD *)(v2 - 184) = v11;
    v14 = *((unsigned __int8 *)v8 + 25);
    *(_DWORD *)(v2 - 176) = v14;
    v15 = *((unsigned __int8 *)v8 + 24);
    *(_QWORD *)(v2 - 128) = v4;
    *(_QWORD *)(v2 - 120) = v3;
    *(_QWORD *)(v2 - 112) = v5;
    *(_BYTE *)(v2 - 104) = v6;
    *(_BYTE *)(v2 - 103) = v7;
    *(_QWORD *)(v2 - 160) = v11;
    *(_QWORD *)(v2 - 152) = v12;
    *(_QWORD *)(v2 - 144) = v13;
    *(_BYTE *)(v2 - 136) = v15;
    *(_BYTE *)(v2 - 135) = v14;
    sub_23BC24B84();
    sub_23BC24BC8();
    sub_23BC24C0C();
    v9 = sub_23BC72804();
    sub_23BBF876C(*(_QWORD *)(v2 - 184), v12, *(_QWORD *)(v2 - 192), v15, *(_DWORD *)(v2 - 176));
    sub_23BBF876C(v4, v3, v5, v6, v7);
    sub_23BC0EF54(v1);
  }
  return v9 & 1;
}

unint64_t sub_23BC22268()
{
  unint64_t result;

  result = qword_256A76320;
  if (!qword_256A76320)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79530, &type metadata for StartWorkoutButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76320);
  }
  return result;
}

unint64_t sub_23BC222AC()
{
  unint64_t result;

  result = qword_256A76328;
  if (!qword_256A76328)
  {
    result = MEMORY[0x24260ED10](&unk_23BC794E0, &type metadata for StartWorkoutButtonAction.StartWorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76328);
  }
  return result;
}

unint64_t sub_23BC222F0()
{
  unint64_t result;

  result = qword_256A76330;
  if (!qword_256A76330)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79490, &type metadata for StartWorkoutButtonAction.CancelResumeTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76330);
  }
  return result;
}

unint64_t sub_23BC22334()
{
  unint64_t result;

  result = qword_256A76338;
  if (!qword_256A76338)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79440, &type metadata for StartWorkoutButtonAction.StartOverTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76338);
  }
  return result;
}

unint64_t sub_23BC22378()
{
  unint64_t result;

  result = qword_256A76340;
  if (!qword_256A76340)
  {
    result = MEMORY[0x24260ED10](&unk_23BC793F0, &type metadata for StartWorkoutButtonAction.ContinueResumeTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76340);
  }
  return result;
}

unint64_t sub_23BC223BC()
{
  unint64_t result;

  result = qword_256A76348;
  if (!qword_256A76348)
  {
    result = MEMORY[0x24260ED10](&unk_23BC793A0, &type metadata for StartWorkoutButtonAction.ShowResumeConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76348);
  }
  return result;
}

unint64_t sub_23BC22400()
{
  unint64_t result;

  result = qword_256A76350;
  if (!qword_256A76350)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79350, &type metadata for StartWorkoutButtonAction.CancelFuturePlannedWorkoutAlertTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76350);
  }
  return result;
}

unint64_t sub_23BC22444()
{
  unint64_t result;

  result = qword_256A76358;
  if (!qword_256A76358)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79300, &type metadata for StartWorkoutButtonAction.ContinueFutureWorkoutTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76358);
  }
  return result;
}

unint64_t sub_23BC22488()
{
  unint64_t result;

  result = qword_256A76360;
  if (!qword_256A76360)
  {
    result = MEMORY[0x24260ED10](&unk_23BC792B0, &type metadata for StartWorkoutButtonAction.ShowFutureWorkoutConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76360);
  }
  return result;
}

unint64_t sub_23BC224CC()
{
  unint64_t result;

  result = qword_256A76370;
  if (!qword_256A76370)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79260, &type metadata for StartWorkoutButtonAction.CancelPlannedWorkoutSwapTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76370);
  }
  return result;
}

unint64_t sub_23BC22510()
{
  unint64_t result;

  result = qword_256A76378;
  if (!qword_256A76378)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79210, &type metadata for StartWorkoutButtonAction.ContinuePlannedWorkoutSwapTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76378);
  }
  return result;
}

unint64_t sub_23BC22554()
{
  unint64_t result;

  result = qword_256A76380;
  if (!qword_256A76380)
  {
    result = MEMORY[0x24260ED10](&unk_23BC791C0, &type metadata for StartWorkoutButtonAction.ShowPlannedWorkoutSwapConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76380);
  }
  return result;
}

unint64_t sub_23BC22598()
{
  unint64_t result;

  result = qword_256A76388;
  if (!qword_256A76388)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79170, &type metadata for StartWorkoutButtonAction.DismissOngoingWorkoutDetectedTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76388);
  }
  return result;
}

unint64_t sub_23BC225DC()
{
  unint64_t result;

  result = qword_256A76390;
  if (!qword_256A76390)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79120, &type metadata for StartWorkoutButtonAction.ShowOngoingWorkoutAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76390);
  }
  return result;
}

unint64_t sub_23BC22620()
{
  unint64_t result;

  result = qword_256A76398;
  if (!qword_256A76398)
  {
    result = MEMORY[0x24260ED10](&unk_23BC790D0, &type metadata for StartWorkoutButtonAction.StartWorkoutButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76398);
  }
  return result;
}

unint64_t sub_23BC22664()
{
  unint64_t result;

  result = qword_256A763A0;
  if (!qword_256A763A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79080, &type metadata for StartWorkoutButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A763A0);
  }
  return result;
}

unint64_t sub_23BC226A8()
{
  unint64_t result;

  result = qword_256A763B0;
  if (!qword_256A763B0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetail, &type metadata for StartWorkoutDetail);
    atomic_store(result, (unint64_t *)&qword_256A763B0);
  }
  return result;
}

unint64_t sub_23BC226EC()
{
  unint64_t result;

  result = qword_256A763B8;
  if (!qword_256A763B8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetail, &type metadata for StartWorkoutDetail);
    atomic_store(result, (unint64_t *)&qword_256A763B8);
  }
  return result;
}

unint64_t sub_23BC22730()
{
  unint64_t result;

  result = qword_256A763C0;
  if (!qword_256A763C0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetailError, &type metadata for StartWorkoutDetailError);
    atomic_store(result, (unint64_t *)&qword_256A763C0);
  }
  return result;
}

unint64_t sub_23BC22774()
{
  unint64_t result;

  result = qword_256A763C8;
  if (!qword_256A763C8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetailError, &type metadata for StartWorkoutDetailError);
    atomic_store(result, (unint64_t *)&qword_256A763C8);
  }
  return result;
}

unint64_t sub_23BC227B8()
{
  unint64_t result;

  result = qword_256A763D0;
  if (!qword_256A763D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79030, &type metadata for StartWorkoutButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A763D0);
  }
  return result;
}

uint64_t sub_23BC227FC(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_23BC22840(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A76280);
    v6[0] = sub_23BC226A8();
    v6[1] = sub_23BC226EC();
    v6[2] = sub_23BC22730();
    v6[3] = sub_23BC22774();
    result = MEMORY[0x24260ED10](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC228C8()
{
  return sub_23BBF377C(&qword_256A76470, (uint64_t (*)(uint64_t))type metadata accessor for StartWorkoutButtonAction, (uint64_t)&protocol conformance descriptor for StartWorkoutButtonAction);
}

uint64_t initializeBufferWithCopyOfBuffer for StartWorkoutButtonAction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v6 + 16) & ~(unint64_t)v6);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      v14 = sub_23BC71C10();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A760B8);
      *(_QWORD *)(a1 + *(int *)(v15 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 48));
      *(_QWORD *)(a1 + *(int *)(v15 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 64));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      v16 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v16;
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy((void *)a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = *a2;
      v9 = a2[1];
      v10 = a2[2];
      v11 = *((_BYTE *)a2 + 25);
      v12 = *((unsigned __int8 *)a2 + 24);
      sub_23BBF8608(v8, v9, v10, v12, v11);
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v9;
      *(_QWORD *)(a1 + 16) = v10;
      *(_BYTE *)(a1 + 24) = v12;
      *(_BYTE *)(a1 + 25) = v11;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for StartWorkoutButtonAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 4:
      v3 = sub_23BC71C10();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    case 2:
      return swift_bridgeObjectRelease();
    case 0:
      return sub_23BBF876C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25));
  }
  return result;
}

uint64_t initializeWithCopy for StartWorkoutButtonAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    v12 = sub_23BC71C10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A760B8);
    *(_QWORD *)(a1 + *(int *)(v13 + 48)) = *(_QWORD *)(a2 + *(int *)(v13 + 48));
    *(_QWORD *)(a1 + *(int *)(v13 + 64)) = *(_QWORD *)(a2 + *(int *)(v13 + 64));
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    v14 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v14;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 25);
    v11 = *(unsigned __int8 *)(a2 + 24);
    sub_23BBF8608(v7, v8, v9, v11, v10);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 25) = v10;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *assignWithCopy for StartWorkoutButtonAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != (uint64_t *)a2)
  {
    sub_23BC0EF54((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      v12 = sub_23BC71C10();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A760B8);
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)&a2[*(int *)(v13 + 48)];
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 64)) = *(_QWORD *)&a2[*(int *)(v13 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      *a1 = *(_QWORD *)a2;
      a1[1] = *((_QWORD *)a2 + 1);
      a1[2] = *((_QWORD *)a2 + 2);
      a1[3] = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = *(_QWORD *)a2;
      v8 = *((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      v10 = a2[25];
      v11 = a2[24];
      sub_23BBF8608(v7, v8, v9, v11, v10);
      *a1 = v7;
      a1[1] = v8;
      a1[2] = v9;
      *((_BYTE *)a1 + 24) = v11;
      *((_BYTE *)a1 + 25) = v10;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for StartWorkoutButtonAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v6 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A760B8);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for StartWorkoutButtonAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23BC0EF54((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v6 = sub_23BC71C10();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A760B8);
      *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
      *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23BC22EF0()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  _QWORD v3[14];

  v0 = MEMORY[0x24BEE0178] + 64;
  v3[4] = &unk_23BC78360;
  v3[5] = MEMORY[0x24BEE0178] + 64;
  v3[6] = &unk_23BC78378;
  v3[7] = &unk_23BC78390;
  result = sub_23BC71C10();
  if (v2 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v3[8] = v3;
    v3[9] = &unk_23BC78390;
    v3[10] = &unk_23BC78390;
    v3[11] = &unk_23BC78390;
    v3[12] = v0;
    v3[13] = &unk_23BC78390;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StartWorkoutButtonAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButtonAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_23BC23080 + 4 * byte_23BC78255[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_23BC230B4 + 4 * byte_23BC78250[v4]))();
}

uint64_t sub_23BC230B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC230BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC230C4);
  return result;
}

uint64_t sub_23BC230D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC230D8);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_23BC230DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC230E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.CodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.StartWorkoutDetailUpdatedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.StartWorkoutDetailUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.StartWorkoutButtonTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.StartWorkoutButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ShowOngoingWorkoutAlertCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ShowOngoingWorkoutAlertCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.DismissOngoingWorkoutDetectedTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.DismissOngoingWorkoutDetectedTappedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ShowPlannedWorkoutSwapConfirmationCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ShowPlannedWorkoutSwapConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ContinuePlannedWorkoutSwapTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ContinuePlannedWorkoutSwapTappedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.CancelPlannedWorkoutSwapTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.CancelPlannedWorkoutSwapTappedCodingKeys;
}

uint64_t _s14FitnessActions24StartWorkoutButtonActionO44ShowPlannedWorkoutSwapConfirmationCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC231D8 + 4 * byte_23BC7825F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC2320C + 4 * byte_23BC7825A[v4]))();
}

uint64_t sub_23BC2320C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC23214(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC2321CLL);
  return result;
}

uint64_t sub_23BC23228(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC23230);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC23234(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC2323C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ShowFutureWorkoutConfirmationCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ShowFutureWorkoutConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ContinueFutureWorkoutTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ContinueFutureWorkoutTappedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.CancelFuturePlannedWorkoutAlertTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.CancelFuturePlannedWorkoutAlertTappedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ShowResumeConfirmationCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ShowResumeConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.ContinueResumeTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.ContinueResumeTappedCodingKeys;
}

uint64_t _s14FitnessActions24StartWorkoutButtonActionO35StartWorkoutDetailUpdatedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC232D8 + 4 * byte_23BC78264[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC232F8 + 4 * byte_23BC78269[v4]))();
}

_BYTE *sub_23BC232D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC232F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC23300(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC23308(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC23310(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC23318(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.StartOverTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.StartOverTappedCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.CancelResumeTappedCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.CancelResumeTappedCodingKeys;
}

uint64_t _s14FitnessActions24StartWorkoutButtonActionO42ContinuePlannedWorkoutSwapTappedCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC23390 + 4 * byte_23BC78273[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC233C4 + 4 * byte_23BC7826E[v4]))();
}

uint64_t sub_23BC233C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC233CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC233D4);
  return result;
}

uint64_t sub_23BC233E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC233E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC233EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC233F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonAction.StartWorkoutCodingKeys()
{
  return &type metadata for StartWorkoutButtonAction.StartWorkoutCodingKeys;
}

unint64_t sub_23BC23414()
{
  unint64_t result;

  result = qword_256A76520;
  if (!qword_256A76520)
  {
    result = MEMORY[0x24260ED10](&unk_23BC786F8, &type metadata for StartWorkoutButtonAction.StartWorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76520);
  }
  return result;
}

unint64_t sub_23BC2345C()
{
  unint64_t result;

  result = qword_256A76528;
  if (!qword_256A76528)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78800, &type metadata for StartWorkoutButtonAction.StartOverTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76528);
  }
  return result;
}

unint64_t sub_23BC234A4()
{
  unint64_t result;

  result = qword_256A76530;
  if (!qword_256A76530)
  {
    result = MEMORY[0x24260ED10](&unk_23BC788B8, &type metadata for StartWorkoutButtonAction.ContinueResumeTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76530);
  }
  return result;
}

unint64_t sub_23BC234EC()
{
  unint64_t result;

  result = qword_256A76538;
  if (!qword_256A76538)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78970, &type metadata for StartWorkoutButtonAction.ShowResumeConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76538);
  }
  return result;
}

unint64_t sub_23BC23534()
{
  unint64_t result;

  result = qword_256A76540;
  if (!qword_256A76540)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78A78, &type metadata for StartWorkoutButtonAction.ContinueFutureWorkoutTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76540);
  }
  return result;
}

unint64_t sub_23BC2357C()
{
  unint64_t result;

  result = qword_256A76548;
  if (!qword_256A76548)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78B30, &type metadata for StartWorkoutButtonAction.ShowFutureWorkoutConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76548);
  }
  return result;
}

unint64_t sub_23BC235C4()
{
  unint64_t result;

  result = qword_256A76550;
  if (!qword_256A76550)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78C38, &type metadata for StartWorkoutButtonAction.ContinuePlannedWorkoutSwapTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76550);
  }
  return result;
}

unint64_t sub_23BC2360C()
{
  unint64_t result;

  result = qword_256A76558;
  if (!qword_256A76558)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78CF0, &type metadata for StartWorkoutButtonAction.ShowPlannedWorkoutSwapConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76558);
  }
  return result;
}

unint64_t sub_23BC23654()
{
  unint64_t result;

  result = qword_256A76560;
  if (!qword_256A76560)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78E48, &type metadata for StartWorkoutButtonAction.StartWorkoutButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76560);
  }
  return result;
}

unint64_t sub_23BC2369C()
{
  unint64_t result;

  result = qword_256A76568;
  if (!qword_256A76568)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78F00, &type metadata for StartWorkoutButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76568);
  }
  return result;
}

unint64_t sub_23BC236E4()
{
  unint64_t result;

  result = qword_256A76570;
  if (!qword_256A76570)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79008, &type metadata for StartWorkoutButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76570);
  }
  return result;
}

unint64_t sub_23BC2372C()
{
  unint64_t result;

  result = qword_256A76578;
  if (!qword_256A76578)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78F28, &type metadata for StartWorkoutButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76578);
  }
  return result;
}

unint64_t sub_23BC23774()
{
  unint64_t result;

  result = qword_256A76580;
  if (!qword_256A76580)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78F50, &type metadata for StartWorkoutButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76580);
  }
  return result;
}

unint64_t sub_23BC237BC()
{
  unint64_t result;

  result = qword_256A76588;
  if (!qword_256A76588)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78E70, &type metadata for StartWorkoutButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76588);
  }
  return result;
}

unint64_t sub_23BC23804()
{
  unint64_t result;

  result = qword_256A76590;
  if (!qword_256A76590)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78E98, &type metadata for StartWorkoutButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76590);
  }
  return result;
}

unint64_t sub_23BC2384C()
{
  unint64_t result;

  result = qword_256A76598;
  if (!qword_256A76598)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78DB8, &type metadata for StartWorkoutButtonAction.StartWorkoutButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76598);
  }
  return result;
}

unint64_t sub_23BC23894()
{
  unint64_t result;

  result = qword_256A765A0;
  if (!qword_256A765A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78DE0, &type metadata for StartWorkoutButtonAction.StartWorkoutButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765A0);
  }
  return result;
}

unint64_t sub_23BC238DC()
{
  unint64_t result;

  result = qword_256A765A8;
  if (!qword_256A765A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78D68, &type metadata for StartWorkoutButtonAction.ShowOngoingWorkoutAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765A8);
  }
  return result;
}

unint64_t sub_23BC23924()
{
  unint64_t result;

  result = qword_256A765B0;
  if (!qword_256A765B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78D90, &type metadata for StartWorkoutButtonAction.ShowOngoingWorkoutAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765B0);
  }
  return result;
}

unint64_t sub_23BC2396C()
{
  unint64_t result;

  result = qword_256A765B8;
  if (!qword_256A765B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78D18, &type metadata for StartWorkoutButtonAction.DismissOngoingWorkoutDetectedTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765B8);
  }
  return result;
}

unint64_t sub_23BC239B4()
{
  unint64_t result;

  result = qword_256A765C0;
  if (!qword_256A765C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78D40, &type metadata for StartWorkoutButtonAction.DismissOngoingWorkoutDetectedTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765C0);
  }
  return result;
}

unint64_t sub_23BC239FC()
{
  unint64_t result;

  result = qword_256A765C8;
  if (!qword_256A765C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78C60, &type metadata for StartWorkoutButtonAction.ShowPlannedWorkoutSwapConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765C8);
  }
  return result;
}

unint64_t sub_23BC23A44()
{
  unint64_t result;

  result = qword_256A765D0;
  if (!qword_256A765D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78C88, &type metadata for StartWorkoutButtonAction.ShowPlannedWorkoutSwapConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765D0);
  }
  return result;
}

unint64_t sub_23BC23A8C()
{
  unint64_t result;

  result = qword_256A765D8;
  if (!qword_256A765D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78BA8, &type metadata for StartWorkoutButtonAction.ContinuePlannedWorkoutSwapTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765D8);
  }
  return result;
}

unint64_t sub_23BC23AD4()
{
  unint64_t result;

  result = qword_256A765E0;
  if (!qword_256A765E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78BD0, &type metadata for StartWorkoutButtonAction.ContinuePlannedWorkoutSwapTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765E0);
  }
  return result;
}

unint64_t sub_23BC23B1C()
{
  unint64_t result;

  result = qword_256A765E8;
  if (!qword_256A765E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78B58, &type metadata for StartWorkoutButtonAction.CancelPlannedWorkoutSwapTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765E8);
  }
  return result;
}

unint64_t sub_23BC23B64()
{
  unint64_t result;

  result = qword_256A765F0;
  if (!qword_256A765F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78B80, &type metadata for StartWorkoutButtonAction.CancelPlannedWorkoutSwapTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765F0);
  }
  return result;
}

unint64_t sub_23BC23BAC()
{
  unint64_t result;

  result = qword_256A765F8;
  if (!qword_256A765F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78AA0, &type metadata for StartWorkoutButtonAction.ShowFutureWorkoutConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A765F8);
  }
  return result;
}

unint64_t sub_23BC23BF4()
{
  unint64_t result;

  result = qword_256A76600;
  if (!qword_256A76600)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78AC8, &type metadata for StartWorkoutButtonAction.ShowFutureWorkoutConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76600);
  }
  return result;
}

unint64_t sub_23BC23C3C()
{
  unint64_t result;

  result = qword_256A76608;
  if (!qword_256A76608)
  {
    result = MEMORY[0x24260ED10](&unk_23BC789E8, &type metadata for StartWorkoutButtonAction.ContinueFutureWorkoutTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76608);
  }
  return result;
}

unint64_t sub_23BC23C84()
{
  unint64_t result;

  result = qword_256A76610;
  if (!qword_256A76610)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78A10, &type metadata for StartWorkoutButtonAction.ContinueFutureWorkoutTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76610);
  }
  return result;
}

unint64_t sub_23BC23CCC()
{
  unint64_t result;

  result = qword_256A76618;
  if (!qword_256A76618)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78998, &type metadata for StartWorkoutButtonAction.CancelFuturePlannedWorkoutAlertTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76618);
  }
  return result;
}

unint64_t sub_23BC23D14()
{
  unint64_t result;

  result = qword_256A76620;
  if (!qword_256A76620)
  {
    result = MEMORY[0x24260ED10](&unk_23BC789C0, &type metadata for StartWorkoutButtonAction.CancelFuturePlannedWorkoutAlertTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76620);
  }
  return result;
}

unint64_t sub_23BC23D5C()
{
  unint64_t result;

  result = qword_256A76628;
  if (!qword_256A76628)
  {
    result = MEMORY[0x24260ED10](&unk_23BC788E0, &type metadata for StartWorkoutButtonAction.ShowResumeConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76628);
  }
  return result;
}

unint64_t sub_23BC23DA4()
{
  unint64_t result;

  result = qword_256A76630;
  if (!qword_256A76630)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78908, &type metadata for StartWorkoutButtonAction.ShowResumeConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76630);
  }
  return result;
}

unint64_t sub_23BC23DEC()
{
  unint64_t result;

  result = qword_256A76638;
  if (!qword_256A76638)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78828, &type metadata for StartWorkoutButtonAction.ContinueResumeTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76638);
  }
  return result;
}

unint64_t sub_23BC23E34()
{
  unint64_t result;

  result = qword_256A76640;
  if (!qword_256A76640)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78850, &type metadata for StartWorkoutButtonAction.ContinueResumeTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76640);
  }
  return result;
}

unint64_t sub_23BC23E7C()
{
  unint64_t result;

  result = qword_256A76648;
  if (!qword_256A76648)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78770, &type metadata for StartWorkoutButtonAction.StartOverTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76648);
  }
  return result;
}

unint64_t sub_23BC23EC4()
{
  unint64_t result;

  result = qword_256A76650;
  if (!qword_256A76650)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78798, &type metadata for StartWorkoutButtonAction.StartOverTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76650);
  }
  return result;
}

unint64_t sub_23BC23F0C()
{
  unint64_t result;

  result = qword_256A76658;
  if (!qword_256A76658)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78720, &type metadata for StartWorkoutButtonAction.CancelResumeTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76658);
  }
  return result;
}

unint64_t sub_23BC23F54()
{
  unint64_t result;

  result = qword_256A76660;
  if (!qword_256A76660)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78748, &type metadata for StartWorkoutButtonAction.CancelResumeTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76660);
  }
  return result;
}

unint64_t sub_23BC23F9C()
{
  unint64_t result;

  result = qword_256A76668;
  if (!qword_256A76668)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78668, &type metadata for StartWorkoutButtonAction.StartWorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76668);
  }
  return result;
}

unint64_t sub_23BC23FE4()
{
  unint64_t result;

  result = qword_256A76670;
  if (!qword_256A76670)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78690, &type metadata for StartWorkoutButtonAction.StartWorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76670);
  }
  return result;
}

unint64_t sub_23BC2402C()
{
  unint64_t result;

  result = qword_256A76678;
  if (!qword_256A76678)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78F78, &type metadata for StartWorkoutButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76678);
  }
  return result;
}

unint64_t sub_23BC24074()
{
  unint64_t result;

  result = qword_256A76680;
  if (!qword_256A76680)
  {
    result = MEMORY[0x24260ED10](&unk_23BC78FA0, &type metadata for StartWorkoutButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76680);
  }
  return result;
}

uint64_t sub_23BC240B8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023BC82500 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023BC82520 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023BC82540 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000023BC82560 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000023BC82590 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023BC825C0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023BC825F0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023BC82610 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023BC82630 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x800000023BC82650 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023BC82680 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023BC826A0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x65764F7472617473 && a2 == 0xEF64657070615472 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC826C0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x726F577472617473 && a2 == 0xEC00000074756F6BLL)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_23BC246B8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023BC826E0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6954656D75736572 && a2 == 0xEA0000000000656DLL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7669746341776172 && a2 == 0xEF65707954797469)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BC24820(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6954656D75736572 && a2 == 0xEA0000000000656DLL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7669746341776172 && a2 == 0xEF65707954797469)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BC2497C()
{
  return 0x7669746341776172;
}

uint64_t sub_23BC249A0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7669746341776172 && a2 == 0xEF65707954797469)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BC24A3C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6954656D75736572 && a2 == 0xEA0000000000656DLL;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7669746341776172 && a2 == 0xEF65707954797469)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC24B44(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76688);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23BC24B84()
{
  unint64_t result;

  result = qword_256A76690;
  if (!qword_256A76690)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetail, &type metadata for StartWorkoutDetail);
    atomic_store(result, (unint64_t *)&qword_256A76690);
  }
  return result;
}

unint64_t sub_23BC24BC8()
{
  unint64_t result;

  result = qword_256A76698;
  if (!qword_256A76698)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetailError, &type metadata for StartWorkoutDetailError);
    atomic_store(result, (unint64_t *)&qword_256A76698);
  }
  return result;
}

unint64_t sub_23BC24C0C()
{
  unint64_t result;

  result = qword_256A766A0;
  if (!qword_256A766A0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutDetailError, &type metadata for StartWorkoutDetailError);
    atomic_store(result, (unint64_t *)&qword_256A766A0);
  }
  return result;
}

uint64_t DynamicStartWorkoutEnvironment.init(queryDownloadStatus:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for DynamicStartWorkoutEnvironment()
{
  return &type metadata for DynamicStartWorkoutEnvironment;
}

BOOL static WorkoutMediaType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t WorkoutMediaType.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t sub_23BC24CAC(char a1)
{
  return *(_QWORD *)&aVideo_0[8 * a1];
}

uint64_t sub_23BC24CCC()
{
  char *v0;

  return sub_23BC24CAC(*v0);
}

uint64_t sub_23BC24CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC2BAB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC24CF8()
{
  sub_23BC25180();
  return sub_23BC72828();
}

uint64_t sub_23BC24D20()
{
  sub_23BC25180();
  return sub_23BC72834();
}

uint64_t sub_23BC24D48()
{
  sub_23BC2524C();
  return sub_23BC72828();
}

uint64_t sub_23BC24D70()
{
  sub_23BC2524C();
  return sub_23BC72834();
}

uint64_t sub_23BC24D98()
{
  sub_23BC25208();
  return sub_23BC72828();
}

uint64_t sub_23BC24DC0()
{
  sub_23BC25208();
  return sub_23BC72834();
}

uint64_t sub_23BC24DE8()
{
  sub_23BC251C4();
  return sub_23BC72828();
}

uint64_t sub_23BC24E10()
{
  sub_23BC251C4();
  return sub_23BC72834();
}

uint64_t sub_23BC24E38()
{
  sub_23BC25290();
  return sub_23BC72828();
}

uint64_t sub_23BC24E60()
{
  sub_23BC25290();
  return sub_23BC72834();
}

void *static WorkoutMediaType.allCases.getter()
{
  return &unk_250CBDBB0;
}

void WorkoutMediaType.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A766A8);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A766B0);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A766B8);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A766C0);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A766C8);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC25180();
  sub_23BC7281C();
  __asm { BR              X10 }
}

uint64_t sub_23BC2504C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_23BC25290();
  sub_23BC726A8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

unint64_t sub_23BC25180()
{
  unint64_t result;

  result = qword_256A766D0;
  if (!qword_256A766D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7ACF0, &type metadata for WorkoutMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A766D0);
  }
  return result;
}

unint64_t sub_23BC251C4()
{
  unint64_t result;

  result = qword_256A766D8;
  if (!qword_256A766D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7ACA0, &type metadata for WorkoutMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A766D8);
  }
  return result;
}

unint64_t sub_23BC25208()
{
  unint64_t result;

  result = qword_256A766E0;
  if (!qword_256A766E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AC50, &type metadata for WorkoutMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A766E0);
  }
  return result;
}

unint64_t sub_23BC2524C()
{
  unint64_t result;

  result = qword_256A766E8;
  if (!qword_256A766E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AC00, &type metadata for WorkoutMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A766E8);
  }
  return result;
}

unint64_t sub_23BC25290()
{
  unint64_t result;

  result = qword_256A766F0;
  if (!qword_256A766F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7ABB0, &type metadata for WorkoutMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A766F0);
  }
  return result;
}

uint64_t WorkoutMediaType.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t WorkoutMediaType.init(from:)(_QWORD *a1)
{
  return sub_23BC2BC60(a1);
}

void sub_23BC2532C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250CBDBD8;
}

uint64_t sub_23BC2533C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BC2BC60(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23BC25364(_QWORD *a1)
{
  unsigned __int8 *v1;

  WorkoutMediaType.encode(to:)(a1, *v1);
}

uint64_t StartWorkoutDetail.mediaType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

FitnessActions::StartWorkoutDetail __swiftcall StartWorkoutDetail.init(workoutIdentifier:rawHealthKitActivityTypes:mediaType:)(Swift::String workoutIdentifier, Swift::OpaquePointer rawHealthKitActivityTypes, FitnessActions::WorkoutMediaType mediaType)
{
  uint64_t v3;
  FitnessActions::StartWorkoutDetail result;

  *(Swift::String *)v3 = workoutIdentifier;
  *(Swift::OpaquePointer *)(v3 + 16) = rawHealthKitActivityTypes;
  *(_BYTE *)(v3 + 24) = mediaType;
  result.workoutIdentifier = workoutIdentifier;
  result.rawHealthKitActivityTypes = rawHealthKitActivityTypes;
  result.mediaType = mediaType;
  return result;
}

uint64_t StartWorkoutDetail.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  sub_23BC727B0();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_23BC727B0();
      --v2;
    }
    while (v2);
  }
  return sub_23BC727B0();
}

BOOL sub_23BC25420(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a1 + 5;
  v6 = a2 + 5;
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_23BC25494(char a1)
{
  uint64_t result;

  result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000019;
    else
      return 0x707954616964656DLL;
  }
  return result;
}

uint64_t sub_23BC254F8()
{
  char *v0;

  return sub_23BC25494(*v0);
}

uint64_t sub_23BC25500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC31D0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC25524()
{
  sub_23BC2C084();
  return sub_23BC72828();
}

uint64_t sub_23BC2554C()
{
  sub_23BC2C084();
  return sub_23BC72834();
}

uint64_t StartWorkoutDetail.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A766F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 16);
  v14 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C084();
  sub_23BC7281C();
  v18 = 0;
  v7 = v12;
  sub_23BC726E4();
  if (!v7)
  {
    v8 = v14;
    v13 = v11;
    v17 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76708);
    sub_23BC2C10C(&qword_256A76710, MEMORY[0x24BEE1E90], MEMORY[0x24BEE12A0]);
    sub_23BC72720();
    v16 = v8;
    v15 = 2;
    sub_23BC2C0C8();
    sub_23BC72720();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StartWorkoutDetail.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23BC727A4();
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  sub_23BC727B0();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_23BC727B0();
      --v2;
    }
    while (v2);
  }
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t StartWorkoutDetail.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76720);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C084();
  sub_23BC72810();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = 0;
  v9 = sub_23BC72648();
  v11 = v10;
  v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76708);
  v22 = 1;
  sub_23BC2C10C(&qword_256A76728, MEMORY[0x24BEE1EB8], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23BC72684();
  v12 = v19;
  v20 = 2;
  sub_23BC2C16C();
  v17 = v12;
  swift_bridgeObjectRetain();
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v21;
  v14 = v17;
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 24) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BC25A34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StartWorkoutDetail.init(from:)(a1, a2);
}

uint64_t sub_23BC25A48(_QWORD *a1)
{
  return StartWorkoutDetail.encode(to:)(a1);
}

uint64_t sub_23BC25A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23BC727A4();
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  sub_23BC727B0();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_23BC727B0();
      --v2;
    }
    while (v2);
  }
  sub_23BC727B0();
  return sub_23BC727E0();
}

BOOL static StartWorkoutDetailError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StartWorkoutDetailError.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t sub_23BC25B4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_23BC25B88()
{
  char *v0;

  return sub_23BC25B4C(*v0);
}

uint64_t sub_23BC25B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC31E60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC25BB4()
{
  sub_23BC2C1B0();
  return sub_23BC72828();
}

uint64_t sub_23BC25BDC()
{
  sub_23BC2C1B0();
  return sub_23BC72834();
}

uint64_t sub_23BC25C04()
{
  sub_23BC2C1F4();
  return sub_23BC72828();
}

uint64_t sub_23BC25C2C()
{
  sub_23BC2C1F4();
  return sub_23BC72834();
}

uint64_t sub_23BC25C54()
{
  sub_23BC2C238();
  return sub_23BC72828();
}

uint64_t sub_23BC25C7C()
{
  sub_23BC2C238();
  return sub_23BC72834();
}

uint64_t StartWorkoutDetailError.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76738);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76740);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76748);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C1B0();
  sub_23BC7281C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23BC2C1F4();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23BC2C238();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t StartWorkoutDetailError.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t StartWorkoutDetailError.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76768);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76770);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76778);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C1B0();
  v11 = v33;
  sub_23BC72810();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23BC72690();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23BC725A0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v21 = &type metadata for StartWorkoutDetailError;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23BC2C1F4();
    sub_23BC72600();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23BC2C238();
    v22 = v6;
    sub_23BC72600();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23BC26214@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StartWorkoutDetailError.init(from:)(a1, a2);
}

uint64_t sub_23BC26228(_QWORD *a1)
{
  return StartWorkoutDetailError.encode(to:)(a1);
}

uint64_t StartWorkoutDetailLoadState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t started;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned __int8 v24;

  v1 = v0;
  v2 = sub_23BC71C10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBFD690(v1, (uint64_t)v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 2, v10))
    return sub_23BC727B0();
  v11 = *((_QWORD *)v8 + 1);
  v18 = *(_QWORD *)v8;
  v12 = v18;
  v13 = *((_QWORD *)v8 + 2);
  v14 = v8[25];
  v19 = v14;
  v15 = &v8[*(int *)(v10 + 48)];
  v16 = v8[24];
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v15, v2);
  sub_23BC727B0();
  v20 = v12;
  v21 = v11;
  v22 = v13;
  v23 = v16;
  v24 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76280);
  sub_23BC1EA0C();
  sub_23BC1EA50();
  sub_23BC727F8();
  sub_23BBF876C(v18, v11, v13, v16, v19);
  sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BC72264();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23BC2642C(char a1)
{
  return *(_QWORD *)&aIdle_7[8 * a1];
}

uint64_t sub_23BC2644C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x637465467473616CLL;
  else
    return 12383;
}

uint64_t sub_23BC26480()
{
  char *v0;

  return sub_23BC2642C(*v0);
}

uint64_t sub_23BC26488()
{
  sub_23BC2C290();
  return sub_23BC72828();
}

uint64_t sub_23BC264B0()
{
  sub_23BC2C290();
  return sub_23BC72834();
}

uint64_t sub_23BC264D8()
{
  char *v0;

  return sub_23BC2644C(*v0);
}

uint64_t sub_23BC264E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC31F44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC26504()
{
  sub_23BC2C2D4();
  return sub_23BC72828();
}

uint64_t sub_23BC2652C()
{
  sub_23BC2C2D4();
  return sub_23BC72834();
}

uint64_t sub_23BC26554()
{
  sub_23BC2C318();
  return sub_23BC72828();
}

uint64_t sub_23BC2657C()
{
  sub_23BC2C318();
  return sub_23BC72834();
}

uint64_t sub_23BC265A4()
{
  sub_23BC2C35C();
  return sub_23BC72828();
}

uint64_t sub_23BC265CC()
{
  sub_23BC2C35C();
  return sub_23BC72834();
}

uint64_t StartWorkoutDetailLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t started;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;

  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76780);
  v31 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23BC71C10();
  v32 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76788);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76790);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76798);
  v37 = *(_QWORD *)(v14 - 8);
  v38 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C290();
  sub_23BC7281C();
  sub_23BBFD690(v40, (uint64_t)v13, type metadata accessor for StartWorkoutDetailLoadState);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 2, v17);
  if (v18)
  {
    if (v18 == 1)
    {
      LOBYTE(v41) = 0;
      sub_23BC2C35C();
      v19 = v38;
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v16, v19);
    }
    else
    {
      LOBYTE(v41) = 1;
      sub_23BC2C318();
      v28 = v38;
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v16, v28);
    }
  }
  else
  {
    v21 = *(_QWORD *)v13;
    v22 = *((_QWORD *)v13 + 1);
    v23 = *((_QWORD *)v13 + 2);
    v24 = v13[24];
    v25 = v13[25];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, &v13[*(int *)(v17 + 48)], v36);
    LOBYTE(v41) = 2;
    sub_23BC2C2D4();
    v26 = v38;
    sub_23BC726A8();
    v41 = v21;
    v42 = v22;
    v43 = v23;
    v44 = v24;
    v45 = v25;
    v46 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76280);
    sub_23BC22840(&qword_256A763A8, MEMORY[0x24BE37C50]);
    v27 = v39;
    sub_23BC72720();
    if (v27)
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v35);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v36);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v26);
      return sub_23BBF876C(v21, v22, v23, v24, v25);
    }
    else
    {
      sub_23BBF876C(v21, v22, v23, v24, v25);
      LOBYTE(v41) = 1;
      sub_23BBF377C(&qword_256A76368, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
      sub_23BC72720();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v35);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v16, v26);
    }
  }
}

uint64_t StartWorkoutDetailLoadState.hashValue.getter()
{
  return sub_23BC2A090((void (*)(_BYTE *))StartWorkoutDetailLoadState.hash(into:));
}

uint64_t StartWorkoutDetailLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t started;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v54 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A767C0);
  v4 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v53 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A767C8);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A767D0);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A767D8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  v15 = MEMORY[0x24BDAC7A8](started);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v45 - v18;
  v20 = a1[3];
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23BC2C290();
  v58 = v13;
  v21 = v60;
  sub_23BC72810();
  if (v21)
    goto LABEL_9;
  v23 = v55;
  v22 = v56;
  v46 = v17;
  v47 = v19;
  v24 = v57;
  v60 = v11;
  v25 = sub_23BC72690();
  v26 = v10;
  if (*(_QWORD *)(v25 + 16) != 1)
  {
    v31 = v10;
    v32 = sub_23BC725A0();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v34 = started;
    v35 = v58;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v31);
LABEL_9:
    v40 = (uint64_t)v59;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  v27 = v58;
  v28 = v60;
  if (*(_BYTE *)(v25 + 32))
  {
    if (*(_BYTE *)(v25 + 32) == 1)
    {
      v62 = 1;
      sub_23BC2C318();
      sub_23BC72600();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v10);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
      v30 = (uint64_t)v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v47, 2, 2, v29);
    }
    else
    {
      v56 = (char *)v25;
      v65 = 2;
      sub_23BC2C2D4();
      v36 = v27;
      sub_23BC72600();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A76280);
      v64 = 0;
      sub_23BC22840(&qword_256A76468, MEMORY[0x24BE37C58]);
      v37 = (uint64_t)v46;
      v38 = v52;
      v39 = v24;
      sub_23BC72684();
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
      sub_23BC71C10();
      v63 = 1;
      sub_23BBF377C(&qword_256A76460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
      sub_23BC72684();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v26);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v37, 0, 2, v44);
      v30 = (uint64_t)v47;
      sub_23BBF3738(v37, (uint64_t)v47, type metadata accessor for StartWorkoutDetailLoadState);
    }
  }
  else
  {
    v61 = 0;
    sub_23BC2C35C();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v49);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v10);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
    v30 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v47, 1, 2, v42);
  }
  v43 = (uint64_t)v59;
  sub_23BBF3738(v30, v54, type metadata accessor for StartWorkoutDetailLoadState);
  v40 = v43;
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_23BC270A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StartWorkoutDetailLoadState.init(from:)(a1, a2);
}

uint64_t sub_23BC270B8(_QWORD *a1)
{
  return StartWorkoutDetailLoadState.encode(to:)(a1);
}

uint64_t sub_23BC270CC(uint64_t a1, uint64_t a2)
{
  return sub_23BC2AA18(a1, a2, (void (*)(_BYTE *))StartWorkoutDetailLoadState.hash(into:));
}

uint64_t sub_23BC270DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC2AA68(a1, a2, a3, (void (*)(_BYTE *))StartWorkoutDetailLoadState.hash(into:));
}

uint64_t ResumeWorkoutConfirmation.hash(into:)()
{
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  type metadata accessor for ResumeWorkoutConfirmation(0);
  sub_23BC727B0();
  return sub_23BC727D4();
}

BOOL static ResumeWorkoutConfirmation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_23BC71C1C() & 1) != 0
    && (v4 = type metadata accessor for ResumeWorkoutConfirmation(0),
        *(_QWORD *)(a1 + *(int *)(v4 + 20)) == *(_QWORD *)(a2 + *(int *)(v4 + 20))))
  {
    return *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23BC271DC(char a1)
{
  if (!a1)
    return 0xD000000000000016;
  if (a1 == 1)
    return 0x7669746341776172;
  return 0x6954656D75736572;
}

uint64_t sub_23BC27248()
{
  char *v0;

  return sub_23BC271DC(*v0);
}

uint64_t sub_23BC27250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC32024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC27274()
{
  sub_23BC2C3B4();
  return sub_23BC72828();
}

uint64_t sub_23BC2729C()
{
  sub_23BC2C3B4();
  return sub_23BC72834();
}

uint64_t ResumeWorkoutConfirmation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A767E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C3B4();
  sub_23BC7281C();
  v8[15] = 0;
  sub_23BC71C34();
  sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23BC72720();
  if (!v1)
  {
    type metadata accessor for ResumeWorkoutConfirmation(0);
    v8[14] = 1;
    sub_23BC72714();
    v8[13] = 2;
    sub_23BC726FC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ResumeWorkoutConfirmation.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  type metadata accessor for ResumeWorkoutConfirmation(0);
  sub_23BC727B0();
  sub_23BC727D4();
  return sub_23BC727E0();
}

uint64_t ResumeWorkoutConfirmation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;

  v21 = a2;
  v22 = sub_23BC71C34();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A767F0);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResumeWorkoutConfirmation(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C3B4();
  v25 = v7;
  v11 = v26;
  sub_23BC72810();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v26 = v8;
  v12 = v5;
  v13 = (uint64_t)v10;
  v29 = 0;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v22;
  v14 = v23;
  v16 = v24;
  sub_23BC72684();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13, v14, v15);
  v28 = 1;
  *(_QWORD *)(v13 + *(int *)(v26 + 20)) = sub_23BC72678();
  v27 = 2;
  sub_23BC72660();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v16);
  *(_QWORD *)(v13 + *(int *)(v26 + 24)) = v18;
  sub_23BBFD690(v13, v21, type metadata accessor for ResumeWorkoutConfirmation);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23BBF36FC(v13, type metadata accessor for ResumeWorkoutConfirmation);
}

uint64_t sub_23BC2779C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ResumeWorkoutConfirmation.init(from:)(a1, a2);
}

uint64_t sub_23BC277B0(_QWORD *a1)
{
  return ResumeWorkoutConfirmation.encode(to:)(a1);
}

uint64_t sub_23BC277C8()
{
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  sub_23BC727B0();
  return sub_23BC727D4();
}

uint64_t sub_23BC27858()
{
  sub_23BC727A4();
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  sub_23BC727B0();
  sub_23BC727D4();
  return sub_23BC727E0();
}

BOOL sub_23BC278F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_23BC71C1C() & 1) != 0
      && *(_QWORD *)(a1 + *(int *)(a3 + 20)) == *(_QWORD *)(a2 + *(int *)(a3 + 20))
      && *(double *)(a1 + *(int *)(a3 + 24)) == *(double *)(a2 + *(int *)(a3 + 24));
}

uint64_t PlannedWorkoutConfirmation.hash(into:)()
{
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  type metadata accessor for PlannedWorkoutConfirmation(0);
  sub_23BC727B0();
  sub_23BC727D4();
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BC27A18(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC27A50 + 4 * byte_23BC795E4[a1]))(0xD000000000000016, 0x800000023BC81D00);
}

uint64_t sub_23BC27A50()
{
  return 0x7669746341776172;
}

uint64_t sub_23BC27A74()
{
  return 0x6954656D75736572;
}

uint64_t sub_23BC27A90()
{
  return 0x5474756F6B726F77;
}

uint64_t sub_23BC27AB0()
{
  unsigned __int8 *v0;

  return sub_23BC27A18(*v0);
}

uint64_t sub_23BC27AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC3218C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC27ADC()
{
  sub_23BC2C40C();
  return sub_23BC72828();
}

uint64_t sub_23BC27B04()
{
  sub_23BC2C40C();
  return sub_23BC72834();
}

uint64_t PlannedWorkoutConfirmation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A767F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C40C();
  sub_23BC7281C();
  v8[15] = 0;
  sub_23BC71C34();
  sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23BC72720();
  if (!v1)
  {
    type metadata accessor for PlannedWorkoutConfirmation(0);
    v8[14] = 1;
    sub_23BC72714();
    v8[13] = 2;
    sub_23BC726FC();
    v8[12] = 3;
    sub_23BC726E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PlannedWorkoutConfirmation.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  type metadata accessor for PlannedWorkoutConfirmation(0);
  sub_23BC727B0();
  sub_23BC727D4();
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  return sub_23BC727E0();
}

uint64_t PlannedWorkoutConfirmation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v31 = a2;
  v32 = sub_23BC71C34();
  v3 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76808);
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlannedWorkoutConfirmation(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C40C();
  v34 = v7;
  v11 = (uint64_t)v36;
  sub_23BC72810();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = v8;
  v12 = v5;
  v36 = a1;
  v13 = v10;
  v40 = 0;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v14 = v32;
  v15 = v33;
  v17 = v34;
  v16 = v35;
  sub_23BC72684();
  v18 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v19 = (uint64_t)v13;
  v18(v13, v15, v14);
  v39 = 1;
  v20 = sub_23BC72678();
  v21 = v30;
  *(_QWORD *)(v19 + *(int *)(v30 + 20)) = v20;
  v38 = 2;
  sub_23BC72660();
  *(_QWORD *)(v19 + *(int *)(v21 + 24)) = v22;
  v37 = 3;
  v23 = sub_23BC72648();
  v24 = v17;
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v16);
  v27 = (uint64_t *)(v19 + *(int *)(v21 + 28));
  *v27 = v23;
  v27[1] = v26;
  sub_23BBFD690(v19, v31, type metadata accessor for PlannedWorkoutConfirmation);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_23BBF36FC(v19, type metadata accessor for PlannedWorkoutConfirmation);
}

uint64_t sub_23BC28088@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PlannedWorkoutConfirmation.init(from:)(a1, a2);
}

uint64_t sub_23BC2809C(_QWORD *a1)
{
  return PlannedWorkoutConfirmation.encode(to:)(a1);
}

uint64_t sub_23BC280B8()
{
  sub_23BC727A4();
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  sub_23BC727B0();
  sub_23BC727D4();
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  return sub_23BC727E0();
}

uint64_t sub_23BC28188()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v0 = sub_23BC71BA4();
  v27 = *(_QWORD *)(v0 - 8);
  v28 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23BC71B8C();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BC71BD4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v23 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  v15 = sub_23BC71C10();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FutureWorkoutConfirmation(0);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v25 + *(int *)(v19 + 28), v15);
  MEMORY[0x24260DD80](v20);
  sub_23BC71B80();
  sub_23BC71B68();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v26);
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v9, v5);
  sub_23BC71B98();
  sub_23BC71B74();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v28);
  v21(v12, v5);
  sub_23BBF377C(&qword_256A76D80, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_23BC71C04();
  v21(v14, v5);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v29;
}

uint64_t sub_23BC283D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v0 = sub_23BC71B8C();
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v36 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23BC71BA4();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BC71BBC();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BC71BD4();
  v30 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v29 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v29 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v29 - v18;
  v20 = sub_23BC71C10();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FutureWorkoutConfirmation(0);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v33 + *(int *)(v24 + 28), v20);
  MEMORY[0x24260DD80](v25);
  sub_23BC71BB0();
  sub_23BC71BC8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  v26 = *(void (**)(char *, uint64_t))(v30 + 8);
  v26(v11, v8);
  sub_23BC71B98();
  sub_23BC71B74();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v35);
  v26(v14, v8);
  v27 = v36;
  sub_23BC71B80();
  sub_23BC71B68();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v38);
  v26(v17, v8);
  sub_23BBF377C(&qword_256A76D80, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_23BC71C04();
  v26(v19, v8);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  return v39;
}

uint64_t FutureWorkoutConfirmation.hash(into:)()
{
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  type metadata accessor for FutureWorkoutConfirmation(0);
  sub_23BC727B0();
  sub_23BC727D4();
  sub_23BC71C10();
  sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23BC72264();
}

uint64_t static FutureWorkoutConfirmation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_23BC71C1C() & 1) != 0
    && (v4 = type metadata accessor for FutureWorkoutConfirmation(0),
        *(_QWORD *)(a1 + *(int *)(v4 + 20)) == *(_QWORD *)(a2 + *(int *)(v4 + 20)))
    && *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24)))
  {
    return sub_23BC71BEC();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23BC287F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC28830 + 4 * byte_23BC795E8[a1]))(0xD000000000000016, 0x800000023BC81D00);
}

uint64_t sub_23BC28830()
{
  return 0x7669746341776172;
}

uint64_t sub_23BC28854()
{
  return 0x6954656D75736572;
}

unint64_t sub_23BC28870()
{
  return 0xD000000000000015;
}

uint64_t sub_23BC2888C()
{
  unsigned __int8 *v0;

  return sub_23BC287F4(*v0);
}

uint64_t sub_23BC28894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC32360(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC288B8()
{
  sub_23BC2C464();
  return sub_23BC72828();
}

uint64_t sub_23BC288E0()
{
  sub_23BC2C464();
  return sub_23BC72834();
}

uint64_t FutureWorkoutConfirmation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76810);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C464();
  sub_23BC7281C();
  v8[15] = 0;
  sub_23BC71C34();
  sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23BC72720();
  if (!v1)
  {
    type metadata accessor for FutureWorkoutConfirmation(0);
    v8[14] = 1;
    sub_23BC72714();
    v8[13] = 2;
    sub_23BC726FC();
    v8[12] = 3;
    sub_23BC71C10();
    sub_23BBF377C(&qword_256A76368, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23BC72720();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FutureWorkoutConfirmation.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  type metadata accessor for FutureWorkoutConfirmation(0);
  sub_23BC727B0();
  sub_23BC727D4();
  sub_23BC71C10();
  sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BC72264();
  return sub_23BC727E0();
}

uint64_t FutureWorkoutConfirmation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v25 = a2;
  v27 = sub_23BC71C10();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23BC71C34();
  v4 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76820);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FutureWorkoutConfirmation(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C464();
  v31 = v8;
  v12 = v32;
  sub_23BC72810();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v9;
  v13 = v6;
  v14 = v11;
  v15 = (uint64_t)a1;
  v16 = v27;
  v36 = 0;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v28;
  sub_23BC72684();
  v18 = (uint64_t)v14;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v14, v29, v30);
  v35 = 1;
  v19 = sub_23BC72678();
  v20 = v23;
  *(_QWORD *)(v18 + *(int *)(v23 + 20)) = v19;
  v34 = 2;
  sub_23BC72660();
  *(_QWORD *)(v18 + *(int *)(v20 + 24)) = v21;
  v33 = 3;
  sub_23BBF377C(&qword_256A76460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v18 + *(int *)(v23 + 28), v26, v16);
  sub_23BBFD690(v18, v25, type metadata accessor for FutureWorkoutConfirmation);
  __swift_destroy_boxed_opaque_existential_1(v15);
  return sub_23BBF36FC(v18, type metadata accessor for FutureWorkoutConfirmation);
}

uint64_t sub_23BC28F40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FutureWorkoutConfirmation.init(from:)(a1, a2);
}

uint64_t sub_23BC28F54(_QWORD *a1)
{
  return FutureWorkoutConfirmation.encode(to:)(a1);
}

uint64_t sub_23BC28F6C()
{
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  sub_23BC727B0();
  sub_23BC727D4();
  sub_23BC71C10();
  sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23BC72264();
}

uint64_t sub_23BC2903C()
{
  sub_23BC727A4();
  sub_23BC71C34();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  sub_23BC727B0();
  sub_23BC727D4();
  sub_23BC71C10();
  sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BC72264();
  return sub_23BC727E0();
}

uint64_t sub_23BC2911C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_23BC71C1C() & 1) != 0
    && *(_QWORD *)(a1 + *(int *)(a3 + 20)) == *(_QWORD *)(a2 + *(int *)(a3 + 20))
    && *(double *)(a1 + *(int *)(a3 + 24)) == *(double *)(a2 + *(int *)(a3 + 24)))
  {
    return sub_23BC71BEC();
  }
  else
  {
    return 0;
  }
}

uint64_t StartWorkoutButtonState.workoutIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StartWorkoutButtonState.ongoingWorkoutAlert.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BBE817C(v1 + *(int *)(started + 32), a1, &qword_256A74420);
}

uint64_t StartWorkoutButtonState.ongoingWorkoutAlert.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BC2C4BC(a1, v1 + *(int *)(started + 32), &qword_256A74420);
}

uint64_t (*StartWorkoutButtonState.ongoingWorkoutAlert.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for StartWorkoutButtonState(0);
  return nullsub_1;
}

uint64_t StartWorkoutButtonState.resumeConfirmation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BBE817C(v1 + *(int *)(started + 36), a1, &qword_256A74688);
}

uint64_t StartWorkoutButtonState.resumeConfirmation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BC2C4BC(a1, v1 + *(int *)(started + 36), &qword_256A74688);
}

uint64_t (*StartWorkoutButtonState.resumeConfirmation.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for StartWorkoutButtonState(0);
  return nullsub_1;
}

uint64_t StartWorkoutButtonState.replaceScheduledWorkoutConfirmation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BBE817C(v1 + *(int *)(started + 40), a1, &qword_256A74668);
}

uint64_t StartWorkoutButtonState.replaceScheduledWorkoutConfirmation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BC2C4BC(a1, v1 + *(int *)(started + 40), &qword_256A74668);
}

uint64_t (*StartWorkoutButtonState.replaceScheduledWorkoutConfirmation.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for StartWorkoutButtonState(0);
  return nullsub_1;
}

uint64_t StartWorkoutButtonState.startFutureWorkoutConfirmation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BBE817C(v1 + *(int *)(started + 44), a1, &qword_256A74648);
}

uint64_t StartWorkoutButtonState.startFutureWorkoutConfirmation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BC2C4BC(a1, v1 + *(int *)(started + 44), &qword_256A74648);
}

uint64_t (*StartWorkoutButtonState.startFutureWorkoutConfirmation.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for StartWorkoutButtonState(0);
  return nullsub_1;
}

uint64_t StartWorkoutButtonState.detailLoadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t started;

  started = type metadata accessor for StartWorkoutButtonState(0);
  return sub_23BBFD690(v1 + *(int *)(started + 48), a1, type metadata accessor for StartWorkoutDetailLoadState);
}

uint64_t StartWorkoutButtonState.detailLoadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StartWorkoutButtonState(0) + 48);
  return sub_23BBF8638(a1, v3);
}

uint64_t (*StartWorkoutButtonState.detailLoadState.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for StartWorkoutButtonState(0);
  return nullsub_1;
}

uint64_t StartWorkoutButtonState.init(workoutIdentifier:locale:allowedMediaTypes:presentationContextKey:ongoingWorkoutAlert:resumeConfirmation:replaceScheduledWorkoutConfirmation:startFutureWorkoutConfirmation:detailLoadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *started;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  *a9 = a1;
  a9[1] = a2;
  started = (int *)type metadata accessor for StartWorkoutButtonState(0);
  v19 = (char *)a9 + started[5];
  v20 = sub_23BC71C4C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a3, v20);
  v21 = (char *)a9 + started[7];
  v22 = sub_23BC71C34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a5, v22);
  *(_QWORD *)((char *)a9 + started[6]) = a4;
  sub_23BBE87F8(a6, (uint64_t)a9 + started[8], &qword_256A74420);
  sub_23BBE87F8(a7, (uint64_t)a9 + started[9], &qword_256A74688);
  sub_23BBE87F8(a8, (uint64_t)a9 + started[10], &qword_256A74668);
  sub_23BBE87F8(a10, (uint64_t)a9 + started[11], &qword_256A74648);
  return sub_23BBF3738(a11, (uint64_t)a9 + started[12], type metadata accessor for StartWorkoutDetailLoadState);
}

uint64_t StartWorkoutButtonState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t started;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unsigned __int8 v48;

  v2 = v1;
  v38 = sub_23BC71C10();
  v42 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BC71C34();
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v43 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v39 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  v18 = (int *)type metadata accessor for StartWorkoutButtonState(0);
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  v19 = *(_QWORD *)(v1 + v18[6]);
  swift_bridgeObjectRetain();
  sub_23BC2B398(a1, v19);
  swift_bridgeObjectRelease();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v40 = v5;
  sub_23BC72264();
  sub_23BBE817C(v2 + v18[8], (uint64_t)v17, &qword_256A74420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v17, 1, v9) == 1)
  {
    sub_23BC727B0();
    v20 = (uint64_t)v43;
  }
  else
  {
    sub_23BBE87F8((uint64_t)v17, (uint64_t)v14, &qword_256A74428);
    sub_23BC727B0();
    v21 = v39;
    sub_23BBE817C((uint64_t)v14, v39, &qword_256A74428);
    v22 = v40;
    v23 = v41;
    v24 = (uint64_t)v14;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v21, 1, v40) == 1)
    {
      sub_23BC727BC();
    }
    else
    {
      v25 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v36, v21, v22);
      sub_23BC727BC();
      sub_23BC72264();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    }
    v20 = (uint64_t)v43;
    sub_23BBE81C0(v24, &qword_256A74428);
  }
  sub_23BC2AFB4(a1);
  sub_23BC2AD38(a1);
  sub_23BC2AAA8(a1);
  sub_23BBFD690(v2 + v18[12], v20, type metadata accessor for StartWorkoutDetailLoadState);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 2, v26))
    return sub_23BC727B0();
  v27 = *(_QWORD *)v20;
  v28 = *(_QWORD *)(v20 + 8);
  v29 = *(_QWORD *)(v20 + 16);
  v30 = *(_BYTE *)(v20 + 25);
  LODWORD(v43) = v30;
  v31 = v20 + *(int *)(v26 + 48);
  v32 = *(unsigned __int8 *)(v20 + 24);
  v33 = v37;
  v34 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v37, v31, v38);
  sub_23BC727B0();
  v44 = v27;
  v45 = v28;
  v46 = v29;
  v47 = v32;
  v48 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76280);
  sub_23BC1EA0C();
  sub_23BC1EA50();
  sub_23BC727F8();
  sub_23BBF876C(v27, v28, v29, v32, (char)v43);
  sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BC72264();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v33, v34);
}

uint64_t sub_23BC29B10(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC29B48 + 4 * byte_23BC795EC[a1]))(0xD000000000000011, 0x800000023BC82160);
}

uint64_t sub_23BC29B48()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BC29BC0()
{
  return 0x6F4C6C6961746564;
}

uint64_t sub_23BC29BE4()
{
  unsigned __int8 *v0;

  return sub_23BC29B10(*v0);
}

uint64_t sub_23BC29BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC32524(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BC29C10(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_23BC29C1C()
{
  sub_23BC2C500();
  return sub_23BC72828();
}

uint64_t sub_23BC29C44()
{
  sub_23BC2C500();
  return sub_23BC72834();
}

uint64_t StartWorkoutButtonState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t started;
  _BYTE v11[16];
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76828);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC2C500();
  sub_23BC7281C();
  LOBYTE(v12) = 0;
  sub_23BC726E4();
  if (!v2)
  {
    started = type metadata accessor for StartWorkoutButtonState(0);
    LOBYTE(v12) = 1;
    sub_23BC71C4C();
    sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23BC72720();
    v12 = *(_QWORD *)(v3 + *(int *)(started + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76838);
    sub_23BC2C544(&qword_256A76840, (uint64_t (*)(void))sub_23BC2C0C8, MEMORY[0x24BEE1700]);
    sub_23BC72720();
    LOBYTE(v12) = 3;
    sub_23BC71C34();
    sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23BC72720();
    LOBYTE(v12) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
    sub_23BBE869C(&qword_256A74458, &qword_256A74420, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
    sub_23BC72720();
    LOBYTE(v12) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
    sub_23BBE869C(&qword_256A76848, &qword_256A74688, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
    sub_23BC72720();
    LOBYTE(v12) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
    sub_23BBE869C(&qword_256A76850, &qword_256A74668, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
    sub_23BC72720();
    LOBYTE(v12) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
    sub_23BBE869C(&qword_256A76858, &qword_256A74648, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
    sub_23BC72720();
    LOBYTE(v12) = 8;
    type metadata accessor for StartWorkoutDetailLoadState(0);
    sub_23BBF377C(&qword_256A76860, type metadata accessor for StartWorkoutDetailLoadState, (uint64_t)&protocol conformance descriptor for StartWorkoutDetailLoadState);
    sub_23BC72720();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StartWorkoutButtonState.hashValue.getter()
{
  return sub_23BC2A090((void (*)(_BYTE *))StartWorkoutButtonState.hash(into:));
}

uint64_t sub_23BC2A090(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_23BC727A4();
  a1(v3);
  return sub_23BC727E0();
}

uint64_t StartWorkoutButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t started;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  int *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;

  v40 = a2;
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v42 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
  MEMORY[0x24BDAC7A8](v43);
  v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
  MEMORY[0x24BDAC7A8](v45);
  v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
  MEMORY[0x24BDAC7A8](v47);
  v48 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v49);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_23BC71C34();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23BC71C4C();
  v53 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76868);
  v13 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = (int *)type metadata accessor for StartWorkoutButtonState(0);
  MEMORY[0x24BDAC7A8](v57);
  v17 = (uint64_t *)((char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23BC2C500();
  v51 = v15;
  v19 = v56;
  sub_23BC72810();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  v56 = v10;
  v39 = v8;
  v20 = v13;
  LOBYTE(v60) = 0;
  v21 = v50;
  v22 = (uint64_t)v17;
  *v17 = sub_23BC72648();
  v17[1] = v23;
  LOBYTE(v60) = 1;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v24 = v58;
  sub_23BC72684();
  v25 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v22 + v57[5], v12, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76838);
  v59 = 2;
  sub_23BC2C544(&qword_256A76870, (uint64_t (*)(void))sub_23BC2C16C, MEMORY[0x24BEE1720]);
  sub_23BC72684();
  *(_QWORD *)(v22 + v25[6]) = v60;
  LOBYTE(v60) = 3;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v26 = v56;
  v27 = v54;
  sub_23BC72684();
  v38 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v22 + v25[7], v26, v27);
  LOBYTE(v60) = 4;
  sub_23BBE869C(&qword_256A74478, &qword_256A74420, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v28 = (uint64_t)v39;
  sub_23BC72684();
  sub_23BBE87F8(v28, v22 + v25[8], &qword_256A74420);
  LOBYTE(v60) = 5;
  sub_23BBE869C(&qword_256A76878, &qword_256A74688, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v29 = (uint64_t)v48;
  sub_23BC72684();
  v30 = (uint64_t)v55;
  v31 = v25;
  sub_23BBE87F8(v29, v22 + v25[9], &qword_256A74688);
  LOBYTE(v60) = 6;
  sub_23BBE869C(&qword_256A76880, &qword_256A74668, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v32 = (uint64_t)v46;
  sub_23BC72684();
  sub_23BBE87F8(v32, v22 + v31[10], &qword_256A74668);
  LOBYTE(v60) = 7;
  sub_23BBE869C(&qword_256A76888, &qword_256A74648, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v33 = (uint64_t)v44;
  sub_23BC72684();
  v34 = v38;
  sub_23BBE87F8(v33, v22 + v57[11], &qword_256A74648);
  LOBYTE(v60) = 8;
  sub_23BBF377C(&qword_256A76890, type metadata accessor for StartWorkoutDetailLoadState, (uint64_t)&protocol conformance descriptor for StartWorkoutDetailLoadState);
  v35 = (uint64_t)v42;
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v51, v21);
  sub_23BBF3738(v35, v22 + v57[12], type metadata accessor for StartWorkoutDetailLoadState);
  sub_23BBFD690(v22, v40, type metadata accessor for StartWorkoutButtonState);
  __swift_destroy_boxed_opaque_existential_1(v30);
  return sub_23BBF36FC(v22, type metadata accessor for StartWorkoutButtonState);
}

uint64_t sub_23BC2A9E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StartWorkoutButtonState.init(from:)(a1, a2);
}

uint64_t sub_23BC2A9F8(_QWORD *a1)
{
  return StartWorkoutButtonState.encode(to:)(a1);
}

uint64_t sub_23BC2AA0C(uint64_t a1, uint64_t a2)
{
  return sub_23BC2AA18(a1, a2, (void (*)(_BYTE *))StartWorkoutButtonState.hash(into:));
}

uint64_t sub_23BC2AA18(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_23BC727A4();
  a3(v5);
  return sub_23BC727E0();
}

uint64_t sub_23BC2AA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC2AA68(a1, a2, a3, (void (*)(_BYTE *))StartWorkoutButtonState.hash(into:));
}

uint64_t sub_23BC2AA68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_23BC727A4();
  a4(v6);
  return sub_23BC727E0();
}

uint64_t sub_23BC2AAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v17[2];

  v17[1] = a1;
  v2 = type metadata accessor for FutureWorkoutConfirmation(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBE817C(v1, (uint64_t)v15, &qword_256A74648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    return sub_23BC727B0();
  sub_23BBE87F8((uint64_t)v15, (uint64_t)v12, &qword_256A74640);
  sub_23BC727B0();
  sub_23BBE817C((uint64_t)v12, (uint64_t)v10, &qword_256A74640);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_23BC727BC();
  }
  else
  {
    sub_23BBF3738((uint64_t)v10, (uint64_t)v5, type metadata accessor for FutureWorkoutConfirmation);
    sub_23BC727BC();
    sub_23BC71C34();
    sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23BC72264();
    sub_23BC727B0();
    sub_23BC727D4();
    sub_23BC71C10();
    sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23BC72264();
    sub_23BBF36FC((uint64_t)v5, type metadata accessor for FutureWorkoutConfirmation);
  }
  return sub_23BBE81C0((uint64_t)v12, &qword_256A74640);
}

uint64_t sub_23BC2AD38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v17[2];

  v17[1] = a1;
  v2 = type metadata accessor for PlannedWorkoutConfirmation(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBE817C(v1, (uint64_t)v15, &qword_256A74668);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    return sub_23BC727B0();
  sub_23BBE87F8((uint64_t)v15, (uint64_t)v12, &qword_256A74660);
  sub_23BC727B0();
  sub_23BBE817C((uint64_t)v12, (uint64_t)v10, &qword_256A74660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_23BC727BC();
  }
  else
  {
    sub_23BBF3738((uint64_t)v10, (uint64_t)v5, type metadata accessor for PlannedWorkoutConfirmation);
    sub_23BC727BC();
    sub_23BC71C34();
    sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23BC72264();
    sub_23BC727B0();
    sub_23BC727D4();
    swift_bridgeObjectRetain();
    sub_23BC7230C();
    swift_bridgeObjectRelease();
    sub_23BBF36FC((uint64_t)v5, type metadata accessor for PlannedWorkoutConfirmation);
  }
  return sub_23BBE81C0((uint64_t)v12, &qword_256A74660);
}

uint64_t sub_23BC2AFB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v17[2];

  v17[1] = a1;
  v2 = type metadata accessor for ResumeWorkoutConfirmation(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBE817C(v1, (uint64_t)v15, &qword_256A74688);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    return sub_23BC727B0();
  sub_23BBE87F8((uint64_t)v15, (uint64_t)v12, &qword_256A74680);
  sub_23BC727B0();
  sub_23BBE817C((uint64_t)v12, (uint64_t)v10, &qword_256A74680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_23BC727BC();
  }
  else
  {
    sub_23BBF3738((uint64_t)v10, (uint64_t)v5, type metadata accessor for ResumeWorkoutConfirmation);
    sub_23BC727BC();
    sub_23BC71C34();
    sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23BC72264();
    sub_23BC727B0();
    sub_23BC727D4();
    sub_23BBF36FC((uint64_t)v5, type metadata accessor for ResumeWorkoutConfirmation);
  }
  return sub_23BBE81C0((uint64_t)v12, &qword_256A74680);
}

uint64_t sub_23BC2B204(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  int64_t v14;

  sub_23BC727E0();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_23BC727B0();
    }
    v13 = *(_QWORD *)(v3 + 8 * v10);
    if (!v13)
      break;
LABEL_16:
    v6 = (v13 - 1) & v13;
LABEL_5:
    sub_23BC727A4();
    swift_bridgeObjectRetain();
    sub_23BC7230C();
    v11 = sub_23BC727E0();
    result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  v14 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v13 = *(_QWORD *)(v3 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23BC2B398(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;

  result = sub_23BC727E0();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1))
      goto LABEL_19;
    if (v5 >= v10)
      return sub_23BC727B0();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    if (!v12)
      break;
LABEL_16:
    v9 = (v12 - 1) & v12;
LABEL_5:
    sub_23BC727A4();
    sub_23BC727B0();
    result = sub_23BC727E0();
    v4 ^= result;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_23BC727B0();
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return sub_23BC727B0();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s14FitnessActions27StartWorkoutDetailLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t started;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, char *, uint64_t);
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;

  v4 = sub_23BC71C10();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76D88);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_23BBFD690(a1, (uint64_t)v17, type metadata accessor for StartWorkoutDetailLoadState);
  sub_23BBFD690(a2, v18, type metadata accessor for StartWorkoutDetailLoadState);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
  v21 = v20(v17, 2, v19);
  if (!v21)
  {
    sub_23BBFD690((uint64_t)v17, (uint64_t)v13, type metadata accessor for StartWorkoutDetailLoadState);
    v22 = *((_QWORD *)v13 + 1);
    v42 = *(_QWORD *)v13;
    v43 = v22;
    v44 = *((_QWORD *)v13 + 2);
    LODWORD(v22) = v13[25];
    v45 = v13[24];
    v46 = v22;
    v23 = *(int *)(v19 + 48);
    v24 = &v13[v23];
    if (!v20((char *)v18, 2, v19))
    {
      v27 = *(_QWORD *)v18;
      v28 = *(_QWORD *)(v18 + 16);
      v38 = *(_QWORD *)(v18 + 8);
      v39 = v27;
      v41 = v28;
      v29 = *(_BYTE *)(v18 + 25);
      v37 = (char *)(v18 + v23);
      v30 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v31 = *(unsigned __int8 *)(v18 + 24);
      v40 = v31;
      v30(v10, v24, v4);
      v30(v8, v37, v4);
      v52 = v42;
      v53 = v43;
      v54 = v44;
      v55 = v45;
      v56 = v46;
      v32 = v38;
      v33 = v39;
      v47 = v39;
      v48 = v38;
      v49 = v28;
      v50 = v31;
      v51 = v29;
      sub_23BC24B84();
      sub_23BC24BC8();
      sub_23BC24C0C();
      LOBYTE(v28) = sub_23BC72804();
      sub_23BBF876C(v33, v32, v41, v40, v29);
      sub_23BBF876C(v42, v43, v44, v45, v46);
      if ((v28 & 1) != 0)
      {
        v25 = sub_23BC71BEC();
        v34 = *(void (**)(char *, uint64_t))(v5 + 8);
        v34(v8, v4);
        v34(v10, v4);
        sub_23BBF36FC((uint64_t)v17, type metadata accessor for StartWorkoutDetailLoadState);
        return v25 & 1;
      }
      v35 = *(void (**)(char *, uint64_t))(v5 + 8);
      v35(v8, v4);
      v35(v10, v4);
      sub_23BBF36FC((uint64_t)v17, type metadata accessor for StartWorkoutDetailLoadState);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
    sub_23BBF876C(v42, v43, v44, v45, v46);
    goto LABEL_9;
  }
  if (v21 != 1)
  {
    if (v20((char *)v18, 2, v19) == 2)
      goto LABEL_8;
LABEL_9:
    sub_23BBE81C0((uint64_t)v17, &qword_256A76D88);
LABEL_10:
    v25 = 0;
    return v25 & 1;
  }
  if (v20((char *)v18, 2, v19) != 1)
    goto LABEL_9;
LABEL_8:
  sub_23BBF36FC((uint64_t)v17, type metadata accessor for StartWorkoutDetailLoadState);
  v25 = 1;
  return v25 & 1;
}

uint64_t _s14FitnessActions18StartWorkoutDetailV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  int v3;
  _QWORD *v4;
  int v5;
  char v7;
  uint64_t result;

  v2 = *(_QWORD **)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = *(_QWORD **)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 24);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return sub_23BC25420(v2, v4) & (v3 == v5);
  v7 = sub_23BC72744();
  result = 0;
  if ((v7 & 1) != 0)
    return sub_23BC25420(v2, v4) & (v3 == v5);
  return result;
}

uint64_t _s14FitnessActions26PlannedWorkoutConfirmationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if ((sub_23BC71C1C() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
  if (*(_QWORD *)(a1 + v4[5]) != *(_QWORD *)(a2 + v4[5]) || *(double *)(a1 + v4[6]) != *(double *)(a2 + v4[6]))
    return 0;
  v5 = v4[7];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1])
    return 1;
  else
    return sub_23BC72744();
}

uint64_t _s14FitnessActions23StartWorkoutButtonStateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  int *started;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_23BC72744() & 1) != 0)
    && (started = (int *)type metadata accessor for StartWorkoutButtonState(0),
        (MEMORY[0x24260DE7C]((char *)a1 + started[5], (char *)a2 + started[5]) & 1) != 0)
    && (sub_23BC6D9D0(*(_QWORD *)((char *)a1 + started[6]), *(_QWORD *)((char *)a2 + started[6])) & 1) != 0
    && (sub_23BC71C1C() & 1) != 0
    && (sub_23BBEE428((uint64_t)a1 + started[8], (uint64_t)a2 + started[8]) & 1) != 0
    && (sub_23BBEE840((uint64_t)a1 + started[9], (uint64_t)a2 + started[9]) & 1) != 0
    && (sub_23BBEEC84((uint64_t)a1 + started[10], (uint64_t)a2 + started[10]) & 1) != 0
    && (sub_23BBEF0DC((uint64_t)a1 + started[11], (uint64_t)a2 + started[11]) & 1) != 0)
  {
    return _s14FitnessActions27StartWorkoutDetailLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + started[12], (uint64_t)a2 + started[12]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23BC2BAB4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6F65646976 && a2 == 0xE500000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7552646564697567 && a2 == 0xE90000000000006ELL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6157646564697567 && a2 == 0xEA00000000006B6CLL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697461746964656DLL && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BC2BC60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76D90);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76D98);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76DA0);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76DA8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256A76DB0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23BC25180();
  v17 = v25;
  sub_23BC72810();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_23BC72690();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_23BC725A0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v21 = &type metadata for WorkoutMediaType;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v12;
}

void sub_23BC2BF84()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_23BC2524C();
  sub_23BC72600();
  if (!v0)
    JUMPOUT(0x23BC2C058);
  JUMPOUT(0x23BC2BF38);
}

void sub_23BC2BFC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_23BC25208();
  sub_23BC72600();
  if (!v0)
    JUMPOUT(0x23BC2C008);
  JUMPOUT(0x23BC2BF38);
}

void sub_23BC2C014()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_23BC251C4();
  sub_23BC72600();
  if (!v0)
    JUMPOUT(0x23BC2C058);
  JUMPOUT(0x23BC2BF38);
}

unint64_t sub_23BC2C084()
{
  unint64_t result;

  result = qword_256A76700;
  if (!qword_256A76700)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AB60, &type metadata for StartWorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76700);
  }
  return result;
}

unint64_t sub_23BC2C0C8()
{
  unint64_t result;

  result = qword_256A76718;
  if (!qword_256A76718)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for WorkoutMediaType, &type metadata for WorkoutMediaType);
    atomic_store(result, (unint64_t *)&qword_256A76718);
  }
  return result;
}

uint64_t sub_23BC2C10C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A76708);
    v8 = a2;
    result = MEMORY[0x24260ED10](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BC2C16C()
{
  unint64_t result;

  result = qword_256A76730;
  if (!qword_256A76730)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for WorkoutMediaType, &type metadata for WorkoutMediaType);
    atomic_store(result, (unint64_t *)&qword_256A76730);
  }
  return result;
}

unint64_t sub_23BC2C1B0()
{
  unint64_t result;

  result = qword_256A76750;
  if (!qword_256A76750)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AB10, &type metadata for StartWorkoutDetailError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76750);
  }
  return result;
}

unint64_t sub_23BC2C1F4()
{
  unint64_t result;

  result = qword_256A76758;
  if (!qword_256A76758)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AAC0, &type metadata for StartWorkoutDetailError.DisabledMediaTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76758);
  }
  return result;
}

unint64_t sub_23BC2C238()
{
  unint64_t result;

  result = qword_256A76760;
  if (!qword_256A76760)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AA70, &type metadata for StartWorkoutDetailError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76760);
  }
  return result;
}

uint64_t type metadata accessor for StartWorkoutDetailLoadState(uint64_t a1)
{
  return sub_23BC00E84(a1, (uint64_t *)&unk_256A76940);
}

unint64_t sub_23BC2C290()
{
  unint64_t result;

  result = qword_256A767A0;
  if (!qword_256A767A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AA20, &type metadata for StartWorkoutDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A767A0);
  }
  return result;
}

unint64_t sub_23BC2C2D4()
{
  unint64_t result;

  result = qword_256A767A8;
  if (!qword_256A767A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A9D0, &type metadata for StartWorkoutDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A767A8);
  }
  return result;
}

unint64_t sub_23BC2C318()
{
  unint64_t result;

  result = qword_256A767B0;
  if (!qword_256A767B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A980, &type metadata for StartWorkoutDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A767B0);
  }
  return result;
}

unint64_t sub_23BC2C35C()
{
  unint64_t result;

  result = qword_256A767B8;
  if (!qword_256A767B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A930, &type metadata for StartWorkoutDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A767B8);
  }
  return result;
}

uint64_t type metadata accessor for ResumeWorkoutConfirmation(uint64_t a1)
{
  return sub_23BC00E84(a1, qword_256A769A8);
}

unint64_t sub_23BC2C3B4()
{
  unint64_t result;

  result = qword_256A767E8;
  if (!qword_256A767E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A8E0, &type metadata for ResumeWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A767E8);
  }
  return result;
}

uint64_t type metadata accessor for PlannedWorkoutConfirmation(uint64_t a1)
{
  return sub_23BC00E84(a1, qword_256A76A40);
}

unint64_t sub_23BC2C40C()
{
  unint64_t result;

  result = qword_256A76800;
  if (!qword_256A76800)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A890, &type metadata for PlannedWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76800);
  }
  return result;
}

uint64_t type metadata accessor for FutureWorkoutConfirmation(uint64_t a1)
{
  return sub_23BC00E84(a1, qword_256A76AD8);
}

unint64_t sub_23BC2C464()
{
  unint64_t result;

  result = qword_256A76818;
  if (!qword_256A76818)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A840, &type metadata for FutureWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76818);
  }
  return result;
}

uint64_t type metadata accessor for StartWorkoutButtonState(uint64_t a1)
{
  return sub_23BC00E84(a1, (uint64_t *)&unk_256A76B70);
}

uint64_t sub_23BC2C4BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_23BC2C500()
{
  unint64_t result;

  result = qword_256A76830;
  if (!qword_256A76830)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A7F0, &type metadata for StartWorkoutButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76830);
  }
  return result;
}

uint64_t sub_23BC2C544(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A76838);
    v8 = a2();
    result = MEMORY[0x24260ED10](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC2C5AC()
{
  return sub_23BBE869C(&qword_256A76898, &qword_256A768A0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23BC2C5DC()
{
  unint64_t result;

  result = qword_256A768A8;
  if (!qword_256A768A8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for WorkoutMediaType, &type metadata for WorkoutMediaType);
    atomic_store(result, (unint64_t *)&qword_256A768A8);
  }
  return result;
}

uint64_t sub_23BC2C628()
{
  return sub_23BBF377C(&qword_256A768B0, type metadata accessor for StartWorkoutDetailLoadState, (uint64_t)&protocol conformance descriptor for StartWorkoutDetailLoadState);
}

uint64_t sub_23BC2C654()
{
  return sub_23BBF377C(&qword_256A768B8, type metadata accessor for ResumeWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for ResumeWorkoutConfirmation);
}

uint64_t sub_23BC2C680()
{
  return sub_23BBF377C(&qword_256A768C0, type metadata accessor for PlannedWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for PlannedWorkoutConfirmation);
}

uint64_t sub_23BC2C6AC()
{
  return sub_23BBF377C(&qword_256A768C8, type metadata accessor for FutureWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for FutureWorkoutConfirmation);
}

uint64_t sub_23BC2C6D8()
{
  return sub_23BBF377C(&qword_256A76118, type metadata accessor for StartWorkoutButtonState, (uint64_t)&protocol conformance descriptor for StartWorkoutButtonState);
}

ValueMetadata *type metadata accessor for StartWorkoutConstants()
{
  return &type metadata for StartWorkoutConstants;
}

ValueMetadata *type metadata accessor for WorkoutMediaType()
{
  return &type metadata for WorkoutMediaType;
}

uint64_t destroy for StartWorkoutDetail()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StartWorkoutDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StartWorkoutDetail(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StartWorkoutDetail(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWorkoutDetail(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartWorkoutDetail(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutDetail()
{
  return &type metadata for StartWorkoutDetail;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailError()
{
  return &type metadata for StartWorkoutDetailError;
}

_QWORD *initializeBufferWithCopyOfBuffer for StartWorkoutDetailLoadState(_QWORD *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned __int8 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = *(_QWORD *)a2;
      v11 = *((_QWORD *)a2 + 1);
      v12 = *((_QWORD *)a2 + 2);
      v13 = a2[25];
      v14 = a2[24];
      sub_23BBF8608(*(_QWORD *)a2, v11, v12, v14, v13);
      *a1 = v10;
      a1[1] = v11;
      a1[2] = v12;
      *((_BYTE *)a1 + 24) = v14;
      *((_BYTE *)a1 + 25) = v13;
      v15 = *(int *)(v7 + 48);
      v16 = (char *)a1 + v15;
      v17 = &a2[v15];
      v18 = sub_23BC71C10();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for StartWorkoutDetailLoadState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    sub_23BBF876C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25));
    v4 = a1 + *(int *)(v2 + 48);
    v5 = sub_23BC71C10();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

uint64_t *initializeWithCopy for StartWorkoutDetailLoadState(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned __int8 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = *(_QWORD *)a2;
    v9 = *((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
    v11 = a2[25];
    v12 = a2[24];
    sub_23BBF8608(*(_QWORD *)a2, v9, v10, v12, v11);
    *a1 = v8;
    a1[1] = v9;
    a1[2] = v10;
    *((_BYTE *)a1 + 24) = v12;
    *((_BYTE *)a1 + 25) = v11;
    v13 = *(int *)(v6 + 48);
    v14 = (char *)a1 + v13;
    v15 = &a2[v13];
    v16 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t assignWithCopy for StartWorkoutDetailLoadState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = *(_QWORD *)a2;
      v22 = *(_QWORD *)(a2 + 8);
      v23 = *(_QWORD *)(a2 + 16);
      v24 = *(_BYTE *)(a2 + 25);
      v25 = *(_BYTE *)(a2 + 24);
      sub_23BBF8608(*(_QWORD *)a2, v22, v23, v25, v24);
      v26 = *(_QWORD *)a1;
      v27 = *(_QWORD *)(a1 + 8);
      v28 = *(_QWORD *)(a1 + 16);
      v29 = *(_BYTE *)(a1 + 25);
      *(_QWORD *)a1 = v21;
      *(_QWORD *)(a1 + 8) = v22;
      *(_QWORD *)(a1 + 16) = v23;
      v30 = *(unsigned __int8 *)(a1 + 24);
      *(_BYTE *)(a1 + 24) = v25;
      *(_BYTE *)(a1 + 25) = v24;
      sub_23BBF876C(v26, v27, v28, v30, v29);
      v31 = *(int *)(v6 + 48);
      v32 = a1 + v31;
      v33 = a2 + v31;
      v34 = sub_23BC71C10();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
      return a1;
    }
    sub_23BBE81C0(a1, &qword_256A748B0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = *(_QWORD *)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v14 = *(_BYTE *)(a2 + 25);
  v15 = *(_BYTE *)(a2 + 24);
  sub_23BBF8608(*(_QWORD *)a2, v12, v13, v15, v14);
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v13;
  *(_BYTE *)(a1 + 24) = v15;
  *(_BYTE *)(a1 + 25) = v14;
  v16 = *(int *)(v6 + 48);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

_OWORD *initializeWithTake for StartWorkoutDetailLoadState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
    v8 = *(int *)(v6 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t assignWithTake for StartWorkoutDetailLoadState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v16 = *(_QWORD *)(a2 + 16);
      v17 = *(_BYTE *)(a2 + 24);
      v18 = *(_BYTE *)(a2 + 25);
      v19 = *(_QWORD *)a1;
      v20 = *(_QWORD *)(a1 + 8);
      v21 = *(_QWORD *)(a1 + 16);
      v22 = *(_BYTE *)(a1 + 25);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = v16;
      v23 = *(unsigned __int8 *)(a1 + 24);
      *(_BYTE *)(a1 + 24) = v17;
      *(_BYTE *)(a1 + 25) = v18;
      sub_23BBF876C(v19, v20, v21, v23, v22);
      v24 = *(int *)(v6 + 48);
      v25 = a1 + v24;
      v26 = a2 + v24;
      v27 = sub_23BC71C10();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
      return a1;
    }
    sub_23BBE81C0(a1, &qword_256A748B0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  v11 = *(int *)(v6 + 48);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWorkoutDetailLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2CFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StartWorkoutDetailLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2D01C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BC2D074(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23BC2D0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23BC2D0F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71C10();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ResumeWorkoutConfirmation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BC71C34();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t destroy for ResumeWorkoutConfirmation(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BC71C34();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ResumeWorkoutConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for ResumeWorkoutConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ResumeWorkoutConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ResumeWorkoutConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResumeWorkoutConfirmation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2D3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BC71C34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResumeWorkoutConfirmation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2D410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BC71C34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23BC2D450()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71C34();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlannedWorkoutConfirmation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BC71C34();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlannedWorkoutConfirmation(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlannedWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlannedWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlannedWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for PlannedWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannedWorkoutConfirmation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2D7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23BC71C34();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PlannedWorkoutConfirmation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2D850(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BC71C34();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23BC2D8CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71C34();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FutureWorkoutConfirmation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BC71C34();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for FutureWorkoutConfirmation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_23BC71C10();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for FutureWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for FutureWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for FutureWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for FutureWorkoutConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FutureWorkoutConfirmation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2DCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_23BC71C34();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_23BC71C10();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FutureWorkoutConfirmation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC2DD34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_23BC71C34();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_23BC71C10();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23BC2DDB0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23BC71C34();
  if (v1 <= 0x3F)
  {
    result = sub_23BC71C10();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StartWorkoutButtonState(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, int *);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t started;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  unsigned __int8 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v75)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23BC71C4C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23BC71C34();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    swift_bridgeObjectRetain();
    v75 = v18;
    v18(v14, v15, v16);
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v21, 1, v16))
      {
        memcpy(v20, v21, *(_QWORD *)(v23 + 64));
      }
      else
      {
        v18(v20, v21, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v26 = a3[9];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = type metadata accessor for ResumeWorkoutConfirmation(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v28, 1, v32))
      {
        memcpy(v27, v28, *(_QWORD *)(v30 + 64));
      }
      else
      {
        v75(v27, v28, v16);
        *(_QWORD *)&v27[*(int *)(v32 + 20)] = *(_QWORD *)&v28[*(int *)(v32 + 20)];
        *(_QWORD *)&v27[*(int *)(v32 + 24)] = *(_QWORD *)&v28[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v27, 0, 1, v32);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v34 = a3[10];
    v35 = (char *)v4 + v34;
    v36 = (char *)a2 + v34;
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v40 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
      v41 = *((_QWORD *)v40 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))(v36, 1, v40))
      {
        memcpy(v35, v36, *(_QWORD *)(v38 + 64));
      }
      else
      {
        v75(v35, v36, v16);
        *(_QWORD *)&v35[v40[5]] = *(_QWORD *)&v36[v40[5]];
        *(_QWORD *)&v35[v40[6]] = *(_QWORD *)&v36[v40[6]];
        v42 = v40[7];
        v43 = &v35[v42];
        v44 = &v36[v42];
        v45 = *((_QWORD *)v44 + 1);
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = v45;
        v46 = *(void (**)(char *, _QWORD, uint64_t, int *))(v41 + 56);
        swift_bridgeObjectRetain();
        v46(v35, 0, 1, v40);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v47 = a3[11];
    v48 = (char *)v4 + v47;
    v49 = (char *)a2 + v47;
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v53 = (int *)type metadata accessor for FutureWorkoutConfirmation(0);
      v54 = *((_QWORD *)v53 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v54 + 48))(v49, 1, v53))
      {
        memcpy(v48, v49, *(_QWORD *)(v51 + 64));
      }
      else
      {
        v75(v48, v49, v16);
        *(_QWORD *)&v48[v53[5]] = *(_QWORD *)&v49[v53[5]];
        *(_QWORD *)&v48[v53[6]] = *(_QWORD *)&v49[v53[6]];
        v55 = v53[7];
        v56 = &v48[v55];
        v57 = &v49[v55];
        v58 = sub_23BC71C10();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56))(v48, 0, 1, v53);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v59 = a3[12];
    v60 = (uint64_t *)((char *)v4 + v59);
    v61 = (char *)a2 + v59;
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
    v63 = *(_QWORD *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 2, v62))
    {
      started = type metadata accessor for StartWorkoutDetailLoadState(0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
    }
    else
    {
      v65 = *(_QWORD *)v61;
      v66 = *((_QWORD *)v61 + 1);
      v67 = *((_QWORD *)v61 + 2);
      v68 = v61[25];
      v69 = v61[24];
      sub_23BBF8608(*(_QWORD *)v61, v66, v67, v69, v68);
      *v60 = v65;
      v60[1] = v66;
      v60[2] = v67;
      *((_BYTE *)v60 + 24) = v69;
      *((_BYTE *)v60 + 25) = v68;
      v70 = *(int *)(v62 + 48);
      v71 = (char *)v60 + v70;
      v72 = &v61[v70];
      v73 = sub_23BC71C10();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 2, v62);
    }
  }
  return v4;
}

uint64_t destroy for StartWorkoutButtonState(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  v7 = sub_23BC71C34();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v10 = a1 + a2[8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
  {
    v9(v10, v7);
  }
  v12 = a1 + a2[9];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = type metadata accessor for ResumeWorkoutConfirmation(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14))
      v9(v12, v7);
  }
  v15 = a1 + a2[10];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = type metadata accessor for PlannedWorkoutConfirmation(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 1, v17))
    {
      v9(v15, v7);
      swift_bridgeObjectRelease();
    }
  }
  v18 = a1 + a2[11];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    v20 = type metadata accessor for FutureWorkoutConfirmation(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v18, 1, v20))
    {
      v9(v18, v7);
      v21 = v18 + *(int *)(v20 + 28);
      v22 = sub_23BC71C10();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    }
  }
  v23 = a1 + a2[12];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 2, v24);
  if (!(_DWORD)result)
  {
    sub_23BBF876C(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(unsigned __int8 *)(v23 + 24), *(_BYTE *)(v23 + 25));
    v26 = v23 + *(int *)(v24 + 48);
    v27 = sub_23BC71C10();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  return result;
}

_QWORD *initializeWithCopy for StartWorkoutButtonState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, int *);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t started;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unsigned __int8 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v73)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BC71C4C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23BC71C34();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  swift_bridgeObjectRetain();
  v73 = v17;
  v17(v13, v14, v15);
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15))
    {
      memcpy(v19, v20, *(_QWORD *)(v22 + 64));
    }
    else
    {
      v17(v19, v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[9];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for ResumeWorkoutConfirmation(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v26, 1, v30))
    {
      memcpy(v25, v26, *(_QWORD *)(v28 + 64));
    }
    else
    {
      v73(v25, v26, v15);
      *(_QWORD *)&v25[*(int *)(v30 + 20)] = *(_QWORD *)&v26[*(int *)(v30 + 20)];
      *(_QWORD *)&v25[*(int *)(v30 + 24)] = *(_QWORD *)&v26[*(int *)(v30 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v30);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v32 = a3[10];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v38 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
    v39 = *((_QWORD *)v38 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v39 + 48))(v34, 1, v38))
    {
      memcpy(v33, v34, *(_QWORD *)(v36 + 64));
    }
    else
    {
      v73(v33, v34, v15);
      *(_QWORD *)&v33[v38[5]] = *(_QWORD *)&v34[v38[5]];
      *(_QWORD *)&v33[v38[6]] = *(_QWORD *)&v34[v38[6]];
      v40 = v38[7];
      v41 = &v33[v40];
      v42 = &v34[v40];
      v43 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v43;
      v44 = *(void (**)(char *, _QWORD, uint64_t, int *))(v39 + 56);
      swift_bridgeObjectRetain();
      v44(v33, 0, 1, v38);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v45 = a3[11];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = (int *)type metadata accessor for FutureWorkoutConfirmation(0);
    v52 = *((_QWORD *)v51 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v52 + 48))(v47, 1, v51))
    {
      memcpy(v46, v47, *(_QWORD *)(v49 + 64));
    }
    else
    {
      v73(v46, v47, v15);
      *(_QWORD *)&v46[v51[5]] = *(_QWORD *)&v47[v51[5]];
      *(_QWORD *)&v46[v51[6]] = *(_QWORD *)&v47[v51[6]];
      v53 = v51[7];
      v54 = &v46[v53];
      v55 = &v47[v53];
      v56 = sub_23BC71C10();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v52 + 56))(v46, 0, 1, v51);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v57 = a3[12];
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (char *)a2 + v57;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v61 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 2, v60))
  {
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
  }
  else
  {
    v63 = *(_QWORD *)v59;
    v64 = *((_QWORD *)v59 + 1);
    v65 = *((_QWORD *)v59 + 2);
    v66 = v59[25];
    v67 = v59[24];
    sub_23BBF8608(*(_QWORD *)v59, v64, v65, v67, v66);
    *v58 = v63;
    v58[1] = v64;
    v58[2] = v65;
    *((_BYTE *)v58 + 24) = v67;
    *((_BYTE *)v58 + 25) = v66;
    v68 = *(int *)(v60 + 48);
    v69 = (char *)v58 + v68;
    v70 = &v59[v68];
    v71 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 2, v60);
  }
  return a1;
}

_QWORD *assignWithCopy for StartWorkoutButtonState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  size_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  int *v50;
  uint64_t v51;
  size_t v52;
  int *v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, int *);
  int v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, _QWORD, uint64_t, int *);
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, _QWORD, uint64_t, int *);
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  int v73;
  int *v74;
  uint64_t v75;
  size_t v76;
  int *v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t, int *);
  int v80;
  int v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t started;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  uint64_t v131;
  uint64_t v132;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23BC71C34();
  v131 = *(_QWORD *)(v13 - 8);
  v130 = *(void (**)(char *, char *, uint64_t))(v131 + 24);
  v130(v11, v12, v13);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v131 + 48);
      v24 = v23(v15, 1, v13);
      v25 = v23(v16, 1, v13);
      if (v24)
      {
        if (!v25)
        {
          (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v15, v16, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v15, 0, 1, v13);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v25)
        {
          v130(v15, v16, v13);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v131 + 8))(v15, v13);
      }
      v22 = *(_QWORD *)(v18 + 64);
LABEL_8:
      memcpy(v15, v16, v22);
      goto LABEL_14;
    }
    sub_23BBE81C0((uint64_t)v15, &qword_256A74428);
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74420) - 8) + 64);
    goto LABEL_8;
  }
  if (v21)
    goto LABEL_7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v16, 1, v13))
  {
    memcpy(v15, v16, *(_QWORD *)(v18 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v15, v16, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v15, 0, 1, v13);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_14:
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  v132 = v13;
  if (!v32)
  {
    if (!v33)
    {
      v37 = type metadata accessor for ResumeWorkoutConfirmation(0);
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
      v40 = v39(v27, 1, v37);
      v41 = v39(v28, 1, v37);
      if (v40)
      {
        if (!v41)
        {
          (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v27, v28, v132);
          *(_QWORD *)&v27[*(int *)(v37 + 20)] = *(_QWORD *)&v28[*(int *)(v37 + 20)];
          *(_QWORD *)&v27[*(int *)(v37 + 24)] = *(_QWORD *)&v28[*(int *)(v37 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v27, 0, 1, v37);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v41)
        {
          v130(v27, v28, v132);
          *(_QWORD *)&v27[*(int *)(v37 + 20)] = *(_QWORD *)&v28[*(int *)(v37 + 20)];
          *(_QWORD *)&v27[*(int *)(v37 + 24)] = *(_QWORD *)&v28[*(int *)(v37 + 24)];
          goto LABEL_27;
        }
        sub_23BBF36FC((uint64_t)v27, type metadata accessor for ResumeWorkoutConfirmation);
      }
      v36 = *(_QWORD *)(v30 + 64);
LABEL_21:
      memcpy(v27, v28, v36);
      goto LABEL_27;
    }
    sub_23BBE81C0((uint64_t)v27, &qword_256A74680);
LABEL_20:
    v36 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74688) - 8) + 64);
    goto LABEL_21;
  }
  if (v33)
    goto LABEL_20;
  v34 = type metadata accessor for ResumeWorkoutConfirmation(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v28, 1, v34))
  {
    memcpy(v27, v28, *(_QWORD *)(v30 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v27, v28, v13);
    *(_QWORD *)&v27[*(int *)(v34 + 20)] = *(_QWORD *)&v28[*(int *)(v34 + 20)];
    *(_QWORD *)&v27[*(int *)(v34 + 24)] = *(_QWORD *)&v28[*(int *)(v34 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v27, 0, 1, v34);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_27:
  v42 = a3[10];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      v53 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
      v54 = *((_QWORD *)v53 - 1);
      v55 = *(uint64_t (**)(char *, uint64_t, int *))(v54 + 48);
      v56 = v55(v43, 1, v53);
      v57 = v55(v44, 1, v53);
      if (v56)
      {
        if (!v57)
        {
          (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v43, v44, v132);
          *(_QWORD *)&v43[v53[5]] = *(_QWORD *)&v44[v53[5]];
          *(_QWORD *)&v43[v53[6]] = *(_QWORD *)&v44[v53[6]];
          v58 = v53[7];
          v59 = &v43[v58];
          v60 = &v44[v58];
          *(_QWORD *)v59 = *(_QWORD *)v60;
          *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
          v61 = *(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56);
          swift_bridgeObjectRetain();
          v61(v43, 0, 1, v53);
          goto LABEL_40;
        }
      }
      else
      {
        if (!v57)
        {
          v130(v43, v44, v132);
          *(_QWORD *)&v43[v53[5]] = *(_QWORD *)&v44[v53[5]];
          *(_QWORD *)&v43[v53[6]] = *(_QWORD *)&v44[v53[6]];
          v123 = v53[7];
          v124 = &v43[v123];
          v125 = &v44[v123];
          *(_QWORD *)v124 = *(_QWORD *)v125;
          *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        }
        sub_23BBF36FC((uint64_t)v43, type metadata accessor for PlannedWorkoutConfirmation);
      }
      v52 = *(_QWORD *)(v46 + 64);
LABEL_34:
      memcpy(v43, v44, v52);
      goto LABEL_40;
    }
    sub_23BBE81C0((uint64_t)v43, &qword_256A74660);
LABEL_33:
    v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74668) - 8) + 64);
    goto LABEL_34;
  }
  if (v49)
    goto LABEL_33;
  v50 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
  v51 = *((_QWORD *)v50 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v44, 1, v50))
  {
    memcpy(v43, v44, *(_QWORD *)(v46 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v43, v44, v132);
    *(_QWORD *)&v43[v50[5]] = *(_QWORD *)&v44[v50[5]];
    *(_QWORD *)&v43[v50[6]] = *(_QWORD *)&v44[v50[6]];
    v62 = v50[7];
    v63 = &v43[v62];
    v64 = &v44[v62];
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
    v65 = *(void (**)(char *, _QWORD, uint64_t, int *))(v51 + 56);
    swift_bridgeObjectRetain();
    v65(v43, 0, 1, v50);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_40:
  v66 = a3[11];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
  v72 = v71(v67, 1, v69);
  v73 = v71(v68, 1, v69);
  if (!v72)
  {
    if (!v73)
    {
      v77 = (int *)type metadata accessor for FutureWorkoutConfirmation(0);
      v78 = *((_QWORD *)v77 - 1);
      v79 = *(uint64_t (**)(char *, uint64_t, int *))(v78 + 48);
      v80 = v79(v67, 1, v77);
      v81 = v79(v68, 1, v77);
      if (v80)
      {
        if (!v81)
        {
          (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v67, v68, v132);
          *(_QWORD *)&v67[v77[5]] = *(_QWORD *)&v68[v77[5]];
          *(_QWORD *)&v67[v77[6]] = *(_QWORD *)&v68[v77[6]];
          v82 = v77[7];
          v83 = &v67[v82];
          v84 = &v68[v82];
          v85 = sub_23BC71C10();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56))(v67, 0, 1, v77);
          goto LABEL_53;
        }
      }
      else
      {
        if (!v81)
        {
          v130(v67, v68, v132);
          *(_QWORD *)&v67[v77[5]] = *(_QWORD *)&v68[v77[5]];
          *(_QWORD *)&v67[v77[6]] = *(_QWORD *)&v68[v77[6]];
          v126 = v77[7];
          v127 = &v67[v126];
          v128 = &v68[v126];
          v129 = sub_23BC71C10();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 24))(v127, v128, v129);
          goto LABEL_53;
        }
        sub_23BBF36FC((uint64_t)v67, type metadata accessor for FutureWorkoutConfirmation);
      }
      v76 = *(_QWORD *)(v70 + 64);
LABEL_47:
      memcpy(v67, v68, v76);
      goto LABEL_53;
    }
    sub_23BBE81C0((uint64_t)v67, &qword_256A74640);
LABEL_46:
    v76 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74648) - 8) + 64);
    goto LABEL_47;
  }
  if (v73)
    goto LABEL_46;
  v74 = (int *)type metadata accessor for FutureWorkoutConfirmation(0);
  v75 = *((_QWORD *)v74 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v75 + 48))(v68, 1, v74))
  {
    memcpy(v67, v68, *(_QWORD *)(v70 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v67, v68, v132);
    *(_QWORD *)&v67[v74[5]] = *(_QWORD *)&v68[v74[5]];
    *(_QWORD *)&v67[v74[6]] = *(_QWORD *)&v68[v74[6]];
    v86 = v74[7];
    v87 = &v67[v86];
    v88 = &v68[v86];
    v89 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v75 + 56))(v67, 0, 1, v74);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
LABEL_53:
  v90 = a3[12];
  v91 = (uint64_t)a1 + v90;
  v92 = (char *)a2 + v90;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  v96 = v95(v91, 2, v93);
  v97 = v95((uint64_t)v92, 2, v93);
  if (!v96)
  {
    if (!v97)
    {
      v109 = *(_QWORD *)v92;
      v110 = *((_QWORD *)v92 + 1);
      v111 = *((_QWORD *)v92 + 2);
      v112 = v92[25];
      v113 = v92[24];
      sub_23BBF8608(*(_QWORD *)v92, v110, v111, v113, v112);
      v114 = *(_QWORD *)v91;
      v115 = *(_QWORD *)(v91 + 8);
      v116 = *(_QWORD *)(v91 + 16);
      v117 = *(_BYTE *)(v91 + 25);
      *(_QWORD *)v91 = v109;
      *(_QWORD *)(v91 + 8) = v110;
      *(_QWORD *)(v91 + 16) = v111;
      v118 = *(unsigned __int8 *)(v91 + 24);
      *(_BYTE *)(v91 + 24) = v113;
      *(_BYTE *)(v91 + 25) = v112;
      sub_23BBF876C(v114, v115, v116, v118, v117);
      v119 = *(int *)(v93 + 48);
      v120 = v91 + v119;
      v121 = &v92[v119];
      v122 = sub_23BC71C10();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 24))(v120, v121, v122);
      return a1;
    }
    sub_23BBE81C0(v91, &qword_256A748B0);
    goto LABEL_58;
  }
  if (v97)
  {
LABEL_58:
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy((void *)v91, v92, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
    return a1;
  }
  v98 = *(_QWORD *)v92;
  v99 = *((_QWORD *)v92 + 1);
  v100 = *((_QWORD *)v92 + 2);
  v101 = v92[25];
  v102 = v92[24];
  sub_23BBF8608(*(_QWORD *)v92, v99, v100, v102, v101);
  *(_QWORD *)v91 = v98;
  *(_QWORD *)(v91 + 8) = v99;
  *(_QWORD *)(v91 + 16) = v100;
  *(_BYTE *)(v91 + 24) = v102;
  *(_BYTE *)(v91 + 25) = v101;
  v103 = *(int *)(v93 + 48);
  v104 = v91 + v103;
  v105 = &v92[v103];
  v106 = sub_23BC71C10();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 2, v93);
  return a1;
}

_OWORD *initializeWithTake for StartWorkoutButtonState(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t started;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v60)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23BC71C34();
  v14 = *(_QWORD *)(v13 - 8);
  v60 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v60(v11, v12, v13);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v17, 1, v13))
    {
      memcpy(v16, v17, *(_QWORD *)(v19 + 64));
    }
    else
    {
      v60(v16, v17, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for ResumeWorkoutConfirmation(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v23, 1, v27))
    {
      memcpy(v22, v23, *(_QWORD *)(v25 + 64));
    }
    else
    {
      v60(v22, v23, v13);
      *(_QWORD *)&v22[*(int *)(v27 + 20)] = *(_QWORD *)&v23[*(int *)(v27 + 20)];
      *(_QWORD *)&v22[*(int *)(v27 + 24)] = *(_QWORD *)&v23[*(int *)(v27 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v27);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
    v36 = *((_QWORD *)v35 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v31, 1, v35))
    {
      memcpy(v30, v31, *(_QWORD *)(v33 + 64));
    }
    else
    {
      v60(v30, v31, v13);
      *(_QWORD *)&v30[v35[5]] = *(_QWORD *)&v31[v35[5]];
      *(_QWORD *)&v30[v35[6]] = *(_QWORD *)&v31[v35[6]];
      *(_OWORD *)&v30[v35[7]] = *(_OWORD *)&v31[v35[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v36 + 56))(v30, 0, 1, v35);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v37 = a3[11];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = (int *)type metadata accessor for FutureWorkoutConfirmation(0);
    v44 = *((_QWORD *)v43 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v44 + 48))(v39, 1, v43))
    {
      memcpy(v38, v39, *(_QWORD *)(v41 + 64));
    }
    else
    {
      v60(v38, v39, v13);
      *(_QWORD *)&v38[v43[5]] = *(_QWORD *)&v39[v43[5]];
      *(_QWORD *)&v38[v43[6]] = *(_QWORD *)&v39[v43[6]];
      v45 = v43[7];
      v46 = &v38[v45];
      v47 = &v39[v45];
      v48 = sub_23BC71C10();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v44 + 56))(v38, 0, 1, v43);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  v49 = a3[12];
  v50 = (_OWORD *)((char *)a1 + v49);
  v51 = (_OWORD *)((char *)a2 + v49);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v53 + 48))(v51, 2, v52))
  {
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
  }
  else
  {
    *v50 = *v51;
    *(_OWORD *)((char *)v50 + 10) = *(_OWORD *)((char *)v51 + 10);
    v55 = *(int *)(v52 + 48);
    v56 = (char *)v50 + v55;
    v57 = (char *)v51 + v55;
    v58 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 2, v52);
  }
  return a1;
}

_QWORD *assignWithTake for StartWorkoutButtonState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  size_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  int *v50;
  uint64_t v51;
  size_t v52;
  int *v53;
  uint64_t (*v54)(char *, uint64_t, int *);
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  int *v65;
  uint64_t v66;
  size_t v67;
  int *v68;
  uint64_t (*v69)(char *, uint64_t, int *);
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t started;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23BC71C34();
  v119 = *(_QWORD *)(v14 - 8);
  v118 = *(void (**)(char *, char *, uint64_t))(v119 + 40);
  v118(v12, v13, v14);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 48);
      v25 = v24(v16, 1, v14);
      v26 = v24(v17, 1, v14);
      if (v25)
      {
        if (!v26)
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v16, v17, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v16, 0, 1, v14);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v26)
        {
          v118(v16, v17, v14);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v119 + 8))(v16, v14);
      }
      v23 = *(_QWORD *)(v19 + 64);
LABEL_8:
      memcpy(v16, v17, v23);
      goto LABEL_14;
    }
    sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74420) - 8) + 64);
    goto LABEL_8;
  }
  if (v22)
    goto LABEL_7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v17, 1, v14))
  {
    memcpy(v16, v17, *(_QWORD *)(v19 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v16, v17, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v16, 0, 1, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_14:
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      v38 = type metadata accessor for ResumeWorkoutConfirmation(0);
      v115 = *(_QWORD *)(v38 - 8);
      v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
      v40 = v39(v28, 1, v38);
      v41 = v39(v29, 1, v38);
      if (v40)
      {
        if (!v41)
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v28, v29, v14);
          *(_QWORD *)&v28[*(int *)(v38 + 20)] = *(_QWORD *)&v29[*(int *)(v38 + 20)];
          *(_QWORD *)&v28[*(int *)(v38 + 24)] = *(_QWORD *)&v29[*(int *)(v38 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v28, 0, 1, v38);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v41)
        {
          v118(v28, v29, v14);
          *(_QWORD *)&v28[*(int *)(v38 + 20)] = *(_QWORD *)&v29[*(int *)(v38 + 20)];
          *(_QWORD *)&v28[*(int *)(v38 + 24)] = *(_QWORD *)&v29[*(int *)(v38 + 24)];
          goto LABEL_27;
        }
        sub_23BBF36FC((uint64_t)v28, type metadata accessor for ResumeWorkoutConfirmation);
      }
      v37 = *(_QWORD *)(v31 + 64);
LABEL_21:
      memcpy(v28, v29, v37);
      goto LABEL_27;
    }
    sub_23BBE81C0((uint64_t)v28, &qword_256A74680);
LABEL_20:
    v37 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74688) - 8) + 64);
    goto LABEL_21;
  }
  if (v34)
    goto LABEL_20;
  v35 = type metadata accessor for ResumeWorkoutConfirmation(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v29, 1, v35))
  {
    memcpy(v28, v29, *(_QWORD *)(v31 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v28, v29, v14);
    *(_QWORD *)&v28[*(int *)(v35 + 20)] = *(_QWORD *)&v29[*(int *)(v35 + 20)];
    *(_QWORD *)&v28[*(int *)(v35 + 24)] = *(_QWORD *)&v29[*(int *)(v35 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v28, 0, 1, v35);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_27:
  v42 = a3[10];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74660);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      v53 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
      v116 = *((_QWORD *)v53 - 1);
      v54 = *(uint64_t (**)(char *, uint64_t, int *))(v116 + 48);
      v55 = v54(v43, 1, v53);
      v56 = v54(v44, 1, v53);
      if (v55)
      {
        if (!v56)
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v43, v44, v14);
          *(_QWORD *)&v43[v53[5]] = *(_QWORD *)&v44[v53[5]];
          *(_QWORD *)&v43[v53[6]] = *(_QWORD *)&v44[v53[6]];
          *(_OWORD *)&v43[v53[7]] = *(_OWORD *)&v44[v53[7]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v116 + 56))(v43, 0, 1, v53);
          goto LABEL_40;
        }
      }
      else
      {
        if (!v56)
        {
          v118(v43, v44, v14);
          *(_QWORD *)&v43[v53[5]] = *(_QWORD *)&v44[v53[5]];
          *(_QWORD *)&v43[v53[6]] = *(_QWORD *)&v44[v53[6]];
          v106 = v53[7];
          v107 = &v43[v106];
          v108 = &v44[v106];
          v110 = *(_QWORD *)v108;
          v109 = *((_QWORD *)v108 + 1);
          *(_QWORD *)v107 = v110;
          *((_QWORD *)v107 + 1) = v109;
          swift_bridgeObjectRelease();
          goto LABEL_40;
        }
        sub_23BBF36FC((uint64_t)v43, type metadata accessor for PlannedWorkoutConfirmation);
      }
      v52 = *(_QWORD *)(v46 + 64);
LABEL_34:
      memcpy(v43, v44, v52);
      goto LABEL_40;
    }
    sub_23BBE81C0((uint64_t)v43, &qword_256A74660);
LABEL_33:
    v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74668) - 8) + 64);
    goto LABEL_34;
  }
  if (v49)
    goto LABEL_33;
  v50 = (int *)type metadata accessor for PlannedWorkoutConfirmation(0);
  v51 = *((_QWORD *)v50 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v44, 1, v50))
  {
    memcpy(v43, v44, *(_QWORD *)(v46 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v43, v44, v14);
    *(_QWORD *)&v43[v50[5]] = *(_QWORD *)&v44[v50[5]];
    *(_QWORD *)&v43[v50[6]] = *(_QWORD *)&v44[v50[6]];
    *(_OWORD *)&v43[v50[7]] = *(_OWORD *)&v44[v50[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v51 + 56))(v43, 0, 1, v50);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_40:
  v57 = a3[11];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      v68 = (int *)type metadata accessor for FutureWorkoutConfirmation(0);
      v117 = *((_QWORD *)v68 - 1);
      v69 = *(uint64_t (**)(char *, uint64_t, int *))(v117 + 48);
      v70 = v69(v58, 1, v68);
      v71 = v69(v59, 1, v68);
      if (v70)
      {
        if (!v71)
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v58, v59, v14);
          *(_QWORD *)&v58[v68[5]] = *(_QWORD *)&v59[v68[5]];
          *(_QWORD *)&v58[v68[6]] = *(_QWORD *)&v59[v68[6]];
          v72 = v68[7];
          v73 = &v58[v72];
          v74 = &v59[v72];
          v75 = sub_23BC71C10();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v117 + 56))(v58, 0, 1, v68);
          goto LABEL_53;
        }
      }
      else
      {
        if (!v71)
        {
          v118(v58, v59, v14);
          *(_QWORD *)&v58[v68[5]] = *(_QWORD *)&v59[v68[5]];
          *(_QWORD *)&v58[v68[6]] = *(_QWORD *)&v59[v68[6]];
          v111 = v68[7];
          v112 = &v58[v111];
          v113 = &v59[v111];
          v114 = sub_23BC71C10();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 40))(v112, v113, v114);
          goto LABEL_53;
        }
        sub_23BBF36FC((uint64_t)v58, type metadata accessor for FutureWorkoutConfirmation);
      }
      v67 = *(_QWORD *)(v61 + 64);
LABEL_47:
      memcpy(v58, v59, v67);
      goto LABEL_53;
    }
    sub_23BBE81C0((uint64_t)v58, &qword_256A74640);
LABEL_46:
    v67 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A74648) - 8) + 64);
    goto LABEL_47;
  }
  if (v64)
    goto LABEL_46;
  v65 = (int *)type metadata accessor for FutureWorkoutConfirmation(0);
  v66 = *((_QWORD *)v65 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v66 + 48))(v59, 1, v65))
  {
    memcpy(v58, v59, *(_QWORD *)(v61 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v58, v59, v14);
    *(_QWORD *)&v58[v65[5]] = *(_QWORD *)&v59[v65[5]];
    *(_QWORD *)&v58[v65[6]] = *(_QWORD *)&v59[v65[6]];
    v76 = v65[7];
    v77 = &v58[v76];
    v78 = &v59[v76];
    v79 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v66 + 56))(v58, 0, 1, v65);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_53:
  v80 = a3[12];
  v81 = (uint64_t)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  v86 = v85(v81, 2, v83);
  v87 = v85((uint64_t)v82, 2, v83);
  if (!v86)
  {
    if (!v87)
    {
      v94 = *((_QWORD *)v82 + 2);
      v95 = v82[24];
      v96 = v82[25];
      v97 = *(_QWORD *)v81;
      v98 = *(_QWORD *)(v81 + 8);
      v99 = *(_QWORD *)(v81 + 16);
      v100 = *(_BYTE *)(v81 + 25);
      *(_OWORD *)v81 = *(_OWORD *)v82;
      *(_QWORD *)(v81 + 16) = v94;
      v101 = *(unsigned __int8 *)(v81 + 24);
      *(_BYTE *)(v81 + 24) = v95;
      *(_BYTE *)(v81 + 25) = v96;
      sub_23BBF876C(v97, v98, v99, v101, v100);
      v102 = *(int *)(v83 + 48);
      v103 = v81 + v102;
      v104 = &v82[v102];
      v105 = sub_23BC71C10();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 40))(v103, v104, v105);
      return a1;
    }
    sub_23BBE81C0(v81, &qword_256A748B0);
    goto LABEL_58;
  }
  if (v87)
  {
LABEL_58:
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy((void *)v81, v82, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
    return a1;
  }
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *(_OWORD *)(v81 + 10) = *(_OWORD *)(v82 + 10);
  v88 = *(int *)(v83 + 48);
  v89 = v81 + v88;
  v90 = &v82[v88];
  v91 = sub_23BC71C10();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 2, v83);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWorkoutButtonState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC30688(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t started;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23BC71C4C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      started = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_23BC71C34();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        started = v12;
        v11 = a3[7];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          started = v13;
          v11 = a3[8];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            started = v14;
            v11 = a3[9];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
            {
              started = v15;
              v11 = a3[10];
            }
            else
            {
              v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
              {
                started = v16;
                v11 = a3[11];
              }
              else
              {
                started = type metadata accessor for StartWorkoutDetailLoadState(0);
                v9 = *(_QWORD *)(started - 8);
                v11 = a3[12];
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, started);
  }
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButtonState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC307F8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t started;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23BC71C4C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      started = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_23BC71C34();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        started = v12;
        v11 = a4[7];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          started = v13;
          v11 = a4[8];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            started = v14;
            v11 = a4[9];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74668);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              started = v15;
              v11 = a4[10];
            }
            else
            {
              v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == a3)
              {
                started = v16;
                v11 = a4[11];
              }
              else
              {
                started = type metadata accessor for StartWorkoutDetailLoadState(0);
                v9 = *(_QWORD *)(started - 8);
                v11 = a4[12];
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, started);
  }
  return result;
}

uint64_t sub_23BC30958()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  result = sub_23BC71C4C();
  if (v1 <= 0x3F)
  {
    result = sub_23BC71C34();
    if (v2 <= 0x3F)
    {
      result = sub_23BBF2D28();
      if (v3 <= 0x3F)
      {
        result = sub_23BC30A80();
        if (v4 <= 0x3F)
        {
          result = sub_23BC30B50();
          if (v5 <= 0x3F)
          {
            result = sub_23BC30C20();
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for StartWorkoutDetailLoadState(319);
              if (v7 <= 0x3F)
              {
                swift_initStructMetadata();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_23BC30A80()
{
  uint64_t result;

  result = qword_256A76B80;
  if (!qword_256A76B80)
  {
    type metadata accessor for ResumeWorkoutConfirmation(255);
    sub_23BBF377C(&qword_256A76B88, type metadata accessor for ResumeWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for ResumeWorkoutConfirmation);
    sub_23BBF377C(&qword_256A76B90, type metadata accessor for ResumeWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for ResumeWorkoutConfirmation);
    sub_23BBF377C(&qword_256A76B98, type metadata accessor for ResumeWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for ResumeWorkoutConfirmation);
    type metadata accessor for ModalPresentation();
  }
  return result;
}

uint64_t sub_23BC30B50()
{
  uint64_t result;

  result = qword_256A76BA0;
  if (!qword_256A76BA0)
  {
    type metadata accessor for PlannedWorkoutConfirmation(255);
    sub_23BBF377C(&qword_256A76BA8, type metadata accessor for PlannedWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for PlannedWorkoutConfirmation);
    sub_23BBF377C(&qword_256A76BB0, type metadata accessor for PlannedWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for PlannedWorkoutConfirmation);
    sub_23BBF377C(&qword_256A76BB8, type metadata accessor for PlannedWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for PlannedWorkoutConfirmation);
    type metadata accessor for ModalPresentation();
  }
  return result;
}

uint64_t sub_23BC30C20()
{
  uint64_t result;

  result = qword_256A76BC0;
  if (!qword_256A76BC0)
  {
    type metadata accessor for FutureWorkoutConfirmation(255);
    sub_23BBF377C(&qword_256A76BC8, type metadata accessor for FutureWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for FutureWorkoutConfirmation);
    sub_23BBF377C(&qword_256A76BD0, type metadata accessor for FutureWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for FutureWorkoutConfirmation);
    sub_23BBF377C(qword_256A76BD8, type metadata accessor for FutureWorkoutConfirmation, (uint64_t)&protocol conformance descriptor for FutureWorkoutConfirmation);
    type metadata accessor for ModalPresentation();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StartWorkoutButtonState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23BC30D3C + 4 * byte_23BC795FE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23BC30D70 + 4 * byte_23BC795F9[v4]))();
}

uint64_t sub_23BC30D70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC30D78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC30D80);
  return result;
}

uint64_t sub_23BC30D8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC30D94);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23BC30D98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC30DA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonState.CodingKeys()
{
  return &type metadata for StartWorkoutButtonState.CodingKeys;
}

ValueMetadata *type metadata accessor for FutureWorkoutConfirmation.CodingKeys()
{
  return &type metadata for FutureWorkoutConfirmation.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannedWorkoutConfirmation.CodingKeys()
{
  return &type metadata for PlannedWorkoutConfirmation.CodingKeys;
}

ValueMetadata *type metadata accessor for ResumeWorkoutConfirmation.CodingKeys()
{
  return &type metadata for ResumeWorkoutConfirmation.CodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailLoadState.CodingKeys()
{
  return &type metadata for StartWorkoutDetailLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailLoadState.IdleCodingKeys()
{
  return &type metadata for StartWorkoutDetailLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailLoadState.FetchingCodingKeys()
{
  return &type metadata for StartWorkoutDetailLoadState.FetchingCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailLoadState.FetchedCodingKeys()
{
  return &type metadata for StartWorkoutDetailLoadState.FetchedCodingKeys;
}

uint64_t _s14FitnessActions23StartWorkoutDetailErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC30E7C + 4 * byte_23BC79608[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC30EB0 + 4 * byte_23BC79603[v4]))();
}

uint64_t sub_23BC30EB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC30EB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC30EC0);
  return result;
}

uint64_t sub_23BC30ECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC30ED4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC30ED8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC30EE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailError.CodingKeys()
{
  return &type metadata for StartWorkoutDetailError.CodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailError.UnknownCodingKeys()
{
  return &type metadata for StartWorkoutDetailError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StartWorkoutDetailError.DisabledMediaTypeCodingKeys()
{
  return &type metadata for StartWorkoutDetailError.DisabledMediaTypeCodingKeys;
}

uint64_t _s14FitnessActions25ResumeWorkoutConfirmationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC30F68 + 4 * byte_23BC79612[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC30F9C + 4 * byte_23BC7960D[v4]))();
}

uint64_t sub_23BC30F9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC30FA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC30FACLL);
  return result;
}

uint64_t sub_23BC30FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC30FC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC30FC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC30FCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutDetail.CodingKeys()
{
  return &type metadata for StartWorkoutDetail.CodingKeys;
}

uint64_t _s14FitnessActions16WorkoutMediaTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC31034 + 4 * byte_23BC7961C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC31068 + 4 * byte_23BC79617[v4]))();
}

uint64_t sub_23BC31068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC31070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC31078);
  return result;
}

uint64_t sub_23BC31084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC3108CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC31090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC31098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutMediaType.CodingKeys()
{
  return &type metadata for WorkoutMediaType.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutMediaType.VideoCodingKeys()
{
  return &type metadata for WorkoutMediaType.VideoCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutMediaType.GuidedRunCodingKeys()
{
  return &type metadata for WorkoutMediaType.GuidedRunCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutMediaType.GuidedWalkCodingKeys()
{
  return &type metadata for WorkoutMediaType.GuidedWalkCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutMediaType.MeditationCodingKeys()
{
  return &type metadata for WorkoutMediaType.MeditationCodingKeys;
}

unint64_t sub_23BC310F8()
{
  unint64_t result;

  result = qword_256A76C28;
  if (!qword_256A76C28)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A0C8, &type metadata for WorkoutMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C28);
  }
  return result;
}

unint64_t sub_23BC31140()
{
  unint64_t result;

  result = qword_256A76C30;
  if (!qword_256A76C30)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A180, &type metadata for StartWorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C30);
  }
  return result;
}

unint64_t sub_23BC31188()
{
  unint64_t result;

  result = qword_256A76C38;
  if (!qword_256A76C38)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A2D8, &type metadata for StartWorkoutDetailError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C38);
  }
  return result;
}

unint64_t sub_23BC311D0()
{
  unint64_t result;

  result = qword_256A76C40;
  if (!qword_256A76C40)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A390, &type metadata for StartWorkoutDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C40);
  }
  return result;
}

unint64_t sub_23BC31218()
{
  unint64_t result;

  result = qword_256A76C48;
  if (!qword_256A76C48)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A4E8, &type metadata for StartWorkoutDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C48);
  }
  return result;
}

unint64_t sub_23BC31260()
{
  unint64_t result;

  result = qword_256A76C50;
  if (!qword_256A76C50)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A5A0, &type metadata for ResumeWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C50);
  }
  return result;
}

unint64_t sub_23BC312A8()
{
  unint64_t result;

  result = qword_256A76C58;
  if (!qword_256A76C58)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A658, &type metadata for PlannedWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C58);
  }
  return result;
}

unint64_t sub_23BC312F0()
{
  unint64_t result;

  result = qword_256A76C60;
  if (!qword_256A76C60)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A710, &type metadata for FutureWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C60);
  }
  return result;
}

unint64_t sub_23BC31338()
{
  unint64_t result;

  result = qword_256A76C68;
  if (!qword_256A76C68)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A7C8, &type metadata for StartWorkoutButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C68);
  }
  return result;
}

unint64_t sub_23BC31380()
{
  unint64_t result;

  result = qword_256A76C70;
  if (!qword_256A76C70)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A738, &type metadata for StartWorkoutButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C70);
  }
  return result;
}

unint64_t sub_23BC313C8()
{
  unint64_t result;

  result = qword_256A76C78;
  if (!qword_256A76C78)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A760, &type metadata for StartWorkoutButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C78);
  }
  return result;
}

unint64_t sub_23BC31410()
{
  unint64_t result;

  result = qword_256A76C80;
  if (!qword_256A76C80)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A680, &type metadata for FutureWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C80);
  }
  return result;
}

unint64_t sub_23BC31458()
{
  unint64_t result;

  result = qword_256A76C88;
  if (!qword_256A76C88)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A6A8, &type metadata for FutureWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C88);
  }
  return result;
}

unint64_t sub_23BC314A0()
{
  unint64_t result;

  result = qword_256A76C90;
  if (!qword_256A76C90)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A5C8, &type metadata for PlannedWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C90);
  }
  return result;
}

unint64_t sub_23BC314E8()
{
  unint64_t result;

  result = qword_256A76C98;
  if (!qword_256A76C98)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A5F0, &type metadata for PlannedWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76C98);
  }
  return result;
}

unint64_t sub_23BC31530()
{
  unint64_t result;

  result = qword_256A76CA0;
  if (!qword_256A76CA0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A510, &type metadata for ResumeWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CA0);
  }
  return result;
}

unint64_t sub_23BC31578()
{
  unint64_t result;

  result = qword_256A76CA8;
  if (!qword_256A76CA8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A538, &type metadata for ResumeWorkoutConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CA8);
  }
  return result;
}

unint64_t sub_23BC315C0()
{
  unint64_t result;

  result = qword_256A76CB0;
  if (!qword_256A76CB0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A408, &type metadata for StartWorkoutDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CB0);
  }
  return result;
}

unint64_t sub_23BC31608()
{
  unint64_t result;

  result = qword_256A76CB8;
  if (!qword_256A76CB8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A430, &type metadata for StartWorkoutDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CB8);
  }
  return result;
}

unint64_t sub_23BC31650()
{
  unint64_t result;

  result = qword_256A76CC0;
  if (!qword_256A76CC0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A3B8, &type metadata for StartWorkoutDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CC0);
  }
  return result;
}

unint64_t sub_23BC31698()
{
  unint64_t result;

  result = qword_256A76CC8;
  if (!qword_256A76CC8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A3E0, &type metadata for StartWorkoutDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CC8);
  }
  return result;
}

unint64_t sub_23BC316E0()
{
  unint64_t result;

  result = qword_256A76CD0;
  if (!qword_256A76CD0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A300, &type metadata for StartWorkoutDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CD0);
  }
  return result;
}

unint64_t sub_23BC31728()
{
  unint64_t result;

  result = qword_256A76CD8;
  if (!qword_256A76CD8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A328, &type metadata for StartWorkoutDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CD8);
  }
  return result;
}

unint64_t sub_23BC31770()
{
  unint64_t result;

  result = qword_256A76CE0;
  if (!qword_256A76CE0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A458, &type metadata for StartWorkoutDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CE0);
  }
  return result;
}

unint64_t sub_23BC317B8()
{
  unint64_t result;

  result = qword_256A76CE8;
  if (!qword_256A76CE8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A480, &type metadata for StartWorkoutDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CE8);
  }
  return result;
}

unint64_t sub_23BC31800()
{
  unint64_t result;

  result = qword_256A76CF0;
  if (!qword_256A76CF0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A1F8, &type metadata for StartWorkoutDetailError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CF0);
  }
  return result;
}

unint64_t sub_23BC31848()
{
  unint64_t result;

  result = qword_256A76CF8;
  if (!qword_256A76CF8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A220, &type metadata for StartWorkoutDetailError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76CF8);
  }
  return result;
}

unint64_t sub_23BC31890()
{
  unint64_t result;

  result = qword_256A76D00;
  if (!qword_256A76D00)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A1A8, &type metadata for StartWorkoutDetailError.DisabledMediaTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D00);
  }
  return result;
}

unint64_t sub_23BC318D8()
{
  unint64_t result;

  result = qword_256A76D08;
  if (!qword_256A76D08)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A1D0, &type metadata for StartWorkoutDetailError.DisabledMediaTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D08);
  }
  return result;
}

unint64_t sub_23BC31920()
{
  unint64_t result;

  result = qword_256A76D10;
  if (!qword_256A76D10)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A248, &type metadata for StartWorkoutDetailError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D10);
  }
  return result;
}

unint64_t sub_23BC31968()
{
  unint64_t result;

  result = qword_256A76D18;
  if (!qword_256A76D18)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A270, &type metadata for StartWorkoutDetailError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D18);
  }
  return result;
}

unint64_t sub_23BC319B0()
{
  unint64_t result;

  result = qword_256A76D20;
  if (!qword_256A76D20)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A0F0, &type metadata for StartWorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D20);
  }
  return result;
}

unint64_t sub_23BC319F8()
{
  unint64_t result;

  result = qword_256A76D28;
  if (!qword_256A76D28)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A118, &type metadata for StartWorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D28);
  }
  return result;
}

unint64_t sub_23BC31A40()
{
  unint64_t result;

  result = qword_256A76D30;
  if (!qword_256A76D30)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79FE8, &type metadata for WorkoutMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D30);
  }
  return result;
}

unint64_t sub_23BC31A88()
{
  unint64_t result;

  result = qword_256A76D38;
  if (!qword_256A76D38)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A010, &type metadata for WorkoutMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D38);
  }
  return result;
}

unint64_t sub_23BC31AD0()
{
  unint64_t result;

  result = qword_256A76D40;
  if (!qword_256A76D40)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79F98, &type metadata for WorkoutMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D40);
  }
  return result;
}

unint64_t sub_23BC31B18()
{
  unint64_t result;

  result = qword_256A76D48;
  if (!qword_256A76D48)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79FC0, &type metadata for WorkoutMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D48);
  }
  return result;
}

unint64_t sub_23BC31B60()
{
  unint64_t result;

  result = qword_256A76D50;
  if (!qword_256A76D50)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79F48, &type metadata for WorkoutMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D50);
  }
  return result;
}

unint64_t sub_23BC31BA8()
{
  unint64_t result;

  result = qword_256A76D58;
  if (!qword_256A76D58)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79F70, &type metadata for WorkoutMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D58);
  }
  return result;
}

unint64_t sub_23BC31BF0()
{
  unint64_t result;

  result = qword_256A76D60;
  if (!qword_256A76D60)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79EF8, &type metadata for WorkoutMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D60);
  }
  return result;
}

unint64_t sub_23BC31C38()
{
  unint64_t result;

  result = qword_256A76D68;
  if (!qword_256A76D68)
  {
    result = MEMORY[0x24260ED10](&unk_23BC79F20, &type metadata for WorkoutMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D68);
  }
  return result;
}

unint64_t sub_23BC31C80()
{
  unint64_t result;

  result = qword_256A76D70;
  if (!qword_256A76D70)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A038, &type metadata for WorkoutMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D70);
  }
  return result;
}

unint64_t sub_23BC31CC8()
{
  unint64_t result;

  result = qword_256A76D78;
  if (!qword_256A76D78)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7A060, &type metadata for WorkoutMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76D78);
  }
  return result;
}

uint64_t sub_23BC31D0C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82160 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023BC82700 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BC31E60(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC31F44(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x637465467473616CLL && a2 == 0xEB00000000646568)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC32024(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7669746341776172 && a2 == 0xEF65707954797469 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6954656D75736572 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BC3218C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7669746341776172 && a2 == 0xEF65707954797469 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6954656D75736572 && a2 == 0xEA0000000000656DLL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5474756F6B726F77 && a2 == 0xEC000000656C7469)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BC32360(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7669746341776172 && a2 == 0xEF65707954797469 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6954656D75736572 && a2 == 0xEA0000000000656DLL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC82740)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BC32524(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82160 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82760 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023BC82780 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC827A0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000023BC827C0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023BC827F0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F4C6C6961746564 && a2 == 0xEF65746174536461)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t BookmarkButtonEnvironment.init(resolveBookmark:requestAddBookmark:requestRemoveBookmark:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t type metadata accessor for BookmarkButtonEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BookmarkButtonEnvironment);
}

ValueMetadata *type metadata accessor for ResumeWorkoutConfirmationDialog()
{
  return &type metadata for ResumeWorkoutConfirmationDialog;
}

uint64_t sub_23BC328BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC328CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t started;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  v0 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v1);
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 2, v5))
  {
    sub_23BC72288();
    type metadata accessor for LocalizationBundle();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_23BC71CDC();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    return sub_23BC72300();
  }
  else
  {
    v9 = &v4[*(int *)(v5 + 48)];
    if ((v4[25] & 1) != 0)
    {
      sub_23BC72288();
      type metadata accessor for LocalizationBundle();
      v10 = swift_getObjCClassFromMetadata();
      v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v10);
      sub_23BC71CDC();
      swift_getKeyPath();
      sub_23BC7218C();
      swift_release();
      swift_release();
      v8 = sub_23BC72300();
      v12 = sub_23BC71C10();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9, v12);
    }
    else
    {
      v22 = *(_QWORD *)v4;
      v23 = v9;
      v13 = *((_QWORD *)v4 + 1);
      v20 = *((_QWORD *)v4 + 2);
      v21 = v13;
      v14 = v4[24];
      sub_23BC72288();
      type metadata accessor for LocalizationBundle();
      v15 = swift_getObjCClassFromMetadata();
      v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v15);
      sub_23BC71CDC();
      swift_getKeyPath();
      sub_23BC7218C();
      swift_release();
      swift_release();
      v8 = sub_23BC72300();
      sub_23BBF876C(v22, v21, v20, v14, 0);
      v17 = sub_23BC71C10();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v23, v17);
    }
  }
  return v8;
}

uint64_t sub_23BC32D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _DWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;

  v32 = a1;
  v33 = a5;
  v7 = a4 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v26 = *(_QWORD *)(v8 - 8);
  v27 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v25 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76E38);
  v30 = *(_QWORD *)(v17 - 8);
  v31 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v29 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23BC328CC();
  v37 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  *(_BYTE *)(v20 + 32) = v7;
  sub_23BBE7EBC();
  sub_23BC720C0();
  v28 = v34;
  v25[1] = v35;
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  sub_23BBE817C((uint64_t)v16, (uint64_t)v14, &qword_256A74688);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v27) == 1)
  {
    v21 = type metadata accessor for ResumeWorkoutConfirmation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 1, 1, v21);
  }
  else
  {
    sub_23BBE87F8((uint64_t)v14, (uint64_t)v10, &qword_256A74680);
  }
  v22 = sub_23BBE81C0((uint64_t)v16, &qword_256A74688);
  MEMORY[0x24BDAC7A8](v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76E40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76E48);
  type metadata accessor for ResumeWorkoutConfirmation(0);
  sub_23BBE869C(&qword_256A76E50, &qword_256A76E40, MEMORY[0x24BDEFB78]);
  sub_23BC04488();
  sub_23BBE869C(&qword_256A76E58, &qword_256A76E48, MEMORY[0x24BDF5428]);
  v23 = v29;
  sub_23BC71F4C();
  swift_release();
  swift_release();
  sub_23BBE81C0((uint64_t)v10, &qword_256A74680);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v33, v23, v31);
}

uint64_t sub_23BC33170@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;

  v42 = a3;
  v43 = a1;
  v44 = a2;
  v48 = a4;
  v4 = sub_23BC71C34();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74698);
  MEMORY[0x24BDAC7A8](v45);
  v47 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v41 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v39 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74680);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v39 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74688);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15);
  if ((_DWORD)result == 1)
  {
    v26 = 0;
  }
  else
  {
    sub_23BBE87F8((uint64_t)v24, (uint64_t)v21, &qword_256A74680);
    sub_23BBE817C((uint64_t)v21, (uint64_t)v19, &qword_256A74680);
    v27 = type metadata accessor for ResumeWorkoutConfirmation(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v19, 1, v27) == 1)
    {
      sub_23BBE81C0((uint64_t)v19, &qword_256A74680);
      v28 = v46;
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
      v29(v14, 1, 1, v4);
    }
    else
    {
      v28 = v46;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v14, v19, v4);
      sub_23BBF36FC((uint64_t)v19, type metadata accessor for ResumeWorkoutConfirmation);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v29(v14, 0, 1, v4);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
    sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
    sub_23BC71CDC();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v29(v12, 0, 1, v4);
    v30 = v47;
    v31 = v47 + *(int *)(v45 + 48);
    v32 = &qword_256A74428;
    sub_23BBE817C((uint64_t)v14, v47, &qword_256A74428);
    sub_23BBE817C((uint64_t)v12, v31, &qword_256A74428);
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (v33(v30, 1, v4) == 1)
    {
      sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v21, &qword_256A74680);
      if (v33(v31, 1, v4) == 1)
      {
        v34 = -1;
      }
      else
      {
        v32 = &qword_256A74698;
        v34 = 0;
      }
    }
    else
    {
      v35 = v41;
      sub_23BBE817C(v30, v41, &qword_256A74428);
      if (v33(v31, 1, v4) == 1)
      {
        sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v21, &qword_256A74680);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v35, v4);
        v34 = 0;
        v32 = &qword_256A74698;
      }
      else
      {
        v36 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v40, v31, v4);
        sub_23BC06D14();
        v37 = v35;
        v34 = sub_23BC7227C();
        v38 = *(void (**)(char *, uint64_t))(v28 + 8);
        v38(v36, v4);
        v32 = &qword_256A74428;
        sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v21, &qword_256A74680);
        v38((char *)v37, v4);
      }
    }
    result = sub_23BBE81C0(v30, v32);
    v26 = v34 & 1;
  }
  *v48 = v26;
  return result;
}

uint64_t sub_23BC33688()
{
  type metadata accessor for StartWorkoutButtonAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BC336B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[3];
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;

  v54 = a1;
  v60 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ResumeWorkoutConfirmation(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A742B0);
  v15 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v17 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76E60);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v59 = (uint64_t)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v58 = (uint64_t)v53 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v56 = (char *)v53 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v55 = (char *)v53 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v62 = (uint64_t)v53 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v64 = (uint64_t)v53 - v29;
  sub_23BC34340(a1, (uint64_t)v14);
  v30 = *(unsigned __int8 *)(v12 + 80);
  v31 = (v30 + 33) & ~v30;
  v53[1] = v31 + v13;
  v53[0] = v30 | 7;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = a2;
  *(_QWORD *)(v32 + 24) = a3;
  a4 &= 1u;
  *(_BYTE *)(v32 + 32) = a4;
  sub_23BC34388((uint64_t)v14, v32 + v31);
  v71 = a2;
  v72 = a3;
  v61 = a3;
  v73 = a4;
  sub_23BBE7EBC();
  sub_23BC72048();
  v33 = sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
  v35 = v62;
  v34 = v63;
  v53[2] = v33;
  sub_23BC71F64();
  v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v17, v34);
  sub_23BBE87F8(v35, v64, &qword_256A76E60);
  sub_23BC34340(v54, (uint64_t)v14);
  v37 = swift_allocObject();
  v38 = v61;
  *(_QWORD *)(v37 + 16) = a2;
  *(_QWORD *)(v37 + 24) = v38;
  *(_BYTE *)(v37 + 32) = a4;
  sub_23BC34388((uint64_t)v14, v37 + v31);
  v68 = a2;
  v69 = v38;
  v70 = a4;
  sub_23BBE7EBC();
  sub_23BC72048();
  v39 = (uint64_t)v55;
  v40 = v63;
  sub_23BC71F64();
  v36(v17, v40);
  sub_23BBE87F8(v39, v35, &qword_256A76E60);
  v41 = v57;
  sub_23BC71CAC();
  v42 = sub_23BC71CB8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
  v43 = swift_allocObject();
  v44 = v61;
  *(_QWORD *)(v43 + 16) = a2;
  *(_QWORD *)(v43 + 24) = v44;
  *(_BYTE *)(v43 + 32) = a4;
  v65 = a2;
  v66 = v44;
  v67 = a4;
  sub_23BBE7EBC();
  sub_23BC7203C();
  v45 = (uint64_t)v56;
  sub_23BC71F64();
  v36(v17, v40);
  sub_23BBE87F8(v45, v39, &qword_256A76E60);
  v46 = v64;
  sub_23BBE817C(v64, v45, &qword_256A76E60);
  v47 = v62;
  v48 = v58;
  sub_23BBE817C(v62, v58, &qword_256A76E60);
  v49 = v59;
  sub_23BBE817C(v39, v59, &qword_256A76E60);
  v50 = v60;
  sub_23BBE817C(v45, v60, &qword_256A76E60);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76E68);
  sub_23BBE817C(v48, v50 + *(int *)(v51 + 48), &qword_256A76E60);
  sub_23BBE817C(v49, v50 + *(int *)(v51 + 64), &qword_256A76E60);
  sub_23BBE81C0(v39, &qword_256A76E60);
  sub_23BBE81C0(v47, &qword_256A76E60);
  sub_23BBE81C0(v46, &qword_256A76E60);
  sub_23BBE81C0(v49, &qword_256A76E60);
  sub_23BBE81C0(v48, &qword_256A76E60);
  return sub_23BBE81C0(v45, &qword_256A76E60);
}

uint64_t sub_23BC33C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t started;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  v8 = type metadata accessor for ResumeWorkoutConfirmation(0);
  v9 = *(_QWORD *)(a4 + *(int *)(v8 + 20));
  *v7 = *(_QWORD *)(a4 + *(int *)(v8 + 24));
  v7[1] = v9;
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BBF36FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
}

uint64_t sub_23BC33DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t started;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v7 = (uint64_t *)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  *v7 = *(_QWORD *)(a4 + *(int *)(type metadata accessor for ResumeWorkoutConfirmation(0) + 20));
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BBF36FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
}

uint64_t sub_23BC33ED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_23BC34080()
{
  uint64_t started;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BBF36FC((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
}

uint64_t sub_23BC34174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_23BC34318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BC32D90(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_23BC34328@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23BC33170(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_23BC34334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BC336B8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_23BC34340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResumeWorkoutConfirmation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC34388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResumeWorkoutConfirmation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC343CC()
{
  return sub_23BC3448C(sub_23BC33C9C);
}

uint64_t sub_23BC343D8@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC34174(a1);
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ResumeWorkoutConfirmation(0) - 8) + 80);
  v2 = (v1 + 33) & ~v1;
  sub_23BBE7EAC();
  v3 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23BC34480()
{
  return sub_23BC3448C(sub_23BC33DBC);
}

uint64_t sub_23BC3448C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ResumeWorkoutConfirmation(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), v1 + ((v2 + 33) & ~v2));
}

uint64_t sub_23BC344D0@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC33ED4(a1);
}

uint64_t sub_23BC344E0()
{
  return sub_23BC34080();
}

uint64_t sub_23BC344EC@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC34174(a1);
}

uint64_t sub_23BC34514()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A76E40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A76E48);
  type metadata accessor for ResumeWorkoutConfirmation(255);
  sub_23BBE869C(&qword_256A76E50, &qword_256A76E40, MEMORY[0x24BDEFB78]);
  sub_23BC04488();
  sub_23BBE869C(&qword_256A76E58, &qword_256A76E48, MEMORY[0x24BDF5428]);
  return swift_getOpaqueTypeConformance2();
}

__n128 BookmarkButtonFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

void BookmarkButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  __int128 *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[4];
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v17 = a3;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76E70);
  v15[3] = *(_QWORD *)(v16 - 8);
  v9 = MEMORY[0x24BDAC7A8](v16);
  v10 = *(_QWORD *)(a5 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v12);
  v13 = v5[1];
  v18 = *v5;
  v19 = v13;
  v20 = v5[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v15 - v14, a2, v10);
  __asm { BR              X10 }
}

uint64_t sub_23BC346F4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;

  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
  *(_QWORD *)(v7 - 280) = v3 + v8[12];
  v9 = v3 + v8[16];
  *(_QWORD *)(v7 - 272) = v3 + v8[20];
  *(_QWORD *)(v7 - 288) = v3 + v8[24];
  v10 = *(_QWORD *)(v6 + 24);
  sub_23BC725F4();
  *(_BYTE *)(v7 - 152) = 0;
  sub_23BBF4754(v7 - 192, v7 - 240);
  sub_23BBF4790();
  sub_23BC72558();
  sub_23BBF47D4(v7 - 192);
  v11 = *MEMORY[0x24BE2B570];
  v12 = sub_23BC72180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v9, v11, v12);
  v1(v5, v2, v0);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v0;
  *(_QWORD *)(v14 + 24) = v10;
  v15 = *(_OWORD *)(v7 - 128);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v7 - 144);
  *(_OWORD *)(v14 + 48) = v15;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v7 - 112);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v14 + v13, v5, v0);
  v16 = *(_QWORD **)(v7 - 288);
  *v16 = &unk_256A76EA8;
  v16[1] = v14;
  sub_23BC34E9C(v7 - 144);
  sub_23BBF4AE8();
  sub_23BBF4AEC(*(_QWORD *)(v7 - 272));
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 264) + 104))(v3, *MEMORY[0x24BE2B438], *(_QWORD *)(v7 - 256));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76E88);
  sub_23BC723A8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v0);
}

uint64_t sub_23BC34C08(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = sub_23BC723F0();
  v3[3] = sub_23BC723E4();
  v8 = (uint64_t (*)(uint64_t))(*(int *)*a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23BC34C88;
  return v8(a3);
}

uint64_t sub_23BC34C88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC34D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = sub_23BC723F0();
  v3[3] = sub_23BC723E4();
  v8 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23BBFD5A0;
  return v8(a3);
}

uint64_t sub_23BC34D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = sub_23BC723F0();
  v3[3] = sub_23BC723E4();
  v8 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23BC34C88;
  return v8(a3);
}

uint64_t sub_23BC34E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  v5 = v1 + 32;
  v6 = v1 + ((v4 + 80) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BC34D90(a1, v5, v6);
}

uint64_t sub_23BC34E9C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BC34EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  v5 = v1 + 32;
  v6 = v1 + ((v4 + 80) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF5304;
  return sub_23BC34D10(a1, v5, v6);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BC34FF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  v5 = (_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 80) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BC34C08(a1, v5, v6);
}

uint64_t BookmarkButtonFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void sub_23BC35084(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  BookmarkButtonFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4, a5);
}

unint64_t sub_23BC35090()
{
  unint64_t result;

  result = qword_256A76EB0;
  if (!qword_256A76EB0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for BookmarkButtonAction, &type metadata for BookmarkButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A76EB0);
  }
  return result;
}

unint64_t sub_23BC350D8()
{
  unint64_t result;

  result = qword_256A76EB8[0];
  if (!qword_256A76EB8[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for BookmarkButtonAction, &type metadata for BookmarkButtonAction);
    atomic_store(result, qword_256A76EB8);
  }
  return result;
}

void sub_23BC3511C()
{
  JUMPOUT(0x24260ED10);
}

uint64_t type metadata accessor for BookmarkButtonFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BookmarkButtonFeature);
}

BOOL static ViewStackButtonAction.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23BC3514C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0x6570704177656976;
}

uint64_t sub_23BC35190()
{
  char *v0;

  return sub_23BC3514C(*v0);
}

uint64_t sub_23BC35198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC3560C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC351BC()
{
  sub_23BC3547C();
  return sub_23BC72828();
}

uint64_t sub_23BC351E4()
{
  sub_23BC3547C();
  return sub_23BC72834();
}

uint64_t sub_23BC3520C()
{
  sub_23BC35504();
  return sub_23BC72828();
}

uint64_t sub_23BC35234()
{
  sub_23BC35504();
  return sub_23BC72834();
}

uint64_t sub_23BC3525C()
{
  sub_23BC354C0();
  return sub_23BC72828();
}

uint64_t sub_23BC35284()
{
  sub_23BC354C0();
  return sub_23BC72834();
}

uint64_t ViewStackButtonAction.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76F40);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76F48);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76F50);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC3547C();
  sub_23BC7281C();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_23BC354C0();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_23BC35504();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_23BC3547C()
{
  unint64_t result;

  result = qword_256A76F58;
  if (!qword_256A76F58)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B2E8, &type metadata for ViewStackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F58);
  }
  return result;
}

unint64_t sub_23BC354C0()
{
  unint64_t result;

  result = qword_256A76F60;
  if (!qword_256A76F60)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B298, &type metadata for ViewStackButtonAction.ViewStackButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F60);
  }
  return result;
}

unint64_t sub_23BC35504()
{
  unint64_t result;

  result = qword_256A76F68;
  if (!qword_256A76F68)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B248, &type metadata for ViewStackButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F68);
  }
  return result;
}

uint64_t ViewStackButtonAction.init(from:)(_QWORD *a1)
{
  return sub_23BC35700(a1) & 1;
}

uint64_t sub_23BC35560@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BC35700(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_23BC3558C(_QWORD *a1)
{
  unsigned __int8 *v1;

  return ViewStackButtonAction.encode(to:)(a1, *v1);
}

uint64_t ViewStackButtonAction.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t ViewStackButtonAction.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BC3560C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC82950)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC35700(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76FB0);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76FB8);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76FC0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC3547C();
  v10 = v26;
  sub_23BC72810();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_23BC72690();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_23BC725A0();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v19 = &type metadata for ViewStackButtonAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_23BC354C0();
    sub_23BC72600();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_23BC35504();
    sub_23BC72600();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

unint64_t sub_23BC35A30()
{
  unint64_t result;

  result = qword_256A76F70;
  if (!qword_256A76F70)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for ViewStackButtonAction, &type metadata for ViewStackButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A76F70);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewStackButtonAction()
{
  return &type metadata for ViewStackButtonAction;
}

uint64_t _s14FitnessActions21ViewStackButtonActionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC35AD4 + 4 * byte_23BC7AFB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC35B08 + 4 * byte_23BC7AFB0[v4]))();
}

uint64_t sub_23BC35B08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC35B10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC35B18);
  return result;
}

uint64_t sub_23BC35B24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC35B2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC35B30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC35B38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewStackButtonAction.CodingKeys()
{
  return &type metadata for ViewStackButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ViewStackButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for ViewStackButtonAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for ViewStackButtonAction.ViewStackButtonTappedCodingKeys()
{
  return &type metadata for ViewStackButtonAction.ViewStackButtonTappedCodingKeys;
}

unint64_t sub_23BC35B78()
{
  unint64_t result;

  result = qword_256A76F78;
  if (!qword_256A76F78)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B220, &type metadata for ViewStackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F78);
  }
  return result;
}

unint64_t sub_23BC35BC0()
{
  unint64_t result;

  result = qword_256A76F80;
  if (!qword_256A76F80)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B140, &type metadata for ViewStackButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F80);
  }
  return result;
}

unint64_t sub_23BC35C08()
{
  unint64_t result;

  result = qword_256A76F88;
  if (!qword_256A76F88)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B168, &type metadata for ViewStackButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F88);
  }
  return result;
}

unint64_t sub_23BC35C50()
{
  unint64_t result;

  result = qword_256A76F90;
  if (!qword_256A76F90)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B0F0, &type metadata for ViewStackButtonAction.ViewStackButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F90);
  }
  return result;
}

unint64_t sub_23BC35C98()
{
  unint64_t result;

  result = qword_256A76F98;
  if (!qword_256A76F98)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B118, &type metadata for ViewStackButtonAction.ViewStackButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76F98);
  }
  return result;
}

unint64_t sub_23BC35CE0()
{
  unint64_t result;

  result = qword_256A76FA0;
  if (!qword_256A76FA0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B190, &type metadata for ViewStackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76FA0);
  }
  return result;
}

unint64_t sub_23BC35D28()
{
  unint64_t result;

  result = qword_256A76FA8;
  if (!qword_256A76FA8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B1B8, &type metadata for ViewStackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76FA8);
  }
  return result;
}

uint64_t CreatePlanAlertState.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23BC71C4C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CreatePlanAlertState.isPresentingAlert.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CreatePlanAlertState() + 20));
}

uint64_t type metadata accessor for CreatePlanAlertState()
{
  uint64_t result;

  result = qword_256A77048;
  if (!qword_256A77048)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CreatePlanAlertState.isPresentingAlert.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CreatePlanAlertState();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*CreatePlanAlertState.isPresentingAlert.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for CreatePlanAlertState();
  return nullsub_1;
}

uint64_t CreatePlanAlertState.iconState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CreatePlanAlertState() + 24));
}

uint64_t CreatePlanAlertState.iconState.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = type metadata accessor for CreatePlanAlertState();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*CreatePlanAlertState.iconState.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for CreatePlanAlertState();
  return nullsub_1;
}

uint64_t CreatePlanAlertState.remoteParticipantName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CreatePlanAlertState() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CreatePlanAlertState.remoteParticipantName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for CreatePlanAlertState() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*CreatePlanAlertState.remoteParticipantName.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for CreatePlanAlertState();
  return nullsub_1;
}

uint64_t CreatePlanAlertState.workoutPlanCreationAlertEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CreatePlanAlertState() + 32));
}

uint64_t CreatePlanAlertState.workoutPlanCreationAlertEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CreatePlanAlertState();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*CreatePlanAlertState.workoutPlanCreationAlertEnabled.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for CreatePlanAlertState();
  return nullsub_1;
}

uint64_t CreatePlanAlertState.init(locale:isPresentingAlert:iconState:remoteParticipantName:workoutPlanCreationAlertEnabled:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char v12;
  int *PlanAlertState;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;

  v12 = a3 & 1;
  PlanAlertState = (int *)type metadata accessor for CreatePlanAlertState();
  v14 = PlanAlertState[5];
  v15 = PlanAlertState[6];
  v16 = PlanAlertState[8];
  v17 = (_QWORD *)(a7 + PlanAlertState[7]);
  v18 = sub_23BC71C4C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a7, a1, v18);
  *(_BYTE *)(a7 + v14) = a2;
  *(_BYTE *)(a7 + v15) = v12;
  *v17 = a4;
  v17[1] = a5;
  *(_BYTE *)(a7 + v16) = a6;
  return result;
}

uint64_t sub_23BC36088(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC360C0 + 4 * byte_23BC7B340[a1]))(0xD000000000000011, 0x800000023BC82970);
}

uint64_t sub_23BC360C0()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BC360D4()
{
  return 0x746174536E6F6369;
}

uint64_t sub_23BC360F0(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_23BC36118()
{
  unsigned __int8 *v0;

  return sub_23BC36088(*v0);
}

uint64_t sub_23BC36120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC3708C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BC36144(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23BC36150()
{
  sub_23BC3638C();
  return sub_23BC72828();
}

uint64_t sub_23BC36178()
{
  sub_23BC3638C();
  return sub_23BC72834();
}

uint64_t CreatePlanAlertState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t PlanAlertState;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76FC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC3638C();
  sub_23BC7281C();
  v11[15] = 0;
  sub_23BC71C4C();
  sub_23BC36768(&qword_256A74440, MEMORY[0x24BDCEEC8]);
  sub_23BC72720();
  if (!v2)
  {
    PlanAlertState = type metadata accessor for CreatePlanAlertState();
    v11[14] = 1;
    sub_23BC726F0();
    v11[13] = *(_BYTE *)(v3 + *(int *)(PlanAlertState + 24));
    v11[12] = 2;
    sub_23BC363D0();
    sub_23BC72720();
    v11[11] = 3;
    sub_23BC726B4();
    v11[10] = 4;
    sub_23BC726C0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23BC3638C()
{
  unint64_t result;

  result = qword_256A76FD0;
  if (!qword_256A76FD0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B514, &type metadata for CreatePlanAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A76FD0);
  }
  return result;
}

unint64_t sub_23BC363D0()
{
  unint64_t result;

  result = qword_256A76FD8;
  if (!qword_256A76FD8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanHandoffAlertIconState, &type metadata for CreatePlanHandoffAlertIconState);
    atomic_store(result, (unint64_t *)&qword_256A76FD8);
  }
  return result;
}

uint64_t CreatePlanAlertState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t PlanAlertState;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v29 = a2;
  v3 = sub_23BC71C4C();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76FE0);
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  PlanAlertState = type metadata accessor for CreatePlanAlertState();
  v8 = (int *)MEMORY[0x24BDAC7A8](PlanAlertState);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v8[5];
  v10[v11] = 0;
  v12 = v8[6];
  v10[v12] = 0;
  v13 = &v10[v8[7]];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v36 = (uint64_t *)v13;
  v14 = v8[8];
  v10[v14] = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC3638C();
  v35 = v6;
  v15 = v37;
  sub_23BC72810();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v11;
    v37 = v12;
    v28 = v14;
    v18 = v30;
    v17 = v31;
    v19 = (uint64_t)a1;
    v43 = 0;
    sub_23BC36768(&qword_256A74460, MEMORY[0x24BDCEEE8]);
    v20 = v33;
    v21 = v32;
    sub_23BC72684();
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v10, v34, v21);
    v42 = 1;
    v10[v16] = sub_23BC72654() & 1;
    v40 = 2;
    sub_23BC367A8();
    sub_23BC72684();
    v10[v37] = v41;
    v39 = 3;
    v22 = sub_23BC72618();
    v23 = v36;
    *v36 = v22;
    v23[1] = v24;
    v38 = 4;
    v25 = sub_23BC72624();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v20);
    v26 = v29;
    v10[v28] = v25;
    sub_23BC367EC((uint64_t)v10, v26);
    __swift_destroy_boxed_opaque_existential_1(v19);
    return sub_23BC36830((uint64_t)v10);
  }
}

uint64_t sub_23BC36768(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23BC71C4C();
    result = MEMORY[0x24260ED10](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BC367A8()
{
  unint64_t result;

  result = qword_256A76FE8;
  if (!qword_256A76FE8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanHandoffAlertIconState, &type metadata for CreatePlanHandoffAlertIconState);
    atomic_store(result, (unint64_t *)&qword_256A76FE8);
  }
  return result;
}

uint64_t sub_23BC367EC(uint64_t a1, uint64_t a2)
{
  uint64_t PlanAlertState;

  PlanAlertState = type metadata accessor for CreatePlanAlertState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(PlanAlertState - 8) + 16))(a2, a1, PlanAlertState);
  return a2;
}

uint64_t sub_23BC36830(uint64_t a1)
{
  uint64_t PlanAlertState;

  PlanAlertState = type metadata accessor for CreatePlanAlertState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(PlanAlertState - 8) + 8))(a1, PlanAlertState);
  return a1;
}

uint64_t sub_23BC3686C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CreatePlanAlertState.init(from:)(a1, a2);
}

uint64_t sub_23BC36880(_QWORD *a1)
{
  return CreatePlanAlertState.encode(to:)(a1);
}

uint64_t _s14FitnessActions20CreatePlanAlertStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *PlanAlertState;
  int *v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  _BOOL4 v17;

  if ((MEMORY[0x24260DE7C]() & 1) == 0)
    return 0;
  PlanAlertState = (int *)type metadata accessor for CreatePlanAlertState();
  if (*(unsigned __int8 *)(a1 + PlanAlertState[5]) != *(unsigned __int8 *)(a2 + PlanAlertState[5]))
    return 0;
  v5 = PlanAlertState;
  if (*(unsigned __int8 *)(a1 + PlanAlertState[6]) != *(unsigned __int8 *)(a2 + PlanAlertState[6]))
    return 0;
  v7 = PlanAlertState[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  if (!v9)
  {
    if (v11)
      return 0;
    goto LABEL_15;
  }
  if (!v11)
    return 0;
  v12 = *v8 == *v10 && v9 == v11;
  if (v12 || (v13 = sub_23BC72744(), result = 0, (v13 & 1) != 0))
  {
LABEL_15:
    v14 = v5[8];
    v15 = *(unsigned __int8 *)(a1 + v14);
    v16 = *(unsigned __int8 *)(a2 + v14);
    if (v15 == 2)
    {
      if (v16 == 2)
        return 1;
    }
    else
    {
      v17 = (v15 & 1) == 0;
      if (v16 != 2 && ((v17 ^ v16) & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CreatePlanAlertState(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BC71C4C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = (_QWORD *)((char *)a1 + v9);
    v12 = (_QWORD *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CreatePlanAlertState(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CreatePlanAlertState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CreatePlanAlertState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for CreatePlanAlertState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for CreatePlanAlertState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreatePlanAlertState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC36CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_23BC71C4C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for CreatePlanAlertState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC36D54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BC71C4C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t sub_23BC36DD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71C4C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CreatePlanAlertState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CreatePlanAlertState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BC36F34 + 4 * byte_23BC7B34A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BC36F68 + 4 * byte_23BC7B345[v4]))();
}

uint64_t sub_23BC36F68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC36F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC36F78);
  return result;
}

uint64_t sub_23BC36F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC36F8CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BC36F90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC36F98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanAlertState.CodingKeys()
{
  return &type metadata for CreatePlanAlertState.CodingKeys;
}

unint64_t sub_23BC36FB8()
{
  unint64_t result;

  result = qword_256A77090;
  if (!qword_256A77090)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B4EC, &type metadata for CreatePlanAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77090);
  }
  return result;
}

unint64_t sub_23BC37000()
{
  unint64_t result;

  result = qword_256A77098;
  if (!qword_256A77098)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B45C, &type metadata for CreatePlanAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77098);
  }
  return result;
}

unint64_t sub_23BC37048()
{
  unint64_t result;

  result = qword_256A770A0;
  if (!qword_256A770A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B484, &type metadata for CreatePlanAlertState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A770A0);
  }
  return result;
}

uint64_t sub_23BC3708C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82970 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746174536E6F6369 && a2 == 0xE900000000000065 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC82990 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023BC829B0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t UpNextQueueMonitorEnvironment.init(makeRemoteBrowsingIdentityUpdatedStream:makeUpNextQueueUpdatedStream:queryUpNextQueueItems:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorEnvironment()
{
  return &type metadata for UpNextQueueMonitorEnvironment;
}

__n128 CreatePlanAlertFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void CreatePlanAlertFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74910);
  v5 = MEMORY[0x24BDAC7A8](v14);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  __asm { BR              X10 }
}

uint64_t sub_23BC37434()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t);
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t);
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;

  v6 = v1;
  v7 = *v1;
  v5 = v6[1];
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A770B0);
  v9 = v3 + v8[24];
  v10 = v3 + v8[28];
  v11 = (_QWORD *)(v3 + v8[32]);
  *(_BYTE *)(v4 - 88) = 2;
  *(_QWORD *)(v4 - 128) = sub_23BC37D4C();
  sub_23BC72558();
  *(_QWORD *)(v3 + 40) = 0x4008000000000000;
  *(_BYTE *)(v3 + 48) = 1;
  sub_23BC723FC();
  v12 = *MEMORY[0x24BE2B570];
  v13 = sub_23BC72180();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104);
  *(_DWORD *)(v4 - 136) = v12;
  *(_QWORD *)(v4 - 152) = v14;
  *(_QWORD *)(v4 - 144) = v13;
  v14(v9, v12);
  v15 = *MEMORY[0x24BE2B550];
  v16 = sub_23BC72174();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104);
  *(_DWORD *)(v4 - 188) = v15;
  *(_QWORD *)(v4 - 168) = v17;
  *(_QWORD *)(v4 - 160) = v16;
  v17(v10, v15);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v5;
  *v11 = &unk_256A770C8;
  v11[1] = v18;
  v19 = *(void (**)(uint64_t))(*(_QWORD *)(v4 - 120) + 104);
  *(_DWORD *)(v4 - 172) = *MEMORY[0x24BE2B440];
  v19(v3);
  v20 = **(_QWORD **)(v4 - 112);
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_23BBF9058(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
  v22 = *(_QWORD *)(v20 + 16);
  v21 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v4 - 200) = v19;
  if (v22 >= v21 >> 1)
    v20 = sub_23BBF9058(v21 > 1, v22 + 1, 1, v20);
  *(_QWORD *)(v20 + 16) = v22 + 1;
  v23 = *(_QWORD *)(v4 - 120);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  *(_QWORD *)(v4 - 184) = v24;
  v25 = *(_QWORD *)(v23 + 72);
  v26 = v20 + v24 + v25 * v22;
  v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32);
  v28 = *(_QWORD *)(v4 - 104);
  *(_QWORD *)(v4 - 120) = v27;
  v27(v26, v3, v28);
  v29 = v2 + v8[24];
  v30 = v2 + v8[28];
  v31 = (_QWORD *)(v2 + v8[32]);
  *(_BYTE *)(v4 - 89) = 3;
  sub_23BC72558();
  *(_QWORD *)(v2 + 40) = 0x4072C00000000000;
  *(_BYTE *)(v2 + 48) = 0;
  sub_23BC723FC();
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 - 152))(v29, *(unsigned int *)(v4 - 136), *(_QWORD *)(v4 - 144));
  v32 = v30;
  v33 = *(unsigned int *)(v4 - 188);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 - 168))(v32, v33, *(_QWORD *)(v4 - 160));
  *v31 = &unk_256A770D0;
  v31[1] = 0;
  v34 = v28;
  v35 = *(void (**)(uint64_t, _QWORD, uint64_t))(v4 - 200);
  v35(v2, *(unsigned int *)(v4 - 172), v34);
  v37 = *(_QWORD *)(v20 + 16);
  v36 = *(_QWORD *)(v20 + 24);
  if (v37 >= v36 >> 1)
    v20 = sub_23BBF9058(v36 > 1, v37 + 1, 1, v20);
  *(_QWORD *)(v20 + 16) = v37 + 1;
  v38 = *(_QWORD *)(v4 - 104);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 - 120))(v20 + *(_QWORD *)(v4 - 184) + v37 * v25, v2, v38);
  v39 = v0 + v8[24];
  v40 = v0 + v8[28];
  v41 = (_QWORD *)(v0 + v8[32]);
  *(_BYTE *)(v4 - 90) = 1;
  sub_23BC72558();
  *(_QWORD *)(v0 + 40) = 0x403E000000000000;
  *(_BYTE *)(v0 + 48) = 0;
  sub_23BC723FC();
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 - 152))(v39, *(unsigned int *)(v4 - 136), *(_QWORD *)(v4 - 144));
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 - 168))(v40, v33, *(_QWORD *)(v4 - 160));
  *v41 = &unk_256A770D8;
  v41[1] = 0;
  v35(v0, *(unsigned int *)(v4 - 172), v38);
  v43 = *(_QWORD *)(v20 + 16);
  v42 = *(_QWORD *)(v20 + 24);
  if (v43 >= v42 >> 1)
    v20 = sub_23BBF9058(v42 > 1, v43 + 1, 1, v20);
  *(_QWORD *)(v20 + 16) = v43 + 1;
  result = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(v4 - 120))(v20 + *(_QWORD *)(v4 - 184) + v43 * v25, v0, *(_QWORD *)(v4 - 104));
  **(_QWORD **)(v4 - 112) = v20;
  return result;
}

unint64_t sub_23BC37D4C()
{
  unint64_t result;

  result = qword_256A770A8;
  if (!qword_256A770A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B660, &type metadata for CreatePlanAlertFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A770A8);
  }
  return result;
}

uint64_t sub_23BC37D90(uint64_t a1, int *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[3] = a1;
  v2[4] = sub_23BC723F0();
  v2[5] = sub_23BC723E4();
  v6 = (uint64_t (*)(void))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  v2[6] = v4;
  *v4 = v2;
  v4[1] = sub_23BC37E10;
  return v6();
}

uint64_t sub_23BC37E10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23BC723CC();
    return swift_task_switch();
  }
  else
  {
    *(_BYTE *)(v2 + 72) = 2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 64) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A77100);
    *v4 = v2;
    v4[1] = sub_23BC37EE4;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC37EE4()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC37F54()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC37F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint8_t *v7;
  _QWORD *v8;
  uint64_t v9;

  swift_release();
  if (qword_256A73EE0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = sub_23BC71C7C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A94570);
  MEMORY[0x24260EC2C](v1);
  MEMORY[0x24260EC2C](v1);
  v3 = sub_23BC71C64();
  v4 = sub_23BC724EC();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 56);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    MEMORY[0x24260EC2C](v6);
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v9;
    sub_23BC72510();
    *v8 = v9;
    MEMORY[0x24260EC20](v6);
    MEMORY[0x24260EC20](v6);
    _os_log_impl(&dword_23BBE4000, v3, v4, "Requesting workout plan failed with error: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74868);
    swift_arrayDestroy();
    MEMORY[0x24260EDA0](v8, -1, -1);
    MEMORY[0x24260EDA0](v7, -1, -1);

    MEMORY[0x24260EC20](v6);
  }
  else
  {
    MEMORY[0x24260EC20](*(_QWORD *)(v0 + 56));
    MEMORY[0x24260EC20](v6);
    MEMORY[0x24260EC20](v6);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC38160(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = sub_23BC723F0();
  *(_QWORD *)(v1 + 32) = sub_23BC723E4();
  *(_BYTE *)(v1 + 64) = 1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77100);
  *v2 = v1;
  v2[1] = sub_23BC381FC;
  return sub_23BC7215C();
}

uint64_t sub_23BC381FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc();
  *(_BYTE *)(v1 + 65) = 3;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v3;
  *v3 = v2;
  v3[1] = sub_23BC07298;
  return sub_23BC7215C();
}

uint64_t sub_23BC38274()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 16) = sub_23BC723F0();
  *(_QWORD *)(v0 + 24) = sub_23BC723E4();
  *(_BYTE *)(v0 + 40) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A77100);
  *v1 = v0;
  v1[1] = sub_23BC38308;
  return sub_23BC7215C();
}

uint64_t sub_23BC38308()
{
  swift_task_dealloc();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC38378()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 16) = sub_23BC723F0();
  *(_QWORD *)(v0 + 24) = sub_23BC723E4();
  *(_BYTE *)(v0 + 40) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A77100);
  *v1 = v0;
  v1[1] = sub_23BC1B68C;
  return sub_23BC7215C();
}

void sub_23BC38410(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  CreatePlanAlertFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4);
}

uint64_t sub_23BC38418()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC3843C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23BBF5304;
  return sub_23BC37D90(a1, v4);
}

unint64_t sub_23BC384A0()
{
  unint64_t result;

  result = qword_256A770E0;
  if (!qword_256A770E0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanAlertAction, &type metadata for CreatePlanAlertAction);
    atomic_store(result, (unint64_t *)&qword_256A770E0);
  }
  return result;
}

unint64_t sub_23BC384E8()
{
  unint64_t result;

  result = qword_256A770E8;
  if (!qword_256A770E8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanAlertAction, &type metadata for CreatePlanAlertAction);
    atomic_store(result, (unint64_t *)&qword_256A770E8);
  }
  return result;
}

unint64_t sub_23BC38530()
{
  unint64_t result;
  uint64_t PlanAlertState;

  result = qword_256A770F0;
  if (!qword_256A770F0)
  {
    PlanAlertState = type metadata accessor for CreatePlanAlertState();
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanAlertState, PlanAlertState);
    atomic_store(result, (unint64_t *)&qword_256A770F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanAlertFeature()
{
  return &type metadata for CreatePlanAlertFeature;
}

uint64_t storeEnumTagSinglePayload for CreatePlanAlertFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC385D4 + 4 * byte_23BC7B59D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC38608 + 4 * byte_23BC7B598[v4]))();
}

uint64_t sub_23BC38608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC38610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC38618);
  return result;
}

uint64_t sub_23BC38624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC3862CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC38630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC38638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanAlertFeature.TaskIdentifier()
{
  return &type metadata for CreatePlanAlertFeature.TaskIdentifier;
}

unint64_t sub_23BC38658()
{
  unint64_t result;

  result = qword_256A770F8;
  if (!qword_256A770F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B638, &type metadata for CreatePlanAlertFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A770F8);
  }
  return result;
}

uint64_t RemoveLibraryItemState.bookmarkLoadState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RemoveLibraryItemState.bookmarkLoadState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 40);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*RemoveLibraryItemState.bookmarkLoadState.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

unint64_t RemoveLibraryItemState.downloadLoadState.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned int *)(v1 + *(int *)(a1 + 44)) | ((unint64_t)*(unsigned __int16 *)(v1 + *(int *)(a1 + 44) + 4) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 44) + 6) << 48);
}

uint64_t RemoveLibraryItemState.downloadLoadState.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + *(int *)(a2 + 44);
  *(_WORD *)(v3 + 4) = WORD2(result);
  *(_DWORD *)v3 = result;
  *(_BYTE *)(v3 + 6) = BYTE6(result) & 1;
  return result;
}

uint64_t (*RemoveLibraryItemState.downloadLoadState.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RemoveLibraryItemState.confirmation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BBE817C(v2 + *(int *)(a1 + 52), a2, &qword_256A74420);
}

uint64_t RemoveLibraryItemState.confirmation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BBF117C(a1, v2 + *(int *)(a2 + 52));
}

uint64_t (*RemoveLibraryItemState.confirmation.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RemoveLibraryItemState.init(identifier:locale:bookmarkLoadState:downloadLoadState:presentationContextKey:confirmation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(a9, a1, a7);
  v18 = (int *)type metadata accessor for RemoveLibraryItemState(0, a7, a8, v17);
  v19 = a9 + v18[9];
  v20 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  v21 = a9 + v18[10];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a3, v22);
  v23 = a9 + v18[11];
  *(_WORD *)(v23 + 4) = WORD2(a4);
  *(_DWORD *)v23 = a4;
  *(_BYTE *)(v23 + 6) = BYTE6(a4) & 1;
  v24 = a9 + v18[12];
  v25 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a5, v25);
  return sub_23BBE87F8(a6, a9 + v18[13], &qword_256A74420);
}

uint64_t type metadata accessor for RemoveLibraryItemState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RemoveLibraryItemState);
}

uint64_t RemoveLibraryItemState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_23BC71C34();
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v23 = (uint64_t)&v21 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC72264();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  sub_23BC38C84();
  sub_23BC72264();
  v15 = (unsigned int *)(v2 + *(int *)(a2 + 44));
  v16 = *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 2) << 32);
  if (*((_BYTE *)v15 + 6) == 1 || (sub_23BC727B0(), (v16 & 0x10000000000) != 0))
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BC727B0();
    sub_23BC727BC();
    if ((v16 & 0x100000000) == 0)
      sub_23BC727C8();
  }
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BC72264();
  sub_23BBE817C(v2 + *(int *)(a2 + 52), (uint64_t)v14, &qword_256A74420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
    return sub_23BC727B0();
  v18 = v23;
  sub_23BBE87F8((uint64_t)v14, v23, &qword_256A74428);
  sub_23BC727B0();
  sub_23BBE817C(v18, (uint64_t)v10, &qword_256A74428);
  v19 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v10, 1, v4) == 1)
  {
    sub_23BC727BC();
  }
  else
  {
    v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v10, v4);
    sub_23BC727BC();
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v4);
  }
  return sub_23BC38CE0(v18);
}

unint64_t sub_23BC38C84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A77108;
  if (!qword_256A77108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75620);
    v2 = MEMORY[0x24BEE1338];
    result = MEMORY[0x24260ED10](MEMORY[0x24BE2B400], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A77108);
  }
  return result;
}

uint64_t sub_23BC38CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static RemoveLibraryItemState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int *v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  char v17;

  if ((sub_23BC7227C() & 1) == 0)
    return 0;
  v9 = (int *)type metadata accessor for RemoveLibraryItemState(0, a3, a4, v8);
  if ((MEMORY[0x24260DE7C](a1 + v9[9], a2 + v9[9]) & 1) == 0 || (sub_23BC7212C() & 1) == 0)
    return 0;
  v10 = v9[11];
  v11 = *(unsigned int *)(a1 + v10) | ((unint64_t)*(unsigned __int16 *)(a1 + v10 + 4) << 32);
  v12 = *(unsigned __int8 *)(a1 + v10 + 6);
  v13 = a2 + v10;
  v14 = *(unsigned int *)(a2 + v10) | ((unint64_t)*(unsigned __int16 *)(a2 + v10 + 4) << 32);
  v15 = *(_BYTE *)(v13 + 6);
  if (v12 == 1)
  {
    if ((v11 & 0xFFFFFFFFFFFFLL) != 0)
    {
      if ((v14 & 0xFFFFFFFFFFFFLL) != 0)
        v16 = v15;
      else
        v16 = 0;
      if ((v16 & 1) == 0)
        return 0;
    }
    else
    {
      if ((v14 & 0xFFFFFFFFFFFFLL) != 0)
        v17 = 0;
      else
        v17 = v15;
      if ((v17 & 1) == 0)
        return 0;
    }
  }
  else
  {
    if ((v15 & 1) != 0)
      return 0;
    if ((v11 & 0x10000000000) != 0)
    {
      if ((v11 & 0xFFFFFFFFFFLL) != 0)
      {
        if ((v14 & 0x10000000000) == 0 || (v14 & 0xFFFFFFFFFFLL) == 0)
          return 0;
      }
      else if ((v14 & 0x10000000000) == 0 || (v14 & 0xFFFFFFFFFFLL) != 0)
      {
        return 0;
      }
    }
    else
    {
      if ((v14 & 0x10000000000) != 0)
        return 0;
      if ((v11 & 0x100000000) != 0)
      {
        if ((v14 & 0x100000000) == 0)
          return 0;
      }
      else if ((v14 & 0x100000000) != 0 || *(float *)&v11 != *(float *)&v14)
      {
        return 0;
      }
    }
  }
  if ((sub_23BC71C1C() & 1) != 0)
    return sub_23BBEE428(a1 + v9[13], a2 + v9[13]);
  return 0;
}

uint64_t sub_23BC38E90(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC829D0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC824A0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23BC390F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC3912C + 4 * byte_23BC7B6A0[a1]))(0xD000000000000011, 0x800000023BC829D0);
}

uint64_t sub_23BC3912C()
{
  return 0x696669746E656469;
}

uint64_t sub_23BC39148()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BC39180()
{
  return 0x616D7269666E6F63;
}

uint64_t sub_23BC391A0()
{
  unsigned __int8 *v0;

  return sub_23BC390F4(*v0);
}

uint64_t sub_23BC391AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC38E90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC391D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC3BA64();
  *a1 = result;
  return result;
}

uint64_t sub_23BC39200(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7B8E8, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC39234(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7B8E8, a1);
  return sub_23BC72834();
}

uint64_t RemoveLibraryItemState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  int *v17;
  int v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v21 = a2;
  v22 = v5;
  v7 = type metadata accessor for RemoveLibraryItemState.CodingKeys(255, v5, v6, a4);
  MEMORY[0x24260ED10](&unk_23BC7B8E8, v7);
  v8 = sub_23BC7272C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v33 = 0;
  v12 = v23;
  v13 = v11;
  v14 = v24;
  sub_23BC72720();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = v21;
  v32 = 1;
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
  sub_23BC72720();
  v31 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  sub_23BC39CA0(&qword_256A77110, MEMORY[0x24BE2B3F8]);
  sub_23BC72720();
  v17 = (int *)(v12 + *(int *)(v16 + 44));
  v18 = *v17;
  v19 = *((_WORD *)v17 + 2);
  LOBYTE(v17) = *((_BYTE *)v17 + 6);
  v26 = v19;
  v25 = v18;
  v27 = (char)v17;
  v30 = 3;
  sub_23BBF11DC();
  sub_23BC72720();
  v29 = 4;
  sub_23BC71C34();
  sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23BC72720();
  v28 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  sub_23BBF1264(&qword_256A74458, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  sub_23BC72720();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t type metadata accessor for RemoveLibraryItemState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RemoveLibraryItemState.CodingKeys);
}

uint64_t RemoveLibraryItemState.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  RemoveLibraryItemState.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t RemoveLibraryItemState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  int v60;
  __int16 v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v40 = a4;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23BC71C34();
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v53 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23BC71C4C();
  v48 = *(_QWORD *)(v50 - 8);
  v10 = MEMORY[0x24BDAC7A8](v50);
  v52 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v54 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RemoveLibraryItemState.CodingKeys(255, a2, a3, v13);
  MEMORY[0x24260ED10](&unk_23BC7B8E8, v14);
  v58 = sub_23BC7269C();
  v51 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v16 = (char *)&v38 - v15;
  v55 = a3;
  v56 = a2;
  v18 = (int *)type metadata accessor for RemoveLibraryItemState(0, a2, a3, v17);
  v19 = *((_QWORD *)v18 - 1);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v38 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v57 = v16;
  v22 = (uint64_t)v59;
  sub_23BC72810();
  if (v22)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v52;
  v23 = v53;
  v38 = v19;
  v39 = v21;
  v59 = a1;
  v68 = 0;
  v25 = v54;
  v26 = v56;
  sub_23BC72684();
  v27 = v39;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v39, v25, v26);
  v67 = 1;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v28 = v50;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v27[v18[9]], v24, v28);
  v66 = 2;
  sub_23BC39CA0(qword_256A77118, MEMORY[0x24BE2B410]);
  v29 = v47;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v27[v18[10]], v23, v29);
  v65 = 3;
  sub_23BBF1220();
  sub_23BC72684();
  v55 = 0;
  v30 = v60;
  v31 = v62;
  v32 = &v27[v18[11]];
  *((_WORD *)v32 + 2) = v61;
  *(_DWORD *)v32 = v30;
  v32[6] = v31;
  v64 = 4;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v33 = v43;
  v34 = v44;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v27[v18[12]], v33, v34);
  v63 = 5;
  sub_23BBF1264(&qword_256A74478, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v35 = (uint64_t)v42;
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v57, v58);
  sub_23BBE87F8(v35, (uint64_t)&v27[v18[13]], &qword_256A74420);
  v37 = v38;
  (*(void (**)(uint64_t, char *, int *))(v38 + 16))(v40, v27, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  return (*(uint64_t (**)(char *, int *))(v37 + 8))(v27, v18);
}

uint64_t sub_23BC39C28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return RemoveLibraryItemState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BC39C44(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RemoveLibraryItemState.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_23BC39C60(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  RemoveLibraryItemState.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BC39CA0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75620);
    v6[0] = MEMORY[0x24BEE1348];
    v6[1] = MEMORY[0x24BEE1330];
    result = MEMORY[0x24260ED10](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BC39D04()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BC39D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static RemoveLibraryItemState.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_23BC39D20()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23BC39D28()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_23BC71C4C();
    if (v1 <= 0x3F)
    {
      sub_23BC3B88C();
      if (v2 <= 0x3F)
      {
        sub_23BC71C34();
        if (v3 <= 0x3F)
        {
          sub_23BBF2D28();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *sub_23BC39E0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, uint64_t *, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(unint64_t, unint64_t, uint64_t);
  void *v38;
  unsigned __int8 *v39;
  size_t v40;
  int v41;
  int v42;
  size_t __n;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(v53 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v55 = sub_23BC71C4C();
  v5 = *(_QWORD *)(v55 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v50 = v4 + v6;
  v51 = v5;
  v7 = *(_QWORD *)(v5 + 64);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v8 = *(_QWORD *)(v52 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v49 = v7 + v9;
  v10 = *(_QWORD *)(v8 + 64) + 3;
  v11 = sub_23BC71C34();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80);
  v15 = *(_QWORD *)(v12 + 64);
  v16 = v15 + v14;
  if (v13)
    v17 = *(_QWORD *)(v12 + 64);
  else
    v17 = v15 + 1;
  if (v13 >= 2)
    v18 = v17;
  else
    v18 = v17 + 1;
  v19 = ((v15
        + v14
        + ((v14
          + ((v10 + ((v49 + (v50 & ~(unint64_t)v6)) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFFCLL)
          + 7) & ~v14)) & ~v14)
      + v18;
  v20 = v9 | v6 | *(_DWORD *)(v3 + 80) & 0xFC | v14 | 3;
  if (v20 > 7 || ((v9 | v6 | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v3 + 80)) & 0x100000) != 0 || v19 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    v27 = (uint64_t *)(v23 + ((v20 + 16) & ~v20));
    swift_retain();
  }
  else
  {
    __n = v18;
    v45 = v17;
    v24 = ~(unint64_t)v9;
    v48 = *(_DWORD *)(v12 + 84);
    v46 = v10;
    v25 = ~v14;
    v26 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16);
    v27 = a1;
    v47 = v11;
    v28 = v53;
    v54 = v16;
    v26(a1, a2, v28);
    v29 = ((unint64_t)a1 + v50) & ~(unint64_t)v6;
    v30 = ((unint64_t)a2 + v50) & ~(unint64_t)v6;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))(v29, v30, v55);
    v31 = (v30 + v49) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v29 + v49) & v24, v31, v52);
    v32 = (_DWORD *)((v46 + ((v29 + v49) & v24)) & 0xFFFFFFFFFFFFFFFCLL);
    v33 = (_DWORD *)((v46 + v31) & 0xFFFFFFFFFFFFFFFCLL);
    v34 = *(_DWORD *)((char *)v33 + 3);
    *v32 = *v33;
    *(_DWORD *)((char *)v32 + 3) = v34;
    v35 = ((unint64_t)v32 + v14 + 7) & ~v14;
    v36 = ((unint64_t)v33 + v14 + 7) & ~v14;
    v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16);
    v37(((unint64_t)v32 + v14 + 7) & v25, ((unint64_t)v33 + v14 + 7) & v25, v47);
    v38 = (void *)((v54 + v35) & v25);
    v39 = (unsigned __int8 *)((v54 + v36) & v25);
    if (v48 > 1)
    {
      v40 = v45;
      if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, uint64_t))(v12 + 48))(v39, v48, v47) >= 2)
      {
LABEL_32:
        memcpy(v38, v39, __n);
        return v27;
      }
    }
    else
    {
      v40 = v45;
      if (v39[v45])
      {
        v41 = (v39[v45] - 1) << (8 * v45);
        if (v45 > 3)
          v41 = 0;
        if ((_DWORD)v45)
        {
          if (v45 <= 3)
            v42 = v45;
          else
            v42 = 4;
          __asm { BR              X11 }
        }
        if (v41 != -1)
          goto LABEL_32;
      }
    }
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48))(v39, 1, v47))
    {
      memcpy(v38, v39, v40);
      if (v48 > 1)
        return v27;
      goto LABEL_30;
    }
    v37((unint64_t)v38, (unint64_t)v39, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v38, 0, 1, v47);
    if (v48 <= 1)
LABEL_30:
      *((_BYTE *)v38 + v40) = 0;
  }
  return v27;
}

uint64_t sub_23BC3A18C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  uint64_t (*v23)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_23BC71C4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v11, v9);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  v13 = sub_23BC71C34();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v12 + v15 + 7) & ~v15;
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  result = v23(v16, v13);
  v18 = *(_QWORD *)(v14 + 64);
  v19 = (v18 + v15 + v16) & ~v15;
  v20 = *(_DWORD *)(v14 + 84);
  if (v20)
    v21 = *(_QWORD *)(v14 + 64);
  else
    v21 = v18 + 1;
  if (v20 > 1)
  {
    result = (*(uint64_t (**)(uint64_t))(v14 + 48))(v19);
    if (result >= 2)
      return result;
    goto LABEL_15;
  }
  if (!*(_BYTE *)(v19 + v21))
    goto LABEL_15;
  v22 = (*(unsigned __int8 *)(v19 + v21) - 1) << (8 * v21);
  if (v21 > 3)
    v22 = 0;
  if ((_DWORD)v21)
  {
    if (v21 > 3)
      LODWORD(v21) = 4;
    __asm { BR              X11 }
  }
  if (v22 == -1)
  {
LABEL_15:
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
    if (!(_DWORD)result)
      return v23(v19, v13);
  }
  return result;
}

uint64_t sub_23BC3A360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, unint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  _BYTE *v29;
  unsigned int v30;
  size_t v31;
  int v32;
  int v33;
  size_t v34;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 3;
  v20 = (_DWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFFCLL);
  v21 = (_DWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v19) = *(_DWORD *)((char *)v21 + 3);
  *v20 = *v21;
  *(_DWORD *)((char *)v20 + 3) = v19;
  v22 = sub_23BC71C34();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v20 + v24 + 7) & ~v24;
  v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 16);
  v26(v25, ((unint64_t)v21 + v24 + 7) & ~v24, v22);
  v27 = *(_QWORD *)(v23 + 64);
  v28 = (void *)((v27 + v24 + v25) & ~v24);
  v29 = (_BYTE *)((v27 + v24 + (((unint64_t)v21 + v24 + 7) & ~v24)) & ~v24);
  v30 = *(_DWORD *)(v23 + 84);
  if (v30)
    v31 = *(_QWORD *)(v23 + 64);
  else
    v31 = v27 + 1;
  if (v30 <= 1)
  {
    if (v29[v31])
    {
      v32 = (v29[v31] - 1) << (8 * v31);
      if (v31 > 3)
        v32 = 0;
      if ((_DWORD)v31)
      {
        if (v31 <= 3)
          v33 = v31;
        else
          v33 = 4;
        __asm { BR              X11 }
      }
      if (v32 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v29, 1, v22))
    {
      memcpy(v28, v29, v31);
      if (v30 > 1)
        return a1;
    }
    else
    {
      v26((uint64_t)v28, (unint64_t)v29, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
      if (v30 > 1)
        return a1;
    }
    *((_BYTE *)v28 + v31) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v23 + 48))(v29, *(unsigned int *)(v23 + 84), v22) < 2)
    goto LABEL_14;
LABEL_20:
  if (v30 >= 2)
    v34 = v31;
  else
    v34 = v31 + 1;
  memcpy(v28, v29, v34);
  return a1;
}

uint64_t sub_23BC3A5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, unint64_t, uint64_t);
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  size_t v31;
  char v32;
  int v33;
  int v34;
  uint64_t (*v35)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  uint64_t (*v40)(unsigned __int8 *, uint64_t, uint64_t);
  int v41;
  int v42;
  size_t v43;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 3;
  v20 = (_DWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFFCLL);
  v21 = (_DWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v19) = *(_DWORD *)((char *)v21 + 3);
  *v20 = *v21;
  *(_DWORD *)((char *)v20 + 3) = v19;
  v22 = sub_23BC71C34();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v20 + v24 + 7) & ~v24;
  v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 24);
  v26(v25, ((unint64_t)v21 + v24 + 7) & ~v24, v22);
  v27 = *(_QWORD *)(v23 + 64);
  v28 = (unsigned __int8 *)((v27 + v24 + v25) & ~v24);
  v29 = (unsigned __int8 *)((v27 + v24 + (((unint64_t)v21 + v24 + 7) & ~v24)) & ~v24);
  v30 = *(unsigned int *)(v23 + 84);
  if ((_DWORD)v30)
    v31 = *(_QWORD *)(v23 + 64);
  else
    v31 = v27 + 1;
  if (v30 > 1)
  {
    v35 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48);
    v36 = v35(v28, *(unsigned int *)(v23 + 84), v22);
    v37 = v35(v29, v30, v22);
    if (v36 >= 2)
    {
      if (v37 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48))(v29, 1, v22))
      {
        memcpy(v28, v29, v31);
        if (v30 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(v28, v29, v22);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
        if (v30 > 1)
          return a1;
      }
      v28[v31] = 0;
      return a1;
    }
    if (v37 >= 2)
    {
LABEL_31:
      if (!v35(v28, 1, v22))
        (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(v28, v22);
      goto LABEL_41;
    }
LABEL_33:
    v40 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48);
    v41 = v40(v28, 1, v22);
    v42 = v40(v29, 1, v22);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(v28, v29, v22);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
        return a1;
      }
    }
    else
    {
      if (!v42)
      {
        v26((uint64_t)v28, (unint64_t)v29, v22);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(v28, v22);
    }
    memcpy(v28, v29, v31);
    return a1;
  }
  v32 = 8 * v31;
  if (!v28[v31])
    goto LABEL_29;
  v33 = (v28[v31] - 1) << v32;
  if (v31 > 3)
    v33 = 0;
  if ((_DWORD)v31)
  {
    if (v31 <= 3)
      v34 = v31;
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 == -1)
  {
LABEL_29:
    if (v29[v31])
    {
      v38 = (v29[v31] - 1) << v32;
      if (v31 > 3)
        v38 = 0;
      if ((_DWORD)v31)
      {
        if (v31 <= 3)
          v39 = v31;
        else
          v39 = 4;
        __asm { BR              X11 }
      }
      if (v38 != -1)
      {
        v35 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v29[v31] || (v29[v31] - 1) << v32 == -1)
    goto LABEL_45;
LABEL_41:
  if (v30 >= 2)
    v43 = v31;
  else
    v43 = v31 + 1;
  memcpy(v28, v29, v43);
  return a1;
}

uint64_t sub_23BC3AA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, unint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  _BYTE *v29;
  unsigned int v30;
  size_t v31;
  int v32;
  int v33;
  size_t v34;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 3;
  v20 = (_DWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFFCLL);
  v21 = (_DWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v19) = *(_DWORD *)((char *)v21 + 3);
  *v20 = *v21;
  *(_DWORD *)((char *)v20 + 3) = v19;
  v22 = sub_23BC71C34();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v20 + v24 + 7) & ~v24;
  v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 32);
  v26(v25, ((unint64_t)v21 + v24 + 7) & ~v24, v22);
  v27 = *(_QWORD *)(v23 + 64);
  v28 = (void *)((v27 + v24 + v25) & ~v24);
  v29 = (_BYTE *)((v27 + v24 + (((unint64_t)v21 + v24 + 7) & ~v24)) & ~v24);
  v30 = *(_DWORD *)(v23 + 84);
  if (v30)
    v31 = *(_QWORD *)(v23 + 64);
  else
    v31 = v27 + 1;
  if (v30 <= 1)
  {
    if (v29[v31])
    {
      v32 = (v29[v31] - 1) << (8 * v31);
      if (v31 > 3)
        v32 = 0;
      if ((_DWORD)v31)
      {
        if (v31 <= 3)
          v33 = v31;
        else
          v33 = 4;
        __asm { BR              X11 }
      }
      if (v32 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v29, 1, v22))
    {
      memcpy(v28, v29, v31);
      if (v30 > 1)
        return a1;
    }
    else
    {
      v26((uint64_t)v28, (unint64_t)v29, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
      if (v30 > 1)
        return a1;
    }
    *((_BYTE *)v28 + v31) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v23 + 48))(v29, *(unsigned int *)(v23 + 84), v22) < 2)
    goto LABEL_14;
LABEL_20:
  if (v30 >= 2)
    v34 = v31;
  else
    v34 = v31 + 1;
  memcpy(v28, v29, v34);
  return a1;
}

uint64_t sub_23BC3ACB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, unint64_t, uint64_t);
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  size_t v31;
  char v32;
  int v33;
  int v34;
  uint64_t (*v35)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  uint64_t (*v40)(unsigned __int8 *, uint64_t, uint64_t);
  int v41;
  int v42;
  size_t v43;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 3;
  v20 = (_DWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFFCLL);
  v21 = (_DWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFFCLL);
  LODWORD(v19) = *(_DWORD *)((char *)v21 + 3);
  *v20 = *v21;
  *(_DWORD *)((char *)v20 + 3) = v19;
  v22 = sub_23BC71C34();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v20 + v24 + 7) & ~v24;
  v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 40);
  v26(v25, ((unint64_t)v21 + v24 + 7) & ~v24, v22);
  v27 = *(_QWORD *)(v23 + 64);
  v28 = (unsigned __int8 *)((v27 + v24 + v25) & ~v24);
  v29 = (unsigned __int8 *)((v27 + v24 + (((unint64_t)v21 + v24 + 7) & ~v24)) & ~v24);
  v30 = *(unsigned int *)(v23 + 84);
  if ((_DWORD)v30)
    v31 = *(_QWORD *)(v23 + 64);
  else
    v31 = v27 + 1;
  if (v30 > 1)
  {
    v35 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48);
    v36 = v35(v28, *(unsigned int *)(v23 + 84), v22);
    v37 = v35(v29, v30, v22);
    if (v36 >= 2)
    {
      if (v37 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48))(v29, 1, v22))
      {
        memcpy(v28, v29, v31);
        if (v30 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(v28, v29, v22);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
        if (v30 > 1)
          return a1;
      }
      v28[v31] = 0;
      return a1;
    }
    if (v37 >= 2)
    {
LABEL_31:
      if (!v35(v28, 1, v22))
        (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(v28, v22);
      goto LABEL_41;
    }
LABEL_33:
    v40 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48);
    v41 = v40(v28, 1, v22);
    v42 = v40(v29, 1, v22);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(v28, v29, v22);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
        return a1;
      }
    }
    else
    {
      if (!v42)
      {
        v26((uint64_t)v28, (unint64_t)v29, v22);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(v28, v22);
    }
    memcpy(v28, v29, v31);
    return a1;
  }
  v32 = 8 * v31;
  if (!v28[v31])
    goto LABEL_29;
  v33 = (v28[v31] - 1) << v32;
  if (v31 > 3)
    v33 = 0;
  if ((_DWORD)v31)
  {
    if (v31 <= 3)
      v34 = v31;
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 == -1)
  {
LABEL_29:
    if (v29[v31])
    {
      v38 = (v29[v31] - 1) << v32;
      if (v31 > 3)
        v38 = 0;
      if ((_DWORD)v31)
      {
        if (v31 <= 3)
          v39 = v31;
        else
          v39 = 4;
        __asm { BR              X11 }
      }
      if (v38 != -1)
      {
        v35 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v23 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v29[v31] || (v29[v31] - 1) << v32 == -1)
    goto LABEL_45;
LABEL_41:
  if (v30 >= 2)
    v43 = v31;
  else
    v43 = v31 + 1;
  memcpy(v28, v29, v43);
  return a1;
}

uint64_t sub_23BC3B120(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t (*v36)(unint64_t, uint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t result;
  unsigned int v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v43 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v43 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v11 = *(_QWORD *)(v42 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v12 > v10)
    v10 = *(_DWORD *)(v11 + 84);
  v13 = sub_23BC71C34();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v10)
    v16 = v10;
  else
    v16 = *(_DWORD *)(v14 + 84);
  v17 = v15 - 1;
  if (!(_DWORD)v15)
    v17 = 0;
  v18 = v17 - 1;
  if (v15 < 2)
    v18 = 0;
  if (v18 > v16)
    v16 = v18;
  if ((_DWORD)v15)
    v19 = v15 < 2;
  else
    v19 = 2;
  if (!a2)
    return 0;
  v20 = v13;
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = *(_QWORD *)(v6 + 64) + v21;
  v23 = *(_QWORD *)(v8 + 64);
  v24 = *(unsigned __int8 *)(v11 + 80);
  v25 = *(_QWORD *)(v11 + 64) + 3;
  v26 = *(unsigned __int8 *)(v14 + 80);
  v27 = v26 + 7;
  v28 = *(_QWORD *)(v14 + 64);
  v29 = v28 + v26;
  if (a2 <= v16)
    goto LABEL_37;
  v30 = v19
      + v28
      + ((v29 + ((v27 + ((v25 + ((v23 + v24 + (v22 & ~v21)) & ~v24)) & 0xFFFFFFFFFFFFFFFCLL)) & ~v26)) & ~v26);
  v31 = 8 * v30;
  if (v30 > 3)
    goto LABEL_21;
  v33 = ((a2 - v16 + ~(-1 << v31)) >> v31) + 1;
  if (HIWORD(v33))
  {
    v32 = *(_DWORD *)(a1 + v30);
    if (v32)
      goto LABEL_28;
  }
  else
  {
    if (v33 <= 0xFF)
    {
      if (v33 < 2)
        goto LABEL_37;
LABEL_21:
      v32 = *(unsigned __int8 *)(a1 + v30);
      if (!*(_BYTE *)(a1 + v30))
        goto LABEL_37;
LABEL_28:
      v34 = (v32 - 1) << v31;
      if (v30 > 3)
        v34 = 0;
      if ((_DWORD)v30)
      {
        if (v30 <= 3)
          v35 = v30;
        else
          v35 = 4;
        __asm { BR              X12 }
      }
      return v16 + v34 + 1;
    }
    v32 = *(unsigned __int16 *)(a1 + v30);
    if (*(_WORD *)(a1 + v30))
      goto LABEL_28;
  }
LABEL_37:
  if (!v16)
    return 0;
  if ((_DWORD)v7 == v16)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v37 = a1;
    v15 = v7;
    v20 = v5;
    return v36(v37, v15, v20);
  }
  v37 = (v22 + a1) & ~v21;
  if ((_DWORD)v9 == v16)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    v15 = v9;
    v20 = v43;
    return v36(v37, v15, v20);
  }
  v37 = (v37 + v23 + v24) & ~v24;
  if ((_DWORD)v12 == v16)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
    v15 = v12;
    v20 = v42;
    return v36(v37, v15, v20);
  }
  v38 = ~v26;
  v37 = (v27 + ((v25 + v37) & 0xFFFFFFFFFFFFFFFCLL)) & v38;
  if ((_DWORD)v15 == v16)
  {
    v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
    return v36(v37, v15, v20);
  }
  if (v15 < 2)
    return 0;
  v40 = (*(uint64_t (**)(unint64_t))(v14 + 48))((v29 + v37) & v38);
  v41 = v40 >= 2;
  result = v40 - 2;
  if ((_DWORD)result == 0 || !v41)
    return 0;
  return result;
}

void sub_23BC3B400(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  unsigned int v21;
  unsigned int v22;
  int v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(sub_23BC71C4C() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A75620) - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = 0;
  v13 = *(_QWORD *)(sub_23BC71C34() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = *(_DWORD *)(v13 + 84);
  v16 = v14 - 1;
  if (!v14)
    v16 = 0;
  v17 = v16 - 1;
  if (v14 < 2)
    v17 = 0;
  if (v17 > v15)
    v15 = v17;
  if (v14)
    v19 = v14 < 2;
  else
    v19 = 2;
  v18 = *(unsigned __int8 *)(v13 + 80);
  v20 = v19
      + *(_QWORD *)(v13 + 64)
      + ((*(_QWORD *)(v13 + 64)
        + v18
        + ((v18
          + 7
          + ((*(_QWORD *)(v10 + 64)
            + 3
            + ((*(_QWORD *)(v8 + 64)
              + *(unsigned __int8 *)(v10 + 80)
              + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFFCLL)) & ~v18)) & ~v18);
  if (a3 > v15)
  {
    if (v20 > 3)
    {
      v12 = 1u;
      if (v15 >= a2)
        goto LABEL_22;
LABEL_28:
      v22 = ~v15 + a2;
      if (v20 < 4)
      {
        if ((_DWORD)v20)
        {
          v23 = v22 & ~(-1 << (8 * v20));
          bzero(a1, v20);
          if ((_DWORD)v20 == 3)
          {
            *(_WORD *)a1 = v23;
            a1[2] = BYTE2(v23);
          }
          else if ((_DWORD)v20 == 2)
          {
            *(_WORD *)a1 = v23;
          }
          else
          {
            *a1 = v23;
          }
        }
      }
      else
      {
        bzero(a1, v20);
        *(_DWORD *)a1 = v22;
      }
      __asm { BR              X10 }
    }
    v21 = ((a3 - v15 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v21))
    {
      v12 = 4u;
      if (v15 < a2)
        goto LABEL_28;
LABEL_22:
      __asm { BR              X28 }
    }
    if (v21 >= 0x100)
      v12 = 2;
    else
      v12 = v21 > 1;
  }
  if (v15 < a2)
    goto LABEL_28;
  goto LABEL_22;
}

void sub_23BC3B868()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x23BC3B70CLL);
}

void sub_23BC3B870()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x23BC3B70CLL);
}

void sub_23BC3B880()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x23BC3B70CLL);
}

void sub_23BC3B88C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A771A0[0])
  {
    v0 = sub_23BC72144();
    if (!v1)
      atomic_store(v0, qword_256A771A0);
  }
}

uint64_t getEnumTagSinglePayload for RemoveLibraryItemAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23BC3B978(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23BC3B9C4 + 4 * byte_23BC7B6E9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23BC3B9F8 + 4 * byte_23BC7B6E4[v4]))();
}

uint64_t sub_23BC3B9F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3BA00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC3BA08);
  return result;
}

uint64_t sub_23BC3BA14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC3BA1CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23BC3BA20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3BA28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23BC3BA34()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC3BA44()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC3BA54()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BC3BA64()
{
  return 6;
}

uint64_t initializeWithCopy for ActionTaskIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 7)
    LOBYTE(v3) = *(_BYTE *)a2 + 7;
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(_BYTE *)(a1 + 40) = v3;
  return a1;
}

uint64_t assignWithCopy for ActionTaskIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 7)
      LOBYTE(v4) = *(_BYTE *)a2 + 7;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t assignWithTake for ActionTaskIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 7)
      LOBYTE(v4) = *(_BYTE *)a2 + 7;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionTaskIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 7)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActionTaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BC3BC1C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 7)
    return (*(_DWORD *)a1 + 7);
  return result;
}

uint64_t sub_23BC3BC38(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 7;
    LOBYTE(a2) = 7;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActionTaskIdentifier()
{
  return &type metadata for ActionTaskIdentifier;
}

void sub_23BC3BC70()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_23BBF4754(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_23BC3BCAC()
{
  _OWORD v1[2];
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  v1[0] = v3;
  v1[1] = v4;
  v2 = v5;
  sub_23BC727B0();
  sub_23BC7254C();
  return sub_23BBF60B4((uint64_t)v1);
}

uint64_t sub_23BC3BD7C()
{
  sub_23BC727A4();
  sub_23BC3BC70();
  return sub_23BC727E0();
}

uint64_t sub_23BC3BDBC()
{
  sub_23BC727A4();
  sub_23BC3BC70();
  return sub_23BC727E0();
}

unint64_t sub_23BC3BDFC()
{
  unint64_t result;

  result = qword_256A77228;
  if (!qword_256A77228)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7B968, &type metadata for ActionTaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A77228);
  }
  return result;
}

void sub_23BC3BE40(uint64_t a1, uint64_t a2)
{
  _BYTE v3[48];
  uint64_t v4;

  sub_23BBF4754(a1, (uint64_t)v3);
  sub_23BBF4754(a2, (uint64_t)&v4);
  __asm { BR              X10 }
}

uint64_t sub_23BC3BE8C()
{
  uint64_t v0;
  char v1;
  __int128 v2;
  _OWORD v4[2];
  uint64_t v5;
  _BYTE v6[48];
  _BYTE v7[128];

  sub_23BBF4754((uint64_t)v7, (uint64_t)v6);
  if (v7[88])
  {
    sub_23BBF60B4((uint64_t)v6);
    sub_23BC3BFA8((uint64_t)v7);
    v1 = 0;
  }
  else
  {
    v2 = *(_OWORD *)(v0 + 16);
    v4[0] = *(_OWORD *)v0;
    v4[1] = v2;
    v5 = *(_QWORD *)(v0 + 32);
    v1 = MEMORY[0x24260E77C](v6, v4);
    sub_23BBF60B4((uint64_t)v4);
    sub_23BBF60B4((uint64_t)v6);
    sub_23BBF47D4((uint64_t)v7);
  }
  return v1 & 1;
}

void sub_23BC3BF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_23BBF4754((uint64_t)&a21, (uint64_t)&a15);
  if (a32 != 2)
    JUMPOUT(0x23BC3BEA0);
  JUMPOUT(0x23BC3BED0);
}

void sub_23BC3BF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_23BBF4754((uint64_t)&a21, (uint64_t)&a15);
  if (a32 != 3)
    JUMPOUT(0x23BC3BEA0);
  JUMPOUT(0x23BC3BED0);
}

void sub_23BC3BF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_23BBF4754((uint64_t)&a21, (uint64_t)&a15);
  if (a32 != 4)
    JUMPOUT(0x23BC3BEA0);
  JUMPOUT(0x23BC3BED0);
}

void sub_23BC3BF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_23BBF4754((uint64_t)&a21, (uint64_t)&a15);
  if (a32 != 5)
    JUMPOUT(0x23BC3BEA0);
  JUMPOUT(0x23BC3BED0);
}

void sub_23BC3BF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_23BBF4754((uint64_t)&a21, (uint64_t)&a15);
  if (a32 != 6)
    JUMPOUT(0x23BC3BEA0);
  JUMPOUT(0x23BC3BED0);
}

uint64_t sub_23BC3BFA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77230);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StackStatusLoadState.hash(into:)()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  if (v1 == 2 || v1 == 3)
    return sub_23BC727B0();
  sub_23BC727B0();
  return sub_23BC727BC();
}

BOOL static StackStatusLoadState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t sub_23BC3C0A4(char a1)
{
  return *(_QWORD *)&aIdle_8[8 * a1];
}

uint64_t sub_23BC3C0C4()
{
  char *v0;

  return sub_23BC3C0A4(*v0);
}

uint64_t sub_23BC3C0CC()
{
  sub_23BC3C4E0();
  return sub_23BC72828();
}

uint64_t sub_23BC3C0F4()
{
  sub_23BC3C4E0();
  return sub_23BC72834();
}

uint64_t sub_23BC3C120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC3EFA8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC3C148()
{
  sub_23BC3C524();
  return sub_23BC72828();
}

uint64_t sub_23BC3C170()
{
  sub_23BC3C524();
  return sub_23BC72834();
}

uint64_t sub_23BC3C198()
{
  sub_23BC3C568();
  return sub_23BC72828();
}

uint64_t sub_23BC3C1C0()
{
  sub_23BC3C568();
  return sub_23BC72834();
}

uint64_t sub_23BC3C1E8()
{
  sub_23BC3C5AC();
  return sub_23BC72828();
}

uint64_t sub_23BC3C210()
{
  sub_23BC3C5AC();
  return sub_23BC72834();
}

uint64_t StackStatusLoadState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77238);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77240);
  v20 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77248);
  v9 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77250);
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC3C4E0();
  sub_23BC7281C();
  if (v15 == 2)
  {
    v26 = 0;
    sub_23BC3C5AC();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  }
  if (v15 == 3)
  {
    v27 = 1;
    sub_23BC3C568();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  }
  v28 = 2;
  sub_23BC3C524();
  v17 = v22;
  sub_23BC726A8();
  v18 = v24;
  sub_23BC726F0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
}

unint64_t sub_23BC3C4E0()
{
  unint64_t result;

  result = qword_256A77258;
  if (!qword_256A77258)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C06C, &type metadata for StackStatusLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77258);
  }
  return result;
}

unint64_t sub_23BC3C524()
{
  unint64_t result;

  result = qword_256A77260;
  if (!qword_256A77260)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C01C, &type metadata for StackStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77260);
  }
  return result;
}

unint64_t sub_23BC3C568()
{
  unint64_t result;

  result = qword_256A77268;
  if (!qword_256A77268)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BFCC, &type metadata for StackStatusLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77268);
  }
  return result;
}

unint64_t sub_23BC3C5AC()
{
  unint64_t result;

  result = qword_256A77270;
  if (!qword_256A77270)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BF7C, &type metadata for StackStatusLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77270);
  }
  return result;
}

uint64_t StackStatusLoadState.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23BC727A4();
  if (v1 == 2 || v1 == 3)
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BC727B0();
    sub_23BC727BC();
  }
  return sub_23BC727E0();
}

uint64_t StackStatusLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  v34 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77278);
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77280);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77288);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77290);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23BC3C4E0();
  v14 = v38;
  sub_23BC72810();
  if (v14)
    goto LABEL_9;
  v29 = v5;
  v15 = v35;
  v16 = v36;
  v38 = v10;
  v17 = sub_23BC72690();
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v19 = sub_23BC725A0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v21 = &type metadata for StackStatusLoadState;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
LABEL_9:
    v28 = (uint64_t)v37;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  if (!*(_BYTE *)(v17 + 32))
  {
    v39 = 0;
    sub_23BC3C5AC();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
    v18 = 2;
    goto LABEL_11;
  }
  if (*(_BYTE *)(v17 + 32) == 1)
  {
    v40 = 1;
    sub_23BC3C568();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
    v18 = 3;
LABEL_11:
    v28 = (uint64_t)v37;
    *v34 = v18;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  v35 = (char *)v17;
  v41 = 2;
  sub_23BC3C524();
  v22 = v16;
  v23 = v9;
  sub_23BC72600();
  v24 = v34;
  v26 = v31;
  v27 = sub_23BC72654();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v23);
  v28 = (uint64_t)v37;
  *v24 = v27 & 1;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_23BC3CABC@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return StackStatusLoadState.init(from:)(a1, a2);
}

uint64_t sub_23BC3CAD0(_QWORD *a1)
{
  return StackStatusLoadState.encode(to:)(a1);
}

uint64_t sub_23BC3CAE4()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23BC727A4();
  if (v1 == 2 || v1 == 3)
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BC727B0();
    sub_23BC727BC();
  }
  return sub_23BC727E0();
}

uint64_t sub_23BC3CB64()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  if (v1 == 2 || v1 == 3)
    return sub_23BC727B0();
  sub_23BC727B0();
  return sub_23BC727BC();
}

uint64_t sub_23BC3CBC0()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23BC727A4();
  if (v1 == 2 || v1 == 3)
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BC727B0();
    sub_23BC727BC();
  }
  return sub_23BC727E0();
}

BOOL sub_23BC3CC3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t StackButtonState.startWorkoutDetailLoadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StackButtonState();
  return sub_23BBFD690(v1 + *(int *)(v3 + 28), a1, type metadata accessor for StartWorkoutDetailLoadState);
}

uint64_t type metadata accessor for StackButtonState()
{
  uint64_t result;

  result = qword_256A77320;
  if (!qword_256A77320)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StackButtonState.startWorkoutDetailLoadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StackButtonState() + 28);
  return sub_23BBF8638(a1, v3);
}

uint64_t (*StackButtonState.startWorkoutDetailLoadState.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for StackButtonState();
  return nullsub_1;
}

uint64_t StackButtonState.loadState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StackButtonState();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t StackButtonState.loadState.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for StackButtonState();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*StackButtonState.loadState.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for StackButtonState();
  return nullsub_1;
}

uint64_t StackButtonState.init(workoutIdentifier:locale:allowedMediaTypes:startWorkoutDetailLoadState:loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, _QWORD *a7@<X8>)
{
  char v11;
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t result;

  v11 = *a6;
  *a7 = a1;
  a7[1] = a2;
  v12 = (int *)type metadata accessor for StackButtonState();
  v13 = (char *)a7 + v12[5];
  v14 = sub_23BC71C4C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a3, v14);
  *(_QWORD *)((char *)a7 + v12[6]) = a4;
  result = sub_23BC1A51C(a5, (uint64_t)a7 + v12[7]);
  *((_BYTE *)a7 + v12[8]) = v11;
  return result;
}

uint64_t StackButtonState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t started;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;

  v2 = v1;
  v4 = sub_23BC71C10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23BC7230C();
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for StackButtonState();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  v12 = *(_QWORD *)(v1 + v11[6]);
  swift_bridgeObjectRetain();
  sub_23BC2B398(a1, v12);
  swift_bridgeObjectRelease();
  sub_23BBFD690(v2 + v11[7], (uint64_t)v10, type metadata accessor for StartWorkoutDetailLoadState);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 2, v13))
  {
    sub_23BC727B0();
  }
  else
  {
    v26 = *(_QWORD *)v10;
    v14 = v26;
    v27 = v4;
    v15 = v4;
    v25 = *((_QWORD *)v10 + 1);
    v16 = v25;
    v17 = v5;
    v28 = v5;
    v18 = *((_QWORD *)v10 + 2);
    v19 = v10[25];
    v20 = &v10[*(int *)(v13 + 48)];
    v21 = v10[24];
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v7, v20, v15);
    sub_23BC727B0();
    v29 = v14;
    v30 = v16;
    v31 = v18;
    v32 = v21;
    v33 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76280);
    sub_23BC1EA0C();
    sub_23BC1EA50();
    sub_23BC727F8();
    sub_23BBF876C(v26, v25, v18, v21, v19);
    sub_23BBF377C(&qword_256A76278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    v22 = v27;
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v22);
  }
  v23 = *(unsigned __int8 *)(v2 + v11[8]);
  if (v23 == 2 || v23 == 3)
    return sub_23BC727B0();
  sub_23BC727B0();
  return sub_23BC727BC();
}

uint64_t sub_23BC3D178(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC3D1B0 + 4 * byte_23BC7B9D0[a1]))(0xD000000000000011, 0x800000023BC82160);
}

uint64_t sub_23BC3D1B0()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BC3D1E8()
{
  return 0x7461745364616F6CLL;
}

uint64_t sub_23BC3D204()
{
  unsigned __int8 *v0;

  return sub_23BC3D178(*v0);
}

uint64_t sub_23BC3D20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC3F038(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC3D230()
{
  sub_23BC3DB28();
  return sub_23BC72828();
}

uint64_t sub_23BC3D258()
{
  sub_23BC3DB28();
  return sub_23BC72834();
}

uint64_t StackButtonState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77298);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC3DB28();
  sub_23BC7281C();
  v14 = 0;
  sub_23BC726E4();
  if (!v2)
  {
    v9 = type metadata accessor for StackButtonState();
    v13 = 1;
    sub_23BC71C4C();
    sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23BC72720();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A76838);
    sub_23BC2C544(&qword_256A76840, (uint64_t (*)(void))sub_23BC2C0C8, MEMORY[0x24BEE1700]);
    sub_23BC72720();
    v11[14] = 3;
    type metadata accessor for StartWorkoutDetailLoadState(0);
    sub_23BBF377C(&qword_256A76860, type metadata accessor for StartWorkoutDetailLoadState, (uint64_t)&protocol conformance descriptor for StartWorkoutDetailLoadState);
    sub_23BC72720();
    v11[13] = *(_BYTE *)(v3 + *(int *)(v9 + 32));
    v11[12] = 4;
    sub_23BC3DB6C();
    sub_23BC72720();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StackButtonState.hashValue.getter()
{
  _BYTE v1[72];

  sub_23BC727A4();
  StackButtonState.hash(into:)((uint64_t)v1);
  return sub_23BC727E0();
}

uint64_t StackButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t started;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v21 = a2;
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v23 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23BC71C4C();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A772B0);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for StackButtonState();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC3DB28();
  v27 = v8;
  v12 = (uint64_t)v28;
  sub_23BC72810();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v28 = a1;
  v14 = v25;
  v15 = v26;
  v16 = v24;
  v35 = 0;
  *v11 = sub_23BC72648();
  v11[1] = v17;
  v34 = 1;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v11 + v9[5], v5, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76838);
  v33 = 2;
  sub_23BC2C544(&qword_256A76870, (uint64_t (*)(void))sub_23BC2C16C, MEMORY[0x24BEE1720]);
  sub_23BC72684();
  *(uint64_t *)((char *)v11 + v9[6]) = v29;
  v32 = 3;
  sub_23BBF377C(&qword_256A76890, type metadata accessor for StartWorkoutDetailLoadState, (uint64_t)&protocol conformance descriptor for StartWorkoutDetailLoadState);
  v18 = (uint64_t)v23;
  sub_23BC72684();
  sub_23BC1A51C(v18, (uint64_t)v11 + v9[7]);
  v30 = 4;
  sub_23BC3DBB0();
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v14);
  *((_BYTE *)v11 + v9[8]) = v31;
  sub_23BBFD690((uint64_t)v11, v21, (uint64_t (*)(_QWORD))type metadata accessor for StackButtonState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_23BBF36FC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StackButtonState);
}

uint64_t sub_23BC3D98C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StackButtonState.init(from:)(a1, a2);
}

uint64_t sub_23BC3D9A0(_QWORD *a1)
{
  return StackButtonState.encode(to:)(a1);
}

uint64_t sub_23BC3D9B4()
{
  _BYTE v1[72];

  sub_23BC727A4();
  StackButtonState.hash(into:)((uint64_t)v1);
  return sub_23BC727E0();
}

uint64_t sub_23BC3D9F4()
{
  _BYTE v1[72];

  sub_23BC727A4();
  StackButtonState.hash(into:)((uint64_t)v1);
  return sub_23BC727E0();
}

uint64_t _s14FitnessActions16StackButtonStateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  int *v7;
  uint64_t v8;
  int v9;
  int v10;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_23BC72744(), result = 0, (v5 & 1) != 0))
  {
    v7 = (int *)type metadata accessor for StackButtonState();
    if ((MEMORY[0x24260DE7C]((char *)a1 + v7[5], (char *)a2 + v7[5]) & 1) == 0
      || (sub_23BC6D9D0(*(_QWORD *)((char *)a1 + v7[6]), *(_QWORD *)((char *)a2 + v7[6])) & 1) == 0
      || (_s14FitnessActions27StartWorkoutDetailLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v7[7], (uint64_t)a2 + v7[7]) & 1) == 0)
    {
      return 0;
    }
    v8 = v7[8];
    v9 = *((unsigned __int8 *)a1 + v8);
    v10 = *((unsigned __int8 *)a2 + v8);
    if (v9 == 2)
    {
      if (v10 != 2)
        return 0;
    }
    else if (v9 == 3)
    {
      if (v10 != 3)
        return 0;
    }
    else if ((v10 & 0xFE) == 2 || ((((v9 & 1) == 0) ^ v10) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_23BC3DB28()
{
  unint64_t result;

  result = qword_256A772A0;
  if (!qword_256A772A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BF2C, &type metadata for StackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A772A0);
  }
  return result;
}

unint64_t sub_23BC3DB6C()
{
  unint64_t result;

  result = qword_256A772A8;
  if (!qword_256A772A8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StackStatusLoadState, &type metadata for StackStatusLoadState);
    atomic_store(result, (unint64_t *)&qword_256A772A8);
  }
  return result;
}

unint64_t sub_23BC3DBB0()
{
  unint64_t result;

  result = qword_256A772B8;
  if (!qword_256A772B8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StackStatusLoadState, &type metadata for StackStatusLoadState);
    atomic_store(result, (unint64_t *)&qword_256A772B8);
  }
  return result;
}

unint64_t sub_23BC3DBF8()
{
  unint64_t result;

  result = qword_256A772C0;
  if (!qword_256A772C0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StackStatusLoadState, &type metadata for StackStatusLoadState);
    atomic_store(result, (unint64_t *)&qword_256A772C0);
  }
  return result;
}

uint64_t sub_23BC3DC3C()
{
  return sub_23BBF377C((unint64_t *)&qword_256A748E8, (uint64_t (*)(uint64_t))type metadata accessor for StackButtonState, (uint64_t)&protocol conformance descriptor for StackButtonState);
}

uint64_t getEnumTagSinglePayload for StackStatusLoadState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_23BC3DCB8 + 4 * byte_23BC7B9D5[v4]))();
}

uint64_t storeEnumTagSinglePayload for StackStatusLoadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC3DD64 + 4 * byte_23BC7B9DF[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC3DD98 + 4 * byte_23BC7B9DA[v5]))();
}

uint64_t sub_23BC3DD98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3DDA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC3DDA8);
  return result;
}

uint64_t sub_23BC3DDB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC3DDBCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC3DDC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3DDC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3DDD4(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_23BC3DDF0(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for StackStatusLoadState()
{
  return &type metadata for StackStatusLoadState;
}

_QWORD *initializeBufferWithCopyOfBuffer for StackButtonState(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t started;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  char v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23BC71C4C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 2, v16))
    {
      started = type metadata accessor for StartWorkoutDetailLoadState(0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
    }
    else
    {
      v20 = *((_QWORD *)v15 + 1);
      v28 = *(_QWORD *)v15;
      v21 = *((_QWORD *)v15 + 2);
      v29 = v15[25];
      v22 = v15[24];
      sub_23BBF8608(*(_QWORD *)v15, v20, v21, v22, v29);
      *v14 = v28;
      v14[1] = v20;
      v14[2] = v21;
      *((_BYTE *)v14 + 24) = v22;
      *((_BYTE *)v14 + 25) = v29;
      v23 = *(int *)(v16 + 48);
      v24 = (char *)v14 + v23;
      v25 = &v15[v23];
      v26 = sub_23BC71C10();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
    }
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for StackButtonState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 2, v7);
  if (!(_DWORD)result)
  {
    sub_23BBF876C(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(unsigned __int8 *)(v6 + 24), *(_BYTE *)(v6 + 25));
    v9 = v6 + *(int *)(v7 + 48);
    v10 = sub_23BC71C10();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  return result;
}

_QWORD *initializeWithCopy for StackButtonState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t started;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BC71C4C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (char *)a2 + v12;
  swift_bridgeObjectRetain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 2, v15))
  {
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
  }
  else
  {
    v18 = *((_QWORD *)v14 + 1);
    v26 = *(_QWORD *)v14;
    v19 = *((_QWORD *)v14 + 2);
    v27 = v14[25];
    v20 = v14[24];
    sub_23BBF8608(*(_QWORD *)v14, v18, v19, v20, v27);
    *v13 = v26;
    v13[1] = v18;
    v13[2] = v19;
    *((_BYTE *)v13 + 24) = v20;
    *((_BYTE *)v13 + 25) = v27;
    v21 = *(int *)(v15 + 48);
    v22 = (char *)v13 + v21;
    v23 = &v14[v21];
    v24 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 2, v15);
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithCopy for StackButtonState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t started;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (uint64_t)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 2, v13);
  v17 = v15((uint64_t)v12, 2, v13);
  if (!v16)
  {
    if (!v17)
    {
      v27 = *(_QWORD *)v12;
      v28 = *((_QWORD *)v12 + 1);
      v29 = *((_QWORD *)v12 + 2);
      v42 = v12[25];
      v30 = v12[24];
      sub_23BBF8608(*(_QWORD *)v12, v28, v29, v30, v42);
      v31 = *(_QWORD *)v11;
      v32 = *(_QWORD *)(v11 + 8);
      v33 = *(_QWORD *)(v11 + 16);
      v34 = *(_BYTE *)(v11 + 25);
      *(_QWORD *)v11 = v27;
      *(_QWORD *)(v11 + 8) = v28;
      *(_QWORD *)(v11 + 16) = v29;
      v35 = *(unsigned __int8 *)(v11 + 24);
      *(_BYTE *)(v11 + 24) = v30;
      *(_BYTE *)(v11 + 25) = v42;
      sub_23BBF876C(v31, v32, v33, v35, v34);
      v36 = *(int *)(v13 + 48);
      v37 = v11 + v36;
      v38 = &v12[v36];
      v39 = sub_23BC71C10();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
      goto LABEL_7;
    }
    sub_23BC3E468(v11);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy((void *)v11, v12, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
    goto LABEL_7;
  }
  v18 = *(_QWORD *)v12;
  v40 = *((_QWORD *)v12 + 1);
  v19 = *((_QWORD *)v12 + 2);
  v41 = v12[25];
  v20 = v12[24];
  sub_23BBF8608(*(_QWORD *)v12, v40, v19, v20, v41);
  *(_QWORD *)v11 = v18;
  *(_QWORD *)(v11 + 8) = v40;
  *(_QWORD *)(v11 + 16) = v19;
  *(_BYTE *)(v11 + 24) = v20;
  *(_BYTE *)(v11 + 25) = v41;
  v21 = *(int *)(v13 + 48);
  v22 = v11 + v21;
  v23 = &v12[v21];
  v24 = sub_23BC71C10();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
LABEL_7:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_23BC3E468(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for StackButtonState(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t started;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
  {
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *(_OWORD *)((char *)v11 + 10) = *(_OWORD *)((char *)v12 + 10);
    v16 = *(int *)(v13 + 48);
    v17 = (char *)v11 + v16;
    v18 = (char *)v12 + v16;
    v19 = sub_23BC71C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for StackButtonState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t started;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BC71C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (uint64_t)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 2, v14);
  v18 = v16((uint64_t)v13, 2, v14);
  if (!v17)
  {
    if (!v18)
    {
      v25 = *((_QWORD *)v13 + 2);
      v26 = v13[24];
      v27 = v13[25];
      v28 = *(_QWORD *)v12;
      v29 = *(_QWORD *)(v12 + 8);
      v30 = *(_QWORD *)(v12 + 16);
      v31 = *(_BYTE *)(v12 + 25);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_QWORD *)(v12 + 16) = v25;
      v32 = *(unsigned __int8 *)(v12 + 24);
      *(_BYTE *)(v12 + 24) = v26;
      *(_BYTE *)(v12 + 25) = v27;
      sub_23BBF876C(v28, v29, v30, v32, v31);
      v33 = *(int *)(v14 + 48);
      v34 = v12 + v33;
      v35 = &v13[v33];
      v36 = sub_23BC71C10();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
      goto LABEL_7;
    }
    sub_23BC3E468(v12);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    started = type metadata accessor for StartWorkoutDetailLoadState(0);
    memcpy((void *)v12, v13, *(_QWORD *)(*(_QWORD *)(started - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 10) = *(_OWORD *)(v13 + 10);
  v19 = *(int *)(v14 + 48);
  v20 = v12 + v19;
  v21 = &v13[v19];
  v22 = sub_23BC71C10();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 2, v14);
LABEL_7:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StackButtonState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC3E7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t started;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23BC71C4C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      started = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      started = type metadata accessor for StartWorkoutDetailLoadState(0);
      v9 = *(_QWORD *)(started - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, started);
  }
}

uint64_t storeEnumTagSinglePayload for StackButtonState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC3E86C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t started;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23BC71C4C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      started = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      started = type metadata accessor for StartWorkoutDetailLoadState(0);
      v9 = *(_QWORD *)(started - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, started);
  }
  return result;
}

uint64_t sub_23BC3E908()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23BC71C4C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StartWorkoutDetailLoadState(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StackButtonState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BC3E9F8 + 4 * byte_23BC7B9E9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BC3EA2C + 4 * byte_23BC7B9E4[v4]))();
}

uint64_t sub_23BC3EA2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3EA34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC3EA3CLL);
  return result;
}

uint64_t sub_23BC3EA48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC3EA50);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BC3EA54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3EA5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StackButtonState.CodingKeys()
{
  return &type metadata for StackButtonState.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StackStatusLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC3EAC4 + 4 * byte_23BC7B9F3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC3EAF8 + 4 * byte_23BC7B9EE[v4]))();
}

uint64_t sub_23BC3EAF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3EB00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC3EB08);
  return result;
}

uint64_t sub_23BC3EB14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC3EB1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC3EB20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC3EB28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StackStatusLoadState.CodingKeys()
{
  return &type metadata for StackStatusLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for StackStatusLoadState.IdleCodingKeys()
{
  return &type metadata for StackStatusLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for StackStatusLoadState.FetchingCodingKeys()
{
  return &type metadata for StackStatusLoadState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for StackStatusLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC3EBA4 + 4 * byte_23BC7B9F8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC3EBC4 + 4 * byte_23BC7B9FD[v4]))();
}

_BYTE *sub_23BC3EBA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC3EBC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC3EBCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC3EBD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC3EBDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC3EBE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StackStatusLoadState.FetchedCodingKeys()
{
  return &type metadata for StackStatusLoadState.FetchedCodingKeys;
}

unint64_t sub_23BC3EC04()
{
  unint64_t result;

  result = qword_256A77368;
  if (!qword_256A77368)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BCF4, &type metadata for StackStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77368);
  }
  return result;
}

unint64_t sub_23BC3EC4C()
{
  unint64_t result;

  result = qword_256A77370;
  if (!qword_256A77370)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BE4C, &type metadata for StackStatusLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77370);
  }
  return result;
}

unint64_t sub_23BC3EC94()
{
  unint64_t result;

  result = qword_256A77378;
  if (!qword_256A77378)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BF04, &type metadata for StackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77378);
  }
  return result;
}

unint64_t sub_23BC3ECDC()
{
  unint64_t result;

  result = qword_256A77380;
  if (!qword_256A77380)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BE74, &type metadata for StackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77380);
  }
  return result;
}

unint64_t sub_23BC3ED24()
{
  unint64_t result;

  result = qword_256A77388;
  if (!qword_256A77388)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BE9C, &type metadata for StackButtonState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77388);
  }
  return result;
}

unint64_t sub_23BC3ED6C()
{
  unint64_t result;

  result = qword_256A77390;
  if (!qword_256A77390)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BD6C, &type metadata for StackStatusLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77390);
  }
  return result;
}

unint64_t sub_23BC3EDB4()
{
  unint64_t result;

  result = qword_256A77398;
  if (!qword_256A77398)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BD94, &type metadata for StackStatusLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77398);
  }
  return result;
}

unint64_t sub_23BC3EDFC()
{
  unint64_t result;

  result = qword_256A773A0;
  if (!qword_256A773A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BD1C, &type metadata for StackStatusLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A773A0);
  }
  return result;
}

unint64_t sub_23BC3EE44()
{
  unint64_t result;

  result = qword_256A773A8;
  if (!qword_256A773A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BD44, &type metadata for StackStatusLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A773A8);
  }
  return result;
}

unint64_t sub_23BC3EE8C()
{
  unint64_t result;

  result = qword_256A773B0;
  if (!qword_256A773B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BC64, &type metadata for StackStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A773B0);
  }
  return result;
}

unint64_t sub_23BC3EED4()
{
  unint64_t result;

  result = qword_256A773B8;
  if (!qword_256A773B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BC8C, &type metadata for StackStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A773B8);
  }
  return result;
}

unint64_t sub_23BC3EF1C()
{
  unint64_t result;

  result = qword_256A773C0;
  if (!qword_256A773C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BDBC, &type metadata for StackStatusLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A773C0);
  }
  return result;
}

unint64_t sub_23BC3EF64()
{
  unint64_t result;

  result = qword_256A773C8[0];
  if (!qword_256A773C8[0])
  {
    result = MEMORY[0x24260ED10](&unk_23BC7BDE4, &type metadata for StackStatusLoadState.CodingKeys);
    atomic_store(result, qword_256A773C8);
  }
  return result;
}

uint64_t sub_23BC3EFA8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6465646461 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BC3F024()
{
  return 0x6465646461;
}

uint64_t sub_23BC3F038(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82160 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82760 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023BC829F0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void static ModalPresentation.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v18 = a1;
  v16[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16[1] = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC724F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16[3] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v16[6] = (char *)v16 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v16[4] = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16[7] = a3;
  v16[8] = (char *)v16 - v15;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v22 = a6;
  v16[2] = a6;
  type metadata accessor for ModalPresentation();
}

uint64_t sub_23BC3F364(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  void (*v20)(uint64_t, _BYTE *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t, uint64_t);
  _BYTE v35[96];

  v5 = a1;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v35[-v7];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v13 = &v35[-v12];
  v14 = &v35[*(int *)(v11 + 48) - v12];
  *(_QWORD *)(v4 - 128) = v6;
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v15(&v35[-v12], *(_QWORD *)(v4 - 120), v5);
  v15(v14, v3, v5);
  v16 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v2[6];
  if (v16(v13, 1, v1) == 1)
  {
    v17 = 1;
    v18 = v16(v14, 1, v1);
    v19 = *(_QWORD *)(v4 - 128);
    if (v18 == 1)
      goto LABEL_17;
    goto LABEL_6;
  }
  v15(v8, (uint64_t)v13, v5);
  if (v16(v14, 1, v1) != 1)
  {
    v20 = (void (*)(uint64_t, _BYTE *, uint64_t))v2[4];
    v21 = *(_QWORD *)(v4 - 144);
    v20(v21, v14, v1);
    v22 = *(_QWORD *)(v4 - 160);
    v23 = v22 + *(int *)(*(_QWORD *)(v4 - 136) + 48);
    v20(v22, v8, v1);
    v24 = (void (*)(uint64_t, uint64_t, uint64_t))v2[2];
    *(_QWORD *)(v4 - 120) = v23;
    v24(v23, v21, v1);
    v25 = *(_QWORD *)(v4 - 168);
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    v27 = *(_QWORD *)(v4 - 152);
    if (v26(v22, 1, v27) == 1)
    {
      v28 = (void (*)(uint64_t, uint64_t))v2[1];
      v28(v21, v1);
      if (v26(*(_QWORD *)(v4 - 120), 1, v27) == 1)
      {
        v28(v22, v1);
LABEL_14:
        v17 = 1;
LABEL_16:
        v19 = *(_QWORD *)(v4 - 128);
        goto LABEL_17;
      }
    }
    else
    {
      v24(*(_QWORD *)(v4 - 176), v22, v1);
      v29 = *(_QWORD *)(v4 - 120);
      if (v26(v29, 1, v27) != 1)
      {
        v30 = *(_QWORD *)(v4 - 200);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v30, v29, v27);
        v31 = *(_QWORD *)(v4 - 176);
        *(_DWORD *)(v4 - 120) = sub_23BC7227C();
        v32 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        v32(v30, v27);
        v33 = (void (*)(uint64_t, uint64_t))v2[1];
        v33(*(_QWORD *)(v4 - 144), v1);
        v32(v31, v27);
        v33(v22, v1);
        if ((*(_DWORD *)(v4 - 120) & 1) != 0)
          goto LABEL_14;
LABEL_15:
        v17 = 0;
        goto LABEL_16;
      }
      ((void (*)(_QWORD, uint64_t))v2[1])(*(_QWORD *)(v4 - 144), v1);
      (*(void (**)(_QWORD, uint64_t))(v25 + 8))(*(_QWORD *)(v4 - 176), v27);
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(v22, *(_QWORD *)(v4 - 136));
    goto LABEL_15;
  }
  ((void (*)(_BYTE *, uint64_t))v2[1])(v8, v1);
LABEL_6:
  v17 = 0;
  v19 = v10;
  v5 = TupleTypeMetadata2;
LABEL_17:
  (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v13, v5);
  return v17;
}

void type metadata accessor for ModalPresentation()
{
  JUMPOUT(0x24260EC74);
}

uint64_t ModalPresentation.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_23BC724F8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v2, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    return sub_23BC727B0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
  sub_23BC727B0();
  sub_23BC72504();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_23BC3F788(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7373696D736964 && a2 == 0xE700000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2003789939 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC3F860(char a1)
{
  if ((a1 & 1) != 0)
    return 2003789939;
  else
    return 0x7373696D736964;
}

BOOL sub_23BC3F890(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23BC0F624(*a1, *a2);
}

uint64_t sub_23BC3F8A8()
{
  return sub_23BC0FF5C();
}

uint64_t sub_23BC3F8BC()
{
  return sub_23BC0F634();
}

uint64_t sub_23BC3F8D0()
{
  sub_23BC727A4();
  sub_23BC0F634();
  return sub_23BC727E0();
}

uint64_t sub_23BC3F918()
{
  char *v0;

  return sub_23BC3F860(*v0);
}

uint64_t sub_23BC3F92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC3F788(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC3F95C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC148B8();
  *a1 = result;
  return result;
}

uint64_t sub_23BC3F98C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7C458, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC3F9C0(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7C458, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC3F9F4@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  uint64_t result;

  v2 = sub_23BBE8CD8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

uint64_t sub_23BC3FA40@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23BC3FAE8(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23BBE8CD8, a2);
}

uint64_t sub_23BC3FA4C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7C4A8, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC3FA80(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7C4A8, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC3FAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBE9BD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC3FAE8@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC3FB20(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7C4F8, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC3FB54(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7C4F8, a1);
  return sub_23BC72834();
}

void ModalPresentation.encode(to:)()
{
  type metadata accessor for ModalPresentation.ShowCodingKeys();
}

void sub_23BC3FBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = MEMORY[0x24260ED10](&unk_23BC7C4F8, a1);
  *(_QWORD *)(v13 - 216) = a1;
  *(_QWORD *)(v13 - 232) = v15;
  v16 = sub_23BC7272C();
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v13 - 192) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v17;
  v18 = sub_23BC724F8();
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v13 - 160) = v18;
  *(_QWORD *)(v13 - 152) = v19;
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v20;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ModalPresentation.DismissCodingKeys();
}

void sub_23BC3FC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v13 - 248) = MEMORY[0x24260ED10](&unk_23BC7C4A8, a1);
  *(_QWORD *)(v13 - 240) = a1;
  v15 = sub_23BC7272C();
  *(_QWORD *)(v13 - 256) = v15;
  *(_QWORD *)(v13 - 264) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - v17;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 184) = v12;
  *(_QWORD *)(v13 - 176) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ModalPresentation.CodingKeys();
}

uint64_t sub_23BC3FD24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  MEMORY[0x24260ED10](&unk_23BC7C458, a1);
  v6 = sub_23BC7272C();
  *(_QWORD *)(v5 - 144) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v5 - 72) = v8;
  v9 = *(_QWORD *)(v5 - 160);
  v10 = *(_QWORD *)(v5 - 152);
  sub_23BC7281C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v4, *(_QWORD *)(v5 - 136), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {
    *(_BYTE *)(v5 - 120) = 0;
    v11 = *(_QWORD *)(v5 - 272);
    v12 = *(_QWORD *)(v5 - 144);
    v13 = *(_QWORD *)(v5 - 72);
    sub_23BC726A8();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 264) + 8))(v11, *(_QWORD *)(v5 - 256));
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 168) + 8))(v13, v12);
  }
  else
  {
    v15 = *(_QWORD *)(v5 - 168);
    v16 = *(_QWORD *)(v5 - 224);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v16, v4, v9);
    *(_BYTE *)(v5 - 120) = 1;
    v17 = *(_QWORD *)(v5 - 208);
    v18 = *(_QWORD *)(v5 - 144);
    sub_23BC726A8();
    v19 = *(_QWORD *)(v5 - 192);
    sub_23BC726D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 200) + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v16, v9);
    return (*(uint64_t (**)(_QWORD, uint64_t))(v15 + 8))(*(_QWORD *)(v5 - 72), v18);
  }
}

uint64_t ModalPresentation.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  ModalPresentation.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

void ModalPresentation.init(from:)()
{
  type metadata accessor for ModalPresentation.ShowCodingKeys();
}

void sub_23BC3FF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 216) = MEMORY[0x24260ED10](&unk_23BC7C4F8, a1);
  *(_QWORD *)(v13 - 208) = a1;
  v15 = sub_23BC7269C();
  *(_QWORD *)(v13 - 280) = v15;
  *(_QWORD *)(v13 - 264) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 128) = v11;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  type metadata accessor for ModalPresentation.DismissCodingKeys();
}

void sub_23BC40010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 232) = MEMORY[0x24260ED10](&unk_23BC7C4A8, a1);
  *(_QWORD *)(v13 - 224) = a1;
  v15 = sub_23BC7269C();
  *(_QWORD *)(v13 - 288) = v15;
  *(_QWORD *)(v13 - 296) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 240) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 128) = v11;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  type metadata accessor for ModalPresentation.CodingKeys();
}

void sub_23BC40088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x24260ED10](&unk_23BC7C458, a1);
  v6 = sub_23BC7269C();
  *(_QWORD *)(v5 - 176) = v6;
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 168) = v3;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 272) = v4;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v2;
  type metadata accessor for ModalPresentation();
}

uint64_t sub_23BC40100(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  _BYTE v39[96];

  *(_QWORD *)(v3 - 184) = a1;
  *(_QWORD *)(v3 - 256) = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v39[-v7];
  v9 = v2;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v10 = *(_QWORD *)(v3 - 72);
  sub_23BC72810();
  if (v10)
    goto LABEL_7;
  *(_QWORD *)(v3 - 320) = v6;
  *(_QWORD *)(v3 - 312) = v8;
  v11 = *(_QWORD *)(v3 - 184);
  *(_QWORD *)(v3 - 304) = v2;
  v12 = *(_QWORD *)(v3 - 176);
  *(_QWORD *)(v3 - 72) = v1;
  *(_QWORD *)(v3 - 160) = sub_23BC72690();
  v13 = sub_23BC723C0();
  MEMORY[0x24260ED10](MEMORY[0x24BEE12C8], v13);
  *(_QWORD *)(v3 - 128) = sub_23BC72534();
  *(_QWORD *)(v3 - 120) = v14;
  *(_QWORD *)(v3 - 112) = v15;
  *(_QWORD *)(v3 - 104) = v16;
  v17 = sub_23BC72528();
  MEMORY[0x24260ED10](MEMORY[0x24BEE2190], v17);
  sub_23BC724A4();
  v18 = *(unsigned __int8 *)(v3 - 160);
  if (v18 == 2
    || (v20 = *(_OWORD *)(v3 - 128),
        v19 = *(_OWORD *)(v3 - 112),
        *(_OWORD *)(v3 - 336) = v20,
        *(_OWORD *)(v3 - 160) = v20,
        *(_OWORD *)(v3 - 144) = v19,
        (sub_23BC724B0() & 1) == 0))
  {
    v23 = sub_23BC725A0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v25 = v11;
    v26 = *(_QWORD *)(v3 - 72);
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 192) + 8))(v26, v12);
    v9 = *(_QWORD **)(v3 - 304);
LABEL_7:
    v27 = (uint64_t)v9;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  if ((v18 & 1) != 0)
  {
    *(_BYTE *)(v3 - 160) = 1;
    v29 = *(_QWORD *)(v3 - 200);
    v30 = *(_QWORD *)(v3 - 72);
    sub_23BC72600();
    v33 = *(_QWORD *)(v3 - 320);
    v34 = *(_QWORD *)(v3 - 280);
    sub_23BC7263C();
    v35 = *(_QWORD *)(v3 - 192);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 264) + 8))(v29, v34);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v30, v12);
    v36 = sub_23BC724F8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v33, 0, 1, v36);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 32);
    v38 = *(_QWORD *)(v3 - 312);
    v37(v38, v33, v11);
    v37(*(_QWORD *)(v3 - 248), v38, v11);
  }
  else
  {
    *(_BYTE *)(v3 - 160) = 0;
    v21 = *(_QWORD *)(v3 - 240);
    v22 = *(_QWORD *)(v3 - 72);
    sub_23BC72600();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 296) + 8))(v21, *(_QWORD *)(v3 - 288));
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 192) + 8))(v22, v12);
    v31 = sub_23BC724F8();
    v32 = *(_QWORD *)(v3 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v32, 1, 1, v31);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 32))(*(_QWORD *)(v3 - 248), v32, v11);
  }
  v27 = *(_QWORD *)(v3 - 304);
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

void sub_23BC40564()
{
  ModalPresentation.init(from:)();
}

void sub_23BC40584()
{
  ModalPresentation.encode(to:)();
}

uint64_t sub_23BC405A0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  ModalPresentation.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

void sub_23BC405E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static ModalPresentation.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

void type metadata accessor for ModalPresentation.ShowCodingKeys()
{
  JUMPOUT(0x24260EC74);
}

void type metadata accessor for ModalPresentation.DismissCodingKeys()
{
  JUMPOUT(0x24260EC74);
}

void type metadata accessor for ModalPresentation.CodingKeys()
{
  JUMPOUT(0x24260EC74);
}

void sub_23BC40614()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BC40624()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC724F8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23BC4067C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  int v14;
  int v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    if (v7 > 1)
    {
      if ((*(unsigned int (**)(uint64_t *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
      {
LABEL_32:
        memcpy(a1, a2, v9);
        return a1;
      }
    }
    else if (*((_BYTE *)a2 + v8))
    {
      v14 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
      if (v8 > 3)
        v14 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v15 = v8;
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 != -1)
        goto LABEL_32;
    }
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1)
        return a1;
      goto LABEL_30;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    if (v7 <= 1)
LABEL_30:
      *((_BYTE *)a1 + v8) = 0;
  }
  return a1;
}

uint64_t sub_23BC40830(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v4 + 64) + 1;
  if (v5 > 1)
  {
    result = (*(uint64_t (**)(uint64_t))(v4 + 48))(result);
    if (result >= 2)
      return result;
    goto LABEL_15;
  }
  if (!*(_BYTE *)(result + v6))
    goto LABEL_15;
  v7 = (*(unsigned __int8 *)(result + v6) - 1) << (8 * v6);
  if (v6 > 3)
    v7 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  if (v7 == -1)
  {
LABEL_15:
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return result;
}

void *sub_23BC4093C(void *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 1)
  {
    if (a2[v8])
    {
      v9 = (a2[v8] - 1) << (8 * v8);
      if (v8 > 3)
        v9 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v10 = v8;
        else
          v10 = 4;
        __asm { BR              X11 }
      }
      if (v9 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1)
        return a1;
    }
    else
    {
      (*(void (**)(void *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      if (v7 > 1)
        return a1;
    }
    *((_BYTE *)a1 + v8) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) < 2)goto LABEL_14;
LABEL_20:
  if (v7 >= 2)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

unsigned __int8 *sub_23BC40AB0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t (*v12)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t (*v17)(unsigned __int8 *, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 > 1)
  {
    v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v13 = v12(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
    v14 = v12(a2, v7, v5);
    if (v13 >= 2)
    {
      if (v14 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v8);
        if (v7 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        if (v7 > 1)
          return a1;
      }
      a1[v8] = 0;
      return a1;
    }
    if (v14 >= 2)
    {
LABEL_31:
      if (!v12(a1, 1, v5))
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_41;
    }
LABEL_33:
    v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, 1, v5);
    v19 = v17(a2, 1, v5);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 24))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    return a1;
  }
  v9 = 8 * v8;
  if (!a1[v8])
    goto LABEL_29;
  v10 = (a1[v8] - 1) << v9;
  if (v8 > 3)
    v10 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v11 = v8;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v10 == -1)
  {
LABEL_29:
    if (a2[v8])
    {
      v15 = (a2[v8] - 1) << v9;
      if (v8 > 3)
        v15 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v16 = v8;
        else
          v16 = 4;
        __asm { BR              X11 }
      }
      if (v15 != -1)
      {
        v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!a2[v8] || (a2[v8] - 1) << v9 == -1)
    goto LABEL_45;
LABEL_41:
  if (v7 >= 2)
    v20 = v8;
  else
    v20 = v8 + 1;
  memcpy(a1, a2, v20);
  return a1;
}

void *sub_23BC40E1C(void *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 1)
  {
    if (a2[v8])
    {
      v9 = (a2[v8] - 1) << (8 * v8);
      if (v8 > 3)
        v9 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v10 = v8;
        else
          v10 = 4;
        __asm { BR              X11 }
      }
      if (v9 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1)
        return a1;
    }
    else
    {
      (*(void (**)(void *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      if (v7 > 1)
        return a1;
    }
    *((_BYTE *)a1 + v8) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) < 2)goto LABEL_14;
LABEL_20:
  if (v7 >= 2)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

unsigned __int8 *sub_23BC40F90(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t (*v12)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t (*v17)(unsigned __int8 *, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 > 1)
  {
    v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v13 = v12(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
    v14 = v12(a2, v7, v5);
    if (v13 >= 2)
    {
      if (v14 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v8);
        if (v7 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        if (v7 > 1)
          return a1;
      }
      a1[v8] = 0;
      return a1;
    }
    if (v14 >= 2)
    {
LABEL_31:
      if (!v12(a1, 1, v5))
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_41;
    }
LABEL_33:
    v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, 1, v5);
    v19 = v17(a2, 1, v5);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 40))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    return a1;
  }
  v9 = 8 * v8;
  if (!a1[v8])
    goto LABEL_29;
  v10 = (a1[v8] - 1) << v9;
  if (v8 > 3)
    v10 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v11 = v8;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v10 == -1)
  {
LABEL_29:
    if (a2[v8])
    {
      v15 = (a2[v8] - 1) << v9;
      if (v8 > 3)
        v15 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v16 = v8;
        else
          v16 = 4;
        __asm { BR              X11 }
      }
      if (v15 != -1)
      {
        v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!a2[v8] || (a2[v8] - 1) << v9 == -1)
    goto LABEL_45;
LABEL_41:
  if (v7 >= 2)
    v20 = v8;
  else
    v20 = v8 + 1;
  memcpy(a1, a2, v20);
  return a1;
}

uint64_t sub_23BC412FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  BOOL v16;
  uint64_t result;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (v5 < 2)
  {
    v7 = 0;
    ++v8;
  }
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_26;
  v10 = 8 * v8;
  if (v8 > 3)
    goto LABEL_10;
  v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    v11 = *(_DWORD *)(a1 + v8);
    if (v11)
      goto LABEL_17;
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2)
        goto LABEL_26;
LABEL_10:
      v11 = *(unsigned __int8 *)(a1 + v8);
      if (!*(_BYTE *)(a1 + v8))
        goto LABEL_26;
LABEL_17:
      v13 = (v11 - 1) << v10;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = v8;
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      return v7 + v13 + 1;
    }
    v11 = *(unsigned __int16 *)(a1 + v8);
    if (*(_WORD *)(a1 + v8))
      goto LABEL_17;
  }
LABEL_26:
  if (!v7)
    return 0;
  if (v5 < 2)
    return 0;
  v15 = (*(uint64_t (**)(void))(v4 + 48))();
  v16 = v15 >= 2;
  result = v15 - 2;
  if ((_DWORD)result == 0 || !v16)
    return 0;
  return result;
}

void sub_23BC41444(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  size_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = v9 - 1;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v8 >= 2)
  {
    v12 = v11;
  }
  else
  {
    v10 = 0;
    v12 = v11 + 1;
  }
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X13 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_23BC41668()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23BC41670()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_23BC41690()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_23BC416A0()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_23BC416A8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_23BC416B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  v4 = *(_QWORD *)(v2 + 64);
  if (!v3)
    ++v4;
  if (v3 > 1)
  {
    v6 = (*(uint64_t (**)(void))(v2 + 48))();
    if (v6 >= 2)
      return v6 - 1;
    else
      return 0;
  }
  else if (*(_BYTE *)(a1 + v4))
  {
    v5 = (*(unsigned __int8 *)(a1 + v4) - 1) << (8 * v4);
    if (v4 > 3)
      v5 = 0;
    if ((_DWORD)v4)
    {
      if (v4 > 3)
        LODWORD(v4) = 4;
      __asm { BR              X11 }
    }
    return (v5 + 1);
  }
  else
  {
    return 0;
  }
}

void sub_23BC41780(unsigned int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (v5)
  {
    v7 = *(_QWORD *)(v4 + 64);
  }
  else
  {
    v6 = 0;
    v7 = *(_QWORD *)(v4 + 64) + 1;
  }
  if (v6 < a2)
  {
    v8 = ~v6 + a2;
    if (v7 >= 4)
    {
      bzero(a1, v7);
      *a1 = v8;
      LOBYTE(v9) = 1;
      if (v5 > 1)
        return;
LABEL_19:
      *((_BYTE *)a1 + v7) = v9;
      return;
    }
    v9 = (v8 >> (8 * v7)) + 1;
    if ((_DWORD)v7)
    {
      v10 = v8 & ~(-1 << (8 * v7));
      bzero(a1, v7);
      if ((_DWORD)v7 != 3)
      {
        if ((_DWORD)v7 == 2)
        {
          *(_WORD *)a1 = v10;
          if (v5 > 1)
            return;
        }
        else
        {
          *(_BYTE *)a1 = v10;
          if (v5 > 1)
            return;
        }
        goto LABEL_19;
      }
      *(_WORD *)a1 = v10;
      *((_BYTE *)a1 + 2) = BYTE2(v10);
    }
    if (v5 > 1)
      return;
    goto LABEL_19;
  }
  if (v5 > 1)
  {
    if (a2)
      (*(void (**)(unsigned int *, _QWORD, _QWORD))(v4 + 56))(a1, a2 + 1, *(unsigned int *)(v4 + 84));
  }
  else
  {
    *((_BYTE *)a1 + v7) = 0;
  }
}

uint64_t sub_23BC418AC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC418F8 + 4 * byte_23BC7C133[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC4192C + 4 * byte_23BC7C12E[v4]))();
}

uint64_t sub_23BC4192C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC41934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC4193CLL);
  return result;
}

uint64_t sub_23BC41948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC41950);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC41954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC4195C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC41968(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC419A8 + 4 * byte_23BC7C138[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC419C8 + 4 * byte_23BC7C13D[v4]))();
}

_BYTE *sub_23BC419A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC419C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC419D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC419D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC419E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC419E8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_23BC419F4()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC41A04()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC41A14()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC41A24()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC41A34()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC41A44()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC41A54()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC41A64()
{
  JUMPOUT(0x24260ED10);
}

uint64_t BookmarkStatusLoadState.hash(into:)(uint64_t a1, char a2)
{
  if (a2 == 2 || a2 == 3)
    return sub_23BC727B0();
  sub_23BC727B0();
  return sub_23BC727BC();
}

BOOL static BookmarkStatusLoadState.== infix(_:_:)(char a1, char a2)
{
  if (a1 == 2)
    return a2 == 2;
  if (a1 == 3)
    return a2 == 3;
  if ((a2 & 0xFE) == 2)
    return 0;
  return (((a1 & 1) == 0) ^ a2) & 1;
}

uint64_t sub_23BC41B2C(char a1)
{
  return *(_QWORD *)&aIdle_9[8 * a1];
}

uint64_t sub_23BC41B4C()
{
  char *v0;

  return sub_23BC41B2C(*v0);
}

uint64_t sub_23BC41B54()
{
  sub_23BC41F64();
  return sub_23BC72828();
}

uint64_t sub_23BC41B7C()
{
  sub_23BC41F64();
  return sub_23BC72834();
}

uint64_t sub_23BC41BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC4375C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC41BD0()
{
  sub_23BC41FA8();
  return sub_23BC72828();
}

uint64_t sub_23BC41BF8()
{
  sub_23BC41FA8();
  return sub_23BC72834();
}

uint64_t sub_23BC41C20()
{
  sub_23BC41FEC();
  return sub_23BC72828();
}

uint64_t sub_23BC41C48()
{
  sub_23BC41FEC();
  return sub_23BC72834();
}

uint64_t sub_23BC41C70()
{
  sub_23BC42030();
  return sub_23BC72828();
}

uint64_t sub_23BC41C98()
{
  sub_23BC42030();
  return sub_23BC72834();
}

uint64_t BookmarkStatusLoadState.encode(to:)(_QWORD *a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v3 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A775D0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A775D8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A775E0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A775E8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC41F64();
  sub_23BC7281C();
  if (v3 == 2)
  {
    v25 = 0;
    sub_23BC42030();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
  }
  if (v3 == 3)
  {
    v26 = 1;
    sub_23BC41FEC();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
  }
  v27 = 2;
  sub_23BC41FA8();
  v16 = v21;
  sub_23BC726A8();
  v17 = v23;
  sub_23BC726F0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23BC41F64()
{
  unint64_t result;

  result = qword_256A775F0;
  if (!qword_256A775F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CDE4, &type metadata for BookmarkStatusLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A775F0);
  }
  return result;
}

unint64_t sub_23BC41FA8()
{
  unint64_t result;

  result = qword_256A775F8;
  if (!qword_256A775F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CD94, &type metadata for BookmarkStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A775F8);
  }
  return result;
}

unint64_t sub_23BC41FEC()
{
  unint64_t result;

  result = qword_256A77600;
  if (!qword_256A77600)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CD44, &type metadata for BookmarkStatusLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77600);
  }
  return result;
}

unint64_t sub_23BC42030()
{
  unint64_t result;

  result = qword_256A77608;
  if (!qword_256A77608)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CCF4, &type metadata for BookmarkStatusLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77608);
  }
  return result;
}

uint64_t BookmarkStatusLoadState.hashValue.getter(char a1)
{
  sub_23BC727A4();
  if (a1 == 2 || a1 == 3)
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BC727B0();
    sub_23BC727BC();
  }
  return sub_23BC727E0();
}

uint64_t BookmarkStatusLoadState.init(from:)(_QWORD *a1)
{
  return sub_23BC43804(a1);
}

uint64_t sub_23BC4210C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BC43804(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23BC42134(_QWORD *a1)
{
  unsigned __int8 *v1;

  return BookmarkStatusLoadState.encode(to:)(a1, *v1);
}

uint64_t RemoveBookmarkConfirmationData.hash(into:)()
{
  return sub_23BC727BC();
}

BOOL static RemoveBookmarkConfirmationData.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23BC42190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC46094(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC421B8()
{
  sub_23BC43C24();
  return sub_23BC72828();
}

uint64_t sub_23BC421E0()
{
  sub_23BC43C24();
  return sub_23BC72834();
}

uint64_t RemoveBookmarkConfirmationData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77610);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC43C24();
  sub_23BC7281C();
  sub_23BC726F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RemoveBookmarkConfirmationData.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727BC();
  return sub_23BC727E0();
}

uint64_t RemoveBookmarkConfirmationData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77620);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC43C24();
  sub_23BC72810();
  if (!v2)
  {
    v9 = sub_23BC72654();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BC4243C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return RemoveBookmarkConfirmationData.init(from:)(a1, a2);
}

uint64_t sub_23BC42450(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77610);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC43C24();
  sub_23BC7281C();
  sub_23BC726F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23BC42538()
{
  sub_23BC727A4();
  sub_23BC727BC();
  return sub_23BC727E0();
}

uint64_t sub_23BC4257C()
{
  return sub_23BC727BC();
}

uint64_t sub_23BC425A4()
{
  sub_23BC727A4();
  sub_23BC727BC();
  return sub_23BC727E0();
}

uint64_t BookmarkButtonState.removeConfirmation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BBE817C(v2 + *(int *)(a1 + 48), a2, &qword_256A74420);
}

uint64_t BookmarkButtonState.removeConfirmation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BBF117C(a1, v2 + *(int *)(a2 + 48));
}

uint64_t (*BookmarkButtonState.removeConfirmation.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t BookmarkButtonState.init(identifier:locale:presentationContextKey:removeConfirmation:loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a8, a1, a6);
  v16 = (int *)type metadata accessor for BookmarkButtonState(0, a6, a7, v15);
  v17 = a8 + v16[9];
  v18 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  v19 = a8 + v16[10];
  v20 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a3, v20);
  sub_23BBE87F8(a4, a8 + v16[12], &qword_256A74420);
  v21 = a8 + v16[11];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a5, v22);
}

uint64_t sub_23BC42734(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC81D20)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23BC42934(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC42970 + 4 * byte_23BC7C550[a1]))(0xD000000000000016, 0x800000023BC81D00);
}

uint64_t sub_23BC42970()
{
  return 0x696669746E656469;
}

uint64_t sub_23BC4298C()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BC429A0()
{
  return 0x7461745364616F6CLL;
}

unint64_t sub_23BC429BC()
{
  return 0xD000000000000012;
}

uint64_t sub_23BC429D8()
{
  unsigned __int8 *v0;

  return sub_23BC42934(*v0);
}

uint64_t sub_23BC429E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC42734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC42A10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC46148();
  *a1 = result;
  return result;
}

uint64_t sub_23BC42A38(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7CC54, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC42A6C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC7CC54, a1);
  return sub_23BC72834();
}

uint64_t BookmarkButtonState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[4];
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v14[0] = a2;
  v14[1] = v5;
  v7 = type metadata accessor for BookmarkButtonState.CodingKeys(255, v5, v6, a4);
  MEMORY[0x24260ED10](&unk_23BC7CC54, v7);
  v8 = sub_23BC7272C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v19 = 0;
  v12 = v14[3];
  sub_23BC72720();
  if (!v12)
  {
    v18 = 1;
    sub_23BC71C4C();
    sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23BC72720();
    v17 = 2;
    sub_23BC71C34();
    sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23BC72720();
    v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
    sub_23BC39CA0(&qword_256A77110, MEMORY[0x24BE2B3F8]);
    sub_23BC72720();
    v15 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
    sub_23BBF1264(&qword_256A74458, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
    sub_23BC72720();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t BookmarkButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v41 = a4;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v42);
  v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23BC71C34();
  v55 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v45 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23BC71C4C();
  v48 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v57 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for BookmarkButtonState.CodingKeys(255, a2, a3, v15);
  MEMORY[0x24260ED10](&unk_23BC7CC54, v16);
  v59 = sub_23BC7269C();
  v51 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v18 = (char *)&v40 - v17;
  v56 = a2;
  v54 = a3;
  v20 = (int *)type metadata accessor for BookmarkButtonState(0, a2, a3, v19);
  v21 = *((_QWORD *)v20 - 1);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v40 - v22;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v58 = v18;
  v24 = (uint64_t)v60;
  sub_23BC72810();
  if (v24)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v51;
  v26 = v52;
  v40 = v21;
  v27 = v23;
  v28 = v55;
  v29 = v53;
  v60 = a1;
  v65 = 0;
  v30 = v56;
  sub_23BC72684();
  v31 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  v54 = (uint64_t)v27;
  v31(v27, v57, v30);
  v64 = 1;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v32 = v49;
  sub_23BC72684();
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v54 + v20[9], v26, v32);
  v63 = 2;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v33 = v45;
  v57 = 0;
  sub_23BC72684();
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v54 + v20[10], v33, v29);
  v62 = 3;
  sub_23BC39CA0(qword_256A77118, MEMORY[0x24BE2B410]);
  v34 = v44;
  v35 = v47;
  sub_23BC72684();
  v36 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v54 + v20[11], v34, v35);
  v61 = 4;
  sub_23BBF1264(&qword_256A74478, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v37 = (uint64_t)v43;
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v58, v59);
  sub_23BBE87F8(v37, v36 + v20[12], &qword_256A74420);
  v38 = v40;
  (*(void (**)(uint64_t, uint64_t, int *))(v40 + 16))(v41, v36, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  return (*(uint64_t (**)(uint64_t, int *))(v38 + 8))(v36, v20);
}

uint64_t sub_23BC43300@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return BookmarkButtonState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BC4331C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return BookmarkButtonState.encode(to:)(a1, a2, a3, a4);
}

uint64_t BookmarkButtonState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_23BC71C34();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v20 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v21 = (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC72264();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v22 = v4;
  sub_23BC72264();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  sub_23BC38C84();
  sub_23BC72264();
  sub_23BBE817C(v2 + *(int *)(a2 + 48), (uint64_t)v14, &qword_256A74420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
    return sub_23BC727B0();
  sub_23BBE87F8((uint64_t)v14, (uint64_t)v11, &qword_256A74428);
  sub_23BC727B0();
  v16 = v21;
  sub_23BBE817C((uint64_t)v11, v21, &qword_256A74428);
  v18 = v22;
  v17 = v23;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v16, 1, v22) == 1)
  {
    sub_23BC727BC();
  }
  else
  {
    v19 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v20, v16, v18);
    sub_23BC727BC();
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v18);
  }
  return sub_23BC38CE0((uint64_t)v11);
}

uint64_t static BookmarkButtonState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((sub_23BC7227C() & 1) != 0
    && (v9 = type metadata accessor for BookmarkButtonState(0, a3, a4, v8),
        (MEMORY[0x24260DE7C](a1 + *(int *)(v9 + 36), a2 + *(int *)(v9 + 36)) & 1) != 0)
    && (sub_23BC71C1C() & 1) != 0
    && (sub_23BC7212C() & 1) != 0)
  {
    return sub_23BBEE428(a1 + *(int *)(v9 + 48), a2 + *(int *)(v9 + 48));
  }
  else
  {
    return 0;
  }
}

uint64_t BookmarkButtonState.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  BookmarkButtonState.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t sub_23BC43710(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  BookmarkButtonState.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BC43750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static BookmarkButtonState.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_23BC4375C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BC437E8()
{
  return 0x6B72616D6B6F6F62;
}

uint64_t sub_23BC43804(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777A0);
  v3 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  v32 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777A8);
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777B8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v36 = a1;
  v15 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23BC41F64();
  v16 = v37;
  sub_23BC72810();
  if (v16)
    goto LABEL_9;
  v29 = v7;
  v37 = v6;
  v18 = v34;
  v17 = v35;
  v19 = v11;
  v20 = sub_23BC72690();
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v15 = (uint64_t)v13;
    v21 = sub_23BC725A0();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v23 = &type metadata for BookmarkStatusLoadState;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v10);
    goto LABEL_9;
  }
  if (!*(_BYTE *)(v20 + 32))
  {
    v38 = 0;
    sub_23BC42030();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v15 = 2;
    goto LABEL_9;
  }
  if (*(_BYTE *)(v20 + 32) == 1)
  {
    v39 = 1;
    sub_23BC41FEC();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v15 = 3;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return v15;
  }
  v40 = 2;
  sub_23BC41FA8();
  sub_23BC72600();
  v25 = v17;
  v26 = v31;
  v27 = sub_23BC72654();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v15 = v27 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v15;
}

unint64_t sub_23BC43C24()
{
  unint64_t result;

  result = qword_256A77618;
  if (!qword_256A77618)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CCA4, &type metadata for RemoveBookmarkConfirmationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77618);
  }
  return result;
}

uint64_t type metadata accessor for BookmarkButtonState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BookmarkButtonState);
}

uint64_t type metadata accessor for BookmarkButtonState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BookmarkButtonState.CodingKeys);
}

unint64_t sub_23BC43C84()
{
  unint64_t result;

  result = qword_256A77628;
  if (!qword_256A77628)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for BookmarkStatusLoadState, &type metadata for BookmarkStatusLoadState);
    atomic_store(result, (unint64_t *)&qword_256A77628);
  }
  return result;
}

unint64_t sub_23BC43CCC()
{
  unint64_t result;

  result = qword_256A77630[0];
  if (!qword_256A77630[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveBookmarkConfirmationData, &type metadata for RemoveBookmarkConfirmationData);
    atomic_store(result, qword_256A77630);
  }
  return result;
}

void sub_23BC43D10()
{
  JUMPOUT(0x24260ED10);
}

uint64_t getEnumTagSinglePayload for BookmarkStatusLoadState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_23BC43D70 + 4 * byte_23BC7C555[v4]))();
}

uint64_t storeEnumTagSinglePayload for BookmarkStatusLoadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC43E1C + 4 * byte_23BC7C55F[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC43E50 + 4 * byte_23BC7C55A[v5]))();
}

uint64_t sub_23BC43E50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC43E58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC43E60);
  return result;
}

uint64_t sub_23BC43E6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC43E74);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC43E78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC43E80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookmarkStatusLoadState()
{
  return &type metadata for BookmarkStatusLoadState;
}

uint64_t getEnumTagSinglePayload for RemoveBookmarkConfirmationData(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoveBookmarkConfirmationData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC43F88 + 4 * byte_23BC7C569[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC43FBC + 4 * byte_23BC7C564[v4]))();
}

uint64_t sub_23BC43FBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC43FC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC43FCCLL);
  return result;
}

uint64_t sub_23BC43FD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC43FE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC43FE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC43FEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoveBookmarkConfirmationData()
{
  return &type metadata for RemoveBookmarkConfirmationData;
}

void sub_23BC44008()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_23BC71C4C();
    if (v1 <= 0x3F)
    {
      sub_23BC71C34();
      if (v2 <= 0x3F)
      {
        sub_23BC3B88C();
        if (v3 <= 0x3F)
        {
          sub_23BBF2D28();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *sub_23BC440E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  size_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  void (*v34)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v35;
  size_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  unsigned __int8 *v43;
  size_t v44;
  int v45;
  int v46;
  size_t __n;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v59)(unint64_t, unint64_t, uint64_t);

  v54 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(v54 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v56 = sub_23BC71C4C();
  v5 = *(_QWORD *)(v56 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v53 = v4 + v6;
  v8 = *(_QWORD *)(v5 + 64);
  v57 = sub_23BC71C34();
  v9 = *(_QWORD *)(v57 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v52 = v8 + v10;
  v12 = (v8 + v11 + ((v4 + v7) & ~v7)) & ~v11;
  v13 = *(_QWORD *)(v9 + 64);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16;
  v18 = v13 + v16;
  v19 = *(_QWORD *)(v15 + 64);
  v20 = v19 + v10;
  v21 = (v19 + v11 + ((v13 + v17 + v12) & ~v17)) & ~v11;
  v22 = *(unsigned int *)(v9 + 84);
  if ((_DWORD)v22)
    v23 = v13;
  else
    v23 = v13 + 1;
  if (v22 >= 2)
    v24 = v23;
  else
    v24 = v23 + 1;
  v25 = v21 + v24;
  v26 = v6 | v10 | v16 | *(_DWORD *)(v3 + 80);
  v27 = (v6 | v10 | v16 | *(_BYTE *)(v3 + 80));
  v28 = v26 & 0x100000;
  if (v27 > 7 || v28 != 0 || v25 > 0x18)
  {
    v31 = *a2;
    *a1 = *a2;
    v32 = (uint64_t *)(v31 + ((v27 + 16) & ~v27));
    swift_retain();
  }
  else
  {
    __n = v24;
    v49 = v23;
    v33 = ~(unint64_t)v10;
    v50 = ~v17;
    v51 = v14;
    v34 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16);
    v35 = v54;
    v55 = v20;
    v36 = v18;
    v34(a1, a2, v35);
    v37 = ((unint64_t)a1 + v53) & ~(unint64_t)v6;
    v38 = ((unint64_t)a2 + v53) & ~v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v37, v38, v56);
    v39 = (v38 + v52) & v33;
    v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v59((v37 + v52) & v33, v39, v57);
    v40 = (((v37 + v52) & v33) + v36) & v50;
    v41 = (v39 + v36) & v50;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16))(v40, v41, v51);
    v42 = (void *)((v55 + v40) & v33);
    v43 = (unsigned __int8 *)((v55 + v41) & v33);
    v32 = a1;
    if (v22 > 1)
    {
      v44 = v49;
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v55 + v41) & v33, v22, v57) >= 2)
      {
LABEL_32:
        memcpy(v42, v43, __n);
        return v32;
      }
    }
    else
    {
      v44 = v49;
      if (v43[v49])
      {
        v45 = (v43[v49] - 1) << (8 * v49);
        if (v49 > 3)
          v45 = 0;
        if ((_DWORD)v49)
        {
          if (v49 <= 3)
            v46 = v49;
          else
            v46 = 4;
          __asm { BR              X11 }
        }
        if (v45 != -1)
          goto LABEL_32;
      }
    }
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v43, 1, v57))
    {
      memcpy(v42, v43, v44);
      if (v22 > 1)
        return v32;
      goto LABEL_30;
    }
    v59((unint64_t)v42, (unint64_t)v43, v57);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v42, 0, 1, v57);
    if (v22 <= 1)
LABEL_30:
      *((_BYTE *)v42 + v44) = 0;
  }
  return v32;
}

uint64_t sub_23BC4441C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  void (*v22)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_23BC71C4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_23BC71C34();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v22 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v22(v12, v9);
  v13 = *(_QWORD *)(v10 + 64);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t))(v15 + 8))(v16, v14);
  v18 = (*(_QWORD *)(v15 + 64) + v11 + v16) & ~v11;
  v19 = *(_DWORD *)(v10 + 84);
  if (v19)
    v20 = v13;
  else
    v20 = v13 + 1;
  if (v19 > 1)
  {
    result = (*(uint64_t (**)(unint64_t))(v10 + 48))(v18);
    if (result >= 2)
      return result;
    goto LABEL_15;
  }
  if (!*(_BYTE *)(v18 + v20))
    goto LABEL_15;
  v21 = (*(unsigned __int8 *)(v18 + v20) - 1) << (8 * v20);
  if (v20 > 3)
    v21 = 0;
  if ((_DWORD)v20)
  {
    if (v20 > 3)
      LODWORD(v20) = 4;
    __asm { BR              X11 }
  }
  if (v21 == -1)
  {
LABEL_15:
    result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9);
    if (!(_DWORD)result)
      return ((uint64_t (*)(unint64_t, uint64_t))v22)(v18, v9);
  }
  return result;
}

uint64_t sub_23BC445F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  void *v27;
  _BYTE *v28;
  unsigned int v29;
  size_t v30;
  int v31;
  int v32;
  size_t v33;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v20 + v23 + v17) & ~v23;
  v25 = (v20 + v23 + v18) & ~v23;
  (*(void (**)(size_t, size_t, uint64_t))(v22 + 16))(v24, v25, v21);
  v26 = *(_QWORD *)(v22 + 64) + v16;
  v27 = (void *)((v26 + v24) & ~v16);
  v28 = (_BYTE *)((v26 + v25) & ~v16);
  v29 = *(_DWORD *)(v15 + 84);
  if (v29)
    v30 = v20;
  else
    v30 = v20 + 1;
  if (v29 <= 1)
  {
    if (v28[v30])
    {
      v31 = (v28[v30] - 1) << (8 * v30);
      if (v30 > 3)
        v31 = 0;
      if ((_DWORD)v30)
      {
        if (v30 <= 3)
          v32 = v30;
        else
          v32 = 4;
        __asm { BR              X11 }
      }
      if (v31 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v28, 1, v14))
    {
      memcpy(v27, v28, v30);
      if (v29 > 1)
        return a1;
    }
    else
    {
      v19((uint64_t)v27, (uint64_t)v28, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
      if (v29 > 1)
        return a1;
    }
    *((_BYTE *)v27 + v30) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v15 + 48))(v28, *(unsigned int *)(v15 + 84), v14) < 2)
    goto LABEL_14;
LABEL_20:
  if (v29 >= 2)
    v33 = v30;
  else
    v33 = v30 + 1;
  memcpy(v27, v28, v33);
  return a1;
}

uint64_t sub_23BC44848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  size_t v30;
  char v31;
  int v32;
  int v33;
  uint64_t (*v34)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  uint64_t (*v39)(unsigned __int8 *, uint64_t, uint64_t);
  int v40;
  int v41;
  size_t v42;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v20 + v23 + v17) & ~v23;
  v25 = (v20 + v23 + v18) & ~v23;
  (*(void (**)(size_t, size_t, uint64_t))(v22 + 24))(v24, v25, v21);
  v26 = *(_QWORD *)(v22 + 64) + v16;
  v27 = (unsigned __int8 *)((v26 + v24) & ~v16);
  v28 = (unsigned __int8 *)((v26 + v25) & ~v16);
  v29 = *(unsigned int *)(v15 + 84);
  if ((_DWORD)v29)
    v30 = v20;
  else
    v30 = v20 + 1;
  if (v29 > 1)
  {
    v34 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v35 = v34(v27, *(unsigned int *)(v15 + 84), v14);
    v36 = v34(v28, v29, v14);
    if (v35 >= 2)
    {
      if (v36 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v28, 1, v14))
      {
        memcpy(v27, v28, v30);
        if (v29 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 16))(v27, v28, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
        if (v29 > 1)
          return a1;
      }
      v27[v30] = 0;
      return a1;
    }
    if (v36 >= 2)
    {
LABEL_31:
      if (!v34(v27, 1, v14))
        (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v27, v14);
      goto LABEL_41;
    }
LABEL_33:
    v39 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v40 = v39(v27, 1, v14);
    v41 = v39(v28, 1, v14);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 16))(v27, v28, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        v19((uint64_t)v27, (uint64_t)v28, v14);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v27, v14);
    }
    memcpy(v27, v28, v30);
    return a1;
  }
  v31 = 8 * v30;
  if (!v27[v30])
    goto LABEL_29;
  v32 = (v27[v30] - 1) << v31;
  if (v30 > 3)
    v32 = 0;
  if ((_DWORD)v30)
  {
    if (v30 <= 3)
      v33 = v30;
    else
      v33 = 4;
    __asm { BR              X12 }
  }
  if (v32 == -1)
  {
LABEL_29:
    if (v28[v30])
    {
      v37 = (v28[v30] - 1) << v31;
      if (v30 > 3)
        v37 = 0;
      if ((_DWORD)v30)
      {
        if (v30 <= 3)
          v38 = v30;
        else
          v38 = 4;
        __asm { BR              X11 }
      }
      if (v37 != -1)
      {
        v34 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v28[v30] || (v28[v30] - 1) << v31 == -1)
    goto LABEL_45;
LABEL_41:
  if (v29 >= 2)
    v42 = v30;
  else
    v42 = v30 + 1;
  memcpy(v27, v28, v42);
  return a1;
}

uint64_t sub_23BC44C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  void *v27;
  _BYTE *v28;
  unsigned int v29;
  size_t v30;
  int v31;
  int v32;
  size_t v33;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v20 + v23 + v17) & ~v23;
  v25 = (v20 + v23 + v18) & ~v23;
  (*(void (**)(size_t, size_t, uint64_t))(v22 + 32))(v24, v25, v21);
  v26 = *(_QWORD *)(v22 + 64) + v16;
  v27 = (void *)((v26 + v24) & ~v16);
  v28 = (_BYTE *)((v26 + v25) & ~v16);
  v29 = *(_DWORD *)(v15 + 84);
  if (v29)
    v30 = v20;
  else
    v30 = v20 + 1;
  if (v29 <= 1)
  {
    if (v28[v30])
    {
      v31 = (v28[v30] - 1) << (8 * v30);
      if (v30 > 3)
        v31 = 0;
      if ((_DWORD)v30)
      {
        if (v30 <= 3)
          v32 = v30;
        else
          v32 = 4;
        __asm { BR              X11 }
      }
      if (v31 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v28, 1, v14))
    {
      memcpy(v27, v28, v30);
      if (v29 > 1)
        return a1;
    }
    else
    {
      v19((uint64_t)v27, (uint64_t)v28, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
      if (v29 > 1)
        return a1;
    }
    *((_BYTE *)v27 + v30) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v15 + 48))(v28, *(unsigned int *)(v15 + 84), v14) < 2)
    goto LABEL_14;
LABEL_20:
  if (v29 >= 2)
    v33 = v30;
  else
    v33 = v30 + 1;
  memcpy(v27, v28, v33);
  return a1;
}

uint64_t sub_23BC44EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  size_t v30;
  char v31;
  int v32;
  int v33;
  uint64_t (*v34)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  uint64_t (*v39)(unsigned __int8 *, uint64_t, uint64_t);
  int v40;
  int v41;
  size_t v42;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v20 + v23 + v17) & ~v23;
  v25 = (v20 + v23 + v18) & ~v23;
  (*(void (**)(size_t, size_t, uint64_t))(v22 + 40))(v24, v25, v21);
  v26 = *(_QWORD *)(v22 + 64) + v16;
  v27 = (unsigned __int8 *)((v26 + v24) & ~v16);
  v28 = (unsigned __int8 *)((v26 + v25) & ~v16);
  v29 = *(unsigned int *)(v15 + 84);
  if ((_DWORD)v29)
    v30 = v20;
  else
    v30 = v20 + 1;
  if (v29 > 1)
  {
    v34 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v35 = v34(v27, *(unsigned int *)(v15 + 84), v14);
    v36 = v34(v28, v29, v14);
    if (v35 >= 2)
    {
      if (v36 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v28, 1, v14))
      {
        memcpy(v27, v28, v30);
        if (v29 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 32))(v27, v28, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
        if (v29 > 1)
          return a1;
      }
      v27[v30] = 0;
      return a1;
    }
    if (v36 >= 2)
    {
LABEL_31:
      if (!v34(v27, 1, v14))
        (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v27, v14);
      goto LABEL_41;
    }
LABEL_33:
    v39 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v40 = v39(v27, 1, v14);
    v41 = v39(v28, 1, v14);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 32))(v27, v28, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        v19((uint64_t)v27, (uint64_t)v28, v14);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v27, v14);
    }
    memcpy(v27, v28, v30);
    return a1;
  }
  v31 = 8 * v30;
  if (!v27[v30])
    goto LABEL_29;
  v32 = (v27[v30] - 1) << v31;
  if (v30 > 3)
    v32 = 0;
  if ((_DWORD)v30)
  {
    if (v30 <= 3)
      v33 = v30;
    else
      v33 = 4;
    __asm { BR              X12 }
  }
  if (v32 == -1)
  {
LABEL_29:
    if (v28[v30])
    {
      v37 = (v28[v30] - 1) << v31;
      if (v30 > 3)
        v37 = 0;
      if ((_DWORD)v30)
      {
        if (v30 <= 3)
          v38 = v30;
        else
          v38 = 4;
        __asm { BR              X11 }
      }
      if (v37 != -1)
      {
        v34 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v28[v30] || (v28[v30] - 1) << v31 == -1)
    goto LABEL_45;
LABEL_41:
  if (v29 >= 2)
    v42 = v30;
  else
    v42 = v30 + 1;
  memcpy(v27, v28, v42);
  return a1;
}

uint64_t sub_23BC45330(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t result;
  unsigned int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v40 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v40 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v39 = sub_23BC71C34();
  v11 = *(_QWORD *)(v39 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v12 > v10)
    v10 = *(_DWORD *)(v11 + 84);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v10)
    v16 = v10;
  else
    v16 = *(_DWORD *)(v14 + 84);
  v17 = v12 - 1;
  if (!(_DWORD)v12)
    v17 = 0;
  v18 = v17 - 1;
  if (v12 < 2)
    v18 = 0;
  if (v18 > v16)
    v16 = v18;
  if ((_DWORD)v12)
    v19 = v12 < 2;
  else
    v19 = 2;
  if (!a2)
    return 0;
  v20 = v13;
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = *(_QWORD *)(v6 + 64) + v21;
  v23 = *(_QWORD *)(v8 + 64);
  v24 = *(unsigned __int8 *)(v11 + 80);
  v25 = *(_QWORD *)(v11 + 64);
  v26 = *(unsigned __int8 *)(v14 + 80);
  v27 = *(_QWORD *)(v14 + 64) + v24;
  if (a2 <= v16)
    goto LABEL_37;
  v28 = v19 + v25 + ((v27 + ((v25 + v26 + ((v23 + v24 + (v22 & ~v21)) & ~v24)) & ~v26)) & ~v24);
  v29 = 8 * v28;
  if (v28 > 3)
    goto LABEL_21;
  v31 = ((a2 - v16 + ~(-1 << v29)) >> v29) + 1;
  if (HIWORD(v31))
  {
    v30 = *(_DWORD *)(a1 + v28);
    if (v30)
      goto LABEL_28;
  }
  else
  {
    if (v31 <= 0xFF)
    {
      if (v31 < 2)
        goto LABEL_37;
LABEL_21:
      v30 = *(unsigned __int8 *)(a1 + v28);
      if (!*(_BYTE *)(a1 + v28))
        goto LABEL_37;
LABEL_28:
      v32 = (v30 - 1) << v29;
      if (v28 > 3)
        v32 = 0;
      if ((_DWORD)v28)
      {
        if (v28 <= 3)
          v33 = v28;
        else
          v33 = 4;
        __asm { BR              X12 }
      }
      return v16 + v32 + 1;
    }
    v30 = *(unsigned __int16 *)(a1 + v28);
    if (*(_WORD *)(a1 + v28))
      goto LABEL_28;
  }
LABEL_37:
  if (!v16)
    return 0;
  if ((_DWORD)v7 == v16)
  {
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v35 = a1;
    v15 = v7;
    v20 = v5;
    return v34(v35, v15, v20);
  }
  v35 = (v22 + a1) & ~v21;
  if ((_DWORD)v9 == v16)
  {
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v15 = v9;
    v20 = v40;
    return v34(v35, v15, v20);
  }
  v35 = (v35 + v23 + v24) & ~v24;
  if ((_DWORD)v12 == v16)
  {
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    v15 = v12;
    v20 = v39;
    return v34(v35, v15, v20);
  }
  v35 = (v35 + v25 + v26) & ~v26;
  if ((_DWORD)v15 == v16)
  {
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v34(v35, v15, v20);
  }
  if (v12 < 2)
    return 0;
  v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))((v27 + v35) & ~v24, v12, v39);
  v38 = v37 >= 2;
  result = v37 - 2;
  if ((_DWORD)result == 0 || !v38)
    return 0;
  return result;
}

void sub_23BC45608(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  unsigned int v21;
  unsigned int v22;
  int v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(sub_23BC71C4C() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_23BC71C34() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = 0;
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A75620) - 8);
  if (*(_DWORD *)(v14 + 84) <= v12)
    v15 = v12;
  else
    v15 = *(_DWORD *)(v14 + 84);
  v16 = v11 - 1;
  if (!v11)
    v16 = 0;
  v17 = v16 - 1;
  if (v11 < 2)
    v17 = 0;
  if (v17 > v15)
    v15 = v17;
  if (v11)
    v19 = v11 < 2;
  else
    v19 = 2;
  v18 = *(unsigned __int8 *)(v10 + 80);
  v20 = v19
      + *(_QWORD *)(v10 + 64)
      + ((*(_QWORD *)(v14 + 64)
        + v18
        + ((*(_QWORD *)(v10 + 64)
          + *(unsigned __int8 *)(v14 + 80)
          + ((*(_QWORD *)(v8 + 64)
            + v18
            + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~v18)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))) & ~v18);
  if (a3 > v15)
  {
    if (v20 > 3)
    {
      v13 = 1u;
      if (v15 >= a2)
        goto LABEL_22;
LABEL_28:
      v22 = ~v15 + a2;
      if (v20 < 4)
      {
        if ((_DWORD)v20)
        {
          v23 = v22 & ~(-1 << (8 * v20));
          bzero(a1, v20);
          if ((_DWORD)v20 == 3)
          {
            *(_WORD *)a1 = v23;
            a1[2] = BYTE2(v23);
          }
          else if ((_DWORD)v20 == 2)
          {
            *(_WORD *)a1 = v23;
          }
          else
          {
            *a1 = v23;
          }
        }
      }
      else
      {
        bzero(a1, v20);
        *(_DWORD *)a1 = v22;
      }
      __asm { BR              X10 }
    }
    v21 = ((a3 - v15 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v21))
    {
      v13 = 4u;
      if (v15 < a2)
        goto LABEL_28;
LABEL_22:
      __asm { BR              X23 }
    }
    if (v21 >= 0x100)
      v13 = 2;
    else
      v13 = v21 > 1;
  }
  if (v15 < a2)
    goto LABEL_28;
  goto LABEL_22;
}

void sub_23BC45A40()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x23BC458E8);
}

void sub_23BC45A48()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x23BC458E8);
}

void sub_23BC45A58()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x23BC458E8);
}

uint64_t sub_23BC45A64(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BC45AB0 + 4 * byte_23BC7C5B1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BC45AE4 + 4 * byte_23BC7C5AC[v4]))();
}

uint64_t sub_23BC45AE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC45AEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC45AF4);
  return result;
}

uint64_t sub_23BC45B00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC45B08);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BC45B0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC45B14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoveBookmarkConfirmationData.CodingKeys()
{
  return &type metadata for RemoveBookmarkConfirmationData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for BookmarkStatusLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC45B80 + 4 * byte_23BC7C5BB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC45BB4 + 4 * byte_23BC7C5B6[v4]))();
}

uint64_t sub_23BC45BB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC45BBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC45BC4);
  return result;
}

uint64_t sub_23BC45BD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC45BD8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC45BDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC45BE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookmarkStatusLoadState.CodingKeys()
{
  return &type metadata for BookmarkStatusLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for BookmarkStatusLoadState.IdleCodingKeys()
{
  return &type metadata for BookmarkStatusLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for BookmarkStatusLoadState.FetchingCodingKeys()
{
  return &type metadata for BookmarkStatusLoadState.FetchingCodingKeys;
}

uint64_t _s14FitnessActions30RemoveBookmarkConfirmationDataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC45C60 + 4 * byte_23BC7C5C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC45C80 + 4 * byte_23BC7C5C5[v4]))();
}

_BYTE *sub_23BC45C60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC45C80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC45C88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC45C90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC45C98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC45CA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BookmarkStatusLoadState.FetchedCodingKeys()
{
  return &type metadata for BookmarkStatusLoadState.FetchedCodingKeys;
}

unint64_t sub_23BC45CC0()
{
  unint64_t result;

  result = qword_256A77738;
  if (!qword_256A77738)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C964, &type metadata for BookmarkStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77738);
  }
  return result;
}

unint64_t sub_23BC45D08()
{
  unint64_t result;

  result = qword_256A77740;
  if (!qword_256A77740)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CABC, &type metadata for BookmarkStatusLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77740);
  }
  return result;
}

unint64_t sub_23BC45D50()
{
  unint64_t result;

  result = qword_256A77748;
  if (!qword_256A77748)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CB74, &type metadata for RemoveBookmarkConfirmationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77748);
  }
  return result;
}

void sub_23BC45D94()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC45DA4()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC45DB4()
{
  JUMPOUT(0x24260ED10);
}

unint64_t sub_23BC45DC8()
{
  unint64_t result;

  result = qword_256A77750;
  if (!qword_256A77750)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CAE4, &type metadata for RemoveBookmarkConfirmationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77750);
  }
  return result;
}

unint64_t sub_23BC45E10()
{
  unint64_t result;

  result = qword_256A77758;
  if (!qword_256A77758)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CB0C, &type metadata for RemoveBookmarkConfirmationData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77758);
  }
  return result;
}

unint64_t sub_23BC45E58()
{
  unint64_t result;

  result = qword_256A77760;
  if (!qword_256A77760)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C9DC, &type metadata for BookmarkStatusLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77760);
  }
  return result;
}

unint64_t sub_23BC45EA0()
{
  unint64_t result;

  result = qword_256A77768;
  if (!qword_256A77768)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CA04, &type metadata for BookmarkStatusLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77768);
  }
  return result;
}

unint64_t sub_23BC45EE8()
{
  unint64_t result;

  result = qword_256A77770;
  if (!qword_256A77770)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C98C, &type metadata for BookmarkStatusLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77770);
  }
  return result;
}

unint64_t sub_23BC45F30()
{
  unint64_t result;

  result = qword_256A77778;
  if (!qword_256A77778)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C9B4, &type metadata for BookmarkStatusLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77778);
  }
  return result;
}

unint64_t sub_23BC45F78()
{
  unint64_t result;

  result = qword_256A77780;
  if (!qword_256A77780)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C8D4, &type metadata for BookmarkStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77780);
  }
  return result;
}

unint64_t sub_23BC45FC0()
{
  unint64_t result;

  result = qword_256A77788;
  if (!qword_256A77788)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7C8FC, &type metadata for BookmarkStatusLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77788);
  }
  return result;
}

unint64_t sub_23BC46008()
{
  unint64_t result;

  result = qword_256A77790;
  if (!qword_256A77790)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CA2C, &type metadata for BookmarkStatusLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77790);
  }
  return result;
}

unint64_t sub_23BC46050()
{
  unint64_t result;

  result = qword_256A77798;
  if (!qword_256A77798)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7CA54, &type metadata for BookmarkStatusLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77798);
  }
  return result;
}

uint64_t sub_23BC46094(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F6C6E776F447369 && a2 == 0xEC00000064656461)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BC46128()
{
  return 0x6F6C6E776F447369;
}

uint64_t sub_23BC46148()
{
  return 5;
}

BOOL static BookmarkButtonAction.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23BC46160(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC46198 + 4 * byte_23BC7CE70[a1]))(0xD000000000000012, 0x800000023BC82A10);
}

uint64_t sub_23BC46198()
{
  return 0x6570704177656976;
}

uint64_t sub_23BC461B8(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_23BC461F0()
{
  sub_23BC46874();
  return sub_23BC72828();
}

uint64_t sub_23BC46218()
{
  sub_23BC46874();
  return sub_23BC72834();
}

uint64_t sub_23BC46240()
{
  sub_23BC467A8();
  return sub_23BC72828();
}

uint64_t sub_23BC46268()
{
  sub_23BC467A8();
  return sub_23BC72834();
}

uint64_t sub_23BC46290()
{
  unsigned __int8 *v0;

  return sub_23BC46160(*v0);
}

uint64_t sub_23BC46298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC469B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC462BC()
{
  sub_23BC46764();
  return sub_23BC72828();
}

uint64_t sub_23BC462E4()
{
  sub_23BC46764();
  return sub_23BC72834();
}

uint64_t sub_23BC4630C()
{
  sub_23BC467EC();
  return sub_23BC72828();
}

uint64_t sub_23BC46334()
{
  sub_23BC467EC();
  return sub_23BC72834();
}

uint64_t sub_23BC4635C()
{
  sub_23BC46830();
  return sub_23BC72828();
}

uint64_t sub_23BC46384()
{
  sub_23BC46830();
  return sub_23BC72834();
}

uint64_t sub_23BC463AC()
{
  sub_23BC468B8();
  return sub_23BC72828();
}

uint64_t sub_23BC463D4()
{
  sub_23BC468B8();
  return sub_23BC72834();
}

void BookmarkButtonAction.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[11];
  uint64_t v13;
  uint64_t v14;

  v13 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777C0);
  v12[9] = *(_QWORD *)(v3 - 8);
  v12[10] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v12[8] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777C8);
  v12[6] = *(_QWORD *)(v5 - 8);
  v12[7] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v12[5] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777D0);
  v12[3] = *(_QWORD *)(v7 - 8);
  v12[4] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v12[2] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777D8);
  v12[0] = *(_QWORD *)(v9 - 8);
  v12[1] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777E0);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A777E8);
  v14 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC46764();
  sub_23BC7281C();
  __asm { BR              X10 }
}

uint64_t sub_23BC465F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 69) = 0;
  sub_23BC468B8();
  sub_23BC726A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 88) + 8))(v2, v1);
}

unint64_t sub_23BC46764()
{
  unint64_t result;

  result = qword_256A777F0;
  if (!qword_256A777F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D410, &type metadata for BookmarkButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A777F0);
  }
  return result;
}

unint64_t sub_23BC467A8()
{
  unint64_t result;

  result = qword_256A777F8;
  if (!qword_256A777F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D3C0, &type metadata for BookmarkButtonAction.CancelRemoveFromLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A777F8);
  }
  return result;
}

unint64_t sub_23BC467EC()
{
  unint64_t result;

  result = qword_256A77800;
  if (!qword_256A77800)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D370, &type metadata for BookmarkButtonAction.RemoveFromLibraryConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77800);
  }
  return result;
}

unint64_t sub_23BC46830()
{
  unint64_t result;

  result = qword_256A77808;
  if (!qword_256A77808)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D320, &type metadata for BookmarkButtonAction.RemoveFromLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77808);
  }
  return result;
}

unint64_t sub_23BC46874()
{
  unint64_t result;

  result = qword_256A77810;
  if (!qword_256A77810)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D2D0, &type metadata for BookmarkButtonAction.AddToLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77810);
  }
  return result;
}

unint64_t sub_23BC468B8()
{
  unint64_t result;

  result = qword_256A77818;
  if (!qword_256A77818)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D280, &type metadata for BookmarkButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77818);
  }
  return result;
}

char *BookmarkButtonAction.init(from:)(_QWORD *a1)
{
  return sub_23BC46BB8(a1);
}

char *sub_23BC46910@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_23BC46BB8(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

void sub_23BC46938(_QWORD *a1)
{
  unsigned __int8 *v1;

  BookmarkButtonAction.encode(to:)(a1, *v1);
}

uint64_t BookmarkButtonAction.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t BookmarkButtonAction.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t sub_23BC469B8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC82A10 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023BC82A30 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000023BC82A50 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023BC82A80)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

char *sub_23BC46BB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[11];
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77890);
  v26[9] = *(_QWORD *)(v2 - 8);
  v26[10] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77898);
  v26[6] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A778A0);
  v26[7] = *(_QWORD *)(v5 - 8);
  v26[8] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A778A8);
  v26[4] = *(_QWORD *)(v7 - 8);
  v26[5] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A778B0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A778B8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23BC46764();
  v18 = v33;
  sub_23BC72810();
  if (!v18)
  {
    v26[2] = v9;
    v26[3] = v12;
    v26[1] = v10;
    v33 = 0;
    v19 = v14;
    v20 = sub_23BC72690();
    v21 = v13;
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v22 = sub_23BC725A0();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v24 = &type metadata for BookmarkButtonAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v21);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return v16;
}

void sub_23BC46F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 68) = 1;
  sub_23BC46874();
  v4 = *(_QWORD *)(v3 - 88);
  sub_23BC72600();
  if (v4)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
    JUMPOUT(0x23BC46F00);
  }
  JUMPOUT(0x23BC4706CLL);
}

void sub_23BC46F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 67) = 2;
  sub_23BC46830();
  v4 = *(_QWORD *)(v3 - 88);
  sub_23BC72600();
  if (!v4)
    JUMPOUT(0x23BC46FACLL);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  JUMPOUT(0x23BC46F00);
}

void sub_23BC46FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 66) = 3;
  sub_23BC467EC();
  v5 = *(_QWORD *)(v4 - 88);
  sub_23BC72600();
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 176) + 8))(v2, *(_QWORD *)(v4 - 136));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 96));
    JUMPOUT(0x23BC46F04);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
  JUMPOUT(0x23BC46F00);
}

void sub_23BC47004()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 - 65) = 4;
  sub_23BC467A8();
  v1 = *(_QWORD *)(v0 - 88);
  sub_23BC72600();
  if (v1)
    JUMPOUT(0x23BC4703CLL);
  JUMPOUT(0x23BC4706CLL);
}

unint64_t sub_23BC4709C()
{
  unint64_t result;

  result = qword_256A77820;
  if (!qword_256A77820)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for BookmarkButtonAction, &type metadata for BookmarkButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A77820);
  }
  return result;
}

ValueMetadata *type metadata accessor for BookmarkButtonAction()
{
  return &type metadata for BookmarkButtonAction;
}

uint64_t _s14FitnessActions20BookmarkButtonActionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BC47144 + 4 * byte_23BC7CE84[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BC47178 + 4 * byte_23BC7CE7F[v4]))();
}

uint64_t sub_23BC47178(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC47180(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC47188);
  return result;
}

uint64_t sub_23BC47194(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC4719CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BC471A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC471A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookmarkButtonAction.CodingKeys()
{
  return &type metadata for BookmarkButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for BookmarkButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for BookmarkButtonAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for BookmarkButtonAction.AddToLibraryTappedCodingKeys()
{
  return &type metadata for BookmarkButtonAction.AddToLibraryTappedCodingKeys;
}

ValueMetadata *type metadata accessor for BookmarkButtonAction.RemoveFromLibraryTappedCodingKeys()
{
  return &type metadata for BookmarkButtonAction.RemoveFromLibraryTappedCodingKeys;
}

ValueMetadata *type metadata accessor for BookmarkButtonAction.RemoveFromLibraryConfirmationTappedCodingKeys()
{
  return &type metadata for BookmarkButtonAction.RemoveFromLibraryConfirmationTappedCodingKeys;
}

ValueMetadata *type metadata accessor for BookmarkButtonAction.CancelRemoveFromLibraryTappedCodingKeys()
{
  return &type metadata for BookmarkButtonAction.CancelRemoveFromLibraryTappedCodingKeys;
}

unint64_t sub_23BC47218()
{
  unint64_t result;

  result = qword_256A77828;
  if (!qword_256A77828)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D258, &type metadata for BookmarkButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77828);
  }
  return result;
}

unint64_t sub_23BC47260()
{
  unint64_t result;

  result = qword_256A77830;
  if (!qword_256A77830)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D178, &type metadata for BookmarkButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77830);
  }
  return result;
}

unint64_t sub_23BC472A8()
{
  unint64_t result;

  result = qword_256A77838;
  if (!qword_256A77838)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D1A0, &type metadata for BookmarkButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77838);
  }
  return result;
}

unint64_t sub_23BC472F0()
{
  unint64_t result;

  result = qword_256A77840;
  if (!qword_256A77840)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D128, &type metadata for BookmarkButtonAction.AddToLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77840);
  }
  return result;
}

unint64_t sub_23BC47338()
{
  unint64_t result;

  result = qword_256A77848;
  if (!qword_256A77848)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D150, &type metadata for BookmarkButtonAction.AddToLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77848);
  }
  return result;
}

unint64_t sub_23BC47380()
{
  unint64_t result;

  result = qword_256A77850;
  if (!qword_256A77850)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D0D8, &type metadata for BookmarkButtonAction.RemoveFromLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77850);
  }
  return result;
}

unint64_t sub_23BC473C8()
{
  unint64_t result;

  result = qword_256A77858;
  if (!qword_256A77858)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D100, &type metadata for BookmarkButtonAction.RemoveFromLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77858);
  }
  return result;
}

unint64_t sub_23BC47410()
{
  unint64_t result;

  result = qword_256A77860;
  if (!qword_256A77860)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D088, &type metadata for BookmarkButtonAction.RemoveFromLibraryConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77860);
  }
  return result;
}

unint64_t sub_23BC47458()
{
  unint64_t result;

  result = qword_256A77868;
  if (!qword_256A77868)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D0B0, &type metadata for BookmarkButtonAction.RemoveFromLibraryConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77868);
  }
  return result;
}

unint64_t sub_23BC474A0()
{
  unint64_t result;

  result = qword_256A77870;
  if (!qword_256A77870)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D038, &type metadata for BookmarkButtonAction.CancelRemoveFromLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77870);
  }
  return result;
}

unint64_t sub_23BC474E8()
{
  unint64_t result;

  result = qword_256A77878;
  if (!qword_256A77878)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D060, &type metadata for BookmarkButtonAction.CancelRemoveFromLibraryTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77878);
  }
  return result;
}

unint64_t sub_23BC47530()
{
  unint64_t result;

  result = qword_256A77880;
  if (!qword_256A77880)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D1C8, &type metadata for BookmarkButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77880);
  }
  return result;
}

unint64_t sub_23BC47578()
{
  unint64_t result;

  result = qword_256A77888;
  if (!qword_256A77888)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D1F0, &type metadata for BookmarkButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77888);
  }
  return result;
}

__n128 RemoveLibraryItemFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v4;
  return result;
}

uint64_t RemoveLibraryItemFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD v21[6];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v23 = a3;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A778C0);
  v21[5] = *(_QWORD *)(v22 - 8);
  v9 = MEMORY[0x24BDAC7A8](v22);
  v10 = *(_QWORD *)(a5 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v9);
  v21[4] = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v21 - v14;
  v16 = v5[1];
  v24 = *v5;
  v25 = v16;
  v17 = v5[3];
  v26 = v5[2];
  v27 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v21 - v14, a2, v10);
  if ((a4 & 0x1000000000000) != 0)
    __asm { BR              X10 }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  result = type metadata accessor for RemoveLibraryItemState(0, v10, *(_QWORD *)(a5 + 24), v18);
  v20 = a2 + *(int *)(result + 44);
  *(_WORD *)(v20 + 4) = WORD2(a4) & 0x1FF;
  *(_DWORD *)v20 = a4;
  *(_BYTE *)(v20 + 6) = 0;
  return result;
}

uint64_t sub_23BC47EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = a1;
  v3[3] = sub_23BC723F0();
  v3[4] = sub_23BC723E4();
  v8 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v3[5] = v6;
  *v6 = v3;
  v6[1] = sub_23BC47F80;
  return v8(a3);
}

uint64_t sub_23BC47F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *v2;
  v5 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    *(_DWORD *)(v4 + 72) = 0;
    v6 = v4 + 72;
    *(_WORD *)(v6 + 4) = 256;
    *(_BYTE *)(v6 + 6) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v6 - 8) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A779A0);
    *v7 = v5;
    v7[1] = sub_23BC0733C;
  }
  else
  {
    *(_DWORD *)(v4 + 80) = a1;
    v8 = v4 + 80;
    *(_WORD *)(v8 + 4) = WORD2(a1) & 0x1FF;
    *(_BYTE *)(v8 + 6) = 0;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 - 24) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A779A0);
    *v9 = v5;
    v9[1] = sub_23BC07298;
  }
  return sub_23BC7215C();
}

uint64_t sub_23BC4806C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = sub_23BC723F0();
  v3[3] = sub_23BC723E4();
  v8 = (uint64_t (*)(uint64_t))(*(int *)*a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23BBFD5A0;
  return v8(a3);
}

uint64_t sub_23BC480EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = a1;
  v3[3] = sub_23BC723F0();
  v3[4] = sub_23BC723E4();
  v8 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v6 = (_QWORD *)swift_task_alloc();
  v3[5] = v6;
  *v6 = v3;
  v6[1] = sub_23BC48170;
  return v8(a3);
}

uint64_t sub_23BC48170()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23BC723CC();
    return swift_task_switch();
  }
  else
  {
    *(_DWORD *)(v2 + 64) = 0;
    *(_WORD *)(v2 + 68) = 256;
    *(_BYTE *)(v2 + 70) = 0;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 56) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A779A0);
    *v4 = v2;
    v4[1] = sub_23BC07298;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC4824C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC48280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = sub_23BC723F0();
  v3[3] = sub_23BC723E4();
  v8 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23BC34C88;
  return v8(a3);
}

uint64_t sub_23BC48304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  v5 = v1 + 32;
  v6 = v1 + ((v4 + 96) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BC48280(a1, v5, v6);
}

uint64_t sub_23BC48390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  v5 = v1 + 32;
  v6 = v1 + ((v4 + 96) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BC480EC(a1, v5, v6);
}

uint64_t sub_23BC4841C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  v5 = (_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 96) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF5304;
  return sub_23BC4806C(a1, v5, v6);
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BC4852C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  v5 = v1 + 32;
  v6 = v1 + ((v4 + 96) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23BBF6148;
  return sub_23BC47EFC(a1, v5, v6);
}

uint64_t RemoveLibraryItemFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_23BC485C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  return RemoveLibraryItemFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4 | ((unint64_t)*((unsigned __int16 *)a4 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a4 + 6) << 48), a5);
}

unint64_t sub_23BC485EC()
{
  unint64_t result;

  result = qword_256A77910;
  if (!qword_256A77910)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemAction, &type metadata for RemoveLibraryItemAction);
    atomic_store(result, (unint64_t *)&qword_256A77910);
  }
  return result;
}

unint64_t sub_23BC48634()
{
  unint64_t result;

  result = qword_256A77918[0];
  if (!qword_256A77918[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemAction, &type metadata for RemoveLibraryItemAction);
    atomic_store(result, qword_256A77918);
  }
  return result;
}

void sub_23BC48678()
{
  JUMPOUT(0x24260ED10);
}

uint64_t type metadata accessor for RemoveLibraryItemFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RemoveLibraryItemFeature);
}

uint64_t dispatch thunk of LibraryItemIdentifierProtocol.localizedName(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t RemoveLibraryItemAction.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x1000000000000) != 0)
    __asm { BR              X9 }
  v3 = a2 & 0xFFFFFFFFFFLL;
  sub_23BC727B0();
  if ((v2 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v3 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

uint64_t static RemoveLibraryItemAction.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return sub_23BC490E8(a1 & 0xFFFFFFFFFFFFLL | ((HIWORD(a1) & 1) << 48), a2 & 0xFFFFFFFFFFFFLL | ((HIWORD(a2) & 1) << 48));
}

uint64_t sub_23BC4877C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC487B8 + 4 * byte_23BC7D545[a1]))(0xD000000000000017, 0x800000023BC82AA0);
}

uint64_t sub_23BC487B8()
{
  return 0x6570704177656976;
}

uint64_t sub_23BC487D8()
{
  uint64_t v0;

  return v0 + 8;
}

unint64_t sub_23BC48810()
{
  return 0xD000000000000015;
}

uint64_t sub_23BC4882C()
{
  sub_23BC492D0();
  return sub_23BC72828();
}

uint64_t sub_23BC48854()
{
  sub_23BC492D0();
  return sub_23BC72834();
}

uint64_t sub_23BC4887C()
{
  unsigned __int8 *v0;

  return sub_23BC4877C(*v0);
}

uint64_t sub_23BC48884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC4939C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BC488A8(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23BC488B4()
{
  sub_23BC491C0();
  return sub_23BC72828();
}

uint64_t sub_23BC488DC()
{
  sub_23BC491C0();
  return sub_23BC72834();
}

uint64_t sub_23BC48904()
{
  sub_23BC49204();
  return sub_23BC72828();
}

uint64_t sub_23BC4892C()
{
  sub_23BC49204();
  return sub_23BC72834();
}

uint64_t sub_23BC48954()
{
  sub_23BC4928C();
  return sub_23BC72828();
}

uint64_t sub_23BC4897C()
{
  sub_23BC4928C();
  return sub_23BC72834();
}

uint64_t sub_23BC489A4()
{
  sub_23BC49248();
  return sub_23BC72828();
}

uint64_t sub_23BC489CC()
{
  sub_23BC49248();
  return sub_23BC72834();
}

uint64_t sub_23BC489F4()
{
  sub_23BC49314();
  return sub_23BC72828();
}

uint64_t sub_23BC48A1C()
{
  sub_23BC49314();
  return sub_23BC72834();
}

uint64_t sub_23BC48A44()
{
  sub_23BC49358();
  return sub_23BC72828();
}

uint64_t sub_23BC48A6C()
{
  sub_23BC49358();
  return sub_23BC72834();
}

uint64_t RemoveLibraryItemAction.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  char v41;
  char v42;

  v38 = a2 & 0xFFFFFFFFFFFFLL;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A779A8);
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A779B0);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A779B8);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A779C0);
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v26 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A779C8);
  v24 = *(_QWORD *)(v12 - 8);
  v25 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v23 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A779D0);
  MEMORY[0x24BDAC7A8](v22);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A779D8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC491C0();
  sub_23BC7281C();
  if ((a2 & 0x1000000000000) != 0)
    __asm { BR              X9 }
  v42 = 5;
  sub_23BC49204();
  v18 = v35;
  sub_23BC726A8();
  v40 = BYTE4(a2);
  v39 = a2;
  v41 = BYTE5(v38) & 1;
  sub_23BBE9758();
  v19 = v37;
  sub_23BC72720();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t RemoveLibraryItemAction.hashValue.getter(unint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  RemoveLibraryItemAction.hash(into:)((uint64_t)v3, a1 & 0xFFFFFFFFFFFFLL | ((HIWORD(a1) & 1) << 48));
  return sub_23BC727E0();
}

uint64_t RemoveLibraryItemAction.init(from:)(_QWORD *a1)
{
  unint64_t v1;

  v1 = sub_23BC495F4(a1);
  return v1 & 0xFFFFFFFFFFFFLL | ((HIWORD(v1) & 1) << 48);
}

uint64_t sub_23BC48F60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BC495F4(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_WORD *)(a2 + 4) = WORD2(result);
    *(_BYTE *)(a2 + 6) = BYTE6(result) & 1;
  }
  return result;
}

uint64_t sub_23BC48F98(_QWORD *a1)
{
  unsigned int *v1;

  return RemoveLibraryItemAction.encode(to:)(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48));
}

uint64_t sub_23BC48FD0()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  v2 = *((_BYTE *)v0 + 6);
  sub_23BC727A4();
  RemoveLibraryItemAction.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 48));
  return sub_23BC727E0();
}

uint64_t sub_23BC49028(uint64_t a1)
{
  unsigned int *v1;

  return RemoveLibraryItemAction.hash(into:)(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 6) << 48));
}

uint64_t sub_23BC49050()
{
  unsigned int *v0;
  unint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  v2 = *((_BYTE *)v0 + 6);
  sub_23BC727A4();
  RemoveLibraryItemAction.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 48));
  return sub_23BC727E0();
}

uint64_t sub_23BC490A4(unsigned int *a1, unsigned int *a2)
{
  return sub_23BC490E8(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48));
}

uint64_t sub_23BC490E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if ((a1 & 0x1000000000000) != 0)
    return ((uint64_t (*)(void))((char *)&loc_23BC4913C + 4 * byte_23BC7D550[a1 & 0xFFFFFFFFFFFFLL]))();
  if ((a2 & 0x1000000000000) != 0)
    return 0;
  v2 = a2 & 0xFFFFFFFFFFLL;
  if ((a1 & 0x10000000000) != 0)
  {
    if ((a1 & 0xFFFFFFFFFFLL) != 0)
    {
      if ((a2 & 0x10000000000) != 0)
        return v2 != 0;
    }
    else if ((a2 & 0x10000000000) != 0)
    {
      return v2 == 0;
    }
    return 0;
  }
  if ((a2 & 0x10000000000) != 0)
    return 0;
  if ((a1 & 0x100000000) != 0)
    return (a2 & 0x100000000) != 0;
  return (a2 & 0x100000000) == 0 && *(float *)&a1 == *(float *)&a2;
}

unint64_t sub_23BC491C0()
{
  unint64_t result;

  result = qword_256A779E0;
  if (!qword_256A779E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DC40, &type metadata for RemoveLibraryItemAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A779E0);
  }
  return result;
}

unint64_t sub_23BC49204()
{
  unint64_t result;

  result = qword_256A779E8;
  if (!qword_256A779E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DBF0, &type metadata for RemoveLibraryItemAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A779E8);
  }
  return result;
}

unint64_t sub_23BC49248()
{
  unint64_t result;

  result = qword_256A779F0;
  if (!qword_256A779F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DBA0, &type metadata for RemoveLibraryItemAction.RemoveFromLibraryConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A779F0);
  }
  return result;
}

unint64_t sub_23BC4928C()
{
  unint64_t result;

  result = qword_256A779F8;
  if (!qword_256A779F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DB50, &type metadata for RemoveLibraryItemAction.RemoveDownloadConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A779F8);
  }
  return result;
}

unint64_t sub_23BC492D0()
{
  unint64_t result;

  result = qword_256A77A00;
  if (!qword_256A77A00)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DB00, &type metadata for RemoveLibraryItemAction.CancelRemoveLibraryItemTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A00);
  }
  return result;
}

unint64_t sub_23BC49314()
{
  unint64_t result;

  result = qword_256A77A08;
  if (!qword_256A77A08)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DAB0, &type metadata for RemoveLibraryItemAction.RemoveLibraryItemTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A08);
  }
  return result;
}

unint64_t sub_23BC49358()
{
  unint64_t result;

  result = qword_256A77A10;
  if (!qword_256A77A10)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DA60, &type metadata for RemoveLibraryItemAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A10);
  }
  return result;
}

uint64_t sub_23BC4939C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023BC82AA0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023BC82AC0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023BC81B80 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000023BC82A50 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC81BB0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23BC495F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[10];
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77AA0);
  v33 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77AA8);
  v25[7] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77AB0);
  v25[8] = *(_QWORD *)(v4 - 8);
  v25[9] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77AB8);
  v25[5] = *(_QWORD *)(v6 - 8);
  v25[6] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77AC0);
  v25[3] = *(_QWORD *)(v8 - 8);
  v25[4] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77AC8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77AD0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23BC491C0();
  v19 = v35;
  sub_23BC72810();
  if (!v19)
  {
    v25[1] = v10;
    v25[2] = v13;
    v25[0] = v11;
    v35 = v15;
    v20 = sub_23BC72690();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v21 = sub_23BC725A0();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v23 = &type metadata for RemoveLibraryItemAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v14);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void sub_23BC49BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 - 65) = 5;
  sub_23BC49204();
  v6 = v4;
  v7 = v1;
  sub_23BC72600();
  if (v2)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23BC499ACLL);
  }
  sub_23BBEAD44();
  v8 = *(_QWORD *)(v5 - 168);
  sub_23BC72684();
  v9 = *(_QWORD *)(v5 - 104);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v6, v8);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v7);
  JUMPOUT(0x23BC49CE8);
}

unint64_t sub_23BC49D04()
{
  unint64_t result;

  result = qword_256A77A18;
  if (!qword_256A77A18)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemAction, &type metadata for RemoveLibraryItemAction);
    atomic_store(result, (unint64_t *)&qword_256A77A18);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction()
{
  return &type metadata for RemoveLibraryItemAction;
}

uint64_t storeEnumTagSinglePayload for RemoveLibraryItemAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23BC49DA4 + 4 * byte_23BC7D560[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23BC49DD8 + 4 * byte_23BC7D55B[v4]))();
}

uint64_t sub_23BC49DD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC49DE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC49DE8);
  return result;
}

uint64_t sub_23BC49DF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC49DFCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23BC49E00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC49E08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction.CodingKeys()
{
  return &type metadata for RemoveLibraryItemAction.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction.ViewAppearedCodingKeys()
{
  return &type metadata for RemoveLibraryItemAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction.RemoveLibraryItemTappedCodingKeys()
{
  return &type metadata for RemoveLibraryItemAction.RemoveLibraryItemTappedCodingKeys;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction.CancelRemoveLibraryItemTappedCodingKeys()
{
  return &type metadata for RemoveLibraryItemAction.CancelRemoveLibraryItemTappedCodingKeys;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction.RemoveDownloadConfirmationTappedCodingKeys()
{
  return &type metadata for RemoveLibraryItemAction.RemoveDownloadConfirmationTappedCodingKeys;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction.RemoveFromLibraryConfirmationTappedCodingKeys()
{
  return &type metadata for RemoveLibraryItemAction.RemoveFromLibraryConfirmationTappedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for RemoveLibraryItemAction.DownloadStatusUpdatedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC49EB4 + 4 * byte_23BC7D565[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC49ED4 + 4 * byte_23BC7D56A[v4]))();
}

_BYTE *sub_23BC49EB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC49ED4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC49EDC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC49EE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC49EEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC49EF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RemoveLibraryItemAction.DownloadStatusUpdatedCodingKeys()
{
  return &type metadata for RemoveLibraryItemAction.DownloadStatusUpdatedCodingKeys;
}

unint64_t sub_23BC49F14()
{
  unint64_t result;

  result = qword_256A77A20;
  if (!qword_256A77A20)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D7F0, &type metadata for RemoveLibraryItemAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A20);
  }
  return result;
}

unint64_t sub_23BC49F5C()
{
  unint64_t result;

  result = qword_256A77A28;
  if (!qword_256A77A28)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DA38, &type metadata for RemoveLibraryItemAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A28);
  }
  return result;
}

unint64_t sub_23BC49FA4()
{
  unint64_t result;

  result = qword_256A77A30;
  if (!qword_256A77A30)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D958, &type metadata for RemoveLibraryItemAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A30);
  }
  return result;
}

unint64_t sub_23BC49FEC()
{
  unint64_t result;

  result = qword_256A77A38;
  if (!qword_256A77A38)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D980, &type metadata for RemoveLibraryItemAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A38);
  }
  return result;
}

unint64_t sub_23BC4A034()
{
  unint64_t result;

  result = qword_256A77A40;
  if (!qword_256A77A40)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D908, &type metadata for RemoveLibraryItemAction.RemoveLibraryItemTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A40);
  }
  return result;
}

unint64_t sub_23BC4A07C()
{
  unint64_t result;

  result = qword_256A77A48;
  if (!qword_256A77A48)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D930, &type metadata for RemoveLibraryItemAction.RemoveLibraryItemTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A48);
  }
  return result;
}

unint64_t sub_23BC4A0C4()
{
  unint64_t result;

  result = qword_256A77A50;
  if (!qword_256A77A50)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D8B8, &type metadata for RemoveLibraryItemAction.CancelRemoveLibraryItemTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A50);
  }
  return result;
}

unint64_t sub_23BC4A10C()
{
  unint64_t result;

  result = qword_256A77A58;
  if (!qword_256A77A58)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D8E0, &type metadata for RemoveLibraryItemAction.CancelRemoveLibraryItemTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A58);
  }
  return result;
}

unint64_t sub_23BC4A154()
{
  unint64_t result;

  result = qword_256A77A60;
  if (!qword_256A77A60)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D868, &type metadata for RemoveLibraryItemAction.RemoveDownloadConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A60);
  }
  return result;
}

unint64_t sub_23BC4A19C()
{
  unint64_t result;

  result = qword_256A77A68;
  if (!qword_256A77A68)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D890, &type metadata for RemoveLibraryItemAction.RemoveDownloadConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A68);
  }
  return result;
}

unint64_t sub_23BC4A1E4()
{
  unint64_t result;

  result = qword_256A77A70;
  if (!qword_256A77A70)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D818, &type metadata for RemoveLibraryItemAction.RemoveFromLibraryConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A70);
  }
  return result;
}

unint64_t sub_23BC4A22C()
{
  unint64_t result;

  result = qword_256A77A78;
  if (!qword_256A77A78)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D840, &type metadata for RemoveLibraryItemAction.RemoveFromLibraryConfirmationTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A78);
  }
  return result;
}

unint64_t sub_23BC4A274()
{
  unint64_t result;

  result = qword_256A77A80;
  if (!qword_256A77A80)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D760, &type metadata for RemoveLibraryItemAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A80);
  }
  return result;
}

unint64_t sub_23BC4A2BC()
{
  unint64_t result;

  result = qword_256A77A88;
  if (!qword_256A77A88)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D788, &type metadata for RemoveLibraryItemAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A88);
  }
  return result;
}

unint64_t sub_23BC4A304()
{
  unint64_t result;

  result = qword_256A77A90;
  if (!qword_256A77A90)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D9A8, &type metadata for RemoveLibraryItemAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A90);
  }
  return result;
}

unint64_t sub_23BC4A34C()
{
  unint64_t result;

  result = qword_256A77A98;
  if (!qword_256A77A98)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7D9D0, &type metadata for RemoveLibraryItemAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77A98);
  }
  return result;
}

uint64_t sub_23BC4A390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for RemoveLibraryItemFeature(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemFeature<A>, v4);
  v5 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v5);
  return sub_23BC71CDC();
}

uint64_t RemoveLibraryItemConfirmationDialog.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v12 = type metadata accessor for RemoveLibraryItemFeature(255, a3, a4, v11);
  MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemFeature<A>, v12);
  v13 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v13);
  result = sub_23BC71CD0();
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v15;
  *(_BYTE *)(a5 + 16) = v16 & 1;
  return result;
}

uint64_t sub_23BC4A4D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t RemoveLibraryItemConfirmationDialog.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjCClassFromMetadata;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;

  v74 = a1;
  v75 = a3;
  v5 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = (uint64_t *)sub_23BC71C4C();
  v64 = *(v65 - 1);
  v7 = MEMORY[0x24BDAC7A8](v65);
  v76 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a2 + 16);
  v63 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v62 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23BC722C4();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemConfirmationDialog<A>, a2);
  v14 = sub_23BC71E38();
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77AD8);
  v70 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77AE0);
  v69 = v16;
  v17 = v14;
  v68 = v14;
  v18 = MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v14);
  v79 = v18;
  v19 = sub_23BBE869C(&qword_256A77AE8, &qword_256A77AD8, MEMORY[0x24BDF5428]);
  v78 = v19;
  v77 = sub_23BC4AC5C();
  v96 = v17;
  v97 = v15;
  v98 = v16;
  v99 = v18;
  v100 = v19;
  v101 = v77;
  v72 = MEMORY[0x24260ECB0](0, &v96, MEMORY[0x24BDF2BD0], 0);
  v73 = *(_QWORD *)(v72 - 8);
  v20 = MEMORY[0x24BDAC7A8](v72);
  v67 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v71 = (uint64_t)&v58 - v22;
  v24 = *(_QWORD *)v3;
  v23 = *(_QWORD *)(v3 + 8);
  LOBYTE(v18) = *(_BYTE *)(v3 + 16);
  v60 = v13;
  sub_23BC722B8();
  sub_23BC722AC();
  v96 = v24;
  v97 = v23;
  LOBYTE(v98) = v18;
  sub_23BC4A390(a2, v25, v26, v27);
  v28 = *(_QWORD *)(a2 + 24);
  v61 = a2;
  v94 = v9;
  v95 = v28;
  swift_getKeyPath();
  v29 = v62;
  sub_23BC7218C();
  swift_release();
  swift_release();
  v96 = v24;
  v97 = v23;
  LOBYTE(v98) = v18;
  sub_23BC4A390(a2, v30, v31, v32);
  v92 = v9;
  v93 = v28;
  swift_getKeyPath();
  v33 = v76;
  sub_23BC7218C();
  swift_release();
  swift_release();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
  v35 = v9;
  v59 = v9;
  v36 = v9;
  v37 = v28;
  v34(v33, v36, v28);
  (*(void (**)(char *, uint64_t *))(v64 + 8))(v33, v65);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v35);
  sub_23BC722A0();
  swift_bridgeObjectRelease();
  sub_23BC722AC();
  sub_23BC722D0();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v39 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v96 = v24;
  v97 = v23;
  LOBYTE(v98) = v18;
  v40 = v61;
  sub_23BC4A390(v61, v41, v42, v43);
  v90 = v35;
  v91 = v37;
  v44 = v37;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v45 = sub_23BC71EC8();
  v66 = (char *)v46;
  v76 = (char *)v47;
  LOBYTE(v37) = v48 & 1;
  v96 = v24;
  v97 = v23;
  LOBYTE(v98) = v18;
  sub_23BC4A390(v40, v46, v48, v47);
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v24;
  *(_QWORD *)(v49 + 24) = v23;
  *(_BYTE *)(v49 + 32) = v18;
  sub_23BBE7EBC();
  sub_23BC720C0();
  v65 = &v58;
  v85 = v59;
  v86 = v44;
  v87 = v24;
  v88 = v23;
  v89 = v18;
  v80 = v59;
  v81 = v44;
  v82 = v24;
  v83 = v23;
  v84 = v18;
  v68 = swift_checkMetadataState();
  v50 = v69;
  v51 = v70;
  v52 = (uint64_t)v67;
  v53 = (uint64_t)v66;
  sub_23BC71F58();
  sub_23BBECDD0(v45, v53, v37);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v96 = v68;
  v97 = v51;
  v98 = v50;
  v99 = v79;
  v100 = v78;
  v101 = v77;
  swift_getOpaqueTypeConformance2();
  v54 = v71;
  v55 = v72;
  sub_23BBECE40(v52, v72, v71);
  v56 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
  v56(v52, v55);
  sub_23BBEAFE8(v54, v55, v75);
  return ((uint64_t (*)(uint64_t, uint64_t))v56)(v54, v55);
}

unint64_t sub_23BC4AC5C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256A77AF0;
  if (!qword_256A77AF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77AE0);
    v2 = sub_23BC4ACC8();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A77AF0);
  }
  return result;
}

unint64_t sub_23BC4ACC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A77AF8;
  if (!qword_256A77AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256A77B00);
    v2[2] = MEMORY[0x24BDF1FA8];
    v2[3] = MEMORY[0x24BDF1F80];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v2[0];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A77AF8);
  }
  return result;
}

uint64_t sub_23BC4AD50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  char v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;

  v47 = a4;
  v45 = a2;
  v46 = a3;
  v51 = a5;
  v5 = *a1;
  v6 = sub_23BC71C34();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74698);
  MEMORY[0x24BDAC7A8](v48);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v44 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v42 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v42 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v5 + *MEMORY[0x24BE2B5E0]);
  v24 = *(_QWORD *)(v22 + 16);
  v23 = *(_QWORD *)(v22 + 24);
  v52 = v24;
  v53 = v23;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v21, 1, v10);
  if ((_DWORD)result == 1)
  {
    v26 = 0;
  }
  else
  {
    sub_23BC0EF90((uint64_t)v21, (uint64_t)v18);
    v54 = v45;
    v55 = v46;
    v56 = v47 & 1;
    v28 = type metadata accessor for RemoveLibraryItemConfirmationDialog(0, v24, v23, v27);
    v32 = sub_23BC4A390(v28, v29, v30, v31);
    MEMORY[0x24BDAC7A8](v32);
    *(&v42 - 2) = v24;
    *(&v42 - 1) = v23;
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v34 = v49;
    v33 = v50;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v16, 0, 1, v50);
    v35 = (uint64_t)&v9[*(int *)(v48 + 48)];
    v36 = &qword_256A74428;
    sub_23BBE817C((uint64_t)v18, (uint64_t)v9, &qword_256A74428);
    sub_23BBE817C((uint64_t)v16, v35, &qword_256A74428);
    v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v37((uint64_t)v9, 1, v33) == 1)
    {
      sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v18, &qword_256A74428);
      if (v37(v35, 1, v33) == 1)
      {
        v38 = -1;
      }
      else
      {
        v36 = &qword_256A74698;
        v38 = 0;
      }
    }
    else
    {
      v39 = v44;
      sub_23BBE817C((uint64_t)v9, v44, &qword_256A74428);
      if (v37(v35, 1, v33) == 1)
      {
        sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v18, &qword_256A74428);
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v39, v33);
        v38 = 0;
        v36 = &qword_256A74698;
      }
      else
      {
        v40 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v43, v35, v33);
        sub_23BC06D14();
        v38 = sub_23BC7227C();
        v41 = *(void (**)(char *, uint64_t))(v34 + 8);
        v41(v40, v33);
        v36 = &qword_256A74428;
        sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v18, &qword_256A74428);
        v41((char *)v39, v33);
      }
    }
    result = sub_23BBE81C0((uint64_t)v9, v36);
    v26 = v38 & 1;
  }
  *v51 = v26;
  return result;
}

uint64_t sub_23BC4B164()
{
  sub_23BBE7EAC();
  return swift_deallocObject();
}

uint64_t sub_23BC4B18C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_23BC4AD50(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

_BYTE *sub_23BC4B198@<X0>(_BYTE *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  if (*result)
    v2 = 1;
  else
    v2 = 2;
  *(_DWORD *)a2 = v2;
  *(_WORD *)(a2 + 4) = WORD2(v2);
  *(_BYTE *)(a2 + 6) = 1;
  return result;
}

uint64_t sub_23BC4B1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;

  v84 = a3;
  v78 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v10);
  v79 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A742B0);
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v77 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v76 = (char *)&v68 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v75 = (char *)&v68 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v68 - v19;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77BA8);
  MEMORY[0x24BDAC7A8](v70);
  v71 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77BB0);
  MEMORY[0x24BDAC7A8](v22);
  v72 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77BB8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77BC0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v85 = (uint64_t)&v68 - v31;
  v88 = a1;
  v89 = a2;
  v90 = v84 & 1;
  v33 = type metadata accessor for RemoveLibraryItemConfirmationDialog(0, a4, a5, v32);
  sub_23BC4A390(v33, v34, v35, v36);
  v80 = a4;
  v86 = a4;
  v87 = a5;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v73 = v30;
  v74 = a5;
  v83 = v20;
  if ((v88 & 0x1000000000000) != 0)
  {
    v37 = a2;
    swift_storeEnumTagMultiPayload();
    sub_23BC4C764();
    sub_23BC71E20();
  }
  else
  {
    v69 = v26;
    v38 = v82;
    v37 = a2;
    v39 = v88 | ((unint64_t)WORD2(v88) << 32);
    if ((v39 & 0x10000000000) == 0 || (v39 & 0xFFFFFFFFFFLL) != 0)
    {
      v41 = v79;
      sub_23BC71CA0();
      v42 = sub_23BC71CB8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
      v43 = swift_allocObject();
      *(_QWORD *)(v43 + 16) = v80;
      *(_QWORD *)(v43 + 24) = a5;
      *(_QWORD *)(v43 + 32) = a1;
      *(_QWORD *)(v43 + 40) = a2;
      *(_BYTE *)(v43 + 48) = v84 & 1;
      v44 = MEMORY[0x24BDAC7A8](a1);
      *(&v68 - 6) = v45;
      *(&v68 - 5) = a5;
      *(&v68 - 4) = v44;
      *(&v68 - 3) = a2;
      *((_BYTE *)&v68 - 16) = v46;
      a1 = v44;
      sub_23BBE7EBC();
      sub_23BC7203C();
      v47 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v71, v20, v38);
      swift_storeEnumTagMultiPayload();
      sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
      v40 = (uint64_t)v72;
      sub_23BC71E20();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v38);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
      v40 = (uint64_t)v72;
      sub_23BC71E20();
    }
    sub_23BBE817C(v40, (uint64_t)v69, &qword_256A77BB0);
    swift_storeEnumTagMultiPayload();
    sub_23BC4C764();
    sub_23BC71E20();
    sub_23BBE81C0(v40, &qword_256A77BB0);
  }
  v48 = v79;
  sub_23BC71CA0();
  v49 = sub_23BC71CB8();
  v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
  v50(v48, 0, 1, v49);
  v51 = swift_allocObject();
  v72 = (char *)&v68;
  v52 = v80;
  v53 = v74;
  *(_QWORD *)(v51 + 16) = v80;
  *(_QWORD *)(v51 + 24) = v53;
  *(_QWORD *)(v51 + 32) = a1;
  *(_QWORD *)(v51 + 40) = v37;
  v54 = v84 & 1;
  *(_BYTE *)(v51 + 48) = v84 & 1;
  MEMORY[0x24BDAC7A8](v51);
  *(&v68 - 6) = v52;
  *(&v68 - 5) = v53;
  *(&v68 - 4) = a1;
  *(&v68 - 3) = v37;
  *((_BYTE *)&v68 - 16) = v54;
  sub_23BBE7EBC();
  sub_23BC7203C();
  sub_23BC71CAC();
  v50(v48, 0, 1, v49);
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v52;
  *(_QWORD *)(v55 + 24) = v53;
  *(_QWORD *)(v55 + 32) = a1;
  *(_QWORD *)(v55 + 40) = v37;
  *(_BYTE *)(v55 + 48) = v54;
  MEMORY[0x24BDAC7A8](v55);
  *(&v68 - 6) = v52;
  *(&v68 - 5) = v53;
  *(&v68 - 4) = a1;
  *(&v68 - 3) = v37;
  *((_BYTE *)&v68 - 16) = v54;
  sub_23BBE7EBC();
  v56 = v75;
  sub_23BC7203C();
  v57 = (uint64_t)v73;
  sub_23BBE817C(v85, (uint64_t)v73, &qword_256A77BC0);
  v58 = v81;
  v59 = v82;
  v60 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  v61 = v76;
  v62 = v83;
  v60(v76, v83, v82);
  v63 = v77;
  v60(v77, v56, v59);
  v64 = v78;
  sub_23BBE817C(v57, v78, &qword_256A77BC0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77BD0);
  v60((char *)(v64 + *(int *)(v65 + 48)), v61, v59);
  v60((char *)(v64 + *(int *)(v65 + 64)), v63, v59);
  v66 = *(void (**)(char *, uint64_t))(v58 + 8);
  v66(v56, v59);
  v66(v62, v59);
  sub_23BBE81C0(v85, &qword_256A77BC0);
  v66(v63, v59);
  v66(v61, v59);
  return sub_23BBE81C0(v57, &qword_256A77BC0);
}

uint64_t sub_23BC4B99C()
{
  return sub_23BC0C3A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC4B1BC);
}

uint64_t sub_23BC4B9A8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v6 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = type metadata accessor for RemoveLibraryItemConfirmationDialog(0, a1, a2, v10);
  sub_23BC4A390(v11, v12, v13, v14);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v16;
  *(_BYTE *)(a3 + 16) = v17 & 1;
  *(_QWORD *)(a3 + 24) = v18;
  return result;
}

uint64_t sub_23BC4BB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = type metadata accessor for RemoveLibraryItemConfirmationDialog(0, a4, a5, a4);
  sub_23BC4A390(v5, v6, v7, v8);
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC4BBAC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v6 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = type metadata accessor for RemoveLibraryItemConfirmationDialog(0, a1, a2, v10);
  sub_23BC4A390(v11, v12, v13, v14);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v16;
  *(_BYTE *)(a3 + 16) = v17 & 1;
  *(_QWORD *)(a3 + 24) = v18;
  return result;
}

uint64_t sub_23BC4BD4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;

  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77B88);
  MEMORY[0x24BDAC7A8](v62);
  v63 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77B90);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v13);
  v55 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v15);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77B98);
  v59 = *(_QWORD *)(v61 - 8);
  v16 = MEMORY[0x24BDAC7A8](v61);
  v56 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v58 = (char *)&v50 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_256A77B00);
  MEMORY[0x24BDAC7A8](v19);
  v60 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77BA0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1;
  v53 = a2;
  v66 = a1;
  v67 = a2;
  v54 = a3;
  v68 = a3 & 1;
  v25 = type metadata accessor for RemoveLibraryItemConfirmationDialog(0, a4, a5, v24);
  sub_23BC4A390(v25, v26, v27, v28);
  v64 = a4;
  v65 = a5;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  if ((v70 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload();
    sub_23BC4ACC8();
    return sub_23BC71E20();
  }
  else
  {
    v50 = v21;
    v51 = v23;
    sub_23BC72288();
    type metadata accessor for LocalizationBundle();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v31 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata, v50);
    v66 = v52;
    v67 = v53;
    v68 = v54 & 1;
    v35 = sub_23BC4A390(v25, v32, v33, v34);
    MEMORY[0x24BDAC7A8](v35);
    *(&v50 - 2) = a4;
    *(&v50 - 1) = a5;
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v66 = sub_23BC722E8();
    v67 = v36;
    sub_23BC04488();
    v66 = sub_23BC71ED4();
    v67 = v37;
    v68 = v38 & 1;
    v69 = v39;
    v40 = (uint64_t)v57;
    sub_23BC71E50();
    v41 = sub_23BC71E5C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
    v42 = MEMORY[0x24BDF1FA8];
    v43 = MEMORY[0x24BDF1F80];
    v44 = v56;
    sub_23BC71F70();
    sub_23BBE81C0(v40, &qword_256A77B90);
    sub_23BBECDD0(v66, v67, v68);
    swift_bridgeObjectRelease();
    v46 = v58;
    v45 = v59;
    v47 = v61;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v58, v44, v61);
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v63, v46, v47);
    swift_storeEnumTagMultiPayload();
    v66 = v42;
    v67 = v43;
    swift_getOpaqueTypeConformance2();
    v48 = (uint64_t)v60;
    sub_23BC71E20();
    v49 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    sub_23BBE817C(v48, v49, qword_256A77B00);
    swift_storeEnumTagMultiPayload();
    sub_23BC4ACC8();
    sub_23BC71E20();
    return sub_23BBE81C0(v48, qword_256A77B00);
  }
}

uint64_t sub_23BC4C4D4()
{
  return sub_23BC0C3A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC4BD4C);
}

uint64_t View.removeLibraryItemConfirmationDialog<A>(store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  _QWORD v17[2];
  char v18;

  swift_retain();
  RemoveLibraryItemConfirmationDialog.init(store:)(a1, a2, a4, a6, (uint64_t)v17);
  v15[0] = v17[0];
  v15[1] = v17[1];
  v16 = v18;
  v13 = type metadata accessor for RemoveLibraryItemConfirmationDialog(0, a4, a6, v12);
  MEMORY[0x24260E1F4](v15, a3, v13, a5);
  return sub_23BBE7EAC();
}

uint64_t type metadata accessor for RemoveLibraryItemConfirmationDialog(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RemoveLibraryItemConfirmationDialog);
}

uint64_t sub_23BC4C5B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC4C5E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v4 = type metadata accessor for RemoveLibraryItemConfirmationDialog(255, *a1, a1[1], a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemConfirmationDialog<A>, v4);
  v6 = sub_23BC71E38();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77AD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77AE0);
  MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v6);
  sub_23BBE869C(&qword_256A77AE8, &qword_256A77AD8, MEMORY[0x24BDF5428]);
  sub_23BC4AC5C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC4C6C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for RemoveLibraryItemConfirmationDialog(255, a1[1], a1[3], a4);
  v6 = sub_23BC71D6C();
  v8[0] = v4;
  v8[1] = MEMORY[0x24260ED10](&protocol conformance descriptor for RemoveLibraryItemConfirmationDialog<A>, v5);
  return MEMORY[0x24260ED10](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_23BC4C740()
{
  return sub_23BC4C7F4();
}

uint64_t sub_23BC4C748@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC4C834(a1);
}

unint64_t sub_23BC4C764()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256A77BC8;
  if (!qword_256A77BC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77BB0);
    v2 = sub_23BBE869C(qword_256A742C0, &qword_256A742B0, MEMORY[0x24BDF43B0]);
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A77BC8);
  }
  return result;
}

uint64_t sub_23BC4C7EC()
{
  return sub_23BC4C7F4();
}

uint64_t sub_23BC4C7F4()
{
  uint64_t v0;

  return sub_23BC4BB3C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BC4C818@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC4C834(a1);
}

uint64_t sub_23BC4C834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC4B9A8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23BC4C860()
{
  return sub_23BC4C7F4();
}

uint64_t sub_23BC4C868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC4BBAC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23BC4C878(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A76260);
  v2 = sub_23BC725DC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23BC4E700(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_23BC53EC4(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23BC1E5E0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23BC4C9A0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C38);
  v2 = (_QWORD *)sub_23BC725DC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23BC53EC4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

__n128 UpNextQueueMonitorFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

uint64_t UpNextQueueMonitorFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  __int128 *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  __int128 v20;
  int *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t);
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t);
  _OWORD *v34;
  __int128 v35;
  void (*v36)(_QWORD);
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, char *, uint64_t);
  unint64_t *v41;
  char *v42;
  char *v43;
  char *v44;
  _OWORD *v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t result;
  int *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unsigned int v69;
  void (*v70)(char *, _QWORD, uint64_t);
  uint64_t v71;
  unsigned int v72;
  void (*v73)(char *, _QWORD, uint64_t);
  unsigned int v74;
  unint64_t v75;
  unint64_t *v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74900);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v67 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v67 - v17;
  v19 = *a4;
  v20 = v4[1];
  v78 = *v4;
  v79 = v20;
  v80 = v4[2];
  if (v19)
  {
    if (v19 == 1)
    {
      v77 = 0;
      UpNextQueueMonitorFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, &v77);
      v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
      v22 = &v18[v21[16]];
      v23 = &v18[v21[20]];
      v24 = &v18[v21[24]];
      LOBYTE(v77) = 2;
      v75 = sub_23BC4E384();
      sub_23BC72558();
      sub_23BC72414();
      v25 = *MEMORY[0x24BE2B580];
      v26 = sub_23BC72180();
      v27 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104);
      v74 = v25;
      v71 = v26;
      v73 = v27;
      v27(v22, v25, v26);
      v28 = *MEMORY[0x24BE2B550];
      v29 = a3;
      v30 = sub_23BC72174();
      v31 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104);
      v72 = v28;
      v32 = v28;
      v33 = v31;
      v31(v23, v32, v30);
      v34 = (_OWORD *)swift_allocObject();
      v35 = v79;
      v34[1] = v78;
      v34[2] = v35;
      v34[3] = v80;
      *(_QWORD *)v24 = &unk_256A77BF8;
      *((_QWORD *)v24 + 1) = v34;
      v36 = *(void (**)(_QWORD))(v10 + 104);
      v69 = *MEMORY[0x24BE2B438];
      v70 = (void (*)(char *, _QWORD, uint64_t))v36;
      v36(v18);
      v76 = v29;
      v37 = *v29;
      sub_23BC34E9C((uint64_t)&v78);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v37 = sub_23BBF906C(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
      v39 = *(_QWORD *)(v37 + 16);
      v38 = *(_QWORD *)(v37 + 24);
      if (v39 >= v38 >> 1)
        v37 = sub_23BBF906C(v38 > 1, v39 + 1, 1, v37);
      *(_QWORD *)(v37 + 16) = v39 + 1;
      v68 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v67 = *(_QWORD *)(v10 + 72);
      v40 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
      v40(v37 + v68 + v67 * v39, v18, v9);
      v41 = v76;
      *v76 = v37;
      v42 = &v16[v21[16]];
      v43 = &v16[v21[20]];
      v44 = &v16[v21[24]];
      LOBYTE(v77) = 3;
      sub_23BC72558();
      sub_23BC72414();
      v73(v42, v74, v71);
      v33(v43, v72, v30);
      v45 = (_OWORD *)swift_allocObject();
      v46 = v79;
      v45[1] = v78;
      v45[2] = v46;
      v45[3] = v80;
      *(_QWORD *)v44 = &unk_256A77C08;
      *((_QWORD *)v44 + 1) = v45;
      v70(v16, v69, v9);
      v47 = *v41;
      sub_23BC34E9C((uint64_t)&v78);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v47 = sub_23BBF906C(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
      v49 = *(_QWORD *)(v47 + 16);
      v48 = *(_QWORD *)(v47 + 24);
      if (v49 >= v48 >> 1)
        v47 = sub_23BBF906C(v48 > 1, v49 + 1, 1, v47);
      *(_QWORD *)(v47 + 16) = v49 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v40)(v47 + v68 + v49 * v67, v16, v9);
      *v41 = v47;
    }
    else
    {
      v64 = *a2;
      swift_bridgeObjectRetain();
      v65 = (_QWORD *)sub_23BC4C9A0(MEMORY[0x24BEE4AF8]);
      sub_23BC4E364(v19);
      v66 = sub_23BC4E084(v65, v64, v19);
      sub_23BC4E374(v19);
      result = swift_bridgeObjectRelease_n();
      *a2 = v66;
    }
  }
  else
  {
    v51 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
    v52 = &v13[v51[16]];
    v53 = &v13[v51[20]];
    v54 = &v13[v51[24]];
    LOBYTE(v77) = 1;
    sub_23BC4E384();
    sub_23BC72558();
    v55 = *MEMORY[0x24BE2B580];
    v56 = sub_23BC72180();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v52, v55, v56);
    v57 = (_OWORD *)swift_allocObject();
    v58 = v79;
    v57[1] = v78;
    v57[2] = v58;
    v57[3] = v80;
    *(_QWORD *)v54 = &unk_256A77BE8;
    *((_QWORD *)v54 + 1) = v57;
    sub_23BC34E9C((uint64_t)&v78);
    sub_23BC723FC();
    v59 = *MEMORY[0x24BE2B558];
    v60 = sub_23BC72174();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 104))(v53, v59, v60);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BE2B438], v9);
    v61 = *a3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v61 = sub_23BBF906C(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
    v63 = *(_QWORD *)(v61 + 16);
    v62 = *(_QWORD *)(v61 + 24);
    if (v63 >= v62 >> 1)
      v61 = sub_23BBF906C(v62 > 1, v63 + 1, 1, v61);
    *(_QWORD *)(v61 + 16) = v63 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(v61+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v63, v13, v9);
    *a3 = v61;
  }
  return result;
}

uint64_t sub_23BC4D0C4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[13] = a1;
  v2[14] = sub_23BC723F0();
  v2[15] = sub_23BC723E4();
  v6 = (uint64_t (*)(_QWORD *))(*(int *)*a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  v2[16] = v4;
  *v4 = v2;
  v4[1] = sub_23BC4D14C;
  return v6(v2 + 7);
}

uint64_t sub_23BC4D14C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 144) = sub_23BC723CC();
  *(_QWORD *)(v2 + 152) = v3;
  return swift_task_switch();
}

uint64_t sub_23BC4D1D8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[10];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_23BC7242C();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v0[20] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23BC4D338;
  return sub_23BC723D8();
}

uint64_t sub_23BC4D338()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BC4D38C()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 184) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 96) = 0;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C30);
    *v2 = v0;
    v2[1] = sub_23BC4D43C;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC4D43C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BC4D488()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[20] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23BC4D338;
  return sub_23BC723D8();
}

uint64_t sub_23BC4D52C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[13] = a1;
  v2[14] = sub_23BC723F0();
  v2[15] = sub_23BC723E4();
  v6 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v2[16] = v4;
  *v4 = v2;
  v4[1] = sub_23BC4D5B4;
  return v6(v2 + 7);
}

uint64_t sub_23BC4D5B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 144) = sub_23BC723CC();
  *(_QWORD *)(v2 + 152) = v3;
  return swift_task_switch();
}

uint64_t sub_23BC4D640()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[10];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_23BC7242C();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v0[20] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23BC4D7A0;
  return sub_23BC723D8();
}

uint64_t sub_23BC4D7A0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BC4D7F4()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 184) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 96) = 0;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C30);
    *v2 = v0;
    v2[1] = sub_23BC4D8A4;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC4D8A4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BC4D8F0()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[20] = sub_23BC723E4();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23BC4D7A0;
  return sub_23BC723D8();
}

uint64_t sub_23BC4D994()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC4D9C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[3] = a1;
  v2[4] = sub_23BC723F0();
  v2[5] = sub_23BC723E4();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v4 = (_QWORD *)swift_task_alloc();
  v2[6] = v4;
  *v4 = v2;
  v4[1] = sub_23BC4DA40;
  return v6();
}

uint64_t sub_23BC4DA40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[7] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23BC723CC();
    return swift_task_switch();
  }
  else
  {
    v4[2] = a1;
    v4[8] = a1;
    v6 = (_QWORD *)swift_task_alloc();
    v4[9] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C30);
    *v6 = v4;
    v6[1] = sub_23BC4DB18;
    return sub_23BC7215C();
  }
}

uint64_t sub_23BC4DB18()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23BC723CC();
  return swift_task_switch();
}

uint64_t sub_23BC4DB98()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC4DBD4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C38);
  v37 = a2;
  v6 = sub_23BC725D0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23BC727A4();
    sub_23BC7230C();
    result = sub_23BC727E0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_23BC4DEDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C38);
  v2 = *v0;
  v3 = sub_23BC725C4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23BC4E084(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  int64_t v33;

  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v33 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
    }
    else
    {
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_36;
      if (v10 >= v33)
      {
LABEL_33:
        swift_release();
        return (uint64_t)a1;
      }
      v11 = *(_QWORD *)(v32 + 8 * v10);
      ++v7;
      if (!v11)
      {
        v7 = v10 + 1;
        if (v10 + 1 >= v33)
          goto LABEL_33;
        v11 = *(_QWORD *)(v32 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 2;
          if (v10 + 2 >= v33)
            goto LABEL_33;
          v11 = *(_QWORD *)(v32 + 8 * v7);
          if (!v11)
          {
            v7 = v10 + 3;
            if (v10 + 3 >= v33)
              goto LABEL_33;
            v11 = *(_QWORD *)(v32 + 8 * v7);
            if (!v11)
            {
              v12 = v10 + 4;
              if (v12 >= v33)
                goto LABEL_33;
              v11 = *(_QWORD *)(v32 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  v7 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    goto LABEL_37;
                  if (v7 >= v33)
                    goto LABEL_33;
                  v11 = *(_QWORD *)(v32 + 8 * v7);
                  ++v12;
                  if (v11)
                    goto LABEL_23;
                }
              }
              v7 = v12;
            }
          }
        }
      }
LABEL_23:
      v6 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v7 << 6);
    }
    v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v9);
    v15 = *v13;
    v14 = v13[1];
    swift_bridgeObjectRetain();
    v16 = sub_23BC6A14C(v15, v14, a3);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = sub_23BC53EC4(v15, v14);
    v20 = a1[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (a1[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23BC4DEDC();
    }
    else
    {
      sub_23BC4DBD4(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_23BC53EC4(v15, v14);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_38;
      v19 = v24;
    }
    v26 = v16 & 1;
    if ((v23 & 1) != 0)
    {
      *(_BYTE *)(a1[7] + v19) = v26;
    }
    else
    {
      a1[(v19 >> 6) + 8] |= 1 << v19;
      v27 = (uint64_t *)(a1[6] + 16 * v19);
      *v27 = v15;
      v27[1] = v14;
      *(_BYTE *)(a1[7] + v19) = v26;
      v28 = a1[2];
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
        goto LABEL_35;
      a1[2] = v30;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_23BC7275C();
  __break(1u);
  return result;
}

unint64_t sub_23BC4E364(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_23BC4E374(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_23BC4E384()
{
  unint64_t result;

  result = qword_256A77BD8;
  if (!qword_256A77BD8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DEA4, &type metadata for UpNextQueueMonitorFeature.TaskIdentifier);
    atomic_store(result, &qword_256A77BD8);
  }
  return result;
}

uint64_t sub_23BC4E3CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23BBF6148;
  return sub_23BC4D9C8(a1, v1 + 16);
}

uint64_t sub_23BC4E424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23BBF6148;
  return sub_23BC4D0C4(a1, (_QWORD *)(v1 + 16));
}

uint64_t objectdestroyTm_6()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC4E4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23BBF5304;
  return sub_23BC4D52C(a1, v1 + 16);
}

unint64_t sub_23BC4E508()
{
  unint64_t result;

  result = qword_256A77C10;
  if (!qword_256A77C10)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for UpNextQueueMonitorAction, &type metadata for UpNextQueueMonitorAction);
    atomic_store(result, (unint64_t *)&qword_256A77C10);
  }
  return result;
}

unint64_t sub_23BC4E550()
{
  unint64_t result;

  result = qword_256A77C18;
  if (!qword_256A77C18)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for UpNextQueueMonitorAction, &type metadata for UpNextQueueMonitorAction);
    atomic_store(result, (unint64_t *)&qword_256A77C18);
  }
  return result;
}

unint64_t sub_23BC4E598()
{
  unint64_t result;

  result = qword_256A77C20;
  if (!qword_256A77C20)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for UpNextQueueMonitorState, &type metadata for UpNextQueueMonitorState);
    atomic_store(result, (unint64_t *)&qword_256A77C20);
  }
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorFeature()
{
  return &type metadata for UpNextQueueMonitorFeature;
}

uint64_t storeEnumTagSinglePayload for UpNextQueueMonitorFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC4E638 + 4 * byte_23BC7DDD5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC4E66C + 4 * byte_23BC7DDD0[v4]))();
}

uint64_t sub_23BC4E66C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC4E674(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC4E67CLL);
  return result;
}

uint64_t sub_23BC4E688(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC4E690);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC4E694(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC4E69C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorFeature.TaskIdentifier()
{
  return &type metadata for UpNextQueueMonitorFeature.TaskIdentifier;
}

unint64_t sub_23BC4E6BC()
{
  unint64_t result;

  result = qword_256A77C28;
  if (!qword_256A77C28)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7DE7C, &type metadata for UpNextQueueMonitorFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A77C28);
  }
  return result;
}

uint64_t sub_23BC4E700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A76268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC4E74C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x707954616964656DLL;
  else
    return 0x7669746341776172;
}

uint64_t sub_23BC4E794(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC4E7D0 + 4 * byte_23BC7DEF0[a1]))(0xD000000000000012, 0x800000023BC82CA0);
}

uint64_t sub_23BC4E7D0()
{
  return 0x6570704177656976;
}

unint64_t sub_23BC4E7F0()
{
  return 0xD000000000000010;
}

uint64_t sub_23BC4E80C()
{
  uint64_t v0;

  return v0 + 5;
}

uint64_t sub_23BC4E844(char a1)
{
  if ((a1 & 1) != 0)
    return 0x707954616964656DLL;
  else
    return 0x6465646461;
}

uint64_t sub_23BC4E87C()
{
  char *v0;

  return sub_23BC4E74C(*v0);
}

uint64_t sub_23BC4E884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC50FC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC4E8A8()
{
  sub_23BC4F25C();
  return sub_23BC72828();
}

uint64_t sub_23BC4E8D0()
{
  sub_23BC4F25C();
  return sub_23BC72834();
}

uint64_t sub_23BC4E8F8()
{
  unsigned __int8 *v0;

  return sub_23BC4E794(*v0);
}

uint64_t sub_23BC4E900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC510C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC4E924()
{
  sub_23BC4F14C();
  return sub_23BC72828();
}

uint64_t sub_23BC4E94C()
{
  sub_23BC4F14C();
  return sub_23BC72834();
}

uint64_t sub_23BC4E978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC5131C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC4E9A0()
{
  sub_23BC4F218();
  return sub_23BC72828();
}

uint64_t sub_23BC4E9C8()
{
  sub_23BC4F218();
  return sub_23BC72834();
}

uint64_t sub_23BC4E9F0()
{
  char *v0;

  return sub_23BC4E844(*v0);
}

uint64_t sub_23BC4E9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC513C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC4EA1C()
{
  sub_23BC4F190();
  return sub_23BC72828();
}

uint64_t sub_23BC4EA44()
{
  sub_23BC4F190();
  return sub_23BC72834();
}

uint64_t sub_23BC4EA6C()
{
  sub_23BC4F2A0();
  return sub_23BC72828();
}

uint64_t sub_23BC4EA94()
{
  sub_23BC4F2A0();
  return sub_23BC72834();
}

uint64_t sub_23BC4EABC()
{
  sub_23BC4F1D4();
  return sub_23BC72828();
}

uint64_t sub_23BC4EAE4()
{
  sub_23BC4F1D4();
  return sub_23BC72834();
}

uint64_t sub_23BC4EB0C()
{
  sub_23BC4F2E4();
  return sub_23BC72828();
}

uint64_t sub_23BC4EB34()
{
  sub_23BC4F2E4();
  return sub_23BC72834();
}

void StackButtonAction.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C40);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C48);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v20 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C50);
  v16 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v14 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C58);
  v17 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v15 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C60);
  v12[2] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C68);
  MEMORY[0x24BDAC7A8](v9);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77C70);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v10 = *v1;
  v26 = v1[1];
  v27 = v10;
  v12[1] = v1[2];
  v30 = *((unsigned __int16 *)v1 + 12);
  v11 = *((unsigned __int8 *)v1 + 26);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC4F14C();
  sub_23BC7281C();
  __asm { BR              X9 }
}

uint64_t sub_23BC4EDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 120) = 1;
  sub_23BC4F2A0();
  v3 = *(_QWORD *)(v2 - 144);
  sub_23BC726A8();
  v4 = *(_QWORD *)(v2 - 264);
  sub_23BC726F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v3);
}

void sub_23BC4F0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 120) = 0;
  sub_23BC4F2E4();
  v5 = *(_QWORD *)(v4 - 144);
  sub_23BC726A8();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 128) + 8))(v2, v5);
  JUMPOUT(0x23BC4F0CCLL);
}

unint64_t sub_23BC4F14C()
{
  unint64_t result;

  result = qword_256A77C78;
  if (!qword_256A77C78)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E780, &type metadata for StackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77C78);
  }
  return result;
}

unint64_t sub_23BC4F190()
{
  unint64_t result;

  result = qword_256A77C80;
  if (!qword_256A77C80)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E730, &type metadata for StackButtonAction.RequestToastConfirmationPresentationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77C80);
  }
  return result;
}

unint64_t sub_23BC4F1D4()
{
  unint64_t result;

  result = qword_256A77C88;
  if (!qword_256A77C88)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E6E0, &type metadata for StackButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77C88);
  }
  return result;
}

unint64_t sub_23BC4F218()
{
  unint64_t result;

  result = qword_256A77C90;
  if (!qword_256A77C90)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E690, &type metadata for StackButtonAction.RemoveFromStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77C90);
  }
  return result;
}

unint64_t sub_23BC4F25C()
{
  unint64_t result;

  result = qword_256A77C98;
  if (!qword_256A77C98)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E640, &type metadata for StackButtonAction.AddToStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77C98);
  }
  return result;
}

unint64_t sub_23BC4F2A0()
{
  unint64_t result;

  result = qword_256A77CA0;
  if (!qword_256A77CA0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E5F0, &type metadata for StackButtonAction.StackStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77CA0);
  }
  return result;
}

unint64_t sub_23BC4F2E4()
{
  unint64_t result;

  result = qword_256A77CA8;
  if (!qword_256A77CA8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E5A0, &type metadata for StackButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77CA8);
  }
  return result;
}

uint64_t StackButtonAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;

  v37 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77CB0);
  v36 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v42 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77CB8);
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v39 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77CC0);
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77CC8);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77CD0);
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77CD8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77CE0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_23BC4F14C();
  v20 = v44;
  sub_23BC72810();
  if (!v20)
  {
    v26[2] = v14;
    v26[1] = v12;
    v44 = v16;
    v21 = sub_23BC72690();
    if (*(_QWORD *)(v21 + 16) == 1)
      __asm { BR              X10 }
    v22 = sub_23BC725A0();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v24 = &type metadata for StackButtonAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_23BC4FC34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StackButtonAction.init(from:)(a1, a2);
}

void sub_23BC4FC48(_QWORD *a1)
{
  StackButtonAction.encode(to:)(a1);
}

void StackButtonAction.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_23BC4FC98()
{
  sub_23BC727B0();
  return sub_23BC727BC();
}

uint64_t StackButtonAction.hashValue.getter()
{
  sub_23BC727A4();
  StackButtonAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC4FDE4()
{
  sub_23BC727A4();
  StackButtonAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC4FE48()
{
  sub_23BC727A4();
  StackButtonAction.hash(into:)();
  return sub_23BC727E0();
}

void _s14FitnessActions17StackButtonActionO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_23BC4FEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;

  if (v9)
  {
    sub_23BC514AC(v0, v2, v4, v3, v9);
    sub_23BC514C4(v1, v5, v7, v6, v8);
    sub_23BC514C4(v0, v2, v4, v3, v9);
    v10 = 0;
  }
  else
  {
    sub_23BC514C4(v1, v5, v7, v6, 0);
    sub_23BC514C4(v0, v2, v4, v3, 0);
    v10 = ((v1 & 1) == 0) ^ v0;
  }
  return v10 & 1;
}

unint64_t sub_23BC50224()
{
  unint64_t result;

  result = qword_256A77CE8;
  if (!qword_256A77CE8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StackButtonAction, &type metadata for StackButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A77CE8);
  }
  return result;
}

uint64_t destroy for StackButtonAction(uint64_t result)
{
  unsigned int v1;
  unsigned int v2;

  v1 = *(unsigned __int8 *)(result + 26);
  if (v1 >= 5)
    v1 = *(_DWORD *)result + 5;
  if (v1 == 3)
  {
    v2 = *(unsigned __int8 *)(result + 25);
    if (v2 >= 2)
      v2 = *(_DWORD *)result + 2;
    if (v2 != 1)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for StackButtonAction(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  char v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(a2 + 26);
  if (v3 >= 5)
    v3 = *(_DWORD *)a2 + 5;
  switch(v3)
  {
    case 0u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_BYTE *)(a1 + 26) = 0;
      return a1;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v4 = 1;
      goto LABEL_15;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v4 = 2;
      goto LABEL_15;
    case 3u:
      v5 = *(unsigned __int8 *)(a2 + 25);
      if (v5 >= 2)
        v5 = *(_DWORD *)a2 + 2;
      if (v5 == 1)
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v6 = 1;
      }
      else
      {
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v6 = 0;
      }
      *(_BYTE *)(a1 + 25) = v6;
      v4 = 3;
      goto LABEL_15;
    case 4u:
      *(_WORD *)a1 = *(_WORD *)a2;
      v4 = 4;
LABEL_15:
      *(_BYTE *)(a1 + 26) = v4;
      break;
    default:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
      break;
  }
  return a1;
}

uint64_t assignWithCopy for StackButtonAction(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  char v7;
  __int128 v8;
  uint64_t v9;
  unsigned int v10;
  char v11;

  if ((uint64_t *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 26);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    if (v4 == 3)
    {
      v5 = *(unsigned __int8 *)(a1 + 25);
      if (v5 >= 2)
        v5 = *(_DWORD *)a1 + 2;
      if (v5 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v6 = *((unsigned __int8 *)a2 + 26);
    if (v6 >= 5)
      v6 = *(_DWORD *)a2 + 5;
    switch(v6)
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_BYTE *)(a1 + 26) = 0;
        return a1;
      case 1u:
        v9 = *a2;
        *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
        *(_QWORD *)a1 = v9;
        v7 = 1;
        goto LABEL_23;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v7 = 2;
        goto LABEL_23;
      case 3u:
        v10 = *((unsigned __int8 *)a2 + 25);
        if (v10 >= 2)
          v10 = *(_DWORD *)a2 + 2;
        if (v10 == 1)
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v11 = 1;
        }
        else
        {
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = a2[1];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v11 = 0;
        }
        *(_BYTE *)(a1 + 25) = v11;
        v7 = 3;
        goto LABEL_23;
      case 4u:
        *(_WORD *)a1 = *(_WORD *)a2;
        v7 = 4;
LABEL_23:
        *(_BYTE *)(a1 + 26) = v7;
        break;
      default:
        v8 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 11) = *(_OWORD *)((char *)a2 + 11);
        *(_OWORD *)a1 = v8;
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy27_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StackButtonAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  char v7;
  unsigned int v8;
  char v9;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 26);
    if (v4 >= 5)
      v4 = *(_DWORD *)a1 + 5;
    if (v4 == 3)
    {
      v5 = *(unsigned __int8 *)(a1 + 25);
      if (v5 >= 2)
        v5 = *(_DWORD *)a1 + 2;
      if (v5 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v6 = *(unsigned __int8 *)(a2 + 26);
    if (v6 >= 5)
      v6 = *(_DWORD *)a2 + 5;
    switch(v6)
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_BYTE *)(a1 + 26) = 0;
        return a1;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v7 = 1;
        goto LABEL_23;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v7 = 2;
        goto LABEL_23;
      case 3u:
        v8 = *(unsigned __int8 *)(a2 + 25);
        if (v8 >= 2)
          v8 = *(_DWORD *)a2 + 2;
        if (v8 == 1)
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v9 = 1;
        }
        else
        {
          v9 = 0;
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        }
        *(_BYTE *)(a1 + 25) = v9;
        v7 = 3;
        goto LABEL_23;
      case 4u:
        *(_WORD *)a1 = *(_WORD *)a2;
        v7 = 4;
LABEL_23:
        *(_BYTE *)(a1 + 26) = v7;
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StackButtonAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 27))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 26);
  if (v3 >= 6)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StackButtonAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 23) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 27) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 27) = 0;
    if (a2)
      *(_BYTE *)(result + 26) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BC50750(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 26);
  if (result >= 5)
    return (*(_DWORD *)a1 + 5);
  return result;
}

uint64_t sub_23BC5076C(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 4)
  {
    v2 = a2 - 5;
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 5;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 26) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StackButtonAction()
{
  return &type metadata for StackButtonAction;
}

uint64_t storeEnumTagSinglePayload for StackButtonAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23BC507F0 + 4 * byte_23BC7DF22[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23BC50824 + 4 * byte_23BC7DF1D[v4]))();
}

uint64_t sub_23BC50824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC5082C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC50834);
  return result;
}

uint64_t sub_23BC50840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC50848);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23BC5084C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC50854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StackButtonAction.CodingKeys()
{
  return &type metadata for StackButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for StackButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for StackButtonAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for StackButtonAction.StackStatusUpdatedCodingKeys()
{
  return &type metadata for StackButtonAction.StackStatusUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for StackButtonAction.AddToStackTappedCodingKeys()
{
  return &type metadata for StackButtonAction.AddToStackTappedCodingKeys;
}

ValueMetadata *type metadata accessor for StackButtonAction.RemoveFromStackTappedCodingKeys()
{
  return &type metadata for StackButtonAction.RemoveFromStackTappedCodingKeys;
}

uint64_t _s14FitnessActions17StackButtonActionO28StackStatusUpdatedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC508F8 + 4 * byte_23BC7DF27[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC50918 + 4 * byte_23BC7DF2C[v4]))();
}

_BYTE *sub_23BC508F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC50918(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC50920(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC50928(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC50930(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC50938(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StackButtonAction.StartWorkoutDetailUpdatedCodingKeys()
{
  return &type metadata for StackButtonAction.StartWorkoutDetailUpdatedCodingKeys;
}

uint64_t _s14FitnessActions17StackButtonActionO26AddToStackTappedCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC509A0 + 4 * byte_23BC7DF36[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC509D4 + 4 * byte_23BC7DF31[v4]))();
}

uint64_t sub_23BC509D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC509DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC509E4);
  return result;
}

uint64_t sub_23BC509F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC509F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC509FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC50A04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StackButtonAction.RequestToastConfirmationPresentationCodingKeys()
{
  return &type metadata for StackButtonAction.RequestToastConfirmationPresentationCodingKeys;
}

unint64_t sub_23BC50A24()
{
  unint64_t result;

  result = qword_256A77CF0;
  if (!qword_256A77CF0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E190, &type metadata for StackButtonAction.RequestToastConfirmationPresentationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77CF0);
  }
  return result;
}

unint64_t sub_23BC50A6C()
{
  unint64_t result;

  result = qword_256A77CF8;
  if (!qword_256A77CF8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E248, &type metadata for StackButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77CF8);
  }
  return result;
}

unint64_t sub_23BC50AB4()
{
  unint64_t result;

  result = qword_256A77D00;
  if (!qword_256A77D00)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E300, &type metadata for StackButtonAction.RemoveFromStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D00);
  }
  return result;
}

unint64_t sub_23BC50AFC()
{
  unint64_t result;

  result = qword_256A77D08;
  if (!qword_256A77D08)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E3B8, &type metadata for StackButtonAction.AddToStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D08);
  }
  return result;
}

unint64_t sub_23BC50B44()
{
  unint64_t result;

  result = qword_256A77D10;
  if (!qword_256A77D10)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E470, &type metadata for StackButtonAction.StackStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D10);
  }
  return result;
}

unint64_t sub_23BC50B8C()
{
  unint64_t result;

  result = qword_256A77D18;
  if (!qword_256A77D18)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E578, &type metadata for StackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D18);
  }
  return result;
}

unint64_t sub_23BC50BD4()
{
  unint64_t result;

  result = qword_256A77D20;
  if (!qword_256A77D20)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E498, &type metadata for StackButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D20);
  }
  return result;
}

unint64_t sub_23BC50C1C()
{
  unint64_t result;

  result = qword_256A77D28;
  if (!qword_256A77D28)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E4C0, &type metadata for StackButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D28);
  }
  return result;
}

unint64_t sub_23BC50C64()
{
  unint64_t result;

  result = qword_256A77D30;
  if (!qword_256A77D30)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E3E0, &type metadata for StackButtonAction.StackStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D30);
  }
  return result;
}

unint64_t sub_23BC50CAC()
{
  unint64_t result;

  result = qword_256A77D38;
  if (!qword_256A77D38)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E408, &type metadata for StackButtonAction.StackStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D38);
  }
  return result;
}

unint64_t sub_23BC50CF4()
{
  unint64_t result;

  result = qword_256A77D40;
  if (!qword_256A77D40)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E328, &type metadata for StackButtonAction.AddToStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D40);
  }
  return result;
}

unint64_t sub_23BC50D3C()
{
  unint64_t result;

  result = qword_256A77D48;
  if (!qword_256A77D48)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E350, &type metadata for StackButtonAction.AddToStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D48);
  }
  return result;
}

unint64_t sub_23BC50D84()
{
  unint64_t result;

  result = qword_256A77D50;
  if (!qword_256A77D50)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E270, &type metadata for StackButtonAction.RemoveFromStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D50);
  }
  return result;
}

unint64_t sub_23BC50DCC()
{
  unint64_t result;

  result = qword_256A77D58;
  if (!qword_256A77D58)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E298, &type metadata for StackButtonAction.RemoveFromStackTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D58);
  }
  return result;
}

unint64_t sub_23BC50E14()
{
  unint64_t result;

  result = qword_256A77D60;
  if (!qword_256A77D60)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E1B8, &type metadata for StackButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D60);
  }
  return result;
}

unint64_t sub_23BC50E5C()
{
  unint64_t result;

  result = qword_256A77D68;
  if (!qword_256A77D68)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E1E0, &type metadata for StackButtonAction.StartWorkoutDetailUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D68);
  }
  return result;
}

unint64_t sub_23BC50EA4()
{
  unint64_t result;

  result = qword_256A77D70;
  if (!qword_256A77D70)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E100, &type metadata for StackButtonAction.RequestToastConfirmationPresentationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D70);
  }
  return result;
}

unint64_t sub_23BC50EEC()
{
  unint64_t result;

  result = qword_256A77D78;
  if (!qword_256A77D78)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E128, &type metadata for StackButtonAction.RequestToastConfirmationPresentationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D78);
  }
  return result;
}

unint64_t sub_23BC50F34()
{
  unint64_t result;

  result = qword_256A77D80;
  if (!qword_256A77D80)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E4E8, &type metadata for StackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D80);
  }
  return result;
}

unint64_t sub_23BC50F7C()
{
  unint64_t result;

  result = qword_256A77D88;
  if (!qword_256A77D88)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E510, &type metadata for StackButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77D88);
  }
  return result;
}

uint64_t sub_23BC50FC0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7669746341776172 && a2 == 0xEF65707954797469;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC510C8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC82CA0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023BC82CC0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BC82CE0 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023BC82500 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x800000023BC82D00)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23BC5131C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BC513A8()
{
  return 0x707954616964656DLL;
}

uint64_t sub_23BC513C4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6465646461 && a2 == 0xE500000000000000;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC514AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3)
    return sub_23BBF8608(result, a2, a3, a4, BYTE1(a4) & 1);
  return result;
}

uint64_t sub_23BC514C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3)
    return sub_23BBF876C(result, a2, a3, a4, BYTE1(a4) & 1);
  return result;
}

__n128 StartWorkoutButtonEnvironment.init(requireNewSessionsAllowed:fetchStartWorkoutDetail:fetchResumeTime:fetchSwappablePlannedWorkoutTitle:fetchFuturePlannedWorkoutDate:requestStartWorkout:requestStartWorkoutSwappingPlannedWorkout:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  __n128 result;

  result = a11;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 104) = a13;
  return result;
}

ValueMetadata *type metadata accessor for StartWorkoutButtonEnvironment()
{
  return &type metadata for StartWorkoutButtonEnvironment;
}

uint64_t sub_23BC51510(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC51548 + 4 * byte_23BC7E7F0[a1]))(0xD000000000000011, 0x800000023BC82D30);
}

uint64_t sub_23BC51548()
{
  return 0x6570704177656976;
}

uint64_t sub_23BC5158C()
{
  unsigned __int8 *v0;

  return sub_23BC51510(*v0);
}

uint64_t sub_23BC51594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC53518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC515B8()
{
  sub_23BC51BB4();
  return sub_23BC72828();
}

uint64_t sub_23BC515E0()
{
  sub_23BC51BB4();
  return sub_23BC72834();
}

uint64_t sub_23BC51608()
{
  sub_23BC51CC4();
  return sub_23BC72828();
}

uint64_t sub_23BC51630()
{
  sub_23BC51CC4();
  return sub_23BC72834();
}

uint64_t sub_23BC51658()
{
  sub_23BC51C80();
  return sub_23BC72828();
}

uint64_t sub_23BC51680()
{
  sub_23BC51C80();
  return sub_23BC72834();
}

uint64_t sub_23BC516A8()
{
  sub_23BC51C3C();
  return sub_23BC72828();
}

uint64_t sub_23BC516D0()
{
  sub_23BC51C3C();
  return sub_23BC72834();
}

uint64_t sub_23BC516F8()
{
  sub_23BC51D08();
  return sub_23BC72828();
}

uint64_t sub_23BC51720()
{
  sub_23BC51D08();
  return sub_23BC72834();
}

void SharingButtonAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77D90);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v20 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77D98);
  v16 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v15 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77DA0);
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v19 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BC71B5C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v17 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77DA8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = type metadata accessor for SharingButtonAction();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77DB0);
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x24BDAC7A8](v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC51BB4();
  sub_23BC7281C();
  sub_23BC51BF8(v27, (uint64_t)v10);
  v12 = (char *)sub_23BC51998
      + 4 * byte_23BC7E7F4[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 3, v5)];
  __asm { BR              X10 }
}

uint64_t sub_23BC51998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 - 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v0, v3);
  *(_BYTE *)(v4 - 67) = 1;
  sub_23BC51CC4();
  v6 = *(_QWORD *)(v4 - 160);
  v7 = *(_QWORD *)(v4 - 104);
  sub_23BC726A8();
  sub_23BBF377C(&qword_256A74D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  v8 = *(_QWORD *)(v4 - 128);
  sub_23BC72720();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v7);
}

uint64_t type metadata accessor for SharingButtonAction()
{
  uint64_t result;

  result = qword_256A77E80;
  if (!qword_256A77E80)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23BC51BB4()
{
  unint64_t result;

  result = qword_256A77DB8;
  if (!qword_256A77DB8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7ED20, &type metadata for SharingButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77DB8);
  }
  return result;
}

uint64_t sub_23BC51BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharingButtonAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BC51C3C()
{
  unint64_t result;

  result = qword_256A77DC0;
  if (!qword_256A77DC0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7ECD0, &type metadata for SharingButtonAction.SharePickerDismisedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77DC0);
  }
  return result;
}

unint64_t sub_23BC51C80()
{
  unint64_t result;

  result = qword_256A77DC8;
  if (!qword_256A77DC8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EC80, &type metadata for SharingButtonAction.ShareButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77DC8);
  }
  return result;
}

unint64_t sub_23BC51CC4()
{
  unint64_t result;

  result = qword_256A77DD0;
  if (!qword_256A77DD0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EC30, &type metadata for SharingButtonAction.FetchedSharingURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77DD0);
  }
  return result;
}

unint64_t sub_23BC51D08()
{
  unint64_t result;

  result = qword_256A77DD8;
  if (!qword_256A77DD8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EBE0, &type metadata for SharingButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77DD8);
  }
  return result;
}

uint64_t SharingButtonAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD v26[8];
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  char *v34;

  v31 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77DE0);
  v26[1] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77DE8);
  v26[4] = *(_QWORD *)(v4 - 8);
  v26[5] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77DF0);
  v26[6] = *(_QWORD *)(v6 - 8);
  v26[7] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77DF8);
  v26[2] = *(_QWORD *)(v8 - 8);
  v26[3] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77E00);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SharingButtonAction();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23BC51BB4();
  v19 = v34;
  sub_23BC72810();
  if (!v19)
  {
    v20 = v14;
    v34 = v17;
    v21 = sub_23BC72690();
    if (*(_QWORD *)(v21 + 16) == 1)
      __asm { BR              X10 }
    v22 = sub_23BC725A0();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v24 = v20;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
}

uint64_t sub_23BC52334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharingButtonAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC52378@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SharingButtonAction.init(from:)(a1, a2);
}

void sub_23BC5238C(_QWORD *a1)
{
  SharingButtonAction.encode(to:)(a1);
}

void SharingButtonAction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v1 = sub_23BC71B5C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for SharingButtonAction();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC51BF8(v0, (uint64_t)v5);
  v6 = (char *)sub_23BC52464
     + 4 * byte_23BC7E7FC[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v5, 3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_23BC52464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23BC72264();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

void SharingButtonAction.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = sub_23BC71B5C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = type metadata accessor for SharingButtonAction();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BC51BF8(v1, (uint64_t)v6);
  v7 = (char *)sub_23BC525C8
     + 4 * byte_23BC7E800[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 3, v2)];
  __asm { BR              X10 }
}

uint64_t sub_23BC525C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23BC72264();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  return sub_23BC727E0();
}

void sub_23BC52678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = sub_23BC71B5C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BC51BF8(v1, (uint64_t)v6);
  v7 = (char *)sub_23BC5274C
     + 4 * byte_23BC7E804[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 3, v2)];
  __asm { BR              X10 }
}

uint64_t sub_23BC5274C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23BC72264();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  return sub_23BC727E0();
}

void _s14FitnessActions19SharingButtonActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = sub_23BC71B5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = type metadata accessor for SharingButtonAction();
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256A77EF0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23BC51BF8(a1, (uint64_t)v10);
  sub_23BC51BF8(a2, v11);
  v12 = (char *)sub_23BC52910
      + 4 * byte_23BC7E808[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 3, v4)];
  __asm { BR              X10 }
}

uint64_t sub_23BC52910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v9)(uint64_t, uint64_t);

  sub_23BC51BF8(v1, v3);
  if (v4(v5, 3, v0))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v0);
    sub_23BC536BC(v1);
    v7 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v5, v0);
    v7 = MEMORY[0x24260DD8C](v3, v2);
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v2, v0);
    v9(v3, v0);
    sub_23BC536FC(v1);
  }
  return v7 & 1;
}

uint64_t sub_23BC52A18()
{
  return sub_23BBF377C(&qword_256A77E08, (uint64_t (*)(uint64_t))type metadata accessor for SharingButtonAction, (uint64_t)&protocol conformance descriptor for SharingButtonAction);
}

uint64_t *initializeBufferWithCopyOfBuffer for SharingButtonAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23BC71B5C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for SharingButtonAction(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23BC71B5C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 3, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for SharingButtonAction(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BC71B5C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for SharingButtonAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23BC71B5C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for SharingButtonAction(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BC71B5C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for SharingButtonAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23BC71B5C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingButtonAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC52EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23BC71B5C();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SharingButtonAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC52F00(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = sub_23BC71B5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BC52F54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BC71B5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_23BC52F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BC71B5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_23BC52FCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71B5C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingButtonAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BC5306C + 4 * byte_23BC7E811[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BC530A0 + 4 * byte_23BC7E80C[v4]))();
}

uint64_t sub_23BC530A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC530A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC530B0);
  return result;
}

uint64_t sub_23BC530BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC530C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BC530C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC530D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingButtonAction.CodingKeys()
{
  return &type metadata for SharingButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SharingButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for SharingButtonAction.ViewAppearedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SharingButtonAction.FetchedSharingURLCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC5313C + 4 * byte_23BC7E816[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC5315C + 4 * byte_23BC7E81B[v4]))();
}

_BYTE *sub_23BC5313C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC5315C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC53164(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC5316C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC53174(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC5317C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SharingButtonAction.FetchedSharingURLCodingKeys()
{
  return &type metadata for SharingButtonAction.FetchedSharingURLCodingKeys;
}

ValueMetadata *type metadata accessor for SharingButtonAction.ShareButtonTappedCodingKeys()
{
  return &type metadata for SharingButtonAction.ShareButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for SharingButtonAction.SharePickerDismisedCodingKeys()
{
  return &type metadata for SharingButtonAction.SharePickerDismisedCodingKeys;
}

unint64_t sub_23BC531BC()
{
  unint64_t result;

  result = qword_256A77E90;
  if (!qword_256A77E90)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EAB0, &type metadata for SharingButtonAction.FetchedSharingURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77E90);
  }
  return result;
}

unint64_t sub_23BC53204()
{
  unint64_t result;

  result = qword_256A77E98;
  if (!qword_256A77E98)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EBB8, &type metadata for SharingButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77E98);
  }
  return result;
}

unint64_t sub_23BC5324C()
{
  unint64_t result;

  result = qword_256A77EA0;
  if (!qword_256A77EA0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EAD8, &type metadata for SharingButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EA0);
  }
  return result;
}

unint64_t sub_23BC53294()
{
  unint64_t result;

  result = qword_256A77EA8;
  if (!qword_256A77EA8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EB00, &type metadata for SharingButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EA8);
  }
  return result;
}

unint64_t sub_23BC532DC()
{
  unint64_t result;

  result = qword_256A77EB0;
  if (!qword_256A77EB0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EA20, &type metadata for SharingButtonAction.FetchedSharingURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EB0);
  }
  return result;
}

unint64_t sub_23BC53324()
{
  unint64_t result;

  result = qword_256A77EB8;
  if (!qword_256A77EB8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EA48, &type metadata for SharingButtonAction.FetchedSharingURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EB8);
  }
  return result;
}

unint64_t sub_23BC5336C()
{
  unint64_t result;

  result = qword_256A77EC0;
  if (!qword_256A77EC0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E9D0, &type metadata for SharingButtonAction.ShareButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EC0);
  }
  return result;
}

unint64_t sub_23BC533B4()
{
  unint64_t result;

  result = qword_256A77EC8;
  if (!qword_256A77EC8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E9F8, &type metadata for SharingButtonAction.ShareButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EC8);
  }
  return result;
}

unint64_t sub_23BC533FC()
{
  unint64_t result;

  result = qword_256A77ED0;
  if (!qword_256A77ED0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E980, &type metadata for SharingButtonAction.SharePickerDismisedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77ED0);
  }
  return result;
}

unint64_t sub_23BC53444()
{
  unint64_t result;

  result = qword_256A77ED8;
  if (!qword_256A77ED8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7E9A8, &type metadata for SharingButtonAction.SharePickerDismisedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77ED8);
  }
  return result;
}

unint64_t sub_23BC5348C()
{
  unint64_t result;

  result = qword_256A77EE0;
  if (!qword_256A77EE0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EB28, &type metadata for SharingButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EE0);
  }
  return result;
}

unint64_t sub_23BC534D4()
{
  unint64_t result;

  result = qword_256A77EE8;
  if (!qword_256A77EE8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EB50, &type metadata for SharingButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77EE8);
  }
  return result;
}

uint64_t sub_23BC53518(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82D30 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82D50 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023BC82D70)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BC536BC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_256A77EF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BC536FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharingButtonAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SharingButtonEnvironment.init(fetchSharingURL:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t type metadata accessor for SharingButtonEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharingButtonEnvironment);
}

uint64_t sub_23BC5374C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  char v20;
  char v21;
  int v22;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_25:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v11);
    swift_bridgeObjectRetain();
    v19 = sub_23BC53EC4(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return 0;
    v22 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + v19);
    if (v22 == 2)
    {
      if (v18 != 2)
        return 0;
    }
    else if (v22 == 3)
    {
      if (v18 != 3)
        return 0;
    }
    else if ((v18 & 0xFE) == 2 || ((v18 ^ ((v22 & 1) == 0)) & 1) == 0)
    {
      return 0;
    }
  }
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v12 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  ++v4;
  if (v13)
    goto LABEL_24;
  v4 = v12 + 1;
  if (v12 + 1 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_24;
  v4 = v12 + 2;
  if (v12 + 2 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_24;
  v4 = v12 + 3;
  if (v12 + 3 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_24:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_25;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t UpNextQueueMonitorState.stackStatus.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UpNextQueueMonitorState.stackStatus.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*UpNextQueueMonitorState.stackStatus.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

FitnessActions::UpNextQueueMonitorState __swiftcall UpNextQueueMonitorState.init(stackStatus:)(FitnessActions::UpNextQueueMonitorState stackStatus)
{
  FitnessActions::UpNextQueueMonitorState *v1;

  v1->stackStatus._rawValue = stackStatus.stackStatus._rawValue;
  return stackStatus;
}

uint64_t sub_23BC5397C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC54368(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC539A4()
{
  sub_23BC53B1C();
  return sub_23BC72828();
}

uint64_t sub_23BC539CC()
{
  sub_23BC53B1C();
  return sub_23BC72834();
}

uint64_t UpNextQueueMonitorState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77F78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC53B1C();
  sub_23BC7281C();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A77F88);
  sub_23BC53CA8(&qword_256A77F90, (uint64_t (*)(void))sub_23BC3DB6C, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_23BC72720();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23BC53B1C()
{
  unint64_t result;

  result = qword_256A77F80;
  if (!qword_256A77F80)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EF6C, &type metadata for UpNextQueueMonitorState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77F80);
  }
  return result;
}

uint64_t UpNextQueueMonitorState.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77F98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC53B1C();
  sub_23BC72810();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A77F88);
    sub_23BC53CA8(&qword_256A77FA0, (uint64_t (*)(void))sub_23BC3DBB0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_23BC72684();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BC53CA8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77F88);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x24260ED10](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC53D1C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return UpNextQueueMonitorState.init(from:)(a1, a2);
}

uint64_t sub_23BC53D30(_QWORD *a1)
{
  return UpNextQueueMonitorState.encode(to:)(a1);
}

uint64_t UpNextQueueMonitorState.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_23BC54008(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static UpNextQueueMonitorState.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23BC5374C(*a1, *a2);
}

uint64_t UpNextQueueMonitorState.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23BC727A4();
  swift_bridgeObjectRetain();
  sub_23BC54008((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23BC727E0();
}

uint64_t sub_23BC53DDC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23BC727A4();
  swift_bridgeObjectRetain();
  sub_23BC54008((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23BC727E0();
}

uint64_t sub_23BC53E30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_23BC54008(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BC53E68()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23BC727A4();
  swift_bridgeObjectRetain();
  sub_23BC54008((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23BC727E0();
}

uint64_t sub_23BC53EB8(uint64_t *a1, uint64_t *a2)
{
  return sub_23BC5374C(*a1, *a2);
}

unint64_t sub_23BC53EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23BC727A4();
  sub_23BC7230C();
  v4 = sub_23BC727E0();
  return sub_23BC53F28(a1, a2, v4);
}

unint64_t sub_23BC53F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23BC72744() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23BC72744() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_23BC54008(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;

  v3 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (v6)
  {
    v11 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v12 = v11 | (v10 << 6);
LABEL_20:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + v12);
    swift_bridgeObjectRetain();
    sub_23BC7230C();
    swift_bridgeObjectRelease();
    if (v16 == 2 || v16 == 3)
    {
      sub_23BC727B0();
    }
    else
    {
      sub_23BC727B0();
      sub_23BC727BC();
    }
    result = sub_23BC727E0();
    v9 ^= result;
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v13 >= v7)
    goto LABEL_23;
  v14 = *(_QWORD *)(v3 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_19;
  v10 = v13 + 1;
  if (v13 + 1 >= v7)
    goto LABEL_23;
  v14 = *(_QWORD *)(v3 + 8 * v10);
  if (v14)
  {
LABEL_19:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_20;
  }
  v15 = v13 + 2;
  if (v15 >= v7)
  {
LABEL_23:
    swift_release();
    return sub_23BC727B0();
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v7)
      goto LABEL_23;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorState()
{
  return &type metadata for UpNextQueueMonitorState;
}

uint64_t storeEnumTagSinglePayload for UpNextQueueMonitorState.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC54234 + 4 * byte_23BC7EDC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC54254 + 4 * byte_23BC7EDC5[v4]))();
}

_BYTE *sub_23BC54234(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC54254(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC5425C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC54264(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC5426C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC54274(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorState.CodingKeys()
{
  return &type metadata for UpNextQueueMonitorState.CodingKeys;
}

unint64_t sub_23BC54294()
{
  unint64_t result;

  result = qword_256A77FA8;
  if (!qword_256A77FA8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EF44, &type metadata for UpNextQueueMonitorState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77FA8);
  }
  return result;
}

unint64_t sub_23BC542DC()
{
  unint64_t result;

  result = qword_256A77FB0;
  if (!qword_256A77FB0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EEB4, &type metadata for UpNextQueueMonitorState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77FB0);
  }
  return result;
}

unint64_t sub_23BC54324()
{
  unint64_t result;

  result = qword_256A77FB8;
  if (!qword_256A77FB8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7EEDC, &type metadata for UpNextQueueMonitorState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A77FB8);
  }
  return result;
}

uint64_t sub_23BC54368(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6174536B63617473 && a2 == 0xEB00000000737574)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BC543FC()
{
  return 0x6174536B63617473;
}

uint64_t StartWorkoutModalPresentation.init(store:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t StartWorkoutModalPresentation.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77FC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77FC8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77FD0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  v14 = v2[1];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A77FD8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, a1, v16);
  v17 = &v6[*(int *)(v4 + 36)];
  *(_QWORD *)v17 = sub_23BBE8860;
  *((_QWORD *)v17 + 1) = v15;
  v17[16] = 0;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v13;
  *(_QWORD *)(v18 + 24) = v14;
  sub_23BBE817C((uint64_t)v6, (uint64_t)v9, &qword_256A77FC0);
  v19 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v19 = sub_23BBE8860;
  *((_QWORD *)v19 + 1) = v18;
  v19[16] = 0;
  swift_retain_n();
  sub_23BBE81C0((uint64_t)v6, &qword_256A77FC0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v13;
  *(_QWORD *)(v20 + 24) = v14;
  sub_23BBE817C((uint64_t)v9, (uint64_t)v12, &qword_256A77FC8);
  v21 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v21 = sub_23BBE8860;
  *((_QWORD *)v21 + 1) = v20;
  v21[16] = 0;
  swift_retain();
  sub_23BBE81C0((uint64_t)v9, &qword_256A77FC8);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v13;
  *(_QWORD *)(v22 + 24) = v14;
  v23 = v27;
  sub_23BBE817C((uint64_t)v12, v27, &qword_256A77FD0);
  v24 = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A77FE0) + 36);
  *(_QWORD *)v24 = sub_23BBE8860;
  *(_QWORD *)(v24 + 8) = v22;
  *(_BYTE *)(v24 + 16) = 0;
  swift_retain();
  return sub_23BBE81C0((uint64_t)v12, &qword_256A77FD0);
}

uint64_t sub_23BC546B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t View.startWorkoutModalPresentation(store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  return MEMORY[0x24260E1F4](v4, a3, &type metadata for StartWorkoutModalPresentation);
}

uint64_t sub_23BC5470C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StartWorkoutModalPresentation()
{
  return &type metadata for StartWorkoutModalPresentation;
}

uint64_t sub_23BC5472C()
{
  return sub_23BC54784(&qword_256A77FE8, &qword_256A77FE0, sub_23BC54760, (uint64_t (*)(void))sub_23BC54954);
}

uint64_t sub_23BC54760()
{
  return sub_23BC54784(&qword_256A77FF0, &qword_256A77FD0, sub_23BC547F4, (uint64_t (*)(void))sub_23BC54910);
}

uint64_t sub_23BC54784(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC547F4()
{
  return sub_23BC54784(&qword_256A77FF8, &qword_256A77FC8, sub_23BC54818, (uint64_t (*)(void))sub_23BC548CC);
}

uint64_t sub_23BC54818()
{
  return sub_23BC54784(&qword_256A78000, &qword_256A77FC0, (uint64_t (*)(void))sub_23BC5483C, (uint64_t (*)(void))sub_23BC54888);
}

unint64_t sub_23BC5483C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A78008;
  if (!qword_256A78008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A77FD8);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_256A78008);
  }
  return result;
}

unint64_t sub_23BC54888()
{
  unint64_t result;

  result = qword_256A78010;
  if (!qword_256A78010)
  {
    result = MEMORY[0x24260ED10](&unk_23BC76BF4, &type metadata for OngoingWorkoutAlert);
    atomic_store(result, (unint64_t *)&qword_256A78010);
  }
  return result;
}

unint64_t sub_23BC548CC()
{
  unint64_t result;

  result = qword_256A78018;
  if (!qword_256A78018)
  {
    result = MEMORY[0x24260ED10](&unk_23BC75BE0, &type metadata for ReplaceScheduledWorkoutAlert);
    atomic_store(result, (unint64_t *)&qword_256A78018);
  }
  return result;
}

unint64_t sub_23BC54910()
{
  unint64_t result;

  result = qword_256A78020;
  if (!qword_256A78020)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7AE30, &type metadata for ResumeWorkoutConfirmationDialog);
    atomic_store(result, (unint64_t *)&qword_256A78020);
  }
  return result;
}

unint64_t sub_23BC54954()
{
  unint64_t result;

  result = qword_256A78028;
  if (!qword_256A78028)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80204, &type metadata for StartFutureScheduledWorkoutAlert);
    atomic_store(result, (unint64_t *)&qword_256A78028);
  }
  return result;
}

uint64_t sub_23BC54998(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_23BC71D6C();
  v4[0] = v1;
  v4[1] = sub_23BC549EC();
  return MEMORY[0x24260ED10](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_23BC549EC()
{
  unint64_t result;

  result = qword_256A78030;
  if (!qword_256A78030)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for StartWorkoutModalPresentation, &type metadata for StartWorkoutModalPresentation);
    atomic_store(result, (unint64_t *)&qword_256A78030);
  }
  return result;
}

uint64_t CondensedVStack.init(limit:height:spacing:condensedHeight:condensedSpacing:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(_QWORD *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t CondensedVStack.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _DWORD v17[4];

  v6 = v5;
  v17[3] = a2;
  v8 = sub_23BC71D54();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v17 - v13;
  v15 = *v6;
  sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
  sub_23BC7245C();
  sub_23BC7248C();
  sub_23BC72480();
  sub_23BC7245C();
  sub_23BC7248C();
  sub_23BC72480();
  sub_23BC7245C();
  sub_23BC7248C();
  if (sub_23BC72480() >= v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a5, v8);
    sub_23BC54CB8(1);
    sub_23BC7245C();
    sub_23BC7248C();
    sub_23BC72480();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  else
  {
    sub_23BC7245C();
    sub_23BC7248C();
    return sub_23BC72480();
  }
}

uint64_t sub_23BC54CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_23BC71D54();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
  result = sub_23BC72468();
  if (__OFSUB__(result, a1))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_23BC7245C();
  sub_23BC7248C();
  sub_23BC72474();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1, v4);
  if ((v12 & 1) != 0)
  {
    sub_23BC7248C();
    v9 = *(void (**)(char *, uint64_t))(v5 + 8);
    v9(v8, v4);
  }
  else
  {
    v10 = v11;
    v9 = *(void (**)(char *, uint64_t))(v5 + 8);
    v9(v8, v4);
    v14 = v10;
  }
  result = sub_23BC7245C();
  if (v14 >= v13)
  {
    v11 = v13;
    v12 = v14;
    sub_23BC724BC();
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v2, v4);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t CondensedVStack.placeSubviews(in:proposal:subviews:cache:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23BC552D4(a9, a1, a2, a3, a4);
}

uint64_t sub_23BC54E68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_23BC71D54();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
    sub_23BC7248C();
    sub_23BC7245C();
    sub_23BC56354(&qword_256A78080, MEMORY[0x24BDEC788]);
    sub_23BC72270();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1, v4);
    if ((v12 & 1) != 0)
    {
      sub_23BC7245C();
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
    }
    else
    {
      v10 = v11;
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
      v14 = v10;
    }
    result = sub_23BC7245C();
    if (v14 >= v13)
    {
      v11 = v13;
      v12 = v14;
      sub_23BC724BC();
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v2, v4);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23BC55004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_23BC71D54();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
    sub_23BC7245C();
    sub_23BC7248C();
    sub_23BC72474();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1, v4);
    if ((v12 & 1) != 0)
    {
      sub_23BC7248C();
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
    }
    else
    {
      v10 = v11;
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
      v14 = v10;
    }
    result = sub_23BC7248C();
    if (v13 >= v14)
    {
      v11 = v14;
      v12 = v13;
      sub_23BC724BC();
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v2, v4);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23BC55198(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return CondensedVStack.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4, a5);
}

uint64_t sub_23BC551A8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23BC552D4(a9, a1, a2, a3, a4);
}

uint64_t sub_23BC551B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23BC5520C(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_23BC551E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23BC5520C(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_23BC5520C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_23BC55248(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_23BC71C88();
  return sub_23BC552A4;
}

void sub_23BC552A4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_23BC552D4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double *v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  BOOL v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  void (*v72)(_QWORD *, _QWORD);
  char *v73;
  char *v74;
  _QWORD *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(_QWORD *, _QWORD);
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  void (*v94)(double *, uint64_t, uint64_t);
  double *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double Width;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  void (*v112)(_QWORD *, _QWORD);
  char *v113;
  _QWORD *v114;
  void (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  double v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  double *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  char *v136;
  _QWORD *v137;
  _QWORD *v138;
  char *v139;
  double *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD v153[4];
  char v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78050);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v146 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v141 = (char *)&v125 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v142 = (uint64_t)&v125 - v16;
  v17 = sub_23BC71D48();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v139 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v136 = (char *)&v125 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v140 = (double *)((char *)&v125 - v23);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78058);
  v24 = MEMORY[0x24BDAC7A8](v149);
  v137 = (_QWORD *)((char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v24);
  v148 = (char *)&v125 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v135 = (_QWORD *)((char *)&v125 - v29);
  MEMORY[0x24BDAC7A8](v28);
  v138 = (_QWORD *)((char *)&v125 - v30);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78060);
  v31 = MEMORY[0x24BDAC7A8](v144);
  v134 = (uint64_t)&v125 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v143 = (uint64_t)&v125 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v125 - v35;
  v37 = sub_23BC71D54();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v125 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78068);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v145 = (char *)&v125 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v131 = (char *)&v125 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v133 = (uint64_t)&v125 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v132 = (uint64_t)&v125 - v48;
  v49 = *(double **)v5;
  v50 = *(double *)(v5 + 8);
  v51 = *(double *)(v5 + 24);
  v52 = sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
  sub_23BC7245C();
  sub_23BC7248C();
  v152 = v52;
  v53 = sub_23BC72480();
  v130 = v49;
  v54 = v53 < (uint64_t)v49;
  v55 = v40;
  v147 = v18;
  v150 = v40;
  v151 = v38;
  if (v54)
  {
    v56 = v151;
    v57 = (uint64_t)v145;
    v143 = *(uint64_t *)(v151 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v143)(v145, a1, v37);
    v140 = &v125;
    v58 = v133;
    sub_23BC5630C(v57, v133);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v40, v58, v37);
    sub_23BC56354(&qword_256A78070, MEMORY[0x24BDEC798]);
    v59 = v134;
    sub_23BC72324();
    v60 = *(int *)(v144 + 36);
    *(_QWORD *)(v59 + v60) = 0;
    v61 = (_QWORD *)(v59 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A78078) + 36));
    v62 = *v61;
    sub_23BC7248C();
    v63 = v62 == v153[0];
    v64 = (char *)v57;
    if (v63)
    {
      v71 = v146;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v146, 1, 1, v17);
LABEL_16:
      v86 = (uint64_t)v71;
      v87 = (uint64_t)v64;
      goto LABEL_31;
    }
    v144 = v60;
    v142 = *(_QWORD *)&v50;
    v71 = v146;
    while (1)
    {
      v72 = (void (*)(_QWORD *, _QWORD))sub_23BC724C8();
      (*(void (**)(char *))(v18 + 16))(v71);
      v72(v153, 0);
      v73 = v150;
      ((void (*)(char *, uint64_t, uint64_t))v143)(v150, v59, v37);
      sub_23BC72498();
      (*(void (**)(char *, uint64_t))(v151 + 8))(v73, v37);
      v74 = *(char **)(v18 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v74)(v71, 0, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v71, 1, v17) == 1)
      {
        v86 = (uint64_t)v71;
        v87 = (uint64_t)v64;
        goto LABEL_31;
      }
      v141 = v74;
      v75 = v61;
      v76 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v77 = v139;
      v76(v139, v71, v17);
      v78 = v149;
      v79 = &v148[*(int *)(v149 + 48)];
      v80 = v144;
      v81 = *(_QWORD *)(v59 + v144);
      result = ((uint64_t (*)(char *, char *, uint64_t))v76)(v79, v77, v17);
      if (__OFADD__(v81, 1))
        break;
      *(_QWORD *)(v59 + v80) = v81 + 1;
      v83 = *(int *)(v78 + 48);
      v84 = (uint64_t)v137;
      *v137 = v81;
      v76((char *)(v84 + v83), v79, v17);
      v155.origin.x = a2;
      v155.origin.y = a3;
      v155.size.width = a4;
      v155.size.height = a5;
      CGRectGetMinX(v155);
      v156.origin.x = a2;
      v156.origin.y = a3;
      v156.size.width = a4;
      v156.size.height = a5;
      CGRectGetMinY(v156);
      v157.origin.x = a2;
      v157.origin.y = a3;
      v157.size.width = a4;
      v157.size.height = a5;
      CGRectGetWidth(v157);
      sub_23BC72120();
      LOBYTE(v153[0]) = 0;
      v154 = 0;
      sub_23BC71D3C();
      sub_23BBE81C0(v84, &qword_256A78058);
      v61 = v75;
      v85 = *v75;
      sub_23BC7248C();
      v63 = v85 == v153[0];
      v71 = v146;
      v18 = v147;
      v64 = v145;
      if (v63)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v141)(v146, 1, 1, v17);
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    v129 = a1;
    sub_23BC7245C();
    sub_23BC7248C();
    sub_23BC72480();
    v65 = (uint64_t)v130;
    sub_23BC7245C();
    sub_23BC7248C();
    if (v65 < sub_23BC72480())
      v50 = v51;
    v66 = v151;
    v146 = *(char **)(v151 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v146)(v55, a1, v37);
    v67 = v132;
    sub_23BC54E68(2);
    v130 = &v125;
    v68 = v133;
    sub_23BC5630C(v67, v133);
    v128 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 32);
    v128(v55, v68, v37);
    v127 = sub_23BC56354(&qword_256A78070, MEMORY[0x24BDEC798]);
    sub_23BC72324();
    v69 = (_QWORD *)*(int *)(v144 + 36);
    *(_QWORD *)((char *)v69 + (_QWORD)v36) = 0;
    v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78078);
    v139 = &v36[*(int *)(v126 + 36)];
    v70 = *(_QWORD *)v139;
    sub_23BC7248C();
    v125 = v50;
    if (v70 == v153[0])
    {
      v145 = *(char **)(v18 + 56);
      v59 = v143;
      v88 = v144;
LABEL_21:
      v93 = v142;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v145)(v142, 1, 1, v17);
    }
    else
    {
      v137 = v69;
      v134 = *(_QWORD *)&v50;
      v59 = v143;
      v88 = v144;
      while (1)
      {
        v89 = (void (*)(_QWORD *, _QWORD))sub_23BC724C8();
        v90 = (char *)v142;
        (*(void (**)(uint64_t))(v18 + 16))(v142);
        v89(v153, 0);
        v91 = v150;
        ((void (*)(char *, char *, uint64_t))v146)(v150, v36, v37);
        sub_23BC72498();
        v92 = v91;
        v93 = (uint64_t)v90;
        (*(void (**)(char *, uint64_t))(v151 + 8))(v92, v37);
        v145 = *(char **)(v18 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v145)(v90, 0, 1, v17);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v90, 1, v17) == 1)
          break;
        v94 = *(void (**)(double *, uint64_t, uint64_t))(v18 + 32);
        v95 = v140;
        v94(v140, v93, v17);
        v96 = v149;
        v97 = &v148[*(int *)(v149 + 48)];
        v98 = v36;
        v99 = v137;
        v100 = *(_QWORD *)((char *)v137 + (_QWORD)v98);
        result = ((uint64_t (*)(char *, double *, uint64_t))v94)(v97, v95, v17);
        if (__OFADD__(v100, 1))
          goto LABEL_33;
        *(_QWORD *)((char *)v99 + (_QWORD)v98) = v100 + 1;
        v101 = *(int *)(v96 + 48);
        v102 = (uint64_t)v138;
        *v138 = v100;
        v94((double *)(v102 + v101), (uint64_t)v97, v17);
        v158.origin.x = a2;
        v158.origin.y = a3;
        v158.size.width = a4;
        v158.size.height = a5;
        CGRectGetMinX(v158);
        v159.origin.x = a2;
        v159.origin.y = a3;
        v159.size.width = a4;
        v159.size.height = a5;
        CGRectGetMinY(v159);
        v160.origin.x = a2;
        v160.origin.y = a3;
        v160.size.width = a4;
        v160.size.height = a5;
        CGRectGetWidth(v160);
        sub_23BC72120();
        LOBYTE(v153[0]) = 0;
        v154 = 0;
        sub_23BC71D3C();
        sub_23BBE81C0(v102, &qword_256A78058);
        v103 = *(_QWORD *)v139;
        sub_23BC7248C();
        v63 = v103 == v153[0];
        v18 = v147;
        v59 = v143;
        v88 = v144;
        v36 = v98;
        if (v63)
          goto LABEL_21;
      }
    }
    sub_23BBE81C0(v93, &qword_256A78050);
    sub_23BBE81C0((uint64_t)v36, &qword_256A78060);
    sub_23BBE81C0(v132, &qword_256A78068);
    v161.origin.x = a2;
    v161.origin.y = a3;
    v161.size.width = a4;
    v161.size.height = a5;
    Width = CGRectGetWidth(v161);
    v105 = v129;
    sub_23BC7245C();
    sub_23BC7248C();
    result = sub_23BC72480();
    v106 = result - 2;
    v107 = v133;
    if (!__OFSUB__(result, 2))
    {
      v108 = v150;
      ((void (*)(char *, uint64_t, uint64_t))v146)(v150, v105, v37);
      v109 = (uint64_t)v131;
      sub_23BC55004(v106);
      v140 = &v125;
      sub_23BC5630C(v109, v107);
      v128(v108, v107, v37);
      sub_23BC72324();
      v144 = *(int *)(v88 + 36);
      *(_QWORD *)(v59 + v144) = 0;
      v110 = (_QWORD *)(v59 + *(int *)(v126 + 36));
      v111 = *v110;
      sub_23BC7248C();
      if (v111 == v153[0])
      {
LABEL_28:
        v86 = (uint64_t)v141;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v145)(v141, 1, 1, v17);
      }
      else
      {
        *(double *)&v143 = (Width + -20.0) * 0.5;
        v142 = *(_QWORD *)&v125;
        while (1)
        {
          v112 = (void (*)(_QWORD *, _QWORD))sub_23BC724C8();
          v86 = (uint64_t)v141;
          (*(void (**)(char *))(v18 + 16))(v141);
          v112(v153, 0);
          v113 = v150;
          ((void (*)(char *, uint64_t, uint64_t))v146)(v150, v59, v37);
          sub_23BC72498();
          (*(void (**)(char *, uint64_t))(v151 + 8))(v113, v37);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v145)(v86, 0, 1, v17);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v86, 1, v17) == 1)
            break;
          v114 = v110;
          v115 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
          v116 = v59;
          v117 = v136;
          v115(v136, v86, v17);
          v118 = v149;
          v119 = &v148[*(int *)(v149 + 48)];
          v120 = v144;
          v121 = *(_QWORD *)(v116 + v144);
          result = ((uint64_t (*)(char *, char *, uint64_t))v115)(v119, v117, v17);
          if (__OFADD__(v121, 1))
            goto LABEL_34;
          *(_QWORD *)(v116 + v120) = v121 + 1;
          v122 = *(int *)(v118 + 48);
          v123 = (uint64_t)v135;
          *v135 = v121;
          v115((char *)(v123 + v122), (uint64_t)v119, v17);
          v162.origin.x = a2;
          v162.origin.y = a3;
          v162.size.width = a4;
          v162.size.height = a5;
          CGRectGetMinX(v162);
          v163.origin.x = a2;
          v163.origin.y = a3;
          v163.size.width = a4;
          v163.size.height = a5;
          CGRectGetMinY(v163);
          sub_23BC72120();
          LOBYTE(v153[0]) = 0;
          v154 = 0;
          sub_23BC71D3C();
          sub_23BBE81C0(v123, &qword_256A78058);
          v110 = v114;
          v124 = *v114;
          sub_23BC7248C();
          v18 = v147;
          v59 = v116;
          if (v124 == v153[0])
            goto LABEL_28;
        }
      }
      v87 = (uint64_t)v131;
LABEL_31:
      sub_23BBE81C0(v86, &qword_256A78050);
      sub_23BBE81C0(v59, &qword_256A78060);
      return sub_23BBE81C0(v87, &qword_256A78068);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_23BC5621C()
{
  unint64_t result;

  result = qword_256A78040;
  if (!qword_256A78040)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CondensedVStack, &type metadata for CondensedVStack);
    atomic_store(result, (unint64_t *)&qword_256A78040);
  }
  return result;
}

unint64_t sub_23BC56264()
{
  unint64_t result;

  result = qword_256A78048;
  if (!qword_256A78048)
  {
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_256A78048);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CondensedVStack(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CondensedVStack(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CondensedVStack()
{
  return &type metadata for CondensedVStack;
}

uint64_t sub_23BC5630C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC56354(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23BC71D54();
    result = MEMORY[0x24260ED10](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

BOOL static DownloadError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DownloadError.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t sub_23BC563D0(char a1)
{
  if (!a1)
    return 0x6C6E776F44746F6ELL;
  if (a1 == 1)
    return 0x6F70707553746F6ELL;
  return 0xD000000000000011;
}

uint64_t sub_23BC56440()
{
  char *v0;

  return sub_23BC563D0(*v0);
}

uint64_t sub_23BC56448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC571B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC5646C()
{
  sub_23BC56810();
  return sub_23BC72828();
}

uint64_t sub_23BC56494()
{
  sub_23BC56810();
  return sub_23BC72834();
}

uint64_t sub_23BC564BC()
{
  sub_23BC568DC();
  return sub_23BC72828();
}

uint64_t sub_23BC564E4()
{
  sub_23BC568DC();
  return sub_23BC72834();
}

uint64_t sub_23BC5650C()
{
  sub_23BC56898();
  return sub_23BC72828();
}

uint64_t sub_23BC56534()
{
  sub_23BC56898();
  return sub_23BC72834();
}

uint64_t sub_23BC5655C()
{
  sub_23BC56854();
  return sub_23BC72828();
}

uint64_t sub_23BC56584()
{
  sub_23BC56854();
  return sub_23BC72834();
}

uint64_t DownloadError.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78088);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78090);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78098);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A780A0);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC56810();
  sub_23BC7281C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23BC56898();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23BC56854();
      v16 = v21;
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23BC568DC();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23BC56810()
{
  unint64_t result;

  result = qword_256A780A8;
  if (!qword_256A780A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F544, &type metadata for DownloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A780A8);
  }
  return result;
}

unint64_t sub_23BC56854()
{
  unint64_t result;

  result = qword_256A780B0;
  if (!qword_256A780B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F4F4, &type metadata for DownloadError.UnknownLoadStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A780B0);
  }
  return result;
}

unint64_t sub_23BC56898()
{
  unint64_t result;

  result = qword_256A780B8;
  if (!qword_256A780B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F4A4, &type metadata for DownloadError.NotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A780B8);
  }
  return result;
}

unint64_t sub_23BC568DC()
{
  unint64_t result;

  result = qword_256A780C0;
  if (!qword_256A780C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F454, &type metadata for DownloadError.NotDownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A780C0);
  }
  return result;
}

uint64_t DownloadError.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t DownloadError.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A780C8);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A780D0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A780D8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A780E0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC56810();
  v13 = v41;
  sub_23BC72810();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23BC72690();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23BC725A0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v25 = &type metadata for DownloadError;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23BC56898();
      v20 = v9;
      sub_23BC72600();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23BC56854();
      v28 = v15;
      sub_23BC72600();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23BC568DC();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_23BC56DA8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DownloadError.init(from:)(a1, a2);
}

uint64_t sub_23BC56DBC(_QWORD *a1)
{
  return DownloadError.encode(to:)(a1);
}

unint64_t sub_23BC56DD4()
{
  unint64_t result;

  result = qword_256A780E8;
  if (!qword_256A780E8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DownloadError, &type metadata for DownloadError);
    atomic_store(result, (unint64_t *)&qword_256A780E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadError()
{
  return &type metadata for DownloadError;
}

uint64_t _s14FitnessActions13DownloadErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC56E78 + 4 * byte_23BC7F115[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC56EAC + 4 * asc_23BC7F110[v4]))();
}

uint64_t sub_23BC56EAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC56EB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC56EBCLL);
  return result;
}

uint64_t sub_23BC56EC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC56ED0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC56ED4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC56EDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadError.CodingKeys()
{
  return &type metadata for DownloadError.CodingKeys;
}

ValueMetadata *type metadata accessor for DownloadError.NotDownloadedCodingKeys()
{
  return &type metadata for DownloadError.NotDownloadedCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadError.NotSupportedCodingKeys()
{
  return &type metadata for DownloadError.NotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadError.UnknownLoadStatusCodingKeys()
{
  return &type metadata for DownloadError.UnknownLoadStatusCodingKeys;
}

unint64_t sub_23BC56F2C()
{
  unint64_t result;

  result = qword_256A780F0;
  if (!qword_256A780F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F42C, &type metadata for DownloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A780F0);
  }
  return result;
}

unint64_t sub_23BC56F74()
{
  unint64_t result;

  result = qword_256A780F8;
  if (!qword_256A780F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F34C, &type metadata for DownloadError.NotDownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A780F8);
  }
  return result;
}

unint64_t sub_23BC56FBC()
{
  unint64_t result;

  result = qword_256A78100;
  if (!qword_256A78100)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F374, &type metadata for DownloadError.NotDownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78100);
  }
  return result;
}

unint64_t sub_23BC57004()
{
  unint64_t result;

  result = qword_256A78108;
  if (!qword_256A78108)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F2FC, &type metadata for DownloadError.NotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78108);
  }
  return result;
}

unint64_t sub_23BC5704C()
{
  unint64_t result;

  result = qword_256A78110;
  if (!qword_256A78110)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F324, &type metadata for DownloadError.NotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78110);
  }
  return result;
}

unint64_t sub_23BC57094()
{
  unint64_t result;

  result = qword_256A78118;
  if (!qword_256A78118)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F2AC, &type metadata for DownloadError.UnknownLoadStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78118);
  }
  return result;
}

unint64_t sub_23BC570DC()
{
  unint64_t result;

  result = qword_256A78120;
  if (!qword_256A78120)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F2D4, &type metadata for DownloadError.UnknownLoadStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78120);
  }
  return result;
}

unint64_t sub_23BC57124()
{
  unint64_t result;

  result = qword_256A78128;
  if (!qword_256A78128)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F39C, &type metadata for DownloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78128);
  }
  return result;
}

unint64_t sub_23BC5716C()
{
  unint64_t result;

  result = qword_256A78130;
  if (!qword_256A78130)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F3C4, &type metadata for DownloadError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78130);
  }
  return result;
}

uint64_t sub_23BC571B0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C6E776F44746F6ELL && a2 == 0xED0000646564616FLL;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F70707553746F6ELL && a2 == 0xEC00000064657472 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BC82D90)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BC57318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v4[40];

  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v4, v2, a2);
  sub_23BC727B0();
  sub_23BC7254C();
  return sub_23BBF60B4((uint64_t)v4);
}

uint64_t sub_23BC57374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void (*v7)(_OWORD *, uint64_t, uint64_t);
  _OWORD v9[2];
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;
  _BYTE v13[40];

  v6 = type metadata accessor for SharingButtonFeature.TaskIdentifier(0, a3, a4, a4);
  v7 = *(void (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(v11, a1, v6);
  v7(v13, a2, v6);
  v9[0] = v11[0];
  v9[1] = v11[1];
  v10 = v12;
  LOBYTE(a2) = MEMORY[0x24260E77C](v9, v13);
  sub_23BBF60B4((uint64_t)v13);
  sub_23BBF60B4((uint64_t)v9);
  return a2 & 1;
}

uint64_t sub_23BC57424(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  sub_23BC57318((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t sub_23BC57470(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  sub_23BC57318((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BC574B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BC57374(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

__n128 SharingButtonFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void SharingButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t State;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  char *v19;
  _QWORD v20[8];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78138);
  v20[7] = *(_QWORD *)(v22 - 8);
  v8 = MEMORY[0x24BDAC7A8](v22);
  v21 = *(_QWORD *)(*(_QWORD *)(a5 + 16) - 8);
  v9 = *(_QWORD *)(v21 + 64);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v20[5] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v20[6] = (char *)v20 - v11;
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v13 = type metadata accessor for SharingButtonAction();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v5[1];
  v20[3] = *v5;
  v20[4] = v16;
  sub_23BBFD690(a4, (uint64_t)v15, v17);
  v18 = sub_23BC71B5C();
  v19 = (char *)sub_23BC5765C
      + 4
      * byte_23BC7F5A0[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v15, 3, v18)];
  __asm { BR              X10 }
}

uint64_t sub_23BC5765C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v9 + *(int *)(type metadata accessor for SharingButtonState(0, v4, *(_QWORD *)(v7 + 24), a4) + 48);
  sub_23BBF36FC(v10, (uint64_t (*)(_QWORD))type metadata accessor for SharingButtonLoadState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10, v8, v5);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 2, v11);
}

void sub_23BC577B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;

  v10 = *(_QWORD *)(v6 + 24);
  v11 = type metadata accessor for SharingButtonState(0, v4, v10, a4);
  sub_23BBFD690(v7 + *(int *)(v11 + 48), v8, (uint64_t (*)(_QWORD))type metadata accessor for SharingButtonLoadState);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 2, v12);
  sub_23BBF36FC(v8, (uint64_t (*)(_QWORD))type metadata accessor for SharingButtonLoadState);
  if (v13 == 1)
  {
    v14 = *(_QWORD *)(v9 - 144);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    v16 = *(_QWORD *)(v9 - 160);
    v15(v16, v7, v4);
    v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
    *(_QWORD *)(v9 - 200) = v5 + v17[12];
    v18 = v5 + v17[16];
    *(_QWORD *)(v9 - 192) = v5 + v17[20];
    *(_QWORD *)(v9 - 208) = v5 + v17[24];
    sub_23BC725F4();
    v20 = type metadata accessor for SharingButtonFeature.TaskIdentifier(0, v4, v10, v19);
    MEMORY[0x24260ED10](&unk_23BC7F698, v20);
    sub_23BC725F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v9 - 120, v20);
    v21 = *MEMORY[0x24BE2B570];
    v22 = sub_23BC72180();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v18, v21, v22);
    v23 = *(_QWORD *)(v9 - 168);
    v15(v23, v16, v4);
    v24 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v25 = (char *)swift_allocObject();
    *((_QWORD *)v25 + 2) = v4;
    *((_QWORD *)v25 + 3) = v10;
    v26 = *(_QWORD *)(v9 - 176);
    *((_QWORD *)v25 + 4) = *(_QWORD *)(v9 - 184);
    *((_QWORD *)v25 + 5) = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v25[v24], v23, v4);
    v27 = *(_QWORD **)(v9 - 208);
    *v27 = &unk_256A78150;
    v27[1] = v25;
    swift_retain();
    sub_23BBF4AE8();
    sub_23BBF4AEC(*(_QWORD *)(v9 - 192));
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v9 - 152) + 104))(v5, *MEMORY[0x24BE2B438], *(_QWORD *)(v9 - 136));
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A78158);
    sub_23BC723A8();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v4);
  }
  JUMPOUT(0x23BC57794);
}

uint64_t type metadata accessor for SharingButtonFeature.TaskIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharingButtonFeature.TaskIdentifier);
}

uint64_t sub_23BC579E4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v4[2] = a1;
  type metadata accessor for SharingButtonAction();
  v4[3] = swift_task_alloc();
  v7 = sub_23BC71B5C();
  v4[4] = v7;
  v4[5] = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v4[6] = v8;
  v4[7] = sub_23BC723F0();
  v4[8] = sub_23BC723E4();
  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v9 = (_QWORD *)swift_task_alloc();
  v4[9] = v9;
  *v9 = v4;
  v9[1] = sub_23BC57AC8;
  return v11(v8, a4);
}

uint64_t sub_23BC57AC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 88) = sub_23BC723CC();
  *(_QWORD *)(v2 + 96) = v3;
  return swift_task_switch();
}

uint64_t sub_23BC57B54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[3];
  v3 = v0[4];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v2, v0[6], v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v2, 0, 3, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[13] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78270);
  *v4 = v0;
  v4[1] = sub_23BC57BEC;
  return sub_23BC7215C();
}

uint64_t sub_23BC57BEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc();
  sub_23BBF36FC(v1, (uint64_t (*)(_QWORD))type metadata accessor for SharingButtonAction);
  return swift_task_switch();
}

uint64_t sub_23BC57C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC57CB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  MEMORY[0x24260EC20](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC57D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BC57D74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(v1[2] - 8) + 80);
  v5 = (int *)v1[4];
  v6 = v1[5];
  v7 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23BBF5304;
  return sub_23BC579E4(a1, v5, v6, v7);
}

uint64_t SharingButtonFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_23BC57E10()
{
  return sub_23BC57E58(&qword_256A78160, (uint64_t)&protocol conformance descriptor for SharingButtonAction);
}

uint64_t sub_23BC57E34()
{
  return sub_23BC57E58(qword_256A78168, (uint64_t)&protocol conformance descriptor for SharingButtonAction);
}

uint64_t sub_23BC57E58(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SharingButtonAction();
    result = MEMORY[0x24260ED10](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BC57E98()
{
  JUMPOUT(0x24260ED10);
}

uint64_t type metadata accessor for SharingButtonFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharingButtonFeature);
}

uint64_t sub_23BC57EB4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *sub_23BC57EEC(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t sub_23BC57F10(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

void sub_23BC57F48()
{
  JUMPOUT(0x24260ED10);
}

uint64_t DynamicLibraryButtonAction.hash(into:)()
{
  unsigned int *v0;
  unint64_t v1;

  if ((*((_BYTE *)v0 + 6) & 1) != 0)
    return sub_23BC727B0();
  v1 = *v0 | ((unint64_t)*((unsigned __int16 *)v0 + 2) << 32);
  sub_23BC727B0();
  if ((v1 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v1 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

uint64_t sub_23BC57FE4()
{
  sub_23BC5884C();
  return sub_23BC72828();
}

uint64_t sub_23BC5800C()
{
  sub_23BC5884C();
  return sub_23BC72834();
}

uint64_t sub_23BC58034()
{
  sub_23BC58890();
  return sub_23BC72828();
}

uint64_t sub_23BC5805C()
{
  sub_23BC58890();
  return sub_23BC72834();
}

uint64_t sub_23BC58084()
{
  sub_23BC588D4();
  return sub_23BC72828();
}

uint64_t sub_23BC580AC()
{
  sub_23BC588D4();
  return sub_23BC72834();
}

uint64_t DynamicLibraryButtonAction.encode(to:)(_QWORD *a1)
{
  unsigned int *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78278);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78280);
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78288);
  v25 = *(_QWORD *)(v8 - 8);
  v26 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *((unsigned __int16 *)v1 + 2);
  v12 = *v1;
  v13 = *((_BYTE *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC5884C();
  sub_23BC7281C();
  if ((v13 & 1) != 0)
  {
    v30 = 0;
    sub_23BC588D4();
    v14 = v26;
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v14);
  }
  else
  {
    v16 = v12 | (v11 << 32);
    v31 = 1;
    sub_23BC58890();
    v17 = v22;
    v18 = v26;
    sub_23BC726A8();
    v28 = BYTE4(v16);
    v27 = v16;
    v29 = BYTE5(v16) & 1;
    sub_23BBE9758();
    v19 = v24;
    sub_23BC72720();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v18);
  }
}

uint64_t DynamicLibraryButtonAction.hashValue.getter()
{
  sub_23BC727A4();
  DynamicLibraryButtonAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t DynamicLibraryButtonAction.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int v38;
  unsigned __int8 v39;
  char v40;
  char v41;
  char v42;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A782A8);
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A782B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A782B8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23BC5884C();
  v15 = v37;
  sub_23BC72810();
  if (v15)
    goto LABEL_6;
  v16 = v7;
  v31 = v6;
  v17 = v35;
  v37 = v11;
  v18 = v13;
  v19 = sub_23BC72690();
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v21 = sub_23BC725A0();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v23 = &type metadata for DynamicLibraryButtonAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v10);
LABEL_6:
    v24 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v20 = *(unsigned __int8 *)(v19 + 32);
  if ((v20 & 1) != 0)
  {
    v42 = 1;
    sub_23BC58890();
    sub_23BC72600();
    LODWORD(v31) = v20;
    sub_23BBEAD44();
    v26 = v32;
    sub_23BC72684();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v10);
    v27 = 0x10000000000;
    if (!v40)
      v27 = 0;
    v28 = v27 | v38 | ((unint64_t)v39 << 32);
    v24 = (uint64_t)v36;
    LOBYTE(v20) = v31;
  }
  else
  {
    v41 = 0;
    sub_23BC588D4();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v10);
    v28 = 0;
    v24 = (uint64_t)v36;
  }
  v29 = v34;
  *v34 = v28;
  *((_WORD *)v29 + 2) = WORD2(v28);
  *((_BYTE *)v29 + 6) = v20 ^ 1;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23BC58774@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return DynamicLibraryButtonAction.init(from:)(a1, a2);
}

uint64_t sub_23BC58788(_QWORD *a1)
{
  return DynamicLibraryButtonAction.encode(to:)(a1);
}

uint64_t sub_23BC5879C()
{
  sub_23BC727A4();
  DynamicLibraryButtonAction.hash(into:)();
  return sub_23BC727E0();
}

uint64_t sub_23BC587F8()
{
  sub_23BC727A4();
  DynamicLibraryButtonAction.hash(into:)();
  return sub_23BC727E0();
}

unint64_t sub_23BC5884C()
{
  unint64_t result;

  result = qword_256A78290;
  if (!qword_256A78290)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7FA80, &type metadata for DynamicLibraryButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78290);
  }
  return result;
}

unint64_t sub_23BC58890()
{
  unint64_t result;

  result = qword_256A78298;
  if (!qword_256A78298)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7FA30, &type metadata for DynamicLibraryButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78298);
  }
  return result;
}

unint64_t sub_23BC588D4()
{
  unint64_t result;

  result = qword_256A782A0;
  if (!qword_256A782A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F9E0, &type metadata for DynamicLibraryButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782A0);
  }
  return result;
}

unint64_t sub_23BC5891C()
{
  unint64_t result;

  result = qword_256A782C0;
  if (!qword_256A782C0)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicLibraryButtonAction, &type metadata for DynamicLibraryButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A782C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicLibraryButtonAction()
{
  return &type metadata for DynamicLibraryButtonAction;
}

uint64_t storeEnumTagSinglePayload for DynamicLibraryButtonAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC589BC + 4 * byte_23BC7F6E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC589F0 + 4 * byte_23BC7F6E0[v4]))();
}

uint64_t sub_23BC589F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC589F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC58A00);
  return result;
}

uint64_t sub_23BC58A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC58A14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC58A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC58A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicLibraryButtonAction.CodingKeys()
{
  return &type metadata for DynamicLibraryButtonAction.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicLibraryButtonAction.ViewAppearedCodingKeys()
{
  return &type metadata for DynamicLibraryButtonAction.ViewAppearedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for DynamicLibraryButtonAction.DownloadStatusUpdatedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC58A8C + 4 * byte_23BC7F6EA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC58AAC + 4 * byte_23BC7F6EF[v4]))();
}

_BYTE *sub_23BC58A8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC58AAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC58AB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC58ABC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC58AC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC58ACC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DynamicLibraryButtonAction.DownloadStatusUpdatedCodingKeys()
{
  return &type metadata for DynamicLibraryButtonAction.DownloadStatusUpdatedCodingKeys;
}

unint64_t sub_23BC58AEC()
{
  unint64_t result;

  result = qword_256A782C8;
  if (!qword_256A782C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F8B0, &type metadata for DynamicLibraryButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782C8);
  }
  return result;
}

unint64_t sub_23BC58B34()
{
  unint64_t result;

  result = qword_256A782D0;
  if (!qword_256A782D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F9B8, &type metadata for DynamicLibraryButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782D0);
  }
  return result;
}

unint64_t sub_23BC58B7C()
{
  unint64_t result;

  result = qword_256A782D8;
  if (!qword_256A782D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F8D8, &type metadata for DynamicLibraryButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782D8);
  }
  return result;
}

unint64_t sub_23BC58BC4()
{
  unint64_t result;

  result = qword_256A782E0;
  if (!qword_256A782E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F900, &type metadata for DynamicLibraryButtonAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782E0);
  }
  return result;
}

unint64_t sub_23BC58C0C()
{
  unint64_t result;

  result = qword_256A782E8;
  if (!qword_256A782E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F820, &type metadata for DynamicLibraryButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782E8);
  }
  return result;
}

unint64_t sub_23BC58C54()
{
  unint64_t result;

  result = qword_256A782F0;
  if (!qword_256A782F0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F848, &type metadata for DynamicLibraryButtonAction.DownloadStatusUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782F0);
  }
  return result;
}

unint64_t sub_23BC58C9C()
{
  unint64_t result;

  result = qword_256A782F8;
  if (!qword_256A782F8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F928, &type metadata for DynamicLibraryButtonAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A782F8);
  }
  return result;
}

unint64_t sub_23BC58CE4()
{
  unint64_t result;

  result = qword_256A78300[0];
  if (!qword_256A78300[0])
  {
    result = MEMORY[0x24260ED10](&unk_23BC7F950, &type metadata for DynamicLibraryButtonAction.CodingKeys);
    atomic_store(result, qword_256A78300);
  }
  return result;
}

uint64_t RemoveLibraryItemEnvironment.init(resolveBookmark:requestRemoveBookmark:queryDownloadStatus:cancelDownload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t type metadata accessor for RemoveLibraryItemEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RemoveLibraryItemEnvironment);
}

uint64_t HorizontalOverflowLayout.init(limit:horizontalSpacing:verticalSpacing:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(_QWORD *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  return result;
}

double HorizontalOverflowLayout.sizeThatFits(proposal:subviews:cache:)(char *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  double v31;
  double v32;
  uint64_t v33;
  double v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  double v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(double *, _QWORD);
  char *v44;
  char *v45;
  double v46;
  uint64_t v47;
  BOOL v48;
  uint64_t *v49;
  uint64_t v50;
  double v51;
  char *v52;
  void (*v53)(double *, _QWORD);
  char *v54;
  char *v55;
  double v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  _QWORD v64[2];
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  double v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char v77;
  double v78;
  uint64_t v79;
  double v80;

  LODWORD(v76) = a2;
  v74 = a1;
  v7 = sub_23BC71D48();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)v64 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78050);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v72 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v64[0] = (char *)v64 - v15;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78078);
  v16 = MEMORY[0x24BDAC7A8](v67);
  v73 = (uint64_t)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v64 - v18;
  v20 = sub_23BC71D54();
  v75 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v65 = (char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v64 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)v64 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v64 - v29;
  v31 = *v5;
  v33 = *((_QWORD *)v5 + 1);
  v32 = v5[2];
  if ((v76 & 1) != 0)
    v34 = 10.0;
  else
    v34 = *(double *)&v74;
  v78 = *v5;
  v79 = v33;
  v80 = v32;
  sub_23BC594C4(a5);
  v78 = v31;
  v79 = v33;
  v80 = v32;
  v68 = v28;
  sub_23BC595E0(a5, (uint64_t)v28);
  v35 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  v66 = v30;
  v76 = v35;
  v35(v25, v30, v20);
  v36 = sub_23BC56354(&qword_256A78070, MEMORY[0x24BDEC798]);
  v74 = v25;
  sub_23BC72324();
  v37 = &v19[*(int *)(v67 + 36)];
  sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
  v38 = *(_QWORD *)v37;
  sub_23BC7248C();
  v64[1] = v36;
  if (v38 == *(_QWORD *)&v78)
  {
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v41 = v73;
    v39(v64[0], 1, 1, v7);
  }
  else
  {
    v69 = v34;
    v40 = 0.0;
    v41 = v73;
    v42 = v64[0];
    while (1)
    {
      v43 = (void (*)(double *, _QWORD))sub_23BC724C8();
      (*(void (**)(uint64_t))(v8 + 16))(v42);
      v43(&v78, 0);
      v44 = v74;
      v76(v74, v19, v20);
      sub_23BC72498();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v20);
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v39(v42, 0, 1, v7);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v42, 1, v7) == 1)
        break;
      v45 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v70, v42, v7);
      LOBYTE(v78) = 0;
      v77 = 1;
      sub_23BC71D30();
      if (v40 <= v46)
        v40 = v46;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v45, v7);
      v47 = *(_QWORD *)v37;
      sub_23BC7248C();
      v48 = v47 == *(_QWORD *)&v78;
      v41 = v73;
      if (v48)
      {
        v39(v42, 1, 1, v7);
        break;
      }
    }
  }
  sub_23BBE81C0((uint64_t)v19, &qword_256A78078);
  v76(v74, v68, v20);
  sub_23BC72324();
  v49 = (uint64_t *)(v41 + *(int *)(v67 + 36));
  v50 = *v49;
  sub_23BC7248C();
  v51 = 0.0;
  v48 = v50 == *(_QWORD *)&v78;
  v52 = v72;
  if (v48)
  {
LABEL_17:
    v39((uint64_t)v52, 1, 1, v7);
  }
  else
  {
    while (1)
    {
      v53 = (void (*)(double *, _QWORD))sub_23BC724C8();
      (*(void (**)(char *))(v8 + 16))(v52);
      v53(&v78, 0);
      v54 = v74;
      v76(v74, (char *)v41, v20);
      sub_23BC72498();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v54, v20);
      v39((uint64_t)v52, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v52, 1, v7) == 1)
        break;
      v55 = v71;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v71, v52, v7);
      LOBYTE(v78) = 0;
      v77 = 1;
      sub_23BC71D30();
      v51 = v51 + v32 + v56;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v55, v7);
      v57 = *v49;
      sub_23BC7248C();
      v48 = v57 == *(_QWORD *)&v78;
      v52 = v72;
      if (v48)
        goto LABEL_17;
    }
  }
  sub_23BBE81C0(v73, &qword_256A78078);
  v58 = v66;
  sub_23BC7245C();
  sub_23BC7248C();
  v59 = sub_23BC72480();
  v60 = v65;
  v76(v65, v68, v20);
  if (v59 > 0)
  {
    sub_23BC7245C();
    sub_23BC7248C();
    sub_23BC72480();
  }
  v61 = *(void (**)(char *, uint64_t))(v75 + 8);
  v61(v60, v20);
  v62 = v68;
  sub_23BC7245C();
  sub_23BC7248C();
  sub_23BC72480();
  v61(v62, v20);
  v61(v58, v20);
  return v34;
}

uint64_t sub_23BC594C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[8];

  v2 = v1;
  v4 = sub_23BC71D54();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v2;
  if (*v2 < 1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v10 = 0;
  }
  else
  {
    sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
    sub_23BC7245C();
    sub_23BC7248C();
    v9 = sub_23BC72480();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    if (v9 >= v8)
      v10 = v8;
    else
      v10 = 0;
  }
  return sub_23BC59A2C(v10);
}

uint64_t sub_23BC595E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v3 = v2;
  v6 = *v3;
  if (*v3 < 1)
  {
    v9 = sub_23BC71D54();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  }
  else
  {
    v7 = sub_23BC71D54();
    sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
    sub_23BC7245C();
    sub_23BC7248C();
    if (sub_23BC72480() >= v6)
    {
      result = sub_23BC7248C();
      if (v10 < v6)
        __break(1u);
      else
        return sub_23BC724BC();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
    }
  }
  return result;
}

void HorizontalOverflowLayout.placeSubviews(in:proposal:subviews:cache:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23BC5A008(a9, a1, a2, a3, a4);
}

uint64_t sub_23BC5971C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;

  v3 = sub_23BC71D54();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  if (*(uint64_t *)v1 < 1)
  {
    sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
    sub_23BC7245C();
    sub_23BC7248C();
    return sub_23BC72480();
  }
  else
  {
    v10 = *(_OWORD *)(v1 + 8);
    sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
    sub_23BC7245C();
    sub_23BC7248C();
    if (sub_23BC72480() >= v7)
    {
      v11 = v7;
      v12 = v10;
      sub_23BC595E0(a1, (uint64_t)v6);
      sub_23BC7245C();
      sub_23BC7248C();
      v9 = sub_23BC72480();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      result = v9 + 1;
      if (__OFADD__(v9, 1))
        __break(1u);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_23BC598CC(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t result;
  CGRect v11;
  CGRect v12;

  CGRectGetMinX(*(CGRect *)&a2);
  v11.origin.x = a2;
  v11.origin.y = a3;
  v11.size.width = a4;
  v11.size.height = a5;
  CGRectGetMinY(v11);
  sub_23BC71D54();
  sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
  sub_23BC7245C();
  sub_23BC7248C();
  result = sub_23BC72480();
  if (__OFADD__(a1, result > 0))
  {
    __break(1u);
  }
  else
  {
    v12.origin.x = a2;
    v12.origin.y = a3;
    v12.size.width = a4;
    v12.size.height = a5;
    CGRectGetWidth(v12);
    sub_23BC72120();
    return sub_23BC71D3C();
  }
  return result;
}

uint64_t sub_23BC59A2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_23BC71D54();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
    sub_23BC7245C();
    sub_23BC7248C();
    sub_23BC72474();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1, v4);
    if ((v12 & 1) != 0)
    {
      sub_23BC7248C();
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
    }
    else
    {
      v10 = v11;
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
      v14 = v10;
    }
    result = sub_23BC7245C();
    if (v14 >= v13)
    {
      v11 = v13;
      v12 = v14;
      sub_23BC724BC();
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v2, v4);
    }
  }
  __break(1u);
  return result;
}

double sub_23BC59BB0(char *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return HorizontalOverflowLayout.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4, a5);
}

void sub_23BC59BC0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23BC5A008(a9, a1, a2, a3, a4);
}

uint64_t sub_23BC59BCC(uint64_t a1, void (*a2)(uint64_t, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void (*v53)(uint64_t, char *);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60[4];
  uint64_t v61;

  v53 = a2;
  v54 = a3;
  v61 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78050);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BC71D48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78058);
  v9 = MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (uint64_t *)((char *)&v46 - v11);
  v12 = sub_23BC71D54();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78068);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78060);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC5630C(v61, (uint64_t)v18);
  v59 = v13;
  v22 = v18;
  v23 = v12;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v22, v12);
  sub_23BC56354(&qword_256A78070, MEMORY[0x24BDEC798]);
  v58 = v15;
  sub_23BC72324();
  v24 = *(int *)(v19 + 36);
  *(_QWORD *)&v21[v24] = 0;
  v25 = &v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A78078) + 36)];
  v26 = sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
  v27 = *(_QWORD *)v25;
  v61 = v26;
  sub_23BC7248C();
  if (v27 == v60[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  else
  {
    v50 = v24;
    v51 = v7;
    v48 = v23;
    v49 = v5;
    while (1)
    {
      v28 = (void (*)(uint64_t *, _QWORD))sub_23BC724C8();
      v29 = v51;
      (*(void (**)(char *))(v51 + 16))(v5);
      v28(v60, 0);
      v31 = v58;
      v30 = v59;
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v21, v23);
      sub_23BC72498();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v23);
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v32(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v6) == 1)
        break;
      v47 = v32;
      v33 = v25;
      v34 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
      v35 = v57;
      v34(v57, v5, v6);
      v36 = v6;
      v37 = v56;
      v38 = &v55[*(int *)(v56 + 48)];
      v39 = v50;
      v40 = *(_QWORD *)&v21[v50];
      result = ((uint64_t (*)(char *, char *, uint64_t))v34)(v38, v35, v36);
      if (__OFADD__(v40, 1))
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)&v21[v39] = v40 + 1;
      v42 = *(int *)(v37 + 48);
      v43 = (uint64_t)v52;
      v44 = (char *)v52 + v42;
      *v52 = v40;
      v34((char *)(v43 + v42), v38, v36);
      v53(v40, v44);
      sub_23BBE81C0(v43, &qword_256A78058);
      v25 = v33;
      v45 = *(_QWORD *)v33;
      v23 = v48;
      sub_23BC7248C();
      v5 = v49;
      v6 = v36;
      if (v45 == v60[0])
      {
        v47(v49, 1, 1, v36);
        break;
      }
    }
  }
  sub_23BBE81C0((uint64_t)v5, &qword_256A78050);
  return sub_23BBE81C0((uint64_t)v21, &qword_256A78060);
}

void sub_23BC5A008(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  double Height;
  double v37;
  double Width;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  void (*v74)(char *, uint64_t);
  _QWORD v75[2];
  double v76;
  char *v77;
  char *v78;
  uint64_t v79;
  double v80;
  char *v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  double v84;
  double v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  double v99;
  double v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78050);
  MEMORY[0x24BDAC7A8](v11);
  v95 = (uint64_t)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BC71D48();
  v94 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v90 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78058);
  v15 = MEMORY[0x24BDAC7A8](v89);
  v88 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v87 = (_QWORD *)((char *)v75 - v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78060);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78068);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v82 = (uint64_t)v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v75 - v24;
  v96 = sub_23BC71D54();
  v93 = *(_QWORD *)(v96 - 8);
  v26 = MEMORY[0x24BDAC7A8](v96);
  v92 = (char *)v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v75 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v33 = *(double *)(v5 + 8);
  v32 = *(double *)(v5 + 16);
  v98 = *(_QWORD *)v5;
  v31 = v98;
  v99 = v33;
  v100 = v32;
  v81 = (char *)v75 - v34;
  sub_23BC594C4(a1);
  v98 = v31;
  v99 = v33;
  v100 = v32;
  sub_23BC595E0(a1, (uint64_t)v30);
  v98 = v31;
  v99 = v33;
  v100 = v32;
  v80 = v32;
  v35 = sub_23BC5971C(a1);
  v101.origin.x = a2;
  v101.origin.y = a3;
  v101.size.width = a4;
  v101.size.height = a5;
  Height = CGRectGetHeight(v101);
  if (__OFSUB__(v35, 1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v37 = Height;
  v78 = v30;
  v102.origin.x = a2;
  v102.origin.y = a3;
  v102.size.width = a4;
  v102.size.height = a5;
  Width = CGRectGetWidth(v102);
  v39 = v31 - 1;
  if (__OFSUB__(v31, 1))
  {
LABEL_13:
    __break(1u);
    return;
  }
  v40 = Width;
  v79 = v31;
  v41 = (v37 - v80 * (double)(v35 - 1)) / (double)v35;
  v42 = v93;
  v43 = v96;
  v91 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  v91(v25, v81, v96);
  v75[1] = v75;
  v77 = v25;
  v44 = v82;
  sub_23BC5630C((uint64_t)v25, v82);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v92, v44, v43);
  sub_23BC56354(&qword_256A78070, MEMORY[0x24BDEC798]);
  sub_23BC72324();
  v45 = *(int *)(v18 + 36);
  *(_QWORD *)&v20[v45] = 0;
  v46 = &v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A78078) + 36)];
  v47 = sub_23BC56354(&qword_256A78038, MEMORY[0x24BDEC7A0]);
  v48 = v20;
  v49 = *(_QWORD *)v46;
  v50 = (uint64_t)v48;
  sub_23BC7248C();
  v76 = v33;
  if (v49 == v98)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v95, 1, 1, v13);
  }
  else
  {
    v86 = v45;
    v85 = (v40 - v33 * (double)v39) / (double)v79;
    v84 = v41;
    while (1)
    {
      v51 = v96;
      v52 = (void (*)(uint64_t *, _QWORD))sub_23BC724C8();
      v54 = v94;
      v53 = v95;
      (*(void (**)(uint64_t))(v94 + 16))(v95);
      v52(&v98, 0);
      v55 = v92;
      v91(v92, (char *)v50, v51);
      sub_23BC72498();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v55, v51);
      v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
      v56(v53, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v53, 1, v13) == 1)
        break;
      v83 = v56;
      v57 = v47;
      v58 = v46;
      v59 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 32);
      v60 = v90;
      v59(v90, v95, v13);
      v61 = v89;
      v62 = &v88[*(int *)(v89 + 48)];
      v63 = v86;
      v64 = *(_QWORD *)(v50 + v86);
      v59(v62, (uint64_t)v60, v13);
      if (__OFADD__(v64, 1))
      {
        __break(1u);
        goto LABEL_12;
      }
      *(_QWORD *)(v50 + v63) = v64 + 1;
      v65 = *(int *)(v61 + 48);
      v66 = (uint64_t)v87;
      *v87 = v64;
      v59((char *)(v66 + v65), (uint64_t)v62, v13);
      v103.origin.x = a2;
      v103.origin.y = a3;
      v103.size.width = a4;
      v103.size.height = a5;
      CGRectGetMinX(v103);
      v104.origin.x = a2;
      v104.origin.y = a3;
      v104.size.width = a4;
      v104.size.height = a5;
      CGRectGetMinY(v104);
      sub_23BC72120();
      LOBYTE(v98) = 0;
      v97 = 0;
      sub_23BC71D3C();
      sub_23BBE81C0(v66, &qword_256A78058);
      v46 = v58;
      v67 = *(_QWORD *)v58;
      v47 = v57;
      sub_23BC7248C();
      if (v67 == v98)
      {
        v83(v95, 1, 1, v13);
        break;
      }
    }
  }
  sub_23BBE81C0(v95, &qword_256A78050);
  sub_23BBE81C0(v50, &qword_256A78060);
  sub_23BBE81C0((uint64_t)v77, &qword_256A78068);
  v68 = v82;
  v69 = v78;
  v70 = v96;
  v71 = ((uint64_t (*)(uint64_t, char *, uint64_t))v91)(v82, v78, v96);
  MEMORY[0x24BDAC7A8](v71);
  *(CGFloat *)&v75[-10] = a2;
  *(CGFloat *)&v75[-9] = a3;
  *(CGFloat *)&v75[-8] = a4;
  *(CGFloat *)&v75[-7] = a5;
  v72 = v81;
  v75[-6] = v81;
  *(double *)&v75[-5] = v41;
  v75[-4] = v79;
  v73 = v80;
  *(double *)&v75[-3] = v76;
  *(double *)&v75[-2] = v73;
  sub_23BC59BCC(v68, (void (*)(uint64_t, char *))sub_23BC5A83C, (uint64_t)&v75[-12]);
  sub_23BBE81C0(v68, &qword_256A78068);
  v74 = *(void (**)(char *, uint64_t))(v93 + 8);
  v74(v69, v70);
  v74(v72, v70);
}

unint64_t sub_23BC5A788()
{
  unint64_t result;

  result = qword_256A78388[0];
  if (!qword_256A78388[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for HorizontalOverflowLayout, &type metadata for HorizontalOverflowLayout);
    atomic_store(result, qword_256A78388);
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HorizontalOverflowLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HorizontalOverflowLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalOverflowLayout()
{
  return &type metadata for HorizontalOverflowLayout;
}

uint64_t sub_23BC5A83C(uint64_t a1)
{
  CGFloat *v1;

  return sub_23BC598CC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23BC5A858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for DynamicLibraryButtonFeature(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 56), a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicLibraryButtonFeature<A>, v4);
  v5 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v5);
  return sub_23BC71CDC();
}

uint64_t DynamicLibraryButton.init(store:bookmarkViewBuilder:bookmarkedViewBuilder:downloadingViewBuilder:downloadedViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;

  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a12;
  *(_OWORD *)(v22 + 24) = a13;
  *(_QWORD *)(v22 + 40) = a14;
  *(_QWORD *)(v22 + 48) = a15;
  *(_QWORD *)(v22 + 56) = a16;
  *(_OWORD *)(v22 + 64) = a17;
  *(_QWORD *)(v22 + 80) = a18;
  *(_QWORD *)(v22 + 88) = a19;
  *(_QWORD *)(v22 + 96) = a1;
  *(_QWORD *)(v22 + 104) = a2;
  v24 = type metadata accessor for DynamicLibraryButtonFeature(255, a12, a16, v23);
  MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicLibraryButtonFeature<A>, v24);
  v25 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v25);
  result = sub_23BC71CD0();
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = v27;
  *(_BYTE *)(a9 + 16) = v28 & 1;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  *(_QWORD *)(a9 + 72) = a10;
  *(_QWORD *)(a9 + 80) = a11;
  return result;
}

uint64_t sub_23BC5AA40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC5AA64()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t DynamicLibraryButton.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 *v67;
  _QWORD v68[2];
  uint64_t v69;
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;

  v56 = a2;
  v4 = a1[3];
  v5 = a1[4];
  v44 = a1[5];
  v6 = v44;
  v45 = sub_23BC71E2C();
  v40 = a1[6];
  v7 = v40;
  v46 = sub_23BC71E2C();
  v43 = v5;
  v47 = sub_23BC71E2C();
  v49 = sub_23BC71E2C();
  v8 = v4;
  v42 = v4;
  v50 = sub_23BC71E2C();
  v9 = sub_23BC71FE8();
  v10 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  v54 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v39 - v11;
  v12 = sub_23BC71D6C();
  v55 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v51 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v53 = (uint64_t)&v39 - v15;
  v16 = v2[3];
  v77 = v2[2];
  v78 = v16;
  v79 = v2[4];
  v80 = *((_QWORD *)v2 + 10);
  v17 = v2[1];
  v75 = *v2;
  v76 = v17;
  v41 = a1[2];
  v57 = v41;
  v58 = v8;
  v59 = v5;
  v60 = v6;
  v18 = a1[7];
  v19 = a1[8];
  v61 = v7;
  v62 = v18;
  v21 = a1[9];
  v20 = a1[10];
  v63 = v19;
  v64 = v21;
  v22 = a1[11];
  v65 = v20;
  v66 = v22;
  v67 = &v75;
  v74[0] = v21;
  v74[1] = v20;
  v23 = MEMORY[0x24BDEF3E0];
  v73[0] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v45, v74);
  v73[1] = v22;
  v24 = MEMORY[0x24260ED10](v23, v46, v73);
  v72[0] = v21;
  v72[1] = v24;
  v71[0] = MEMORY[0x24260ED10](v23, v47, v72);
  v71[1] = v19;
  v25 = MEMORY[0x24260ED10](v23, v49, v71);
  v70[0] = v19;
  v70[1] = v25;
  v26 = MEMORY[0x24260ED10](v23, v50, v70);
  v27 = v48;
  sub_23BC71FDC();
  v28 = swift_allocObject();
  v29 = v42;
  *(_QWORD *)(v28 + 16) = v41;
  *(_QWORD *)(v28 + 24) = v29;
  v30 = v44;
  *(_QWORD *)(v28 + 32) = v43;
  *(_QWORD *)(v28 + 40) = v30;
  *(_QWORD *)(v28 + 48) = v40;
  *(_QWORD *)(v28 + 56) = v18;
  *(_QWORD *)(v28 + 64) = v19;
  *(_QWORD *)(v28 + 72) = v21;
  *(_QWORD *)(v28 + 80) = v20;
  *(_QWORD *)(v28 + 88) = v22;
  v31 = v78;
  *(_OWORD *)(v28 + 128) = v77;
  *(_OWORD *)(v28 + 144) = v31;
  *(_OWORD *)(v28 + 160) = v79;
  *(_QWORD *)(v28 + 176) = v80;
  v32 = v76;
  *(_OWORD *)(v28 + 96) = v75;
  *(_OWORD *)(v28 + 112) = v32;
  sub_23BC5BFF8((uint64_t)&v75);
  v69 = v26;
  v33 = v52;
  v34 = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v52, &v69);
  v35 = (uint64_t)v51;
  sub_23BC71FC4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v33);
  v68[0] = v34;
  v68[1] = MEMORY[0x24BDF0910];
  MEMORY[0x24260ED10](MEMORY[0x24BDED308], v12, v68);
  v36 = v53;
  sub_23BBECE40(v35, v12, v53);
  v37 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v37(v35, v12);
  sub_23BBEAFE8(v36, v12, v56);
  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v36, v12);
}

void sub_23BC5AE1C(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  _QWORD v59[34];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;

  v72 = a8;
  v64 = a7;
  v59[29] = a9;
  v69 = a12;
  v71 = a11;
  v59[0] = *(_QWORD *)(a6 - 8);
  v18 = MEMORY[0x24BDAC7A8](a1);
  v59[1] = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v59[4] = (char *)v59 - v21;
  v59[2] = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v59[3] = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v59[7] = (char *)v59 - v25;
  v26 = sub_23BC71E2C();
  v59[6] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v59[5] = (char *)v59 - v27;
  v67 = v28;
  v29 = sub_23BC71E2C();
  v59[10] = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v59[9] = (char *)v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v59[8] = (char *)v59 - v33;
  v59[11] = *(_QWORD *)(a4 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v59[12] = (char *)v59 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v59[13] = (char *)v59 - v36;
  v63 = a4;
  v65 = v37;
  v38 = sub_23BC71E2C();
  v59[16] = *(_QWORD *)(v38 - 8);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v59[15] = (char *)v59 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v59[14] = (char *)v59 - v41;
  v68 = v42;
  v43 = sub_23BC71E2C();
  v59[23] = *(_QWORD *)(v43 - 8);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v59[22] = (char *)v59 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v59[21] = (char *)v59 - v47;
  v59[24] = *(_QWORD *)(a3 - 8);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v59[25] = (char *)v59 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48);
  v66 = (char *)v59 - v50;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75618);
  MEMORY[0x24BDAC7A8](v60);
  v59[33] = (char *)v59 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v53 = *(_QWORD *)(v52 - 8);
  v59[31] = v52;
  v59[32] = v53;
  MEMORY[0x24BDAC7A8](v52);
  v59[30] = (char *)v59 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a3;
  v59[28] = v43;
  v55 = sub_23BC71E2C();
  v61 = *(_QWORD *)(v55 - 8);
  v62 = v55;
  MEMORY[0x24BDAC7A8](v55);
  v59[26] = a1;
  v59[27] = (char *)v59 - v56;
  v57 = a1[3];
  v85 = a1[2];
  v86 = v57;
  v87 = a1[4];
  v88 = *((_QWORD *)a1 + 10);
  v58 = a1[1];
  v83 = *a1;
  v84 = v58;
  v73 = a2;
  v74 = a3;
  v75 = a4;
  v76 = a5;
  v77 = a6;
  v78 = v64;
  v79 = v72;
  v80 = a10;
  v81 = v71;
  v82 = v69;
  type metadata accessor for DynamicLibraryButton();
}

uint64_t sub_23BC5B268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;

  v4[18] = a1;
  sub_23BC5A858(a1, a2, a3, a4);
  v4[19] = v8;
  v4[20] = v12;
  v13 = v4[45];
  v4[48] = v8;
  v4[49] = v13;
  v4[50] = v4[38];
  v4[51] = v12;
  v4[17] = v10;
  v4[52] = v10;
  v4[53] = v5;
  v4[54] = v11;
  v4[55] = v9;
  v4[37] = v9;
  v4[56] = v6;
  v4[57] = v7;
  swift_getKeyPath();
  v14 = v4[30];
  sub_23BC7218C();
  swift_release();
  swift_release();
  v15 = v4[31];
  sub_23BC72138();
  (*(void (**)(uint64_t, uint64_t))(v4[32] + 8))(v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_23BC5B324 + 4 * byte_23BC7FC10[EnumCaseMultiPayload]))();
}

uint64_t sub_23BC5B324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  if ((*v5 & 1) != 0)
  {
    v24 = v4[26];
    v25 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v6 - 144) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v6 - 128) = v25;
    *(_OWORD *)(v6 - 112) = *(_OWORD *)(v24 + 64);
    *(_QWORD *)(v6 - 96) = *(_QWORD *)(v24 + 80);
    v26 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)(v6 - 176) = *(_OWORD *)v24;
    *(_OWORD *)(v6 - 160) = v26;
    v27 = sub_23BC5A858(v4[18], a2, a3, a4);
    MEMORY[0x24BDAC7A8](v27);
    v28 = v4[46];
    v29 = v4[38];
    v30 = v4[17];
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    v31 = swift_release();
    if ((*(_BYTE *)(v6 - 250) & 1) != 0)
    {
      v4[41] = *(_QWORD *)(v24 + 40);
      v35 = *(_OWORD *)(v24 + 48);
      v36 = *(_OWORD *)(v24 + 64);
      *(_OWORD *)(v6 - 144) = *(_OWORD *)(v24 + 32);
      *(_OWORD *)(v6 - 128) = v35;
      *(_OWORD *)(v6 - 112) = v36;
      *(_QWORD *)(v6 - 96) = *(_QWORD *)(v24 + 80);
      v37 = *(_OWORD *)(v24 + 16);
      *(_OWORD *)(v6 - 176) = *(_OWORD *)v24;
      *(_OWORD *)(v6 - 160) = v37;
      v38 = sub_23BC5A858(v4[18], v32, v33, v34);
      v39 = v29;
      MEMORY[0x24BDAC7A8](v38);
      v11 = v4[37];
      v40 = v4[44];
      swift_getKeyPath();
      v41 = v28;
      sub_23BC7218C();
      swift_release();
      swift_release();
      v42 = v4[12];
      ((void (*)(_QWORD))v4[41])(*(unsigned __int8 *)(v6 - 176));
      v43 = v4[13];
      sub_23BBECE40(v42, v39, v43);
      v44 = *(void (**)(uint64_t, uint64_t))(v4[11] + 8);
      v44(v42, v39);
      sub_23BBEAFE8(v43, v39, v42);
      v4[69] = v11;
      v4[70] = v41;
      v45 = MEMORY[0x24BDEF3E0];
      v4[67] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v4[42], v4 + 69);
      v4[68] = v40;
      v46 = v4[40];
      MEMORY[0x24260ED10](v45, v46, v4 + 67);
      v47 = v4[14];
      v15 = v46;
      sub_23BC5C5A4(v42, v39);
      v44(v42, v39);
      v48 = v39;
      v49 = v47;
      v44(v43, v48);
      v50 = v4[15];
      v20 = v40;
      v51 = v4[46];
    }
    else
    {
      v51 = v28;
      v20 = v4[44];
      v52 = v4[37];
      v53 = *(unsigned int *)(v6 - 256) | ((unint64_t)*(unsigned __int16 *)(v6 - 252) << 32);
      if ((v53 & 0x10000000000) != 0)
      {
        v65 = v30;
        if ((v53 & 0xFFFFFFFFFFLL) != 0)
        {
          v11 = v4[37];
          v66 = v65;
          v67 = v4[1];
          (*(void (**)(uint64_t))(v24 + 72))(v31);
          v68 = v4[4];
          sub_23BBECE40(v67, v65, v68);
          v69 = *(void (**)(uint64_t, uint64_t))(*v4 + 8);
          v69(v67, v65);
          sub_23BBEAFE8(v68, v65, v67);
          v4[86] = v11;
          v4[87] = v51;
          v70 = v4[42];
          MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v70, v4 + 86);
          v71 = v4[8];
          sub_23BC5C668(v67, v70, v66);
          v72 = v67;
          v64 = v4[40];
          v69(v72, v66);
          v73 = v66;
          v61 = v71;
          v69(v4[4], v73);
          v63 = v4[38];
        }
        else
        {
          v4[41] = *(_QWORD *)(v24 + 40);
          v74 = *(_OWORD *)(v24 + 48);
          v75 = *(_OWORD *)(v24 + 64);
          *(_OWORD *)(v6 - 144) = *(_OWORD *)(v24 + 32);
          *(_OWORD *)(v6 - 128) = v74;
          *(_OWORD *)(v6 - 112) = v75;
          *(_QWORD *)(v6 - 96) = *(_QWORD *)(v24 + 80);
          v76 = *(_OWORD *)(v24 + 16);
          *(_OWORD *)(v6 - 176) = *(_OWORD *)v24;
          *(_OWORD *)(v6 - 160) = v76;
          v77 = sub_23BC5A858(v4[18], v32, v33, v34);
          MEMORY[0x24BDAC7A8](v77);
          swift_getKeyPath();
          v78 = v4[38];
          sub_23BC7218C();
          swift_release();
          swift_release();
          v79 = v4[12];
          ((void (*)(_QWORD))v4[41])(*(unsigned __int8 *)(v6 - 176));
          v11 = v52;
          v80 = v4[42];
          v81 = v4[13];
          sub_23BBECE40(v79, v78, v81);
          v82 = *(void (**)(uint64_t, uint64_t))(v4[11] + 8);
          v82(v79, v78);
          sub_23BBEAFE8(v81, v78, v79);
          v83 = v4[5];
          sub_23BC5C5A4(v79, v78);
          v84 = v79;
          v63 = v78;
          v82(v84, v78);
          v4[71] = v11;
          v4[72] = v51;
          MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v80, v4 + 71);
          v61 = v4[8];
          sub_23BC5C5A4(v83, v80);
          v85 = v83;
          v64 = v4[40];
          (*(void (**)(uint64_t, uint64_t))(v4[6] + 8))(v85, v80);
          v82(v4[13], v78);
        }
      }
      else
      {
        v54 = v4[3];
        (*(void (**)(unint64_t))(v24 + 56))(v53 | ((HIDWORD(v53) & 1) << 32));
        v55 = v4[7];
        v56 = v4[20];
        sub_23BBECE40(v54, v56, v55);
        v57 = *(void (**)(uint64_t, uint64_t))(v4[2] + 8);
        v57(v54, v56);
        sub_23BBEAFE8(v55, v56, v54);
        v58 = v4[5];
        v59 = v4[38];
        v11 = v52;
        sub_23BC5C668(v54, v59, v56);
        v57(v54, v56);
        v4[73] = v52;
        v4[74] = v51;
        v60 = v4[42];
        MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v60, v4 + 73);
        v61 = v4[8];
        sub_23BC5C5A4(v58, v60);
        v62 = v58;
        v63 = v59;
        (*(void (**)(uint64_t, uint64_t))(v4[6] + 8))(v62, v60);
        v57(v4[7], v56);
        v64 = v4[40];
      }
      v4[84] = v11;
      v4[85] = v51;
      v86 = MEMORY[0x24BDEF3E0];
      v4[82] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v4[42], v4 + 84);
      v4[83] = v20;
      MEMORY[0x24260ED10](v86, v64, v4 + 82);
      v87 = v4[9];
      sub_23BBEAFE8(v61, v64, v87);
      v88 = v63;
      v49 = v4[14];
      sub_23BC5C668(v87, v88, v64);
      v89 = *(void (**)(uint64_t, uint64_t))(v4[10] + 8);
      v89(v87, v64);
      v89(v61, v64);
      v50 = v4[15];
      v15 = v64;
    }
    v4[80] = v11;
    v4[81] = v51;
    v90 = MEMORY[0x24BDEF3E0];
    v13 = v4[42];
    v4[78] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v13, v4 + 80);
    v4[79] = v20;
    v91 = MEMORY[0x24260ED10](v90, v15, v4 + 78);
    v4[76] = v11;
    v4[77] = v91;
    v17 = v4[43];
    MEMORY[0x24260ED10](v90, v17, v4 + 76);
    sub_23BBEAFE8(v49, v17, v50);
    v18 = v4[21];
    sub_23BC5C5A4(v50, v17);
    v21 = *(void (**)(uint64_t, uint64_t))(v4[16] + 8);
    v21(v50, v17);
    v22 = v49;
    v23 = v17;
  }
  else
  {
    v7 = v4[25];
    (*(void (**)(void))(v4[26] + 24))();
    v8 = v4[41];
    v9 = v4[45];
    sub_23BBECE40(v7, v9, v8);
    v10 = *(void (**)(uint64_t, uint64_t))(v4[24] + 8);
    v4[39] = v10;
    v10(v7, v9);
    sub_23BBEAFE8(v8, v9, v7);
    v11 = v4[37];
    v4[110] = v11;
    v4[111] = v4[46];
    v12 = MEMORY[0x24BDEF3E0];
    v13 = v4[42];
    v4[108] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v13, v4 + 110);
    v14 = v4[44];
    v4[109] = v14;
    v15 = v4[40];
    v16 = MEMORY[0x24260ED10](v12, v15, v4 + 108);
    v4[106] = v11;
    v4[107] = v16;
    v17 = v4[43];
    MEMORY[0x24260ED10](v12, v17, v4 + 106);
    v18 = v4[21];
    sub_23BC5C668(v7, v17, v9);
    v19 = v7;
    v20 = v14;
    v21 = (void (*)(uint64_t, uint64_t))v4[39];
    v21(v19, v9);
    v22 = v4[41];
    v23 = v9;
  }
  v21(v22, v23);
  v4[104] = v11;
  v4[105] = v4[46];
  v92 = MEMORY[0x24BDEF3E0];
  v4[102] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v13, v4 + 104);
  v4[103] = v20;
  v93 = MEMORY[0x24260ED10](v92, v15, v4 + 102);
  v4[100] = v11;
  v4[101] = v93;
  v4[98] = MEMORY[0x24260ED10](v92, v17, v4 + 100);
  v4[99] = v4[47];
  v94 = v4[28];
  MEMORY[0x24260ED10](v92, v94, v4 + 98);
  v95 = v11;
  v96 = v4[22];
  sub_23BBEAFE8(v18, v94, v96);
  v97 = v4[27];
  v98 = v4[43];
  sub_23BC5C668(v96, v4[45], v94);
  v99 = *(void (**)(uint64_t, uint64_t))(v4[23] + 8);
  v100 = v96;
  v101 = v20;
  v102 = v95;
  v99(v100, v94);
  v99(v18, v94);
  v103 = v4[46];
  v104 = v4[40];
  v105 = v4[29];
  v4[96] = v102;
  v4[97] = v103;
  v106 = MEMORY[0x24BDEF3E0];
  v4[94] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v13, v4 + 96);
  v4[95] = v101;
  v107 = MEMORY[0x24260ED10](v106, v104, v4 + 94);
  v4[92] = v102;
  v4[93] = v107;
  v4[90] = MEMORY[0x24260ED10](v106, v98, v4 + 92);
  v108 = v4[47];
  v4[91] = v108;
  v109 = MEMORY[0x24260ED10](v106, v94, v4 + 90);
  v4[88] = v108;
  v4[89] = v109;
  v110 = v106;
  v111 = v4[36];
  MEMORY[0x24260ED10](v110, v111, v4 + 88);
  sub_23BBEAFE8(v97, v111, v105);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4[35] + 8))(v97, v111);
}

void sub_23BC5BE9C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23BC5AE1C(*(__int128 **)(v1 + 96), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), a1, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

void sub_23BC5BED8()
{
  type metadata accessor for DynamicLibraryButton();
}

uint64_t sub_23BC5BF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23BC5A858(a1, a2, a3, a4);
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC5BF70()
{
  sub_23BBE7EAC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23BC5BFB8()
{
  sub_23BC5BED8();
}

uint64_t sub_23BC5BFF8(uint64_t a1)
{
  sub_23BBE7EBC();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BC5C068()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC5C0B0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23BC5C0B8()
{
  sub_23BBE7EAC();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BC5C100(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = a2[10];
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  *(_QWORD *)(a1 + 80) = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BC5C1AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BBE7EBC();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23BBE7EAC();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  v10 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_23BC5C290(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23BBE7EAC();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t sub_23BC5C314(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23BC5C35C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DynamicLibraryButton()
{
  JUMPOUT(0x24260EC74);
}

uint64_t sub_23BC5C3BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  __int128 v20;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = sub_23BC71E2C();
  v5 = sub_23BC71E2C();
  v6 = sub_23BC71E2C();
  v7 = sub_23BC71E2C();
  v8 = sub_23BC71E2C();
  v9 = sub_23BC71FE8();
  v10 = sub_23BC71D6C();
  v20 = *(_OWORD *)(a1 + 56);
  v13 = v20;
  v11 = MEMORY[0x24BDEF3E0];
  v19[0] = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v4, &v20);
  v19[1] = v3;
  v18[0] = v13;
  v18[1] = MEMORY[0x24260ED10](v11, v5, v19);
  v17[0] = MEMORY[0x24260ED10](v11, v6, v18);
  v17[1] = v2;
  v16[0] = v2;
  v16[1] = MEMORY[0x24260ED10](v11, v7, v17);
  v15 = MEMORY[0x24260ED10](v11, v8, v16);
  v14[0] = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v9, &v15);
  v14[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x24260ED10](MEMORY[0x24BDED308], v10, v14);
}

uint64_t sub_23BC5C54C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75618);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DynamicLibraryButtonEnvironment.init(resolveBookmark:queryDownloadStatus:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t type metadata accessor for DynamicLibraryButtonEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicLibraryButtonEnvironment);
}

uint64_t sub_23BC5C5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_23BC71E14();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_23BC71E20();
}

uint64_t sub_23BC5C668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_23BC71E14();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_23BC71E20();
}

uint64_t sub_23BC5C72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SharingButtonFeature(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for SharingButtonFeature<A>, v4);
  v5 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v5);
  return sub_23BC71CDC();
}

uint64_t ShareLinkPicker.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v12 = type metadata accessor for SharingButtonFeature(255, a3, a4, v11);
  MEMORY[0x24260ED10](&protocol conformance descriptor for SharingButtonFeature<A>, v12);
  v13 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v13);
  result = sub_23BC71CD0();
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v15;
  *(_BYTE *)(a5 + 16) = v16 & 1;
  return result;
}

uint64_t sub_23BC5C874()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t ShareLinkPicker.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  __int128 v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v23 = a3;
  MEMORY[0x24260ED10](&protocol conformance descriptor for ShareLinkPicker<A>);
  v6 = sub_23BC71E38();
  v7 = MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v6);
  v30 = v6;
  v31 = v7;
  MEMORY[0x24260ECB0](255, &v30, MEMORY[0x24BDF2670], 0);
  v8 = sub_23BC71E2C();
  v9 = sub_23BC71FE8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  v16 = *((_BYTE *)v3 + 16);
  v17 = *v3;
  v24 = *(_OWORD *)(a2 + 16);
  v25 = v17;
  v26 = v16;
  v27 = a1;
  v30 = v6;
  v31 = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v29[0] = v7;
  v29[1] = OpaqueTypeConformance2;
  v19 = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v8, v29);
  sub_23BC71FDC();
  v28 = v19;
  MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v9, &v28);
  sub_23BBECE40((uint64_t)v13, v9, (uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v13, v9);
  sub_23BBEAFE8((uint64_t)v15, v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v15, v9);
}

uint64_t sub_23BC5CA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t State;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  char v72;

  v61 = a6;
  v62 = a4;
  v60 = a3;
  v66 = a7;
  v10 = type metadata accessor for ShareLinkPicker(255, a5, a6, a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for ShareLinkPicker<A>, v10);
  v11 = sub_23BC71E38();
  v12 = MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v11);
  v70 = v11;
  v71 = v12;
  v13 = MEMORY[0x24260ECB0](0, &v70, MEMORY[0x24BDF2670], 0);
  v53 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v55 = (uint64_t)&v51 - v16;
  v17 = sub_23BC71B5C();
  v58 = *(_QWORD *)(v17 - 8);
  v59 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v54 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_checkMetadataState();
  v57 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v51 - v23;
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23BC71E2C();
  v64 = *(_QWORD *)(v28 - 8);
  v65 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v63 = (char *)&v51 - v29;
  v51 = a1;
  v70 = a1;
  v71 = a2;
  v52 = a2;
  v30 = v60 & 1;
  v72 = v60 & 1;
  v31 = swift_checkMetadataState();
  sub_23BC5C72C(v31, v32, v33, v34);
  v67 = a5;
  v68 = v61;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v27, 2, v35))
  {
    sub_23BBECE40(v62, v19, (uint64_t)v24);
    sub_23BBEAFE8((uint64_t)v24, v19, (uint64_t)v22);
    v70 = v19;
    v71 = v12;
    swift_getOpaqueTypeConformance2();
    v36 = (uint64_t)v63;
    sub_23BC5C5A4((uint64_t)v22, v19);
    v37 = *(void (**)(char *, uint64_t))(v57 + 8);
    v37(v22, v19);
    v37(v24, v19);
  }
  else
  {
    v38 = v54;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v54, v27, v59);
    v39 = v51;
    v40 = v52;
    v70 = v51;
    v71 = v52;
    v72 = v30;
    sub_23BC5C72C(v31, v41, v42, v43);
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = v39;
    *(_QWORD *)(v44 + 24) = v40;
    *(_BYTE *)(v44 + 32) = v30;
    sub_23BBE7EBC();
    sub_23BC720C0();
    v45 = (uint64_t)v56;
    sub_23BC71F1C();
    swift_release();
    swift_release();
    v70 = v19;
    v71 = v12;
    swift_getOpaqueTypeConformance2();
    v46 = v55;
    sub_23BBECE40(v45, v13, v55);
    v47 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v47(v45, v13);
    sub_23BBEAFE8(v46, v13, v45);
    v36 = (uint64_t)v63;
    sub_23BC5C668(v45, v19, v13);
    v47(v45, v13);
    v47(v46, v13);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
  }
  v70 = v19;
  v71 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v69[0] = v12;
  v69[1] = OpaqueTypeConformance2;
  v49 = v65;
  MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v65, v69);
  sub_23BBEAFE8(v36, v49, v66);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v36, v49);
}

uint64_t sub_23BC5CF9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC5CA68(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23BC5CFB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  uint64_t *v38;
  char v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  v48 = a4;
  v46 = a2;
  v47 = a3;
  v52 = a5;
  v5 = *a1;
  v6 = sub_23BC71C34();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74698);
  MEMORY[0x24BDAC7A8](v49);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v43 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v5 + *MEMORY[0x24BE2B5E0]);
  v23 = *(_QWORD *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 24);
  v53 = v23;
  v54 = v24;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v21, 1, v10);
  if ((_DWORD)result == 1)
  {
    v26 = 0;
  }
  else
  {
    sub_23BC0EF90((uint64_t)v21, (uint64_t)v18);
    v55 = v46;
    v56 = v47;
    v57 = v48 & 1;
    v28 = type metadata accessor for ShareLinkPicker(0, v23, v24, v27);
    v32 = sub_23BC5C72C(v28, v29, v30, v31);
    MEMORY[0x24BDAC7A8](v32);
    *(&v43 - 2) = v23;
    *(&v43 - 1) = v24;
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v33 = v50;
    v34 = v51;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v16, 0, 1, v51);
    v35 = (uint64_t)&v9[*(int *)(v49 + 48)];
    sub_23BC0EFD8((uint64_t)v18, (uint64_t)v9);
    sub_23BC0EFD8((uint64_t)v16, v35);
    v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v36((uint64_t)v9, 1, v34) == 1)
    {
      sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v18, &qword_256A74428);
      v37 = v36(v35, 1, v34);
      if (v37 == 1)
        v38 = &qword_256A74428;
      else
        v38 = &qword_256A74698;
      if (v37 == 1)
        v39 = -1;
      else
        v39 = 0;
    }
    else
    {
      v40 = v45;
      sub_23BC0EFD8((uint64_t)v9, v45);
      if (v36(v35, 1, v34) == 1)
      {
        sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v18, &qword_256A74428);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v40, v34);
        v39 = 0;
        v38 = &qword_256A74698;
      }
      else
      {
        v41 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v44, v35, v34);
        sub_23BC06D14();
        v39 = sub_23BC7227C();
        v42 = *(void (**)(char *, uint64_t))(v33 + 8);
        v42(v41, v34);
        v38 = &qword_256A74428;
        sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v18, &qword_256A74428);
        v42((char *)v40, v34);
      }
    }
    result = sub_23BBE81C0((uint64_t)v9, v38);
    v26 = v39 & 1;
  }
  *v52 = v26;
  return result;
}

uint64_t sub_23BC5D3B4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = sub_23BC71B5C();
  if (v3)
    v5 = 2;
  else
    v5 = 3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, v5, 3, v4);
}

uint64_t View.sharingLinkPicker<A>(store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  _QWORD v17[2];
  char v18;

  swift_retain();
  ShareLinkPicker.init(store:)(a1, a2, a4, a6, (uint64_t)v17);
  v15[0] = v17[0];
  v15[1] = v17[1];
  v16 = v18;
  v13 = type metadata accessor for ShareLinkPicker(0, a4, a6, v12);
  MEMORY[0x24260E1F4](v15, a3, v13, a5);
  return sub_23BBE7EAC();
}

uint64_t type metadata accessor for ShareLinkPicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShareLinkPicker);
}

uint64_t sub_23BC5D4D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC5D504(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ShareLinkPicker(255, *a1, a1[1], a4);
  MEMORY[0x24260ED10](&protocol conformance descriptor for ShareLinkPicker<A>, v4);
  v5 = sub_23BC71E38();
  v6 = MEMORY[0x24260ED10](MEMORY[0x24BDEFB78], v5);
  v12 = v5;
  v13 = v6;
  MEMORY[0x24260ECB0](255, &v12, MEMORY[0x24BDF2670], 0);
  v7 = sub_23BC71E2C();
  v8 = sub_23BC71FE8();
  v12 = v5;
  v13 = v6;
  v11[0] = v6;
  v11[1] = swift_getOpaqueTypeConformance2();
  v10 = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v7, v11);
  return MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v8, &v10);
}

uint64_t sub_23BC5D604(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for ShareLinkPicker(255, a1[1], a1[3], a4);
  v6 = sub_23BC71D6C();
  v8[0] = v4;
  v8[1] = MEMORY[0x24260ED10](&protocol conformance descriptor for ShareLinkPicker<A>, v5);
  return MEMORY[0x24260ED10](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_23BC5D67C()
{
  sub_23BBE7EAC();
  return swift_deallocObject();
}

uint64_t sub_23BC5D6A4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_23BC5CFB0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t DynamicLibraryButtonState.bookmarkState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t DynamicLibraryButtonState.bookmarkState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 44);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*DynamicLibraryButtonState.bookmarkState.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

unint64_t DynamicLibraryButtonState.downloadState.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned int *)(v1 + *(int *)(a1 + 48)) | ((unint64_t)*(unsigned __int16 *)(v1 + *(int *)(a1 + 48) + 4) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 48) + 6) << 48);
}

uint64_t DynamicLibraryButtonState.downloadState.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + *(int *)(a2 + 48);
  *(_WORD *)(v3 + 4) = WORD2(result);
  *(_DWORD *)v3 = result;
  *(_BYTE *)(v3 + 6) = BYTE6(result) & 1;
  return result;
}

uint64_t (*DynamicLibraryButtonState.downloadState.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DynamicLibraryButtonState.init(identifier:locale:isSubscribed:bookmarkState:downloadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a8, a1, a6);
  v16 = (int *)type metadata accessor for DynamicLibraryButtonState(0, a6, a7, v15);
  v17 = a8 + v16[9];
  v18 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  *(_BYTE *)(a8 + v16[10]) = a3;
  v19 = a8 + v16[11];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a4, v20);
  v22 = a8 + v16[12];
  *(_WORD *)(v22 + 4) = WORD2(a5);
  *(_DWORD *)v22 = a5;
  *(_BYTE *)(v22 + 6) = BYTE6(a5) & 1;
  return result;
}

uint64_t type metadata accessor for DynamicLibraryButtonState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicLibraryButtonState);
}

uint64_t DynamicLibraryButtonState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int *v4;
  unint64_t v5;

  sub_23BC72264();
  sub_23BC71C4C();
  sub_23BC36768(&qword_256A74430, MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  sub_23BC727BC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  sub_23BC38C84();
  sub_23BC72264();
  v4 = (unsigned int *)(v2 + *(int *)(a2 + 48));
  v5 = *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 2) << 32);
  if (*((_BYTE *)v4 + 6) == 1)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v5 & 0x10000000000) != 0)
    return sub_23BC727B0();
  sub_23BC727B0();
  if ((v5 & 0x100000000) != 0)
    return sub_23BC727BC();
  sub_23BC727BC();
  return sub_23BC727C8();
}

BOOL static DynamicLibraryButtonState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int *v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;

  if ((sub_23BC7227C() & 1) == 0)
    return 0;
  v9 = (int *)type metadata accessor for DynamicLibraryButtonState(0, a3, a4, v8);
  if ((MEMORY[0x24260DE7C](a1 + v9[9], a2 + v9[9]) & 1) == 0
    || *(unsigned __int8 *)(a1 + v9[10]) != *(unsigned __int8 *)(a2 + v9[10])
    || (sub_23BC7212C() & 1) == 0)
  {
    return 0;
  }
  v10 = v9[12];
  v11 = *(unsigned int *)(a1 + v10) | ((unint64_t)*(unsigned __int16 *)(a1 + v10 + 4) << 32);
  v12 = *(unsigned __int8 *)(a1 + v10 + 6);
  v13 = a2 + v10;
  v14 = *(unsigned int *)(a2 + v10) | ((unint64_t)*(unsigned __int16 *)(a2 + v10 + 4) << 32);
  v15 = *(unsigned __int8 *)(v13 + 6);
  if (v12 == 1)
  {
    if ((v11 & 0xFFFFFFFFFFFFLL) != 0)
    {
      if (v15)
        return (v14 & 0xFFFFFFFFFFFFLL) != 0;
    }
    else if (v15)
    {
      return (v14 & 0xFFFFFFFFFFFFLL) == 0;
    }
    return 0;
  }
  if ((v15 & 1) != 0)
    return 0;
  if ((v11 & 0x10000000000) != 0)
  {
    if ((v11 & 0xFFFFFFFFFFLL) != 0)
    {
      if ((v14 & 0x10000000000) != 0)
        return (v14 & 0xFFFFFFFFFFLL) != 0;
    }
    else if ((v14 & 0x10000000000) != 0)
    {
      return (v14 & 0xFFFFFFFFFFLL) == 0;
    }
    return 0;
  }
  if ((v14 & 0x10000000000) != 0)
    return 0;
  if ((v11 & 0x100000000) != 0)
    return (v14 & 0x100000000) != 0;
  return (v14 & 0x100000000) == 0 && *(float *)&v11 == *(float *)&v14;
}

uint64_t sub_23BC5DB58(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xED00006574617453 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xED00006574617453)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23BC5DD8C(char a1)
{
  return *(_QWORD *)&aIdentifilocale[8 * a1];
}

uint64_t sub_23BC5DDAC()
{
  char *v0;

  return sub_23BC5DD8C(*v0);
}

uint64_t sub_23BC5DDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC5DB58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC5DDE4(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC80078, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC5DE18(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC80078, a1);
  return sub_23BC72834();
}

uint64_t DynamicLibraryButtonState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  int *v17;
  int v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v21 = a2;
  v22 = v5;
  v7 = type metadata accessor for DynamicLibraryButtonState.CodingKeys(255, v5, v6, a4);
  MEMORY[0x24260ED10](&unk_23BC80078, v7);
  v8 = sub_23BC7272C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v32 = 0;
  v12 = v23;
  v13 = v11;
  v14 = v24;
  sub_23BC72720();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = v21;
  v31 = 1;
  sub_23BC71C4C();
  sub_23BC36768(&qword_256A74440, MEMORY[0x24BDCEEC8]);
  sub_23BC72720();
  v30 = 2;
  sub_23BC726F0();
  v29 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  sub_23BC39CA0(&qword_256A77110, MEMORY[0x24BE2B3F8]);
  sub_23BC72720();
  v17 = (int *)(v12 + *(int *)(v16 + 48));
  v18 = *v17;
  v19 = *((_WORD *)v17 + 2);
  LOBYTE(v17) = *((_BYTE *)v17 + 6);
  v26 = v19;
  v25 = v18;
  v27 = (char)v17;
  v28 = 4;
  sub_23BBF11DC();
  sub_23BC72720();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t type metadata accessor for DynamicLibraryButtonState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicLibraryButtonState.CodingKeys);
}

uint64_t DynamicLibraryButtonState.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  DynamicLibraryButtonState.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t DynamicLibraryButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  char *v31;
  uint64_t v32;
  int v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  int v55;
  __int16 v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v40 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23BC71C4C();
  v51 = *(_QWORD *)(v47 - 8);
  v9 = MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DynamicLibraryButtonState.CodingKeys(255, a2, a3, v12);
  MEMORY[0x24260ED10](&unk_23BC80078, v13);
  v53 = sub_23BC7269C();
  v45 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v15 = (char *)&v38 - v14;
  v49 = a3;
  v50 = a2;
  v17 = type metadata accessor for DynamicLibraryButtonState(0, a2, a3, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v38 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v52 = v15;
  v21 = (uint64_t)v54;
  sub_23BC72810();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v46;
  v22 = v47;
  v38 = v18;
  v39 = (int *)v17;
  v24 = v20;
  v54 = a1;
  v62 = 0;
  v25 = v48;
  v26 = v50;
  v27 = v51;
  sub_23BC72684();
  v28 = v24;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v24, v25, v26);
  v61 = 1;
  sub_23BC36768(&qword_256A74460, MEMORY[0x24BDCEEE8]);
  v29 = v23;
  sub_23BC72684();
  v30 = v39;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v28[v39[9]], v29, v22);
  v60 = 2;
  v28[v30[10]] = sub_23BC72654() & 1;
  v59 = 3;
  sub_23BC39CA0(qword_256A77118, MEMORY[0x24BE2B410]);
  v31 = v41;
  v32 = v43;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v28[v30[11]], v31, v32);
  v58 = 4;
  sub_23BBF1220();
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v52, v53);
  v33 = v55;
  v34 = v57;
  v35 = &v28[v30[12]];
  *((_WORD *)v35 + 2) = v56;
  *(_DWORD *)v35 = v33;
  v35[6] = v34;
  v36 = v38;
  (*(void (**)(uint64_t, char *, int *))(v38 + 16))(v40, v28, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return (*(uint64_t (**)(char *, int *))(v36 + 8))(v28, v30);
}

uint64_t sub_23BC5E5C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DynamicLibraryButtonState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BC5E5E4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DynamicLibraryButtonState.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_23BC5E600(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  DynamicLibraryButtonState.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

void sub_23BC5E640()
{
  JUMPOUT(0x24260ED10);
}

BOOL sub_23BC5E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DynamicLibraryButtonState.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_23BC5E65C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_23BC71C4C();
    if (v1 <= 0x3F)
    {
      sub_23BC3B88C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_23BC5E710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  int v24;
  _DWORD *v25;
  uint64_t v27;
  uint64_t v28;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v28 = sub_23BC71C4C();
  v6 = *(_QWORD *)(v28 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v5 + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64) + 3;
  v14 = v12 | v7 | *(_DWORD *)(v4 + 80) & 0xFC | 3;
  if (v14 > 7
    || ((*(_DWORD *)(v11 + 80) | v7 | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || ((v13 + ((v12 + v9 + (v8 & ~(unint64_t)v7) + 1) & ~v12)) & 0xFFFFFFFFFFFFFFFCLL) + 7 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v19 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v27 = v10;
    v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
    v19 = a1;
    v18(a1, a2, v3);
    v20 = ((unint64_t)a1 + v8) & ~(unint64_t)v7;
    v21 = ((unint64_t)a2 + v8) & ~(unint64_t)v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v20, v21, v28);
    *(_BYTE *)(v20 + v9) = *(_BYTE *)(v21 + v9);
    v22 = (v21 + v9 + v12 + 1) & ~v12;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))((v20 + v9 + v12 + 1) & ~v12, v22, v27);
    v23 = (_DWORD *)((v13 + v22) & 0xFFFFFFFFFFFFFFFCLL);
    v24 = *(_DWORD *)((char *)v23 + 3);
    v25 = (_DWORD *)((v13 + ((v20 + v9 + v12 + 1) & ~v12)) & 0xFFFFFFFFFFFFFFFCLL);
    *v25 = *v23;
    *(_DWORD *)((char *)v25 + 3) = v24;
  }
  return v19;
}

uint64_t sub_23BC5E8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_23BC71C4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))((v8 + *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + v7 + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80), v9);
}

uint64_t sub_23BC5E950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = v12 + v13;
  *v14 = *(_BYTE *)(v12 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (unint64_t)&v14[v18 + 1] & ~v18;
  v20 = (v18 + 1 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, v20, v16);
  v21 = *(_QWORD *)(v17 + 64) + 3;
  v22 = (_DWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFFCLL);
  v23 = (_DWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFFCLL);
  v24 = *(_DWORD *)((char *)v22 + 3);
  *v23 = *v22;
  *(_DWORD *)((char *)v23 + 3) = v24;
  return a1;
}

uint64_t sub_23BC5EA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = v12 + v13;
  *v14 = *(_BYTE *)(v12 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (unint64_t)&v14[v18 + 1] & ~v18;
  v20 = (v18 + 1 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v19, v20, v16);
  v21 = *(_QWORD *)(v17 + 64) + 3;
  v22 = (_DWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFFCLL);
  v23 = (_DWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFFCLL);
  v24 = *(_DWORD *)((char *)v22 + 3);
  *v23 = *v22;
  *(_DWORD *)((char *)v23 + 3) = v24;
  return a1;
}

uint64_t sub_23BC5EB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = v12 + v13;
  *v14 = *(_BYTE *)(v12 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (unint64_t)&v14[v18 + 1] & ~v18;
  v20 = (v18 + 1 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v19, v20, v16);
  v21 = *(_QWORD *)(v17 + 64) + 3;
  v22 = (_DWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFFCLL);
  v23 = (_DWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFFCLL);
  v24 = *(_DWORD *)((char *)v22 + 3);
  *v23 = *v22;
  *(_DWORD *)((char *)v23 + 3) = v24;
  return a1;
}

uint64_t sub_23BC5EC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = v12 + v13;
  *v14 = *(_BYTE *)(v12 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (unint64_t)&v14[v18 + 1] & ~v18;
  v20 = (v18 + 1 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(v19, v20, v16);
  v21 = *(_QWORD *)(v17 + 64) + 3;
  v22 = (_DWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFFCLL);
  v23 = (_DWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFFCLL);
  v24 = *(_DWORD *)((char *)v22 + 3);
  *v23 = *v22;
  *(_DWORD *)((char *)v23 + 3) = v24;
  return a1;
}

uint64_t sub_23BC5ED30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_23BC71C4C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75620);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v11 <= v14)
    v15 = *(_DWORD *)(v13 + 84);
  else
    v15 = v11;
  if (v15 <= 0xFE)
    v16 = 254;
  else
    v16 = v15;
  if (!a2)
    return 0;
  v17 = v12;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = *(_QWORD *)(v6 + 64) + v18;
  v20 = *(_QWORD *)(v9 + 64);
  v21 = *(unsigned __int8 *)(v13 + 80);
  if (v16 < a2)
  {
    if (((*(_DWORD *)(v13 + 64)
         + (((_DWORD)v21 + (_DWORD)v20 + (v19 & ~(_DWORD)v18) + 1) & ~(_DWORD)v21)
         + 3) & 0xFFFFFFFC) == 0xFFFFFFFC)
      v22 = ((a2 - v16 + 0xFFFFFF) >> (8
                                     * (((*(_BYTE *)(v13 + 64)
                                        + ((v21 + v20 + (v19 & ~(_BYTE)v18) + 1) & ~(_BYTE)v21)
                                        + 3) & 0xFC)
                                      + 7)))
          + 1;
    else
      v22 = 2;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v23 = 1;
    if (v22 >= 2)
      v24 = v23;
    else
      v24 = 0;
    __asm { BR              X0 }
  }
  if ((_DWORD)v7 == v16)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v26 = a1;
    v14 = v7;
    v17 = v5;
    return v25(v26, v14, v17);
  }
  v26 = (v19 + a1) & ~v18;
  if ((_DWORD)v10 == v16)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v14 = v10;
    v17 = v8;
    return v25(v26, v14, v17);
  }
  v27 = (unsigned __int8 *)(v26 + v20);
  if (v15 > 0xFE)
  {
    v26 = (unint64_t)&v27[v21 + 1] & ~v21;
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    return v25(v26, v14, v17);
  }
  v28 = *v27;
  if (v28 < 2)
    return 0;
  return ((v28 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_23BC5EF54(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  size_t v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_23BC71C4C() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A75620) - 8);
  if (v10 <= *(_DWORD *)(v11 + 84))
    v12 = *(_DWORD *)(v11 + 84);
  else
    v12 = v10;
  if (v12 <= 0xFE)
    v13 = 254;
  else
    v13 = v12;
  v14 = ((*(_QWORD *)(v11 + 64)
        + ((*(unsigned __int8 *)(v11 + 80)
          + *(_QWORD *)(v9 + 64)
          + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + 1) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 7;
  if (v13 >= a3)
  {
    v17 = 0;
    if (v13 >= a2)
      goto LABEL_23;
  }
  else
  {
    if (((*(_DWORD *)(v11 + 64)
         + ((*(unsigned __int8 *)(v11 + 80)
           + *(_DWORD *)(v9 + 64)
           + ((*(_DWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~*(unsigned __int8 *)(v9 + 80))
           + 1) & ~*(unsigned __int8 *)(v11 + 80))
         + 3) & 0xFFFFFFFC) == 0xFFFFFFFC)
      v15 = ((a3 - v13 + 0xFFFFFF) >> 24) + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    if (v13 >= a2)
LABEL_23:
      __asm { BR              X0 }
  }
  v18 = ~v13 + a2;
  bzero(a1, v14);
  if ((_DWORD)v14 == 3)
  {
    *(_WORD *)a1 = v18;
    a1[2] = BYTE2(v18);
  }
  else
  {
    *(_DWORD *)a1 = v18;
  }
  __asm { BR              X11 }
}

void sub_23BC5F0EC(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x23BC5F174);
}

void sub_23BC5F0F4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x23BC5F0FCLL);
  JUMPOUT(0x23BC5F174);
}

void sub_23BC5F140(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x23BC5F174);
}

void sub_23BC5F148(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x23BC5F174);
}

void sub_23BC5F150()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_WORD *)(v1 + v5) = 0;
  if (v2)
  {
    if (v3 != v0 && v4 != v0)
      JUMPOUT(0x23BC5F15CLL);
    JUMPOUT(0x23BC5F1A4);
  }
  JUMPOUT(0x23BC5F174);
}

uint64_t sub_23BC5F1C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BC5F210 + 4 * byte_23BC7FE64[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BC5F244 + 4 * byte_23BC7FE5F[v4]))();
}

uint64_t sub_23BC5F244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC5F24C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC5F254);
  return result;
}

uint64_t sub_23BC5F260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC5F268);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BC5F26C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC5F274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23BC5F280()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC5F290()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC5F2A0()
{
  JUMPOUT(0x24260ED10);
}

__n128 DynamicLibraryButtonFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _OWORD *v9;
  __n128 result;
  __int128 v11;

  sub_23BC71C28();
  v9 = (_OWORD *)(a4 + *(int *)(type metadata accessor for DynamicLibraryButtonFeature(0, a2, a3, v8) + 36));
  result = *(__n128 *)a1;
  v11 = *(_OWORD *)(a1 + 16);
  *v9 = *(_OWORD *)a1;
  v9[1] = v11;
  return result;
}

uint64_t type metadata accessor for DynamicLibraryButtonFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicLibraryButtonFeature);
}

uint64_t DynamicLibraryButtonFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  char *v21;
  int *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t, char *, uint64_t);
  char *v44;
  void (*v45)(char *);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t result;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD v62[3];
  void (*v63)(char *, uint64_t, uint64_t);
  void (*v64)(char *, _QWORD, uint64_t);
  uint64_t v65;
  unsigned int v66;
  unint64_t v67;
  uint64_t v68;
  int *v69;
  void (*v70)(void);
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _BYTE v87[48];
  char v88[8];
  char v89;

  v80 = a3;
  v78 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v77 = v8;
  v84 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78610);
  v79 = *(_QWORD *)(v81 - 8);
  v9 = MEMORY[0x24BDAC7A8](v81);
  v11 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a5;
  v13 = *(_QWORD *)(a5 + 16);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64);
  v15 = MEMORY[0x24BDAC7A8](v9);
  v82 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v16 = *((unsigned __int16 *)a4 + 2);
  v17 = *a4;
  LOBYTE(a4) = *((_BYTE *)a4 + 6);
  v85 = (char *)a2;
  v86 = v18;
  v19 = *(void (**)(void))(v18 + 16);
  v21 = (char *)v62 - v20;
  v19();
  if ((a4 & 1) != 0)
  {
    v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A746F8);
    v73 = &v11[v22[12]];
    v23 = &v11[v22[16]];
    v74 = &v11[v22[20]];
    v69 = v22;
    v72 = &v11[v22[24]];
    v24 = v12;
    v76 = *(_QWORD *)(v12 + 24);
    v71 = v12;
    v25 = *(_QWORD *)(v76 + 24);
    v26 = v21;
    v75 = v21;
    v68 = v25;
    sub_23BC725F4();
    v89 = 0;
    sub_23BBF4754((uint64_t)v88, (uint64_t)v87);
    v67 = sub_23BBF4790();
    sub_23BC72558();
    sub_23BBF47D4((uint64_t)v88);
    v27 = *MEMORY[0x24BE2B570];
    v28 = sub_23BC72180();
    v29 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
    v66 = v27;
    v65 = v28;
    v64 = v29;
    ((void (*)(char *, uint64_t))v29)(v23, v27);
    v30 = v78;
    v31 = v84;
    v63 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    v63(v84, v83, v24);
    v32 = v82;
    v70 = v19;
    ((void (*)(char *, char *, uint64_t))v19)(v82, v26, v13);
    v33 = *(unsigned __int8 *)(v30 + 80);
    v34 = (v33 + 32) & ~v33;
    v35 = v86;
    v36 = *(unsigned __int8 *)(v86 + 80);
    v37 = (v77 + v34 + v36) & ~v36;
    v62[2] = v37 + v14;
    v62[1] = v33 | v36 | 7;
    v38 = swift_allocObject();
    v39 = v76;
    *(_QWORD *)(v38 + 16) = v13;
    *(_QWORD *)(v38 + 24) = v39;
    v77 = v34;
    v40 = v38 + v34;
    v41 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
    v42 = v71;
    v41(v40, v31, v71);
    v78 = v37;
    v43 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
    v43(v38 + v37, v32, v13);
    v44 = v72;
    *(_QWORD *)v72 = &unk_256A78620;
    *((_QWORD *)v44 + 1) = v38;
    sub_23BBF4AE8();
    sub_23BBF4AEC((uint64_t)v74);
    v45 = *(void (**)(char *))(v79 + 104);
    LODWORD(v79) = *MEMORY[0x24BE2B438];
    v45(v11);
    v74 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A78628);
    sub_23BC723A8();
    v47 = type metadata accessor for DynamicLibraryButtonState(0, v13, v39, v46);
    v48 = &v85[*(int *)(v47 + 48)];
    v49 = v75;
    if (v48[6] == 1 && !(*(unsigned int *)v48 | ((unint64_t)*((unsigned __int16 *)v48 + 2) << 32)))
    {
      *((_WORD *)v48 + 2) = 0;
      *(_DWORD *)v48 = 1;
      v48[6] = 1;
      v73 = &v11[v69[12]];
      v53 = v42;
      v54 = &v11[v69[16]];
      v85 = &v11[v69[20]];
      v72 = &v11[v69[24]];
      v55 = v49;
      sub_23BC725F4();
      v89 = 5;
      sub_23BBF4754((uint64_t)v88, (uint64_t)v87);
      sub_23BC72558();
      sub_23BBF47D4((uint64_t)v88);
      v64(v54, v66, v65);
      v56 = v84;
      v63(v84, v83, v53);
      v57 = v82;
      ((void (*)(char *, char *, uint64_t))v70)(v82, v55, v13);
      v58 = v43;
      v59 = swift_allocObject();
      v60 = v76;
      *(_QWORD *)(v59 + 16) = v13;
      *(_QWORD *)(v59 + 24) = v60;
      v41(v59 + v77, v56, v53);
      v58(v59 + v78, v57, v13);
      v61 = v72;
      *(_QWORD *)v72 = &unk_256A78638;
      *((_QWORD *)v61 + 1) = v59;
      sub_23BBF4AE8();
      sub_23BBF4AEC((uint64_t)v85);
      ((void (*)(char *, _QWORD, uint64_t))v45)(v11, v79, v81);
      sub_23BC723A8();
      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v75, v13);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v75, v13);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v21, v13);
    result = type metadata accessor for DynamicLibraryButtonState(0, v13, *(_QWORD *)(v12 + 24), v51);
    v52 = &v85[*(int *)(result + 48)];
    *((_WORD *)v52 + 2) = ((v17 | (unint64_t)(v16 << 32)) >> 32) & 0x1FF;
    *(_DWORD *)v52 = v17;
    v52[6] = 0;
  }
  return result;
}

uint64_t sub_23BC5F914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a2;
  v5[3] = a3;
  sub_23BC723F0();
  v5[6] = sub_23BC723E4();
  v5[7] = sub_23BC723CC();
  v5[8] = v6;
  return swift_task_switch();
}

uint64_t sub_23BC5F984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD);

  v5 = v4[2];
  v6 = (_QWORD *)(v5 + *(int *)(type metadata accessor for DynamicLibraryButtonFeature(0, v4[4], v4[5], a4) + 36));
  v9 = (uint64_t (*)(_QWORD))(*(int *)*v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  v4[9] = v7;
  *v7 = v4;
  v7[1] = sub_23BC5F9F8;
  return v9(v4[3]);
}

uint64_t sub_23BC5F9F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BC5FA58()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC5FA8C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BC5FAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(type metadata accessor for DynamicLibraryButtonFeature(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v12 = v4 + v10;
  v13 = v4 + ((v10 + *(_QWORD *)(v9 + 64) + v11) & ~v11);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_23BBF5304;
  return sub_23BC5F914(a1, v12, v13, v7, v8);
}

uint64_t sub_23BC5FB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_23BC723F0();
  v5[7] = sub_23BC723E4();
  v5[8] = sub_23BC723CC();
  v5[9] = v6;
  return swift_task_switch();
}

uint64_t sub_23BC5FBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD);

  v5 = v4[3];
  v6 = v5 + *(int *)(type metadata accessor for DynamicLibraryButtonFeature(0, v4[5], v4[6], a4) + 36);
  v9 = (uint64_t (*)(_QWORD))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v4[10] = v7;
  *v7 = v4;
  v7[1] = sub_23BC5FC5C;
  return v9(v4[4]);
}

uint64_t sub_23BC5FC5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *v2;
  v5 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    *(_DWORD *)(v4 + 112) = 0;
    v6 = v4 + 112;
    *(_WORD *)(v6 + 4) = 256;
    *(_BYTE *)(v6 + 6) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v6 - 8) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A786D0);
    *v7 = v5;
    v7[1] = sub_23BBF4A5C;
  }
  else
  {
    *(_DWORD *)(v4 + 120) = a1;
    v8 = v4 + 120;
    *(_WORD *)(v8 + 4) = WORD2(a1) & 0x1FF;
    *(_BYTE *)(v8 + 6) = 0;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 - 24) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A786D0);
    *v9 = v5;
    v9[1] = sub_23BBF49DC;
  }
  return sub_23BC7215C();
}

uint64_t objectdestroyTm_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(type metadata accessor for DynamicLibraryButtonFeature(0, v5, *(_QWORD *)(v4 + 24), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v4 + v7;
  v11 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v4 + v9, v5);
  return swift_deallocObject();
}

uint64_t sub_23BC5FE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(type metadata accessor for DynamicLibraryButtonFeature(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v12 = v4 + v10;
  v13 = v4 + ((v10 + *(_QWORD *)(v9 + 64) + v11) & ~v11);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_23BBF6148;
  return sub_23BC5FB74(a1, v12, v13, v7, v8);
}

uint64_t DynamicLibraryButtonFeature.dispose(localState:sharedState:)(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

unint64_t sub_23BC5FEE0()
{
  unint64_t result;

  result = qword_256A78640;
  if (!qword_256A78640)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicLibraryButtonAction, &type metadata for DynamicLibraryButtonAction);
    atomic_store(result, (unint64_t *)&qword_256A78640);
  }
  return result;
}

unint64_t sub_23BC5FF28()
{
  unint64_t result;

  result = qword_256A78648[0];
  if (!qword_256A78648[0])
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for DynamicLibraryButtonAction, &type metadata for DynamicLibraryButtonAction);
    atomic_store(result, qword_256A78648);
  }
  return result;
}

void sub_23BC5FF6C()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BC5FF7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71C34();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23BC5FFEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23BC71C34();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 36);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v11 = *((_QWORD *)v10 + 3);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
    *((_QWORD *)v9 + 3) = v11;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BC60098(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_23BC600E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v10 = *(_QWORD *)(v9 + 24);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 24) = v10;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BC6016C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BC601F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_23BC6025C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;

  v6 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + v7) = *v9;
  swift_release();
  *(_OWORD *)(v8 + 16) = v9[1];
  swift_release();
  return a1;
}

uint64_t sub_23BC602D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC602E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23BC71C34();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BC60360()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC6036C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BC71C34();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for StartFutureScheduledWorkoutAlert()
{
  return &type metadata for StartFutureScheduledWorkoutAlert;
}

uint64_t sub_23BC603F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC60404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjCClassFromMetadata;
  id v39;
  uint64_t v40;
  char *v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;

  v59 = a3;
  v73 = a1;
  v74 = a5;
  v6 = a4 & 1;
  v7 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v68 = (char *)&v55 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v55 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v55 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v72 = (uint64_t)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v55 - v25;
  v27 = sub_23BC722C4();
  MEMORY[0x24BDAC7A8](v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A786D8);
  v70 = *(_QWORD *)(v28 - 8);
  v71 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v69 = (char *)&v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC722B8();
  sub_23BC722AC();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  v65 = a2;
  v31 = v59;
  v75 = v6;
  v61 = v30;
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  sub_23BBE817C((uint64_t)v20, (uint64_t)v18, &qword_256A74648);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  v66 = v21;
  v60 = v32;
  if (v32((uint64_t)v18, 1, v21) == 1)
  {
    v33 = type metadata accessor for FutureWorkoutConfirmation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v26, 1, 1, v33);
  }
  else
  {
    sub_23BC61AB4((uint64_t)v18, (uint64_t)v26);
  }
  sub_23BBE81C0((uint64_t)v20, &qword_256A74648);
  v34 = type metadata accessor for FutureWorkoutConfirmation(0);
  v55 = *(_QWORD *)(v34 - 8);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48))(v26, 1, v34);
  v36 = v31;
  v62 = v34;
  if (v35 == 1)
  {
    sub_23BBE81C0((uint64_t)v26, &qword_256A74640);
  }
  else
  {
    sub_23BC28188();
    sub_23BBF36FC((uint64_t)v26, type metadata accessor for FutureWorkoutConfirmation);
  }
  v37 = v65;
  LODWORD(v58) = v75 != 0;
  sub_23BC722A0();
  swift_bridgeObjectRelease();
  sub_23BC722AC();
  sub_23BC722D0();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v39 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v40 = sub_23BC71EC8();
  v63 = v41;
  v64 = (char *)v40;
  v43 = v42;
  v65 = v44;
  sub_23BC71CDC();
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v37;
  *(_QWORD *)(v45 + 24) = v36;
  *(_BYTE *)(v45 + 32) = v58;
  sub_23BBE7EBC();
  sub_23BC720C0();
  v58 = v76;
  v57 = v77;
  v56 = v78;
  sub_23BC71CDC();
  swift_getKeyPath();
  v46 = (uint64_t)v68;
  sub_23BC7218C();
  swift_release();
  swift_release();
  v47 = v67;
  sub_23BBE817C(v46, v67, &qword_256A74648);
  if (v60(v47, 1, v66) == 1)
  {
    v48 = v72;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v72, 1, 1, v62);
  }
  else
  {
    v48 = v72;
    sub_23BC61AB4(v47, v72);
  }
  v49 = sub_23BBE81C0(v46, &qword_256A74648);
  v50 = MEMORY[0x24BDAC7A8](v49);
  MEMORY[0x24BDAC7A8](v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A786E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75298);
  sub_23BBE869C(&qword_256A786E8, &qword_256A786E0, MEMORY[0x24BDEFB78]);
  sub_23BBE869C(&qword_256A752A8, &qword_256A75298, MEMORY[0x24BDF5428]);
  v51 = v69;
  v53 = (uint64_t)v63;
  v52 = (uint64_t)v64;
  sub_23BC71F7C();
  swift_release();
  swift_release();
  sub_23BBECDD0(v52, v53, v43 & 1);
  swift_bridgeObjectRelease();
  sub_23BBE81C0(v48, &qword_256A74640);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v70 + 32))(v74, v51, v71);
}

uint64_t sub_23BC60BE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;

  v42 = a3;
  v43 = a1;
  v44 = a2;
  v48 = a4;
  v4 = sub_23BC71C34();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74698);
  MEMORY[0x24BDAC7A8](v45);
  v47 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v41 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v39 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v39 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74648);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15);
  if ((_DWORD)result == 1)
  {
    v26 = 0;
  }
  else
  {
    sub_23BC61AB4((uint64_t)v24, (uint64_t)v21);
    sub_23BBE817C((uint64_t)v21, (uint64_t)v19, &qword_256A74640);
    v27 = type metadata accessor for FutureWorkoutConfirmation(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v19, 1, v27) == 1)
    {
      sub_23BBE81C0((uint64_t)v19, &qword_256A74640);
      v28 = v46;
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
      v29(v14, 1, 1, v4);
    }
    else
    {
      v28 = v46;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v14, v19, v4);
      sub_23BBF36FC((uint64_t)v19, type metadata accessor for FutureWorkoutConfirmation);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v29(v14, 0, 1, v4);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
    sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
    sub_23BC71CDC();
    swift_getKeyPath();
    sub_23BC7218C();
    swift_release();
    swift_release();
    v29(v12, 0, 1, v4);
    v30 = v47;
    v31 = v47 + *(int *)(v45 + 48);
    v32 = &qword_256A74428;
    sub_23BBE817C((uint64_t)v14, v47, &qword_256A74428);
    sub_23BBE817C((uint64_t)v12, v31, &qword_256A74428);
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (v33(v30, 1, v4) == 1)
    {
      sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
      sub_23BBE81C0((uint64_t)v21, &qword_256A74640);
      if (v33(v31, 1, v4) == 1)
      {
        v34 = -1;
      }
      else
      {
        v32 = &qword_256A74698;
        v34 = 0;
      }
    }
    else
    {
      v35 = v41;
      sub_23BBE817C(v30, v41, &qword_256A74428);
      if (v33(v31, 1, v4) == 1)
      {
        sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v21, &qword_256A74640);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v35, v4);
        v34 = 0;
        v32 = &qword_256A74698;
      }
      else
      {
        v36 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v40, v31, v4);
        sub_23BC06D14();
        v37 = v35;
        v34 = sub_23BC7227C();
        v38 = *(void (**)(char *, uint64_t))(v28 + 8);
        v38(v36, v4);
        v32 = &qword_256A74428;
        sub_23BBE81C0((uint64_t)v12, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v14, &qword_256A74428);
        sub_23BBE81C0((uint64_t)v21, &qword_256A74640);
        v38((char *)v37, v4);
      }
    }
    result = sub_23BBE81C0(v30, v32);
    v26 = v34 & 1;
  }
  *v48 = v26;
  return result;
}

uint64_t sub_23BC610F4()
{
  type metadata accessor for StartWorkoutButtonAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BC61124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  _QWORD v44[2];
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v50 = a1;
  v56 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FutureWorkoutConfirmation(0);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v47 = (uint64_t)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A742B0);
  v53 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v54 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v52 = (char *)v44 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v51 = (char *)v44 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v57 = (char *)v44 - v22;
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v46 = ObjCClassFromMetadata;
  v45 = (id)objc_opt_self();
  v24 = objc_msgSend(v45, sel_bundleForClass_, ObjCClassFromMetadata);
  v44[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  v44[0] = sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v58 = sub_23BC72300();
  v59 = v25;
  v26 = v47;
  sub_23BC61B24(v50, v47);
  v27 = (*(unsigned __int8 *)(v48 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a2;
  *(_QWORD *)(v28 + 24) = a3;
  *(_BYTE *)(v28 + 32) = a4 & 1;
  sub_23BC61C14(v26, v28 + v27);
  sub_23BBE7EBC();
  sub_23BC04488();
  sub_23BC72060();
  sub_23BC72288();
  v29 = objc_msgSend(v45, sel_bundleForClass_, v46);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v58 = sub_23BC72300();
  v59 = v30;
  v31 = v55;
  sub_23BC71CAC();
  v32 = sub_23BC71CB8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = a2;
  *(_QWORD *)(v33 + 24) = a3;
  *(_BYTE *)(v33 + 32) = a4 & 1;
  sub_23BBE7EBC();
  v34 = v51;
  sub_23BC72054();
  v35 = v52;
  v36 = v53;
  v37 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v38 = v57;
  v37(v52, v57, v15);
  v39 = v54;
  v37(v54, v34, v15);
  v40 = v56;
  v37(v56, v35, v15);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A752B0);
  v37(&v40[*(int *)(v41 + 48)], v39, v15);
  v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v34, v15);
  v42(v38, v15);
  v42(v39, v15);
  return ((uint64_t (*)(char *, uint64_t))v42)(v35, v15);
}

uint64_t sub_23BC61650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t started;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  v8 = type metadata accessor for FutureWorkoutConfirmation(0);
  v9 = *(_QWORD *)(a4 + *(int *)(v8 + 20));
  *v7 = *(_QWORD *)(a4 + *(int *)(v8 + 24));
  v7[1] = v9;
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BBF36FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
}

uint64_t sub_23BC61770()
{
  uint64_t started;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  started = type metadata accessor for StartWorkoutButtonAction();
  MEMORY[0x24BDAC7A8](started);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_storeEnumTagMultiPayload();
  sub_23BC72198();
  swift_release();
  return sub_23BBF36FC((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StartWorkoutButtonAction);
}

uint64_t sub_23BC61864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23BC722C4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23BC722B8();
  sub_23BC722AC();
  sub_23BC283D4();
  sub_23BC722A0();
  swift_bridgeObjectRelease();
  sub_23BC722AC();
  sub_23BC722D0();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75280);
  sub_23BBE869C(&qword_256A75288, &qword_256A75280, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_23BC61AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BC60404(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_23BC61AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC61B00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23BC60BE4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_23BC61B0C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_23BC61124(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_23BC61B18@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC61864(a1);
}

uint64_t sub_23BC61B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FutureWorkoutConfirmation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC61B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for FutureWorkoutConfirmation(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 33) & ~v2;
  sub_23BBE7EAC();
  v4 = v0 + v3;
  v5 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(v1 + 28);
  v7 = sub_23BC71C10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23BC61C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FutureWorkoutConfirmation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC61C58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FutureWorkoutConfirmation(0) - 8) + 80);
  return sub_23BC61650(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), v0 + ((v1 + 33) & ~v1));
}

uint64_t sub_23BC61C90()
{
  return sub_23BC61770();
}

uint64_t sub_23BC61C9C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A786E0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A75298);
  type metadata accessor for FutureWorkoutConfirmation(255);
  sub_23BBE869C(&qword_256A786E8, &qword_256A786E0, MEMORY[0x24BDEFB78]);
  sub_23BBE869C(&qword_256A752A8, &qword_256A75298, MEMORY[0x24BDF5428]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t SharingButton.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v12 = type metadata accessor for SharingButtonFeature(255, a3, a4, v11);
  MEMORY[0x24260ED10](&protocol conformance descriptor for SharingButtonFeature<A>, v12);
  v13 = sub_23BC721B0();
  MEMORY[0x24260ED10](MEMORY[0x24BE2B5E8], v13);
  result = sub_23BC71CD0();
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v15;
  *(_BYTE *)(a5 + 16) = v16 & 1;
  return result;
}

uint64_t sub_23BC61E30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC61E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t ObjCClassFromMetadata;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _BYTE v38[4];
  int v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  v48 = a6;
  v11 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v11);
  v47 = &v38[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_23BC71C4C();
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v40 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v38[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_23BC722C4();
  MEMORY[0x24BDAC7A8](v18);
  sub_23BC722B8();
  sub_23BC722AC();
  v41 = a1;
  v42 = a2;
  v55 = a1;
  v56 = a2;
  v39 = a3 & 1;
  v57 = a3 & 1;
  v20 = type metadata accessor for SharingButton(0, a4, a5, v19);
  v43 = v20;
  sub_23BC5C72C(v20, v21, v22, v23);
  v53 = a4;
  v54 = a5;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v55 = a1;
  v56 = a2;
  LOBYTE(a2) = v39;
  v57 = v39;
  sub_23BC5C72C(v20, v24, v25, v26);
  v51 = a4;
  v52 = a5;
  swift_getKeyPath();
  v27 = v40;
  sub_23BC7218C();
  swift_release();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a5 + 32))(v27, a4, a5);
  (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v27, v46);
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v17, a4);
  sub_23BC722A0();
  swift_bridgeObjectRelease();
  sub_23BC722AC();
  sub_23BC722D0();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v29 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v55 = v41;
  v56 = v42;
  v57 = a2;
  sub_23BC5C72C(v43, v30, v31, v32);
  v49 = a4;
  v50 = a5;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  v34 = v48;
  *v48 = result;
  v34[1] = v35;
  *((_BYTE *)v34 + 16) = v36 & 1;
  v34[3] = v37;
  return result;
}

uint64_t sub_23BC621AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71FF4();
  *a1 = result;
  return result;
}

uint64_t SharingButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A786F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v10 = *(_BYTE *)(v2 + 16);
  v12 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  sub_23BC62304(v8, v9, v10, v12, v11, (uint64_t)v7);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v9;
  *(_BYTE *)(v13 + 48) = v10;
  sub_23BBE817C((uint64_t)v7, a2, &qword_256A786F0);
  v14 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256A786F8) + 36));
  *v14 = sub_23BC62950;
  v14[1] = (uint64_t (*)())v13;
  v14[2] = 0;
  v14[3] = 0;
  sub_23BBE7EBC();
  return sub_23BBE81C0((uint64_t)v7, &qword_256A786F0);
}

uint64_t sub_23BC62304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t State;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  v48 = a6;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787A0);
  MEMORY[0x24BDAC7A8](v44);
  v46 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v43 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v42 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F48);
  v13 = MEMORY[0x24BDAC7A8](v45);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  v52 = a2;
  v21 = a3 & 1;
  v53 = a3 & 1;
  v23 = type metadata accessor for SharingButton(0, a4, a5, v22);
  sub_23BC5C72C(v23, v24, v25, v26);
  v49 = a4;
  v50 = a5;
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v20, 2, v27);
  if ((_DWORD)v28)
  {
    MEMORY[0x24BDAC7A8](v28);
    *(&v41 - 6) = a4;
    *(&v41 - 5) = a5;
    *(&v41 - 4) = a1;
    *(&v41 - 3) = a2;
    *((_BYTE *)&v41 - 16) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
    sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    v29 = v42;
    sub_23BC72048();
    KeyPath = swift_getKeyPath();
    v31 = swift_allocObject();
    *(_BYTE *)(v31 + 16) = 1;
    v32 = v43;
    v33 = v47;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v15, v29, v47);
    v34 = (uint64_t *)&v15[*(int *)(v45 + 36)];
    *v34 = KeyPath;
    v34[1] = (uint64_t)sub_23BBE87F0;
    v34[2] = v31;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v33);
    sub_23BC62B60((uint64_t)v15, (uint64_t)v17);
    sub_23BBE817C((uint64_t)v17, v46, &qword_256A73F48);
    swift_storeEnumTagMultiPayload();
    sub_23BBE7F98();
    sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    sub_23BC71E20();
    return sub_23BBE81C0((uint64_t)v17, &qword_256A73F48);
  }
  else
  {
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = a4;
    *(_QWORD *)(v36 + 24) = a5;
    *(_QWORD *)(v36 + 32) = a1;
    *(_QWORD *)(v36 + 40) = a2;
    *(_BYTE *)(v36 + 48) = v21;
    MEMORY[0x24BDAC7A8](v36);
    *(&v41 - 6) = a4;
    *(&v41 - 5) = a5;
    *(&v41 - 4) = a1;
    *(&v41 - 3) = a2;
    *((_BYTE *)&v41 - 16) = v21;
    sub_23BBE7EBC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
    sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    v37 = v42;
    sub_23BC72048();
    v38 = v43;
    v39 = v47;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v46, v37, v47);
    swift_storeEnumTagMultiPayload();
    sub_23BBE7F98();
    sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    sub_23BC71E20();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
    v40 = sub_23BC71B5C();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v20, v40);
  }
}

uint64_t sub_23BC627C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SharingButton(0, a4, a5, a4);
  return sub_23BC72024();
}

uint64_t sub_23BC62864(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  char v23;

  v12 = type metadata accessor for SharingButtonAction();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = a1;
  v22[2] = a2;
  v23 = a3 & 1;
  v16 = type metadata accessor for SharingButton(0, a4, a5, v15);
  sub_23BC5C72C(v16, v17, v18, v19);
  v20 = sub_23BC71B5C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, a6, 3, v20);
  sub_23BC72198();
  swift_release();
  return sub_23BC536FC((uint64_t)v14);
}

uint64_t sub_23BC62950()
{
  return sub_23BC62B00(1);
}

uint64_t sub_23BC62958()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SharingButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharingButton);
}

unint64_t sub_23BC629A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A78780;
  if (!qword_256A78780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256A786F8);
    v2[0] = sub_23BC62A0C();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A78780);
  }
  return result;
}

unint64_t sub_23BC62A0C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256A78788;
  if (!qword_256A78788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A786F0);
    v2 = sub_23BC62A70();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A78788);
  }
  return result;
}

unint64_t sub_23BC62A70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A78790;
  if (!qword_256A78790)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78798);
    v2[0] = sub_23BBE7F98();
    v2[1] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A78790);
  }
  return result;
}

uint64_t sub_23BC62AF8()
{
  return sub_23BC62B00(2);
}

uint64_t sub_23BC62B00(uint64_t a1)
{
  uint64_t v1;

  return sub_23BC62864(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23BC62B28()
{
  uint64_t v0;

  return sub_23BC627C8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BC62B50()
{
  return swift_deallocObject();
}

uint64_t sub_23BC62B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73F48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BC62BA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23BC61E54(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t SharingButtonLoadState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t State;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23BC71B5C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC62D40(v0, (uint64_t)v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 2, v8))
    return sub_23BC727B0();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23BC72264();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t type metadata accessor for SharingButtonLoadState()
{
  uint64_t result;

  result = qword_256A78890;
  if (!qword_256A78890)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BC62D40(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for SharingButtonLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t sub_23BC62D88(char a1)
{
  return *(_QWORD *)&aIdle_10[8 * a1];
}

uint64_t sub_23BC62DA8()
{
  char *v0;

  return sub_23BC62D88(*v0);
}

uint64_t sub_23BC62DB0()
{
  sub_23BC650E4();
  return sub_23BC72828();
}

uint64_t sub_23BC62DD8()
{
  sub_23BC650E4();
  return sub_23BC72834();
}

uint64_t sub_23BC62E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC68A20(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC62E2C()
{
  sub_23BC65128();
  return sub_23BC72828();
}

uint64_t sub_23BC62E54()
{
  sub_23BC65128();
  return sub_23BC72834();
}

uint64_t sub_23BC62E7C()
{
  sub_23BC6516C();
  return sub_23BC72828();
}

uint64_t sub_23BC62EA4()
{
  sub_23BC6516C();
  return sub_23BC72834();
}

uint64_t sub_23BC62ECC()
{
  sub_23BC651B0();
  return sub_23BC72828();
}

uint64_t sub_23BC62EF4()
{
  sub_23BC651B0();
  return sub_23BC72834();
}

uint64_t SharingButtonLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t State;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787A8);
  v27 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23BC71B5C();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787B0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787B8);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787C0);
  v34 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC650E4();
  sub_23BC7281C();
  sub_23BC62D40(v33, (uint64_t)v12);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v12, 2, v16);
  if (v17)
  {
    if (v17 == 1)
    {
      v35 = 0;
      sub_23BC651B0();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    }
    else
    {
      v36 = 1;
      sub_23BC6516C();
      sub_23BC726A8();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v15, v13);
  }
  else
  {
    v18 = v27;
    v19 = v28;
    v20 = v30;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v32, v12, v30);
    v37 = 2;
    sub_23BC65128();
    v21 = v29;
    sub_23BC726A8();
    sub_23BBF377C(&qword_256A74D38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    v22 = v31;
    sub_23BC72720();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v15, v13);
  }
}

uint64_t SharingButtonLoadState.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t State;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23BC71B5C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BC62D40(v1, (uint64_t)v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 2, v9))
  {
    sub_23BC727B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23BC727B0();
    sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_23BC727E0();
}

uint64_t SharingButtonLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t State;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;

  v53 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787E8);
  v4 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  v52 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787F0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A787F8);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78800);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for SharingButtonLoadState();
  v15 = MEMORY[0x24BDAC7A8](State);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v44 - v18;
  v20 = a1[3];
  v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23BC650E4();
  v57 = v13;
  v21 = v59;
  sub_23BC72810();
  if (!v21)
  {
    v22 = v54;
    v23 = v55;
    v45 = v17;
    v46 = v19;
    v24 = v56;
    v59 = v11;
    v25 = sub_23BC72690();
    v26 = (char *)v25;
    if (*(_QWORD *)(v25 + 16) == 1)
    {
      v27 = v57;
      v28 = v59;
      if (*(_BYTE *)(v25 + 32))
      {
        if (*(_BYTE *)(v25 + 32) != 1)
        {
          v62 = 2;
          sub_23BC65128();
          v36 = v27;
          sub_23BC72600();
          v37 = v53;
          sub_23BC71B5C();
          v55 = v26;
          sub_23BBF377C(&qword_256A74D48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
          v40 = (uint64_t)v45;
          v41 = v51;
          sub_23BC72684();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v41);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v10);
          v42 = (uint64_t)v58;
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 0, 2, v43);
          v30 = (uint64_t)v46;
          sub_23BC651F4(v40, (uint64_t)v46);
LABEL_12:
          sub_23BC651F4(v30, v37);
          return __swift_destroy_boxed_opaque_existential_1(v42);
        }
        v61 = 1;
        sub_23BC6516C();
        sub_23BC72600();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v23, v50);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v10);
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
        v30 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v46, 2, 2, v29);
      }
      else
      {
        v60 = 0;
        sub_23BC651B0();
        sub_23BC72600();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v48);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v10);
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
        v30 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v46, 1, 2, v39);
      }
      v42 = (uint64_t)v58;
      v37 = v53;
      goto LABEL_12;
    }
    v31 = v10;
    v32 = sub_23BC725A0();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v34 = State;
    v35 = v57;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v31);
  }
  v42 = (uint64_t)v58;
  return __swift_destroy_boxed_opaque_existential_1(v42);
}

uint64_t sub_23BC63978@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SharingButtonLoadState.init(from:)(a1, a2);
}

uint64_t sub_23BC6398C(_QWORD *a1)
{
  return SharingButtonLoadState.encode(to:)(a1);
}

uint64_t sub_23BC639A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23BC71B5C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC62D40(v0, (uint64_t)v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 2, v8))
    return sub_23BC727B0();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23BC72264();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_23BC63AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23BC71B5C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC727A4();
  sub_23BC62D40(v1, (uint64_t)v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 2, v9))
  {
    sub_23BC727B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_23BC727B0();
    sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_23BC727E0();
}

uint64_t SharingButtonState.shareLinkPicker.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BBE817C(v2 + *(int *)(a1 + 44), a2, &qword_256A74420);
}

uint64_t SharingButtonState.shareLinkPicker.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BBF117C(a1, v2 + *(int *)(a2 + 44));
}

uint64_t (*SharingButtonState.shareLinkPicker.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SharingButtonState.loadState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BC62D40(v2 + *(int *)(a1 + 48), a2);
}

uint64_t SharingButtonState.loadState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BC65238(a1, v2 + *(int *)(a2 + 48));
}

uint64_t (*SharingButtonState.loadState.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SharingButtonState.init(identifier:locale:presentationContextKey:shareLinkPicker:loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a8, a1, a6);
  v16 = (int *)type metadata accessor for SharingButtonState(0, a6, a7, v15);
  v17 = a8 + v16[9];
  v18 = sub_23BC71C4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  v19 = a8 + v16[10];
  v20 = sub_23BC71C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a3, v20);
  sub_23BBE87F8(a4, a8 + v16[11], &qword_256A74420);
  return sub_23BC651F4(a5, a8 + v16[12]);
}

uint64_t sub_23BC63DC4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023BC81D00 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E694C6572616873 && a2 == 0xEF72656B6369506BLL || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23BC63FE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23BC64018 + 4 * byte_23BC803E0[a1]))(0xD000000000000016, 0x800000023BC81D00);
}

uint64_t sub_23BC64018()
{
  return 0x696669746E656469;
}

uint64_t sub_23BC64034()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23BC64048()
{
  return 0x6E694C6572616873;
}

uint64_t sub_23BC6406C()
{
  return 0x7461745364616F6CLL;
}

uint64_t sub_23BC64088()
{
  unsigned __int8 *v0;

  return sub_23BC63FE0(*v0);
}

uint64_t sub_23BC64094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC63DC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC640C0(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC8098C, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC640F4(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC8098C, a1);
  return sub_23BC72834();
}

uint64_t SharingButtonState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[4];
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v14[0] = a2;
  v14[1] = v5;
  v7 = type metadata accessor for SharingButtonState.CodingKeys(255, v5, v6, a4);
  MEMORY[0x24260ED10](&unk_23BC8098C, v7);
  v8 = sub_23BC7272C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC7281C();
  v19 = 0;
  v12 = v14[3];
  sub_23BC72720();
  if (!v12)
  {
    v18 = 1;
    sub_23BC71C4C();
    sub_23BBF377C(&qword_256A74440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23BC72720();
    v17 = 2;
    sub_23BC71C34();
    sub_23BBF377C(&qword_256A74450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23BC72720();
    v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
    sub_23BBF1264(&qword_256A74458, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
    sub_23BC72720();
    v15 = 4;
    type metadata accessor for SharingButtonLoadState();
    sub_23BBF377C(&qword_256A78808, (uint64_t (*)(uint64_t))type metadata accessor for SharingButtonLoadState, (uint64_t)&protocol conformance descriptor for SharingButtonLoadState);
    sub_23BC72720();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t SharingButtonState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t State;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;

  v35 = a4;
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v37 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23BC71C34();
  v41 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v40 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23BC71C4C();
  v45 = *(_QWORD *)(v47 - 8);
  v10 = MEMORY[0x24BDAC7A8](v47);
  v44 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v50 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SharingButtonState.CodingKeys(255, a2, a3, v13);
  MEMORY[0x24260ED10](&unk_23BC8098C, v14);
  v52 = sub_23BC7269C();
  v43 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v16 = (char *)&v33 - v15;
  v49 = a2;
  v46 = a3;
  v18 = (int *)type metadata accessor for SharingButtonState(0, a2, a3, v17);
  v19 = *((_QWORD *)v18 - 1);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v33 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v51 = v16;
  v22 = (uint64_t)v53;
  sub_23BC72810();
  if (v22)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v44;
  v24 = v45;
  v34 = v19;
  v25 = v47;
  v26 = v48;
  v53 = a1;
  v58 = 0;
  v27 = v49;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v21, v50, v27);
  v57 = 1;
  sub_23BBF377C(&qword_256A74460, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v21[v18[9]], v23, v25);
  v56 = 2;
  sub_23BBF377C(&qword_256A74470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v28 = v40;
  sub_23BC72684();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v21[v18[10]], v28, v26);
  v55 = 3;
  sub_23BBF1264(&qword_256A74478, (uint64_t)&protocol conformance descriptor for ModalPresentation<A>);
  v29 = (uint64_t)v39;
  sub_23BC72684();
  sub_23BBE87F8(v29, (uint64_t)&v21[v18[11]], &qword_256A74420);
  v54 = 4;
  sub_23BBF377C(&qword_256A78810, (uint64_t (*)(uint64_t))type metadata accessor for SharingButtonLoadState, (uint64_t)&protocol conformance descriptor for SharingButtonLoadState);
  v30 = (uint64_t)v37;
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v51, v52);
  sub_23BC651F4(v30, (uint64_t)&v21[v18[12]]);
  v31 = v34;
  (*(void (**)(uint64_t, char *, int *))(v34 + 16))(v35, v21, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return (*(uint64_t (**)(char *, int *))(v31 + 8))(v21, v18);
}

uint64_t sub_23BC64974@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return SharingButtonState.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23BC64990(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return SharingButtonState.encode(to:)(a1, a2, a3, a4);
}

uint64_t SharingButtonState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t State;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v5 = sub_23BC71B5C();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BC71C34();
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v30 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v37 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74428);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v34 = (uint64_t)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74420);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BC72264();
  sub_23BC71C4C();
  sub_23BBF377C(&qword_256A74430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23BC72264();
  sub_23BBF377C((unint64_t *)&qword_256A74438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v35 = v7;
  sub_23BC72264();
  sub_23BBE817C(v2 + *(int *)(a2 + 44), (uint64_t)v19, &qword_256A74420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11) == 1)
  {
    sub_23BC727B0();
  }
  else
  {
    sub_23BBE87F8((uint64_t)v19, (uint64_t)v16, &qword_256A74428);
    sub_23BC727B0();
    v20 = v34;
    sub_23BBE817C((uint64_t)v16, v34, &qword_256A74428);
    v21 = v35;
    v22 = v36;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v20, 1, v35) == 1)
    {
      sub_23BC727BC();
    }
    else
    {
      v23 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v30, v20, v21);
      sub_23BC727BC();
      sub_23BC72264();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
    }
    sub_23BBE81C0((uint64_t)v16, &qword_256A74428);
  }
  v24 = v37;
  sub_23BC62D40(v3 + *(int *)(a2 + 48), v37);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 2, v25))
    return sub_23BC727B0();
  v27 = v31;
  v26 = v32;
  v28 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v31, v24, v33);
  sub_23BC727B0();
  sub_23BBF377C(&qword_256A74D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23BC72264();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v27, v28);
}

uint64_t static SharingButtonState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int *v9;

  if ((sub_23BC7227C() & 1) != 0
    && (v9 = (int *)type metadata accessor for SharingButtonState(0, a3, a4, v8),
        (MEMORY[0x24260DE7C](a1 + v9[9], a2 + v9[9]) & 1) != 0)
    && (sub_23BC71C1C() & 1) != 0
    && (sub_23BBEE428(a1 + v9[11], a2 + v9[11]) & 1) != 0)
  {
    return _s14FitnessActions22SharingButtonLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v9[12], a2 + v9[12]);
  }
  else
  {
    return 0;
  }
}

uint64_t SharingButtonState.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  SharingButtonState.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

uint64_t sub_23BC64E88(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  SharingButtonState.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

uint64_t sub_23BC64EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static SharingButtonState.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t _s14FitnessActions22SharingButtonLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t State;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = sub_23BC71B5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for SharingButtonLoadState();
  MEMORY[0x24BDAC7A8](State);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A789F0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_23BC62D40(a1, (uint64_t)v14);
  sub_23BC62D40(a2, v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  v18 = v17(v14, 2, v16);
  if (!v18)
  {
    sub_23BC62D40((uint64_t)v14, (uint64_t)v10);
    if (!v17((char *)v15, 2, v16))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v19 = MEMORY[0x24260DD8C](v10, v7);
      v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      sub_23BC68AA4((uint64_t)v14);
      return v19 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v18 == 1)
  {
    if (v17((char *)v15, 2, v16) != 1)
      goto LABEL_9;
  }
  else if (v17((char *)v15, 2, v16) != 2)
  {
LABEL_9:
    sub_23BBE81C0((uint64_t)v14, &qword_256A789F0);
    v19 = 0;
    return v19 & 1;
  }
  sub_23BC68AA4((uint64_t)v14);
  v19 = 1;
  return v19 & 1;
}

unint64_t sub_23BC650E4()
{
  unint64_t result;

  result = qword_256A787C8;
  if (!qword_256A787C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80ACC, &type metadata for SharingButtonLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A787C8);
  }
  return result;
}

unint64_t sub_23BC65128()
{
  unint64_t result;

  result = qword_256A787D0;
  if (!qword_256A787D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80A7C, &type metadata for SharingButtonLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A787D0);
  }
  return result;
}

unint64_t sub_23BC6516C()
{
  unint64_t result;

  result = qword_256A787D8;
  if (!qword_256A787D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80A2C, &type metadata for SharingButtonLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A787D8);
  }
  return result;
}

unint64_t sub_23BC651B0()
{
  unint64_t result;

  result = qword_256A787E0;
  if (!qword_256A787E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC809DC, &type metadata for SharingButtonLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A787E0);
  }
  return result;
}

uint64_t sub_23BC651F4(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for SharingButtonLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t sub_23BC65238(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for SharingButtonLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t type metadata accessor for SharingButtonState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharingButtonState);
}

uint64_t type metadata accessor for SharingButtonState.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharingButtonState.CodingKeys);
}

uint64_t sub_23BC65294()
{
  return sub_23BBF377C(&qword_256A78818, (uint64_t (*)(uint64_t))type metadata accessor for SharingButtonLoadState, (uint64_t)&protocol conformance descriptor for SharingButtonLoadState);
}

void sub_23BC652C0()
{
  JUMPOUT(0x24260ED10);
}

uint64_t *initializeBufferWithCopyOfBuffer for SharingButtonLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23BC71B5C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for SharingButtonLoadState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23BC71B5C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for SharingButtonLoadState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23BC71B5C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for SharingButtonLoadState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23BC71B5C();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_23BBE81C0((uint64_t)a1, &qword_256A78140);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23BC71B5C();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for SharingButtonLoadState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23BC71B5C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for SharingButtonLoadState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23BC71B5C();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_23BBE81C0((uint64_t)a1, &qword_256A78140);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23BC71B5C();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingButtonLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC6579C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SharingButtonLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BC657F8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BC65850(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23BC6588C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23BC658D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BC71B5C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_23BC65924()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_23BC71C4C();
    if (v2 <= 0x3F)
    {
      result = sub_23BC71C34();
      if (v3 <= 0x3F)
      {
        result = sub_23BBF2D28();
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for SharingButtonLoadState();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_23BC65A00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  size_t v14;
  size_t v15;
  unint64_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  void (*v38)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v39;
  unint64_t v40;
  void (*v41)(unint64_t, unint64_t, uint64_t);
  void *v42;
  _BYTE *v43;
  size_t v44;
  size_t v45;
  size_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _BYTE *v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v65;
  size_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  size_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;

  v73 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(v73 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v74 = sub_23BC71C4C();
  v5 = *(_QWORD *)(v74 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v4 + v6;
  v9 = (v4 + v7) & ~v7;
  v10 = *(_QWORD *)(v5 + 64);
  v77 = sub_23BC71C34();
  v11 = *(_QWORD *)(v77 - 8);
  v13 = *(_DWORD *)(v11 + 80);
  v12 = *(_DWORD *)(v11 + 84);
  v72 = v10;
  v75 = v11;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = v14 + v13;
  v16 = (v15 + ((v10 + v13 + v9) & ~(unint64_t)v13)) & ~(unint64_t)v13;
  if (v12)
    v17 = v14;
  else
    v17 = v14 + 1;
  v76 = v12;
  v71 = v17;
  if (v12 >= 2)
    v18 = v17;
  else
    v18 = v17 + 1;
  v19 = sub_23BC71B5C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80);
  v22 = *(_DWORD *)(v20 + 84);
  v23 = v21;
  v24 = *(_QWORD *)(v20 + 64);
  v25 = v24;
  if (v22 <= 1)
  {
    if (v24 <= 3)
    {
      v27 = (~(-1 << (8 * v24)) - v22 + 2) >> (8 * v24);
      v28 = v27 != 0;
      if (v27 >= 0xFF)
        v28 = 2;
      if (v27 <= 0xFFFE)
        v26 = v28;
      else
        v26 = 4;
    }
    else
    {
      v26 = 1;
    }
    v25 = v26 + v24;
  }
  v29 = v25 + ((v18 + v21 + v16) & ~(unint64_t)v21);
  v30 = v6 | v13 | v21 | *(_DWORD *)(v3 + 80);
  v31 = (v6 | v13 | v21 | *(_BYTE *)(v3 + 80));
  v32 = v30 & 0x100000;
  if (v31 > 7 || v29 > 0x18 || v32 != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    v36 = (uint64_t *)(v35 + ((v31 + 16) & ~v31));
    swift_retain();
    return v36;
  }
  v68 = *(_DWORD *)(v20 + 80);
  v69 = *(_QWORD *)(v19 - 8);
  v65 = v19;
  v66 = *(_QWORD *)(v20 + 64);
  v70 = *(_DWORD *)(v20 + 84);
  v37 = ~(unint64_t)v13;
  v67 = ~v23;
  v38 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16);
  v36 = a1;
  v38(a1, a2, v73);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v8) & ~(unint64_t)v6, ((unint64_t)a2 + v8) & ~(unint64_t)v6, v74);
  v39 = ((((unint64_t)a1 + v8) & ~(unint64_t)v6) + v72 + v13) & v37;
  v40 = ((((unint64_t)a2 + v8) & ~v7) + v72 + v13) & v37;
  v41 = *(void (**)(unint64_t, unint64_t, uint64_t))(v75 + 16);
  v41(v39, v40, v77);
  v42 = (void *)((v15 + v39) & v37);
  v43 = (_BYTE *)((v15 + v40) & v37);
  if (v76 <= 1)
  {
    v45 = v71;
    v44 = v18;
    v46 = v66;
    if (v43[v71])
    {
      v47 = (v43[v71] - 1) << (8 * v71);
      if (v71 > 3)
        v47 = 0;
      if ((_DWORD)v71)
      {
        if (v71 <= 3)
          v48 = v71;
        else
          v48 = 4;
        __asm { BR              X11 }
      }
      if (v47 != -1)
        goto LABEL_40;
    }
LABEL_34:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v75 + 48))(v43, 1, v77))
    {
      memcpy(v42, v43, v45);
    }
    else
    {
      v41((unint64_t)v42, (unint64_t)v43, v77);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v42, 0, 1, v77);
    }
    v49 = v70;
    v50 = v68;
    v51 = v69;
    if (v76 <= 1)
      *((_BYTE *)v42 + v45) = 0;
    goto LABEL_41;
  }
  v46 = v66;
  v45 = v71;
  v44 = v18;
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v75 + 48))(v43, v76, v77) < 2)
    goto LABEL_34;
LABEL_40:
  memcpy(v42, v43, v44);
  v49 = v70;
  v50 = v68;
  v51 = v69;
LABEL_41:
  v52 = (char *)(((unint64_t)v42 + v44 + v50) & v67);
  v53 = (_BYTE *)((unint64_t)&v43[v44 + v50] & v67);
  if (v49 > 1)
    goto LABEL_60;
  if (v46 > 3)
    goto LABEL_43;
  v55 = (~(-1 << (8 * v46)) - v49 + 2) >> (8 * v46);
  if (v55 > 0xFFFE)
  {
    v54 = *(_DWORD *)&v53[v46];
    if (!v54)
      goto LABEL_59;
    goto LABEL_50;
  }
  if (v55 > 0xFE)
  {
    v54 = *(unsigned __int16 *)&v53[v46];
    if (!*(_WORD *)&v53[v46])
      goto LABEL_59;
    goto LABEL_50;
  }
  if (v55)
  {
LABEL_43:
    v54 = v53[v46];
    if (!v53[v46])
      goto LABEL_59;
LABEL_50:
    v56 = (v54 - 1) << (8 * v46);
    if (v46 > 3)
      v56 = 0;
    if ((_DWORD)v46)
    {
      if (v46 <= 3)
        v57 = v46;
      else
        v57 = 4;
      __asm { BR              X11 }
    }
    if (v56 + (_DWORD)v49 != -1)
      goto LABEL_67;
LABEL_76:
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))(((unint64_t)v42 + v44 + v50) & v67, (unint64_t)&v43[v44 + v50] & v67, v65);
    LODWORD(v49) = v70;
    if (v46 > 3)
      goto LABEL_80;
    goto LABEL_77;
  }
LABEL_59:
  if (!(_DWORD)v49)
    goto LABEL_76;
LABEL_60:
  v58 = (unint64_t)&v43[v44 + v50] & v67;
  v59 = v51;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v51 + 48))(v58, v49, v65))
  {
    if (v49 > 1)
    {
LABEL_75:
      memcpy(v52, v53, v46);
      return v36;
    }
LABEL_67:
    if (v46 <= 3)
    {
      v61 = (~(-1 << (8 * v46)) - v49 + 2) >> (8 * v46);
      v62 = v61 != 0;
      if (v61 >= 0xFF)
        v62 = 2;
      if (v61 <= 0xFFFE)
        v60 = v62;
      else
        v60 = 4;
    }
    else
    {
      v60 = 1;
    }
    v46 += v60;
    goto LABEL_75;
  }
  (*(void (**)(char *, _BYTE *, uint64_t))(v59 + 16))(v52, v53, v65);
  if (v49 > 1)
    return v36;
  if (v46 > 3)
  {
LABEL_80:
    v52[v46] = 0;
    return v36;
  }
LABEL_77:
  v63 = (~(-1 << (8 * v46)) - v49 + 2) >> (8 * v46);
  if (v63 > 0xFFFE)
  {
    *(_DWORD *)&v52[v46] = 0;
    return v36;
  }
  if (v63 > 0xFE)
  {
    *(_WORD *)&v52[v46] = 0;
    return v36;
  }
  if (v63)
    goto LABEL_80;
  return v36;
}

uint64_t sub_23BC65FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(unint64_t, uint64_t);
  uint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_23BC71C4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_23BC71C34();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v13 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v13(v12, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = (v14 + v11 + v12) & ~v11;
  v16 = *(_DWORD *)(v10 + 84);
  if (v16)
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = v14 + 1;
  if (v16 > 1)
  {
    if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v10 + 48))(v15, *(unsigned int *)(v10 + 84), v9) >= 2)goto LABEL_18;
    goto LABEL_16;
  }
  if (!*(_BYTE *)(v15 + v17))
    goto LABEL_16;
  v18 = (*(unsigned __int8 *)(v15 + v17) - 1) << (8 * v17);
  if (v17 > 3)
    v18 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v19 = v17;
    else
      v19 = 4;
    __asm { BR              X11 }
  }
  if (v18 == -1)
  {
LABEL_16:
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
      v13(v15, v9);
  }
LABEL_18:
  if (v16 >= 2)
    v20 = v17;
  else
    v20 = v17 + 1;
  v21 = sub_23BC71B5C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (v20 + *(unsigned __int8 *)(v22 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = *(_DWORD *)(v22 + 84);
  if (v24 > 1)
  {
LABEL_38:
    result = (*(uint64_t (**)(unint64_t))(v22 + 48))(v23);
    if ((_DWORD)result)
      return result;
    return (*(uint64_t (**)(unint64_t, uint64_t))(v22 + 8))(v23, v21);
  }
  v25 = *(_QWORD *)(v22 + 64);
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v28 = (~(-1 << v26) - v24 + 2) >> v26;
    if (v28 > 0xFFFE)
    {
      v27 = *(_DWORD *)(v23 + v25);
      if (!v27)
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v28 > 0xFE)
    {
      v27 = *(unsigned __int16 *)(v23 + v25);
      if (!*(_WORD *)(v23 + v25))
        goto LABEL_37;
      goto LABEL_30;
    }
    if (!v28)
    {
LABEL_37:
      if (!v24)
        return (*(uint64_t (**)(unint64_t, uint64_t))(v22 + 8))(v23, v21);
      goto LABEL_38;
    }
  }
  v27 = *(unsigned __int8 *)(v23 + v25);
  if (!*(_BYTE *)(v23 + v25))
    goto LABEL_37;
LABEL_30:
  v29 = (v27 - 1) << v26;
  if (v25 > 3)
    v29 = 0;
  if ((_DWORD)v25)
  {
    if (v25 > 3)
      LODWORD(v25) = 4;
    __asm { BR              X11 }
  }
  result = v24 + v29 + 1;
  if (v24 + v29 == -1)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v22 + 8))(v23, v21);
  return result;
}

uint64_t sub_23BC66268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  unsigned __int8 *v22;
  unsigned int v23;
  size_t v24;
  int v25;
  int v26;
  size_t v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  unsigned int v34;
  size_t v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int v43;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = (void *)((v20 + v16 + v17) & ~v16);
  v22 = (unsigned __int8 *)((v20 + v16 + v18) & ~v16);
  v23 = *(_DWORD *)(v15 + 84);
  if (v23)
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = v20 + 1;
  if (v23 > 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, uint64_t))(v15 + 48))(v22, *(unsigned int *)(v15 + 84), v14) >= 2)
    {
LABEL_20:
      if (v23 >= 2)
        v27 = v24;
      else
        v27 = v24 + 1;
      memcpy(v21, v22, v27);
      goto LABEL_24;
    }
  }
  else if (v22[v24])
  {
    v25 = (v22[v24] - 1) << (8 * v24);
    if (v24 > 3)
      v25 = 0;
    if ((_DWORD)v24)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X11 }
    }
    if (v25 != -1)
      goto LABEL_20;
  }
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14))
  {
    memcpy(v21, v22, v24);
    if (v23 > 1)
      goto LABEL_24;
    goto LABEL_18;
  }
  v19((uint64_t)v21, (uint64_t)v22, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  if (v23 <= 1)
LABEL_18:
    *((_BYTE *)v21 + v24) = 0;
LABEL_24:
  if (v23 >= 2)
    v28 = v24;
  else
    v28 = v24 + 1;
  v29 = sub_23BC71B5C();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (_BYTE *)(((unint64_t)v21 + v28 + v31) & ~v31);
  v33 = (_BYTE *)((unint64_t)&v22[v28 + v31] & ~v31);
  v34 = *(_DWORD *)(v30 + 84);
  v35 = *(_QWORD *)(v30 + 64);
  if (v34 > 1)
    goto LABEL_46;
  if (v35 > 3)
    goto LABEL_29;
  v37 = (~(-1 << (8 * v35)) - v34 + 2) >> (8 * v35);
  if (v37 > 0xFFFE)
  {
    v36 = *(_DWORD *)&v33[v35];
    if (!v36)
      goto LABEL_45;
    goto LABEL_36;
  }
  if (v37 > 0xFE)
  {
    v36 = *(unsigned __int16 *)&v33[v35];
    if (!*(_WORD *)&v33[v35])
      goto LABEL_45;
    goto LABEL_36;
  }
  if (v37)
  {
LABEL_29:
    v36 = v33[v35];
    if (!v33[v35])
      goto LABEL_45;
LABEL_36:
    v38 = (v36 - 1) << (8 * v35);
    if (v35 > 3)
      v38 = 0;
    if ((_DWORD)v35)
    {
      if (v35 <= 3)
        v39 = *(_QWORD *)(v30 + 64);
      else
        v39 = 4;
      __asm { BR              X11 }
    }
    if (v38 + v34 != -1)
      goto LABEL_53;
LABEL_62:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 16))(v32, v33, v29);
    if (v35 > 3)
    {
LABEL_66:
      v32[v35] = 0;
      return a1;
    }
    goto LABEL_63;
  }
LABEL_45:
  if (!v34)
    goto LABEL_62;
LABEL_46:
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v30 + 48))(v33, *(unsigned int *)(v30 + 84), v29))
  {
    if (v34 > 1)
    {
LABEL_61:
      memcpy(v32, v33, v35);
      return a1;
    }
LABEL_53:
    if (v35 <= 3)
    {
      v41 = (~(-1 << (8 * v35)) - v34 + 2) >> (8 * v35);
      v42 = v41 != 0;
      if (v41 >= 0xFF)
        v42 = 2;
      if (v41 <= 0xFFFE)
        v40 = v42;
      else
        v40 = 4;
    }
    else
    {
      v40 = 1;
    }
    v35 += v40;
    goto LABEL_61;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 16))(v32, v33, v29);
  if (v34 > 1)
    return a1;
  if (v35 > 3)
    goto LABEL_66;
LABEL_63:
  v43 = (~(-1 << (8 * v35)) - v34 + 2) >> (8 * v35);
  if (v43 > 0xFFFE)
  {
    *(_DWORD *)&v32[v35] = 0;
    return a1;
  }
  if (v43 > 0xFE)
  {
    *(_WORD *)&v32[v35] = 0;
    return a1;
  }
  if (v43)
    goto LABEL_66;
  return a1;
}

uint64_t sub_23BC666AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  size_t v24;
  char v25;
  int v26;
  int v27;
  uint64_t (*v28)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t (*v33)(unsigned __int8 *, uint64_t, uint64_t);
  int v34;
  int v35;
  size_t v36;
  size_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  size_t v44;
  int v45;
  unsigned int (*v46)(_BYTE *, uint64_t, uint64_t);
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = (unsigned __int8 *)((v20 + v16 + v17) & ~v16);
  v22 = (unsigned __int8 *)((v20 + v16 + v18) & ~v16);
  v23 = *(unsigned int *)(v15 + 84);
  if ((_DWORD)v23)
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = v20 + 1;
  if (v23 > 1)
  {
    v28 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v29 = v28(v21, *(unsigned int *)(v15 + 84), v14);
    v30 = v28(v22, v23, v14);
    if (v29 >= 2)
    {
      if (v30 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14))
      {
        memcpy(v21, v22, v24);
        if (v23 > 1)
          goto LABEL_48;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 16))(v21, v22, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
        if (v23 > 1)
          goto LABEL_48;
      }
      v21[v24] = 0;
      goto LABEL_48;
    }
    if (v30 >= 2)
    {
LABEL_31:
      if (!v28(v21, 1, v14))
        (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v21, v14);
      goto LABEL_41;
    }
LABEL_33:
    v33 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v34 = v33(v21, 1, v14);
    v35 = v33(v22, 1, v14);
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 16))(v21, v22, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v35)
      {
        v19((uint64_t)v21, (uint64_t)v22, v14);
        goto LABEL_48;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v21, v14);
    }
    memcpy(v21, v22, v24);
    goto LABEL_48;
  }
  v25 = 8 * v24;
  if (!v21[v24])
    goto LABEL_29;
  v26 = (v21[v24] - 1) << v25;
  if (v24 > 3)
    v26 = 0;
  if ((_DWORD)v24)
  {
    if (v24 <= 3)
      v27 = v24;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  if (v26 == -1)
  {
LABEL_29:
    if (v22[v24])
    {
      v31 = (v22[v24] - 1) << v25;
      if (v24 > 3)
        v31 = 0;
      if ((_DWORD)v24)
      {
        if (v24 <= 3)
          v32 = v24;
        else
          v32 = 4;
        __asm { BR              X11 }
      }
      if (v31 != -1)
      {
        v28 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v22[v24] || (v22[v24] - 1) << v25 == -1)
    goto LABEL_45;
LABEL_41:
  if (v23 >= 2)
    v36 = v24;
  else
    v36 = v24 + 1;
  memcpy(v21, v22, v36);
LABEL_48:
  if (v23 >= 2)
    v37 = v24;
  else
    v37 = v24 + 1;
  v38 = sub_23BC71B5C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned __int8 *)(v39 + 80);
  v41 = (_BYTE *)((unint64_t)&v21[v37 + v40] & ~v40);
  v42 = (_BYTE *)((unint64_t)&v22[v37 + v40] & ~v40);
  v43 = *(unsigned int *)(v39 + 84);
  v44 = *(_QWORD *)(v39 + 64);
  if (v43 > 1)
  {
    v46 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48);
    if (!v46(v41, *(unsigned int *)(v39 + 84), v38))
    {
LABEL_121:
      if (v46(v42, v43, v38))
        goto LABEL_122;
      goto LABEL_136;
    }
    if (v46(v42, v43, v38))
      goto LABEL_134;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16))(v41, v42, v38);
    return a1;
  }
  if (v44 > 3)
    goto LABEL_53;
  v47 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
  if (v47 > 0xFFFE)
  {
    v45 = *(_DWORD *)&v41[v44];
    if (v45)
      goto LABEL_63;
    goto LABEL_74;
  }
  if (v47 > 0xFE)
  {
    v45 = *(unsigned __int16 *)&v41[v44];
    if (*(_WORD *)&v41[v44])
      goto LABEL_63;
LABEL_74:
    if (!(_DWORD)v43
      || !(*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v39 + 48))(v41, *(unsigned int *)(v39 + 84), v38))
    {
      goto LABEL_76;
    }
    goto LABEL_93;
  }
  if (!v47)
    goto LABEL_74;
LABEL_53:
  v45 = v41[v44];
  if (!v41[v44])
    goto LABEL_74;
LABEL_63:
  v48 = (v45 - 1) << (8 * v44);
  if (v44 > 3)
    v48 = 0;
  if ((_DWORD)v44)
  {
    if (v44 <= 3)
      v49 = *(_QWORD *)(v39 + 64);
    else
      v49 = 4;
    __asm { BR              X11 }
  }
  if (v48 + (_DWORD)v43 == -1)
  {
LABEL_76:
    if (v44 > 3)
      goto LABEL_77;
    v51 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
    if (v51 > 0xFFFE)
    {
      v50 = *(_DWORD *)&v42[v44];
      if (v50)
        goto LABEL_84;
    }
    else
    {
      if (v51 <= 0xFE)
      {
        if (!v51)
          goto LABEL_119;
LABEL_77:
        v50 = v42[v44];
        if (!v42[v44])
          goto LABEL_119;
LABEL_84:
        v52 = (v50 - 1) << (8 * v44);
        if (v44 > 3)
          v52 = 0;
        if ((_DWORD)v44)
        {
          if (v44 <= 3)
            v53 = v44;
          else
            v53 = 4;
          __asm { BR              X11 }
        }
        if ((_DWORD)v43 + v52 != -1)
        {
LABEL_122:
          (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v41, v38);
          if (v43 <= 1)
          {
            if (v44 <= 3)
            {
LABEL_124:
              v59 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
              v60 = v59 != 0;
              if (v59 >= 0xFF)
                v60 = 2;
              if (v59 <= 0xFFFE)
                v61 = v60;
              else
                v61 = 4;
              goto LABEL_133;
            }
LABEL_132:
            v61 = 1;
LABEL_133:
            v44 += v61;
          }
LABEL_134:
          memcpy(v41, v42, v44);
          return a1;
        }
LABEL_136:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 24))(v41, v42, v38);
        return a1;
      }
      v50 = *(unsigned __int16 *)&v42[v44];
      if (*(_WORD *)&v42[v44])
        goto LABEL_84;
    }
LABEL_119:
    if (!(_DWORD)v43)
      goto LABEL_136;
    v46 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48);
    goto LABEL_121;
  }
LABEL_93:
  if (v44 > 3)
    goto LABEL_94;
  v55 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
  if (v55 > 0xFFFE)
  {
    v54 = *(_DWORD *)&v42[v44];
    if (v54)
      goto LABEL_101;
  }
  else
  {
    if (v55 <= 0xFE)
    {
      if (!v55)
        goto LABEL_110;
LABEL_94:
      v54 = v42[v44];
      if (!v42[v44])
        goto LABEL_110;
LABEL_101:
      v56 = (v54 - 1) << (8 * v44);
      if (v44 > 3)
        v56 = 0;
      if ((_DWORD)v44)
      {
        if (v44 <= 3)
          v57 = v44;
        else
          v57 = 4;
        __asm { BR              X11 }
      }
      if (v56 + (_DWORD)v43 == -1)
        goto LABEL_112;
LABEL_131:
      if (v44 <= 3)
        goto LABEL_124;
      goto LABEL_132;
    }
    v54 = *(unsigned __int16 *)&v42[v44];
    if (*(_WORD *)&v42[v44])
      goto LABEL_101;
  }
LABEL_110:
  if ((_DWORD)v43 && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48))(v42, v43, v38))
    goto LABEL_131;
LABEL_112:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16))(v41, v42, v38);
  if (v44 <= 3)
  {
    v58 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
    if (v58 > 0xFFFE)
    {
      *(_DWORD *)&v41[v44] = 0;
      return a1;
    }
    if (v58 > 0xFE)
    {
      *(_WORD *)&v41[v44] = 0;
      return a1;
    }
    if (!v58)
      return a1;
  }
  v41[v44] = 0;
  return a1;
}

uint64_t sub_23BC66F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  unsigned __int8 *v22;
  unsigned int v23;
  size_t v24;
  int v25;
  int v26;
  size_t v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  unsigned int v34;
  size_t v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int v43;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = (void *)((v20 + v16 + v17) & ~v16);
  v22 = (unsigned __int8 *)((v20 + v16 + v18) & ~v16);
  v23 = *(_DWORD *)(v15 + 84);
  if (v23)
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = v20 + 1;
  if (v23 > 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, uint64_t))(v15 + 48))(v22, *(unsigned int *)(v15 + 84), v14) >= 2)
    {
LABEL_20:
      if (v23 >= 2)
        v27 = v24;
      else
        v27 = v24 + 1;
      memcpy(v21, v22, v27);
      goto LABEL_24;
    }
  }
  else if (v22[v24])
  {
    v25 = (v22[v24] - 1) << (8 * v24);
    if (v24 > 3)
      v25 = 0;
    if ((_DWORD)v24)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X11 }
    }
    if (v25 != -1)
      goto LABEL_20;
  }
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14))
  {
    memcpy(v21, v22, v24);
    if (v23 > 1)
      goto LABEL_24;
    goto LABEL_18;
  }
  v19((uint64_t)v21, (uint64_t)v22, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  if (v23 <= 1)
LABEL_18:
    *((_BYTE *)v21 + v24) = 0;
LABEL_24:
  if (v23 >= 2)
    v28 = v24;
  else
    v28 = v24 + 1;
  v29 = sub_23BC71B5C();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (_BYTE *)(((unint64_t)v21 + v28 + v31) & ~v31);
  v33 = (_BYTE *)((unint64_t)&v22[v28 + v31] & ~v31);
  v34 = *(_DWORD *)(v30 + 84);
  v35 = *(_QWORD *)(v30 + 64);
  if (v34 > 1)
    goto LABEL_46;
  if (v35 > 3)
    goto LABEL_29;
  v37 = (~(-1 << (8 * v35)) - v34 + 2) >> (8 * v35);
  if (v37 > 0xFFFE)
  {
    v36 = *(_DWORD *)&v33[v35];
    if (!v36)
      goto LABEL_45;
    goto LABEL_36;
  }
  if (v37 > 0xFE)
  {
    v36 = *(unsigned __int16 *)&v33[v35];
    if (!*(_WORD *)&v33[v35])
      goto LABEL_45;
    goto LABEL_36;
  }
  if (v37)
  {
LABEL_29:
    v36 = v33[v35];
    if (!v33[v35])
      goto LABEL_45;
LABEL_36:
    v38 = (v36 - 1) << (8 * v35);
    if (v35 > 3)
      v38 = 0;
    if ((_DWORD)v35)
    {
      if (v35 <= 3)
        v39 = *(_QWORD *)(v30 + 64);
      else
        v39 = 4;
      __asm { BR              X11 }
    }
    if (v38 + v34 != -1)
      goto LABEL_53;
LABEL_62:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v32, v33, v29);
    if (v35 > 3)
    {
LABEL_66:
      v32[v35] = 0;
      return a1;
    }
    goto LABEL_63;
  }
LABEL_45:
  if (!v34)
    goto LABEL_62;
LABEL_46:
  if ((*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v30 + 48))(v33, *(unsigned int *)(v30 + 84), v29))
  {
    if (v34 > 1)
    {
LABEL_61:
      memcpy(v32, v33, v35);
      return a1;
    }
LABEL_53:
    if (v35 <= 3)
    {
      v41 = (~(-1 << (8 * v35)) - v34 + 2) >> (8 * v35);
      v42 = v41 != 0;
      if (v41 >= 0xFF)
        v42 = 2;
      if (v41 <= 0xFFFE)
        v40 = v42;
      else
        v40 = 4;
    }
    else
    {
      v40 = 1;
    }
    v35 += v40;
    goto LABEL_61;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v32, v33, v29);
  if (v34 > 1)
    return a1;
  if (v35 > 3)
    goto LABEL_66;
LABEL_63:
  v43 = (~(-1 << (8 * v35)) - v34 + 2) >> (8 * v35);
  if (v43 > 0xFFFE)
  {
    *(_DWORD *)&v32[v35] = 0;
    return a1;
  }
  if (v43 > 0xFE)
  {
    *(_WORD *)&v32[v35] = 0;
    return a1;
  }
  if (v43)
    goto LABEL_66;
  return a1;
}

uint64_t sub_23BC67350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  size_t v24;
  char v25;
  int v26;
  int v27;
  uint64_t (*v28)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t (*v33)(unsigned __int8 *, uint64_t, uint64_t);
  int v34;
  int v35;
  size_t v36;
  size_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  size_t v44;
  int v45;
  unsigned int (*v46)(_BYTE *, uint64_t, uint64_t);
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BC71C4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = sub_23BC71C34();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = (unsigned __int8 *)((v20 + v16 + v17) & ~v16);
  v22 = (unsigned __int8 *)((v20 + v16 + v18) & ~v16);
  v23 = *(unsigned int *)(v15 + 84);
  if ((_DWORD)v23)
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = v20 + 1;
  if (v23 > 1)
  {
    v28 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v29 = v28(v21, *(unsigned int *)(v15 + 84), v14);
    v30 = v28(v22, v23, v14);
    if (v29 >= 2)
    {
      if (v30 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14))
      {
        memcpy(v21, v22, v24);
        if (v23 > 1)
          goto LABEL_48;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 32))(v21, v22, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
        if (v23 > 1)
          goto LABEL_48;
      }
      v21[v24] = 0;
      goto LABEL_48;
    }
    if (v30 >= 2)
    {
LABEL_31:
      if (!v28(v21, 1, v14))
        (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v21, v14);
      goto LABEL_41;
    }
LABEL_33:
    v33 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
    v34 = v33(v21, 1, v14);
    v35 = v33(v22, 1, v14);
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 32))(v21, v22, v14);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v35)
      {
        v19((uint64_t)v21, (uint64_t)v22, v14);
        goto LABEL_48;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v21, v14);
    }
    memcpy(v21, v22, v24);
    goto LABEL_48;
  }
  v25 = 8 * v24;
  if (!v21[v24])
    goto LABEL_29;
  v26 = (v21[v24] - 1) << v25;
  if (v24 > 3)
    v26 = 0;
  if ((_DWORD)v24)
  {
    if (v24 <= 3)
      v27 = v24;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  if (v26 == -1)
  {
LABEL_29:
    if (v22[v24])
    {
      v31 = (v22[v24] - 1) << v25;
      if (v24 > 3)
        v31 = 0;
      if ((_DWORD)v24)
      {
        if (v24 <= 3)
          v32 = v24;
        else
          v32 = 4;
        __asm { BR              X11 }
      }
      if (v31 != -1)
      {
        v28 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!v22[v24] || (v22[v24] - 1) << v25 == -1)
    goto LABEL_45;
LABEL_41:
  if (v23 >= 2)
    v36 = v24;
  else
    v36 = v24 + 1;
  memcpy(v21, v22, v36);
LABEL_48:
  if (v23 >= 2)
    v37 = v24;
  else
    v37 = v24 + 1;
  v38 = sub_23BC71B5C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned __int8 *)(v39 + 80);
  v41 = (_BYTE *)((unint64_t)&v21[v37 + v40] & ~v40);
  v42 = (_BYTE *)((unint64_t)&v22[v37 + v40] & ~v40);
  v43 = *(unsigned int *)(v39 + 84);
  v44 = *(_QWORD *)(v39 + 64);
  if (v43 > 1)
  {
    v46 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48);
    if (!v46(v41, *(unsigned int *)(v39 + 84), v38))
    {
LABEL_121:
      if (v46(v42, v43, v38))
        goto LABEL_122;
      goto LABEL_136;
    }
    if (v46(v42, v43, v38))
      goto LABEL_134;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 32))(v41, v42, v38);
    return a1;
  }
  if (v44 > 3)
    goto LABEL_53;
  v47 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
  if (v47 > 0xFFFE)
  {
    v45 = *(_DWORD *)&v41[v44];
    if (v45)
      goto LABEL_63;
    goto LABEL_74;
  }
  if (v47 > 0xFE)
  {
    v45 = *(unsigned __int16 *)&v41[v44];
    if (*(_WORD *)&v41[v44])
      goto LABEL_63;
LABEL_74:
    if (!(_DWORD)v43
      || !(*(unsigned int (**)(_BYTE *, _QWORD, uint64_t))(v39 + 48))(v41, *(unsigned int *)(v39 + 84), v38))
    {
      goto LABEL_76;
    }
    goto LABEL_93;
  }
  if (!v47)
    goto LABEL_74;
LABEL_53:
  v45 = v41[v44];
  if (!v41[v44])
    goto LABEL_74;
LABEL_63:
  v48 = (v45 - 1) << (8 * v44);
  if (v44 > 3)
    v48 = 0;
  if ((_DWORD)v44)
  {
    if (v44 <= 3)
      v49 = *(_QWORD *)(v39 + 64);
    else
      v49 = 4;
    __asm { BR              X11 }
  }
  if (v48 + (_DWORD)v43 == -1)
  {
LABEL_76:
    if (v44 > 3)
      goto LABEL_77;
    v51 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
    if (v51 > 0xFFFE)
    {
      v50 = *(_DWORD *)&v42[v44];
      if (v50)
        goto LABEL_84;
    }
    else
    {
      if (v51 <= 0xFE)
      {
        if (!v51)
          goto LABEL_119;
LABEL_77:
        v50 = v42[v44];
        if (!v42[v44])
          goto LABEL_119;
LABEL_84:
        v52 = (v50 - 1) << (8 * v44);
        if (v44 > 3)
          v52 = 0;
        if ((_DWORD)v44)
        {
          if (v44 <= 3)
            v53 = v44;
          else
            v53 = 4;
          __asm { BR              X11 }
        }
        if ((_DWORD)v43 + v52 != -1)
        {
LABEL_122:
          (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v41, v38);
          if (v43 <= 1)
          {
            if (v44 <= 3)
            {
LABEL_124:
              v59 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
              v60 = v59 != 0;
              if (v59 >= 0xFF)
                v60 = 2;
              if (v59 <= 0xFFFE)
                v61 = v60;
              else
                v61 = 4;
              goto LABEL_133;
            }
LABEL_132:
            v61 = 1;
LABEL_133:
            v44 += v61;
          }
LABEL_134:
          memcpy(v41, v42, v44);
          return a1;
        }
LABEL_136:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 40))(v41, v42, v38);
        return a1;
      }
      v50 = *(unsigned __int16 *)&v42[v44];
      if (*(_WORD *)&v42[v44])
        goto LABEL_84;
    }
LABEL_119:
    if (!(_DWORD)v43)
      goto LABEL_136;
    v46 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48);
    goto LABEL_121;
  }
LABEL_93:
  if (v44 > 3)
    goto LABEL_94;
  v55 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
  if (v55 > 0xFFFE)
  {
    v54 = *(_DWORD *)&v42[v44];
    if (v54)
      goto LABEL_101;
  }
  else
  {
    if (v55 <= 0xFE)
    {
      if (!v55)
        goto LABEL_110;
LABEL_94:
      v54 = v42[v44];
      if (!v42[v44])
        goto LABEL_110;
LABEL_101:
      v56 = (v54 - 1) << (8 * v44);
      if (v44 > 3)
        v56 = 0;
      if ((_DWORD)v44)
      {
        if (v44 <= 3)
          v57 = v44;
        else
          v57 = 4;
        __asm { BR              X11 }
      }
      if (v56 + (_DWORD)v43 == -1)
        goto LABEL_112;
LABEL_131:
      if (v44 <= 3)
        goto LABEL_124;
      goto LABEL_132;
    }
    v54 = *(unsigned __int16 *)&v42[v44];
    if (*(_WORD *)&v42[v44])
      goto LABEL_101;
  }
LABEL_110:
  if ((_DWORD)v43 && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48))(v42, v43, v38))
    goto LABEL_131;
LABEL_112:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 32))(v41, v42, v38);
  if (v44 <= 3)
  {
    v58 = (~(-1 << (8 * v44)) - v43 + 2) >> (8 * v44);
    if (v58 > 0xFFFE)
    {
      *(_DWORD *)&v41[v44] = 0;
      return a1;
    }
    if (v58 > 0xFE)
    {
      *(_WORD *)&v41[v44] = 0;
      return a1;
    }
    if (!v58)
      return a1;
  }
  v41[v44] = 0;
  return a1;
}

uint64_t sub_23BC67BB0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t result;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v47 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v46 = sub_23BC71C4C();
  v6 = *(_QWORD *)(v46 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= v5)
    v8 = v5;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v45 = sub_23BC71C34();
  v9 = *(_QWORD *)(v45 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = v10 - 1;
  if (!(_DWORD)v10)
    v12 = 0;
  v13 = v12 - 1;
  if (v10 >= 2)
    v14 = v13;
  else
    v14 = 0;
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = v14;
  v16 = sub_23BC71B5C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int *)(v17 + 84);
  v19 = v18 - 2;
  if (v18 <= 1)
    v19 = 0;
  if (v19 <= v15)
    v19 = v15;
  if ((_DWORD)v10)
    v20 = v10 < 2;
  else
    v20 = 2;
  v21 = *(_QWORD *)(v17 + 64);
  if (v18 <= 1)
  {
    if (v21 <= 3)
    {
      v23 = (~(-1 << (8 * v21)) - v18 + 2) >> (8 * v21);
      v24 = v23 != 0;
      if (v23 >= 0xFF)
        v24 = 2;
      if (v23 <= 0xFFFE)
        v22 = v24;
      else
        v22 = 4;
    }
    else
    {
      v22 = 1;
    }
    v21 += v22;
  }
  if (!a2)
    return 0;
  v25 = *(unsigned __int8 *)(v6 + 80);
  v26 = *(unsigned __int8 *)(v9 + 80);
  v27 = *(_QWORD *)(v4 + 64) + v25;
  v28 = *(_QWORD *)(v6 + 64);
  v29 = *(_QWORD *)(v9 + 64);
  v30 = *(unsigned __int8 *)(v17 + 80);
  v31 = v29 + v26;
  if (a2 <= v19)
    goto LABEL_50;
  v32 = v21 + ((v20 + v29 + v30 + ((v31 + ((v28 + v26 + (v27 & ~v25)) & ~v26)) & ~v26)) & ~v30);
  v20 = (8 * v32);
  if (v32 <= 3)
  {
    v34 = ((a2 - v19 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
    if (HIWORD(v34))
    {
      v33 = *(_DWORD *)(a1 + v32);
      if (!v33)
        goto LABEL_50;
      goto LABEL_41;
    }
    if (v34 > 0xFF)
    {
      v33 = *(unsigned __int16 *)(a1 + v32);
      if (!*(_WORD *)(a1 + v32))
        goto LABEL_50;
      goto LABEL_41;
    }
    if (v34 < 2)
    {
LABEL_50:
      if (v19)
      {
        if ((_DWORD)v5 == v19)
        {
          v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
          v38 = a1;
          v39 = v5;
          v40 = v47;
          return v37(v38, v39, v40);
        }
        v38 = (v27 + a1) & ~v25;
        if ((_DWORD)v7 == v19)
        {
          v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          v39 = v7;
          v40 = v46;
          return v37(v38, v39, v40);
        }
        v38 = (v38 + v28 + v26) & ~v26;
        if ((_DWORD)v10 == v19)
        {
          v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
          v39 = v10;
          v40 = v45;
          return v37(v38, v39, v40);
        }
        v41 = (v31 + v38) & ~v26;
        if (v14 == v19)
        {
          if (v10 >= 2)
          {
            v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48))(v41, v10, v45, v20);
            goto LABEL_63;
          }
        }
        else if ((_DWORD)v18)
        {
          v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 48))((v30 + (v10 < 2) + v29 + ((_DWORD)v10 == 0) + v41) & ~v30, v18, v16, v20);
LABEL_63:
          v44 = v42 >= 2;
          result = v42 - 2;
          if ((_DWORD)result != 0 && v44)
            return result;
        }
      }
      return 0;
    }
  }
  v33 = *(unsigned __int8 *)(a1 + v32);
  if (!*(_BYTE *)(a1 + v32))
    goto LABEL_50;
LABEL_41:
  v35 = (v33 - 1) << (8 * v32);
  if (v32 > 3)
    v35 = 0;
  if ((_DWORD)v32)
  {
    if (v32 <= 3)
      v36 = v32;
    else
      v36 = 4;
    __asm { BR              X12 }
  }
  return v19 + v35 + 1;
}

void sub_23BC67F04(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  size_t v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(sub_23BC71C4C() - 8);
  if (*(_DWORD *)(v7 + 84) <= v6)
    v8 = v6;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_23BC71C34() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = v10 - 1;
  if (!v10)
    v12 = 0;
  v13 = v12 - 1;
  if (v10 >= 2)
    v14 = v13;
  else
    v14 = 0;
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = v14;
  v16 = *(_QWORD *)(sub_23BC71B5C() - 8);
  v17 = *(_DWORD *)(v16 + 84);
  if (v17 <= 1)
    v18 = 0;
  else
    v18 = v17 - 2;
  if (v18 <= v15)
    v19 = v15;
  else
    v19 = v18;
  if (v10)
    v20 = v10 < 2;
  else
    v20 = 2;
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = (v20
       + *(_QWORD *)(v9 + 64)
       + *(unsigned __int8 *)(v16 + 80)
       + ((*(_QWORD *)(v9 + 64)
         + v21
         + ((*(_QWORD *)(v7 + 64)
           + v21
           + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~v21)) & ~v21)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v23 = *(_QWORD *)(v16 + 64);
  v24 = v23;
  if (v17 <= 1)
  {
    if (v23 <= 3)
    {
      v26 = (~(-1 << (8 * v23)) - v17 + 2) >> (8 * v23);
      v27 = v26 != 0;
      if (v26 >= 0xFF)
        v27 = 2;
      if (v26 <= 0xFFFE)
        v25 = v27;
      else
        v25 = 4;
    }
    else
    {
      v25 = 1;
    }
    v24 = v25 + v23;
  }
  v28 = v24 + v22;
  if (a3 <= v19)
  {
    v29 = 0;
  }
  else if (v28 <= 3)
  {
    v31 = ((a3 - v19 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v31))
    {
      v29 = 4u;
    }
    else if (v31 >= 0x100)
    {
      v29 = 2;
    }
    else
    {
      v29 = v31 > 1;
    }
  }
  else
  {
    v29 = 1u;
  }
  if (v19 < a2)
  {
    v30 = ~v19 + a2;
    if (v28 < 4)
    {
      if ((_DWORD)v28)
      {
        v32 = v30 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if ((_DWORD)v28 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if ((_DWORD)v28 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v30;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X28 }
}

void sub_23BC684B8()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x23BC682A8);
}

void sub_23BC684C0()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x23BC682A8);
}

void sub_23BC684D0()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x23BC682A8);
}

uint64_t sub_23BC684DC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BC68528 + 4 * byte_23BC80454[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BC6855C + 4 * byte_23BC8044F[v4]))();
}

uint64_t sub_23BC6855C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC68564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC6856CLL);
  return result;
}

uint64_t sub_23BC68578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC68580);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BC68584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC6858C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingButtonLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC685E4 + 4 * byte_23BC8045E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC68618 + 4 * byte_23BC80459[v4]))();
}

uint64_t sub_23BC68618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC68620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC68628);
  return result;
}

uint64_t sub_23BC68634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC6863CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC68640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC68648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingButtonLoadState.CodingKeys()
{
  return &type metadata for SharingButtonLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for SharingButtonLoadState.IdleCodingKeys()
{
  return &type metadata for SharingButtonLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for SharingButtonLoadState.FetchingCodingKeys()
{
  return &type metadata for SharingButtonLoadState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SharingButtonLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC686C4 + 4 * byte_23BC80463[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC686E4 + 4 * byte_23BC80468[v4]))();
}

_BYTE *sub_23BC686C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC686E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC686EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC686F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC686FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC68704(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SharingButtonLoadState.FetchedCodingKeys()
{
  return &type metadata for SharingButtonLoadState.FetchedCodingKeys;
}

unint64_t sub_23BC68724()
{
  unint64_t result;

  result = qword_256A789A0;
  if (!qword_256A789A0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80754, &type metadata for SharingButtonLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789A0);
  }
  return result;
}

unint64_t sub_23BC6876C()
{
  unint64_t result;

  result = qword_256A789A8;
  if (!qword_256A789A8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC808AC, &type metadata for SharingButtonLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789A8);
  }
  return result;
}

void sub_23BC687B0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC687C0()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC687D0()
{
  JUMPOUT(0x24260ED10);
}

unint64_t sub_23BC687E4()
{
  unint64_t result;

  result = qword_256A789B0;
  if (!qword_256A789B0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC807CC, &type metadata for SharingButtonLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789B0);
  }
  return result;
}

unint64_t sub_23BC6882C()
{
  unint64_t result;

  result = qword_256A789B8;
  if (!qword_256A789B8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC807F4, &type metadata for SharingButtonLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789B8);
  }
  return result;
}

unint64_t sub_23BC68874()
{
  unint64_t result;

  result = qword_256A789C0;
  if (!qword_256A789C0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC8077C, &type metadata for SharingButtonLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789C0);
  }
  return result;
}

unint64_t sub_23BC688BC()
{
  unint64_t result;

  result = qword_256A789C8;
  if (!qword_256A789C8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC807A4, &type metadata for SharingButtonLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789C8);
  }
  return result;
}

unint64_t sub_23BC68904()
{
  unint64_t result;

  result = qword_256A789D0;
  if (!qword_256A789D0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC806C4, &type metadata for SharingButtonLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789D0);
  }
  return result;
}

unint64_t sub_23BC6894C()
{
  unint64_t result;

  result = qword_256A789D8;
  if (!qword_256A789D8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC806EC, &type metadata for SharingButtonLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789D8);
  }
  return result;
}

unint64_t sub_23BC68994()
{
  unint64_t result;

  result = qword_256A789E0;
  if (!qword_256A789E0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC8081C, &type metadata for SharingButtonLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789E0);
  }
  return result;
}

unint64_t sub_23BC689DC()
{
  unint64_t result;

  result = qword_256A789E8;
  if (!qword_256A789E8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80844, &type metadata for SharingButtonLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A789E8);
  }
  return result;
}

uint64_t sub_23BC68A20(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23BC72744();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BC68A94()
{
  return 7107189;
}

uint64_t sub_23BC68AA4(uint64_t a1)
{
  uint64_t State;

  State = type metadata accessor for SharingButtonLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 8))(a1, State);
  return a1;
}

uint64_t static LabelStyle<>.expandable<A>(_:axis:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a5, v11, a3);
  result = type metadata accessor for ExpandableLabelStyle(0, a3, a4, v12);
  *(_BYTE *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t ExpandableLabelStyle.init(_:axis:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for ExpandableLabelStyle(0, a3, a4, v9);
  *(_BYTE *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t type metadata accessor for ExpandableLabelStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ExpandableLabelStyle);
}

uint64_t static LabelStyle<>.expandable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  sub_23BC71D84();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A789F8);
  *(_BYTE *)(a1 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t ExpandableLabelStyle<>.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  sub_23BC71D84();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A789F8);
  *(_BYTE *)(a1 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t sub_23BC68C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = 0x7FF0000000000000;
  if (*(_BYTE *)(v1 + *(int *)(a1 + 36)) != 2)
  {
    v3 = sub_23BC71E80();
    if (v3 != sub_23BC71E80())
      return 0;
  }
  return v2;
}

uint64_t ExpandableLabelStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v40 = a3;
  v33 = a1;
  v4 = sub_23BC71E44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78A00);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78A08);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(a2 + 16);
  v14 = v36;
  v15 = sub_23BC68F84();
  v34 = *(_QWORD *)(a2 + 24);
  v35 = v15;
  v41 = v11;
  v42 = v14;
  v43 = v15;
  v44 = v34;
  v16 = MEMORY[0x24260ECB0](0, &v41, MEMORY[0x24BDF2188], 0);
  v37 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v32 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v33, v4);
  sub_23BC72030();
  v22 = sub_23BC68C5C(a2);
  LOBYTE(v7) = v23 & 1;
  v24 = sub_23BC68C5C(a2);
  LOBYTE(a2) = v25 & 1;
  sub_23BC720F0();
  v26 = sub_23BC6903C(0.0, 1, 0.0, 1, *(double *)&v22, (char)v7, 0.0, 1, (uint64_t)v13, 0.0, 1, *(double *)&v24, a2);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v10, v39, v26);
  v28 = v35;
  v27 = v36;
  v29 = v34;
  sub_23BC71F10();
  sub_23BC69208((uint64_t)v13);
  v41 = v11;
  v42 = v27;
  v43 = v28;
  v44 = v29;
  swift_getOpaqueTypeConformance2();
  sub_23BBECE40((uint64_t)v19, v16, (uint64_t)v21);
  v30 = *(void (**)(char *, uint64_t))(v37 + 8);
  v30(v19, v16);
  sub_23BBEAFE8((uint64_t)v21, v16, v40);
  return ((uint64_t (*)(char *, uint64_t))v30)(v21, v16);
}

unint64_t sub_23BC68F84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A78A10;
  if (!qword_256A78A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78A08);
    v2[0] = sub_23BC68FF0();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A78A10);
  }
  return result;
}

unint64_t sub_23BC68FF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A78A18[0];
  if (!qword_256A78A18[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78A00);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF41A8], v1);
    atomic_store(result, qword_256A78A18);
  }
  return result;
}

__n128 sub_23BC6903C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23BC724E0();
    v23 = (void *)sub_23BC71E74();
    sub_23BC71C58();

  }
  sub_23BC71D78();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A78A08) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *v25 = v27;
  v25[1] = v28;
  result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_23BC69208(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78A08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BC69248()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC69280()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BC692F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;
  BOOL v16;
  unsigned int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFD)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = v7 + 1;
  v10 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 >= 0xFD)
        return (*(uint64_t (**)(void))(v4 + 48))();
      v15 = *(unsigned __int8 *)(v7 + a1);
      v16 = v15 >= 2;
      v17 = v15 - 2;
      if (!v16)
        v17 = -1;
      if (v17 + 1 >= 2)
        return v17;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if ((_DWORD)v7 == -1)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BC693BC + 4 * byte_23BC80B50[(v9 - 1)]))();
}

void sub_23BC69424(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFDu)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v7 + 1);
        if (v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if (v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_23BC695F8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78A08);
  sub_23BC68F84();
  return swift_getOpaqueTypeConformance2();
}

uint64_t ViewStackButton.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a3 = sub_23BBEB2B0;
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_23BC696A8()
{
  swift_release();
  return swift_deallocObject();
}

void ViewStackButton.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD v9[2];
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78AA0);
  MEMORY[0x24BDAC7A8](v13);
  v9[1] = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78AA8);
  MEMORY[0x24BDAC7A8](v10);
  v11 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75168);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A75170);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75150);
  sub_23BBE869C(&qword_256A75158, &qword_256A75150, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  sub_23BC72138();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v8 = (char *)sub_23BC698C8 + 4 * byte_23BC80BE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BC698C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 - 120);
  if (*v3 < 1)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  else
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v0;
    *(_QWORD *)(v6 + 24) = v1;
    *(_BYTE *)(v6 + 32) = v2;
    MEMORY[0x24BDAC7A8](v6);
    sub_23BBE7EBC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
    sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    sub_23BC72048();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  }
  sub_23BC69AC8(v5, *(_QWORD *)(v4 - 104));
  swift_storeEnumTagMultiPayload();
  sub_23BC69B10();
  sub_23BC71E20();
  return sub_23BC69B8C(v5);
}

uint64_t sub_23BC69AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BC69B10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A78AB0;
  if (!qword_256A78AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78AA0);
    v2 = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A78AB0);
  }
  return result;
}

uint64_t sub_23BC69B8C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78AA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BC69BCC()
{
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75150);
  sub_23BBE869C(&qword_256A75158, &qword_256A75150, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC69C84()
{
  sub_23BBE7EAC();
  return swift_deallocObject();
}

uint64_t sub_23BC69CAC()
{
  return sub_23BC69BCC();
}

uint64_t sub_23BC69CB8()
{
  return sub_23BC72024();
}

uint64_t sub_23BC69D24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC69D34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23BC722C4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23BC722B8();
  sub_23BC722AC();
  sub_23BC72294();
  sub_23BC722AC();
  sub_23BC722D0();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A75150);
  sub_23BBE869C(&qword_256A75158, &qword_256A75150, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC71EC8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_23BC69F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC7200C();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ViewStackButton()
{
  return &type metadata for ViewStackButton;
}

unint64_t sub_23BC69FE4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256A78AB8;
  if (!qword_256A78AB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78AC0);
    v2 = sub_23BC69B10();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A78AB8);
  }
  return result;
}

uint64_t sub_23BC6A050@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC69D34(a1);
}

BOOL sub_23BC6A060(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_23BC727A4();
  sub_23BC727B0();
  v4 = sub_23BC727E0();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_23BC6A14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23BC727A4();
    sub_23BC7230C();
    v6 = sub_23BC727E0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_23BC72744() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_23BC72744() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t StackButton.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a3 = sub_23BBEB2B0;
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_23BC6A2D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BC6A2F8(uint64_t a1, char a2, char a3)
{
  uint64_t result;

  if ((a2 & 1) == 0 && a3 != 4)
  {
    sub_23BBE7EBC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B68);
    sub_23BBE869C(&qword_256A78B70, &qword_256A78B68, MEMORY[0x24BE2B5E8]);
    sub_23BC71CDC();
    sub_23BBE7EAC();
    sub_23BC72198();
    return swift_release();
  }
  return result;
}

uint64_t sub_23BC6A3E8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v37 = a6;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BD0);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BD8);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BC0);
  MEMORY[0x24BDAC7A8](v33);
  v31 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BB0);
  MEMORY[0x24BDAC7A8](v13);
  v35 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BE0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v20);
    v28[-4] = a3;
    v28[-3] = a4;
    LOBYTE(v28[-2]) = a5 & 1;
    sub_23BC72024();
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v17, v22, v18);
    swift_storeEnumTagMultiPayload();
    sub_23BC6C780();
    sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    sub_23BC71E20();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }
  else
  {
    v28[0] = v17;
    v28[1] = v15;
    v28[2] = v13;
    if (v36 == 52 || v36 == 37)
    {
      MEMORY[0x24BDAC7A8](v20);
      v28[-4] = a3;
      v28[-3] = a4;
      LOBYTE(v28[-2]) = a5 & 1;
      sub_23BC72024();
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v29, v22, v18);
      v24 = v19;
      swift_storeEnumTagMultiPayload();
      sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
      v25 = (uint64_t)v31;
      sub_23BC71E20();
      sub_23BBE817C(v25, v34, &qword_256A78BC0);
      swift_storeEnumTagMultiPayload();
      sub_23BC6C79C();
      v26 = (uint64_t)v35;
      sub_23BC71E20();
      sub_23BBE81C0(v25, &qword_256A78BC0);
    }
    else
    {
      MEMORY[0x24BDAC7A8](v20);
      v28[-4] = a3;
      v28[-3] = a4;
      LOBYTE(v28[-2]) = a5 & 1;
      sub_23BC72024();
      v24 = v19;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v34, v22, v18);
      swift_storeEnumTagMultiPayload();
      sub_23BC6C79C();
      sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
      v26 = (uint64_t)v35;
      sub_23BC71E20();
    }
    v27 = v28[0];
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v18);
    sub_23BBE817C(v26, v27, &qword_256A78BB0);
    swift_storeEnumTagMultiPayload();
    sub_23BC6C780();
    sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    sub_23BC71E20();
    return sub_23BBE81C0(v26, &qword_256A78BB0);
  }
}

uint64_t sub_23BC6A9F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC7200C();
  *a1 = result;
  return result;
}

uint64_t sub_23BC6AA30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t result;
  uint64_t v7;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B68);
  sub_23BBE869C(&qword_256A78B70, &qword_256A78B68, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC72300();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_23BC6AC08()
{
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B68);
  sub_23BBE869C(&qword_256A78B70, &qword_256A78B68, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC6ACD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC7200C();
  *a1 = result;
  return result;
}

uint64_t sub_23BC6AD10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t result;
  uint64_t v7;

  v2 = sub_23BC71C4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23BC722DC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23BC72288();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B68);
  sub_23BBE869C(&qword_256A78B70, &qword_256A78B68, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  result = sub_23BC72300();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t StackButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (**v10)();
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78AC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_BYTE *)(v1 + 16);
  sub_23BC6AFF4(v6, v7, v8, (uint64_t)v5);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v7;
  *(_BYTE *)(v9 + 32) = v8;
  sub_23BBE817C((uint64_t)v5, a1, &qword_256A78AC8);
  v10 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A78AD0) + 36));
  *v10 = sub_23BC6C284;
  v10[1] = (uint64_t (*)())v9;
  v10[2] = 0;
  v10[3] = 0;
  sub_23BBE7EBC();
  return sub_23BBE81C0((uint64_t)v5, &qword_256A78AC8);
}

uint64_t sub_23BC6AFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t started;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;

  v133 = a4;
  v6 = a3 & 1;
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B78);
  MEMORY[0x24BDAC7A8](v124);
  v125 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B60);
  v109 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v108 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B80);
  MEMORY[0x24BDAC7A8](v110);
  v112 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A74048);
  MEMORY[0x24BDAC7A8](v10);
  v105 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A73EF8);
  v107 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v106 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B50);
  MEMORY[0x24BDAC7A8](v118);
  v113 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B88);
  MEMORY[0x24BDAC7A8](v116);
  v117 = (uint64_t)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B40);
  v119 = *(_QWORD *)(v15 - 8);
  v120 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v115 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B30);
  MEMORY[0x24BDAC7A8](v122);
  v121 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B20);
  MEMORY[0x24BDAC7A8](v132);
  v123 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B90);
  MEMORY[0x24BDAC7A8](v131);
  v130 = (uint64_t)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B10);
  v127 = *(_QWORD *)(v20 - 8);
  v128 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B00);
  v23 = MEMORY[0x24BDAC7A8](v129);
  v25 = (char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v126 = (uint64_t)&v97 - v26;
  started = type metadata accessor for StartWorkoutDetailLoadState(0);
  MEMORY[0x24BDAC7A8](started);
  v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B68);
  sub_23BBE869C(&qword_256A78B70, &qword_256A78B68, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  v30 = a1;
  v31 = a2;
  v32 = v6;
  sub_23BBE7EAC();
  swift_getKeyPath();
  sub_23BC7218C();
  swift_release();
  swift_release();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A748B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v29, 2, v33))
  {
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = 0;
    *(_WORD *)(v34 + 24) = 1025;
    *(_QWORD *)(v34 + 32) = v30;
    *(_QWORD *)(v34 + 40) = v31;
    *(_BYTE *)(v34 + 48) = v32 != 0;
    v35 = MEMORY[0x24BDAC7A8](v30);
    *(&v97 - 6) = 0;
    v36 = v130;
    *((_BYTE *)&v97 - 40) = 1;
    *(&v97 - 4) = v35;
    *(&v97 - 3) = v37;
    LOBYTE(v96) = v32 != 0;
    sub_23BBE7EBC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B98);
    sub_23BC6C6FC(&qword_256A78BA0, &qword_256A78B98, sub_23BC6C780);
    sub_23BC72048();
    KeyPath = swift_getKeyPath();
    v39 = swift_allocObject();
    *(_BYTE *)(v39 + 16) = 1;
    v41 = v127;
    v40 = v128;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v25, v22, v128);
    v42 = (uint64_t *)&v25[*(int *)(v129 + 36)];
    *v42 = KeyPath;
    v42[1] = (uint64_t)sub_23BC6CB00;
    v42[2] = v39;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v40);
    v43 = v126;
    sub_23BBE87F8((uint64_t)v25, v126, &qword_256A78B00);
    sub_23BBE817C(v43, v36, &qword_256A78B00);
    swift_storeEnumTagMultiPayload();
    sub_23BC6C4A4();
    sub_23BC6C540();
    sub_23BC71E20();
    return sub_23BBE81C0(v43, &qword_256A78B00);
  }
  else
  {
    v102 = v25;
    v103 = v22;
    v45 = v29[25];
    v104 = v29;
    if ((v45 & 1) != 0)
    {
      v46 = v33;
      v47 = swift_allocObject();
      *(_QWORD *)(v47 + 16) = 0;
      *(_WORD *)(v47 + 24) = 1025;
      *(_QWORD *)(v47 + 32) = v30;
      *(_QWORD *)(v47 + 40) = v31;
      *(_BYTE *)(v47 + 48) = v32 != 0;
      v48 = MEMORY[0x24BDAC7A8](v30);
      *(&v97 - 6) = 0;
      v49 = v125;
      *((_BYTE *)&v97 - 40) = 1;
      *(&v97 - 4) = v48;
      *(&v97 - 3) = v31;
      LOBYTE(v96) = v32 != 0;
      sub_23BBE7EBC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B98);
      sub_23BC6C6FC(&qword_256A78BA0, &qword_256A78B98, sub_23BC6C780);
      v50 = v103;
      sub_23BC72048();
      v51 = swift_getKeyPath();
      v52 = swift_allocObject();
      *(_BYTE *)(v52 + 16) = 1;
      v54 = v127;
      v53 = v128;
      v55 = (uint64_t)v102;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v102, v50, v128);
      v56 = (uint64_t *)(v55 + *(int *)(v129 + 36));
      *v56 = v51;
      v56[1] = (uint64_t)sub_23BC6C8DC;
      v56[2] = v52;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v53);
      v57 = v126;
      sub_23BBE87F8(v55, v126, &qword_256A78B00);
      sub_23BBE817C(v57, v49, &qword_256A78B00);
      swift_storeEnumTagMultiPayload();
      sub_23BC6C564();
      sub_23BC6C4A4();
      v58 = (uint64_t)v123;
      sub_23BC71E20();
      sub_23BBE81C0(v57, &qword_256A78B00);
    }
    else
    {
      v99 = v33;
      v59 = *(_QWORD *)v104;
      v101 = *((_QWORD *)v104 + 1);
      v100 = *((_QWORD *)v104 + 2);
      v60 = v104[24];
      sub_23BBE7EBC();
      sub_23BC71CDC();
      sub_23BBE7EAC();
      swift_getKeyPath();
      sub_23BC7218C();
      swift_release();
      swift_release();
      v98 = v60;
      v61 = sub_23BC6A060(v60, v135);
      swift_bridgeObjectRelease();
      if (v61)
      {
        sub_23BBE7EBC();
        sub_23BC71CDC();
        sub_23BBE7EAC();
        swift_getKeyPath();
        sub_23BC7218C();
        swift_release();
        swift_release();
        v97 = v59;
        if ((v134 & 0xFE) == 2)
        {
          v62 = swift_allocObject();
          *(_QWORD *)(v62 + 16) = 0;
          *(_WORD *)(v62 + 24) = 1025;
          *(_QWORD *)(v62 + 32) = v30;
          *(_QWORD *)(v62 + 40) = v31;
          *(_BYTE *)(v62 + 48) = v32 != 0;
          MEMORY[0x24BDAC7A8](v62);
          *(&v97 - 6) = 0;
          *((_BYTE *)&v97 - 40) = 1;
          *(&v97 - 4) = v30;
          *(&v97 - 3) = v31;
          LOBYTE(v96) = v32 != 0;
          sub_23BBE7EBC();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B98);
          sub_23BC6C6FC(&qword_256A78BA0, &qword_256A78B98, sub_23BC6C780);
          v63 = v103;
          sub_23BC72048();
          v64 = swift_getKeyPath();
          v65 = swift_allocObject();
          *(_BYTE *)(v65 + 16) = 1;
          v67 = v127;
          v66 = v128;
          v68 = (uint64_t)v102;
          (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v102, v63, v128);
          v69 = (uint64_t *)(v68 + *(int *)(v129 + 36));
          *v69 = v64;
          v69[1] = (uint64_t)sub_23BC6CB00;
          v69[2] = v65;
          (*(void (**)(char *, uint64_t))(v67 + 8))(v63, v66);
          v70 = v126;
          sub_23BBE87F8(v68, v126, &qword_256A78B00);
          sub_23BBE817C(v70, v117, &qword_256A78B00);
          swift_storeEnumTagMultiPayload();
          sub_23BC6C4A4();
          sub_23BC6C5E8();
          v71 = (uint64_t)v115;
          sub_23BC71E20();
          sub_23BBE81C0(v70, &qword_256A78B00);
          v58 = (uint64_t)v123;
          v72 = (uint64_t)v121;
          v74 = v119;
          v73 = v120;
          v75 = v98;
        }
        else
        {
          v71 = (uint64_t)v115;
          if ((v134 & 1) != 0)
          {
            v88 = v105;
            sub_23BC71CA0();
            v89 = sub_23BC71CB8();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
            v90 = swift_allocObject();
            *(_QWORD *)(v90 + 16) = v30;
            *(_QWORD *)(v90 + 24) = v31;
            *(_BYTE *)(v90 + 32) = v32 != 0;
            v75 = v98;
            *(_BYTE *)(v90 + 33) = v98;
            *(&v97 - 4) = MEMORY[0x24BDAC7A8](v30);
            *(&v97 - 3) = v31;
            LOBYTE(v96) = v32 != 0;
            sub_23BBE7EBC();
            __swift_instantiateConcreteTypeFromMangledName(&qword_256A740B0);
            sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
            v91 = v106;
            sub_23BC7203C();
            v92 = v107;
            v93 = v111;
            (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v112, v91, v111);
            swift_storeEnumTagMultiPayload();
            sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
            sub_23BC6C66C();
            v87 = (uint64_t)v113;
            sub_23BC71E20();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
          }
          else
          {
            v77 = v100;
            v135 = v100;
            v127 = swift_getKeyPath();
            v78 = swift_allocObject();
            *(_QWORD *)(v78 + 16) = v30;
            *(_QWORD *)(v78 + 24) = v31;
            *(_BYTE *)(v78 + 32) = v32 != 0;
            v79 = v97;
            v80 = v101;
            *(_QWORD *)(v78 + 40) = v97;
            *(_QWORD *)(v78 + 48) = v80;
            *(_QWORD *)(v78 + 56) = v77;
            v81 = v98;
            *(_BYTE *)(v78 + 64) = v98;
            sub_23BBE7EBC();
            swift_bridgeObjectRetain();
            v82 = v80;
            v75 = v81;
            sub_23BBF8608(v79, v82, v77, v81, 0);
            __swift_instantiateConcreteTypeFromMangledName(&qword_256A76708);
            sub_23BBE869C(&qword_256A78BC8, &qword_256A76708, MEMORY[0x24BEE12D8]);
            v83 = MEMORY[0x24BDF43B0];
            v96 = sub_23BBE869C(&qword_256A78B08, &qword_256A78B10, MEMORY[0x24BDF43B0]);
            v84 = v108;
            sub_23BC720CC();
            v85 = v109;
            v86 = v114;
            (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v112, v84, v114);
            swift_storeEnumTagMultiPayload();
            sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, v83);
            sub_23BC6C66C();
            v87 = (uint64_t)v113;
            sub_23BC71E20();
            (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
          }
          sub_23BBE817C(v87, v117, &qword_256A78B50);
          swift_storeEnumTagMultiPayload();
          sub_23BC6C4A4();
          sub_23BC6C5E8();
          sub_23BC71E20();
          sub_23BBE81C0(v87, &qword_256A78B50);
          v58 = (uint64_t)v123;
          v72 = (uint64_t)v121;
          v74 = v119;
          v73 = v120;
        }
        sub_23BBE87F8(v71, v72, &qword_256A78B40);
        v76 = 0;
        v59 = v97;
      }
      else
      {
        v76 = 1;
        v58 = (uint64_t)v123;
        v72 = (uint64_t)v121;
        v74 = v119;
        v73 = v120;
        v75 = v98;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v72, v76, 1, v73);
      sub_23BBE817C(v72, v125, &qword_256A78B30);
      swift_storeEnumTagMultiPayload();
      sub_23BC6C564();
      sub_23BC6C4A4();
      sub_23BC71E20();
      sub_23BBF876C(v59, v101, v100, v75, 0);
      sub_23BBE81C0(v72, &qword_256A78B30);
      v46 = v99;
    }
    v94 = &v104[*(int *)(v46 + 48)];
    sub_23BBE817C(v58, v130, &qword_256A78B20);
    swift_storeEnumTagMultiPayload();
    sub_23BC6C4A4();
    sub_23BC6C540();
    sub_23BC71E20();
    sub_23BBE81C0(v58, &qword_256A78B20);
    v95 = sub_23BC71C10();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v95 - 8) + 8))(v94, v95);
  }
}

uint64_t sub_23BC6C0C8(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v12;
  uint64_t v13;

  v12 = *a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 25) = a8;
  *(_QWORD *)(v13 + 32) = a2;
  *(_QWORD *)(v13 + 40) = a3;
  *(_BYTE *)(v13 + 48) = a4 & 1;
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B98);
  sub_23BC6C6FC(&qword_256A78BA0, &qword_256A78B98, sub_23BC6C780);
  return sub_23BC72048();
}

uint64_t sub_23BC6C1B8()
{
  sub_23BBE7EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78B68);
  sub_23BBE869C(&qword_256A78B70, &qword_256A78B68, MEMORY[0x24BE2B5E8]);
  sub_23BC71CDC();
  sub_23BBE7EAC();
  sub_23BC72198();
  return swift_release();
}

uint64_t sub_23BC6C27C()
{
  return objectdestroy_2Tm_3();
}

uint64_t sub_23BC6C284()
{
  return sub_23BC6C1B8();
}

uint64_t sub_23BC6C290()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BC6C2A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (**v10)();
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78AC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_BYTE *)(v1 + 16);
  sub_23BC6AFF4(v6, v7, v8, (uint64_t)v5);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v7;
  *(_BYTE *)(v9 + 32) = v8;
  sub_23BBE817C((uint64_t)v5, a1, &qword_256A78AC8);
  v10 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A78AD0) + 36));
  *v10 = sub_23BC6CAFC;
  v10[1] = (uint64_t (*)())v9;
  v10[2] = 0;
  v10[3] = 0;
  sub_23BBE7EBC();
  return sub_23BBE81C0((uint64_t)v5, &qword_256A78AC8);
}

ValueMetadata *type metadata accessor for StackButton()
{
  return &type metadata for StackButton;
}

unint64_t sub_23BC6C3B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A78AD8;
  if (!qword_256A78AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78AD0);
    v2[0] = sub_23BC6C420();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A78AD8);
  }
  return result;
}

unint64_t sub_23BC6C420()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A78AE0;
  if (!qword_256A78AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78AC8);
    v2 = sub_23BBE8464(&qword_256A78AE8, &qword_256A78AF0, (uint64_t (*)(void))sub_23BC6C4A4, sub_23BC6C540);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A78AE0);
  }
  return result;
}

unint64_t sub_23BC6C4A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A78AF8;
  if (!qword_256A78AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78B00);
    v2[0] = sub_23BBE869C(&qword_256A78B08, &qword_256A78B10, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23BBE869C(&qword_256A73F80, &qword_256A73F88, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A78AF8);
  }
  return result;
}

uint64_t sub_23BC6C540()
{
  return sub_23BBE8464(&qword_256A78B18, &qword_256A78B20, (uint64_t (*)(void))sub_23BC6C564, (uint64_t (*)(void))sub_23BC6C4A4);
}

unint64_t sub_23BC6C564()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A78B28;
  if (!qword_256A78B28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78B30);
    v2 = sub_23BBE8464(&qword_256A78B38, &qword_256A78B40, (uint64_t (*)(void))sub_23BC6C4A4, (uint64_t (*)(void))sub_23BC6C5E8);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A78B28);
  }
  return result;
}

unint64_t sub_23BC6C5E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A78B48;
  if (!qword_256A78B48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78B50);
    v2[0] = sub_23BBE869C(&qword_256A73F78, &qword_256A73EF8, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23BC6C66C();
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A78B48);
  }
  return result;
}

unint64_t sub_23BC6C66C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A78B58;
  if (!qword_256A78B58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78B60);
    v2 = sub_23BBE869C(&qword_256A78B08, &qword_256A78B10, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A78B58);
  }
  return result;
}

uint64_t sub_23BC6C6E8()
{
  return objectdestroy_2Tm_3();
}

uint64_t sub_23BC6C6FC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC6C780()
{
  return sub_23BC6C6FC(&qword_256A78BA8, &qword_256A78BB0, (uint64_t (*)(void))sub_23BC6C79C);
}

unint64_t sub_23BC6C79C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A78BB8;
  if (!qword_256A78BB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78BC0);
    v2[0] = sub_23BBE869C(&qword_256A740B8, &qword_256A740B0, MEMORY[0x24BDF41A8]);
    v2[1] = v2[0];
    result = MEMORY[0x24260ED10](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A78BB8);
  }
  return result;
}

uint64_t sub_23BC6C818@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71DD8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23BC6C844@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BC71DD8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23BC6C870()
{
  return sub_23BC71DE4();
}

uint64_t sub_23BC6C894()
{
  return sub_23BC71DE4();
}

_BYTE *sub_23BC6C8B8(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_23BC6C8CC()
{
  return swift_deallocObject();
}

_BYTE *sub_23BC6C8DC(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_23BC6C8F4()
{
  sub_23BBE7EAC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BC6C92C(uint64_t *a1)
{
  uint64_t v1;

  return sub_23BC6C0C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
}

uint64_t sub_23BC6C944()
{
  return objectdestroy_2Tm_3();
}

uint64_t objectdestroy_2Tm_3()
{
  sub_23BBE7EAC();
  return swift_deallocObject();
}

uint64_t sub_23BC6C980()
{
  return sub_23BC6AC08();
}

uint64_t sub_23BC6C990()
{
  return sub_23BC72024();
}

uint64_t sub_23BC6C9F8()
{
  return swift_deallocObject();
}

uint64_t sub_23BC6CA0C()
{
  return swift_deallocObject();
}

uint64_t sub_23BC6CA1C@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC6AA30(a1);
}

uint64_t sub_23BC6CA54()
{
  uint64_t v0;

  return sub_23BC6A2F8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_23BC6CA6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BC6A3E8(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), a1);
}

uint64_t sub_23BC6CA80@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC6AD10(a1);
}

uint64_t sub_23BC6CA8C@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC6AA30(a1);
}

uint64_t sub_23BC6CAC0@<X0>(uint64_t a1@<X8>)
{
  return sub_23BC6AA30(a1);
}

BOOL static CreatePlanHandoffAlertIconState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t CreatePlanHandoffAlertIconState.hash(into:)()
{
  return sub_23BC727B0();
}

uint64_t sub_23BC6CB38(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656D7269666E6F63;
  else
    return 0x4F6D7269666E6F63;
}

uint64_t sub_23BC6CB80()
{
  char *v0;

  return sub_23BC6CB38(*v0);
}

uint64_t sub_23BC6CB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC6CFD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC6CBAC()
{
  sub_23BC6CEB0();
  return sub_23BC72828();
}

uint64_t sub_23BC6CBD4()
{
  sub_23BC6CEB0();
  return sub_23BC72834();
}

uint64_t sub_23BC6CBFC()
{
  sub_23BC6CF38();
  return sub_23BC72828();
}

uint64_t sub_23BC6CC24()
{
  sub_23BC6CF38();
  return sub_23BC72834();
}

uint64_t sub_23BC6CC4C()
{
  sub_23BC6CEF4();
  return sub_23BC72828();
}

uint64_t sub_23BC6CC74()
{
  sub_23BC6CEF4();
  return sub_23BC72834();
}

uint64_t CreatePlanHandoffAlertIconState.hashValue.getter()
{
  sub_23BC727A4();
  sub_23BC727B0();
  return sub_23BC727E0();
}

uint64_t CreatePlanHandoffAlertIconState.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BE8);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BF0);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78BF8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC6CEB0();
  sub_23BC7281C();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_23BC6CEF4();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_23BC6CF38();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_23BC6CEB0()
{
  unint64_t result;

  result = qword_256A78C00;
  if (!qword_256A78C00)
  {
    result = MEMORY[0x24260ED10](&unk_23BC810FC, &type metadata for CreatePlanHandoffAlertIconState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C00);
  }
  return result;
}

unint64_t sub_23BC6CEF4()
{
  unint64_t result;

  result = qword_256A78C08;
  if (!qword_256A78C08)
  {
    result = MEMORY[0x24260ED10](&unk_23BC810AC, &type metadata for CreatePlanHandoffAlertIconState.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C08);
  }
  return result;
}

unint64_t sub_23BC6CF38()
{
  unint64_t result;

  result = qword_256A78C10;
  if (!qword_256A78C10)
  {
    result = MEMORY[0x24260ED10](&unk_23BC8105C, &type metadata for CreatePlanHandoffAlertIconState.ConfirmOnDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C10);
  }
  return result;
}

uint64_t CreatePlanHandoffAlertIconState.init(from:)(_QWORD *a1)
{
  return sub_23BC6D0E0(a1) & 1;
}

uint64_t sub_23BC6CF94@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BC6D0E0(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_23BC6CFC0(_QWORD *a1)
{
  unsigned __int8 *v1;

  return CreatePlanHandoffAlertIconState.encode(to:)(a1, *v1);
}

uint64_t sub_23BC6CFD8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x4F6D7269666E6F63 && a2 == 0xEF6563697665446ELL;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC6D0E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78C58);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78C60);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78C68);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC6CEB0();
  v10 = v26;
  sub_23BC72810();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_23BC72690();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_23BC725A0();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v19 = &type metadata for CreatePlanHandoffAlertIconState;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_23BC6CEF4();
    sub_23BC72600();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_23BC6CF38();
    sub_23BC72600();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

unint64_t sub_23BC6D410()
{
  unint64_t result;

  result = qword_256A78C18;
  if (!qword_256A78C18)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for CreatePlanHandoffAlertIconState, &type metadata for CreatePlanHandoffAlertIconState);
    atomic_store(result, (unint64_t *)&qword_256A78C18);
  }
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanHandoffAlertIconState()
{
  return &type metadata for CreatePlanHandoffAlertIconState;
}

uint64_t _s14FitnessActions31CreatePlanHandoffAlertIconStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC6D4B4 + 4 * byte_23BC80DD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC6D4E8 + 4 * byte_23BC80DD0[v4]))();
}

uint64_t sub_23BC6D4E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC6D4F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC6D4F8);
  return result;
}

uint64_t sub_23BC6D504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC6D50CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC6D510(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC6D518(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CreatePlanHandoffAlertIconState.CodingKeys()
{
  return &type metadata for CreatePlanHandoffAlertIconState.CodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanHandoffAlertIconState.ConfirmOnDeviceCodingKeys()
{
  return &type metadata for CreatePlanHandoffAlertIconState.ConfirmOnDeviceCodingKeys;
}

ValueMetadata *type metadata accessor for CreatePlanHandoffAlertIconState.ConfirmedCodingKeys()
{
  return &type metadata for CreatePlanHandoffAlertIconState.ConfirmedCodingKeys;
}

unint64_t sub_23BC6D558()
{
  unint64_t result;

  result = qword_256A78C20;
  if (!qword_256A78C20)
  {
    result = MEMORY[0x24260ED10](&unk_23BC81034, &type metadata for CreatePlanHandoffAlertIconState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C20);
  }
  return result;
}

unint64_t sub_23BC6D5A0()
{
  unint64_t result;

  result = qword_256A78C28;
  if (!qword_256A78C28)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80F54, &type metadata for CreatePlanHandoffAlertIconState.ConfirmOnDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C28);
  }
  return result;
}

unint64_t sub_23BC6D5E8()
{
  unint64_t result;

  result = qword_256A78C30;
  if (!qword_256A78C30)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80F7C, &type metadata for CreatePlanHandoffAlertIconState.ConfirmOnDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C30);
  }
  return result;
}

unint64_t sub_23BC6D630()
{
  unint64_t result;

  result = qword_256A78C38;
  if (!qword_256A78C38)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80F04, &type metadata for CreatePlanHandoffAlertIconState.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C38);
  }
  return result;
}

unint64_t sub_23BC6D678()
{
  unint64_t result;

  result = qword_256A78C40;
  if (!qword_256A78C40)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80F2C, &type metadata for CreatePlanHandoffAlertIconState.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C40);
  }
  return result;
}

unint64_t sub_23BC6D6C0()
{
  unint64_t result;

  result = qword_256A78C48;
  if (!qword_256A78C48)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80FA4, &type metadata for CreatePlanHandoffAlertIconState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C48);
  }
  return result;
}

unint64_t sub_23BC6D708()
{
  unint64_t result;

  result = qword_256A78C50;
  if (!qword_256A78C50)
  {
    result = MEMORY[0x24260ED10](&unk_23BC80FCC, &type metadata for CreatePlanHandoffAlertIconState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C50);
  }
  return result;
}

uint64_t sub_23BC6D74C(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_23BC727A4();
    swift_bridgeObjectRetain();
    sub_23BC7230C();
    v18 = sub_23BC727E0();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_39;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_23BC72744() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_23BC72744() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_23BC6D9D0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    sub_23BC727A4();
    sub_23BC727B0();
    result = sub_23BC727E0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == v16)
      goto LABEL_7;
  }
}

uint64_t sub_23BC6DBB0(char a1)
{
  uint64_t result;

  result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000012;
    else
      return 0x6570704177656976;
  }
  return result;
}

uint64_t sub_23BC6DC18()
{
  char *v0;

  return sub_23BC6DBB0(*v0);
}

uint64_t sub_23BC6DC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC6F03C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC6DC44()
{
  sub_23BC6E064();
  return sub_23BC72828();
}

uint64_t sub_23BC6DC6C()
{
  sub_23BC6E064();
  return sub_23BC72834();
}

uint64_t sub_23BC6DC94()
{
  sub_23BC6E130();
  return sub_23BC72828();
}

uint64_t sub_23BC6DCBC()
{
  sub_23BC6E130();
  return sub_23BC72834();
}

uint64_t sub_23BC6DCE4()
{
  sub_23BC6E0EC();
  return sub_23BC72828();
}

uint64_t sub_23BC6DD0C()
{
  sub_23BC6E0EC();
  return sub_23BC72834();
}

uint64_t sub_23BC6DD34()
{
  sub_23BC6E0A8();
  return sub_23BC72828();
}

uint64_t sub_23BC6DD5C()
{
  sub_23BC6E0A8();
  return sub_23BC72834();
}

uint64_t UpNextQueueMonitorAction.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78C70);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78C78);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78C80);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78C88);
  v27 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BC6E064();
  sub_23BC7281C();
  if (!v15)
  {
    v29 = 0;
    sub_23BC6E130();
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  if (v15 == 1)
  {
    v31 = 2;
    sub_23BC6E0A8();
    v16 = v21;
    sub_23BC726A8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  v30 = 1;
  sub_23BC6E0EC();
  v18 = v24;
  sub_23BC726A8();
  v28 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78CA8);
  sub_23BC6E604(&qword_256A78CB0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
  v19 = v26;
  sub_23BC72720();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
}

unint64_t sub_23BC6E064()
{
  unint64_t result;

  result = qword_256A78C90;
  if (!qword_256A78C90)
  {
    result = MEMORY[0x24260ED10](&unk_23BC815B8, &type metadata for UpNextQueueMonitorAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C90);
  }
  return result;
}

unint64_t sub_23BC6E0A8()
{
  unint64_t result;

  result = qword_256A78C98;
  if (!qword_256A78C98)
  {
    result = MEMORY[0x24260ED10](&unk_23BC81568, &type metadata for UpNextQueueMonitorAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78C98);
  }
  return result;
}

unint64_t sub_23BC6E0EC()
{
  unint64_t result;

  result = qword_256A78CA0;
  if (!qword_256A78CA0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC81518, &type metadata for UpNextQueueMonitorAction.UpNextItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78CA0);
  }
  return result;
}

unint64_t sub_23BC6E130()
{
  unint64_t result;

  result = qword_256A78CB8;
  if (!qword_256A78CB8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC814C8, &type metadata for UpNextQueueMonitorAction.FetchUpNextItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78CB8);
  }
  return result;
}

uint64_t UpNextQueueMonitorAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78CC0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78CC8);
  v6 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  v34 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78CD0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A78CD8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23BC6E064();
  v17 = v41;
  sub_23BC72810();
  if (v17)
    goto LABEL_9;
  v32 = v9;
  v19 = v38;
  v18 = v39;
  v41 = v13;
  v20 = sub_23BC72690();
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v24 = sub_23BC725A0();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
    *v26 = &type metadata for UpNextQueueMonitorAction;
    sub_23BC7260C();
    sub_23BC72594();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v12);
LABEL_9:
    v30 = (uint64_t)v40;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  if (!*(_BYTE *)(v20 + 32))
  {
    v43 = 0;
    sub_23BC6E130();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v12);
    v27 = 0;
LABEL_11:
    v30 = (uint64_t)v40;
    *v37 = v27;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  if (*(_BYTE *)(v20 + 32) != 1)
  {
    v45 = 2;
    sub_23BC6E0A8();
    sub_23BC72600();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v12);
    v27 = 1;
    goto LABEL_11;
  }
  v39 = (char *)v20;
  v44 = 1;
  sub_23BC6E0EC();
  v21 = v15;
  sub_23BC72600();
  v22 = v12;
  v23 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A78CA8);
  sub_23BC6E604(&qword_256A78CE0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
  v29 = v33;
  sub_23BC72684();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v29);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v22);
  v30 = (uint64_t)v40;
  *v23 = v42;
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_23BC6E604(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A78CA8);
    v8 = a2;
    result = MEMORY[0x24260ED10](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BC6E664@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return UpNextQueueMonitorAction.init(from:)(a1, a2);
}

uint64_t sub_23BC6E678(_QWORD *a1)
{
  return UpNextQueueMonitorAction.encode(to:)(a1);
}

uint64_t UpNextQueueMonitorAction.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (!*v1 || v3 == 1)
    return sub_23BC727B0();
  sub_23BC727B0();
  return sub_23BC2B204(a1, v3);
}

uint64_t UpNextQueueMonitorAction.hashValue.getter()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23BC727A4();
  sub_23BC727B0();
  if (v1 > 1)
    sub_23BC2B204((uint64_t)v3, v1);
  return sub_23BC727E0();
}

uint64_t sub_23BC6E76C()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23BC727A4();
  sub_23BC727B0();
  if (v1 > 1)
    sub_23BC2B204((uint64_t)v3, v1);
  return sub_23BC727E0();
}

uint64_t sub_23BC6E7DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (!*v1 || v3 == 1)
    return sub_23BC727B0();
  sub_23BC727B0();
  return sub_23BC2B204(a1, v3);
}

uint64_t sub_23BC6E848()
{
  unint64_t *v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23BC727A4();
  sub_23BC727B0();
  if (v1 > 1)
    sub_23BC2B204((uint64_t)v3, v1);
  return sub_23BC727E0();
}

uint64_t _s14FitnessActions24UpNextQueueMonitorActionO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      v2 = 0;
      v4 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v2 != 1)
  {
    if (v3 >= 2)
    {
      sub_23BC4E364(*a2);
      sub_23BC4E364(v2);
      v4 = sub_23BC6D74C(v2, v3);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
LABEL_8:
    sub_23BC4E364(*a2);
    sub_23BC4E364(v2);
    v4 = 0;
    goto LABEL_10;
  }
  v2 = 1;
  v4 = 1;
LABEL_10:
  sub_23BC4E374(v2);
  sub_23BC4E374(v3);
  return v4 & 1;
}

unint64_t sub_23BC6E968()
{
  unint64_t result;

  result = qword_256A78CE8;
  if (!qword_256A78CE8)
  {
    result = MEMORY[0x24260ED10](&protocol conformance descriptor for UpNextQueueMonitorAction, &type metadata for UpNextQueueMonitorAction);
    atomic_store(result, (unint64_t *)&qword_256A78CE8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UpNextQueueMonitorAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for UpNextQueueMonitorAction(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for UpNextQueueMonitorAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for UpNextQueueMonitorAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpNextQueueMonitorAction(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UpNextQueueMonitorAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_23BC6EB9C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23BC6EBB4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorAction()
{
  return &type metadata for UpNextQueueMonitorAction;
}

uint64_t storeEnumTagSinglePayload for UpNextQueueMonitorAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BC6EC30 + 4 * byte_23BC81155[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BC6EC64 + 4 * byte_23BC81150[v4]))();
}

uint64_t sub_23BC6EC64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC6EC6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC6EC74);
  return result;
}

uint64_t sub_23BC6EC80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC6EC88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BC6EC8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC6EC94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorAction.CodingKeys()
{
  return &type metadata for UpNextQueueMonitorAction.CodingKeys;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorAction.FetchUpNextItemsCodingKeys()
{
  return &type metadata for UpNextQueueMonitorAction.FetchUpNextItemsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for UpNextQueueMonitorAction.UpNextItemsUpdatedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC6ED00 + 4 * byte_23BC8115A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC6ED20 + 4 * byte_23BC8115F[v4]))();
}

_BYTE *sub_23BC6ED00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC6ED20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC6ED28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC6ED30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC6ED38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC6ED40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorAction.UpNextItemsUpdatedCodingKeys()
{
  return &type metadata for UpNextQueueMonitorAction.UpNextItemsUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for UpNextQueueMonitorAction.ViewAppearedCodingKeys()
{
  return &type metadata for UpNextQueueMonitorAction.ViewAppearedCodingKeys;
}

unint64_t sub_23BC6ED70()
{
  unint64_t result;

  result = qword_256A78CF0;
  if (!qword_256A78CF0)
  {
    result = MEMORY[0x24260ED10](&unk_23BC81398, &type metadata for UpNextQueueMonitorAction.UpNextItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78CF0);
  }
  return result;
}

unint64_t sub_23BC6EDB8()
{
  unint64_t result;

  result = qword_256A78CF8;
  if (!qword_256A78CF8)
  {
    result = MEMORY[0x24260ED10](&unk_23BC814A0, &type metadata for UpNextQueueMonitorAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78CF8);
  }
  return result;
}

unint64_t sub_23BC6EE00()
{
  unint64_t result;

  result = qword_256A78D00;
  if (!qword_256A78D00)
  {
    result = MEMORY[0x24260ED10](&unk_23BC813C0, &type metadata for UpNextQueueMonitorAction.FetchUpNextItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78D00);
  }
  return result;
}

unint64_t sub_23BC6EE48()
{
  unint64_t result;

  result = qword_256A78D08;
  if (!qword_256A78D08)
  {
    result = MEMORY[0x24260ED10](&unk_23BC813E8, &type metadata for UpNextQueueMonitorAction.FetchUpNextItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78D08);
  }
  return result;
}

unint64_t sub_23BC6EE90()
{
  unint64_t result;

  result = qword_256A78D10;
  if (!qword_256A78D10)
  {
    result = MEMORY[0x24260ED10](&unk_23BC81308, &type metadata for UpNextQueueMonitorAction.UpNextItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78D10);
  }
  return result;
}

unint64_t sub_23BC6EED8()
{
  unint64_t result;

  result = qword_256A78D18;
  if (!qword_256A78D18)
  {
    result = MEMORY[0x24260ED10](&unk_23BC81330, &type metadata for UpNextQueueMonitorAction.UpNextItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78D18);
  }
  return result;
}

unint64_t sub_23BC6EF20()
{
  unint64_t result;

  result = qword_256A78D20;
  if (!qword_256A78D20)
  {
    result = MEMORY[0x24260ED10](&unk_23BC812B8, &type metadata for UpNextQueueMonitorAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78D20);
  }
  return result;
}

unint64_t sub_23BC6EF68()
{
  unint64_t result;

  result = qword_256A78D28;
  if (!qword_256A78D28)
  {
    result = MEMORY[0x24260ED10](&unk_23BC812E0, &type metadata for UpNextQueueMonitorAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78D28);
  }
  return result;
}

unint64_t sub_23BC6EFB0()
{
  unint64_t result;

  result = qword_256A78D30;
  if (!qword_256A78D30)
  {
    result = MEMORY[0x24260ED10](&unk_23BC81410, &type metadata for UpNextQueueMonitorAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A78D30);
  }
  return result;
}

unint64_t sub_23BC6EFF8()
{
  unint64_t result;

  result = qword_256A78D38[0];
  if (!qword_256A78D38[0])
  {
    result = MEMORY[0x24260ED10](&unk_23BC81438, &type metadata for UpNextQueueMonitorAction.CodingKeys);
    atomic_store(result, qword_256A78D38);
  }
  return result;
}

uint64_t sub_23BC6F03C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023BC82F40 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BC82F60 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t ActionContext.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v8 = *(_QWORD *)(a1 + 16);
  if (EnumCaseMultiPayload != 1)
    return (*(uint64_t (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v8 - 8) + 32))(a2, v5, *(_QWORD *)(a1 + 16));
  v9 = *(_QWORD *)(a1 + 24);
  v10 = &v5[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, v5, v8);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v10, v9);
}

uint64_t ActionContext.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v5);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v17, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = &v15[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v18, v3);
    sub_23BC727B0();
    sub_23BC72264();
    sub_23BC72264();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v15, v9);
    sub_23BC727B0();
    sub_23BC72264();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

void static ActionContext.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[20];

  v18[8] = a1;
  v18[9] = a2;
  v18[4] = *(_QWORD *)(a4 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v18[1] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v18[6] = (char *)v18 - v7;
  v18[7] = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v9);
  v18[10] = v11;
  v18[11] = v10;
  v18[12] = v11;
  v18[13] = v12;
  v18[14] = v13;
  v18[15] = v14;
  v18[3] = v14;
  v18[16] = v15;
  v18[17] = v16;
  v18[0] = v17;
  v18[18] = v17;
  type metadata accessor for ActionContext();
}

uint64_t sub_23BC6F560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _BYTE *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t);
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  _BYTE v39[96];

  v5 = a1;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v39[-v10];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 - 224) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v13 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v15 = &v39[-v14];
  v16 = &v39[*(int *)(v13 + 48) - v14];
  *(_QWORD *)(v4 - 200) = v6;
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  v17(&v39[-v14], *(_BYTE **)(v4 - 176), v5);
  v17(v16, *(_BYTE **)(v4 - 168), v5);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v17(v11, v15, v5);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v34 = *(_QWORD *)(v4 - 184);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v34 + 32))(v3, v16, v1);
      v32 = sub_23BC7227C();
      v35 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v35(v3, v1);
      v35((uint64_t)v11, v1);
      v29 = *(_QWORD *)(v4 - 200);
      goto LABEL_11;
    }
    v9 = v11;
    goto LABEL_8;
  }
  v17(v9, v15, v5);
  v18 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v19 = &v9[v18];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v4 - 208) + 8))(&v9[v18], *(_QWORD *)(v4 - 160));
LABEL_8:
    v29 = *(_QWORD *)(v4 - 224);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 184) + 8))(v9, v1);
    v32 = 0;
    v5 = TupleTypeMetadata2;
    goto LABEL_11;
  }
  *(_QWORD *)(v4 - 168) = &v16[v18];
  v20 = *(_QWORD *)(v4 - 184);
  v21 = v2;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v20 + 32))(v2, v16, v1);
  v22 = *(_QWORD *)(v4 - 208);
  v23 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v22 + 32);
  v24 = *(_QWORD *)(v4 - 160);
  v23(*(_QWORD *)(v4 - 192), v19, v24);
  v25 = *(_QWORD *)(v4 - 232);
  v23(v25, *(_BYTE **)(v4 - 168), v24);
  *(_QWORD *)(v4 - 168) = v21;
  LOBYTE(v23) = sub_23BC7227C();
  v26 = *(void (**)(_BYTE *, uint64_t))(v20 + 8);
  v27 = v9;
  v28 = v22;
  v26(v27, v1);
  v29 = *(_QWORD *)(v4 - 200);
  if ((v23 & 1) != 0)
  {
    v30 = *(_QWORD *)(v4 - 192);
    v31 = *(_QWORD *)(v4 - 160);
    v32 = sub_23BC7227C();
    v33 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v33(v25, v31);
    v33(v30, v31);
    v26(*(_BYTE **)(v4 - 168), v1);
  }
  else
  {
    v36 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v37 = *(_QWORD *)(v4 - 160);
    v36(v25, v37);
    v36(*(_QWORD *)(v4 - 192), v37);
    v26(*(_BYTE **)(v4 - 168), v1);
    v32 = 0;
  }
LABEL_11:
  (*(void (**)(_BYTE *, uint64_t))(v29 + 8))(v15, v5);
  return v32 & 1;
}

void type metadata accessor for ActionContext()
{
  JUMPOUT(0x24260EC74);
}

uint64_t sub_23BC6F898(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574617473;
  else
    return 0x696669746E656469;
}

uint64_t sub_23BC6F8D0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23BC72744() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BC72744();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BC6F9B8(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_23BC6FB5C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC0F624);
}

uint64_t sub_23BC6F9C8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BC6FBE4(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC0F634);
}

uint64_t sub_23BC6F9D4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BC6FC2C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC0F634);
}

uint64_t sub_23BC6F9E0(_QWORD *a1, uint64_t a2)
{
  return sub_23BC6FC98(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC6F898);
}

uint64_t sub_23BC6F9F0@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23BC6FD24(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC148B8, a2);
}

uint64_t sub_23BC6F9FC(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC819E0, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC6FA30(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC819E0, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC6FA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BBE9BD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BC6FAAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BBE8CD8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23BC6FAE8(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC81A30, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC6FB1C(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC81A30, a1);
  return sub_23BC72834();
}

uint64_t sub_23BC6FB50(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_23BC6FB5C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC71B28);
}

uint64_t sub_23BC6FB5C(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]) & 1;
}

uint64_t sub_23BC6FBA0()
{
  return sub_23BC0FF5C();
}

uint64_t sub_23BC6FBD8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BC6FBE4(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC71B1C);
}

uint64_t sub_23BC6FBE4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;

  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9]);
}

uint64_t sub_23BC6FC20(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BC6FC2C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC71B1C);
}

uint64_t sub_23BC6FC2C(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_23BC727A4();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9]);
  return sub_23BC727E0();
}

uint64_t sub_23BC6FC8C(_QWORD *a1, uint64_t a2)
{
  return sub_23BC6FC98(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC71B34);
}

uint64_t sub_23BC6FC98(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
}

uint64_t sub_23BC6FCD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BC6F8D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BC6FD18@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23BC6FD24(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BC71B40, a2);
}

uint64_t sub_23BC6FD24@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  *a3 = result;
  return result;
}

uint64_t sub_23BC6FD60(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC81A80, a1);
  return sub_23BC72828();
}

uint64_t sub_23BC6FD94(uint64_t a1)
{
  MEMORY[0x24260ED10](&unk_23BC81A80, a1);
  return sub_23BC72834();
}

void ActionContext.encode(to:)()
{
  type metadata accessor for ActionContext.StateCodingKeys();
}

void sub_23BC6FE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v18 = MEMORY[0x24260ED10](&unk_23BC81A80, a1);
  *(_QWORD *)(v16 - 296) = a1;
  *(_QWORD *)(v16 - 304) = v18;
  v19 = sub_23BC7272C();
  *(_QWORD *)(v16 - 288) = v19;
  *(_QWORD *)(v16 - 272) = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v16 - 176) = (char *)&a9 - v21;
  *(_QWORD *)(v16 - 208) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v16 - 168) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v16 - 152) = v9;
  *(_QWORD *)(v16 - 144) = v10;
  *(_QWORD *)(v16 - 136) = v14;
  *(_QWORD *)(v16 - 128) = v15;
  *(_QWORD *)(v16 - 120) = v12;
  *(_QWORD *)(v16 - 112) = v13;
  *(_QWORD *)(v16 - 104) = *(_QWORD *)(v16 - 160);
  *(_QWORD *)(v16 - 96) = v11;
  type metadata accessor for ActionContext.IdentifierCodingKeys();
}

void sub_23BC6FEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v19 = MEMORY[0x24260ED10](&unk_23BC81A30, a1);
  *(_QWORD *)(v17 - 328) = a1;
  *(_QWORD *)(v17 - 336) = v19;
  v20 = sub_23BC7272C();
  *(_QWORD *)(v17 - 312) = v20;
  *(_QWORD *)(v17 - 344) = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v17 - 320) = (char *)&a9 - v22;
  *(_QWORD *)(v17 - 248) = *(_QWORD *)(v9 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v17 - 216) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v17 - 264) = (char *)&a9 - v26;
  *(_QWORD *)(v17 - 192) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v17 - 240) = v9;
  *(_QWORD *)(v17 - 152) = v9;
  *(_QWORD *)(v17 - 144) = v10;
  *(_QWORD *)(v17 - 280) = v10;
  *(_QWORD *)(v17 - 136) = *(_QWORD *)(v17 - 200);
  *(_QWORD *)(v17 - 128) = v16;
  *(_QWORD *)(v17 - 232) = v16;
  *(_QWORD *)(v17 - 120) = v12;
  *(_QWORD *)(v17 - 112) = v13;
  *(_QWORD *)(v17 - 104) = v15;
  *(_QWORD *)(v17 - 96) = v11;
  type metadata accessor for ActionContext.CodingKeys();
}

uint64_t sub_23BC70020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  MEMORY[0x24260ED10](&unk_23BC819E0, a1);
  v4 = sub_23BC7272C();
  *(_QWORD *)(v3 - 256) = v4;
  *(_QWORD *)(v3 - 200) = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - v5;
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v3 - 72), *(_QWORD *)(*(_QWORD *)(v3 - 72) + 24));
  *(_QWORD *)(v3 - 72) = v6;
  sub_23BC7281C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 192) + 16))(v1, *(_QWORD *)(v3 - 184), v2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = *(_QWORD *)(v3 - 240);
    v8 = *(_QWORD *)(v3 - 280);
    v9 = v1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v10 = *(_QWORD *)(v3 - 248);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 32))(*(_QWORD *)(v3 - 216), v1, v7);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 208) + 32))(*(_QWORD *)(v3 - 168), v9, v8);
    *(_BYTE *)(v3 - 152) = 1;
    v11 = *(_QWORD *)(v3 - 256);
    sub_23BC726A8();
    *(_BYTE *)(v3 - 152) = 0;
    v12 = *(_QWORD *)(v3 - 288);
    v13 = *(_QWORD *)(v3 - 224);
    sub_23BC72720();
    if (!v13)
    {
      *(_BYTE *)(v3 - 152) = 1;
      sub_23BC72720();
    }
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 272) + 8))(*(_QWORD *)(v3 - 176), v12);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 208) + 8))(*(_QWORD *)(v3 - 168), v8);
    (*(void (**)(_QWORD, uint64_t))(v10 + 8))(*(_QWORD *)(v3 - 216), v7);
    return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 200) + 8))(*(_QWORD *)(v3 - 72), v11);
  }
  else
  {
    v15 = *(_QWORD *)(v3 - 344);
    v16 = *(_QWORD *)(v3 - 248);
    v17 = *(_QWORD *)(v3 - 240);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 32))(*(_QWORD *)(v3 - 264), v1, v17);
    *(_BYTE *)(v3 - 152) = 0;
    v18 = *(_QWORD *)(v3 - 320);
    v19 = *(_QWORD *)(v3 - 256);
    v20 = *(_QWORD *)(v3 - 72);
    sub_23BC726A8();
    v21 = *(_QWORD *)(v3 - 312);
    sub_23BC72720();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v21);
    (*(void (**)(_QWORD, uint64_t))(v16 + 8))(*(_QWORD *)(v3 - 264), v17);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 200) + 8))(v20, v19);
  }
}

void type metadata accessor for ActionContext.StateCodingKeys()
{
  JUMPOUT(0x24260EC74);
}

void type metadata accessor for ActionContext.IdentifierCodingKeys()
{
  JUMPOUT(0x24260EC74);
}

void type metadata accessor for ActionContext.CodingKeys()
{
  JUMPOUT(0x24260EC74);
}

uint64_t ActionContext.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BC727A4();
  ActionContext.hash(into:)((uint64_t)v3, a1);
  return sub_23BC727E0();
}

void ActionContext.init(from:)()
{
  type metadata accessor for ActionContext.StateCodingKeys();
}

void sub_23BC703CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = MEMORY[0x24260ED10](&unk_23BC81A80, a1);
  *(_QWORD *)(v17 - 264) = a1;
  *(_QWORD *)(v17 - 272) = v19;
  v20 = sub_23BC7269C();
  *(_QWORD *)(v17 - 312) = v20;
  *(_QWORD *)(v17 - 320) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v17 - 232) = (char *)&a9 - v21;
  *(_QWORD *)(v17 - 160) = v14;
  *(_QWORD *)(v17 - 152) = v10;
  *(_QWORD *)(v17 - 144) = v15;
  *(_QWORD *)(v17 - 136) = v13;
  *(_QWORD *)(v17 - 128) = v12;
  *(_QWORD *)(v17 - 120) = v11;
  *(_QWORD *)(v17 - 112) = v16;
  *(_QWORD *)(v17 - 104) = v9;
  *(_QWORD *)(v17 - 216) = v16;
  type metadata accessor for ActionContext.IdentifierCodingKeys();
}

void sub_23BC7045C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = MEMORY[0x24260ED10](&unk_23BC81A30, a1);
  *(_QWORD *)(v17 - 288) = a1;
  *(_QWORD *)(v17 - 296) = v19;
  v20 = sub_23BC7269C();
  *(_QWORD *)(v17 - 328) = v20;
  *(_QWORD *)(v17 - 336) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v17 - 280) = (char *)&a9 - v21;
  *(_QWORD *)(v17 - 160) = v14;
  *(_QWORD *)(v17 - 152) = v10;
  *(_QWORD *)(v17 - 144) = v15;
  *(_QWORD *)(v17 - 136) = v13;
  *(_QWORD *)(v17 - 128) = v12;
  *(_QWORD *)(v17 - 120) = v11;
  *(_QWORD *)(v17 - 112) = v16;
  *(_QWORD *)(v17 - 104) = v9;
  type metadata accessor for ActionContext.CodingKeys();
}

void sub_23BC704EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 208) = MEMORY[0x24260ED10](&unk_23BC819E0, a1);
  v9 = sub_23BC7269C();
  *(_QWORD *)(v8 - 248) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 - 240) = v9;
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v8 - 224) = v6;
  *(_QWORD *)(v8 - 160) = v6;
  *(_QWORD *)(v8 - 152) = v2;
  *(_QWORD *)(v8 - 368) = v2;
  *(_QWORD *)(v8 - 304) = v7;
  *(_QWORD *)(v8 - 144) = v7;
  *(_QWORD *)(v8 - 136) = v5;
  *(_QWORD *)(v8 - 128) = v4;
  *(_QWORD *)(v8 - 120) = v3;
  *(_QWORD *)(v8 - 360) = v3;
  *(_QWORD *)(v8 - 112) = *(_QWORD *)(v8 - 216);
  *(_QWORD *)(v8 - 104) = v1;
  type metadata accessor for ActionContext();
}

uint64_t sub_23BC70580(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[96];

  *(_QWORD *)(v3 - 256) = a1;
  *(_QWORD *)(v3 - 352) = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = &v40[-v8];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v40[-v10];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 216) = v2;
  v12 = *(_QWORD *)(v3 - 200);
  sub_23BC72810();
  if (v12)
  {
    v13 = (uint64_t)v1;
  }
  else
  {
    *(_QWORD *)(v3 - 208) = v9;
    *(_QWORD *)(v3 - 200) = v6;
    *(_QWORD *)(v3 - 376) = v11;
    v14 = *(_QWORD *)(v3 - 232);
    v15 = *(_QWORD *)(v3 - 240);
    v16 = *(_QWORD *)(v3 - 216);
    *(_QWORD *)(v3 - 192) = sub_23BC72690();
    v17 = sub_23BC723C0();
    MEMORY[0x24260ED10](MEMORY[0x24BEE12C8], v17);
    *(_QWORD *)(v3 - 160) = sub_23BC72534();
    *(_QWORD *)(v3 - 152) = v18;
    *(_QWORD *)(v3 - 144) = v19;
    *(_QWORD *)(v3 - 136) = v20;
    v21 = sub_23BC72528();
    MEMORY[0x24260ED10](MEMORY[0x24BEE2190], v21);
    sub_23BC724A4();
    v22 = *(unsigned __int8 *)(v3 - 192);
    if (v22 == 2
      || (v24 = *(_OWORD *)(v3 - 160),
          v23 = *(_OWORD *)(v3 - 144),
          *(_OWORD *)(v3 - 400) = v24,
          *(_OWORD *)(v3 - 192) = v24,
          *(_OWORD *)(v3 - 176) = v23,
          (sub_23BC724B0() & 1) == 0))
    {
      v26 = sub_23BC725A0();
      swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A74220);
      *v28 = *(_QWORD *)(v3 - 256);
      sub_23BC7260C();
      sub_23BC72594();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v16, v15);
    }
    else
    {
      if ((v22 & 1) != 0)
      {
        *(_BYTE *)(v3 - 192) = 1;
        v30 = v14;
        v31 = v15;
        sub_23BC72600();
        *(_BYTE *)(v3 - 192) = 0;
        v34 = *(_QWORD *)(v3 - 200);
        v35 = *(_QWORD *)(v3 - 312);
        sub_23BC72684();
        swift_getTupleTypeMetadata2();
        *(_BYTE *)(v3 - 192) = 1;
        sub_23BC72684();
        v39 = *(_QWORD *)(v3 - 248);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 320) + 8))(v30, v35);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v16, v31);
        v36 = *(_QWORD *)(v3 - 256);
        swift_storeEnumTagMultiPayload();
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 352) + 32);
        v38 = *(_QWORD *)(v3 - 376);
        v37(v38, v34, v36);
      }
      else
      {
        *(_BYTE *)(v3 - 192) = 0;
        v25 = *(_QWORD *)(v3 - 280);
        sub_23BC72600();
        v32 = *(_QWORD *)(v3 - 208);
        v33 = *(_QWORD *)(v3 - 328);
        sub_23BC72684();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 336) + 8))(v25, v33);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v16, v15);
        v36 = *(_QWORD *)(v3 - 256);
        swift_storeEnumTagMultiPayload();
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 352) + 32);
        v38 = *(_QWORD *)(v3 - 376);
        v37(v38, v32, v36);
      }
      v37(*(_QWORD *)(v3 - 344), v38, v36);
    }
    v13 = *(_QWORD *)(v3 - 72);
  }
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

void sub_23BC70AE8()
{
  ActionContext.init(from:)();
}

void sub_23BC70B1C()
{
  ActionContext.encode(to:)();
}

uint64_t sub_23BC70B38(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BC727A4();
  ActionContext.hash(into:)((uint64_t)v4, a2);
  return sub_23BC727E0();
}

void sub_23BC70B78()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC70B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static ActionContext.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_23BC70BB0(char a1)
{
  return a1 & 1;
}

uint64_t sub_23BC70BC0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23BC70BC8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v3[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23BC70C68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v7 + v9;
  if (((v7 + v9) & ~v9) + *(_QWORD *)(v8 + 64) <= v7)
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = ((v7 + v9) & ~v9) + *(_QWORD *)(v8 + 64);
  v12 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v8 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || (unint64_t)(v11 + 1) > 0x18)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v16 = *((unsigned __int8 *)a2 + v11);
    if (v16 >= 2)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    if (v16 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & ~v9, ((unint64_t)a2 + v10) & ~v9, v5);
      *((_BYTE *)v4 + v11) = 1;
    }
    else
    {
      *((_BYTE *)v4 + v11) = 0;
    }
  }
  return v4;
}

uint64_t sub_23BC70DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(v3 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v5 + v7;
  if (((v5 + v7) & ~v7) + *(_QWORD *)(v6 + 64) > v5)
    v5 = ((v5 + v7) & ~v7) + *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(a1 + v5);
  if (v9 >= 2)
  {
    if (v5 <= 3)
      v10 = v5;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  result = (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
  if (v9 == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))((v8 + a1) & ~v7, v3);
  return result;
}

uint64_t sub_23BC70EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  if (((v7 + v9) & ~v9) + *(_QWORD *)(v8 + 64) <= v7)
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = ((v7 + v9) & ~v9) + *(_QWORD *)(v8 + 64);
  v12 = *(unsigned __int8 *)(a2 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, a2);
  if (v12 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v10 + a1) & ~v9, (v10 + a2) & ~v9, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  *(_BYTE *)(a1 + v11) = v14;
  return a1;
}

uint64_t sub_23BC71008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v5 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v8 + v10;
    v12 = *(_QWORD *)(v9 + 64);
    if (((v8 + v10) & ~v10) + v12 <= v8)
      v13 = *(_QWORD *)(v7 + 64);
    else
      v13 = ((v8 + v10) & ~v10) + v12;
    v14 = *(unsigned __int8 *)(a1 + v13);
    if (v14 >= 2)
    {
      if (v13 <= 3)
        v15 = v13;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = ~v10;
    (*(void (**)(uint64_t, _QWORD))(v7 + 8))(a1, *(_QWORD *)(a3 + 16));
    if (v14 == 1)
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))((v11 + a1) & v16, v5);
    v17 = *(unsigned __int8 *)(a2 + v13);
    if (v17 >= 2)
    {
      if (v13 <= 3)
        v18 = v13;
      else
        v18 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
    if (v17 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))((v11 + a1) & v16, (v11 + a2) & v16, v5);
      v19 = 1;
    }
    else
    {
      v19 = 0;
    }
    *(_BYTE *)(a1 + v13) = v19;
  }
  return a1;
}

uint64_t sub_23BC711D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  if (((v7 + v9) & ~v9) + *(_QWORD *)(v8 + 64) <= v7)
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = ((v7 + v9) & ~v9) + *(_QWORD *)(v8 + 64);
  v12 = *(unsigned __int8 *)(a2 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a1, a2);
  if (v12 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))((v10 + a1) & ~v9, (v10 + a2) & ~v9, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  *(_BYTE *)(a1 + v11) = v14;
  return a1;
}

uint64_t sub_23BC71300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v5 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v8 + v10;
    v12 = *(_QWORD *)(v9 + 64);
    if (((v8 + v10) & ~v10) + v12 <= v8)
      v13 = *(_QWORD *)(v7 + 64);
    else
      v13 = ((v8 + v10) & ~v10) + v12;
    v14 = *(unsigned __int8 *)(a1 + v13);
    if (v14 >= 2)
    {
      if (v13 <= 3)
        v15 = v13;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = ~v10;
    (*(void (**)(uint64_t, _QWORD))(v7 + 8))(a1, *(_QWORD *)(a3 + 16));
    if (v14 == 1)
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))((v11 + a1) & v16, v5);
    v17 = *(unsigned __int8 *)(a2 + v13);
    if (v17 >= 2)
    {
      if (v13 <= 3)
        v18 = v13;
      else
        v18 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
    if (v17 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))((v11 + a1) & v16, (v11 + a2) & v16, v5);
      v19 = 1;
    }
    else
    {
      v19 = 0;
    }
    *(_BYTE *)(a1 + v13) = v19;
  }
  return a1;
}

uint64_t sub_23BC714D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v4 = ((v3 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v4 <= v3)
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_21:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 2)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_21;
LABEL_14:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 255);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BC715A8 + 4 * byte_23BC81638[(v5 - 1)]))();
}

void sub_23BC715F4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (((v5 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = ((v5 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_23BC717B0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v3 = ((v2 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (v3 <= v2)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BC7180C + 4 * byte_23BC81646[v4]))();
}

void sub_23BC71854(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v5 = ((v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (a2 > 1)
  {
    if (v5 <= v4)
      v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    else
      v6 = ((v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80))
         + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    v7 = a2 - 2;
    if (v6 < 4)
    {
      v8 = v7 >> (8 * v6);
      v9 = v7 & ~(-1 << (8 * v6));
      a1[v6] = v8 + 2;
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *(_WORD *)a1 = v9;
        a1[2] = BYTE2(v9);
      }
      else if ((_DWORD)v6 == 2)
      {
        *(_WORD *)a1 = v9;
      }
      else
      {
        *a1 = v9;
      }
    }
    else
    {
      a1[v6] = 2;
      bzero(a1, v6);
      *(_DWORD *)a1 = v7;
    }
  }
  else
  {
    if (v5 > v4)
      v4 = ((v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80))
         + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    a1[v4] = a2;
  }
}

uint64_t sub_23BC71938()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23BC71944(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BC71984 + 4 * byte_23BC8164B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BC719A4 + 4 * byte_23BC81650[v4]))();
}

_BYTE *sub_23BC71984(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BC719A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC719AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC719B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BC719BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BC719C4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23BC719D0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BC71A1C + 4 * byte_23BC8165A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BC71A50 + 4 * byte_23BC81655[v4]))();
}

uint64_t sub_23BC71A50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC71A58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BC71A60);
  return result;
}

uint64_t sub_23BC71A6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BC71A74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BC71A78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BC71A80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23BC71A8C()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71A9C()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71AAC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71ABC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71ACC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71ADC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71AEC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71AFC()
{
  JUMPOUT(0x24260ED10);
}

void sub_23BC71B0C()
{
  JUMPOUT(0x24260ED10);
}

uint64_t sub_23BC71B1C()
{
  return sub_23BC0F634();
}

BOOL sub_23BC71B28(int a1, int a2)
{
  return sub_23BC0F624(a1, a2);
}

uint64_t sub_23BC71B34(char a1)
{
  return sub_23BC6F898(a1);
}

uint64_t sub_23BC71B44()
{
  return MEMORY[0x24BDCB148]();
}

uint64_t sub_23BC71B50()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_23BC71B5C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23BC71B68()
{
  return MEMORY[0x24BDCE010]();
}

uint64_t sub_23BC71B74()
{
  return MEMORY[0x24BDCE040]();
}

uint64_t sub_23BC71B80()
{
  return MEMORY[0x24BDCE060]();
}

uint64_t sub_23BC71B8C()
{
  return MEMORY[0x24BDCE078]();
}

uint64_t sub_23BC71B98()
{
  return MEMORY[0x24BDCE140]();
}

uint64_t sub_23BC71BA4()
{
  return MEMORY[0x24BDCE160]();
}

uint64_t sub_23BC71BB0()
{
  return MEMORY[0x24BDCE1B8]();
}

uint64_t sub_23BC71BBC()
{
  return MEMORY[0x24BDCE1E0]();
}

uint64_t sub_23BC71BC8()
{
  return MEMORY[0x24BDCE250]();
}

uint64_t sub_23BC71BD4()
{
  return MEMORY[0x24BDCE2A0]();
}

uint64_t sub_23BC71BE0()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_23BC71BEC()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23BC71BF8()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23BC71C04()
{
  return MEMORY[0x24BDCE8D8]();
}

uint64_t sub_23BC71C10()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23BC71C1C()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23BC71C28()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23BC71C34()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23BC71C40()
{
  return MEMORY[0x24BDCECD8]();
}

uint64_t sub_23BC71C4C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23BC71C58()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_23BC71C64()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23BC71C70()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23BC71C7C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23BC71C88()
{
  return MEMORY[0x24BDEAE98]();
}

uint64_t sub_23BC71C94()
{
  return MEMORY[0x24BDEAEB0]();
}

uint64_t sub_23BC71CA0()
{
  return MEMORY[0x24BDEAF80]();
}

uint64_t sub_23BC71CAC()
{
  return MEMORY[0x24BDEAF98]();
}

uint64_t sub_23BC71CB8()
{
  return MEMORY[0x24BDEAFA8]();
}

uint64_t sub_23BC71CC4()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_23BC71CD0()
{
  return MEMORY[0x24BDEB780]();
}

uint64_t sub_23BC71CDC()
{
  return MEMORY[0x24BDEB790]();
}

uint64_t sub_23BC71CE8()
{
  return MEMORY[0x24BDEBBA8]();
}

uint64_t sub_23BC71CF4()
{
  return MEMORY[0x24BDEBDE0]();
}

uint64_t sub_23BC71D00()
{
  return MEMORY[0x24BDEBDF0]();
}

uint64_t sub_23BC71D0C()
{
  return MEMORY[0x24BDEBE00]();
}

uint64_t sub_23BC71D18()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_23BC71D24()
{
  return MEMORY[0x24BDEBF88]();
}

uint64_t sub_23BC71D30()
{
  return MEMORY[0x24BDEC260]();
}

uint64_t sub_23BC71D3C()
{
  return MEMORY[0x24BDEC268]();
}

uint64_t sub_23BC71D48()
{
  return MEMORY[0x24BDEC280]();
}

uint64_t sub_23BC71D54()
{
  return MEMORY[0x24BDEC778]();
}

uint64_t sub_23BC71D60()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t sub_23BC71D6C()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_23BC71D78()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_23BC71D84()
{
  return MEMORY[0x24BDEDE08]();
}

uint64_t sub_23BC71D90()
{
  return MEMORY[0x24BDEE288]();
}

uint64_t sub_23BC71D9C()
{
  return MEMORY[0x24BDEE290]();
}

uint64_t sub_23BC71DA8()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_23BC71DB4()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_23BC71DC0()
{
  return MEMORY[0x24BDEE3B0]();
}

uint64_t sub_23BC71DCC()
{
  return MEMORY[0x24BDEE3B8]();
}

uint64_t sub_23BC71DD8()
{
  return MEMORY[0x24BDEE468]();
}

uint64_t sub_23BC71DE4()
{
  return MEMORY[0x24BDEE478]();
}

uint64_t sub_23BC71DF0()
{
  return MEMORY[0x24BDEE490]();
}

uint64_t sub_23BC71DFC()
{
  return MEMORY[0x24BDEE4A0]();
}

uint64_t sub_23BC71E08()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_23BC71E14()
{
  return MEMORY[0x24BDEF380]();
}

uint64_t sub_23BC71E20()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_23BC71E2C()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_23BC71E38()
{
  return MEMORY[0x24BDEFB50]();
}

uint64_t sub_23BC71E44()
{
  return MEMORY[0x24BDF0238]();
}

uint64_t sub_23BC71E50()
{
  return MEMORY[0x24BDF0D10]();
}

uint64_t sub_23BC71E5C()
{
  return MEMORY[0x24BDF0D18]();
}

uint64_t sub_23BC71E68()
{
  return MEMORY[0x24BDF1088]();
}

uint64_t sub_23BC71E74()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_23BC71E80()
{
  return MEMORY[0x24BDF1478]();
}

uint64_t sub_23BC71E8C()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t sub_23BC71E98()
{
  return MEMORY[0x24BDF1580]();
}

uint64_t sub_23BC71EA4()
{
  return MEMORY[0x24BDF1600]();
}

uint64_t sub_23BC71EB0()
{
  return MEMORY[0x24BDF17D8]();
}

uint64_t sub_23BC71EBC()
{
  return MEMORY[0x24BDF1818]();
}

uint64_t sub_23BC71EC8()
{
  return MEMORY[0x24BE37BF0]();
}

uint64_t sub_23BC71ED4()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_23BC71EE0()
{
  return MEMORY[0x24BEC6708]();
}

uint64_t sub_23BC71EEC()
{
  return MEMORY[0x24BE37C18]();
}

uint64_t sub_23BC71EF8()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_23BC71F04()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_23BC71F10()
{
  return MEMORY[0x24BDF2170]();
}

uint64_t sub_23BC71F1C()
{
  return MEMORY[0x24BDF2668]();
}

uint64_t sub_23BC71F28()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_23BC71F34()
{
  return MEMORY[0x24BDF27F0]();
}

uint64_t sub_23BC71F40()
{
  return MEMORY[0x24BDF2B50]();
}

uint64_t sub_23BC71F4C()
{
  return MEMORY[0x24BDF2BA8]();
}

uint64_t sub_23BC71F58()
{
  return MEMORY[0x24BDF2BC8]();
}

uint64_t sub_23BC71F64()
{
  return MEMORY[0x24BDF3178]();
}

uint64_t sub_23BC71F70()
{
  return MEMORY[0x24BDF3320]();
}

uint64_t sub_23BC71F7C()
{
  return MEMORY[0x24BDF3540]();
}

uint64_t sub_23BC71F88()
{
  return MEMORY[0x24BDF3580]();
}

uint64_t sub_23BC71F94()
{
  return MEMORY[0x24BDF35A0]();
}

uint64_t sub_23BC71FA0()
{
  return MEMORY[0x24BDF3628]();
}

uint64_t sub_23BC71FAC()
{
  return MEMORY[0x24BDF37D8]();
}

uint64_t sub_23BC71FB8()
{
  return MEMORY[0x24BDF38C0]();
}

uint64_t sub_23BC71FC4()
{
  return MEMORY[0x24BDF38C8]();
}

uint64_t sub_23BC71FD0()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t sub_23BC71FDC()
{
  return MEMORY[0x24BDF3F18]();
}

uint64_t sub_23BC71FE8()
{
  return MEMORY[0x24BDF3F28]();
}

uint64_t sub_23BC71FF4()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_23BC72000()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t sub_23BC7200C()
{
  return MEMORY[0x24BDF4048]();
}

uint64_t sub_23BC72018()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t sub_23BC72024()
{
  return MEMORY[0x24BDF4150]();
}

uint64_t sub_23BC72030()
{
  return MEMORY[0x24BDF4158]();
}

uint64_t sub_23BC7203C()
{
  return MEMORY[0x24BDF4330]();
}

uint64_t sub_23BC72048()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_23BC72054()
{
  return MEMORY[0x24BDF4368]();
}

uint64_t sub_23BC72060()
{
  return MEMORY[0x24BDF4380]();
}

uint64_t sub_23BC7206C()
{
  return MEMORY[0x24BDF44E0]();
}

uint64_t sub_23BC72078()
{
  return MEMORY[0x24BDF44E8]();
}

uint64_t sub_23BC72084()
{
  return MEMORY[0x24BDF44F0]();
}

uint64_t sub_23BC72090()
{
  return MEMORY[0x24BDF4508]();
}

uint64_t sub_23BC7209C()
{
  return MEMORY[0x24BDF4510]();
}

uint64_t sub_23BC720A8()
{
  return MEMORY[0x24BDF46D8]();
}

uint64_t sub_23BC720B4()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_23BC720C0()
{
  return MEMORY[0x24BE2B3B8]();
}

uint64_t sub_23BC720CC()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_23BC720D8()
{
  return MEMORY[0x24BDF4E28]();
}

uint64_t sub_23BC720E4()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t sub_23BC720F0()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_23BC720FC()
{
  return MEMORY[0x24BDF5058]();
}

uint64_t sub_23BC72108()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_23BC72114()
{
  return MEMORY[0x24BDF5418]();
}

uint64_t sub_23BC72120()
{
  return MEMORY[0x24BDF5448]();
}

uint64_t sub_23BC7212C()
{
  return MEMORY[0x24BE2B3C0]();
}

uint64_t sub_23BC72138()
{
  return MEMORY[0x24BE2B3D8]();
}

uint64_t sub_23BC72144()
{
  return MEMORY[0x24BE2B3E8]();
}

uint64_t sub_23BC72150()
{
  return MEMORY[0x24BE2B450]();
}

uint64_t sub_23BC7215C()
{
  return MEMORY[0x24BE2B460]();
}

uint64_t sub_23BC72168()
{
  return MEMORY[0x24BE2B470]();
}

uint64_t sub_23BC72174()
{
  return MEMORY[0x24BE2B560]();
}

uint64_t sub_23BC72180()
{
  return MEMORY[0x24BE2B588]();
}

uint64_t sub_23BC7218C()
{
  return MEMORY[0x24BE2B598]();
}

uint64_t sub_23BC72198()
{
  return MEMORY[0x24BE2B5A8]();
}

uint64_t sub_23BC721A4()
{
  return MEMORY[0x24BE2B5B8]();
}

uint64_t sub_23BC721B0()
{
  return MEMORY[0x24BE2B5D0]();
}

uint64_t sub_23BC721BC()
{
  return MEMORY[0x24BE5D228]();
}

uint64_t sub_23BC721C8()
{
  return MEMORY[0x24BE5D230]();
}

uint64_t sub_23BC721D4()
{
  return MEMORY[0x24BE5D2D8]();
}

uint64_t sub_23BC721E0()
{
  return MEMORY[0x24BE5D2F8]();
}

uint64_t sub_23BC721EC()
{
  return MEMORY[0x24BE5D308]();
}

uint64_t sub_23BC721F8()
{
  return MEMORY[0x24BE5D330]();
}

uint64_t sub_23BC72204()
{
  return MEMORY[0x24BE5D770]();
}

uint64_t sub_23BC72210()
{
  return MEMORY[0x24BE5D790]();
}

uint64_t sub_23BC7221C()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_23BC72228()
{
  return MEMORY[0x24BEE0480]();
}

uint64_t sub_23BC72234()
{
  return MEMORY[0x24BEE0490]();
}

uint64_t sub_23BC72240()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_23BC7224C()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_23BC72258()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23BC72264()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23BC72270()
{
  return MEMORY[0x24BEE0748]();
}

uint64_t sub_23BC7227C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23BC72288()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_23BC72294()
{
  return MEMORY[0x24BDCF908]();
}

uint64_t sub_23BC722A0()
{
  return MEMORY[0x24BDCF910]();
}

uint64_t sub_23BC722AC()
{
  return MEMORY[0x24BDCF930]();
}

uint64_t sub_23BC722B8()
{
  return MEMORY[0x24BDCF938]();
}

uint64_t sub_23BC722C4()
{
  return MEMORY[0x24BDCF948]();
}

uint64_t sub_23BC722D0()
{
  return MEMORY[0x24BDCF968]();
}

uint64_t sub_23BC722DC()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_23BC722E8()
{
  return MEMORY[0x24BDCFB20]();
}

uint64_t sub_23BC722F4()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23BC72300()
{
  return MEMORY[0x24BE37C28]();
}

uint64_t sub_23BC7230C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23BC72318()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23BC72324()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23BC72330()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_23BC7233C()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_23BC72348()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_23BC72354()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_23BC72360()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_23BC7236C()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_23BC72378()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_23BC72384()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23BC72390()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23BC7239C()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_23BC723A8()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_23BC723B4()
{
  return MEMORY[0x24BEE1228]();
}

uint64_t sub_23BC723C0()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23BC723CC()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23BC723D8()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t sub_23BC723E4()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_23BC723F0()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_23BC723FC()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_23BC72408()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_23BC72414()
{
  return MEMORY[0x24BEE6980]();
}

uint64_t sub_23BC72420()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_23BC7242C()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_23BC72438()
{
  return MEMORY[0x24BEE15F8]();
}

uint64_t sub_23BC72444()
{
  return MEMORY[0x24BEE1600]();
}

uint64_t sub_23BC72450()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_23BC7245C()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23BC72468()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_23BC72474()
{
  return MEMORY[0x24BEE18E0]();
}

uint64_t sub_23BC72480()
{
  return MEMORY[0x24BEE1908]();
}

uint64_t sub_23BC7248C()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_23BC72498()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_23BC724A4()
{
  return MEMORY[0x24BEE1930]();
}

uint64_t sub_23BC724B0()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_23BC724BC()
{
  return MEMORY[0x24BEE1A20]();
}

uint64_t sub_23BC724C8()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_23BC724D4()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23BC724E0()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23BC724EC()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23BC724F8()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23BC72504()
{
  return MEMORY[0x24BEE1C80]();
}

uint64_t sub_23BC72510()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23BC7251C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23BC72528()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t sub_23BC72534()
{
  return MEMORY[0x24BEE2168]();
}

uint64_t sub_23BC72540()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_23BC7254C()
{
  return MEMORY[0x24BEE23B8]();
}

uint64_t sub_23BC72558()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23BC72564()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23BC72570()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_23BC7257C()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23BC72588()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23BC72594()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23BC725A0()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23BC725AC()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23BC725B8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23BC725C4()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23BC725D0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23BC725DC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23BC725E8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23BC725F4()
{
  return MEMORY[0x24BEE3288]();
}

uint64_t sub_23BC72600()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23BC7260C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23BC72618()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23BC72624()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23BC72630()
{
  return MEMORY[0x24BEE32F0]();
}

uint64_t sub_23BC7263C()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23BC72648()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23BC72654()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23BC72660()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_23BC7266C()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_23BC72678()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_23BC72684()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23BC72690()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23BC7269C()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_23BC726A8()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23BC726B4()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23BC726C0()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23BC726CC()
{
  return MEMORY[0x24BEE3440]();
}

uint64_t sub_23BC726D8()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23BC726E4()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23BC726F0()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23BC726FC()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_23BC72708()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_23BC72714()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_23BC72720()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23BC7272C()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_23BC72738()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_23BC72744()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23BC72750()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_23BC7275C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23BC72768()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_23BC72774()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23BC72780()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23BC7278C()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23BC72798()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23BC727A4()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23BC727B0()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23BC727BC()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23BC727C8()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_23BC727D4()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23BC727E0()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23BC727EC()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_23BC727F8()
{
  return MEMORY[0x24BEE4418]();
}

uint64_t sub_23BC72804()
{
  return MEMORY[0x24BEE4420]();
}

uint64_t sub_23BC72810()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23BC7281C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23BC72828()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23BC72834()
{
  return MEMORY[0x24BEE4A10]();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

