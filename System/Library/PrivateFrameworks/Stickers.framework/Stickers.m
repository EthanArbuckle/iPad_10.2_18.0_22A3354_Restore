id sub_2479C6BB4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Versioning()), sel_init);
  qword_254450868 = (uint64_t)result;
  return result;
}

id static Versioning.shared.getter()
{
  if (qword_254450870 != -1)
    swift_once();
  return (id)qword_254450868;
}

uint64_t sub_2479C6C88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479C6D0C(a1, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride, a2);
}

uint64_t sub_2479C6C94(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2479C6D6C(a1, a2, a3, a4, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride);
}

uint64_t sub_2479C6CA0()
{
  return sub_2479C6DD0(&OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride);
}

uint64_t sub_2479C6CAC(uint64_t a1, char a2)
{
  return sub_2479C6E20(a1, a2, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride);
}

uint64_t (*sub_2479C6CB8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2479C6D00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479C6D0C(a1, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride, a2);
}

uint64_t sub_2479C6D0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;

  v4 = *a1 + *a2;
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 8);
  *(_QWORD *)a3 = *(_QWORD *)v4;
  *(_BYTE *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_2479C6D60(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2479C6D6C(a1, a2, a3, a4, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride);
}

uint64_t sub_2479C6D6C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v5 = *a1;
  v6 = *((_BYTE *)a1 + 8);
  v7 = *a2 + *a5;
  result = swift_beginAccess();
  *(_QWORD *)v7 = v5;
  *(_BYTE *)(v7 + 8) = v6;
  return result;
}

uint64_t sub_2479C6DC4()
{
  return sub_2479C6DD0(&OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride);
}

uint64_t sub_2479C6DD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *a1;
  swift_beginAccess();
  return *(_QWORD *)v2;
}

uint64_t sub_2479C6E14(uint64_t a1, char a2)
{
  return sub_2479C6E20(a1, a2, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride);
}

uint64_t sub_2479C6E20(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = v3 + *a3;
  result = swift_beginAccess();
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2479C6E78())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id Versioning.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Versioning();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Versioning()
{
  return objc_opt_self();
}

uint64_t method lookup function for Versioning()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Versioning.currentStickerVersionOverride.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of Versioning.currentStickerVersionOverride.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x68))(a1, a2 & 1);
}

uint64_t dispatch thunk of Versioning.currentStickerVersionOverride.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Versioning.currentStickerRepresentationVersionOverride.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Versioning.currentStickerRepresentationVersionOverride.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x80))(a1, a2 & 1);
}

uint64_t dispatch thunk of Versioning.currentStickerRepresentationVersionOverride.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_2479C7084(a1, (unint64_t *)&unk_2576D29C0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2479C7028(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2479C7048(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_2479C7084(a1, &qword_254450BD8);
}

void sub_2479C7084(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_2479C70C8(uint64_t a1, uint64_t a2)
{
  return sub_2479C7370(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2479C70D4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_247A1AECC();
  *a2 = 0;
  return result;
}

uint64_t sub_2479C7148(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_247A1AED8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2479C71C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_247A1AEE4();
  v2 = sub_247A1AEC0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2479C7204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_247A1AEC0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2479C7248@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_247A1AEE4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2479C7270()
{
  sub_2479C7324(&qword_2576D29E8, (uint64_t)&unk_247A1C578);
  sub_2479C7324((unint64_t *)&unk_2576D29F0, (uint64_t)&unk_247A1C518);
  return sub_247A1B3C4();
}

uint64_t sub_2479C72DC()
{
  return sub_2479C7324(&qword_2576D29D0, (uint64_t)&unk_247A1C4DC);
}

uint64_t sub_2479C7300()
{
  return sub_2479C7324(&qword_2576D29D8, (uint64_t)&unk_247A1C4B0);
}

uint64_t sub_2479C7324(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for Name(255);
    result = MEMORY[0x249588058](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2479C7364(uint64_t a1, uint64_t a2)
{
  return sub_2479C7370(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2479C7370(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_247A1AEE4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2479C73AC()
{
  sub_247A1AEE4();
  sub_247A1AF2C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479C73EC()
{
  uint64_t v0;

  sub_247A1AEE4();
  sub_247A1B568();
  sub_247A1AF2C();
  v0 = sub_247A1B580();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2479C745C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_247A1AEE4();
  v2 = v1;
  if (v0 == sub_247A1AEE4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_247A1B4E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2479C74E4()
{
  return sub_2479C7324(&qword_2576D29E0, (uint64_t)&unk_247A1C54C);
}

id static ManagedRepresentation.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_247A1AEC0();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_2479C7574()
{
  return MEMORY[0x24BEE0948];
}

void sub_2479C7580(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_data);
  if (v3)
  {
    v4 = v3;
    v5 = sub_247A1ABCC();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2479C75E4(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_247A1ABB4();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setData_);

}

uint64_t sub_2479C7648@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_identifier);
  if (v3)
  {
    v4 = v3;
    sub_247A1AC68();

    v5 = sub_247A1AC8C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_247A1AC8C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2479C76CC(uint64_t a1, void **a2)
{
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2479C7BCC(a1, (uint64_t)v5);
  v6 = *a2;
  v7 = sub_247A1AC8C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    v9 = (void *)sub_247A1AC50();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  objc_msgSend(v6, sel_setIdentifier_, v9);

}

void sub_2479C77A8(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_247A1AEE4();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_2479C7808(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v7 = sub_247A1AEC0();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

uint64_t sub_2479C7864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ManagedRepresentation();
  result = sub_247A1B2EC();
  *a1 = result;
  return result;
}

char *keypath_get_selector_isPreferred()
{
  return sel_isPreferred;
}

id sub_2479C78B0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isPreferred);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2479C78E0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsPreferred_, *a1);
}

char *keypath_get_selector_index()
{
  return sel_index;
}

id sub_2479C7900@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_index);
  *a2 = (_DWORD)result;
  return result;
}

id sub_2479C7930(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

char *keypath_get_selector_byteCount()
{
  return sel_byteCount;
}

id sub_2479C7950@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_byteCount);
  *a2 = (_DWORD)result;
  return result;
}

id sub_2479C7980(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setByteCount_, *a1);
}

char *keypath_get_selector_data()
{
  return sel_data;
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

char *keypath_get_selector_role()
{
  return sel_role;
}

void sub_2479C79C8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2479C77A8(a1, (SEL *)&selRef_role, a2);
}

void sub_2479C79E4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2479C7808(a1, a2, a3, a4, (SEL *)&selRef_setRole_);
}

char *keypath_get_selector_size_h()
{
  return sel_size_h;
}

id sub_2479C7A0C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_size_h);
  *a2 = v4;
  return result;
}

id sub_2479C7A3C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSize_h_, *a1);
}

char *keypath_get_selector_size_w()
{
  return sel_size_w;
}

id sub_2479C7A5C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_size_w);
  *a2 = v4;
  return result;
}

id sub_2479C7A8C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSize_w_, *a1);
}

void *keypath_get_selector_uti()
{
  return &sel_uti;
}

void sub_2479C7AAC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2479C77A8(a1, (SEL *)&selRef_uti, a2);
}

void sub_2479C7AC8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2479C7808(a1, a2, a3, a4, (SEL *)&selRef_setUti_);
}

char *keypath_get_selector_version()
{
  return sel_version;
}

id sub_2479C7AF0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_version);
  *a2 = (_DWORD)result;
  return result;
}

id sub_2479C7B20(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

char *keypath_get_selector_sticker()
{
  return sel_sticker;
}

id sub_2479C7B40@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sticker);
  *a2 = result;
  return result;
}

id sub_2479C7B78(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSticker_, *a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x249588040]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2479C7BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2479C7C14()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_2544508B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2544508B8);
  return sub_247A1ADAC();
}

uint64_t sub_2479C7C88()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, _QWORD, uint64_t);
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450808);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_247A1AB00();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_247A1AB9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v11(v6, *MEMORY[0x24BDCD790], v3);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v12(v2, 1, 1, v7);
  sub_247A1AB84();
  v11(v6, *MEMORY[0x24BDCD798], v3);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  v12(v2, 0, 1, v7);
  sub_247A1AB84();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_2479C7E4C(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  _BYTE *v11;
  _BYTE *v12;
  id v13;
  id v14;
  __int128 v15;
  uint64_t v16;

  v4 = v1 + *(int *)(type metadata accessor for StickerContainer(0) + 24);
  v5 = *(void **)v4;
  if ((*(_BYTE *)(v4 + 16) & 1) != 0)
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v6 = sub_247A1ADB8();
    __swift_project_value_buffer(v6, (uint64_t)qword_2544508B8);
    v7 = sub_247A1ADA0();
    v8 = sub_247A1B10C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      sub_2479CF054();
      swift_allocError();
      *v11 = (_BYTE)v5;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v10 = v16;
      _os_log_impl(&dword_2479C5000, v7, v8, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v10, -1, -1);
      MEMORY[0x249588124](v9, -1, -1);
    }

    sub_2479CF054();
    swift_allocError();
    *v12 = (_BYTE)v5;
    swift_willThrow();
  }
  else
  {
    v13 = v5;
    swift_bridgeObjectRetain();
    v14 = objc_msgSend(v13, sel_newBackgroundContext);
    MEMORY[0x24BDAC7A8]();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450818);
    sub_247A1B16C();

    swift_bridgeObjectRelease();
    if (!v2)
      *a1 = v15;
  }
}

void sub_2479C80D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  id v10;
  id v11;
  uint64_t v12;

  v1 = v0 + *(int *)(type metadata accessor for StickerContainer(0) + 24);
  v2 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v3 = sub_247A1ADB8();
    __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B10C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      sub_2479CF054();
      swift_allocError();
      *v8 = (_BYTE)v2;
      v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v7 = v12;
      _os_log_impl(&dword_2479C5000, v4, v5, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);
    }

    sub_2479CF054();
    swift_allocError();
    *v9 = (_BYTE)v2;
    swift_willThrow();
  }
  else
  {
    v10 = v2;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_newBackgroundContext);
    MEMORY[0x24BDAC7A8](v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2AF8);
    sub_247A1B16C();

    swift_bridgeObjectRelease();
  }
}

void sub_2479C8344()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  id v10;
  id v11;
  uint64_t v12;

  v1 = v0 + *(int *)(type metadata accessor for StickerContainer(0) + 24);
  v2 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v3 = sub_247A1ADB8();
    __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B10C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      sub_2479CF054();
      swift_allocError();
      *v8 = (_BYTE)v2;
      v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v7 = v12;
      _os_log_impl(&dword_2479C5000, v4, v5, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);
    }

    sub_2479CF054();
    swift_allocError();
    *v9 = (_BYTE)v2;
    swift_willThrow();
  }
  else
  {
    v10 = v2;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_newBackgroundContext);
    MEMORY[0x24BDAC7A8](v11);
    sub_247A1B16C();

    swift_bridgeObjectRelease();
  }
}

void sub_2479C85AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  id v10;
  id v11;
  uint64_t v12;

  v1 = v0 + *(int *)(type metadata accessor for StickerContainer(0) + 24);
  v2 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v3 = sub_247A1ADB8();
    __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B10C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      sub_2479CF054();
      swift_allocError();
      *v8 = (_BYTE)v2;
      v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v7 = v12;
      _os_log_impl(&dword_2479C5000, v4, v5, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);
    }

    sub_2479CF054();
    swift_allocError();
    *v9 = (_BYTE)v2;
    swift_willThrow();
  }
  else
  {
    v10 = v2;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_newBackgroundContext);
    MEMORY[0x24BDAC7A8](v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BB8);
    sub_247A1B16C();

    swift_bridgeObjectRelease();
  }
}

void sub_2479C8820()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  id v10;
  id v11;
  uint64_t v12;

  v1 = v0 + *(int *)(type metadata accessor for StickerContainer(0) + 24);
  v2 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v3 = sub_247A1ADB8();
    __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B10C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      sub_2479CF054();
      swift_allocError();
      *v8 = (_BYTE)v2;
      v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v7 = v12;
      _os_log_impl(&dword_2479C5000, v4, v5, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);
    }

    sub_2479CF054();
    swift_allocError();
    *v9 = (_BYTE)v2;
    swift_willThrow();
  }
  else
  {
    v10 = v2;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_newBackgroundContext);
    MEMORY[0x24BDAC7A8](v11);
    type metadata accessor for Sticker(0);
    sub_247A1B16C();

    swift_bridgeObjectRelease();
  }
}

void sub_2479C8A90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  id v10;
  id v11;
  uint64_t v12;

  v1 = v0 + *(int *)(type metadata accessor for StickerContainer(0) + 24);
  v2 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v3 = sub_247A1ADB8();
    __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B10C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      sub_2479CF054();
      swift_allocError();
      *v8 = (_BYTE)v2;
      v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v7 = v12;
      _os_log_impl(&dword_2479C5000, v4, v5, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);
    }

    sub_2479CF054();
    swift_allocError();
    *v9 = (_BYTE)v2;
    swift_willThrow();
  }
  else
  {
    v10 = v2;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_newBackgroundContext);
    MEMORY[0x24BDAC7A8](v11);
    sub_247A1B16C();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2479C8CEC()
{
  void *v0;
  unint64_t v1;
  _BYTE *v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_2479C8F40(3, 600) + 16);
  swift_bridgeObjectRelease();
  if (v1 <= 2)
  {
    sub_2479C9278(3, 600);
    if (os_variant_has_internal_content())
    {
      sub_2479C93D8();
      if (v0)
      {
LABEL_4:
        sub_2479CF054();
        swift_allocError();
        *v2 = 12;
        swift_willThrow();

        return v3 & 1;
      }
    }
    else
    {
      sub_2479C9E7C();
      if (v0)
        goto LABEL_4;
    }
    v3 = 1;
    return v3 & 1;
  }
  if (qword_2544508D0 != -1)
    swift_once();
  v4 = sub_247A1ADB8();
  __swift_project_value_buffer(v4, (uint64_t)qword_2544508B8);
  v5 = sub_247A1ADA0();
  v6 = sub_247A1B118();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_2479C8F40(3, 600);
    v10 = sub_247A1AC2C();
    v11 = MEMORY[0x249587644](v9, v10);
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_2479CCA28(v11, v13, &v15);
    sub_247A1B208();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v5, v6, "Have failed to recover the database multiple times. Will not attempt again right now. %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v8, -1, -1);
    MEMORY[0x249588124](v7, -1, -1);
  }

  v3 = 0;
  return v3 & 1;
}

uint64_t sub_2479C8F40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  double v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  double v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2AF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_247A1AC2C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v28 - v10;
  v11 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v12 = (void *)sub_247A1AEC0();
  v13 = objc_msgSend(v11, sel_arrayForKey_, v12);

  if (!v13)
    return MEMORY[0x24BEE4AF8];
  v14 = sub_247A1B034();

  v15 = sub_2479CB818(v14);
  swift_bridgeObjectRelease();
  result = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v33 = MEMORY[0x24BEE4AF8];
    v31 = *(_QWORD *)(v15 + 16);
    if (v31)
    {
      v17 = 0;
      v18 = (double)a2;
      v28 = v15;
      v29 = v5;
      v19 = v30;
      while (v17 < *(_QWORD *)(v15 + 16))
      {
        v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v21 = *(_QWORD *)(v7 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v15 + v20 + v21 * v17, v6);
        v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v22(v5, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
          goto LABEL_18;
        v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v23(v19, v5, v6);
        sub_247A1AC14();
        if (-v24 >= v18)
        {
          result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v19, v6);
        }
        else
        {
          v23(v32, v19, v6);
          v25 = v33;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2479E8E54(0, *(_QWORD *)(v25 + 16) + 1, 1);
            v25 = v33;
          }
          v27 = *(_QWORD *)(v25 + 16);
          v26 = *(_QWORD *)(v25 + 24);
          if (v27 >= v26 >> 1)
          {
            sub_2479E8E54(v26 > 1, v27 + 1, 1);
            v25 = v33;
          }
          *(_QWORD *)(v25 + 16) = v27 + 1;
          result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v25 + v20 + v27 * v21, v32, v6);
          v33 = v25;
          v5 = v29;
          v19 = v30;
          v15 = v28;
        }
        if (v31 == ++v17)
          goto LABEL_17;
      }
      __break(1u);
    }
    else
    {
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
LABEL_17:
      v22(v5, 1, 1, v6);
LABEL_18:
      swift_bridgeObjectRelease();
      sub_2479D045C((uint64_t)v5, &qword_2576D2AF0);
      return v33;
    }
  }
  return result;
}

void sub_2479C9278(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  sub_2479C8F40(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2AE8);
  sub_247A1AC2C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_247A1C690;
  sub_247A1AC20();
  sub_2479D4AE0(v5);
  v6 = (void *)sub_247A1B028();
  swift_bridgeObjectRelease();
  v7 = (id)sub_247A1AEC0();
  objc_msgSend(v4, sel_setObject_forKey_, v6);

}

void sub_2479C93D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  void **p_weak_ivar_lyt;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  char *v33;
  id v34;
  void *v35;
  unsigned int v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  char *v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  void (**v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  char *v62;
  uint8_t *v63;
  void *v64;
  void *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  id v81;
  void *v82;
  uint64_t v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  id v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  _QWORD *v100;
  char *v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  id v108;
  unint64_t v109;
  uint64_t v110;

  v110 = *MEMORY[0x24BDAC8D0];
  v0 = sub_247A1AB00();
  v102 = *(void (**)(uint64_t, uint64_t))(v0 - 8);
  v103 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v101 = (char *)&v92 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = (_QWORD *)sub_247A1AC2C();
  v2 = *(v100 - 1);
  MEMORY[0x24BDAC7A8](v100);
  v4 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_247A1AB9C();
  v104 = *(_QWORD *)(v5 - 8);
  v105 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v92 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v92 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v92 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v92 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v92 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v92 - v24;
  v26 = v106;
  sub_2479C7C88();
  p_weak_ivar_lyt = (void **)(&STKStickerUsageManager__classData + 56);
  if (v26)
  {
    v28 = v26;
LABEL_18:
    if (p_weak_ivar_lyt[282] != (void *)-1)
      swift_once();
    v83 = sub_247A1ADB8();
    __swift_project_value_buffer(v83, (uint64_t)qword_2544508B8);
    v84 = v28;
    v85 = v28;
    v86 = sub_247A1ADA0();
    v87 = sub_247A1B118();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      v89 = (void *)swift_slowAlloc();
      v108 = v89;
      *(_DWORD *)v88 = 136315138;
      swift_getErrorValue();
      v90 = sub_247A1B520();
      v107 = sub_2479CCA28(v90, v91, (uint64_t *)&v108);
      sub_247A1B208();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2479C5000, v86, v87, "There was a problem moving the database. It will be deleted instead. %s", v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v89, -1, -1);
      MEMORY[0x249588124](v88, -1, -1);
    }
    else
    {

    }
    sub_2479C9E7C();

    return;
  }
  v94 = v4;
  v95 = v2;
  v96 = v8;
  v97 = v14;
  v98 = v17;
  v106 = 0;
  v93 = v11;
  v99 = v20;
  sub_247A1AAF4();
  v30 = v104;
  v29 = v105;
  v31 = *(void (**)(char *, uint64_t))(v104 + 8);
  v31(v23, v105);
  v32 = (void *)objc_opt_self();
  v33 = v25;
  v34 = objc_msgSend(v32, sel_defaultManager);
  sub_247A1AB60();
  v35 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v34, sel_fileExistsAtPath_, v35);

  if (!v36)
  {
    v102 = (void (*)(uint64_t, uint64_t))v31;
    v103 = (uint64_t)v33;
    if (qword_2544508D0 != -1)
      swift_once();
    v70 = sub_247A1ADB8();
    __swift_project_value_buffer(v70, (uint64_t)qword_2544508B8);
    v71 = v96;
    v72 = v103;
    v73 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v96, v103, v105);
    v74 = sub_247A1ADA0();
    v75 = sub_247A1B124();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = (void *)swift_slowAlloc();
      v108 = v77;
      *(_DWORD *)v76 = 136315138;
      v78 = sub_247A1AB60();
      v107 = sub_2479CCA28(v78, v79, (uint64_t *)&v108);
      v73 = v105;
      v72 = v103;
      sub_247A1B208();
      swift_bridgeObjectRelease();
      v80 = v102;
      v102((uint64_t)v71, v73);
      _os_log_impl(&dword_2479C5000, v74, v75, "Could not set aside the existing database because it could not be found. %s", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v77, -1, -1);
      MEMORY[0x249588124](v76, -1, -1);
    }
    else
    {
      v80 = v102;
      v102((uint64_t)v71, v73);
    }

    v82 = v106;
    sub_2479C9E7C();
    v28 = v82;
    if (!v82)
    {
      v80(v72, v73);
      return;
    }
    v80(v72, v73);
    goto LABEL_17;
  }
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v38 = v32;
  v92 = v32;
  v39 = v37;
  v40 = (void *)sub_247A1AEC0();
  objc_msgSend(v39, sel_setDateFormat_, v40);

  v41 = v94;
  sub_247A1AC20();
  v42 = (void *)sub_247A1AC08();
  (*(void (**)(char *, _QWORD *))(v95 + 8))(v41, v100);
  v100 = v39;
  v43 = objc_msgSend(v39, sel_stringFromDate_, v42);

  sub_247A1AEE4();
  v44 = v29;

  v45 = objc_msgSend(v38, (SEL)&stru_2519162B0.name + 7);
  v46 = objc_msgSend(v45, sel_temporaryDirectory);

  v47 = v97;
  sub_247A1AB54();

  v108 = 0;
  v109 = 0xE000000000000000;
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  v108 = (id)0xD000000000000014;
  v109 = 0x8000000247A1EB50;
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  v49 = v101;
  v48 = (void (**)(char *, uint64_t))v102;
  v50 = v103;
  (*((void (**)(char *, _QWORD, uint64_t))v102 + 13))(v101, *MEMORY[0x24BDCD7A0], v103);
  sub_2479CF098();
  v51 = v98;
  sub_247A1AB90();
  v48[1](v49, v50);
  swift_bridgeObjectRelease();
  v31(v47, v44);
  v52 = v99;
  sub_247A1AAF4();
  v31(v51, v44);
  v53 = objc_msgSend(v92, sel_defaultManager);
  sub_247A1AB60();
  v54 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  sub_247A1AB60();
  v55 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v108 = 0;
  LODWORD(v45) = objc_msgSend(v53, sel_moveItemAtPath_toPath_error_, v54, v55, &v108);

  if (!(_DWORD)v45)
  {
    v81 = v108;
    v28 = (void *)sub_247A1AADC();

    swift_willThrow();
    v31(v52, v44);
    v31(v33, v44);
LABEL_17:
    p_weak_ivar_lyt = &STKStickerUsageManager__classData.weak_ivar_lyt;
    goto LABEL_18;
  }
  v56 = qword_2544508D0;
  v57 = v108;
  if (v56 != -1)
    swift_once();
  v58 = sub_247A1ADB8();
  __swift_project_value_buffer(v58, (uint64_t)qword_2544508B8);
  v59 = v93;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v93, v52, v44);
  v60 = sub_247A1ADA0();
  v61 = sub_247A1B124();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = v59;
    v63 = (uint8_t *)swift_slowAlloc();
    v64 = (void *)swift_slowAlloc();
    v102 = (void (*)(uint64_t, uint64_t))v31;
    v65 = v64;
    v108 = v64;
    *(_DWORD *)v63 = 136315138;
    v103 = (uint64_t)v33;
    v66 = v62;
    v67 = sub_247A1AB60();
    v107 = sub_2479CCA28(v67, v68, (uint64_t *)&v108);
    sub_247A1B208();
    swift_bridgeObjectRelease();
    v69 = (void (*)(char *, uint64_t))v102;
    v102((uint64_t)v66, v44);
    _os_log_impl(&dword_2479C5000, v60, v61, "There was a problem loading the database. Please file a radar and attach the database located at %s.", v63, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v65, -1, -1);
    MEMORY[0x249588124](v63, -1, -1);

    v69(v99, v44);
    v69((char *)v103, v44);
  }
  else
  {

    v31(v59, v44);
    v31(v52, v44);
    v31(v33, v44);
  }
}

uint64_t sub_2479C9E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void (*v9)(char *, uint64_t);
  id v10;
  void *v11;
  unsigned __int8 v12;
  id v13;
  id v14;
  id v15[2];

  v15[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_247A1AB9C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v15 - v6;
  result = sub_2479C7C88();
  if (!v0)
  {
    sub_247A1AB3C();
    v9 = *(void (**)(char *, uint64_t))(v2 + 8);
    v9(v5, v1);
    v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v11 = (void *)sub_247A1AB30();
    v15[0] = 0;
    v12 = objc_msgSend(v10, sel_removeItemAtURL_error_, v11, v15);

    if ((v12 & 1) != 0)
    {
      v13 = v15[0];
    }
    else
    {
      v14 = v15[0];
      sub_247A1AADC();

      swift_willThrow();
    }
    return ((uint64_t (*)(char *, uint64_t))v9)(v7, v1);
  }
  return result;
}

void sub_2479C9FFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v4 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2479CF24C();
  v8 = sub_2479CF678(a1, v7);
  sub_2479CA6B8(v8, 1);
  sub_2479CFFF8(v8);
  v21 = MEMORY[0x24BEE4AF8];
  v9 = sub_247A1AB9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 2, 2, v9);
  v10 = sub_2479F51D8(a1, (uint64_t)v6);
  sub_2479CD960((uint64_t)v6, type metadata accessor for CoreDataDataMapper.StoreType);
  if ((v10 & 1) != 0)
  {

LABEL_13:
    v18 = v21;
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v18;
    *(_BYTE *)(a2 + 16) = 0;
    return;
  }
  v11 = objc_msgSend(v8, sel_persistentStoreCoordinator);
  v12 = objc_msgSend(v8, sel_persistentStoreDescriptions);
  sub_2479D032C(0, &qword_254450948);
  v13 = sub_247A1B034();

  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_5;
LABEL_12:

    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v14 = sub_247A1B37C();
  if (!v14)
    goto LABEL_12;
LABEL_5:
  if (v14 >= 1)
  {
    v15 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x249587908](v15, v13);
      else
        v16 = *(id *)(v13 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      v20 = v16;
      sub_2479CA434(&v20, (uint64_t)v11, &v21);

    }
    while (v14 != v15);
    goto LABEL_12;
  }
  __break(1u);
}

void sub_2479CA434(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  NSObject *log;

  v4 = (void *)*a1;
  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StickerSpotlightDelegate()), sel_initForStoreWithDescription_coordinator_, *a1, a2);
  objc_msgSend(v5, sel_startSpotlightIndexing);
  v6 = v5;
  MEMORY[0x249587620]();
  if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_247A1B058();
  sub_247A1B070();
  sub_247A1B04C();
  if (qword_2544508D0 != -1)
    swift_once();
  v7 = sub_247A1ADB8();
  __swift_project_value_buffer(v7, (uint64_t)qword_2544508B8);
  v8 = v6;
  v9 = v4;
  v10 = v8;
  v11 = v9;
  v12 = sub_247A1ADA0();
  v13 = sub_247A1B10C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412546;
    log = v12;
    v16 = v10;
    sub_247A1B208();
    *v15 = v10;

    *(_WORD *)(v14 + 12) = 2112;
    v17 = v11;
    sub_247A1B208();
    v15[1] = v11;

    _os_log_impl(&dword_2479C5000, log, v13, "Made indexer %@ for store %@", (uint8_t *)v14, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    swift_arrayDestroy();
    MEMORY[0x249588124](v15, -1, -1);
    MEMORY[0x249588124](v14, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_2479CA6B8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void **v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  _BYTE *v30;
  NSObject *log;
  _QWORD *v33;
  os_log_type_t type;
  uint64_t v35;
  _QWORD aBlock[6];
  uint64_t v37;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  v6 = (void **)(v5 + 16);
  aBlock[4] = sub_2479CF22C;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2479CAC58;
  aBlock[3] = &block_descriptor;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_loadPersistentStoresWithCompletionHandler_, v7);
  _Block_release(v7);
  swift_beginAccess();
  v8 = *v6;
  if (*v6)
  {
    v9 = v8;
    if (a2 <= 0 || (v10 = *(_QWORD *)(sub_2479C8F40(3, 600) + 16), swift_bridgeObjectRelease(), v10 > 2))
    {
      if (qword_2544508D0 != -1)
        swift_once();
      v21 = sub_247A1ADB8();
      __swift_project_value_buffer(v21, (uint64_t)qword_2544508B8);
      v22 = v8;
      v23 = v8;
      v24 = sub_247A1ADA0();
      v25 = sub_247A1B118();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v26 = 138412290;
        v28 = v8;
        v29 = _swift_stdlib_bridgeErrorToNSError();
        v37 = v29;
        sub_247A1B208();
        *v27 = v29;

        _os_log_impl(&dword_2479C5000, v24, v25, "Could not load container and out of retries: %@", v26, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
        swift_arrayDestroy();
        MEMORY[0x249588124](v27, -1, -1);
        MEMORY[0x249588124](v26, -1, -1);
      }
      else
      {

      }
      sub_2479CF054();
      swift_allocError();
      *v30 = 11;
      swift_willThrow();
    }
    else
    {
      if (qword_2544508D0 != -1)
        swift_once();
      v11 = sub_247A1ADB8();
      __swift_project_value_buffer(v11, (uint64_t)qword_2544508B8);
      v12 = v8;
      v13 = v8;
      v14 = sub_247A1ADA0();
      v15 = sub_247A1B118();
      if (os_log_type_enabled(v14, v15))
      {
        type = v15;
        v16 = swift_slowAlloc();
        v33 = (_QWORD *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v37 = v35;
        *(_DWORD *)v16 = 138412802;
        v17 = v8;
        log = v14;
        v18 = _swift_stdlib_bridgeErrorToNSError();
        sub_247A1B208();
        *v33 = v18;

        *(_WORD *)(v16 + 12) = 2048;
        sub_247A1B208();
        *(_WORD *)(v16 + 22) = 2080;
        if (a2 == 1)
          v19 = 1701669236;
        else
          v19 = 0x73656D6974;
        if (a2 == 1)
          v20 = 0xE400000000000000;
        else
          v20 = 0xE500000000000000;
        sub_2479CCA28(v19, v20, &v37);
        sub_247A1B208();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2479C5000, log, type, "Could not load the container (%@). Will retry %ld more %s", (uint8_t *)v16, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
        swift_arrayDestroy();
        MEMORY[0x249588124](v33, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x249588124](v35, -1, -1);
        MEMORY[0x249588124](v16, -1, -1);

      }
      else
      {

      }
      sub_2479C8CEC();
      if (!v2)
        sub_2479CA6B8(a1, a2 - 1);
    }

  }
  return swift_release();
}

void sub_2479CABFC(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;

  swift_beginAccess();
  v5 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  v6 = a2;

}

void sub_2479CAC58(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

uint64_t sub_2479CACCC()
{
  return swift_deallocClassInstance();
}

id sub_2479CACDC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE19220]), sel_init);
  qword_254451FC8 = (uint64_t)result;
  return result;
}

uint64_t sub_2479CAD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 128) = a5;
  return swift_task_switch();
}

uint64_t sub_2479CAD24()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  void *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;

  if (objc_msgSend(*(id *)(v0 + 120), sel_isIndexingEnabled))
  {
    v1 = *(void **)(v0 + 120);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_2479CB01C;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_2479CB7A4;
    *(_QWORD *)(v0 + 104) = &block_descriptor_12;
    objc_msgSend(v1, sel_deleteSpotlightIndexWithCompletionHandler_, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v3 = sub_247A1ADB8();
    __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B100();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = *(_QWORD *)(v0 + 128);
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 134217984;
      *(_QWORD *)(v0 + 80) = v6;
      sub_247A1B208();
      _os_log_impl(&dword_2479C5000, v4, v5, "Will initiate reindexing #%llu", v7, 0xCu);
      MEMORY[0x249588124](v7, -1, -1);
    }
    v8 = *(void **)(v0 + 120);

    objc_msgSend(v8, sel_stopSpotlightIndexing);
    v9 = sub_247A1ADA0();
    v10 = sub_247A1B100();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = *(_QWORD *)(v0 + 128);
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 134217984;
      *(_QWORD *)(v0 + 80) = v11;
      sub_247A1B208();
      _os_log_impl(&dword_2479C5000, v9, v10, "Will delete current index #%llu", v12, 0xCu);
      MEMORY[0x249588124](v12, -1, -1);
    }
    v13 = *(void **)(v0 + 120);

    objc_msgSend(v13, sel_startSpotlightIndexing);
    v14 = sub_247A1ADA0();
    v15 = sub_247A1B100();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = *(_QWORD *)(v0 + 128);
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 134217984;
      *(_QWORD *)(v0 + 80) = v16;
      sub_247A1B208();
      _os_log_impl(&dword_2479C5000, v14, v15, "Resumed indexing #%llu", v17, 0xCu);
      MEMORY[0x249588124](v17, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2479CB01C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2479CB07C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;

  if (qword_2544508D0 != -1)
    swift_once();
  v1 = sub_247A1ADB8();
  __swift_project_value_buffer(v1, (uint64_t)qword_2544508B8);
  v2 = sub_247A1ADA0();
  v3 = sub_247A1B100();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 128);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    *(_QWORD *)(v0 + 80) = v4;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v2, v3, "Did delete current index #%llu", v5, 0xCu);
    MEMORY[0x249588124](v5, -1, -1);
  }

  if (qword_2544508D0 != -1)
    swift_once();
  __swift_project_value_buffer(v1, (uint64_t)qword_2544508B8);
  v6 = sub_247A1ADA0();
  v7 = sub_247A1B100();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 128);
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    *(_QWORD *)(v0 + 80) = v8;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v6, v7, "Will initiate reindexing #%llu", v9, 0xCu);
    MEMORY[0x249588124](v9, -1, -1);
  }
  v10 = *(void **)(v0 + 120);

  objc_msgSend(v10, sel_stopSpotlightIndexing);
  v11 = sub_247A1ADA0();
  v12 = sub_247A1B100();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 128);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v14 = 134217984;
    *(_QWORD *)(v0 + 80) = v13;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v11, v12, "Will delete current index #%llu", v14, 0xCu);
    MEMORY[0x249588124](v14, -1, -1);
  }
  v15 = *(void **)(v0 + 120);

  objc_msgSend(v15, sel_startSpotlightIndexing);
  v16 = sub_247A1ADA0();
  v17 = sub_247A1B100();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 128);
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134217984;
    *(_QWORD *)(v0 + 80) = v18;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v16, v17, "Resumed indexing #%llu", v19, 0xCu);
    MEMORY[0x249588124](v19, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2479CB3B0()
{
  uint64_t v0;
  void **p_weak_ivar_lyt;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint8_t *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;

  swift_willThrow();
  p_weak_ivar_lyt = &STKStickerUsageManager__classData.weak_ivar_lyt;
  if (qword_2544508D0 != -1)
    swift_once();
  v2 = *(void **)(v0 + 136);
  v3 = sub_247A1ADB8();
  __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
  v4 = v2;
  v5 = v2;
  v6 = sub_247A1ADA0();
  v7 = sub_247A1B118();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 136);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v13;
    sub_247A1B208();
    *v11 = v13;

    _os_log_impl(&dword_2479C5000, v6, v7, "Error while deleting spotlight item index: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    swift_arrayDestroy();
    MEMORY[0x249588124](v11, -1, -1);
    v14 = v10;
    p_weak_ivar_lyt = (void **)(&STKStickerUsageManager__classData + 56);
    MEMORY[0x249588124](v14, -1, -1);

  }
  else
  {

  }
  if (p_weak_ivar_lyt[282] != (void *)-1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_2544508B8);
  v15 = sub_247A1ADA0();
  v16 = sub_247A1B100();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = *(_QWORD *)(v0 + 128);
    v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v18 = 134217984;
    *(_QWORD *)(v0 + 80) = v17;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v15, v16, "Will initiate reindexing #%llu", v18, 0xCu);
    MEMORY[0x249588124](v18, -1, -1);
  }
  v19 = *(void **)(v0 + 120);

  objc_msgSend(v19, sel_stopSpotlightIndexing);
  v20 = sub_247A1ADA0();
  v21 = sub_247A1B100();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = *(_QWORD *)(v0 + 128);
    v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v23 = 134217984;
    *(_QWORD *)(v0 + 80) = v22;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v20, v21, "Will delete current index #%llu", v23, 0xCu);
    MEMORY[0x249588124](v23, -1, -1);
  }
  v24 = *(void **)(v0 + 120);

  objc_msgSend(v24, sel_startSpotlightIndexing);
  v25 = sub_247A1ADA0();
  v26 = sub_247A1B100();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = *(_QWORD *)(v0 + 128);
    v28 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v28 = 134217984;
    *(_QWORD *)(v0 + 80) = v27;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v25, v26, "Resumed indexing #%llu", v28, 0xCu);
    MEMORY[0x249588124](v28, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2479CB7A4(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_2479CB818(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  int v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE v24[32];
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2AF0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_247A1AC2C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  sub_2479E8E54(0, v11, 0);
  if (!v11)
    return v25;
  v12 = a1 + 32;
  v22 = v8;
  v23 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    sub_2479CF11C(v12, (uint64_t)v24);
    v13 = swift_dynamicCast();
    v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    if (!v13)
      break;
    v14(v3, 0, 1, v4);
    v15 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v15(v10, v3, v4);
    v15(v8, v10, v4);
    v16 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2479E8E54(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v16 = v25;
    }
    v18 = *(_QWORD *)(v16 + 16);
    v17 = *(_QWORD *)(v16 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_2479E8E54(v17 > 1, v18 + 1, 1);
      v16 = v25;
    }
    *(_QWORD *)(v16 + 16) = v18 + 1;
    v19 = v16
        + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
        + *(_QWORD *)(v5 + 72) * v18;
    v8 = v22;
    v15((char *)v19, v22, v4);
    v25 = v16;
    v12 += 32;
    if (!--v11)
      return v16;
  }
  v14(v3, 1, 1, v4);
  swift_release();
  sub_2479D045C((uint64_t)v3, &qword_2576D2AF0);
  return 0;
}

uint64_t sub_2479CBA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = type metadata accessor for StickerReindexer(0);
  __swift_allocate_value_buffer(v0, qword_254450888);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254450888);
  v2 = sub_247A1AB9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 2, v2);
  v3 = type metadata accessor for StickerContainer(0);
  v4 = *(int *)(v3 + 20);
  *(_QWORD *)(v1 + v4) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE192E0]), sel_init);
  v5 = v1 + *(int *)(v3 + 24);
  *(_OWORD *)v5 = xmmword_247A1C6B0;
  *(_BYTE *)(v5 + 16) = 1;
  *(_BYTE *)(v1 + *(int *)(v0 + 20)) = 0;
  v6 = *(int *)(v0 + 24);
  *(_QWORD *)(v1 + v6) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE192E0]), sel_init);
  return sub_247A1ADAC();
}

uint64_t static StickerReindexer.shared.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2544508A0 != -1)
    swift_once();
  v2 = type metadata accessor for StickerReindexer(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254450888);
  swift_beginAccess();
  return sub_2479CD904(v3, a1, type metadata accessor for StickerReindexer);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t type metadata accessor for StickerReindexer(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_2544508A8);
}

uint64_t static StickerReindexer.shared.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2544508A0 != -1)
    swift_once();
  v2 = type metadata accessor for StickerReindexer(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254450888);
  swift_beginAccess();
  sub_2479CBCE8(a1, v3);
  swift_endAccess();
  return sub_2479CD960(a1, type metadata accessor for StickerReindexer);
}

uint64_t sub_2479CBCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StickerReindexer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static StickerReindexer.shared.modify())()
{
  uint64_t v0;

  if (qword_2544508A0 != -1)
    swift_once();
  v0 = type metadata accessor for StickerReindexer(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_254450888);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2479CBDA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t result;
  _QWORD v7[6];

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for StickerReindexer(0) + 24));
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_2479D053C;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_2479D0554;
  v7[5] = v3;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2479CBFAC;
  v7[3] = &block_descriptor_21;
  v4 = _Block_copy(v7);
  v5 = v1;
  swift_retain();
  swift_release();
  CNRunWithLock();
  _Block_release(v4);
  swift_release();

  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

int *sub_2479CBED8(uint64_t a1)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];
  char v11;

  result = (int *)type metadata accessor for StickerReindexer(0);
  v3 = result[5];
  if ((*(_BYTE *)(a1 + v3) & 1) == 0)
  {
    v4 = type metadata accessor for StickerContainer(0);
    v5 = *(void **)(a1 + *(int *)(v4 + 20));
    objc_msgSend(v5, sel_lock);
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_2479C9FFC(a1, (uint64_t)v10);
    swift_release();
    v6 = v10[0];
    v7 = v10[1];
    v8 = v11;
    v9 = a1 + *(int *)(v4 + 24);
    sub_2479CDCE0(*(void **)v9, *(_QWORD *)(v9 + 8), *(_BYTE *)(v9 + 16));
    *(_QWORD *)v9 = v6;
    *(_QWORD *)(v9 + 8) = v7;
    *(_BYTE *)(v9 + 16) = v8;
    result = (int *)objc_msgSend(v5, sel_unlock);
    *(_BYTE *)(a1 + v3) = 1;
  }
  return result;
}

uint64_t sub_2479CBFAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Void __swiftcall StickerReindexer.reindexStickers(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v3 = sub_247A1ADB8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StickerReindexer(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + *(int *)(v7 + 28), v3);
  swift_bridgeObjectRetain_n();
  v8 = sub_247A1ADA0();
  v9 = sub_247A1B130();
  if (os_log_type_enabled(v8, v9))
  {
    v19 = v2;
    v10 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v21 = v18;
    *(_DWORD *)v10 = 136315138;
    v17[1] = v10 + 4;
    v11 = sub_247A1AC8C();
    v12 = swift_bridgeObjectRetain();
    v13 = MEMORY[0x249587644](v12, v11);
    v15 = v14;
    swift_bridgeObjectRelease();
    v20 = sub_2479CCA28(v13, v15, &v21);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v8, v9, "Will reindex: %s", v10, 0xCu);
    v16 = v18;
    swift_arrayDestroy();
    MEMORY[0x249588124](v16, -1, -1);
    MEMORY[0x249588124](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2479CBDA4();
  sub_2479CD650();
}

uint64_t StickerReindexer.dataForManagedRepresentation(uri:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[6];
  __int128 v9;

  v3 = sub_247A1ADB8();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StickerContainer(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2479CBDA4();
  sub_2479CD904(v1, (uint64_t)v6, type metadata accessor for StickerContainer);
  v8[4] = a1;
  sub_2479C7E4C(&v9);
  sub_2479CD960((uint64_t)v6, type metadata accessor for StickerContainer);
  return v9;
}

void sub_2479CC474(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  id v25[2];

  v25[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v6
    || (v7 = v6,
        v8 = (void *)sub_247A1AB30(),
        v9 = objc_msgSend(v7, sel_managedObjectIDForURIRepresentation_, v8),
        v7,
        v8,
        !v9))
  {
    type metadata accessor for StickerReindexerError(0);
    sub_2479CDA10(&qword_2576D2AC0, type metadata accessor for StickerReindexerError, (uint64_t)&protocol conformance descriptor for StickerReindexerError);
    swift_allocError();
    v21 = v20;
    v22 = sub_247A1AB9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, a2, v22);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  v25[0] = 0;
  v10 = objc_msgSend(a1, sel_existingObjectWithID_error_, v9, v25);
  v11 = v25[0];
  if (!v10)
  {
    v23 = v25[0];
    sub_247A1AADC();

    swift_willThrow();
    return;
  }
  v12 = v10;
  type metadata accessor for ManagedRepresentation();
  v13 = (void *)swift_dynamicCastClass();
  v14 = v11;
  if (!v13)
  {

    type metadata accessor for StickerReindexerError(0);
    sub_2479CDA10(&qword_2576D2AC0, type metadata accessor for StickerReindexerError, (uint64_t)&protocol conformance descriptor for StickerReindexerError);
    swift_allocError();
    *v24 = v9;
    goto LABEL_8;
  }
  v15 = objc_msgSend(v13, sel_data);
  if (v15)
  {
    v16 = v15;
    v17 = sub_247A1ABCC();
    v19 = v18;

    *a3 = v17;
    a3[1] = v19;
  }
  else
  {
    type metadata accessor for StickerReindexerError(0);
    sub_2479CDA10(&qword_2576D2AC0, type metadata accessor for StickerReindexerError, (uint64_t)&protocol conformance descriptor for StickerReindexerError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

  }
}

unint64_t StickerReindexerError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t (*v9)(_QWORD);
  int EnumCaseMultiPayload;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_247A1AB9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StickerReindexerError(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (void **)((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2479CD904(v1, (uint64_t)v8, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *v8;
      v15[0] = 0;
      v15[1] = 0xE000000000000000;
      sub_247A1B2D4();
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "no object for ");
      HIBYTE(v15[1]) = -18;
      v12 = objc_msgSend(v11, sel_description);
      sub_247A1AEE4();

      sub_247A1AF38();
      swift_bridgeObjectRelease();
      return v15[0];
    }
    else
    {
      return 0xD000000000000069;
    }
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_247A1B2D4();
    swift_bridgeObjectRelease();
    v15[0] = 0xD000000000000011;
    v15[1] = 0x8000000247A1EA90;
    sub_2479CDA10((unint64_t *)&qword_254450440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    sub_247A1B4CC();
    sub_247A1AF38();
    swift_bridgeObjectRelease();
    v13 = v15[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t sub_2479CC978(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2479CC9DC;
  return v6(a1);
}

uint64_t sub_2479CC9DC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2479CCA28(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2479CCAF8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2479CF11C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2479CF11C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_2479CCAF8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_247A1B214();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2479CCCB0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_247A1B31C();
  if (!v8)
  {
    sub_247A1B370();
    __break(1u);
LABEL_17:
    result = sub_247A1B3B8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2479CCCB0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2479CCD44(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2479CCEB8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2479CCEB8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2479CCD44(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_247A01C48(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_247A1B2E0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_247A1B370();
      __break(1u);
LABEL_10:
      v2 = sub_247A1AF44();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_247A1B3B8();
    __break(1u);
LABEL_14:
    result = sub_247A1B370();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2479CCEB8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450C10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

void sub_2479CD004(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450930);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_247A1AB9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 2, v11);
  LOBYTE(a2) = sub_2479F51D8(a2, (uint64_t)v10);
  sub_2479CD960((uint64_t)v10, type metadata accessor for CoreDataDataMapper.StoreType);
  if ((a2 & 1) != 0)
  {
    if (qword_254450878 != -1)
      swift_once();
    v12 = objc_msgSend((id)qword_254451FC8, sel_nextUnsignedInteger);
    if (qword_2544508D0 != -1)
      swift_once();
    v13 = sub_247A1ADB8();
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_2544508B8);
    swift_bridgeObjectRetain_n();
    v49 = v14;
    v15 = sub_247A1ADA0();
    v16 = sub_247A1B10C();
    v17 = a1 >> 62;
    if (!os_log_type_enabled(v15, v16))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    v2 = swift_slowAlloc();
    *(_DWORD *)v2 = 134218240;
    v50 = (uint64_t)v12;
    sub_247A1B208();
    *(_WORD *)(v2 + 12) = 2048;
    if (v17)
      goto LABEL_38;
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      swift_bridgeObjectRelease();
      v50 = v18;
      sub_247A1B208();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2479C5000, v15, v16, "Will reindex #%llu with %ld delegate(s)", (uint8_t *)v2, 0x16u);
      MEMORY[0x249588124](v2, -1, -1);

LABEL_16:
      if (v17)
      {
        swift_bridgeObjectRetain();
        v23 = sub_247A1B37C();
        if (!v23)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23)
          goto LABEL_36;
      }
      if (v23 >= 1)
        break;
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v18 = sub_247A1B37C();
      swift_bridgeObjectRelease();
    }
    v48 = v12;
    v25 = 0;
    v45 = a1 & 0xC000000000000001;
    *(_QWORD *)&v24 = 134218242;
    v43 = v24;
    v44 = MEMORY[0x24BEE4AE0] + 8;
    v46 = v23;
    v47 = a1;
    while (1)
    {
      if (v45)
        v26 = (id)MEMORY[0x249587908](v25, a1);
      else
        v26 = *(id *)(a1 + 8 * v25 + 32);
      v27 = v26;
      v28 = sub_247A1ADA0();
      v29 = sub_247A1B100();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v31 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v30 = v43;
        v32 = v48;
        *(_QWORD *)(v30 + 4) = v48;
        *(_WORD *)(v30 + 12) = 2112;
        *(_QWORD *)(v30 + 14) = v27;
        *v31 = v27;
        _os_log_impl(&dword_2479C5000, v28, v29, "Will initiate reindexing #%llu for %@", (uint8_t *)v30, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
        swift_arrayDestroy();
        MEMORY[0x249588124](v31, -1, -1);
        MEMORY[0x249588124](v30, -1, -1);
      }
      else
      {

        v28 = v27;
        v32 = v48;
      }

      v33 = sub_247A1B0A0();
      v34 = *(_QWORD *)(v33 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v7, 1, 1, v33);
      v35 = (_QWORD *)swift_allocObject();
      v35[2] = 0;
      v36 = v35 + 2;
      v35[3] = 0;
      v35[4] = v27;
      v35[5] = v32;
      v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v33);
      v38 = v27;
      if (v37 == 1)
      {
        sub_2479D045C((uint64_t)v7, &qword_254450930);
        if (!*v36)
          goto LABEL_32;
      }
      else
      {
        sub_247A1B094();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v33);
        if (!*v36)
        {
LABEL_32:
          v39 = 0;
          v41 = 0;
          goto LABEL_33;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v39 = sub_247A1B088();
      v41 = v40;
      swift_unknownObjectRelease();
LABEL_33:
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = &unk_2576D2B20;
      *(_QWORD *)(v42 + 24) = v35;
      if (v41 | v39)
      {
        v51 = 0;
        v52 = 0;
        v53 = v39;
        v54 = v41;
      }
      a1 = v47;
      ++v25;
      swift_task_create();

      swift_release();
      if (v46 == v25)
        goto LABEL_36;
    }
  }
  if (qword_2544508D0 != -1)
    swift_once();
  v19 = sub_247A1ADB8();
  __swift_project_value_buffer(v19, (uint64_t)qword_2544508B8);
  v20 = sub_247A1ADA0();
  v21 = sub_247A1B10C();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_2479C5000, v20, v21, "Request to index ignored: this store is not indexable", v22, 2u);
    MEMORY[0x249588124](v22, -1, -1);
  }

}

id sub_2479CD650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  void *v22[2];
  char v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for StickerContainer(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(int *)(v3 + 20);
  v7 = *(void **)(v0 + v6);
  objc_msgSend(v7, sel_lock);
  v8 = v1 + *(int *)(v2 + 24);
  if ((*(_BYTE *)(v8 + 16) & 1) != 0)
  {
    if (qword_2544508D0 != -1)
      swift_once();
    v9 = sub_247A1ADB8();
    __swift_project_value_buffer(v9, (uint64_t)qword_2544508B8);
    sub_2479CD904(v1, (uint64_t)v5, type metadata accessor for StickerContainer);
    v10 = sub_247A1ADA0();
    v11 = sub_247A1B118();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v24 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = &v5[*(int *)(v2 + 24)];
      v15 = (void *)*((_QWORD *)v14 + 1);
      v16 = v14[16];
      v22[0] = *(void **)v14;
      v22[1] = v15;
      v23 = v16;
      sub_2479CDBFC(v22[0], (uint64_t)v15, v16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B08);
      v17 = sub_247A1AEFC();
      v22[0] = (void *)sub_2479CCA28(v17, v18, &v24);
      sub_247A1B208();
      swift_bridgeObjectRelease();
      sub_2479CD960((uint64_t)v5, type metadata accessor for StickerContainer);
      _os_log_impl(&dword_2479C5000, v10, v11, "Reindexing container not available: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v13, -1, -1);
      MEMORY[0x249588124](v12, -1, -1);
    }
    else
    {
      sub_2479CD960((uint64_t)v5, type metadata accessor for StickerContainer);
    }

    return objc_msgSend(*(id *)(v1 + v6), sel_unlock);
  }
  else
  {
    v19 = *(id *)v8;
    v20 = swift_bridgeObjectRetain();
    sub_2479CD004(v20, v1);
    swift_bridgeObjectRelease();

    return objc_msgSend(v7, sel_unlock);
  }
}

uint64_t type metadata accessor for StickerContainer(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_254450C90);
}

uint64_t sub_2479CD904(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2479CD948(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_2479CC474(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2479CD960(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for StickerReindexerError(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_2576D2AC8);
}

uint64_t sub_2479CD9B0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2479CD9E4()
{
  return sub_2479CDA10(&qword_2576D2AC0, type metadata accessor for StickerReindexerError, (uint64_t)&protocol conformance descriptor for StickerReindexerError);
}

uint64_t sub_2479CDA10(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x249588058](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StickerContainer.LoadMethod()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StickerContainer.ReindexMethod()
{
  return objc_opt_self();
}

uint64_t *initializeBufferWithCopyOfBuffer for StickerReindexer(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  id v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_247A1AB9C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      v9 = type metadata accessor for CoreDataDataMapper.StoreType(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
    v11 = type metadata accessor for StickerContainer(0);
    v12 = *(int *)(v11 + 20);
    v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    v14 = *(int *)(v11 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(void **)v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = v16[16];
    v20 = v13;
    sub_2479CDBFC(v17, v18, v19);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    v15[16] = v19;
    v21 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v22 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = (uint64_t)v22;
    v23 = a3[7];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_247A1ADB8();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    v28 = v22;
    v27(v24, v25, v26);
  }
  return a1;
}

void *sub_2479CDBFC(void *result, uint64_t a2, char a3)
{
  id v3;

  if ((a3 & 1) == 0)
  {
    v3 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for StickerReindexer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_247A1AB9C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = type metadata accessor for StickerContainer(0);

  sub_2479CDCE0(*(void **)(a1 + *(int *)(v6 + 24)), *(_QWORD *)(a1 + *(int *)(v6 + 24) + 8), *(_BYTE *)(a1 + *(int *)(v6 + 24) + 16));
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_247A1ADB8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

void *sub_2479CDCE0(void *result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v9 = type metadata accessor for StickerContainer(0);
  v10 = *(int *)(v9 + 20);
  v11 = *(void **)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  v12 = *(int *)(v9 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(void **)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  v18 = v11;
  sub_2479CDBFC(v15, v16, v17);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  v13[16] = v17;
  v19 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v20 = *(void **)&a2[v19];
  *(_QWORD *)&a1[v19] = v20;
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_247A1ADB8();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v26 = v20;
  v25(v22, v23, v24);
  return a1;
}

char *assignWithCopy for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  v12 = type metadata accessor for StickerContainer(0);
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a2[v13];
  v15 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = v14;
  v16 = v14;

  v17 = *(int *)(v12 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(void **)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  sub_2479CDBFC(*(void **)v19, v21, v22);
  v23 = *(void **)v18;
  v24 = *((_QWORD *)v18 + 1);
  v25 = v18[16];
  *(_QWORD *)v18 = v20;
  *((_QWORD *)v18 + 1) = v21;
  v18[16] = v22;
  sub_2479CDCE0(v23, v24, v25);
  a1[a3[5]] = a2[a3[5]];
  v26 = a3[6];
  v27 = *(void **)&a2[v26];
  v28 = *(void **)&a1[v26];
  *(_QWORD *)&a1[v26] = v27;
  v29 = v27;

  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_247A1ADB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

char *initializeWithTake for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v9 = type metadata accessor for StickerContainer(0);
  *(_QWORD *)&a1[*(int *)(v9 + 20)] = *(_QWORD *)&a2[*(int *)(v9 + 20)];
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v11[16] = v12[16];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v13 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_247A1ADB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

char *assignWithTake for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  v12 = type metadata accessor for StickerContainer(0);
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];

  v15 = *(int *)(v12 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = v17[16];
  v19 = *(void **)v16;
  v20 = *((_QWORD *)v16 + 1);
  v21 = v16[16];
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v16[16] = v18;
  sub_2479CDCE0(v19, v20, v21);
  v22 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v23 = *(void **)&a1[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];

  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_247A1ADB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerReindexer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479CE2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for StickerContainer(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_247A1ADB8();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerReindexer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479CE354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for StickerContainer(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = sub_247A1ADB8();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2479CE3F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for StickerContainer(319);
  if (v1 <= 0x3F)
  {
    result = sub_247A1ADB8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StickerReindexerError(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = *a2;
      *(_QWORD *)a1 = *a2;
      v11 = v10;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_247A1AB9C();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void destroy for StickerReindexerError(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    v3 = sub_247A1AB9C();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void **initializeWithCopy for StickerReindexerError(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  id v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *a2;
    *a1 = *a2;
    v9 = v8;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_247A1AB9C();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void **assignWithCopy for StickerReindexerError(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  id v9;

  if (a1 != a2)
  {
    sub_2479CD960((uint64_t)a1, type metadata accessor for StickerReindexerError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *a2;
      *a1 = *a2;
      v9 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_247A1AB9C();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for StickerReindexerError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_247A1AB9C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for StickerReindexerError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2479CD960((uint64_t)a1, type metadata accessor for StickerReindexerError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_247A1AB9C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerReindexerError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for StickerReindexerError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2479CE88C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2479CE89C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1AB9C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2479CE90C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  char v18;
  id v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_247A1AB9C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      v9 = type metadata accessor for CoreDataDataMapper.StoreType(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *(void **)((char *)a2 + v12);
    v17 = *((_QWORD *)v15 + 1);
    v18 = v15[16];
    v19 = v13;
    sub_2479CDBFC(v16, v17, v18);
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v17;
    v14[16] = v18;
  }
  return a1;
}

void *sub_2479CEA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_247A1AB9C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);

  return sub_2479CDCE0(*(void **)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
}

char *sub_2479CEA98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char v16;
  id v17;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)&a2[v9];
  *(_QWORD *)&a1[v9] = v11;
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *(void **)&a2[v10];
  v15 = *((_QWORD *)v13 + 1);
  v16 = v13[16];
  v17 = v11;
  sub_2479CDBFC(v14, v15, v16);
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  v12[16] = v16;
  return a1;
}

char *sub_2479CEB7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(void **)&a2[v12];
  v14 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = v13;
  v15 = v13;

  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(void **)v18;
  v20 = *((_QWORD *)v18 + 1);
  LOBYTE(v14) = v18[16];
  sub_2479CDBFC(*(void **)v18, v20, (char)v14);
  v21 = *(void **)v17;
  v22 = *((_QWORD *)v17 + 1);
  v23 = v17[16];
  *(_QWORD *)v17 = v19;
  *((_QWORD *)v17 + 1) = v20;
  v17[16] = (char)v14;
  sub_2479CDCE0(v21, v22, v23);
  return a1;
}

char *sub_2479CECC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  return a1;
}

char *sub_2479CED94(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  void *v18;
  uint64_t v19;
  char v20;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = v16[16];
  v18 = *(void **)v15;
  v19 = *((_QWORD *)v15 + 1);
  v20 = v15[16];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v17;
  sub_2479CDCE0(v18, v19, v20);
  return a1;
}

uint64_t sub_2479CEEC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479CEED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2479CEF50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479CEF5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CoreDataDataMapper.StoreType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_2479CEFD4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CoreDataDataMapper.StoreType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2479CF054()
{
  unint64_t result;

  result = qword_2576D2AD8;
  if (!qword_2576D2AD8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerStoreError, &type metadata for StickerStoreError);
    atomic_store(result, (unint64_t *)&qword_2576D2AD8);
  }
  return result;
}

unint64_t sub_2479CF098()
{
  unint64_t result;

  result = qword_2576D2AE0;
  if (!qword_2576D2AE0)
  {
    result = MEMORY[0x249588058](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2576D2AE0);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2479CF11C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_2479CF158@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD))(v1 + 16))(&v5, *(_QWORD *)(v1 + 32));
  if (!v2)
    *a1 = v5;
  return result;
}

_QWORD *sub_2479CF19C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD))(v1 + 16))(&v5, *(_QWORD *)(v1 + 32));
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_2479CF1E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_2479CF208()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2479CF22C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2479CABFC(a1, a2, v2);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

NSObject *sub_2479CF24C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  id v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  _BYTE *v22;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450808);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_247A1AB9C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)&v28 - v8;
  type metadata accessor for CoreDataDataMapper(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = (void *)sub_247A1AEC0();
  v12 = (void *)sub_247A1AEC0();
  v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (v13)
  {
    sub_247A1AB54();

    v14 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v14(v2, v7, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15 = v29;
      v14(v29, v2, v3);
      v16 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
      v17 = (void *)sub_247A1AB30();
      v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

      if (v18)
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);

      }
      else
      {
        if (qword_2544508D0 != -1)
          swift_once();
        v24 = sub_247A1ADB8();
        __swift_project_value_buffer(v24, (uint64_t)qword_2544508B8);
        v18 = sub_247A1ADA0();
        v25 = sub_247A1B118();
        if (os_log_type_enabled(v18, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_2479C5000, v18, v25, "Could not load the database model", v26, 2u);
          MEMORY[0x249588124](v26, -1, -1);
        }

        sub_2479CF054();
        swift_allocError();
        *v27 = 9;
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
      }
      return v18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_2479D045C((uint64_t)v2, &qword_254450808);
  if (qword_2544508D0 != -1)
    swift_once();
  v19 = sub_247A1ADB8();
  __swift_project_value_buffer(v19, (uint64_t)qword_2544508B8);
  v18 = sub_247A1ADA0();
  v20 = sub_247A1B118();
  if (os_log_type_enabled(v18, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_2479C5000, v18, v20, "Could not locate the database model", v21, 2u);
    MEMORY[0x249588124](v21, -1, -1);
  }

  sub_2479CF054();
  swift_allocError();
  *v22 = 8;
  swift_willThrow();

  return v18;
}

id sub_2479CF678(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char **p_type;
  objc_class *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  char *v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  char **v54;
  uint8_t *v55;
  uint8_t *v56;
  char *v57;
  void *v58;
  void *v59;
  char **v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char **v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v80 = (char **)sub_247A1AB00();
  v78 = (uint64_t)*(v80 - 1);
  MEMORY[0x24BDAC7A8](v80);
  v79 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450808);
  MEMORY[0x24BDAC7A8](v5);
  v77 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_247A1AB9C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)&v74 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)&v74 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)&v74 - v15;
  v16 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v74 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v83 = v7;
  v22((char *)&v74 - v20, 1, 2, v7);
  LOBYTE(v7) = sub_2479F51D8(a1, (uint64_t)v21);
  sub_2479CD960((uint64_t)v21, type metadata accessor for CoreDataDataMapper.StoreType);
  p_type = &stru_251915FF0.type;
  if ((v7 & 1) != 0)
    v24 = (objc_class *)MEMORY[0x24BDBB6D8];
  else
    v24 = (objc_class *)MEMORY[0x24BDBB700];
  v25 = objc_allocWithZone(v24);
  v26 = a2;
  v27 = (void *)sub_247A1AEC0();
  v28 = objc_msgSend(v25, sel_initWithName_managedObjectModel_, v27, v26);

  v29 = objc_msgSend(v28, sel_persistentStoreDescriptions);
  sub_2479D032C(0, &qword_254450948);
  v30 = sub_247A1B034();

  if (!(v30 >> 62))
  {
    if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_30:
    swift_bridgeObjectRelease();
    return v28;
  }
  swift_bridgeObjectRetain();
  v72 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (!v72)
    goto LABEL_30;
LABEL_6:
  if ((v30 & 0xC000000000000001) != 0)
  {
    p_type = (char **)MEMORY[0x249587908](0, v30);
    v31 = v83;
  }
  else
  {
    v31 = v83;
    if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_34;
    }
    p_type = (char **)*(id *)(v30 + 32);
  }
  swift_bridgeObjectRelease();
  sub_2479CD904(a1, (uint64_t)v19, type metadata accessor for CoreDataDataMapper.StoreType);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v19, 2, v31);
  if (!v32)
  {
    v80 = p_type;
    v40 = v82;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v82, v19, v31);
    if (qword_2544508D0 != -1)
      swift_once();
    v41 = sub_247A1ADB8();
    __swift_project_value_buffer(v41, (uint64_t)qword_2544508B8);
    v42 = v81;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v81, v40, v31);
    v43 = sub_247A1ADA0();
    v44 = sub_247A1B10C();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v86 = v46;
      *(_DWORD *)v45 = 136315138;
      sub_2479CDA10((unint64_t *)&qword_254450440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v47 = sub_247A1B4CC();
      v85 = sub_2479CCA28(v47, v48, &v86);
      v31 = v83;
      sub_247A1B208();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(char *, uint64_t))(v8 + 8);
      v49(v81, v31);
      _os_log_impl(&dword_2479C5000, v43, v44, "Using custom database (%s)", v45, 0xCu);
      swift_arrayDestroy();
      v50 = v46;
      v40 = v82;
      MEMORY[0x249588124](v50, -1, -1);
      MEMORY[0x249588124](v45, -1, -1);
    }
    else
    {
      v49 = *(void (**)(char *, uint64_t))(v8 + 8);
      v49(v42, v31);
    }

    v59 = (void *)sub_247A1AB30();
    v60 = v80;
    objc_msgSend(v80, sel_setURL_, v59);

    v49(v40, v31);
    v61 = (void *)*MEMORY[0x24BDBB4C8];
    goto LABEL_28;
  }
  if (v32 == 1)
  {
    if (qword_2544508D0 == -1)
    {
LABEL_12:
      v33 = sub_247A1ADB8();
      __swift_project_value_buffer(v33, (uint64_t)qword_2544508B8);
      v34 = sub_247A1ADA0();
      v35 = sub_247A1B10C();
      v36 = os_log_type_enabled(v34, v35);
      v37 = v75;
      if (v36)
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_2479C5000, v34, v35, "Using shared database", v38, 2u);
        MEMORY[0x249588124](v38, -1, -1);
      }

      v39 = v84;
      sub_2479C7C88();
      if (v39)
      {

        return v28;
      }
      v62 = (void *)sub_247A1AB30();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v37, v31);
      objc_msgSend(p_type, sel_setURL_, v62);

      sub_2479D032C(0, (unint64_t *)&qword_254450BF0);
      v60 = p_type;
      v63 = (void *)sub_247A1B1A8();
      v61 = (void *)*MEMORY[0x24BDBB4C8];
      objc_msgSend(v60, sel_setOption_forKey_, v63, *MEMORY[0x24BDBB4C8]);

      v64 = (void *)sub_247A1AEC0();
      objc_msgSend(v60, sel_setConfiguration_, v64);

      v65 = objc_allocWithZone(MEMORY[0x24BDBB6F8]);
      v66 = (void *)sub_247A1AEC0();
      v67 = objc_msgSend(v65, sel_initWithContainerIdentifier_, v66);

      v68 = (void *)sub_247A1AEC0();
      objc_msgSend(v67, sel_setApsConnectionMachServiceName_, v68);

      objc_msgSend(v67, sel_setUseDeviceToDeviceEncryption_, 1);
      v69 = (void *)sub_247A1B1B4();
      objc_msgSend(v67, sel_setCkAssetThresholdBytes_, v69);

      objc_msgSend(v60, sel_setCloudKitContainerOptions_, v67);
LABEL_28:
      sub_2479D032C(0, (unint64_t *)&qword_254450BF0);
      v70 = (void *)sub_247A1B1A8();
      v71 = v61;
      objc_msgSend(v60, sel_setOption_forKey_, v70, v71);

      return v28;
    }
LABEL_34:
    swift_once();
    goto LABEL_12;
  }
  if (qword_2544508D0 != -1)
    swift_once();
  v51 = sub_247A1ADB8();
  __swift_project_value_buffer(v51, (uint64_t)qword_2544508B8);
  v52 = sub_247A1ADA0();
  v53 = sub_247A1B10C();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = p_type;
    v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v55 = 0;
    _os_log_impl(&dword_2479C5000, v52, v53, "Using in-memory database", v55, 2u);
    v56 = v55;
    p_type = v54;
    MEMORY[0x249588124](v56, -1, -1);
  }

  v22(v77, 1, 1, v31);
  (*(void (**)(char *, _QWORD, char **))(v78 + 104))(v79, *MEMORY[0x24BDCD7A0], v80);
  v57 = v76;
  sub_247A1AB84();
  v58 = (void *)sub_247A1AB30();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v31);
  objc_msgSend(p_type, sel_setURL_, v58);

  return v28;
}

void sub_2479CFFF8(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22[2];

  v22[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (os_variant_has_internal_content() && ((sub_2479EB388() & 1) != 0 || (sub_2479EB43C() & 1) != 0))
  {
    objc_opt_self();
    v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      v3 = (void *)v2;
      v22[0] = 0;
      v4 = a1;
      if (objc_msgSend(v3, sel_initializeCloudKitSchemaWithOptions_error_, 0, v22))
      {
        v5 = qword_2544508D0;
        v6 = v22[0];
        if (v5 != -1)
          swift_once();
        v7 = sub_247A1ADB8();
        __swift_project_value_buffer(v7, (uint64_t)qword_2544508B8);
        v8 = sub_247A1ADA0();
        v9 = sub_247A1B100();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v10 = 0;
          _os_log_impl(&dword_2479C5000, v8, v9, "[Internal] CloudKit schema initialized", v10, 2u);
          MEMORY[0x249588124](v10, -1, -1);
        }

      }
      else
      {
        v11 = v22[0];
        v12 = (void *)sub_247A1AADC();

        swift_willThrow();
        if (qword_2544508D0 != -1)
          swift_once();
        v13 = sub_247A1ADB8();
        __swift_project_value_buffer(v13, (uint64_t)qword_2544508B8);
        v14 = v12;
        v15 = v12;
        v16 = sub_247A1ADA0();
        v17 = sub_247A1B118();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          v19 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v18 = 138412290;
          v20 = v12;
          v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v22[0] = v21;
          sub_247A1B208();
          *v19 = v21;

          _os_log_impl(&dword_2479C5000, v16, v17, "[Internal] Could not initialize CloudKit schema: %@", v18, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
          swift_arrayDestroy();
          MEMORY[0x249588124](v19, -1, -1);
          MEMORY[0x249588124](v18, -1, -1);

        }
        else
        {

        }
      }
    }
  }
}

uint64_t sub_2479D032C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2479D0388()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2479D03B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2479D0414;
  v4[15] = v2;
  v4[16] = v3;
  return swift_task_switch();
}

uint64_t sub_2479D0414()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2479D045C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2479D0498()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2479D04BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2479D0414;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2576D2B18 + dword_2576D2B18))(a1, v4);
}

uint64_t sub_2479D052C()
{
  return swift_deallocObject();
}

int *sub_2479D053C()
{
  uint64_t v0;

  return sub_2479CBED8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2479D0544()
{
  return swift_deallocObject();
}

uint64_t sub_2479D0554()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

_QWORD *initializeBufferWithCopyOfBuffer for StickerContainer.StickerContainerImpl(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StickerContainer.StickerContainerImpl(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for StickerContainer.StickerContainerImpl(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for StickerContainer.StickerContainerImpl(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerContainer.StickerContainerImpl(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerContainer.StickerContainerImpl(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerContainer.StickerContainerImpl()
{
  return &type metadata for StickerContainer.StickerContainerImpl;
}

uint64_t sub_2479D0708(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock;
  unint64_t v48;
  uint64_t (*v49)(uint64_t);
  void *v50;
  void (*v51)(unint64_t);
  uint64_t v52;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v38 - v8;
  v10 = *(int *)(v7 + 48);
  v11 = v1 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter;
  v12 = sub_247A0F98C((uint64_t)v38 - v8, "touch spotlight item", 20, 2);
  v45 = v10;
  *(_QWORD *)&v9[v10] = v12;
  aBlock = 0xD000000000000015;
  v48 = 0x8000000247A1EF40;
  v13 = &a1[OBJC_IVAR___STKSticker_identifier];
  v14 = sub_247A1AC8C();
  v15 = sub_2479D1618();
  v42 = v14;
  v43 = v13;
  v41 = v15;
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  v44 = v48;
  if (qword_254450A98 != -1)
    swift_once();
  v16 = sub_247A1ADB8();
  __swift_project_value_buffer(v16, (uint64_t)qword_254452050);
  v17 = a1;
  v18 = sub_247A1ADA0();
  v19 = sub_247A1B10C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v40 = v9;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    aBlock = v22;
    v38[1] = v11;
    v39 = v3;
    *(_DWORD *)v21 = 136315138;
    v23 = sub_247A1B4CC();
    v46 = sub_2479CCA28(v23, v24, &aBlock);
    v3 = v39;
    sub_247A1B208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v18, v19, "Will touch spotlight items for sticker: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v22, -1, -1);
    v25 = v21;
    v9 = v40;
    MEMORY[0x249588124](v25, -1, -1);

  }
  else
  {

  }
  v26 = objc_allocWithZone(MEMORY[0x24BDC2460]);
  v27 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v28 = (void *)sub_247A1B028();
  v29 = objc_msgSend(v26, sel_initWithQueryString_attributes_, v27, v28);

  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v17;
  v51 = sub_2479D1684;
  v52 = v30;
  aBlock = MEMORY[0x24BDAC760];
  v48 = 1107296256;
  v49 = sub_2479D1454;
  v50 = &block_descriptor_0;
  v31 = _Block_copy(&aBlock);
  v32 = v17;
  swift_release();
  objc_msgSend(v29, sel_setFoundItemsHandler_, v31);
  _Block_release(v31);
  objc_msgSend(v29, sel_start);

  v33 = *(int *)(v3 + 48);
  v34 = sub_247A1AD34();
  v35 = *(_QWORD *)(v34 - 8);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v6, v9, v34);
  v36 = *(_QWORD *)&v9[v45];
  *(_QWORD *)&v6[v33] = v36;
  swift_retain();
  sub_247A12024("touch spotlight item", 20, 2, (uint64_t)v6, v36);
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v34);
  return sub_2479D16A4((uint64_t)v9);
}

void sub_2479D0B40(unint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t aBlock[6];

  if (qword_254450A98 != -1)
    swift_once();
  v4 = sub_247A1ADB8();
  __swift_project_value_buffer(v4, (uint64_t)qword_254452050);
  swift_bridgeObjectRetain_n();
  v5 = a2;
  v6 = sub_247A1ADA0();
  v7 = sub_247A1B10C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    aBlock[0] = v9;
    *(_DWORD *)v8 = 134218242;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_247A1B37C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_247A1B208();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    sub_247A1AC8C();
    sub_2479D1618();
    v10 = sub_247A1B4CC();
    sub_2479CCA28(v10, v11, aBlock);
    sub_247A1B208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v6, v7, "Total %ld spotlight items found for sticker %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x249588124](v9, -1, -1);
    MEMORY[0x249588124](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = v5;
  sub_2479D1720(a1, (uint64_t)v12);

  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultSearchableIndex);
  sub_2479D16E4();
  v14 = (void *)sub_247A1B028();
  swift_bridgeObjectRelease();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v12;
  aBlock[4] = (uint64_t)sub_2479D1918;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2479D1400;
  aBlock[3] = (uint64_t)&block_descriptor_6;
  v16 = _Block_copy(aBlock);
  v17 = v12;
  swift_release();
  objc_msgSend(v13, sel_indexSearchableItems_completionHandler_, v14, v16);
  _Block_release(v16);

  v18 = v17;
  v19 = sub_247A1ADA0();
  v20 = sub_247A1B10C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136315138;
    sub_247A1AC8C();
    sub_2479D1618();
    v23 = sub_247A1B4CC();
    sub_2479CCA28(v23, v24, aBlock);
    sub_247A1B208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v19, v20, "Done touching spotlight items for sticker: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v22, -1, -1);
    MEMORY[0x249588124](v21, -1, -1);

  }
  else
  {

  }
}

void sub_2479D0FC8(void *a1, void *a2)
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *oslog;
  uint64_t v25;
  uint64_t v26;

  if (a1)
  {
    v4 = a1;
    if (qword_254450A98 != -1)
      swift_once();
    v5 = sub_247A1ADB8();
    __swift_project_value_buffer(v5, (uint64_t)qword_254452050);
    v6 = a2;
    v7 = a1;
    v8 = v6;
    v9 = a1;
    oslog = sub_247A1ADA0();
    v10 = sub_247A1B118();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v26 = v13;
      *(_DWORD *)v11 = 136315394;
      sub_247A1AC8C();
      sub_2479D1618();
      v14 = sub_247A1B4CC();
      sub_2479CCA28(v14, v15, &v26);
      sub_247A1B208();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2112;
      v16 = a1;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v12 = v25;

      _os_log_impl(&dword_2479C5000, oslog, v10, "Error while touching spotlight item with sticker identifier %s: %@", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x249588124](v13, -1, -1);
      MEMORY[0x249588124](v11, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_254450A98 != -1)
      swift_once();
    v17 = sub_247A1ADB8();
    __swift_project_value_buffer(v17, (uint64_t)qword_254452050);
    oslog = a2;
    v18 = sub_247A1ADA0();
    v19 = sub_247A1B100();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_DWORD *)v20 = 136315138;
      v26 = v21;
      sub_247A1AC8C();
      sub_2479D1618();
      v22 = sub_247A1B4CC();
      sub_2479CCA28(v22, v23, &v26);
      sub_247A1B208();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2479C5000, v18, v19, "Done touching sticker spotlight item with sticker identifier %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v21, -1, -1);
      MEMORY[0x249588124](v20, -1, -1);

      return;
    }

  }
}

void sub_2479D1400(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_2479D1454(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_2479D16E4();
  v2 = sub_247A1B034();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479D14B0()
{
  uint64_t v0;

  return sub_2479D15DC(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter);
}

uint64_t sub_2479D14C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  v2 = sub_247A1ADB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2479D15DC(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter);
  return swift_deallocClassInstance();
}

uint64_t sub_2479D152C()
{
  return _s5TouchCMa();
}

uint64_t _s5TouchCMa()
{
  uint64_t result;

  result = qword_2576D2B30;
  if (!qword_2576D2B30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2479D1570()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1AD58();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2479D15DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StickerSignposter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2479D1618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254450A60;
  if (!qword_254450A60)
  {
    v1 = sub_247A1AC8C();
    result = MEMORY[0x249588058](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_254450A60);
  }
  return result;
}

uint64_t sub_2479D1660()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2479D1684(unint64_t a1)
{
  uint64_t v1;

  sub_2479D0B40(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_2479D16A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2479D16E4()
{
  unint64_t result;

  result = qword_2576D2B40;
  if (!qword_2576D2B40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576D2B40);
  }
  return result;
}

uint64_t sub_2479D1720(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_247A1AC2C();
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_14;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v9)
      break;
    v19 = MEMORY[0x24BEE4AF8];
    result = sub_247A1B340();
    if (v9 < 0)
    {
      __break(1u);
      return result;
    }
    v16 = v3;
    a2 += OBJC_IVAR___STKSticker_lastUsedDate;
    swift_beginAccess();
    v11 = 0;
    while (v9 != v11)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x249587908](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      v14 = objc_msgSend(v12, sel_attributeSet);
      sub_247A1ABE4();
      v15 = (void *)sub_247A1AC08();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
      objc_msgSend(v14, sel_setLastUsedDate_, v15);

      objc_msgSend(v13, sel_setIsUpdate_, 1);
      sub_247A1B328();
      v3 = *(_QWORD *)(v19 + 16);
      sub_247A1B34C();
      sub_247A1B358();
      sub_247A1B334();
      if (v9 == v11)
        return v19;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v9 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2479D1918(void *a1)
{
  uint64_t v1;

  sub_2479D0FC8(a1, *(void **)(v1 + 16));
}

id _STKTextInputObjCStoreFacade.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  objc_class *v9;
  objc_super v11;

  v1 = type metadata accessor for StickerStore.PersistenceType();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0;
  sub_247A1ADAC();
  v5 = sub_247A1AB9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 3, v5);
  v6 = type metadata accessor for StickerStore();
  swift_allocObject();
  v7 = StickerStore.init(persistence:)((uint64_t)v3);
  v8 = (uint64_t *)&v4[OBJC_IVAR____STKTextInputObjCStoreFacade_store];
  v8[3] = v6;
  v8[4] = (uint64_t)&protocol witness table for StickerStore;
  *v8 = v7;

  v9 = (objc_class *)type metadata accessor for _STKTextInputObjCStoreFacade(0);
  v11.receiver = v4;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, sel_init);
}

id _STKTextInputObjCStoreFacade.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_247A1ADAC();
  sub_2479D9770(a1, (uint64_t)v3 + OBJC_IVAR____STKTextInputObjCStoreFacade_store);

  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

id _STKTextInputObjCStoreFacade.init(store:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = v1;
  sub_247A1ADAC();
  sub_2479D9770(a1, (uint64_t)v3 + OBJC_IVAR____STKTextInputObjCStoreFacade_store);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for _STKTextInputObjCStoreFacade(0);
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

uint64_t sub_2479D1D14(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  char *v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  __int128 v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, id);
  char *v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, id);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  void (*v47)(void **__return_ptr, uint64_t *, uint64_t, uint64_t);
  id v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  char *v66;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  __int128 v69;
  char *v70;
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74[4];
  __int128 v75;
  char v76;
  uint64_t v77;
  char v78;
  void *v79[19];
  char v80[8];
  id v81;
  id v82;
  uint64_t v83;
  __int128 v84;
  char v85;
  uint64_t v86;
  char v87;

  v4 = (_QWORD *)sub_247A1AC8C();
  v71 = *(v4 - 1);
  v72 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v73 = (char *)&v59 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v8);
  v70 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v74[0]) = 2;
  v79[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)v74, 0, v79, 0, 0, 0, 1, 8, (uint64_t)v80, 0);
  v80[0] = 1;
  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v10 = swift_allocObject();
  v69 = xmmword_247A1C830;
  *(_OWORD *)(v10 + 16) = xmmword_247A1C830;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v12 = sub_2479D4FF8();
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 32) = 0x696669746E656469;
  *(_QWORD *)(v10 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v10 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B88);
  *(_QWORD *)(v10 + 104) = sub_2479D96F4((unint64_t *)&qword_2576D2B90, &qword_2576D2B88, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v10 + 72) = a1;
  swift_bridgeObjectRetain();
  v13 = (void *)sub_247A1B0F4();

  v81 = v13;
  if (a2)
  {
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = v69;
    *(_QWORD *)(v14 + 56) = v11;
    *(_QWORD *)(v14 + 64) = v12;
    *(_QWORD *)(v14 + 32) = 1701605234;
    *(_QWORD *)(v14 + 40) = 0xE400000000000000;
    *(_QWORD *)(v14 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B98);
    *(_QWORD *)(v14 + 104) = sub_2479D96F4(&qword_2576D2BA0, &qword_2576D2B98, MEMORY[0x24BDCFBF8]);
    *(_QWORD *)(v14 + 72) = a2;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_247A1B0F4();
    sub_2479D5080(v82);
    v82 = v15;
  }
  else
  {
    sub_2479D5080(v82);
    v82 = 0;
  }
  v16 = &v63[OBJC_IVAR____STKTextInputObjCStoreFacade_logger];
  swift_bridgeObjectRetain();
  *(_QWORD *)&v69 = v16;
  v17 = sub_247A1ADA0();
  v18 = sub_247A1B10C();
  v19 = os_log_type_enabled(v17, v18);
  v20 = v66;
  if (v19)
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v21 = 134217984;
    v79[0] = *(void **)(a1 + 16);
    sub_247A1B208();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v17, v18, "Representations requested for %ld identifiers", v21, 0xCu);
    MEMORY[0x249588124](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v23 = v71;
  v22 = v72;
  v24 = *(_QWORD *)(a1 + 16);
  v62 = a1;
  v60 = v24;
  if (v24)
  {
    v25 = a1 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    v68 = *(_QWORD *)(v71 + 72);
    v26 = *(void (**)(_QWORD, _QWORD, _QWORD))(v71 + 16);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v27 = 136315138;
    v65 = v27;
    v64 = MEMORY[0x24BEE4AD8] + 8;
    v28 = v24;
    v29 = v70;
    v67 = v26;
    while (1)
    {
      v26(v29, v25, v22);
      v66 = *(char **)(v23 + 56);
      ((void (*)(char *, _QWORD, uint64_t, id))v66)(v29, 0, 1, v22);
      if ((*(unsigned int (**)(char *, uint64_t, id))(v23 + 48))(v29, 1, v22) == 1)
        break;
      v31 = v73;
      (*(void (**)(char *, char *, id))(v23 + 32))(v73, v29, v22);
      v26(v20, v31, v22);
      v32 = v20;
      v33 = sub_247A1ADA0();
      v34 = sub_247A1B10C();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc();
        v36 = (void *)swift_slowAlloc();
        v79[0] = v36;
        *(_DWORD *)v35 = v65;
        sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v37 = sub_247A1B4CC();
        *(_QWORD *)(v35 + 4) = sub_2479CCA28(v37, v38, (uint64_t *)v79);
        swift_bridgeObjectRelease();
        v30 = *(void (**)(char *, id))(v71 + 8);
        v30(v32, v72);
        _os_log_impl(&dword_2479C5000, v33, v34, " - %s", (uint8_t *)v35, 0xCu);
        swift_arrayDestroy();
        v39 = v36;
        v23 = v71;
        MEMORY[0x249588124](v39, -1, -1);
        v40 = v35;
        v22 = v72;
        MEMORY[0x249588124](v40, -1, -1);

      }
      else
      {

        v30 = *(void (**)(char *, id))(v23 + 8);
        v30(v32, v22);
      }
      v20 = v32;
      v30(v73, v22);
      v26 = v67;
      v25 += v68;
      --v28;
      v29 = v70;
      if (!v28)
      {
        ((void (*)(char *, uint64_t, uint64_t, id))v66)(v70, 1, 1, v22);
        break;
      }
    }
  }
  else
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t, id))(v71 + 56);
    swift_bridgeObjectRetain();
    v41(v70, 1, 1, v22);
  }
  v42 = v62;
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)&v63[OBJC_IVAR____STKTextInputObjCStoreFacade_store + 24];
  v44 = *(_QWORD *)&v63[OBJC_IVAR____STKTextInputObjCStoreFacade_store + 32];
  __swift_project_boxed_opaque_existential_1(&v63[OBJC_IVAR____STKTextInputObjCStoreFacade_store], v43);
  v45 = v82;
  v46 = (char *)v83;
  LOBYTE(v74[0]) = v80[0];
  v74[1] = (uint64_t)v81;
  v74[2] = (uint64_t)v82;
  v74[3] = v83;
  v75 = v84;
  v76 = v85;
  v77 = v86;
  v78 = v87;
  v47 = *(void (**)(void **__return_ptr, uint64_t *, uint64_t, uint64_t))(v44 + 16);
  v48 = v81;
  sub_2479D50B4(v45);
  swift_bridgeObjectRetain();
  v49 = v61;
  v47(v79, v74, v43, v44);

  sub_2479D5080(v45);
  if (v49)
  {

    swift_bridgeObjectRelease();
    sub_2479D5080(v45);
    swift_bridgeObjectRelease();
  }
  else
  {
    v72 = v45;
    v73 = v46;
    swift_bridgeObjectRelease();
    v50 = v63;
    v51 = (unint64_t)sub_2479D69A0((uint64_t)v79);

    if ((v51 & 0x8000000000000000) != 0 || (v51 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v58 = swift_bridgeObjectRetain();
      v52 = (uint64_t)sub_2479D528C(v58, (void (*)(_QWORD))type metadata accessor for _STKSticker, &qword_2576D2C00, &qword_2576D2BF8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2479D627C);
      swift_bridgeObjectRelease();
    }
    else
    {
      v52 = v51 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v74[0] = v52;
    swift_bridgeObjectRetain();
    sub_2479D9284(v74, v42, (uint64_t (*)(uint64_t))sub_2479F51C4, (void (*)(_QWORD *, uint64_t))sub_2479D74C0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v44 = v74[0];
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v53 = sub_247A1ADA0();
    v54 = sub_247A1B10C();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      *(_DWORD *)v55 = 134218240;
      swift_bridgeObjectRelease();
      v74[0] = v60;
      sub_247A1B208();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2048;
      if (v44 < 0 || (v44 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v56 = sub_247A1B37C();
        swift_release();
      }
      else
      {
        v56 = *(_QWORD *)(v44 + 16);
      }
      swift_release();
      v74[0] = v56;
      sub_247A1B208();
      swift_release();
      _os_log_impl(&dword_2479C5000, v53, v54, "Identifiers given: %ld, Stickers found: %ld", (uint8_t *)v55, 0x16u);
      MEMORY[0x249588124](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    sub_2479D8018((uint64_t)v79);

    sub_2479D5080(v72);
    swift_bridgeObjectRelease();
  }
  return v44;
}

id sub_2479D2618@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  objc_super v48;
  uint64_t v49;

  v47 = a2;
  v3 = sub_247A1AC8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v49 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)*a1;
  v46 = sub_2479D2D2C(*a1);
  v7 = &v6[OBJC_IVAR___STKSticker_attributionInfo];
  swift_beginAccess();
  v8 = *(_QWORD *)v7;
  if (*(_QWORD *)v7)
  {
    v9 = *(void **)(v8 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
    v10 = (uint64_t *)(v8 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
    swift_beginAccess();
    v12 = *v10;
    v11 = v10[1];
    v14 = *(_QWORD *)(v8 + OBJC_IVAR___STKStickerAttributionInfo_name);
    v13 = *(_QWORD *)(v8 + OBJC_IVAR___STKStickerAttributionInfo_name + 8);
    v15 = (objc_class *)type metadata accessor for _STKStickerAttributionInfo();
    v16 = (char *)objc_allocWithZone(v15);
    *(_QWORD *)&v16[OBJC_IVAR____STKStickerAttributionInfo_adamID] = v9;
    v17 = &v16[OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier];
    *(_QWORD *)v17 = v12;
    *((_QWORD *)v17 + 1) = v11;
    v18 = &v16[OBJC_IVAR____STKStickerAttributionInfo_name];
    *(_QWORD *)v18 = v14;
    *((_QWORD *)v18 + 1) = v13;
    v48.receiver = v16;
    v48.super_class = v15;
    v19 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45 = objc_msgSendSuper2(&v48, sel_init);
  }
  else
  {
    v45 = 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v49, &v6[OBJC_IVAR___STKSticker_identifier], v3);
  v20 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_name];
  swift_beginAccess();
  v21 = v20[1];
  v44 = *v20;
  v22 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_effect];
  swift_beginAccess();
  v43 = *v22;
  v23 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_externalURI];
  swift_beginAccess();
  v24 = v23[1];
  v42 = *v23;
  v25 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_accessibilityName];
  swift_beginAccess();
  v26 = *v25;
  v27 = v25[1];
  v41 = v26;
  v28 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_metadata];
  swift_beginAccess();
  v29 = *v28;
  v30 = v28[1];
  v31 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  v32 = *v31;
  v33 = v31[1];
  v40 = v32;
  v34 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  v36 = *v34;
  v35 = v34[1];
  v37 = objc_allocWithZone((Class)type metadata accessor for _STKSticker(0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2479D935C(v29, v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_2479D3660(v49, v46, v44, v21, v43, v42, v24, v41, v27, v29, v30, (uint64_t)v45, v40, v33, v36, v35);
  *v47 = result;
  return result;
}

unint64_t sub_2479D29FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = sub_2479D1D14(a1, a2);
  v5 = result;
  if (v2)
    return result;
  v14 = MEMORY[0x24BEE4AF8];
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_247A1B37C();
    if (v6)
      goto LABEL_4;
  }
  else
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        swift_bridgeObjectRelease_n();
        result = swift_release();
        __break(1u);
        return result;
      }
      if ((v5 & 0xC000000000000001) != 0)
      {
        v7 = 0;
        do
        {
          v8 = MEMORY[0x249587908](v7++, v5);
          v9 = *(_QWORD *)(v8 + OBJC_IVAR____STKSticker_representations);
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_2479D4E20(v9);
        }
        while (v6 != v7);
      }
      else
      {
        v10 = v5 + 32;
        do
        {
          v10 += 8;
          v11 = swift_bridgeObjectRetain();
          sub_2479D4E20(v11);
          --v6;
        }
        while (v6);
      }
    }
  }
  swift_bridgeObjectRelease_n();
  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v12 = (uint64_t)sub_2479D528C(v13, (void (*)(_QWORD))type metadata accessor for _STKStickerRepresentation, &qword_2576D2BF0, &qword_2576D2BE8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2479D6224);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v14 = v12;
  swift_bridgeObjectRetain();
  sub_2479D9284(&v14, a1, (uint64_t (*)(uint64_t))sub_2479F77EC, (void (*)(_QWORD *, uint64_t))sub_2479D8724);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v14;
}

id sub_2479D2C0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), void (*a7)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;

  sub_247A1AC8C();
  v11 = sub_247A1B034();
  if (a4)
    v12 = sub_247A1B034();
  else
    v12 = 0;
  v13 = a1;
  a6(v11, v12);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  a7(0);
  v14 = (void *)sub_247A1B028();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2479D2D2C(void *a1)
{
  char *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  char *v6;
  uint64_t *v7;
  void *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v18;
  uint64_t v19[7];

  v1 = a1;
  v2 = sub_247A1ADA0();
  v3 = sub_247A1B10C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v4 = 138412290;
    v19[4] = (uint64_t)v1;
    v6 = v1;
    sub_247A1B208();
    *v5 = v1;

    _os_log_impl(&dword_2479C5000, v2, v3, "Building rep for %@", v4, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    swift_arrayDestroy();
    MEMORY[0x249588124](v5, -1, -1);
    MEMORY[0x249588124](v4, -1, -1);
  }
  else
  {

  }
  v7 = (uint64_t *)&v1[OBJC_IVAR___STKSticker_effect];
  swift_beginAccess();
  v8 = (void *)sub_2479D6808(*v7);
  v9 = (unint64_t *)&v1[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  v10 = *v9;
  if ((*v9 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v18 = v8;
    v11 = (uint64_t)sub_2479D528C(v10, (void (*)(_QWORD))type metadata accessor for Sticker.Representation, &qword_2576D2BE0, &qword_254450BB0, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2479D6224);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v12 = v8;
  }
  v19[0] = v11;
  sub_2479D4A54(v19);
  swift_bridgeObjectRelease();
  v13 = v19[0];
  v14 = v1;
  v15 = v8;
  v16 = sub_2479D63DC(v13, (unint64_t)v14, v15);
  swift_release();

  return v16;
}

uint64_t sub_2479D2FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____STKTextInputObjCStoreFacade_store + 24);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____STKTextInputObjCStoreFacade_store + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____STKTextInputObjCStoreFacade_store), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 72))(a1, v3, v4);
}

id _STKTextInputObjCStoreFacade.__deallocating_deinit()
{
  return sub_2479D3330(0, (uint64_t (*)(void))type metadata accessor for _STKTextInputObjCStoreFacade);
}

uint64_t _STKStickerRepresentationRole.keyboardPreview.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKStickerRepresentationRole_keyboardPreview);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _STKStickerRepresentationRole.stillVariant.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKStickerRepresentationRole_stillVariant);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _STKStickerRepresentationRole.animatedVariant.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKStickerRepresentationRole_animatedVariant);
  swift_bridgeObjectRetain();
  return v1;
}

id _STKStickerRepresentationRole.init()()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  objc_super v5;

  v1 = &v0[OBJC_IVAR____STKStickerRepresentationRole_keyboardPreview];
  *(_QWORD *)v1 = 0xD000000000000020;
  *((_QWORD *)v1 + 1) = 0x8000000247A1EFA0;
  v2 = &v0[OBJC_IVAR____STKStickerRepresentationRole_stillVariant];
  *(_QWORD *)v2 = 0xD00000000000001DLL;
  *((_QWORD *)v2 + 1) = 0x8000000247A1EFD0;
  v3 = &v0[OBJC_IVAR____STKStickerRepresentationRole_animatedVariant];
  *(_QWORD *)v3 = 0xD000000000000020;
  *((_QWORD *)v3 + 1) = 0x8000000247A1EFF0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for _STKStickerRepresentationRole();
  return objc_msgSendSuper2(&v5, sel_init);
}

id _STKStickerRepresentationRole.__deallocating_deinit(uint64_t a1)
{
  return sub_2479D3330(a1, type metadata accessor for _STKStickerRepresentationRole);
}

id sub_2479D3330(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t _STKSticker.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2479D3F58(&OBJC_IVAR____STKSticker_identifier, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t _STKSticker.representations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _STKSticker.name.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKSticker_name);
}

uint64_t _STKSticker.effectType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____STKSticker_effectType);
}

uint64_t _STKSticker.externalURI.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKSticker_externalURI);
}

uint64_t _STKSticker.accessibilityName.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKSticker_accessibilityName);
}

uint64_t _STKSticker.metadata.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKSticker_metadata);
  sub_2479D935C(v1, *(_QWORD *)(v0 + OBJC_IVAR____STKSticker_metadata + 8));
  return v1;
}

void *_STKSticker.attributionInfo.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____STKSticker_attributionInfo);
  v2 = v1;
  return v1;
}

uint64_t _STKSticker.searchText.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKSticker_searchText);
}

id sub_2479D35C8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;

  if (*(_QWORD *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t _STKSticker.sanitizedPrompt.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKSticker_sanitizedPrompt);
}

uint64_t sub_2479D362C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

id sub_2479D3660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char *v16;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  id v31;
  objc_super v36;

  v22 = &v16[OBJC_IVAR____STKSticker_identifier];
  v23 = sub_247A1AC8C();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  *(_QWORD *)&v16[OBJC_IVAR____STKSticker_representations] = a2;
  v25 = &v16[OBJC_IVAR____STKSticker_name];
  *(_QWORD *)v25 = a3;
  *((_QWORD *)v25 + 1) = a4;
  *(_QWORD *)&v16[OBJC_IVAR____STKSticker_effectType] = a5;
  v26 = &v16[OBJC_IVAR____STKSticker_externalURI];
  *(_QWORD *)v26 = a6;
  *((_QWORD *)v26 + 1) = a7;
  v27 = &v16[OBJC_IVAR____STKSticker_accessibilityName];
  *(_QWORD *)v27 = a8;
  *((_QWORD *)v27 + 1) = a9;
  v28 = &v16[OBJC_IVAR____STKSticker_metadata];
  *(_QWORD *)v28 = a10;
  *((_QWORD *)v28 + 1) = a11;
  *(_QWORD *)&v16[OBJC_IVAR____STKSticker_attributionInfo] = a12;
  v29 = &v16[OBJC_IVAR____STKSticker_searchText];
  *(_QWORD *)v29 = a13;
  *((_QWORD *)v29 + 1) = a14;
  v30 = &v16[OBJC_IVAR____STKSticker_sanitizedPrompt];
  *(_QWORD *)v30 = a15;
  *((_QWORD *)v30 + 1) = a16;
  v36.receiver = v16;
  v36.super_class = (Class)type metadata accessor for _STKSticker(0);
  v31 = objc_msgSendSuper2(&v36, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v31;
}

uint64_t sub_2479D3814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_247A1C840;
  strcpy((char *)v10, "identifier=");
  HIDWORD(v10[1]) = -352321536;
  sub_247A1AC8C();
  sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v10[0];
  *(_QWORD *)(v1 + 40) = v10[1];
  v10[1] = 0xE500000000000000;
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = 0x3D656D616ELL;
  *(_QWORD *)(v1 + 56) = v10[1];
  strcpy((char *)v10, "effectType=");
  HIDWORD(v10[1]) = -352321536;
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  v2 = v10[1];
  *(_QWORD *)(v1 + 64) = v10[0];
  *(_QWORD *)(v1 + 72) = v2;
  strcpy((char *)v10, "externalURI=");
  BYTE5(v10[1]) = 0;
  HIWORD(v10[1]) = -5120;
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  v3 = v10[1];
  *(_QWORD *)(v1 + 80) = v10[0];
  *(_QWORD *)(v1 + 88) = v3;
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  *(_QWORD *)(v1 + 96) = 0xD000000000000012;
  *(_QWORD *)(v1 + 104) = 0x8000000247A1F020;
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  v10[0] = 0xD000000000000010;
  v10[1] = 0x8000000247A1F040;
  v4 = *(void **)(v0 + OBJC_IVAR____STKSticker_attributionInfo);
  if (v4)
  {
    v5 = objc_msgSend(v4, sel_description);
    sub_247A1AEE4();

  }
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  v6 = v10[1];
  *(_QWORD *)(v1 + 112) = v10[0];
  *(_QWORD *)(v1 + 120) = v6;
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for _STKStickerRepresentation(0);
  v8 = swift_bridgeObjectRetain();
  MEMORY[0x249587644](v8, v7);
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 128) = 0xD000000000000010;
  *(_QWORD *)(v1 + 136) = 0x8000000247A1F060;
  swift_getObjectType();
  sub_247A1B5BC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B98);
  sub_2479D96F4((unint64_t *)&qword_2576D2D50, &qword_2576D2B98, MEMORY[0x24BEE12B0]);
  sub_247A1AE9C();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  return 60;
}

id _STKSticker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void _STKSticker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _STKSticker.__deallocating_deinit()
{
  return sub_2479D3330(0, (uint64_t (*)(void))type metadata accessor for _STKSticker);
}

uint64_t _STKStickerRepresentation.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2479D3F58(&OBJC_IVAR____STKStickerRepresentation_identifier, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t _STKStickerRepresentation.stickerIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2479D3F58(&OBJC_IVAR____STKStickerRepresentation_stickerIdentifier, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t _STKStickerRepresentation.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKStickerRepresentation_data);
  sub_2479D9370(v1, *(_QWORD *)(v0 + OBJC_IVAR____STKStickerRepresentation_data + 8));
  return v1;
}

uint64_t _STKStickerRepresentation.uti.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2479D3F58(&OBJC_IVAR____STKStickerRepresentation_uti, (uint64_t (*)(_QWORD))MEMORY[0x24BEE63B8], a1);
}

uint64_t sub_2479D3F58@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *a1;
  v6 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

id sub_2479D3FA4()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _STKStickerRepresentation.role.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKStickerRepresentation_role);
  swift_bridgeObjectRetain();
  return v1;
}

double _STKStickerRepresentation.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____STKStickerRepresentation_size);
}

id _STKStickerRepresentation.effect.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____STKStickerRepresentation_effect);
}

id sub_2479D406C(uint64_t a1)
{
  return sub_2479D4700(a1, type metadata accessor for _STKStickerRepresentationRole, &qword_2576D2B48);
}

id static _STKStickerRepresentation.roles.getter()
{
  return sub_2479D45F4(&qword_2576D2888, (id *)&qword_2576D2B48);
}

void sub_2479D40E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_247A1C850;
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = 0x3D656C6F72;
  *(_QWORD *)(v2 + 40) = 0xE500000000000000;
  sub_247A1AD04();
  sub_2479CDA10(&qword_2576D2F70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE6408]);
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = 1030321269;
  *(_QWORD *)(v2 + 56) = 0xE400000000000000;
  sub_247A1AC8C();
  sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = 0x3D72656B63697473;
  *(_QWORD *)(v2 + 72) = 0xE800000000000000;
  v3 = *(id *)(v0 + OBJC_IVAR____STKStickerRepresentation_effect);
  v4 = objc_msgSend(v3, sel_description);
  sub_247A1AEE4();

  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = 0x3D746365666665;
  *(_QWORD *)(v2 + 88) = 0xE700000000000000;
  __asm { BR              X12 }
}

uint64_t sub_2479D4318()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v4;
  uint64_t v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_stringFromByteCount_countStyle_, BYTE6(v0), 0);
  sub_247A1AEE4();

  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = v5;
  swift_getObjectType();
  sub_247A1B5BC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B98);
  sub_2479D96F4((unint64_t *)&qword_2576D2D50, &qword_2576D2B98, MEMORY[0x24BEE12B0]);
  sub_247A1AE9C();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  return 60;
}

void _STKStickerRepresentation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _STKStickerRepresentation.__deallocating_deinit()
{
  return sub_2479D3330(0, (uint64_t (*)(void))type metadata accessor for _STKStickerRepresentation);
}

id sub_2479D45C4(uint64_t a1)
{
  return sub_2479D4700(a1, type metadata accessor for _STKStickerEffect, &qword_2576D2B50);
}

id static _STKStickerEffect.doNotUseEffectView.getter()
{
  return sub_2479D45F4(&qword_2576D2890, (id *)&qword_2576D2B50);
}

id sub_2479D45F4(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id sub_2479D462C(uint64_t a1)
{
  return sub_2479D4700(a1, type metadata accessor for _STKStickerEffect, &qword_2576D2B58);
}

id static _STKStickerEffect.none.getter()
{
  return sub_2479D45F4(&qword_2576D2898, (id *)&qword_2576D2B58);
}

id sub_2479D465C(uint64_t a1)
{
  return sub_2479D4700(a1, type metadata accessor for _STKStickerEffect, &qword_2576D2B60);
}

id static _STKStickerEffect.stroke.getter()
{
  return sub_2479D45F4(&qword_2576D28A0, (id *)&qword_2576D2B60);
}

id sub_2479D468C(uint64_t a1)
{
  return sub_2479D4700(a1, type metadata accessor for _STKStickerEffect, &qword_2576D2B68);
}

id static _STKStickerEffect.comic.getter()
{
  return sub_2479D45F4(&qword_2576D28A8, (id *)&qword_2576D2B68);
}

id sub_2479D46BC(uint64_t a1)
{
  return sub_2479D4700(a1, type metadata accessor for _STKStickerEffect, &qword_2576D2B70);
}

id static _STKStickerEffect.puffy.getter()
{
  return sub_2479D45F4(&qword_2576D28B0, (id *)&qword_2576D2B70);
}

id sub_2479D46EC(uint64_t a1)
{
  return sub_2479D4700(a1, type metadata accessor for _STKStickerEffect, &qword_2576D2B78);
}

id sub_2479D4700(uint64_t a1, uint64_t (*a2)(void), _QWORD *a3)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)a2()), sel_init);
  *a3 = result;
  return result;
}

id static _STKStickerEffect.iridescent.getter()
{
  return sub_2479D45F4(&qword_2576D28B8, (id *)&qword_2576D2B78);
}

id sub_2479D475C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2479D47B4()
{
  void *v0;
  uint64_t v1;
  id v2;
  objc_super v4;

  sub_2479D032C(0, (unint64_t *)&unk_2576D2D60);
  if (qword_2576D2898 != -1)
    swift_once();
  if ((sub_247A1B1CC() & 1) != 0)
    return 0x656E6F6E2ELL;
  if (qword_2576D28A0 != -1)
    swift_once();
  if ((sub_247A1B1CC() & 1) != 0)
    return 0x656B6F7274732ELL;
  if (qword_2576D28A8 != -1)
    swift_once();
  if ((sub_247A1B1CC() & 1) != 0)
    return 0x63696D6F632ELL;
  if (qword_2576D28B0 != -1)
    swift_once();
  if ((sub_247A1B1CC() & 1) != 0)
    return 0x79666675702ELL;
  if (qword_2576D28B8 != -1)
    swift_once();
  if ((sub_247A1B1CC() & 1) != 0)
    return 0x637365646972692ELL;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for _STKStickerEffect();
  v2 = objc_msgSendSuper2(&v4, sel_description);
  v1 = sub_247A1AEE4();

  return v1;
}

id _STKStickerEffect.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _STKStickerEffect();
  return objc_msgSendSuper2(&v2, sel_init);
}

id _STKStickerEffect.__deallocating_deinit(uint64_t a1)
{
  return sub_2479D3330(a1, type metadata accessor for _STKStickerEffect);
}

uint64_t sub_2479D4A54(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  _QWORD v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_2479F77EC();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2479D53B0(v6);
  return sub_247A1B334();
}

uint64_t type metadata accessor for _STKTextInputObjCStoreFacade(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_2544509F8);
}

uint64_t sub_2479D4AE0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_2479E8A00(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_247A1AC2C();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479D4C48(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x249587914](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_2479D6014(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for Sticker, &qword_2576D2BD8, &qword_254450BB8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2479D6224);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_247A1B04C();
  }
  __break(1u);
  return result;
}

uint64_t sub_2479D4E20(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x249587914](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_2479D6014(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for _STKStickerRepresentation, &qword_2576D2BF0, &qword_2576D2BE8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2479D6224);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_247A1B04C();
  }
  __break(1u);
  return result;
}

unint64_t sub_2479D4FF8()
{
  unint64_t result;

  result = qword_254450900;
  if (!qword_254450900)
  {
    result = MEMORY[0x249588058](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254450900);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24958804C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_2479D5080(id a1)
{
  if ((unint64_t)a1 >= 3)

}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

id sub_2479D50B4(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

uint64_t sub_2479D50C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_2479D50DC(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Sticker);
}

uint64_t sub_2479D50D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_2479D50DC(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Sticker.Representation);
}

uint64_t sub_2479D50DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6)
      return MEMORY[0x24BEE4AF8];
    v10 = v6;
    if (v6 <= 0)
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0)
          goto LABEL_19;
        v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8)
          goto LABEL_19;
        a5(0);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

_QWORD *sub_2479D5268(unint64_t a1)
{
  return sub_2479D528C(a1, (void (*)(_QWORD))type metadata accessor for ManagedRepresentation, &qword_2576D2BD0, &qword_2576D2BC8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2479D6224);
}

_QWORD *sub_2479D528C(unint64_t a1, void (*a2)(_QWORD), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v10 <= 0)
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v10;
      v11[3] = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_2479D6014((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))v10)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v10 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (!v10)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v11;
}

uint64_t sub_2479D53B0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _BYTE *v16;
  BOOL v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  int v25;
  unsigned __int8 *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _BYTE *v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  _BYTE *v95;
  char *v96;
  BOOL v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  _BYTE *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *__dst;
  char *__dsta;
  char *v146;
  char *v147;
  char *v148;
  int64_t v149;
  int64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v1 = a1;
  v2 = a1[1];
  result = sub_247A1B4C0();
  v138 = v2;
  if (result >= v2)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v2 < 2)
        return result;
      v9 = (_QWORD *)*v1;
      v10 = *v1 + 8;
      v11 = -1;
      v12 = 1;
      while (1)
      {
        v13 = v9[v12];
        v14 = (uint64_t *)v10;
        v15 = v11;
        do
        {
          v16 = (_BYTE *)(v13 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
          result = swift_beginAccess();
          if (*v16 != 1)
            break;
          if (!v9)
            goto LABEL_254;
          v13 = *v14;
          *v14 = *(v14 - 1);
          *--v14 = v13;
          v17 = __CFADD__(v15++, 1);
        }
        while (!v17);
        ++v12;
        --v11;
        v10 += 8;
        if (v12 == v138)
          return result;
      }
    }
LABEL_253:
    __break(1u);
LABEL_254:
    __break(1u);
LABEL_255:
    __break(1u);
LABEL_256:
    __break(1u);
LABEL_257:
    __break(1u);
    goto LABEL_258;
  }
  if (v2 >= 0)
    v4 = v2;
  else
    v4 = v2 + 1;
  if (v2 < -1)
    goto LABEL_259;
  v5 = result;
  if (v2 < 2)
  {
    v18 = (char *)MEMORY[0x24BEE4AF8];
    v155 = MEMORY[0x24BEE4AF8];
    v8 = (MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32;
    if (v2 != 1)
    {
      v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (v22 < 2)
        goto LABEL_226;
      goto LABEL_158;
    }
  }
  else
  {
    v6 = v4 >> 1;
    type metadata accessor for Sticker.Representation();
    v7 = sub_247A1B064();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v8 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
    v155 = v7;
  }
  v136 = v5;
  v19 = 0;
  v135 = v1;
  v20 = (char *)*v1;
  v139 = *v1 - 8;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v143 = (char *)*v1;
  __dst = (char *)v8;
  v21 = v2;
  do
  {
    v23 = v19 + 1;
    if (v19 + 1 < v21)
    {
      v24 = (unsigned __int8 *)(*(_QWORD *)&v20[8 * v23] + OBJC_IVAR___STKStickerRepresentation_isPreferred);
      swift_beginAccess();
      v25 = *v24;
      v23 = v19 + 2;
      if (v19 + 2 < v21)
      {
        while (1)
        {
          v26 = (unsigned __int8 *)(*(_QWORD *)&v20[8 * v23] + OBJC_IVAR___STKStickerRepresentation_isPreferred);
          swift_beginAccess();
          if (v25 != *v26)
            break;
          if (v21 == ++v23)
          {
            v23 = v21;
            break;
          }
        }
      }
      if (v25)
      {
        if (v23 < v19)
          goto LABEL_249;
        if (v19 < v23)
        {
          v27 = (uint64_t *)(v139 + 8 * v23);
          v28 = v23;
          v29 = v19;
          v30 = (uint64_t *)&v20[8 * v19];
          do
          {
            if (v29 != --v28)
            {
              if (!v20)
                goto LABEL_256;
              v31 = *v30;
              *v30 = *v27;
              *v27 = v31;
            }
            ++v29;
            --v27;
            ++v30;
          }
          while (v29 < v28);
        }
      }
    }
    if (v23 < v21)
    {
      if (__OFSUB__(v23, v19))
        goto LABEL_248;
      if (v23 - v19 < v136)
      {
        if (__OFADD__(v19, v136))
          goto LABEL_250;
        if (v19 + v136 >= v21)
          v32 = v21;
        else
          v32 = v19 + v136;
        if (v32 < v19)
          goto LABEL_251;
        if (v23 != v32)
        {
          v33 = &v20[8 * v23];
          do
          {
            v34 = *(_QWORD *)&v20[8 * v23];
            v35 = (uint64_t *)v33;
            v36 = v19;
            do
            {
              v37 = (_BYTE *)(v34 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
              swift_beginAccess();
              if (*v37 != 1)
                break;
              if (!v20)
                goto LABEL_252;
              v34 = *v35;
              *v35 = *(v35 - 1);
              *(v35 - 1) = v34;
              ++v36;
              --v35;
            }
            while (v23 != v36);
            ++v23;
            v33 += 8;
          }
          while (v23 != v32);
          v23 = v32;
          v8 = (unint64_t)__dst;
        }
      }
    }
    if (v23 < v19)
      goto LABEL_243;
    v137 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_2479F3588(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v39 = *((_QWORD *)v18 + 2);
    v38 = *((_QWORD *)v18 + 3);
    v22 = v39 + 1;
    if (v39 >= v38 >> 1)
      v18 = sub_2479F3588((char *)(v38 > 1), v39 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v22;
    v40 = v18 + 32;
    v41 = &v18[16 * v39 + 32];
    *(_QWORD *)v41 = v19;
    *((_QWORD *)v41 + 1) = v137;
    if (v39)
    {
      v140 = v18 + 32;
      v141 = v18;
      while (1)
      {
        v42 = v22 - 1;
        if (v22 >= 4)
        {
          v47 = &v40[16 * v22];
          v48 = *((_QWORD *)v47 - 8);
          v49 = *((_QWORD *)v47 - 7);
          v53 = __OFSUB__(v49, v48);
          v50 = v49 - v48;
          if (v53)
            goto LABEL_232;
          v52 = *((_QWORD *)v47 - 6);
          v51 = *((_QWORD *)v47 - 5);
          v53 = __OFSUB__(v51, v52);
          v45 = v51 - v52;
          v46 = v53;
          if (v53)
            goto LABEL_233;
          v54 = v22 - 2;
          v55 = &v40[16 * v22 - 32];
          v57 = *(_QWORD *)v55;
          v56 = *((_QWORD *)v55 + 1);
          v53 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v53)
            goto LABEL_235;
          v53 = __OFADD__(v45, v58);
          v59 = v45 + v58;
          if (v53)
            goto LABEL_238;
          if (v59 >= v50)
          {
            v77 = &v40[16 * v42];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v53 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v53)
              goto LABEL_242;
            v70 = v45 < v80;
            goto LABEL_90;
          }
        }
        else
        {
          if (v22 != 3)
          {
            v71 = *((_QWORD *)v18 + 4);
            v72 = *((_QWORD *)v18 + 5);
            v53 = __OFSUB__(v72, v71);
            v64 = v72 - v71;
            v65 = v53;
            goto LABEL_84;
          }
          v44 = *((_QWORD *)v18 + 4);
          v43 = *((_QWORD *)v18 + 5);
          v53 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          v46 = v53;
        }
        if ((v46 & 1) != 0)
          goto LABEL_234;
        v54 = v22 - 2;
        v60 = &v40[16 * v22 - 32];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v63 = __OFSUB__(v61, v62);
        v64 = v61 - v62;
        v65 = v63;
        if (v63)
          goto LABEL_237;
        v66 = &v40[16 * v42];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v53 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v53)
          goto LABEL_240;
        if (__OFADD__(v64, v69))
          goto LABEL_241;
        if (v64 + v69 >= v45)
        {
          v70 = v45 < v69;
LABEL_90:
          if (v70)
            v42 = v54;
          goto LABEL_92;
        }
LABEL_84:
        if ((v65 & 1) != 0)
          goto LABEL_236;
        v73 = &v40[16 * v42];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v53 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v53)
          goto LABEL_239;
        if (v76 < v64)
          goto LABEL_21;
LABEL_92:
        v81 = v42 - 1;
        if (v42 - 1 >= v22)
        {
          __break(1u);
LABEL_229:
          __break(1u);
LABEL_230:
          __break(1u);
LABEL_231:
          __break(1u);
LABEL_232:
          __break(1u);
LABEL_233:
          __break(1u);
LABEL_234:
          __break(1u);
LABEL_235:
          __break(1u);
LABEL_236:
          __break(1u);
LABEL_237:
          __break(1u);
LABEL_238:
          __break(1u);
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
LABEL_244:
          __break(1u);
LABEL_245:
          __break(1u);
LABEL_246:
          __break(1u);
LABEL_247:
          __break(1u);
LABEL_248:
          __break(1u);
LABEL_249:
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
          goto LABEL_253;
        }
        if (!v20)
          goto LABEL_255;
        v148 = &v40[16 * v81];
        v149 = v42;
        v82 = &v40[16 * v42];
        v83 = *(_QWORD *)v82;
        v146 = v82;
        v151 = *(_QWORD *)v148;
        v153 = *((_QWORD *)v82 + 1);
        v84 = &v20[8 * *(_QWORD *)v148];
        v85 = &v20[8 * *(_QWORD *)v82];
        v86 = (unint64_t)&v20[8 * v153];
        v87 = v85 - v84;
        v88 = v85 - v84 + 7;
        if (v85 - v84 >= 0)
          v88 = v85 - v84;
        v89 = v88 >> 3;
        v90 = v86 - (_QWORD)v85;
        v91 = v86 - (_QWORD)v85 + 7;
        if ((uint64_t)(v86 - (_QWORD)v85) >= 0)
          v91 = v86 - (_QWORD)v85;
        v92 = v91 >> 3;
        if (v89 >= v91 >> 3)
        {
          if (v90 < -7)
            goto LABEL_258;
          if ((unint64_t)__dst >= v86 || __dst != v85)
            memmove(__dst, v85, 8 * v92);
          v93 = &__dst[8 * v92];
          v20 = v143;
          if (v151 >= v83 || v90 < 8)
          {
            v8 = (unint64_t)__dst;
            v94 = __dst;
            goto LABEL_144;
          }
          v99 = (char *)(v139 + 8 * v153);
          v8 = (unint64_t)__dst;
          while (2)
          {
            v100 = v99 + 8;
            v101 = v93 - 8;
            v102 = (_BYTE *)(*((_QWORD *)v93 - 1) + OBJC_IVAR___STKStickerRepresentation_isPreferred);
            swift_beginAccess();
            if (*v102 == 1)
            {
              v101 = v85 - 8;
              if (v100 == v85)
              {
                v17 = v99 >= v85;
                v85 -= 8;
                if (!v17)
                  goto LABEL_137;
              }
              else
              {
                v85 -= 8;
              }
            }
            else if (v100 == v93)
            {
              v17 = v99 >= v93;
              v93 -= 8;
              if (!v17)
                goto LABEL_137;
            }
            else
            {
              v93 -= 8;
            }
            *(_QWORD *)v99 = *(_QWORD *)v101;
LABEL_137:
            if (__dst >= v93 || (v99 -= 8, v84 >= v85))
            {
              v94 = __dst;
              goto LABEL_142;
            }
            continue;
          }
        }
        if (v87 < -7)
          goto LABEL_258;
        v8 = (unint64_t)__dst;
        if (__dst != v84 || __dst >= v85)
          memmove(__dst, v84, 8 * v89);
        v93 = &__dst[8 * v89];
        if (v83 < v153 && v87 >= 8)
        {
          v94 = __dst;
          while (1)
          {
            v95 = (_BYTE *)(*(_QWORD *)v85 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
            swift_beginAccess();
            if (*v95 != 1)
              break;
            v96 = v85;
            v97 = v84 == v85;
            v85 += 8;
            if (!v97)
              goto LABEL_114;
LABEL_115:
            v84 += 8;
            if (v94 >= v93 || (unint64_t)v85 >= v86)
              goto LABEL_141;
          }
          v98 = v94 + 8;
          v96 = v94;
          if (v84 == v94)
          {
            v94 += 8;
            if (v84 < v98)
              goto LABEL_115;
          }
          else
          {
            v94 += 8;
          }
LABEL_114:
          *(_QWORD *)v84 = *(_QWORD *)v96;
          goto LABEL_115;
        }
        v94 = __dst;
LABEL_141:
        v85 = v84;
LABEL_142:
        v20 = v143;
LABEL_144:
        v103 = v93 - v94 + 7;
        if (v93 - v94 >= 0)
          v103 = v93 - v94;
        v18 = v141;
        if (v93 - v94 <= -8)
          goto LABEL_258;
        v104 = v103 >> 3;
        v40 = v140;
        if (v85 != v94 || v85 >= &v94[8 * v104])
          memmove(v85, v94, 8 * v104);
        if (v153 < v151)
          goto LABEL_229;
        if (v149 > *((_QWORD *)v141 + 2))
          goto LABEL_230;
        *(_QWORD *)v148 = v151;
        *(_QWORD *)&v140[16 * v81 + 8] = v153;
        v105 = *((_QWORD *)v141 + 2);
        if (v149 >= (uint64_t)v105)
          goto LABEL_231;
        v22 = v105 - 1;
        memmove(v146, v146 + 16, 16 * (v105 - 1 - v149));
        *((_QWORD *)v141 + 2) = v105 - 1;
        if (v105 <= 2)
          goto LABEL_21;
      }
    }
    v22 = 1;
LABEL_21:
    v19 = v137;
    v21 = v138;
  }
  while (v137 < v138);
  v1 = v135;
  if (v22 < 2)
  {
LABEL_226:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v155 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_247A1B04C();
    return swift_bridgeObjectRelease();
  }
LABEL_158:
  v106 = (char *)*v1;
  __dsta = (char *)(*v1 - 8);
  v147 = (char *)*v1;
LABEL_159:
  if (v22 < 2)
    goto LABEL_244;
  if (!v106)
    goto LABEL_257;
  v107 = (char *)v8;
  v142 = v18;
  v150 = v22 - 2;
  v108 = *(_QWORD *)&v18[16 * v22];
  v109 = *(_QWORD *)&v18[16 * v22 + 16];
  v152 = *(_QWORD *)&v18[16 * v22 + 24];
  v154 = v108;
  v110 = &v106[8 * v108];
  v111 = &v106[8 * v109];
  v112 = (unint64_t)&v106[8 * v152];
  v113 = v111 - v110;
  v114 = v111 - v110 + 7;
  if (v111 - v110 >= 0)
    v114 = v111 - v110;
  v115 = v114 >> 3;
  v116 = v112 - (_QWORD)v111;
  v117 = v112 - (_QWORD)v111 + 7;
  if ((uint64_t)(v112 - (_QWORD)v111) >= 0)
    v117 = v112 - (_QWORD)v111;
  v118 = v117 >> 3;
  if (v115 >= v117 >> 3)
  {
    if (v116 < -7)
      goto LABEL_258;
    if ((unint64_t)v107 >= v112 || v107 != v111)
    {
      v126 = v109;
      memmove(v107, &v106[8 * v109], 8 * v118);
      v109 = v126;
    }
    v120 = &v107[8 * v118];
    v18 = v142;
    if (v154 >= v109 || v116 < 8)
    {
      v8 = (unint64_t)v107;
      v122 = v107;
      goto LABEL_213;
    }
    v127 = &__dsta[8 * v152];
    while (1)
    {
      v128 = v127 + 8;
      v129 = v120 - 8;
      v130 = (_BYTE *)(*((_QWORD *)v120 - 1) + OBJC_IVAR___STKStickerRepresentation_isPreferred);
      swift_beginAccess();
      if (*v130 == 1)
      {
        v129 = v111 - 8;
        if (v128 != v111)
        {
          v111 -= 8;
LABEL_203:
          v8 = (unint64_t)v107;
LABEL_204:
          *(_QWORD *)v127 = *(_QWORD *)v129;
          goto LABEL_205;
        }
        v17 = v127 >= v111;
        v111 -= 8;
        v8 = (unint64_t)v107;
        if (v17)
          goto LABEL_204;
      }
      else
      {
        if (v128 != v120)
        {
          v120 -= 8;
          goto LABEL_203;
        }
        v17 = v127 >= v120;
        v120 -= 8;
        v8 = (unint64_t)v107;
        if (v17)
          goto LABEL_204;
      }
LABEL_205:
      if (v8 >= (unint64_t)v120)
      {
        v122 = (char *)v8;
LABEL_212:
        v18 = v142;
LABEL_213:
        v121 = v152;
LABEL_214:
        v131 = v120 - v122 + 7;
        if (v120 - v122 >= 0)
          v131 = v120 - v122;
        if (v120 - v122 <= -8)
          goto LABEL_258;
        v132 = v131 >> 3;
        if (v111 != v122 || v111 >= &v122[8 * v132])
          memmove(v111, v122, 8 * v132);
        if (v121 < v154)
          goto LABEL_245;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_2479F372C((uint64_t)v18);
        if (v150 >= *((_QWORD *)v18 + 2))
          goto LABEL_246;
        v133 = &v18[16 * v150 + 32];
        *(_QWORD *)v133 = v154;
        *((_QWORD *)v133 + 1) = v121;
        v134 = *((_QWORD *)v18 + 2);
        if (v22 > v134)
          goto LABEL_247;
        memmove(&v18[16 * v22 + 16], &v18[16 * v22 + 32], 16 * (v134 - v22));
        *((_QWORD *)v18 + 2) = v134 - 1;
        v22 = v134 - 1;
        v106 = v147;
        if (v134 <= 2)
          goto LABEL_226;
        goto LABEL_159;
      }
      v127 -= 8;
      if (v110 >= v111)
      {
        v8 = (unint64_t)v107;
        v122 = v107;
        goto LABEL_212;
      }
    }
  }
  if (v113 >= -7)
  {
    v8 = (unint64_t)v107;
    if (v107 != v110 || v107 >= v111)
    {
      v119 = v109;
      memmove(v107, &v106[8 * v108], 8 * v115);
      v109 = v119;
    }
    v120 = &v107[8 * v115];
    v121 = v152;
    if (v109 >= v152 || v113 < 8)
    {
      v122 = (char *)v8;
LABEL_209:
      v111 = v110;
      v18 = v142;
      goto LABEL_214;
    }
    v122 = (char *)v8;
    while (2)
    {
      v123 = (_BYTE *)(*(_QWORD *)v111 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
      swift_beginAccess();
      if (*v123 == 1)
      {
        v124 = v111;
        v97 = v110 == v111;
        v111 += 8;
        if (!v97)
          goto LABEL_181;
      }
      else
      {
        v125 = v122 + 8;
        v124 = v122;
        if (v110 != v122)
        {
          v122 += 8;
          goto LABEL_181;
        }
        v122 += 8;
        if (v110 >= v125)
LABEL_181:
          *(_QWORD *)v110 = *(_QWORD *)v124;
      }
      v110 += 8;
      if (v122 >= v120 || (unint64_t)v111 >= v112)
        goto LABEL_209;
      continue;
    }
  }
LABEL_258:
  sub_247A1B3B8();
  __break(1u);
LABEL_259:
  result = sub_247A1B370();
  __break(1u);
  return result;
}

uint64_t sub_2479D6014(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  id *v23;
  id v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_2479D96F4(a5, a6, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t (*sub_2479D6224(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2479D62FC(v6, a2, a3);
  return sub_2479D6278;
}

uint64_t (*sub_2479D627C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2479D6368(v6, a2, a3);
  return sub_2479D6278;
}

void sub_2479D62D0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_2479D62FC(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x249587908](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2479D97F8;
  }
  __break(1u);
  return result;
}

void (*sub_2479D6368(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x249587908](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2479D63D4;
  }
  __break(1u);
  return result;
}

void sub_2479D63D4(id *a1)
{

}

uint64_t sub_2479D63DC(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void *v32;
  char *v33;
  id v34;
  void (*v35)(char *, uint64_t);
  _QWORD v36[2];
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  objc_super v54;
  uint64_t v55;

  v4 = v3;
  v43 = a3;
  v42 = sub_247A1AD04();
  v51 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v50 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_247A1AC8C();
  v49 = *(_QWORD *)(v41 - 8);
  v8 = MEMORY[0x24BDAC7A8](v41);
  v53 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)v36 - v10;
  if (a1 >> 62)
    goto LABEL_14;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v11)
      break;
    v55 = MEMORY[0x24BEE4AF8];
    result = sub_247A1B340();
    if (v11 < 0)
    {
      __break(1u);
      return result;
    }
    v36[1] = v4;
    v4 = 0;
    v38 = a1 & 0xC000000000000001;
    v37 = a2 + OBJC_IVAR___STKSticker_identifier;
    v40 = a1;
    v39 = v11;
    while (v11 != v4)
    {
      if (v38)
        v13 = (char *)MEMORY[0x249587908](v4, a1);
      else
        v13 = (char *)*(id *)(a1 + 8 * v4 + 32);
      v48 = v4 + 1;
      v14 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
      v15 = v13;
      v16 = v41;
      v14(v52, &v13[OBJC_IVAR___STKStickerRepresentation_identifier], v41);
      v14(v53, (char *)v37, v16);
      v17 = (uint64_t *)&v15[OBJC_IVAR___STKStickerRepresentation_data];
      swift_beginAccess();
      v18 = *v17;
      v45 = v17[1];
      v46 = v18;
      v19 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
      v20 = v42;
      v19(v50, &v15[OBJC_IVAR___STKStickerRepresentation_uti], v42);
      v21 = &v15[OBJC_IVAR___STKStickerRepresentation_role];
      v22 = v15;
      v47 = v15;
      swift_beginAccess();
      v23 = *((_QWORD *)v21 + 1);
      v44 = *(_QWORD *)v21;
      v24 = *(_QWORD *)&v22[OBJC_IVAR___STKStickerRepresentation_size];
      v25 = *(_QWORD *)&v22[OBJC_IVAR___STKStickerRepresentation_size + 8];
      v26 = (objc_class *)type metadata accessor for _STKStickerRepresentation(0);
      v27 = (char *)objc_allocWithZone(v26);
      v14(&v27[OBJC_IVAR____STKStickerRepresentation_identifier], v52, v16);
      v14(&v27[OBJC_IVAR____STKStickerRepresentation_stickerIdentifier], v53, v16);
      v28 = (uint64_t *)&v27[OBJC_IVAR____STKStickerRepresentation_data];
      a2 = v45;
      v29 = v46;
      *v28 = v46;
      v28[1] = a2;
      v30 = v50;
      v19(&v27[OBJC_IVAR____STKStickerRepresentation_uti], v50, v20);
      v31 = &v27[OBJC_IVAR____STKStickerRepresentation_role];
      v32 = v43;
      *(_QWORD *)v31 = v44;
      *((_QWORD *)v31 + 1) = v23;
      v33 = &v27[OBJC_IVAR____STKStickerRepresentation_size];
      *(_QWORD *)v33 = v24;
      *((_QWORD *)v33 + 1) = v25;
      *(_QWORD *)&v27[OBJC_IVAR____STKStickerRepresentation_effect] = v32;
      sub_2479D9370(v29, a2);
      v54.receiver = v27;
      v54.super_class = v26;
      swift_bridgeObjectRetain();
      v34 = v32;
      objc_msgSendSuper2(&v54, sel_init);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v20);
      v35 = *(void (**)(char *, uint64_t))(v49 + 8);
      v35(v53, v16);
      v35(v52, v16);

      sub_247A1B328();
      sub_247A1B34C();
      v4 = v48;
      sub_247A1B358();
      sub_247A1B334();
      v11 = v39;
      a1 = v40;
      if (v39 == v4)
        return v55;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v11 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2479D6808(uint64_t a1)
{
  uint64_t *v1;
  uint64_t result;

  switch(a1)
  {
    case -1:
      if (qword_2576D2890 != -1)
        swift_once();
      v1 = &qword_2576D2B50;
      goto LABEL_20;
    case 0:
      if (qword_2576D2898 != -1)
        swift_once();
      v1 = &qword_2576D2B58;
      goto LABEL_20;
    case 1:
      if (qword_2576D28A0 != -1)
        swift_once();
      v1 = &qword_2576D2B60;
      goto LABEL_20;
    case 2:
      if (qword_2576D28A8 != -1)
        swift_once();
      v1 = &qword_2576D2B68;
      goto LABEL_20;
    case 3:
      if (qword_2576D28B0 != -1)
        swift_once();
      v1 = &qword_2576D2B70;
      goto LABEL_20;
    case 4:
      if (qword_2576D28B8 != -1)
        swift_once();
      v1 = &qword_2576D2B78;
LABEL_20:
      result = *v1;
      break;
    default:
      result = sub_247A1B4FC();
      __break(1u);
      break;
  }
  return result;
}

id sub_2479D69A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id result;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  __int128 v29;
  char v30;
  uint64_t v31;
  char v32;
  _BYTE v33[40];
  void *v34[5];
  char v35;
  void *v36;
  void *v37;
  uint64_t v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  char v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[152];
  unint64_t v47;
  uint64_t v48;

  v2 = v1;
  v48 = MEMORY[0x24BEE4AF8];
  sub_247A1B340();
  sub_2479D9734(a1, (uint64_t)v34);
  v4 = v44;
  v27 = v45;
  v5 = __swift_project_boxed_opaque_existential_1(v43, v44);
  v6 = sub_2479D9770((uint64_t)v34, (uint64_t)v33);
  v7 = v36;
  v8 = v37;
  LOBYTE(v28[0]) = v35;
  v28[1] = v36;
  v28[2] = v37;
  v28[3] = v38;
  v29 = v39;
  v30 = v40;
  v31 = v41;
  v32 = v42;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t))(v11 + 16))(v10, v5, v4);
  v12 = v7;
  sub_2479D50B4(v8);
  swift_bridgeObjectRetain();
  sub_247A0930C((uint64_t)v33, (uint64_t)v10, v4, (uint64_t)v46);
  for (result = (id)sub_2479D8018((uint64_t)v34); ; result = (id)sub_247A1B334())
  {
    v14 = v47;
    v15 = v47 >> 62;
    if (v47 >> 62)
      break;
    if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_12:
    result = (id)sub_247A095C4();
    v21 = v47;
    v22 = v47 >> 62;
    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v23)
      {
LABEL_33:
        sub_247A1268C(0);
LABEL_34:
        sub_2479D97B4((uint64_t)v46);
        return (id)v48;
      }
      swift_bridgeObjectRetain();
      v24 = sub_247A1B37C();
      result = (id)swift_bridgeObjectRelease();
      if (!v24)
        goto LABEL_42;
      swift_bridgeObjectRetain();
      v25 = sub_247A1B37C();
      result = (id)swift_bridgeObjectRelease();
      if (!v25)
        goto LABEL_40;
    }
    else if (!*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_33;
    }
    if ((v21 & 0xC000000000000001) != 0)
    {
      result = (id)MEMORY[0x249587908](0, v21);
      v16 = result;
      if (!v22)
        goto LABEL_17;
    }
    else
    {
      if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_36;
      result = *(id *)(v21 + 32);
      v16 = result;
      if (!v22)
      {
LABEL_17:
        if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
    v26 = sub_247A1B37C();
    result = (id)swift_bridgeObjectRelease();
    if (!v26)
      goto LABEL_38;
LABEL_29:
    sub_2479EA0F8(0, 1);
    sub_247A1268C(v16);
    if (!v16)
      goto LABEL_34;
LABEL_30:
    v34[0] = v16;
    sub_2479D2618(v34, v28);
    if (v2)
    {

      sub_2479D97B4((uint64_t)v46);
      return (id)swift_release();
    }
    v2 = 0;

    sub_247A1B328();
    sub_247A1B34C();
    sub_247A1B358();
  }
  swift_bridgeObjectRetain();
  v18 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v19 = sub_247A1B37C();
  result = (id)swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_41;
  swift_bridgeObjectRetain();
  v20 = sub_247A1B37C();
  result = (id)swift_bridgeObjectRelease();
  if (!v20)
    goto LABEL_39;
LABEL_4:
  if ((v14 & 0xC000000000000001) != 0)
  {
    result = (id)MEMORY[0x249587908](0, v14);
    v16 = result;
    if (v15)
      goto LABEL_20;
LABEL_7:
    v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
    if (!v17)
      goto LABEL_37;
    sub_2479EA0F8(0, 1);
    goto LABEL_30;
  }
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    result = *(id *)(v14 + 32);
    v16 = result;
    if (!v15)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRetain();
    v17 = sub_247A1B37C();
    result = (id)swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2479D6DC8(void **__src, void **a2, void **a3, void **__dst, uint64_t a5)
{
  void **v5;
  void **v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  void **v27;
  BOOL v28;
  void **v29;
  void **v30;
  uint64_t v31;
  void **v32;
  void **v33;
  void *v34;
  void **v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  id v46;
  void **v47;
  void **v48;
  void **v49;
  void **v50;
  void **v51;
  void **v52;
  void **v53;
  void **v54;
  void **v55;
  void **v56;
  id v57;
  id v58;
  void **v59;
  void **v60;
  void **v61;
  void **v62;
  void **v63;

  v5 = __dst;
  v6 = a3;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v63 = __src;
  v62 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        v29 = a2;
        memmove(__dst, a2, 8 * v13);
        a2 = v29;
      }
      v30 = &v5[v13];
      v61 = v30;
      v63 = a2;
      if (v7 < a2 && v11 >= 8)
      {
        v31 = *(_QWORD *)(a5 + 16);
        v52 = v7;
        v54 = v5;
        while (1)
        {
          v32 = v6 - 1;
          v33 = v30 - 1;
          v34 = *(v30 - 1);
          if (v31)
            break;
LABEL_57:
          v61 = v33;
          if (v6 < v30 || v32 >= v30 || v6 != v30)
            *v32 = *v33;
          v35 = a2;
          v30 = v33;
          if (a2 <= v7)
            goto LABEL_63;
LABEL_62:
          a2 = v35;
          v6 = v32;
          if (v30 <= v5)
            goto LABEL_63;
        }
        v47 = v30 - 1;
        v48 = v6 - 1;
        v50 = v30;
        v56 = v6;
        v60 = a2;
        v35 = a2 - 1;
        v36 = *(a2 - 1);
        v37 = *(_QWORD *)(sub_247A1AC8C() - 8);
        v38 = a5 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
        v39 = *(_QWORD *)(v37 + 72);
        sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v46 = v34;
        v58 = v36;
        v40 = 0;
        v41 = v38;
        while ((sub_247A1AEB4() & 1) == 0)
        {
          ++v40;
          v41 += v39;
          if (v31 == v40)
          {
            v40 = 0x7FFFFFFFFFFFFFFFLL;
            break;
          }
        }
        v42 = 0;
        while ((sub_247A1AEB4() & 1) == 0)
        {
          v43 = v42 + 1;
          if (__OFADD__(v42, 1))
          {
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          ++v42;
          v38 += v39;
          if (v43 == v31)
          {

            v7 = v52;
            v5 = v54;
            v6 = v56;
            a2 = v60;
            v32 = v48;
            v30 = v50;
            v33 = v47;
            if (v40 == 0x7FFFFFFFFFFFFFFFLL)
              goto LABEL_57;
            goto LABEL_51;
          }
        }

        v28 = v40 < v42;
        v7 = v52;
        v5 = v54;
        v6 = v56;
        a2 = v60;
        v32 = v48;
        v30 = v50;
        v33 = v47;
        if (!v28)
          goto LABEL_57;
LABEL_51:
        if (v6 != a2 || v32 >= a2)
          *v32 = *v35;
        v63 = v35;
        if (v35 > v7)
          goto LABEL_62;
      }
      goto LABEL_63;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      v14 = a2;
      memmove(__dst, __src, 8 * v10);
      a2 = v14;
    }
    v49 = &v5[v10];
    v61 = v49;
    if (a2 < v6 && v8 >= 8)
    {
      v15 = *(_QWORD *)(a5 + 16);
      v55 = v6;
      do
      {
        if (v15)
        {
          v51 = v7;
          v53 = v5;
          v59 = a2;
          v16 = *a2;
          v17 = *v5;
          v18 = *(_QWORD *)(sub_247A1AC8C() - 8);
          v19 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
          v20 = *(_QWORD *)(v18 + 72);
          sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v57 = v16;
          v21 = v17;
          v22 = 0;
          v23 = v19;
          while ((sub_247A1AEB4() & 1) == 0)
          {
            ++v22;
            v23 += v20;
            if (v15 == v22)
            {
              v22 = 0x7FFFFFFFFFFFFFFFLL;
              break;
            }
          }
          v24 = 0;
          while ((sub_247A1AEB4() & 1) == 0)
          {
            v25 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_65;
            ++v24;
            v19 += v20;
            if (v25 == v15)
            {

              v26 = v22 == 0x7FFFFFFFFFFFFFFFLL;
              v7 = v51;
              v5 = v53;
              v6 = v55;
              a2 = v59;
              if (v26)
                goto LABEL_28;
              goto LABEL_23;
            }
          }

          v28 = v22 < v24;
          v7 = v51;
          v5 = v53;
          v6 = v55;
          a2 = v59;
          if (!v28)
            goto LABEL_28;
LABEL_23:
          v27 = a2 + 1;
          if (v7 < a2 || v7 >= v27 || v7 != a2)
            *v7 = *a2;
        }
        else
        {
LABEL_28:
          if (v7 != v5)
            *v7 = *v5;
          v62 = ++v5;
          v27 = a2;
        }
        ++v7;
        if (v5 >= v49)
          break;
        a2 = v27;
      }
      while (v27 < v6);
      v63 = v7;
    }
LABEL_63:
    sub_2479F3680(&v63, &v62, &v61);
    return 1;
  }
LABEL_66:
  swift_bridgeObjectRelease();
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

void sub_2479D72D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = *(_QWORD *)(a5 + 16);
    do
    {
      v7 = *(void **)(v5 + 8 * a3);
      v19 = a3;
      while (2)
      {
        if (v6)
        {
          v24 = a3;
          v22 = a3 - 1;
          v8 = *(void **)(v5 + 8 * (a3 - 1));
          v9 = *(_QWORD *)(sub_247A1AC8C() - 8);
          v10 = a5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
          v11 = *(_QWORD *)(v9 + 72);
          sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v23 = v7;
          v25 = v8;
          v12 = 0;
          v13 = v10;
          while ((sub_247A1AEB4() & 1) == 0)
          {
            ++v12;
            v13 += v11;
            if (v6 == v12)
            {
              v12 = 0x7FFFFFFFFFFFFFFFLL;
              break;
            }
          }
          v14 = 0;
          while ((sub_247A1AEB4() & 1) == 0)
          {
            v15 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              goto LABEL_22;
            }
            ++v14;
            v10 += v11;
            if (v15 == v6)
            {

              v16 = v24;
              if (v12 == 0x7FFFFFFFFFFFFFFFLL)
                goto LABEL_4;
              goto LABEL_18;
            }
          }

          v16 = v24;
          if (v12 >= v14)
            break;
LABEL_18:
          if (!v5)
          {
LABEL_22:
            __break(1u);
            return;
          }
          v17 = 8 * v16;
          v7 = *(void **)(v5 + v17);
          *(_QWORD *)(v5 + v17) = *(_QWORD *)(v5 + 8 * v22);
          *(_QWORD *)(v5 + 8 * v22) = v7;
          a3 = v22;
          if (v22 != a1)
            continue;
        }
        break;
      }
LABEL_4:
      a3 = v19 + 1;
    }
    while (v19 + 1 != a2);
  }
}

uint64_t sub_2479D74C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  void **v95;
  void **v96;
  void **v97;
  unint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void **v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void **__dst;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  id v142;
  char *v143;
  id v144;
  uint64_t v145;

  v5 = a1[1];
  swift_bridgeObjectRetain_n();
  v124 = sub_247A1B4C0();
  if (v124 >= v5)
  {
    if (v5 < 0)
      goto LABEL_177;
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_2479D72D8(0, v5, 1, a1, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    if (v5 >= 0)
      v6 = v5;
    else
      v6 = v5 + 1;
    if (v5 < -1)
    {
LABEL_186:
      swift_bridgeObjectRelease_n();
      result = sub_247A1B370();
      __break(1u);
      return result;
    }
    v140 = a2;
    v133 = v2;
    v122 = a1;
    if (v5 < 2)
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v145 = MEMORY[0x24BEE4AF8];
      __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v5 != 1)
      {
        v46 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        goto LABEL_138;
      }
    }
    else
    {
      v7 = v6 >> 1;
      type metadata accessor for _STKSticker(0);
      v8 = sub_247A1B064();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v145 = v8;
    }
    v11 = 0;
    v12 = *a1;
    v121 = *a1 - 8;
    v130 = (char *)MEMORY[0x24BEE4AF8];
    v128 = v5;
    v134 = *a1;
    while (1)
    {
      v132 = v11;
      v13 = v11 + 1;
      if (v11 + 1 >= v5)
      {
        v23 = v124;
        goto LABEL_56;
      }
      v14 = *(_QWORD *)(a2 + 16);
      if (v14)
      {
        v15 = a2;
        v16 = *(void **)(v12 + 8 * v13);
        v17 = *(void **)(v12 + 8 * v11);
        v18 = *(_QWORD *)(sub_247A1AC8C() - 8);
        v19 = v15 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        v20 = *(_QWORD *)(v18 + 72);
        sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v137 = v16;
        v141 = v17;
        v21 = 0;
        v22 = v19;
        while ((sub_247A1AEB4() & 1) == 0)
        {
          ++v21;
          v22 += v20;
          if (v14 == v21)
          {
            v125 = 0x7FFFFFFFFFFFFFFFLL;
            goto LABEL_23;
          }
        }
        v125 = v21;
LABEL_23:
        v24 = 0;
        while ((sub_247A1AEB4() & 1) == 0)
        {
          v25 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_160;
          ++v24;
          v19 += v20;
          if (v25 == v14)
          {
            v24 = 0x7FFFFFFFFFFFFFFFLL;
            break;
          }
        }

        v23 = v124;
        v12 = v134;
      }
      else
      {
        v24 = 0x7FFFFFFFFFFFFFFFLL;
        v125 = 0x7FFFFFFFFFFFFFFFLL;
        v23 = v124;
      }
      v26 = v132 + 2;
      if (v132 + 2 >= v128)
        goto LABEL_44;
      while (2)
      {
        if (!v14)
        {
          if (v125 >= v24)
            goto LABEL_32;
          a2 = v140;
          v5 = v128;
LABEL_48:
          if (v26 >= v132)
          {
            if (v132 < v26)
            {
              v36 = (uint64_t *)(v121 + 8 * v26);
              v37 = v26;
              v38 = v132;
              v39 = (uint64_t *)(v12 + 8 * v132);
              do
              {
                if (v38 != --v37)
                {
                  if (!v12)
                    goto LABEL_184;
                  v40 = *v39;
                  *v39 = *v36;
                  *v36 = v40;
                }
                ++v38;
                --v36;
                ++v39;
              }
              while (v38 < v37);
            }
            v13 = v26;
            goto LABEL_56;
          }
          goto LABEL_179;
        }
        v138 = v26;
        v27 = *(void **)(v12 + 8 * v26);
        v28 = *(void **)(v12 + 8 * v13);
        v29 = *(_QWORD *)(sub_247A1AC8C() - 8);
        v30 = v140 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
        v31 = *(_QWORD *)(v29 + 72);
        sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v135 = v27;
        v142 = v28;
        v32 = 0;
        v33 = v30;
        while ((sub_247A1AEB4() & 1) == 0)
        {
          ++v32;
          v33 += v31;
          if (v14 == v32)
          {
            v32 = 0x7FFFFFFFFFFFFFFFLL;
            break;
          }
        }
        v34 = 0;
        do
        {
          if ((sub_247A1AEB4() & 1) != 0)
            goto LABEL_43;
          v35 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
            goto LABEL_172;
          }
          ++v34;
          v30 += v31;
        }
        while (v35 != v14);
        v34 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_43:

        v23 = v124;
        v12 = v134;
        v26 = v138;
        if (v125 < v24 == v32 >= v34)
        {
LABEL_44:
          v5 = v128;
          goto LABEL_46;
        }
LABEL_32:
        v13 = v26++;
        if (v26 != v128)
          continue;
        break;
      }
      v5 = v128;
      v26 = v128;
LABEL_46:
      v13 = v26;
      v77 = v125 < v24;
      a2 = v140;
      if (v77)
        goto LABEL_48;
LABEL_56:
      if (v13 >= v5)
        goto LABEL_66;
      if (__OFSUB__(v13, v132))
        goto LABEL_178;
      v41 = v13;
      if (v13 - v132 >= v23)
        goto LABEL_65;
      if (__OFADD__(v132, v23))
        goto LABEL_180;
      if (v132 + v23 >= v5)
        v42 = v5;
      else
        v42 = v132 + v23;
      if (v42 < v132)
        goto LABEL_181;
      if (v41 != v42)
        break;
LABEL_65:
      v13 = v41;
LABEL_66:
      v126 = v13;
      v43 = v130;
      if (v13 < v132)
        goto LABEL_176;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v43 = sub_2479F3588(0, *((_QWORD *)v130 + 2) + 1, 1, v130);
      v45 = *((_QWORD *)v43 + 2);
      v44 = *((_QWORD *)v43 + 3);
      v46 = v45 + 1;
      v12 = v134;
      if (v45 >= v44 >> 1)
      {
        v113 = sub_2479F3588((char *)(v44 > 1), v45 + 1, 1, v43);
        v12 = v134;
        v43 = v113;
      }
      *((_QWORD *)v43 + 2) = v46;
      v47 = v43 + 32;
      v48 = &v43[16 * v45 + 32];
      *(_QWORD *)v48 = v132;
      *((_QWORD *)v48 + 1) = v13;
      v130 = v43;
      if (v45)
      {
        v143 = v43 + 32;
        while (1)
        {
          v49 = v46 - 1;
          if (v46 >= 4)
          {
            v54 = &v47[16 * v46];
            v55 = *((_QWORD *)v54 - 8);
            v56 = *((_QWORD *)v54 - 7);
            v60 = __OFSUB__(v56, v55);
            v57 = v56 - v55;
            if (v60)
              goto LABEL_161;
            v59 = *((_QWORD *)v54 - 6);
            v58 = *((_QWORD *)v54 - 5);
            v60 = __OFSUB__(v58, v59);
            v52 = v58 - v59;
            v53 = v60;
            if (v60)
              goto LABEL_162;
            v61 = v46 - 2;
            v62 = &v47[16 * v46 - 32];
            v64 = *(_QWORD *)v62;
            v63 = *((_QWORD *)v62 + 1);
            v60 = __OFSUB__(v63, v64);
            v65 = v63 - v64;
            if (v60)
              goto LABEL_164;
            v60 = __OFADD__(v52, v65);
            v66 = v52 + v65;
            if (v60)
              goto LABEL_167;
            if (v66 >= v57)
            {
              v84 = &v47[16 * v49];
              v86 = *(_QWORD *)v84;
              v85 = *((_QWORD *)v84 + 1);
              v60 = __OFSUB__(v85, v86);
              v87 = v85 - v86;
              if (v60)
                goto LABEL_171;
              v77 = v52 < v87;
              goto LABEL_104;
            }
          }
          else
          {
            if (v46 != 3)
            {
              v78 = *((_QWORD *)v43 + 4);
              v79 = *((_QWORD *)v43 + 5);
              v60 = __OFSUB__(v79, v78);
              v71 = v79 - v78;
              v72 = v60;
              goto LABEL_98;
            }
            v51 = *((_QWORD *)v43 + 4);
            v50 = *((_QWORD *)v43 + 5);
            v60 = __OFSUB__(v50, v51);
            v52 = v50 - v51;
            v53 = v60;
          }
          if ((v53 & 1) != 0)
            goto LABEL_163;
          v61 = v46 - 2;
          v67 = &v47[16 * v46 - 32];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v70 = __OFSUB__(v68, v69);
          v71 = v68 - v69;
          v72 = v70;
          if (v70)
            goto LABEL_166;
          v73 = &v47[16 * v49];
          v75 = *(_QWORD *)v73;
          v74 = *((_QWORD *)v73 + 1);
          v60 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          if (v60)
            goto LABEL_169;
          if (__OFADD__(v71, v76))
            goto LABEL_170;
          if (v71 + v76 >= v52)
          {
            v77 = v52 < v76;
LABEL_104:
            if (v77)
              v49 = v61;
            goto LABEL_106;
          }
LABEL_98:
          if ((v72 & 1) != 0)
            goto LABEL_165;
          v80 = &v47[16 * v49];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v60 = __OFSUB__(v81, v82);
          v83 = v81 - v82;
          if (v60)
            goto LABEL_168;
          if (v83 < v71)
            goto LABEL_115;
LABEL_106:
          v88 = v49 - 1;
          if (v49 - 1 >= v46)
            goto LABEL_156;
          if (!v12)
            goto LABEL_183;
          v89 = v47;
          v90 = &v47[16 * v88];
          v91 = *(_QWORD *)v90;
          v92 = v49;
          v93 = &v89[16 * v49];
          v94 = *((_QWORD *)v93 + 1);
          v95 = (void **)(v12 + 8 * *(_QWORD *)v90);
          v96 = (void **)(v12 + 8 * *(_QWORD *)v93);
          v97 = (void **)(v12 + 8 * v94);
          swift_bridgeObjectRetain();
          sub_2479D6DC8(v95, v96, v97, __dst, v140);
          if (v133)
          {
LABEL_150:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)((v145 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_247A1B04C();
            goto LABEL_152;
          }
          swift_bridgeObjectRelease();
          if (v94 < v91)
            goto LABEL_157;
          v43 = v130;
          if (v92 > *((_QWORD *)v130 + 2))
            goto LABEL_158;
          *(_QWORD *)v90 = v91;
          v47 = v143;
          *(_QWORD *)&v143[16 * v88 + 8] = v94;
          v98 = *((_QWORD *)v130 + 2);
          if (v92 >= v98)
            goto LABEL_159;
          v46 = v98 - 1;
          memmove(v93, v93 + 16, 16 * (v98 - 1 - v92));
          *((_QWORD *)v130 + 2) = v98 - 1;
          v12 = v134;
          if (v98 <= 2)
            goto LABEL_115;
        }
      }
      v46 = 1;
LABEL_115:
      v11 = v126;
      v5 = v128;
      a2 = v140;
      if (v126 >= v128)
        goto LABEL_154;
    }
    v99 = *(_QWORD *)(a2 + 16);
    v123 = v42;
LABEL_119:
    v100 = *(void **)(v12 + 8 * v41);
    v127 = v41;
LABEL_120:
    if (!v99)
      goto LABEL_118;
    v139 = v41;
    v101 = v41 - 1;
    v102 = *(void **)(v12 + 8 * (v41 - 1));
    v46 = sub_247A1AC8C();
    v103 = *(_QWORD *)(v46 - 8);
    v104 = v140 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
    v105 = *(_QWORD *)(v103 + 72);
    sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v136 = v100;
    v144 = v102;
    v106 = 0;
    v107 = v104;
    while ((sub_247A1AEB4() & 1) == 0)
    {
      ++v106;
      v107 += v105;
      if (v99 == v106)
      {
        v106 = 0x7FFFFFFFFFFFFFFFLL;
        break;
      }
    }
    v108 = 0;
    while (1)
    {
      if ((sub_247A1AEB4() & 1) != 0)
      {

        v12 = v134;
        v110 = v132;
        v111 = v139;
        if (v106 >= v108)
          goto LABEL_118;
        goto LABEL_132;
      }
      v109 = v108 + 1;
      if (__OFADD__(v108, 1))
        break;
      ++v108;
      v104 += v105;
      if (v109 == v99)
      {

        v12 = v134;
        v110 = v132;
        v111 = v139;
        if (v106 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_118;
LABEL_132:
        if (!v12)
          goto LABEL_182;
        v112 = 8 * v111;
        v100 = *(void **)(v12 + v112);
        *(_QWORD *)(v12 + v112) = *(_QWORD *)(v12 + 8 * v101);
        *(_QWORD *)(v12 + 8 * v101) = v100;
        v41 = v101;
        if (v101 != v110)
          goto LABEL_120;
LABEL_118:
        v41 = v127 + 1;
        v13 = v123;
        if (v127 + 1 == v123)
          goto LABEL_66;
        goto LABEL_119;
      }
    }
    __break(1u);
LABEL_154:
    v10 = v130;
LABEL_138:
    v131 = v10;
    if (v46 >= 2)
    {
      v114 = *v122;
      while (1)
      {
        v115 = v46 - 2;
        if (v46 < 2)
          break;
        if (!v114)
          goto LABEL_185;
        v116 = *(_QWORD *)&v131[16 * v115 + 32];
        v117 = *(_QWORD *)&v131[16 * v46 + 24];
        v118 = (void **)(v114 + 8 * *(_QWORD *)&v131[16 * v46 + 16]);
        swift_bridgeObjectRetain();
        sub_2479D6DC8((void **)(v114 + 8 * v116), v118, (void **)(v114 + 8 * v117), __dst, v140);
        if (v133)
          goto LABEL_150;
        swift_bridgeObjectRelease();
        if (v117 < v116)
          goto LABEL_173;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v131 = sub_2479F372C((uint64_t)v131);
        if (v115 >= *((_QWORD *)v131 + 2))
          goto LABEL_174;
        v119 = &v131[16 * v115 + 32];
        *(_QWORD *)v119 = v116;
        *((_QWORD *)v119 + 1) = v117;
        v120 = *((_QWORD *)v131 + 2);
        if (v46 > v120)
          goto LABEL_175;
        memmove(&v131[16 * v46 + 16], &v131[16 * v46 + 32], 16 * (v120 - v46));
        *((_QWORD *)v131 + 2) = v120 - 1;
        v46 = v120 - 1;
        if (v120 <= 2)
          goto LABEL_151;
      }
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_183:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_184:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_185:
      swift_bridgeObjectRelease_n();
      __break(1u);
      goto LABEL_186;
    }
LABEL_151:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v145 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_247A1B04C();
LABEL_152:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2479D8018(uint64_t a1)
{
  destroy for StickerSequence(a1);
  return a1;
}

uint64_t sub_2479D804C(void **__src, void **a2, void **a3, void **__dst, uint64_t a5)
{
  void **v5;
  void **v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  void **v27;
  void **v28;
  void **v29;
  uint64_t v30;
  void **v31;
  void **v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  uint64_t result;
  void **v44;
  id v46;
  void **v47;
  void **v48;
  void **v49;
  void **v50;
  void **v51;
  void **v52;
  void **v53;
  void **v54;
  void **v55;
  id v56;
  id v57;
  void **v58;
  void **v59;
  void **v60;
  void **v61;
  void **v62;

  v5 = __dst;
  v6 = a3;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v62 = __src;
  v61 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        v28 = a2;
        memmove(__dst, a2, 8 * v13);
        a2 = v28;
      }
      v29 = &v5[v13];
      v60 = v29;
      v62 = a2;
      if (v7 < a2 && v11 >= 8)
      {
        v30 = *(_QWORD *)(a5 + 16);
        v51 = v7;
        v53 = v5;
        do
        {
          v31 = v6 - 1;
          v32 = v29 - 1;
          v33 = *(v29 - 1);
          if (v30)
          {
            v47 = v6 - 1;
            v49 = v29;
            v55 = v6;
            v59 = a2;
            v34 = *(a2 - 1);
            v44 = a2 - 1;
            v35 = *(_QWORD *)(sub_247A1AC8C() - 8);
            v36 = a5 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
            v37 = *(_QWORD *)(v35 + 72);
            sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v46 = v33;
            v57 = v34;
            v38 = 0;
            v39 = v36;
            while ((sub_247A1AEB4() & 1) == 0)
            {
              ++v38;
              v39 += v37;
              if (v30 == v38)
              {
                v38 = 0;
                break;
              }
            }
            v40 = 0;
            while ((sub_247A1AEB4() & 1) == 0)
            {
              v41 = v40 + 1;
              if (__OFADD__(v40, 1))
              {
                __break(1u);
LABEL_67:
                __break(1u);
                goto LABEL_68;
              }
              ++v40;
              v36 += v37;
              if (v41 == v30)
              {

                v7 = v51;
                v5 = v53;
                v6 = v55;
                a2 = v59;
                v31 = v47;
                v29 = v49;
                goto LABEL_58;
              }
            }

            v26 = v38 < v40;
            v7 = v51;
            v5 = v53;
            v6 = v55;
            a2 = v59;
            v31 = v47;
            v29 = v49;
            if (!v26)
              goto LABEL_58;
            v42 = v44;
            if (v55 != v59 || v47 >= v59)
              *v47 = *v44;
            v62 = v44;
          }
          else
          {
LABEL_58:
            v60 = v32;
            if (v6 < v29 || v31 >= v29 || v6 != v29)
              *v31 = *v32;
            v42 = a2;
            v29 = v32;
          }
          if (v42 <= v7)
            break;
          a2 = v42;
          v6 = v31;
        }
        while (v29 > v5);
      }
      goto LABEL_65;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      v14 = a2;
      memmove(__dst, __src, 8 * v10);
      a2 = v14;
    }
    v48 = &v5[v10];
    v60 = v48;
    if (a2 < v6 && v8 >= 8)
    {
      v15 = *(_QWORD *)(a5 + 16);
      v54 = v6;
      do
      {
        if (!v15)
          goto LABEL_29;
        v50 = v7;
        v52 = v5;
        v58 = a2;
        v16 = *a2;
        v17 = *v5;
        v18 = *(_QWORD *)(sub_247A1AC8C() - 8);
        v19 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        v20 = *(_QWORD *)(v18 + 72);
        sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v56 = v16;
        v21 = v17;
        v22 = 0;
        v23 = v19;
        while ((sub_247A1AEB4() & 1) == 0)
        {
          ++v22;
          v23 += v20;
          if (v15 == v22)
          {
            v22 = 0;
            break;
          }
        }
        v24 = 0;
        while ((sub_247A1AEB4() & 1) == 0)
        {
          v25 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_67;
          ++v24;
          v19 += v20;
          if (v25 == v15)
          {

            v7 = v50;
            v5 = v52;
            v6 = v54;
            a2 = v58;
            goto LABEL_29;
          }
        }

        v26 = v22 < v24;
        v7 = v50;
        v5 = v52;
        v6 = v54;
        a2 = v58;
        if (v26)
        {
          v27 = v58 + 1;
          if (v50 < v58 || v50 >= v27 || v50 != v58)
            *v50 = *v58;
        }
        else
        {
LABEL_29:
          if (v7 != v5)
            *v7 = *v5;
          v61 = ++v5;
          v27 = a2;
        }
        ++v7;
        if (v5 >= v48)
          break;
        a2 = v27;
      }
      while (v27 < v6);
      v62 = v7;
    }
LABEL_65:
    sub_2479F3680(&v62, &v61, &v60);
    return 1;
  }
LABEL_68:
  swift_bridgeObjectRelease();
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

void sub_2479D8540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;

  if (a3 != a2)
  {
    v5 = a3;
    v6 = *a4;
    v7 = *(_QWORD *)(a5 + 16);
    v21 = *a4;
    do
    {
      if (v7)
      {
        v8 = *(_QWORD *)(sub_247A1AC8C() - 8);
        v25 = a5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v9 = *(void **)(v6 + 8 * v5);
        v10 = *(_QWORD *)(v8 + 72);
        sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v11 = v5;
        do
        {
          v23 = v11;
          v12 = v11 - 1;
          v13 = *(void **)(v6 + 8 * (v11 - 1));
          v24 = v9;
          v26 = v13;
          v14 = 0;
          v15 = v25;
          v22 = v12;
          while ((sub_247A1AEB4() & 1) == 0)
          {
            ++v14;
            v15 += v10;
            if (v7 == v14)
            {
              v14 = 0;
              break;
            }
          }
          v16 = 0;
          v17 = v25;
          while ((sub_247A1AEB4() & 1) == 0)
          {
            ++v16;
            v17 += v10;
            if (v7 == v16)
            {

              v6 = v21;
              goto LABEL_4;
            }
          }

          v6 = v21;
          if (v14 >= v16)
            break;
          if (!v21)
          {
            __break(1u);
            return;
          }
          v9 = *(void **)(v21 + 8 * v23);
          *(_QWORD *)(v21 + 8 * v23) = *(_QWORD *)(v21 + 8 * v22);
          *(_QWORD *)(v21 + 8 * v22) = v9;
          v11 = v22;
        }
        while (v22 != a1);
      }
LABEL_4:
      ++v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_2479D8724(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  void **v111;
  void **v112;
  void **v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void **v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  void **__dst;
  id v135;
  uint64_t v136;
  id v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v4 = a1;
  v5 = a1[1];
  swift_bridgeObjectRetain_n();
  v126 = sub_247A1B4C0();
  if (v126 >= v5)
  {
    if (v5 < 0)
      goto LABEL_179;
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_2479D8540(0, v5, 1, v4, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v5 >= 0)
    v6 = v5;
  else
    v6 = v5 + 1;
  if (v5 < -1)
    goto LABEL_187;
  v146 = a2;
  v147 = v2;
  v124 = v4;
  if (v5 < 2)
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
    v149 = MEMORY[0x24BEE4AF8];
    __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      v61 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_141:
      v142 = v11;
      if (v61 >= 2)
      {
        v116 = *v124;
        do
        {
          v117 = v61 - 2;
          if (v61 < 2)
            goto LABEL_173;
          if (!v116)
            goto LABEL_186;
          v118 = *(_QWORD *)&v142[16 * v117 + 32];
          v119 = *(_QWORD *)&v142[16 * v61 + 24];
          v120 = (void **)(v116 + 8 * *(_QWORD *)&v142[16 * v61 + 16]);
          swift_bridgeObjectRetain();
          sub_2479D804C((void **)(v116 + 8 * v118), v120, (void **)(v116 + 8 * v119), __dst, v146);
          if (v147)
            goto LABEL_153;
          swift_bridgeObjectRelease();
          if (v119 < v118)
            goto LABEL_175;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v142 = sub_2479F372C((uint64_t)v142);
          if (v117 >= *((_QWORD *)v142 + 2))
            goto LABEL_176;
          v121 = &v142[16 * v117 + 32];
          *(_QWORD *)v121 = v118;
          *((_QWORD *)v121 + 1) = v119;
          v122 = *((_QWORD *)v142 + 2);
          if (v61 > v122)
            goto LABEL_177;
          memmove(&v142[16 * v61 + 16], &v142[16 * v61 + 32], 16 * (v122 - v61));
          *((_QWORD *)v142 + 2) = v122 - 1;
          v61 = v122 - 1;
        }
        while (v122 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)((v149 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_247A1B04C();
LABEL_155:
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v4;
    v8 = v6 >> 1;
    type metadata accessor for _STKStickerRepresentation(0);
    v9 = sub_247A1B064();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v4 = v7;
    __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v149 = v9;
  }
  v12 = 0;
  v13 = *v4;
  v123 = *v4 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v129 = v5;
  v148 = *v4;
LABEL_14:
  v14 = v12 + 1;
  v128 = v12;
  if (v12 + 1 >= v5)
    goto LABEL_86;
  v139 = v11;
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v16 = *(void **)(v13 + 8 * v14);
    v17 = *(void **)(v13 + 8 * v12);
    v18 = *(_QWORD *)(sub_247A1AC8C() - 8);
    v19 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v20 = *(_QWORD *)(v18 + 72);
    sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v135 = v16;
    v21 = v17;
    v22 = 0;
    v23 = v19;
    while ((sub_247A1AEB4() & 1) == 0)
    {
      ++v22;
      v23 += v20;
      if (v15 == v22)
      {
        v130 = 0;
        goto LABEL_23;
      }
    }
    v130 = v22;
LABEL_23:
    v24 = 0;
    while ((sub_247A1AEB4() & 1) == 0)
    {
      v26 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_161;
      ++v24;
      v19 += v20;
      if (v26 == v15)
      {
        v24 = 0;
        break;
      }
    }

    v25 = v126;
    v12 = v128;
  }
  else
  {
    v24 = 0;
    v130 = 0;
    v25 = v126;
  }
  v27 = v12 + 2;
  if (v12 + 2 >= v129)
  {
    v28 = v148;
    goto LABEL_48;
  }
  v28 = v148;
  while (!v15)
  {
    if (v130 < v24)
    {
      v38 = v146;
      v11 = v139;
      v12 = v128;
      v39 = v129;
      if (v27 < v128)
        goto LABEL_180;
      goto LABEL_51;
    }
LABEL_32:
    v14 = v27++;
    if (v27 == v129)
    {
      v27 = v129;
      goto LABEL_47;
    }
  }
  v136 = v27;
  v29 = *(void **)(v28 + 8 * v27);
  v30 = *(void **)(v28 + 8 * v14);
  v31 = *(_QWORD *)(sub_247A1AC8C() - 8);
  v32 = v146 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  v33 = *(_QWORD *)(v31 + 72);
  sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v132 = v29;
  v143 = v30;
  v34 = 0;
  v35 = v32;
  while ((sub_247A1AEB4() & 1) == 0)
  {
    ++v34;
    v35 += v33;
    if (v15 == v34)
    {
      v34 = 0;
      break;
    }
  }
  v36 = 0;
  while (1)
  {
    if ((sub_247A1AEB4() & 1) != 0)
      goto LABEL_43;
    v37 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    ++v36;
    v32 += v33;
    if (v37 == v15)
    {
      v36 = 0;
LABEL_43:

      v25 = v126;
      v28 = v148;
      v27 = v136;
      if (v130 < v24 != v34 >= v36)
        goto LABEL_32;
LABEL_47:
      v12 = v128;
LABEL_48:
      v14 = v27;
      v93 = v130 < v24;
      v38 = v146;
      v11 = v139;
      v39 = v129;
      if (v93)
      {
        if (v27 < v12)
          goto LABEL_180;
LABEL_51:
        if (v12 >= v27)
        {
          v14 = v27;
          goto LABEL_59;
        }
        v40 = (uint64_t *)(v123 + 8 * v27);
        v41 = v12;
        v42 = v27;
        v43 = v41;
        v44 = (uint64_t *)(v28 + 8 * v41);
        do
        {
          if (v43 != --v42)
          {
            if (!v28)
              goto LABEL_185;
            v45 = *v44;
            *v44 = *v40;
            *v40 = v45;
          }
          ++v43;
          --v40;
          ++v44;
        }
        while (v43 < v42);
        v14 = v27;
        v12 = v128;
        if (v27 >= v39)
          goto LABEL_86;
LABEL_60:
        if (__OFSUB__(v14, v12))
          goto LABEL_178;
        if (v14 - v12 >= v25)
          goto LABEL_86;
        v46 = v12 + v25;
        if (__OFADD__(v12, v25))
          goto LABEL_181;
        if (v46 >= v39)
          v46 = v39;
        if (v46 >= v12)
        {
          if (v14 != v46)
          {
            v140 = v11;
            v47 = *(_QWORD *)(v38 + 16);
            v125 = v46;
            do
            {
              v144 = v14;
              if (!v47)
                goto LABEL_68;
              v48 = *(_QWORD *)(sub_247A1AC8C() - 8);
              v49 = v14;
              v50 = v146 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
              v51 = *(void **)(v148 + 8 * v14);
              v52 = *(_QWORD *)(v48 + 72);
              sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v53 = v148;
              v127 = v50;
              do
              {
                v131 = v49 - 1;
                v133 = v49;
                v54 = *(void **)(v53 + 8 * (v49 - 1));
                v137 = v51;
                v55 = v54;
                v56 = 0;
                v57 = v50;
                while ((sub_247A1AEB4() & 1) == 0)
                {
                  ++v56;
                  v57 += v52;
                  if (v47 == v56)
                  {
                    v56 = 0;
                    break;
                  }
                }
                v58 = 0;
                while ((sub_247A1AEB4() & 1) == 0)
                {
                  ++v58;
                  v50 += v52;
                  if (v47 == v58)
                  {

                    goto LABEL_68;
                  }
                }

                if (v56 >= v58)
                  break;
                v53 = v148;
                if (!v148)
                  goto LABEL_184;
                v51 = *(void **)(v148 + 8 * v133);
                *(_QWORD *)(v148 + 8 * v133) = *(_QWORD *)(v148 + 8 * v131);
                *(_QWORD *)(v148 + 8 * v131) = v51;
                v49 = v131;
                v50 = v127;
              }
              while (v131 != v128);
LABEL_68:
              ++v14;
            }
            while (v144 + 1 != v125);
            v14 = v125;
            v11 = v140;
            v12 = v128;
          }
          goto LABEL_86;
        }
        goto LABEL_182;
      }
LABEL_59:
      if (v14 < v39)
        goto LABEL_60;
LABEL_86:
      if (v14 < v12)
        goto LABEL_174;
      v145 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_2479F3588(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v60 = *((_QWORD *)v11 + 2);
      v59 = *((_QWORD *)v11 + 3);
      v61 = v60 + 1;
      v13 = v148;
      v62 = v128;
      if (v60 >= v59 >> 1)
      {
        v115 = sub_2479F3588((char *)(v59 > 1), v60 + 1, 1, v11);
        v62 = v128;
        v13 = v148;
        v11 = v115;
      }
      *((_QWORD *)v11 + 2) = v61;
      v63 = v11 + 32;
      v64 = &v11[16 * v60 + 32];
      *(_QWORD *)v64 = v62;
      *((_QWORD *)v64 + 1) = v145;
      if (v60)
      {
        v138 = v11 + 32;
        v141 = v11;
        while (1)
        {
          v65 = v61 - 1;
          if (v61 >= 4)
          {
            v70 = &v63[16 * v61];
            v71 = *((_QWORD *)v70 - 8);
            v72 = *((_QWORD *)v70 - 7);
            v76 = __OFSUB__(v72, v71);
            v73 = v72 - v71;
            if (v76)
              goto LABEL_162;
            v75 = *((_QWORD *)v70 - 6);
            v74 = *((_QWORD *)v70 - 5);
            v76 = __OFSUB__(v74, v75);
            v68 = v74 - v75;
            v69 = v76;
            if (v76)
              goto LABEL_163;
            v77 = v61 - 2;
            v78 = &v63[16 * v61 - 32];
            v80 = *(_QWORD *)v78;
            v79 = *((_QWORD *)v78 + 1);
            v76 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            if (v76)
              goto LABEL_165;
            v76 = __OFADD__(v68, v81);
            v82 = v68 + v81;
            if (v76)
              goto LABEL_168;
            if (v82 >= v73)
            {
              v100 = &v63[16 * v65];
              v102 = *(_QWORD *)v100;
              v101 = *((_QWORD *)v100 + 1);
              v76 = __OFSUB__(v101, v102);
              v103 = v101 - v102;
              if (v76)
                goto LABEL_172;
              v93 = v68 < v103;
              goto LABEL_124;
            }
          }
          else
          {
            if (v61 != 3)
            {
              v94 = *((_QWORD *)v11 + 4);
              v95 = *((_QWORD *)v11 + 5);
              v76 = __OFSUB__(v95, v94);
              v87 = v95 - v94;
              v88 = v76;
              goto LABEL_118;
            }
            v67 = *((_QWORD *)v11 + 4);
            v66 = *((_QWORD *)v11 + 5);
            v76 = __OFSUB__(v66, v67);
            v68 = v66 - v67;
            v69 = v76;
          }
          if ((v69 & 1) != 0)
            goto LABEL_164;
          v77 = v61 - 2;
          v83 = &v63[16 * v61 - 32];
          v85 = *(_QWORD *)v83;
          v84 = *((_QWORD *)v83 + 1);
          v86 = __OFSUB__(v84, v85);
          v87 = v84 - v85;
          v88 = v86;
          if (v86)
            goto LABEL_167;
          v89 = &v63[16 * v65];
          v91 = *(_QWORD *)v89;
          v90 = *((_QWORD *)v89 + 1);
          v76 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          if (v76)
            goto LABEL_170;
          if (__OFADD__(v87, v92))
            goto LABEL_171;
          if (v87 + v92 >= v68)
          {
            v93 = v68 < v92;
LABEL_124:
            if (v93)
              v65 = v77;
            goto LABEL_126;
          }
LABEL_118:
          if ((v88 & 1) != 0)
            goto LABEL_166;
          v96 = &v63[16 * v65];
          v98 = *(_QWORD *)v96;
          v97 = *((_QWORD *)v96 + 1);
          v76 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          if (v76)
            goto LABEL_169;
          if (v99 < v87)
            goto LABEL_135;
LABEL_126:
          v104 = v65 - 1;
          if (v65 - 1 >= v61)
            goto LABEL_157;
          if (!v13)
            goto LABEL_183;
          v105 = v63;
          v106 = &v63[16 * v104];
          v107 = *(_QWORD *)v106;
          v108 = v65;
          v109 = &v105[16 * v65];
          v110 = *((_QWORD *)v109 + 1);
          v111 = (void **)(v13 + 8 * *(_QWORD *)v106);
          v112 = (void **)(v13 + 8 * *(_QWORD *)v109);
          v113 = (void **)(v13 + 8 * v110);
          swift_bridgeObjectRetain();
          sub_2479D804C(v111, v112, v113, __dst, v146);
          if (v147)
          {
LABEL_153:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)((v149 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_247A1B04C();
            goto LABEL_155;
          }
          swift_bridgeObjectRelease();
          if (v110 < v107)
            goto LABEL_158;
          v11 = v141;
          if (v108 > *((_QWORD *)v141 + 2))
            goto LABEL_159;
          *(_QWORD *)v106 = v107;
          v63 = v138;
          *(_QWORD *)&v138[16 * v104 + 8] = v110;
          v114 = *((_QWORD *)v141 + 2);
          if (v108 >= v114)
            goto LABEL_160;
          v61 = v114 - 1;
          memmove(v109, v109 + 16, 16 * (v114 - 1 - v108));
          *((_QWORD *)v141 + 2) = v114 - 1;
          v13 = v148;
          if (v114 <= 2)
            goto LABEL_135;
        }
      }
      v61 = 1;
LABEL_135:
      v5 = v129;
      v12 = v145;
      a2 = v146;
      if (v145 >= v129)
        goto LABEL_141;
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  swift_bridgeObjectRelease_n();
  result = sub_247A1B370();
  __break(1u);
  return result;
}

uint64_t sub_2479D9284(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(_QWORD *, uint64_t))
{
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  _QWORD v12[2];

  v8 = *a1;
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = a3(v8);
    *a1 = v8;
  }
  v10 = *(_QWORD *)(v8 + 16);
  v12[0] = v8 + 32;
  v12[1] = v10;
  swift_bridgeObjectRetain();
  a4(v12, a2);
  swift_bridgeObjectRelease();
  sub_247A1B334();
  return swift_bridgeObjectRelease_n();
}

uint64_t type metadata accessor for _STKStickerRepresentationRole()
{
  return objc_opt_self();
}

uint64_t sub_2479D935C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2479D9370(a1, a2);
  return a1;
}

uint64_t sub_2479D9370(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t type metadata accessor for _STKStickerRepresentation(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_2544509E0);
}

uint64_t type metadata accessor for _STKSticker(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_2544509D0);
}

uint64_t type metadata accessor for _STKStickerEffect()
{
  return objc_opt_self();
}

uint64_t sub_2479D93FC()
{
  return type metadata accessor for _STKTextInputObjCStoreFacade(0);
}

uint64_t sub_2479D9404()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1ADB8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for _STKTextInputObjCStoreFacade()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.stickers(with:roles:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.representationsForStickers(identifiers:roles:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.touchSticker(identifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t sub_2479D9514()
{
  return type metadata accessor for _STKSticker(0);
}

uint64_t sub_2479D951C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1AC8C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for _STKSticker()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2479D95D4()
{
  return type metadata accessor for _STKStickerRepresentation(0);
}

uint64_t sub_2479D95DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_247A1AC8C();
  if (v1 <= 0x3F)
  {
    result = sub_247A1AD04();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _STKStickerRepresentation()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2479D969C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2479D96E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2479D969C(a1, a2);
  return a1;
}

uint64_t sub_2479D96F4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x249588058](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2479D9734(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StickerSequence(a2, a1);
  return a2;
}

uint64_t sub_2479D9770(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2479D97B4(uint64_t a1)
{
  destroy for StickerSequenceIterator(a1);
  return a1;
}

void sub_2479D97FC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _BYTE *v19;
  uint64_t v20;

  v1 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v2 = (void *)sub_247A1AEC0();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_247A1C830;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2479D4FF8();
  *(_QWORD *)(v4 + 32) = 0x696669746E656469;
  *(_QWORD *)(v4 + 40) = 0xEA00000000007265;
  v5 = sub_247A1AC50();
  *(_QWORD *)(v4 + 96) = sub_2479D032C(0, &qword_254450BE0);
  *(_QWORD *)(v4 + 104) = sub_2479D9EA0();
  *(_QWORD *)(v4 + 72) = v5;
  v6 = (void *)sub_247A1B0F4();
  objc_msgSend(v3, sel_setPredicate_, v6);

  sub_2479D032C(0, (unint64_t *)&qword_254450BF0);
  v7 = sub_247A1B178();
  if (v0)
  {

    v8 = v0;
    v9 = v0;
    v10 = sub_247A1ADA0();
    v11 = sub_247A1B118();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412290;
      v14 = v0;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v13 = v20;

      _os_log_impl(&dword_2479C5000, v10, v11, "Could not fetch stickers to delete: %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v13, -1, -1);
      MEMORY[0x249588124](v12, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v15 = v7;

    if (!v15)
      return;
    v16 = sub_247A1ADA0();
    v17 = sub_247A1B118();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_2479C5000, v16, v17, "Could not add new sticker: duplicate identifier", v18, 2u);
      MEMORY[0x249588124](v18, -1, -1);
    }

    sub_2479CF054();
    swift_allocError();
    *v19 = 4;
  }
  swift_willThrow();
}

void sub_2479D9BB4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v13[0] = 0;
  if (objc_msgSend(v1, sel_save_, v13))
  {
    v2 = v13[0];
  }
  else
  {
    v3 = v13[0];
    v4 = (void *)sub_247A1AADC();

    swift_willThrow();
    v5 = v4;
    v6 = v4;
    v7 = sub_247A1ADA0();
    v8 = sub_247A1B118();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v11 = v4;
      v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v13[0] = v12;
      sub_247A1B208();
      *v10 = v12;

      _os_log_impl(&dword_2479C5000, v7, v8, "Could not save new sticker: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v10, -1, -1);
      MEMORY[0x249588124](v9, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_2479D9DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  v2 = sub_247A1ADB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2479D9E28()
{
  return _s14descr2519138B1V3AddCMa();
}

uint64_t _s14descr2519138B1V3AddCMa()
{
  uint64_t result;

  result = qword_2544509A0;
  if (!qword_2544509A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2479D9E6C()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_2479D9EA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576D2C08;
  if (!qword_2576D2C08)
  {
    v1 = sub_2479D032C(255, &qword_254450BE0);
    result = MEMORY[0x249588058](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_2576D2C08);
  }
  return result;
}

uint64_t Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)@<X0>(char *a1@<X0>, void *a2@<X1>, void **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  void *v13;
  uint64_t KeyPath;
  id v15;
  uint64_t v16;
  id v17;
  char v19;

  v19 = *a1;
  v13 = *a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450C00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450A48);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_247A1C690;
  KeyPath = swift_getKeyPath();
  MEMORY[0x249587080](KeyPath, 1);
  v15 = a2;
  sub_2479D50B4(v13);
  sub_2479D5080(0);
  if (!a4)
  {
    a4 = swift_allocObject();
    *(_OWORD *)(a4 + 16) = xmmword_247A1C690;
    v16 = swift_getKeyPath();
    MEMORY[0x249587080](v16, 1);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v15;
  sub_2479D50B4(v13);

  sub_2479D5080(v13);
  *(_BYTE *)a9 = v19;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = v13;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7 & 1;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = a10 & 1;

  sub_2479D5080(v13);
  return swift_bridgeObjectRelease();
}

void Sticker.FetchRequest.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Sticker.FetchRequest.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Sticker.FetchRequest.type.modify())()
{
  return nullsub_1;
}

void *Sticker.FetchRequest.predicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void Sticker.FetchRequest.predicate.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*Sticker.FetchRequest.predicate.modify())()
{
  return nullsub_1;
}

id Sticker.FetchRequest.representations.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return sub_2479D50B4(v2);
}

void Sticker.FetchRequest.representations.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  sub_2479D5080(*(id *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = v2;
}

uint64_t (*Sticker.FetchRequest.representations.modify())()
{
  return nullsub_1;
}

double sub_2479DA16C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

double sub_2479DA1C0@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

uint64_t sub_2479DA214(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___STKSticker_libraryIndex);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_2479DA26C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___STKSticker_libraryIndex);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t Sticker.FetchRequest.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Sticker.FetchRequest.sortDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Sticker.FetchRequest.sortDescriptors.modify())()
{
  return nullsub_1;
}

uint64_t Sticker.FetchRequest.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t Sticker.FetchRequest.offset.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*Sticker.FetchRequest.offset.modify())()
{
  return nullsub_1;
}

uint64_t Sticker.FetchRequest.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Sticker.FetchRequest.limit.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*Sticker.FetchRequest.limit.modify())()
{
  return nullsub_1;
}

uint64_t Sticker.FetchRequest.batchSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t Sticker.FetchRequest.batchSize.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*Sticker.FetchRequest.batchSize.modify())()
{
  return nullsub_1;
}

BOOL sub_2479DA37C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s8Stickers17StickerStoreErrorO9hashValueSivg_0()
{
  sub_247A1B568();
  sub_247A1B574();
  return sub_247A1B580();
}

uint64_t sub_2479DA3D4()
{
  return sub_247A1B574();
}

uint64_t sub_2479DA3FC()
{
  sub_247A1B568();
  sub_247A1B574();
  return sub_247A1B580();
}

uint64_t sub_2479DA43C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2479DA464
                                                            + 4 * asc_247A1CA10[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_2479DA464()
{
  return 0x7461636964657270;
}

uint64_t sub_2479DA488()
{
  return 0x6E65736572706572;
}

uint64_t sub_2479DA4AC()
{
  return 0x6373654474726F73;
}

uint64_t sub_2479DA4D0()
{
  return 0x74657366666FLL;
}

uint64_t sub_2479DA4E4()
{
  return 0x74696D696CLL;
}

uint64_t sub_2479DA4F8()
{
  return 0x7A69536863746162;
}

uint64_t sub_2479DA514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2479DB5C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2479DA538()
{
  return 0;
}

void sub_2479DA544(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2479DA550()
{
  sub_2479DAAB8();
  return sub_247A1B5A4();
}

uint64_t sub_2479DA578()
{
  sub_2479DAAB8();
  return sub_247A1B5B0();
}

uint64_t Sticker.FetchRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  int v17;
  id v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  int v35;
  char v36;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450958);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450C00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450A48);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_247A1C690;
  v32 = v9;
  KeyPath = swift_getKeyPath();
  MEMORY[0x249587080](KeyPath, 1);
  v11 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_2479DAAB8();
  sub_247A1B58C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);

    sub_2479D5080(0);
  }
  else
  {
    v30 = v6;
    v36 = 1;
    sub_2479DAAFC();
    sub_247A1B400();
    v12 = v34;
    if (v34 >> 60 == 15)
    {
      v13 = 0;
    }
    else
    {
      v14 = (uint64_t)v33;
      v15 = objc_allocWithZone(MEMORY[0x24BDD1620]);
      sub_2479D935C(v14, v12);
      v16 = sub_2479DB900();
      sub_2479D96E0(v14, v12);
      sub_2479DB9BC();
      v13 = (void *)sub_247A1B190();
      objc_msgSend(v16, sel_finishDecoding);

      sub_2479D96E0(v14, v12);
    }
    v36 = 0;
    sub_2479DAB40();
    sub_247A1B400();
    v17 = v33;
    v36 = 2;
    sub_2479DAB84();
    sub_247A1B448();
    v19 = v33;
    sub_2479D50B4(v33);
    sub_2479D5080(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BA8);
    v36 = 3;
    sub_2479DBAE4((unint64_t *)&unk_254450918, &qword_254450800, MEMORY[0x24BDCBF40], MEMORY[0x24BEE12D0]);
    sub_247A1B448();
    v35 = v17;
    v20 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v33) = 4;
    v29 = sub_247A1B43C();
    LOBYTE(v33) = 5;
    v32 = v5;
    v28 = sub_247A1B3F4();
    HIDWORD(v27) = v21 & 1;
    v22 = v20;
    LOBYTE(v20) = v35;
    LOBYTE(v33) = 6;
    v23 = v32;
    v24 = sub_247A1B43C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v23);
    v25 = v13;
    sub_2479D50B4(v19);
    sub_2479D5080(v19);

    *(_BYTE *)a2 = (_BYTE)v20;
    *(_QWORD *)(a2 + 8) = v13;
    *(_QWORD *)(a2 + 16) = v19;
    v26 = v29;
    *(_QWORD *)(a2 + 24) = v22;
    *(_QWORD *)(a2 + 32) = v26;
    *(_QWORD *)(a2 + 40) = v28;
    *(_BYTE *)(a2 + 48) = BYTE4(v27);
    *(_QWORD *)(a2 + 56) = v24;
    *(_BYTE *)(a2 + 64) = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);

    sub_2479D5080(v19);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_2479DAAB8()
{
  unint64_t result;

  result = qword_254450B28;
  if (!qword_254450B28)
  {
    result = MEMORY[0x249588058](&unk_247A1CE08, &_s12FetchRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B28);
  }
  return result;
}

unint64_t sub_2479DAAFC()
{
  unint64_t result;

  result = qword_254450A50;
  if (!qword_254450A50)
  {
    result = MEMORY[0x249588058](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254450A50);
  }
  return result;
}

unint64_t sub_2479DAB40()
{
  unint64_t result;

  result = qword_254450B00;
  if (!qword_254450B00)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.StickerType, &type metadata for Sticker.StickerType);
    atomic_store(result, (unint64_t *)&qword_254450B00);
  }
  return result;
}

unint64_t sub_2479DAB84()
{
  unint64_t result;

  result = qword_2544508D8;
  if (!qword_2544508D8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.FetchRequest.RepresentationSpecifier, &type metadata for Sticker.FetchRequest.RepresentationSpecifier);
    atomic_store(result, (unint64_t *)&qword_2544508D8);
  }
  return result;
}

uint64_t Sticker.FetchRequest.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  char v32;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507D8);
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v9 = (void *)*((_QWORD *)v1 + 1);
  v8 = *((_QWORD *)v1 + 2);
  v26 = *((_QWORD *)v1 + 3);
  v27 = v8;
  v10 = *((_QWORD *)v1 + 4);
  v24 = *((_QWORD *)v1 + 5);
  v25 = v10;
  v31 = v1[48];
  v23 = *((_QWORD *)v1 + 7);
  v22 = v1[64];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2479DAAB8();
  sub_247A1B598();
  if (v9)
  {
    v11 = objc_allocWithZone(MEMORY[0x24BDD1618]);
    v12 = v9;
    v13 = objc_msgSend(v11, sel_initRequiringSecureCoding_, 1);
    v14 = v12;
    v15 = (void *)sub_247A1AEC0();
    objc_msgSend(v13, sel_encodeObject_forKey_, v14, v15);

    objc_msgSend(v13, sel_finishEncoding);
    v16 = objc_msgSend(v13, sel_encodedData);
    v17 = sub_247A1ABCC();
    v19 = v18;

    v29 = v17;
    v30 = v19;
    v32 = 1;
    sub_2479DBC00();
    sub_247A1B49C();
    if (v2)
    {

      sub_2479D969C(v17, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v4);
    }
    sub_2479D969C(v17, v19);

  }
  LOBYTE(v29) = v7;
  v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450740);
  sub_2479DB9F8();
  sub_247A1B49C();
  if (!v2)
  {
    v29 = v27;
    v32 = 2;
    sub_2479DBAA0();
    sub_247A1B49C();
    v29 = v26;
    v32 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BA8);
    sub_2479DBAE4((unint64_t *)&unk_254450788, &qword_2544506F8, MEMORY[0x24BDCBF30], MEMORY[0x24BEE12A0]);
    sub_247A1B49C();
    LOBYTE(v29) = 4;
    sub_247A1B490();
    v29 = v24;
    LOBYTE(v30) = v31;
    v32 = 5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450BC8);
    sub_2479DBBA4();
    sub_247A1B49C();
    v29 = v23;
    LOBYTE(v30) = v22;
    v32 = 6;
    sub_247A1B49C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v4);
}

uint64_t Sticker.FetchRequest.RepresentationSpecifier.description.getter()
{
  void **v0;
  void *v1;
  id v3;

  v1 = *v0;
  if (!*v0)
    return 0xD000000000000010;
  if (v1 == (void *)1)
    return 0x67616D69206C6C61;
  if (v1 == (void *)2)
    return 0x6567616D69206F6ELL;
  sub_2479D50B4(v1);
  v3 = objc_msgSend(v1, sel_description);
  sub_247A1AEE4();

  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_2479D5080(v1);
  return 0x206572656877;
}

BOOL sub_2479DB094(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2479DB0B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6572506572656877;
  else
    return 0x65756C6156776172;
}

uint64_t sub_2479DB0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2479DC714(a1, a2);
  *a3 = result;
  return result;
}

void sub_2479DB120(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2479DB12C()
{
  sub_2479DBC44();
  return sub_247A1B5A4();
}

uint64_t sub_2479DB154()
{
  sub_2479DBC44();
  return sub_247A1B5B0();
}

uint64_t Sticker.FetchRequest.RepresentationSpecifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450960);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2479DBC44();
  sub_247A1B58C();
  if (!v2)
  {
    v17 = 0;
    v9 = sub_247A1B43C();
    v10 = v9;
    switch(v9)
    {
      case 0:
        goto LABEL_10;
      case 1:
        v10 = 1;
        goto LABEL_10;
      case 2:
        v16 = 1;
        sub_247A1B418();
        v12 = (void *)sub_247A1AEC0();
        swift_bridgeObjectRelease();
        v13 = (void *)sub_247A1B028();
        v10 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v12, v13);

        goto LABEL_10;
      case 3:
        v10 = 2;
LABEL_10:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v10;
        break;
      default:
        sub_2479DBC88();
        swift_allocError();
        *v11 = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void Sticker.FetchRequest.RepresentationSpecifier.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2479DBC44();
  sub_247A1B598();
  if (!v8)
  {
    v12 = 0;
    goto LABEL_7;
  }
  if (v8 == (void *)1)
  {
    v13 = 0;
    goto LABEL_7;
  }
  if (v8 == (void *)2)
  {
    v16 = 0;
LABEL_7:
    sub_247A1B490();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return;
  }
  v15 = 0;
  v9 = v8;
  sub_247A1B490();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v10 = objc_msgSend(v9, sel_predicateFormat);
    sub_247A1AEE4();

    v14 = 1;
    sub_247A1B46C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
  }
  sub_2479D5080(v8);
}

uint64_t sub_2479DB574@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Sticker.FetchRequest.RepresentationSpecifier.init(from:)(a1, a2);
}

void sub_2479DB588(_QWORD *a1)
{
  Sticker.FetchRequest.RepresentationSpecifier.encode(to:)(a1);
}

uint64_t sub_2479DB59C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Sticker.FetchRequest.init(from:)(a1, a2);
}

uint64_t sub_2479DB5B0(_QWORD *a1)
{
  return Sticker.FetchRequest.encode(to:)(a1);
}

uint64_t sub_2479DB5C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636964657270 && a2 == 0xEF74616D726F4665 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65736572706572 && a2 == 0xEF736E6F69746174 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6373654474726F73 && a2 == 0xEF73726F74706972 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7A69536863746162 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

id sub_2479DB900()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_247A1ABB4();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_247A1AADC();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_2479DB9BC()
{
  unint64_t result;

  result = qword_254450938;
  if (!qword_254450938)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254450938);
  }
  return result;
}

unint64_t sub_2479DB9F8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254450748;
  if (!qword_254450748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254450740);
    v2 = sub_2479DBA5C();
    result = MEMORY[0x249588058](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254450748);
  }
  return result;
}

unint64_t sub_2479DBA5C()
{
  unint64_t result;

  result = qword_254450AF0;
  if (!qword_254450AF0)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.StickerType, &type metadata for Sticker.StickerType);
    atomic_store(result, (unint64_t *)&qword_254450AF0);
  }
  return result;
}

unint64_t sub_2479DBAA0()
{
  unint64_t result;

  result = qword_254450750;
  if (!qword_254450750)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.FetchRequest.RepresentationSpecifier, &type metadata for Sticker.FetchRequest.RepresentationSpecifier);
    atomic_store(result, (unint64_t *)&qword_254450750);
  }
  return result;
}

uint64_t sub_2479DBAE4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254450BA8);
    v10 = sub_2479DBB60(a2, a3);
    result = MEMORY[0x249588058](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2479DBB60(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254450A48);
    result = MEMORY[0x249588058](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2479DBBA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2544507A8;
  if (!qword_2544507A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254450BC8);
    v2 = MEMORY[0x24BEE1770];
    result = MEMORY[0x249588058](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2544507A8);
  }
  return result;
}

unint64_t sub_2479DBC00()
{
  unint64_t result;

  result = qword_254450810;
  if (!qword_254450810)
  {
    result = MEMORY[0x249588058](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254450810);
  }
  return result;
}

unint64_t sub_2479DBC44()
{
  unint64_t result;

  result = qword_254450B40;
  if (!qword_254450B40)
  {
    result = MEMORY[0x249588058](&unk_247A1CDB8, &_s12FetchRequestV23RepresentationSpecifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B40);
  }
  return result;
}

unint64_t sub_2479DBC88()
{
  unint64_t result;

  result = qword_2576D2C10;
  if (!qword_2576D2C10)
  {
    result = MEMORY[0x249588058](&unk_247A1CD78, &_s12FetchRequestV23RepresentationSpecifierO11CodingErrorON);
    atomic_store(result, (unint64_t *)&qword_2576D2C10);
  }
  return result;
}

uint64_t _s12FetchRequestVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s12FetchRequestVwxx(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 16);
  if ((unint64_t)v2 >= 3)

  return swift_bridgeObjectRelease();
}

uint64_t _s12FetchRequestVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;
  if ((unint64_t)v5 >= 3)
    v7 = v5;
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v8;
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12FetchRequestVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a2 + 16);
  if ((unint64_t)v7 >= 3)
  {
    if ((unint64_t)v8 >= 3)
    {
      *(_QWORD *)(a1 + 16) = v8;
      v10 = v8;

      goto LABEL_8;
    }

    v8 = *(void **)(a2 + 16);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 3)
  {
LABEL_6:
    *(_QWORD *)(a1 + 16) = v8;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 16) = v8;
  v9 = v8;
LABEL_8:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v12;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s12FetchRequestVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  if ((unint64_t)v5 >= 3)
  {
    if (v6 >= 3)
    {
      *(_QWORD *)(a1 + 16) = v6;

      goto LABEL_6;
    }

  }
  *(_QWORD *)(a1 + 16) = v6;
LABEL_6:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s12FetchRequestVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12FetchRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Sticker.FetchRequest()
{
  return &type metadata for Sticker.FetchRequest;
}

_QWORD *_s12FetchRequestV23RepresentationSpecifierOwCP(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void _s12FetchRequestV23RepresentationSpecifierOwxx(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **_s12FetchRequestV23RepresentationSpecifierOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **_s12FetchRequestV23RepresentationSpecifierOwta(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s12FetchRequestV23RepresentationSpecifierOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t _s12FetchRequestV23RepresentationSpecifierOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_2479DC1DC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2479DC1F4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Sticker.FetchRequest.RepresentationSpecifier()
{
  return &type metadata for Sticker.FetchRequest.RepresentationSpecifier;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *_s12FetchRequestV23RepresentationSpecifierO11CodingErrorOMa()
{
  return &_s12FetchRequestV23RepresentationSpecifierO11CodingErrorON;
}

uint64_t getEnumTagSinglePayload for Sticker.StickerType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12FetchRequestV23RepresentationSpecifierO11CodingErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2479DC324 + 4 * byte_247A1CA1C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2479DC358 + 4 * byte_247A1CA17[v4]))();
}

uint64_t sub_2479DC358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DC360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2479DC368);
  return result;
}

uint64_t sub_2479DC374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2479DC37CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2479DC380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DC388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DC394(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2479DC39C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s12FetchRequestV23RepresentationSpecifierO10CodingKeysOMa()
{
  return &_s12FetchRequestV23RepresentationSpecifierO10CodingKeysON;
}

uint64_t _s12FetchRequestV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12FetchRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2479DC494 + 4 * byte_247A1CA26[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2479DC4C8 + 4 * byte_247A1CA21[v4]))();
}

uint64_t sub_2479DC4C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DC4D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2479DC4D8);
  return result;
}

uint64_t sub_2479DC4E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2479DC4ECLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2479DC4F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DC4F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2479DC504(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s12FetchRequestV10CodingKeysOMa()
{
  return &_s12FetchRequestV10CodingKeysON;
}

unint64_t sub_2479DC520()
{
  unint64_t result;

  result = qword_2576D2C18;
  if (!qword_2576D2C18)
  {
    result = MEMORY[0x249588058](&unk_247A1CC30, &_s12FetchRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2576D2C18);
  }
  return result;
}

unint64_t sub_2479DC568()
{
  unint64_t result;

  result = qword_2576D2C20;
  if (!qword_2576D2C20)
  {
    result = MEMORY[0x249588058](&unk_247A1CCE8, &_s12FetchRequestV23RepresentationSpecifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2576D2C20);
  }
  return result;
}

unint64_t sub_2479DC5B0()
{
  unint64_t result;

  result = qword_2576D2C28;
  if (!qword_2576D2C28)
  {
    result = MEMORY[0x249588058](&unk_247A1CD50, &_s12FetchRequestV23RepresentationSpecifierO11CodingErrorON);
    atomic_store(result, (unint64_t *)&qword_2576D2C28);
  }
  return result;
}

unint64_t sub_2479DC5F8()
{
  unint64_t result;

  result = qword_254450B50;
  if (!qword_254450B50)
  {
    result = MEMORY[0x249588058](&unk_247A1CC58, &_s12FetchRequestV23RepresentationSpecifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B50);
  }
  return result;
}

unint64_t sub_2479DC640()
{
  unint64_t result;

  result = qword_254450B48;
  if (!qword_254450B48)
  {
    result = MEMORY[0x249588058](&unk_247A1CC80, &_s12FetchRequestV23RepresentationSpecifierO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B48);
  }
  return result;
}

unint64_t sub_2479DC688()
{
  unint64_t result;

  result = qword_254450B38;
  if (!qword_254450B38)
  {
    result = MEMORY[0x249588058](&unk_247A1CBA0, &_s12FetchRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B38);
  }
  return result;
}

unint64_t sub_2479DC6D0()
{
  unint64_t result;

  result = qword_254450B30;
  if (!qword_254450B30)
  {
    result = MEMORY[0x249588058](&unk_247A1CBC8, &_s12FetchRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B30);
  }
  return result;
}

uint64_t sub_2479DC714(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6156776172 && a2 == 0xE800000000000000;
  if (v2 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572506572656877 && a2 == 0xEE00657461636964)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

BOOL static StickerStoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StickerStoreError.hash(into:)()
{
  return sub_247A1B574();
}

uint64_t StickerStoreError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2479DC8B8 + 4 * byte_247A1CE60[*v0]))(0x6420737365636341, 0xED00006465696E65);
}

unint64_t sub_2479DC8B8()
{
  return 0xD000000000000012;
}

unint64_t sub_2479DC934()
{
  return 0xD000000000000020;
}

unint64_t sub_2479DC94C()
{
  return 0xD000000000000019;
}

unint64_t sub_2479DC964()
{
  return 0xD000000000000026;
}

unint64_t sub_2479DC97C()
{
  return 0xD000000000000027;
}

unint64_t sub_2479DC994()
{
  return 0xD000000000000022;
}

unint64_t sub_2479DC9AC()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_2479DC9C4()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_2479DC9DC()
{
  return 0xD000000000000038;
}

void sub_2479DC9F4()
{
  JUMPOUT(0x2479DCA08);
}

unint64_t sub_2479DCA20()
{
  unint64_t result;

  result = qword_2576D2C30;
  if (!qword_2576D2C30)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerStoreError, &type metadata for StickerStoreError);
    atomic_store(result, (unint64_t *)&qword_2576D2C30);
  }
  return result;
}

unint64_t sub_2479DCA6C()
{
  unint64_t result;

  result = qword_2576D2C38;
  if (!qword_2576D2C38)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for ManagedStickerDecodingError, &type metadata for ManagedStickerDecodingError);
    atomic_store(result, (unint64_t *)&qword_2576D2C38);
  }
  return result;
}

uint64_t dispatch thunk of StickerStoreProtocol.count(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StickerStoreProtocol.stickers(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of StickerStoreProtocol.count(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StickerStoreProtocol.sticker(at:type:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of StickerStoreProtocol.stickers(at:type:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of StickerStoreProtocol.sticker(identifier:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of StickerStoreProtocol.stickers(identifiers:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of StickerStoreProtocol.sticker(uri:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of StickerStoreProtocol.touchSticker(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of StickerStoreProtocol.addSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of StickerStoreProtocol.updateSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of StickerStoreProtocol.donateStickerToRecents(with:representations:stickerEffect:externalURI:name:accessibilityName:metadata:attributionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a16 + 96))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of StickerStoreProtocol.moveSticker(at:to:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of StickerStoreProtocol.removeStickers(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of StickerStoreProtocol.reindexAllStickers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.fetch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.addSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.removeStickers(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.updateSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.touchSpotlightItem(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.reindexAllStickers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t getEnumTagSinglePayload for StickerStoreError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerStoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_2479DCDA8 + 4 * byte_247A1CE74[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_2479DCDDC + 4 * byte_247A1CE6F[v4]))();
}

uint64_t sub_2479DCDDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DCDE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2479DCDECLL);
  return result;
}

uint64_t sub_2479DCDF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2479DCE00);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_2479DCE04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DCE0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StickerStoreError()
{
  return &type metadata for StickerStoreError;
}

uint64_t getEnumTagSinglePayload for ManagedStickerDecodingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedStickerDecodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2479DCF04 + 4 * byte_247A1CE7E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2479DCF38 + 4 * byte_247A1CE79[v4]))();
}

uint64_t sub_2479DCF38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DCF40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2479DCF48);
  return result;
}

uint64_t sub_2479DCF54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2479DCF5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2479DCF60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2479DCF68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedStickerDecodingError()
{
  return &type metadata for ManagedStickerDecodingError;
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_addSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_updateSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_removeStickers(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.count(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of StickerStoreProtocol.count(for:)(a1, a2, a3);
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_touchStickSpotlightItem(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of StickerStoreDataMapper.removeStickers(identifiers:)(a1, a2, a3);
}

uint64_t sub_2479DD004()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;

  sub_2479DD200();
  v1 = sub_247A1B178();
  if (v0)
  {
    v2 = v0;
    v3 = v0;
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B118();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      v8 = v0;
      v10 = _swift_stdlib_bridgeErrorToNSError();
      sub_247A1B208();
      *v7 = v10;

      _os_log_impl(&dword_2479C5000, v4, v5, "Could not count stickers: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);

    }
    else
    {

    }
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_2479DD1BC()
{
  return _s14descr251913A39V5CountCMa();
}

uint64_t _s14descr251913A39V5CountCMa()
{
  uint64_t result;

  result = qword_254450C58;
  if (!qword_254450C58)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2479DD200()
{
  unint64_t result;

  result = qword_254450BF0;
  if (!qword_254450BF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254450BF0);
  }
  return result;
}

uint64_t sub_2479DD23C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  _BYTE v9[8];
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_BYTE *)(a1 + 64);
  v9[0] = *(_BYTE *)a1;
  v10 = *(_OWORD *)(a1 + 8);
  v11 = v3;
  v12 = *(_OWORD *)(a1 + 32);
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v7 = sub_2479DD2FC((uint64_t)v9);
  if (!v1)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v2 = sub_247A1B37C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v2 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_2479DD2FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  uint64_t v35;
  uint64_t v36;
  id v37;
  int v38;
  uint64_t v39;
  unint64_t v40;

  v3 = v2;
  v5 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v36 = *v1;
  v37 = v4;
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v38 = *(unsigned __int8 *)(a1 + 48);
  swift_beginAccess();
  v9 = v1[2];
  v40 = v9;
  if (v5)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v5;
    v34[2] = sub_2479E0130;
    v34[3] = MEMORY[0x24BDAC7A8](v10);
    swift_bridgeObjectRetain_n();
    v11 = v5;
    v9 = sub_2479DEDC8(v9, sub_2479DFA6C, (uint64_t)v34);
    swift_release();
    swift_bridgeObjectRelease();
    v40 = v9;
    if (!*(_QWORD *)(v6 + 16))
      goto LABEL_4;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  if (*(_QWORD *)(v6 + 16))
  {
LABEL_3:
    v39 = v6;
    v34[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BA8);
    v35 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450A48);
    sub_2479D96F4(&qword_2576D2C40, &qword_254450BB8, MEMORY[0x24BEE12B8]);
    sub_2479D96F4(&qword_2576D2C48, &qword_254450BB8, MEMORY[0x24BEE12D8]);
    sub_2479D96F4(&qword_2576D2C50, &qword_254450BA8, MEMORY[0x24BEE12C8]);
    sub_2479D96F4(&qword_2576D2C58, &qword_254450A48, MEMORY[0x24BDCBF20]);
    v7 = v35;
    sub_247A1AEA8();
    v9 = v40;
  }
LABEL_4:
  v12 = v9 >> 62;
  if (!(v9 >> 62))
  {
    v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13;
    if (v7 >= v13)
      goto LABEL_37;
    if (v13 >= v7)
      goto LABEL_7;
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  v23 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (v7 >= v23)
    goto LABEL_37;
  swift_bridgeObjectRetain();
  v14 = sub_247A1B37C();
  result = swift_bridgeObjectRelease();
  if ((uint64_t)v14 >= v7)
  {
    swift_bridgeObjectRetain();
    v13 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (v13 >= v7)
    {
LABEL_7:
      if (v7 < 0)
      {
        __break(1u);
      }
      else
      {
        if (v12)
        {
          swift_bridgeObjectRetain();
          v13 = sub_247A1B37C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v13 >= (uint64_t)v14)
        {
          if ((v14 & 0x8000000000000000) == 0)
          {
            if ((v9 & 0xC000000000000001) != 0 && v7 != v14)
            {
              if (v7 >= v14)
              {
                __break(1u);
                goto LABEL_53;
              }
              type metadata accessor for Sticker(0);
              v15 = v7;
              do
              {
                v16 = v15 + 1;
                sub_247A1B2F8();
                v15 = v16;
              }
              while (v14 != v16);
            }
            if (v12)
            {
              swift_bridgeObjectRetain();
              v13 = sub_247A1B388();
              v3 = v17;
              v7 = v18;
              v14 = v19;
              swift_bridgeObjectRelease_n();
              if ((v14 & 1) != 0)
                goto LABEL_25;
            }
            else
            {
              v13 = v9 & 0xFFFFFFFFFFFFFF8;
              v3 = (v9 & 0xFFFFFFFFFFFFFF8) + 32;
              v14 = (2 * v14) | 1;
              if ((v14 & 1) != 0)
              {
LABEL_25:
                sub_247A1B4F0();
                swift_unknownObjectRetain_n();
                v21 = swift_dynamicCastClass();
                if (!v21)
                {
                  swift_unknownObjectRelease();
                  v21 = MEMORY[0x24BEE4AF8];
                }
                v22 = *(_QWORD *)(v21 + 16);
                swift_release();
                if (!__OFSUB__(v14 >> 1, v7))
                {
                  if (v22 == (v14 >> 1) - v7)
                  {
                    v20 = swift_dynamicCastClass();
                    swift_unknownObjectRelease();
                    if (!v20)
                    {
                      swift_unknownObjectRelease();
                      v20 = MEMORY[0x24BEE4AF8];
                    }
LABEL_31:
                    if ((v38 & 1) != 0)
                      goto LABEL_46;
                    goto LABEL_38;
                  }
                  goto LABEL_54;
                }
LABEL_53:
                __break(1u);
LABEL_54:
                swift_unknownObjectRelease();
              }
            }
            v20 = sub_2479D50C4(v13, v3, v7, v14);
            swift_unknownObjectRelease();
            goto LABEL_31;
          }
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
      }
      __break(1u);
      goto LABEL_49;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
    if ((v38 & 1) != 0)
      goto LABEL_46;
LABEL_38:
    v9 = sub_247A18B20(v8, v20);
    v8 = v25;
    v14 = v26;
    v13 = v27;
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
LABEL_39:
      sub_2479D50C4(v9, v8, v14, v13);
LABEL_45:
      swift_unknownObjectRelease();
      goto LABEL_46;
    }
    sub_247A1B4F0();
    swift_unknownObjectRetain_n();
    v28 = swift_dynamicCastClass();
    if (!v28)
    {
      swift_unknownObjectRelease();
      v28 = MEMORY[0x24BEE4AF8];
    }
    v29 = *(_QWORD *)(v28 + 16);
    swift_release();
    if (!__OFSUB__((unint64_t)v13 >> 1, v14))
    {
      if (v29 == ((unint64_t)v13 >> 1) - v14)
      {
        v30 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (!v30)
          goto LABEL_45;
LABEL_46:
        v31 = v37;
        sub_2479D50B4(v37);
        v32 = swift_bridgeObjectRetain();
        v33 = sub_2479DEC90(v32, v36, v31);
        swift_bridgeObjectRelease_n();
        sub_2479D5080(v31);
        return v33;
      }
LABEL_51:
      swift_unknownObjectRelease();
      goto LABEL_39;
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  __break(1u);
  return result;
}

uint64_t sub_2479DD8A0(uint64_t a1)
{
  uint64_t v1;
  int64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v3 = sub_2479DF1B8((unint64_t *)(v1 + 16), a1);
  result = swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + 16);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_247A1B37C();
    result = swift_bridgeObjectRelease();
    if (v6 >= v3)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= v3)
    {
LABEL_3:
      sub_2479EA0F8(v3, v6);
      return swift_endAccess();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2479DD984(void *a1)
{
  uint64_t v1;
  unint64_t *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  id v10;
  uint64_t result;
  void *v12;
  _BYTE *v13;

  v3 = (unint64_t *)(v1 + 16);
  swift_beginAccess();
  v4 = a1;
  v5 = swift_bridgeObjectRetain();
  v6 = sub_2479DF8EC(v5, (uint64_t)v4);
  v8 = v7;
  swift_bridgeObjectRelease();

  if ((v8 & 1) != 0)
  {
    sub_2479CF054();
    swift_allocError();
    *v13 = 2;
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    v9 = *v3;
    v10 = v4;
    result = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v3 = v9;
    if (!(_DWORD)result || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
      sub_2479DEC28(v9);
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v10;

      sub_247A1B04C();
      sub_2479DDADC(v3);
      return swift_endAccess();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2479DDADC(unint64_t *a1)
{
  unint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_2479DEC28(v2);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_2479DDDF4(v6);
  return sub_247A1B04C();
}

id sub_2479DDB60(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  _QWORD v11[3];
  uint64_t v12;

  sub_2479DFAD0(a1, (uint64_t)v11);
  v3 = v12;
  if (v12)
  {
    v4 = __swift_project_boxed_opaque_existential_1(v11, v12);
    v5 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v4);
    v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    v8 = sub_247A1B4D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(a2, sel_evaluateWithObject_, v8);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_2479DDC4C(void *a1, uint64_t (*a2)(_QWORD *), uint64_t a3, uint64_t (*a4)(_QWORD))
{
  id v6;
  char v7;
  _QWORD v9[4];

  v9[3] = a4(0);
  v9[0] = a1;
  v6 = a1;
  v7 = a2(v9);
  sub_2479DFA90((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_2479DDCB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InMemoryDataMapper()
{
  return objc_opt_self();
}

uint64_t sub_2479DDCF8(uint64_t a1)
{
  return sub_2479DD23C(a1);
}

uint64_t sub_2479DDD18(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  _BYTE v6[8];
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  char v12;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_BYTE *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  v6[0] = *(_BYTE *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  v8 = v1;
  v9 = *(_OWORD *)(a1 + 32);
  v10 = v2;
  v11 = v3;
  v12 = v4;
  return sub_2479DD2FC((uint64_t)v6);
}

void *sub_2479DDD7C(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)sub_2479DF07C(a1);
  v3 = v2;
  if (!v1)
    v4 = v2;
  return v3;
}

uint64_t sub_2479DDDB4(uint64_t a1)
{
  return sub_2479DD8A0(a1);
}

uint64_t sub_2479DDDD4(void *a1)
{
  return sub_2479DD984(a1);
}

uint64_t sub_2479DDDF4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  double *v17;
  double v18;
  double *v19;
  uint64_t v20;
  BOOL v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  double *v30;
  double v31;
  _QWORD *v32;
  uint64_t v33;
  double *v34;
  double v35;
  double *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  double *v48;
  double v49;
  double *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  double *v109;
  double v110;
  double *v111;
  char *v112;
  BOOL v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  unint64_t v122;
  double *v123;
  double v124;
  double *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  unint64_t v149;
  int64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *__dst;
  uint64_t v157;

  v3 = a1[1];
  result = sub_247A1B4C0();
  v141 = v3;
  if (result >= v3)
  {
    if (v3 < 0)
    {
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      sub_247A1B3B8();
      __break(1u);
      goto LABEL_200;
    }
    if ((unint64_t)v3 >= 2)
    {
      v9 = (uint64_t *)*a1;
      v10 = -1;
      v11 = 1;
      v12 = v9;
      do
      {
        v13 = v9[v11];
        v14 = v10;
        v15 = v12;
        do
        {
          v16 = *v15;
          v17 = (double *)(v13 + OBJC_IVAR___STKSticker_libraryIndex);
          swift_beginAccess();
          v18 = *v17;
          v19 = (double *)(v16 + OBJC_IVAR___STKSticker_libraryIndex);
          result = swift_beginAccess();
          if (*v19 >= v18)
            break;
          if (!v9)
            goto LABEL_195;
          v20 = *v15;
          v13 = v15[1];
          *v15 = v13;
          v15[1] = v20;
          --v15;
          v21 = __CFADD__(v14++, 1);
        }
        while (!v21);
        ++v11;
        ++v12;
        --v10;
      }
      while (v11 != v141);
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_200:
      result = sub_247A1B370();
      __break(1u);
      return result;
    }
    v140 = result;
    v138 = a1;
    if (v3 >= 2)
    {
      v6 = v5 >> 1;
      type metadata accessor for Sticker(0);
      v7 = sub_247A1B064();
      *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      v8 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
      v157 = v7;
      goto LABEL_19;
    }
    v22 = (char *)MEMORY[0x24BEE4AF8];
    v157 = MEMORY[0x24BEE4AF8];
    v8 = (MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32;
    if (v3 == 1)
    {
LABEL_19:
      v23 = 0;
      v139 = *a1 + 16;
      v145 = *a1;
      v142 = *a1 - 8;
      v22 = (char *)MEMORY[0x24BEE4AF8];
      __dst = (char *)v8;
      while (1)
      {
        v25 = v23++;
        v154 = v25;
        if (v23 >= v3)
        {
          v26 = v145;
        }
        else
        {
          v26 = v145;
          v27 = *(_QWORD *)(v145 + 8 * v25);
          v28 = (double *)(*(_QWORD *)(v145 + 8 * v23) + OBJC_IVAR___STKSticker_libraryIndex);
          swift_beginAccess();
          v29 = *v28;
          v30 = (double *)(v27 + OBJC_IVAR___STKSticker_libraryIndex);
          swift_beginAccess();
          v31 = *v30;
          v23 = v25 + 2;
          if (v25 + 2 < v3)
          {
            v32 = (_QWORD *)(v139 + 8 * v25);
            while (1)
            {
              v33 = *(v32 - 1);
              v34 = (double *)(*v32 + OBJC_IVAR___STKSticker_libraryIndex);
              swift_beginAccess();
              v35 = *v34;
              v36 = (double *)(v33 + OBJC_IVAR___STKSticker_libraryIndex);
              swift_beginAccess();
              if (v31 < v29 == *v36 >= v35)
                break;
              ++v23;
              ++v32;
              if (v3 == v23)
              {
                v23 = v3;
                break;
              }
            }
            v8 = (unint64_t)__dst;
          }
          if (v31 < v29)
          {
            if (v23 < v25)
              goto LABEL_190;
            if (v25 < v23)
            {
              v37 = (uint64_t *)(v142 + 8 * v23);
              v38 = v23;
              v39 = v25;
              v40 = (uint64_t *)(v145 + 8 * v25);
              do
              {
                if (v39 != --v38)
                {
                  if (!v145)
                    goto LABEL_197;
                  v41 = *v40;
                  *v40 = *v37;
                  *v37 = v41;
                }
                ++v39;
                --v37;
                ++v40;
              }
              while (v39 < v38);
            }
          }
        }
        if (v23 < v3)
        {
          if (__OFSUB__(v23, v25))
            goto LABEL_185;
          if (v23 - v25 < v140)
          {
            if (__OFADD__(v25, v140))
              goto LABEL_191;
            if (v25 + v140 >= v3)
              v42 = v3;
            else
              v42 = v25 + v140;
            if (v42 < v25)
              goto LABEL_192;
            if (v23 != v42)
            {
              v43 = (uint64_t *)(v142 + 8 * v23);
              v152 = v42;
              do
              {
                v44 = *(_QWORD *)(v26 + 8 * v23);
                v45 = v25;
                v46 = v43;
                do
                {
                  v47 = *v46;
                  v48 = (double *)(v44 + OBJC_IVAR___STKSticker_libraryIndex);
                  swift_beginAccess();
                  v49 = *v48;
                  v50 = (double *)(v47 + OBJC_IVAR___STKSticker_libraryIndex);
                  swift_beginAccess();
                  if (*v50 >= v49)
                    break;
                  if (!v26)
                    goto LABEL_193;
                  v51 = *v46;
                  v44 = v46[1];
                  *v46 = v44;
                  v46[1] = v51;
                  --v46;
                  ++v45;
                }
                while (v23 != v45);
                ++v23;
                ++v43;
                v25 = v154;
              }
              while (v23 != v152);
              v23 = v152;
              v8 = (unint64_t)__dst;
            }
          }
        }
        if (v23 < v25)
          goto LABEL_184;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_2479F3588(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
        v53 = *((_QWORD *)v22 + 2);
        v52 = *((_QWORD *)v22 + 3);
        v24 = v53 + 1;
        if (v53 >= v52 >> 1)
          v22 = sub_2479F3588((char *)(v52 > 1), v53 + 1, 1, v22);
        *((_QWORD *)v22 + 2) = v24;
        v146 = v22 + 32;
        v54 = &v22[16 * v53 + 32];
        *(_QWORD *)v54 = v25;
        *((_QWORD *)v54 + 1) = v23;
        if (v53)
          break;
        v24 = 1;
LABEL_21:
        v3 = v141;
        if (v23 >= v141)
          goto LABEL_156;
      }
      v55 = v22 + 32;
      v143 = v23;
      v144 = v22;
      while (1)
      {
        v56 = v24 - 1;
        if (v24 >= 4)
        {
          v61 = &v55[16 * v24];
          v62 = *((_QWORD *)v61 - 8);
          v63 = *((_QWORD *)v61 - 7);
          v67 = __OFSUB__(v63, v62);
          v64 = v63 - v62;
          if (v67)
            goto LABEL_173;
          v66 = *((_QWORD *)v61 - 6);
          v65 = *((_QWORD *)v61 - 5);
          v67 = __OFSUB__(v65, v66);
          v59 = v65 - v66;
          v60 = v67;
          if (v67)
            goto LABEL_174;
          v68 = v24 - 2;
          v69 = &v55[16 * v24 - 32];
          v71 = *(_QWORD *)v69;
          v70 = *((_QWORD *)v69 + 1);
          v67 = __OFSUB__(v70, v71);
          v72 = v70 - v71;
          if (v67)
            goto LABEL_176;
          v67 = __OFADD__(v59, v72);
          v73 = v59 + v72;
          if (v67)
            goto LABEL_179;
          if (v73 >= v64)
          {
            v91 = &v55[16 * v56];
            v93 = *(_QWORD *)v91;
            v92 = *((_QWORD *)v91 + 1);
            v67 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v67)
              goto LABEL_183;
            v84 = v59 < v94;
            goto LABEL_94;
          }
        }
        else
        {
          if (v24 != 3)
          {
            v85 = *((_QWORD *)v22 + 4);
            v86 = *((_QWORD *)v22 + 5);
            v67 = __OFSUB__(v86, v85);
            v78 = v86 - v85;
            v79 = v67;
            goto LABEL_88;
          }
          v58 = *((_QWORD *)v22 + 4);
          v57 = *((_QWORD *)v22 + 5);
          v67 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          v60 = v67;
        }
        if ((v60 & 1) != 0)
          goto LABEL_175;
        v68 = v24 - 2;
        v74 = &v55[16 * v24 - 32];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v77 = __OFSUB__(v75, v76);
        v78 = v75 - v76;
        v79 = v77;
        if (v77)
          goto LABEL_178;
        v80 = &v55[16 * v56];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v67 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v67)
          goto LABEL_181;
        if (__OFADD__(v78, v83))
          goto LABEL_182;
        if (v78 + v83 >= v59)
        {
          v84 = v59 < v83;
LABEL_94:
          if (v84)
            v56 = v68;
          goto LABEL_96;
        }
LABEL_88:
        if ((v79 & 1) != 0)
          goto LABEL_177;
        v87 = &v55[16 * v56];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v67 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v67)
          goto LABEL_180;
        if (v90 < v78)
          goto LABEL_21;
LABEL_96:
        if (v56 - 1 >= v24)
        {
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
          goto LABEL_186;
        }
        if (!v145)
          goto LABEL_196;
        v149 = v56 - 1;
        v150 = v56;
        v148 = &v55[16 * v56 - 16];
        v95 = &v55[16 * v56];
        v96 = *(_QWORD *)v95;
        v147 = v95;
        v151 = *(_QWORD *)v148;
        v153 = *((_QWORD *)v95 + 1);
        v97 = (char *)(v145 + 8 * *(_QWORD *)v148);
        v98 = (char *)(v145 + 8 * *(_QWORD *)v95);
        v99 = v145 + 8 * v153;
        v100 = v98 - v97;
        v101 = v98 - v97 + 7;
        if (v98 - v97 >= 0)
          v101 = v98 - v97;
        v102 = v101 >> 3;
        v103 = v99 - (_QWORD)v98;
        v104 = v99 - (_QWORD)v98 + 7;
        if ((uint64_t)(v99 - (_QWORD)v98) >= 0)
          v104 = v99 - (_QWORD)v98;
        v105 = v104 >> 3;
        if (v102 >= v104 >> 3)
        {
          if (v103 < -7)
            goto LABEL_199;
          if ((unint64_t)__dst >= v99 || __dst != v98)
            memmove(__dst, v98, 8 * v105);
          v114 = &__dst[8 * v105];
          v115 = v151;
          v8 = (unint64_t)__dst;
          if (v151 >= v96 || v103 < 8)
          {
            v107 = __dst;
            goto LABEL_144;
          }
          v116 = (char *)(v142 + 8 * v153);
          v155 = v97;
          while (2)
          {
            v117 = v114 - 8;
            v118 = v116 + 8;
            v120 = v98 - 8;
            v119 = *((_QWORD *)v98 - 1);
            v121 = v98;
            v122 = (unint64_t)v114;
            v123 = (double *)(*((_QWORD *)v114 - 1) + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            v124 = *v123;
            v125 = (double *)(v119 + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            if (*v125 < v124)
            {
              if (v118 == v121)
              {
                v21 = v116 >= v121;
                v126 = v120;
                v8 = (unint64_t)__dst;
                v114 = (char *)v122;
                v127 = v155;
                if (!v21)
                  goto LABEL_137;
              }
              else
              {
                v126 = v120;
                v127 = v155;
                v8 = (unint64_t)__dst;
                v114 = (char *)v122;
              }
              goto LABEL_136;
            }
            v126 = v121;
            v120 = v117;
            if (v118 != (char *)v122)
            {
              v114 = v117;
              v127 = v155;
              v8 = (unint64_t)__dst;
              goto LABEL_136;
            }
            v114 = v117;
            v8 = (unint64_t)__dst;
            v127 = v155;
            if ((unint64_t)v116 >= v122)
LABEL_136:
              *(_QWORD *)v116 = *(_QWORD *)v120;
LABEL_137:
            v98 = v126;
            if (v127 >= v126 || (v116 -= 8, v8 >= (unint64_t)v114))
            {
              v107 = (char *)v8;
              goto LABEL_142;
            }
            continue;
          }
        }
        if (v100 < -7)
          goto LABEL_199;
        v8 = (unint64_t)__dst;
        if (__dst != v97 || __dst >= v98)
          memmove(__dst, v97, 8 * v102);
        v106 = &__dst[8 * v102];
        if (v96 < v153 && v100 >= 8)
        {
          v107 = __dst;
          while (1)
          {
            v108 = *(_QWORD *)v107;
            v109 = (double *)(*(_QWORD *)v98 + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            v110 = *v109;
            v111 = (double *)(v108 + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            if (*v111 >= v110)
              break;
            v112 = v98;
            v113 = v97 == v98;
            v98 += 8;
            if (!v113)
              goto LABEL_115;
LABEL_116:
            v97 += 8;
            if (v107 >= v106 || (unint64_t)v98 >= v99)
            {
              v114 = v106;
              goto LABEL_141;
            }
          }
          v112 = v107;
          v113 = v97 == v107;
          v107 += 8;
          if (v113)
            goto LABEL_116;
LABEL_115:
          *(_QWORD *)v97 = *(_QWORD *)v112;
          goto LABEL_116;
        }
        v114 = v106;
        v107 = __dst;
LABEL_141:
        v98 = v97;
LABEL_142:
        v115 = v151;
LABEL_144:
        v128 = v114 - v107 + 7;
        if (v114 - v107 >= 0)
          v128 = v114 - v107;
        v22 = v144;
        if (v114 - v107 <= -8)
          goto LABEL_199;
        v129 = v128 >> 3;
        if (v98 != v107 || v98 >= &v107[8 * v129])
          memmove(v98, v107, 8 * v129);
        if (v153 < v115)
          goto LABEL_170;
        if (v150 > *((_QWORD *)v144 + 2))
          goto LABEL_171;
        *(_QWORD *)v148 = v115;
        v55 = v146;
        *(_QWORD *)&v146[16 * v149 + 8] = v153;
        v130 = *((_QWORD *)v144 + 2);
        if (v150 >= (uint64_t)v130)
          goto LABEL_172;
        v24 = v130 - 1;
        memmove(v147, v147 + 16, 16 * (v130 - 1 - v150));
        *((_QWORD *)v144 + 2) = v130 - 1;
        v84 = v130 > 2;
        v23 = v143;
        if (!v84)
          goto LABEL_21;
      }
    }
    v24 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_156:
    if (v24 >= 2)
    {
      v131 = *v138;
      while (1)
      {
        v132 = v24 - 2;
        if (v24 < 2)
          break;
        if (!v131)
          goto LABEL_198;
        v133 = (char *)v8;
        v134 = *(_QWORD *)&v22[16 * v132 + 32];
        v135 = *(_QWORD *)&v22[16 * v24 + 24];
        sub_2479DE900((char *)(v131 + 8 * v134), (char *)(v131 + 8 * *(_QWORD *)&v22[16 * v24 + 16]), v131 + 8 * v135, v133);
        if (v1)
          goto LABEL_167;
        if (v135 < v134)
          goto LABEL_187;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_2479F372C((uint64_t)v22);
        if (v132 >= *((_QWORD *)v22 + 2))
          goto LABEL_188;
        v136 = &v22[16 * v132 + 32];
        *(_QWORD *)v136 = v134;
        *((_QWORD *)v136 + 1) = v135;
        v137 = *((_QWORD *)v22 + 2);
        if (v24 > v137)
          goto LABEL_189;
        memmove(&v22[16 * v24 + 16], &v22[16 * v24 + 32], 16 * (v137 - v24));
        *((_QWORD *)v22 + 2) = v137 - 1;
        v24 = v137 - 1;
        v8 = (unint64_t)v133;
        if (v137 <= 2)
          goto LABEL_167;
      }
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
      goto LABEL_194;
    }
LABEL_167:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v157 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_247A1B04C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2479DE900(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double *v16;
  double v17;
  double *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double *v26;
  double v27;
  double *v28;
  char *v29;
  uint64_t result;
  char *v31;
  char *v32;
  char *v33;
  char *v34;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v33 = __dst;
  v34 = __src;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_45;
    if (__dst != a2 || &a2[8 * v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v20 = &v4[8 * v13];
    v32 = v20;
    v34 = v6;
    if (v7 >= v6 || v11 < 8)
      goto LABEL_44;
    v21 = (char *)(a3 - 8);
    v22 = v6;
    v31 = v4;
    while (1)
    {
      v23 = v21 + 8;
      v24 = v20 - 8;
      v25 = *((_QWORD *)v22 - 1);
      v22 -= 8;
      v26 = (double *)(*((_QWORD *)v20 - 1) + OBJC_IVAR___STKSticker_libraryIndex);
      swift_beginAccess();
      v27 = *v26;
      v28 = (double *)(v25 + OBJC_IVAR___STKSticker_libraryIndex);
      swift_beginAccess();
      if (*v28 >= v27)
      {
        v32 = v20 - 8;
        if (v23 >= v20 && v21 < v20)
        {
          v29 = v31;
          if (v23 != v20)
            *(_QWORD *)v21 = *(_QWORD *)v24;
          v22 = v6;
          v20 -= 8;
          goto LABEL_42;
        }
        *(_QWORD *)v21 = *(_QWORD *)v24;
        v22 = v6;
        v20 -= 8;
      }
      else
      {
        if (v23 != v6 || v21 >= v6)
          *(_QWORD *)v21 = *(_QWORD *)v22;
        v34 = v22;
      }
      v29 = v31;
LABEL_42:
      if (v22 > v7)
      {
        v21 -= 8;
        v6 = v22;
        if (v20 > v29)
          continue;
      }
      goto LABEL_44;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        v15 = *(_QWORD *)v4;
        v16 = (double *)(*(_QWORD *)v6 + OBJC_IVAR___STKSticker_libraryIndex);
        swift_beginAccess();
        v17 = *v16;
        v18 = (double *)(v15 + OBJC_IVAR___STKSticker_libraryIndex);
        swift_beginAccess();
        if (*v18 >= v17)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v33 = v4;
          v19 = v6;
        }
        else
        {
          v19 = v6 + 8;
          if (v7 < v6 || v7 >= v19 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v19;
      }
      while ((unint64_t)v19 < a3);
      v34 = v7;
    }
LABEL_44:
    sub_2479F3680(&v34, &v33, &v32);
    return 1;
  }
LABEL_45:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

void sub_2479DEC28(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x249587914);
}

uint64_t sub_2479DEC90(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v5)
      break;
    v10 = MEMORY[0x24BEE4AF8];
    result = sub_247A1B340();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x249587908](v7, a1);
      else
        v8 = (char *)*(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      sub_2479DFDF4(v8, a3);

      sub_247A1B328();
      sub_247A1B34C();
      sub_247A1B358();
      sub_247A1B334();
      if (v5 == v7)
        return v10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v5 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2479DEDC8(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = a1;
  v18 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v6 & 0xFFFFFFFFFFFFFF8;
      v17 = v6 & 0xC000000000000001;
      v15 = v6;
      while (v17)
      {
        v9 = (id)MEMORY[0x249587908](v8, v6);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v12 = a3;
        v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_247A1B328();
          sub_247A1B34C();
          v6 = v15;
          sub_247A1B358();
          sub_247A1B334();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_247A1B37C();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_2479DEF68(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_247A1B37C())
  {
    a2 += OBJC_IVAR___STKSticker_identifier;
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x249587908](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if ((sub_247A1AC5C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2479DF07C(void *a1)
{
  uint64_t v1;
  id v3;
  unint64_t v4;
  void *v5;
  _BYTE *v6;
  id v7;
  uint64_t result;
  id v9;
  uint64_t v10;

  swift_beginAccess();
  v3 = a1;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_2479DEF68(v4, (uint64_t)v3);
  swift_bridgeObjectRelease();

  if (v5)
  {
    sub_2479CF054();
    swift_allocError();
    *v6 = 4;
    swift_willThrow();
    return (uint64_t)v3;
  }
  swift_beginAccess();
  if (!(*(_QWORD *)(v1 + 16) >> 62))
  {
    v7 = v3;
LABEL_5:
    sub_2479E94F4(0, 0, (uint64_t)v3);
    swift_endAccess();
    return (uint64_t)v3;
  }
  v9 = v3;
  swift_bridgeObjectRetain();
  v10 = sub_247A1B37C();
  result = swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

unint64_t sub_2479DF1B8(unint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char v31;
  char *v32;
  unint64_t v33;
  id v34;
  id v35;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v37;
  int v38;
  void *v39;
  BOOL v40;
  unint64_t v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t *v54;
  id v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  void (*v64)(char *, uint64_t, uint64_t);
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);

  v58 = a2;
  v3 = sub_247A1AC8C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v46 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (unint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)&v46 - v13;
  v14 = *a1;
  if (*a1 >> 62)
  {
LABEL_78:
    swift_bridgeObjectRetain();
    v15 = sub_247A1B37C();
    if (v15)
      goto LABEL_3;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
    {
LABEL_3:
      v54 = a1;
      a1 = 0;
      v16 = v14 & 0xC000000000000001;
      v17 = v14;
      v14 = *(_QWORD *)(v58 + 16);
      v52 = v17;
      v53 = v16;
      v48 = v7;
      v49 = v17 + 32;
      v59 = v14;
      v47 = v12;
      v51 = v15;
      v18 = v56;
      while (1)
      {
        v19 = v53 ? (char *)MEMORY[0x249587908](a1, v52) : (char *)*(id *)(v49 + 8 * (_QWORD)a1);
        v57 = (unint64_t)a1;
        v55 = v19;
        if (v14)
          break;
        swift_bridgeObjectRetain();
        v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
        v21 = v61;
LABEL_14:
        v65(v21, 1, 1, v3);
LABEL_15:

        swift_bridgeObjectRelease();
        a1 = (unint64_t *)(v57 + 1);
        if (__OFADD__(v57, 1))
        {
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        v14 = v59;
        if (a1 == (unint64_t *)v51)
        {
          swift_bridgeObjectRelease();
          a1 = v54;
          goto LABEL_80;
        }
      }
      v60 = &v19[OBJC_IVAR___STKSticker_identifier];
      v50 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v20 = v58 + v50;
      swift_bridgeObjectRetain();
      v62 = *(_QWORD *)(v4 + 72);
      v64 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v21 = v61;
      while (1)
      {
        v64(v21, v20, v3);
        v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
        v65(v21, 0, 1, v3);
        v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
        if (v63(v21, 1, v3) == 1)
          goto LABEL_15;
        v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
        v22(v18, v21, v3);
        v23 = sub_2479DFA00();
        v7 = sub_247A1AEB4();
        v12 = v4;
        v24 = *(unint64_t **)(v4 + 8);
        ((void (*)(char *, uint64_t))v24)(v18, v3);
        if ((v7 & 1) != 0)
          break;
        v21 = v61;
        v20 += v62;
        --v14;
        v4 = v12;
        if (!v14)
          goto LABEL_14;
      }
      v60 = (char *)v23;
      v61 = (char *)v22;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v12 = v57;
      v25 = v57 + 1;
      if (__OFADD__(v57, 1))
      {
        __break(1u);
      }
      else if (!(*v54 >> 62))
      {
        v14 = *(_QWORD *)((*v54 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_21;
      }
      swift_bridgeObjectRetain();
      v14 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      v25 = v12 + 1;
LABEL_21:
      a1 = v24;
      v27 = v47;
      v26 = v48;
      v7 = (uint64_t)v61;
      if (v25 == v14)
        return v12;
      v53 = v58 + v50;
      v4 = (unint64_t)v54;
      while (2)
      {
        v28 = *(_QWORD *)v4;
        v29 = (*(_QWORD *)v4 & 0xC000000000000001) == 0;
        v56 = (char *)v25;
        v57 = v12;
        if (!v29)
        {
          v42 = (id)MEMORY[0x249587908]();
          goto LABEL_28;
        }
        if ((v25 & 0x8000000000000000) != 0)
        {
LABEL_67:
          __break(1u);
        }
        else if (v25 < *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v42 = *(id *)(v28 + 8 * v25 + 32);
LABEL_28:
          v55 = v42;
          v14 = (unint64_t)v42 + OBJC_IVAR___STKSticker_identifier;
          swift_bridgeObjectRetain();
          v12 = 0;
          v4 = v53;
          do
          {
            v64((char *)v27, v4, v3);
            v30 = v12 + 1;
            if (__OFADD__(v12, 1))
            {
              __break(1u);
              goto LABEL_67;
            }
            v65((char *)v27, 0, 1, v3);
            if (v63((char *)v27, 1, v3) == 1)
              goto LABEL_34;
            ((void (*)(uint64_t, unint64_t, uint64_t))v7)(v26, v27, v3);
            v31 = sub_247A1AEB4();
            ((void (*)(uint64_t, uint64_t))a1)(v26, v3);
            if ((v31 & 1) != 0)
            {

              swift_bridgeObjectRelease();
              v7 = (uint64_t)v54;
              v12 = v57;
              v25 = (unint64_t)(v56 + 1);
              if (__OFADD__(v56, 1))
                goto LABEL_69;
              goto LABEL_59;
            }
            ++v12;
            v7 = (uint64_t)v61;
            v4 += v62;
          }
          while (v30 != v59);
          v65((char *)v27, 1, 1, v3);
LABEL_34:

          swift_bridgeObjectRelease();
          v32 = v56;
          v12 = v57;
          v7 = (uint64_t)v54;
          if ((char *)v57 != v56)
          {
            v33 = *v54;
            if ((*v54 & 0xC000000000000001) != 0)
            {
              v14 = (unint64_t)v56;
              v4 = v57;
              v34 = (id)MEMORY[0x249587908](v57, *v54);
              v33 = *(_QWORD *)v7;
            }
            else
            {
              if ((v57 & 0x8000000000000000) != 0)
                goto LABEL_71;
              if (v57 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_72;
              v14 = (unint64_t)v56;
              v4 = v57;
              v34 = *(id *)(v33 + 8 * v57 + 32);
            }
            v55 = v34;
            if ((v33 & 0xC000000000000001) != 0)
            {
              v12 = v14;
              v35 = (id)MEMORY[0x249587908](v14, v33);
              v33 = *(_QWORD *)v7;
            }
            else
            {
              if ((v14 & 0x8000000000000000) != 0)
                goto LABEL_73;
              if (v14 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_74;
              v12 = v14;
              v35 = *(id *)(v33 + 8 * v14 + 32);
            }
            isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *(_QWORD *)v7 = v33;
            if (!isUniquelyReferenced_nonNull_bridgeObject
              || (v33 & 0x8000000000000000) != 0
              || (v33 & 0x4000000000000000) != 0)
            {
              sub_2479DEC28(v33);
            }
            v37 = *(void **)((v33 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
            *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v35;

            sub_247A1B04C();
            v14 = *(_QWORD *)v7;
            v38 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *(_QWORD *)v7 = v14;
            if (!v38 || (v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
              sub_2479DEC28(v14);
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_75;
            if (v12 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_76;
            v39 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
            *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20) = v55;

            sub_247A1B04C();
            v32 = (char *)v12;
            v12 = v4;
          }
          v40 = __OFADD__(v12++, 1);
          if (v40)
            goto LABEL_70;
          v40 = __OFADD__(v32, 1);
          v25 = (unint64_t)(v32 + 1);
          if (!v40)
          {
LABEL_59:
            v4 = v7;
            v41 = *(_QWORD *)v7;
            if (v41 >> 62)
            {
              v43 = v25;
              swift_bridgeObjectRetain();
              v14 = sub_247A1B37C();
              swift_bridgeObjectRelease();
              v25 = v43;
            }
            else
            {
              v14 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v7 = (uint64_t)v61;
            if (v25 != v14)
              continue;
            return v12;
          }
          goto LABEL_69;
        }
        break;
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
  }
  swift_bridgeObjectRelease();
LABEL_80:
  v44 = *a1;
  if (!(v44 >> 62))
    return *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v12 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2479DF8EC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR___STKSticker_identifier;
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x249587908](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = sub_247A1AC5C();

    if ((v8 & 1) != 0)
      return v5;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
      return 0;
  }
}

unint64_t sub_2479DFA00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254450700;
  if (!qword_254450700)
  {
    v1 = sub_247A1AC8C();
    result = MEMORY[0x249588058](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_254450700);
  }
  return result;
}

uint64_t sub_2479DFA48()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2479DFA6C(void *a1)
{
  uint64_t v1;

  return sub_2479DDC4C(a1, *(uint64_t (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), type metadata accessor for Sticker) & 1;
}

uint64_t sub_2479DFA90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450C30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2479DFAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2479DFB18(unint64_t a1, void **a2)
{
  unint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  unint64_t v21;

  v3 = a1;
  v4 = *a2;
  if (!*a2)
  {
    v5 = a1 >> 62;
    if (a1 >> 62)
    {
      v21 = a1 >> 62;
      if ((a1 & 0x8000000000000000) != 0)
        v9 = a1;
      else
        v9 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = sub_247A1B37C();
      swift_bridgeObjectRetain();
      v10 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (v10 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v5 >= 1)
        v18 = 1;
      else
        v18 = v5;
      if (v5 < 0)
        v6 = 1;
      else
        v6 = v18;
      swift_bridgeObjectRetain();
      v19 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (v19 < v6)
        __break(1u);
      v5 = v21;
      if ((v3 & 0xC000000000000001) == 0)
      {
LABEL_14:
        if (v5)
        {
          swift_bridgeObjectRetain();
          v9 = sub_247A1B388();
          v10 = v12;
          v5 = v13;
          v2 = v14;
          swift_bridgeObjectRelease_n();
          if ((v2 & 1) != 0)
            goto LABEL_20;
        }
        else
        {
          v9 = v3 & 0xFFFFFFFFFFFFFF8;
          v10 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
          v2 = (2 * v6) | 1;
          if ((v2 & 1) != 0)
          {
LABEL_20:
            sub_247A1B4F0();
            swift_unknownObjectRetain_n();
            v15 = swift_dynamicCastClass();
            if (!v15)
            {
              swift_unknownObjectRelease();
              v15 = MEMORY[0x24BEE4AF8];
            }
            v16 = *(_QWORD *)(v15 + 16);
            swift_release();
            if (!__OFSUB__(v2 >> 1, v5))
            {
              if (v16 == (v2 >> 1) - v5)
              {
                v3 = swift_dynamicCastClass();
                swift_unknownObjectRelease();
                if (v3)
                  return v3;
                swift_unknownObjectRelease();
                return MEMORY[0x24BEE4AF8];
              }
              goto LABEL_33;
            }
LABEL_32:
            __break(1u);
LABEL_33:
            swift_unknownObjectRelease();
          }
        }
        v3 = sub_2479D50D0(v9, v10, v5, v2);
        swift_unknownObjectRelease();
        return v3;
      }
    }
    else
    {
      if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
        v6 = 1;
      else
        v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if ((v3 & 0xC000000000000001) == 0)
        goto LABEL_14;
    }
    if (v6)
    {
      type metadata accessor for Sticker.Representation();
      v7 = 0;
      do
      {
        v8 = v7 + 1;
        sub_247A1B2F8();
        v7 = v8;
      }
      while (v6 != v8);
    }
    goto LABEL_14;
  }
  if (v4 == (void *)1)
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  if (v4 != (void *)2)
  {
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v4;
    v20[2] = sub_2479E00F0;
    v20[3] = MEMORY[0x24BDAC7A8](v11);
    swift_bridgeObjectRetain();
    sub_2479D50B4(v4);
    v3 = sub_2479DEDC8(v3, sub_2479E010C, (uint64_t)v20);
    swift_release();
    return v3;
  }
  return MEMORY[0x24BEE4AF8];
}

char *sub_2479DFDF4(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  void (*v23)(_QWORD, _QWORD);
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  double *v29;
  double v30;
  uint64_t v32;
  void *v33;
  char v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (unint64_t *)&a1[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  v33 = a2;
  v8 = swift_bridgeObjectRetain();
  v9 = sub_2479DFB18(v8, &v33);
  swift_bridgeObjectRelease();
  v10 = *v7;
  swift_bridgeObjectRetain();
  v11 = sub_2479FA6E4(v9, v10);
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    v12 = a1;
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = a1[OBJC_IVAR___STKSticker_type];
    v13 = &a1[OBJC_IVAR___STKSticker_identifier];
    v14 = sub_247A1AC8C();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v6, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
    v16 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_name];
    swift_beginAccess();
    v17 = *v16;
    v18 = v16[1];
    v32 = v17;
    v19 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_metadata];
    swift_beginAccess();
    v20 = *v19;
    v21 = (char *)v19[1];
    v22 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_externalURI];
    swift_beginAccess();
    v24 = *v22;
    v23 = (void (*)(_QWORD, _QWORD))v22[1];
    v25 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_creationDate];
    swift_beginAccess();
    v26 = *v25;
    v27 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_lastUsedDate];
    swift_beginAccess();
    v28 = *v27;
    v29 = (double *)&a1[OBJC_IVAR___STKSticker_libraryIndex];
    swift_beginAccess();
    v30 = *v29;
    objc_allocWithZone((Class)type metadata accessor for Sticker(0));
    swift_bridgeObjectRetain();
    sub_2479D935C(v20, (unint64_t)v21);
    swift_bridgeObjectRetain();
    v12 = (char *)sub_247A0296C((unsigned __int8 *)&v34, (uint64_t)v6, v9, v32, v18, 0, v20, v21, v30, v24, v23, 0, 0, 0, 0, 0, v26, 0, v28,
                    0,
                    0,
                    0);
    sub_2479D96E0(v20, (unint64_t)v21);
  }
  return v12;
}

unint64_t sub_2479E00F0(uint64_t a1)
{
  uint64_t v1;

  return (unint64_t)sub_2479DDB60(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_2479E010C(void *a1)
{
  uint64_t v1;

  return sub_2479DDC4C(a1, *(uint64_t (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for Sticker.Representation) & 1;
}

uint64_t StickerStore.__allocating_init(persistence:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  StickerStore.init(persistence:)(a1);
  return v2;
}

id sub_2479E0174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id result;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  void *v35;
  void *v36;
  uint64_t v37;
  __int128 v38;
  char v39;
  uint64_t v40;
  char v41;
  _BYTE v42[40];
  _BYTE v43[48];
  void *v44;
  void *v45;
  uint64_t v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51[3];
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[152];
  unint64_t v55;
  uint64_t v56;

  v2 = sub_247A1AC8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BEE4AF8];
  sub_2479E8EB8(0, 0, 0);
  sub_2479D9734(a1, (uint64_t)v43);
  v6 = v52;
  v33 = v53;
  v32 = __swift_project_boxed_opaque_existential_1(v51, v52);
  v7 = sub_2479D9770((uint64_t)v43, (uint64_t)v42);
  v8 = v44;
  v9 = v45;
  v34 = v43[40];
  v35 = v44;
  v36 = v45;
  v37 = v46;
  v38 = v47;
  v39 = v48;
  v40 = v49;
  v41 = v50;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t))(v12 + 16))(v11, v32, v6);
  v13 = v8;
  sub_2479D50B4(v9);
  swift_bridgeObjectRetain();
  sub_247A0930C((uint64_t)v42, (uint64_t)v11, v6, (uint64_t)v54);
  result = (id)sub_2479D8018((uint64_t)v43);
  while (1)
  {
    v15 = v55;
    v16 = v55 >> 62;
    if (v55 >> 62)
      break;
    if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_12:
    result = (id)sub_247A095C4();
    v22 = v55;
    v23 = v55 >> 62;
    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v24)
      {
LABEL_35:
        sub_247A1268C(0);
LABEL_36:
        sub_2479D97B4((uint64_t)v54);
        return (id)v56;
      }
      swift_bridgeObjectRetain();
      v25 = sub_247A1B37C();
      result = (id)swift_bridgeObjectRelease();
      if (!v25)
        goto LABEL_44;
      swift_bridgeObjectRetain();
      v26 = sub_247A1B37C();
      result = (id)swift_bridgeObjectRelease();
      if (!v26)
        goto LABEL_42;
    }
    else if (!*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_35;
    }
    if ((v22 & 0xC000000000000001) != 0)
    {
      result = (id)MEMORY[0x249587908](0, v22);
      v17 = result;
      if (!v23)
        goto LABEL_17;
    }
    else
    {
      if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_38;
      result = *(id *)(v22 + 32);
      v17 = result;
      if (!v23)
      {
LABEL_17:
        if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_40;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
    v27 = sub_247A1B37C();
    result = (id)swift_bridgeObjectRelease();
    if (!v27)
      goto LABEL_40;
LABEL_29:
    sub_2479EA0F8(0, 1);
    sub_247A1268C(v17);
    if (!v17)
      goto LABEL_36;
LABEL_30:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v17 + OBJC_IVAR___STKSticker_identifier, v2);

    v28 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2479E8EB8(0, *(_QWORD *)(v28 + 16) + 1, 1);
      v28 = v56;
    }
    v30 = *(_QWORD *)(v28 + 16);
    v29 = *(_QWORD *)(v28 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_2479E8EB8(v29 > 1, v30 + 1, 1);
      v28 = v56;
    }
    *(_QWORD *)(v28 + 16) = v30 + 1;
    result = (id)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(v28+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v30, v5, v2);
    v56 = v28;
  }
  swift_bridgeObjectRetain();
  v19 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v20 = sub_247A1B37C();
  result = (id)swift_bridgeObjectRelease();
  if (!v20)
    goto LABEL_43;
  swift_bridgeObjectRetain();
  v21 = sub_247A1B37C();
  result = (id)swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_41;
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    result = (id)MEMORY[0x249587908](0, v15);
    v17 = result;
    if (v16)
      goto LABEL_20;
LABEL_7:
    v18 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
    if (!v18)
      goto LABEL_39;
    sub_2479EA0F8(0, 1);
    goto LABEL_30;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    result = *(id *)(v15 + 32);
    v17 = result;
    if (!v16)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRetain();
    v18 = sub_247A1B37C();
    result = (id)swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2479E061C()
{
  uint64_t result;

  result = sub_247A1AEC0();
  qword_254450AA0 = result;
  return result;
}

id static StickerStore.stickersDidChange.getter()
{
  if (qword_254450AB0 != -1)
    swift_once();
  return (id)qword_254450AA0;
}

uint64_t sub_2479E0690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v2 = v0;
    if (qword_254450AB0 != -1)
      swift_once();
    v3 = (void *)qword_254450AA0;
    v4 = (void *)objc_opt_self();
    v5 = v3;
    swift_retain();
    v6 = objc_msgSend(v4, sel_currentEnvironment);
    v7 = objc_msgSend(v6, sel_notificationCenter);

    _s33CoalescingNotificationBroadcasterCMa();
    swift_allocObject();
    v1 = sub_247A06620(v5, v2, v7);
    *(_QWORD *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t StickerStore.init(persistence:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v4;

  *(_QWORD *)(v1 + 56) = 0;
  sub_2479E07E8(a1);
  sub_2479CD960(a1, (uint64_t (*)(_QWORD))type metadata accessor for StickerStore.PersistenceType);
  sub_2479E0B28(&v4, v1 + 16);
  return v1;
}

void sub_2479E07E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v2 = sub_247A1AB9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for StickerStore.PersistenceType();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2479CD904(a1, (uint64_t)v7, v8);
  v9 = (char *)sub_2479E08EC
     + 4 * byte_247A1D150[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 3, v2)];
  __asm { BR              X10 }
}

uint64_t sub_2479E08EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v4, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 2, v2);
  v6 = type metadata accessor for CoreDataDataMapper(0);
  v7 = swift_allocObject();
  v8 = OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_lock;
  *(_QWORD *)(v7 + v8) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE192E0]), sel_init);
  v9 = v7 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container;
  v10 = type metadata accessor for StickerContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_2479EB304(v1, v7 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_storeType);
  v0[3] = v6;
  v0[4] = (uint64_t)&off_251912598;
  *v0 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
}

uint64_t type metadata accessor for StickerStore.PersistenceType()
{
  uint64_t result;

  result = qword_254450A30;
  if (!qword_254450A30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2479E0B28(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t StickerStore.__allocating_init(dataMappper:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = 0;
  sub_2479E0B28(a1, v2 + 16);
  return v2;
}

uint64_t StickerStore.init(dataMappper:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = 0;
  sub_2479E0B28(a1, v1 + 16);
  return v1;
}

uint64_t sub_2479E0BA4(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  _QWORD *v14;
  unsigned __int8 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  double *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[8];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  _QWORD *v54;
  unsigned __int8 v55;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v40 = (double *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)((char *)&v31 - v6);
  v8 = *a1;
  v9 = *((_QWORD *)a1 + 2);
  v43 = *((_QWORD *)a1 + 1);
  v10 = v43;
  v44 = v9;
  v11 = *((_QWORD *)a1 + 4);
  v12 = *((_QWORD *)a1 + 5);
  v45 = *((_QWORD *)a1 + 3);
  v46 = v12;
  v13 = a1[48];
  v33 = v13;
  v14 = (_QWORD *)*((_QWORD *)a1 + 7);
  v15 = a1[64];
  v32 = v15;
  v41 = v5;
  v16 = (char *)&v31 + *(int *)(v5 + 48) - v6;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v36 = *(int *)(v34 + 48);
  v47[0] = v8;
  v48 = v10;
  v17 = v44;
  v18 = v45;
  v49 = v44;
  v50 = v45;
  v51 = v11;
  v52 = v46;
  v53 = v13;
  v54 = v14;
  v55 = v15;
  v19 = sub_247A0FBB0(v16, v47);
  v21 = v20;
  v42 = v7;
  *(double *)v7 = v20;
  v39 = v16;
  v38 = v19;
  *(_QWORD *)&v16[v36] = v19;
  v22 = v37[5];
  v23 = v37[6];
  __swift_project_boxed_opaque_existential_1(v37 + 2, v22);
  v35 = v8;
  v47[0] = v8;
  v48 = v43;
  v49 = v17;
  LOBYTE(v16) = v32;
  v50 = v18;
  v51 = v11;
  v36 = v11;
  v52 = v46;
  LOBYTE(v18) = v33;
  v53 = v33;
  v37 = v14;
  v54 = v14;
  v55 = v32;
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 8))(v47, v22, v23);
  v47[0] = v35;
  v48 = v43;
  v49 = v44;
  v50 = v45;
  v51 = v36;
  v52 = v46;
  v53 = v18;
  v54 = v37;
  v55 = v16;
  v25 = (uint64_t)v40 + *(int *)(v41 + 48);
  v26 = *(int *)(v34 + 48);
  *v40 = v21;
  v27 = sub_247A1AD34();
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v25, v39, v27);
  v29 = v38;
  *(_QWORD *)(v25 + v26) = v38;
  swift_retain();
  sub_247A13168((uint64_t)v47, v25, v29, v21);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v25, v27);
  sub_2479D045C((uint64_t)v42, &qword_254450BC0);
  return v24;
}

uint64_t sub_2479E0E44@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  void *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  char *v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  double *v68;
  char *v69;
  char *v70;
  void *v71;
  void *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  ValueMetadata *v79;
  unint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD v88[2];
  uint64_t v89;
  char v90[8];

  v60 = a2;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v3 = MEMORY[0x24BDAC7A8](v76);
  v65 = (uint64_t *)((char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v6 = (double *)((char *)&v58 - v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v70 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v58 - v11;
  v73 = *a1;
  v72 = (void *)*((_QWORD *)a1 + 1);
  v13 = *((_QWORD *)a1 + 3);
  v71 = (void *)*((_QWORD *)a1 + 2);
  v14 = *((_QWORD *)a1 + 5);
  v77 = *((_QWORD *)a1 + 4);
  v15 = a1[48];
  v75 = *((_QWORD *)a1 + 7);
  v74 = a1[64];
  v16 = *(int *)(v10 + 48);
  if (qword_254450A90 != -1)
    swift_once();
  v17 = type metadata accessor for StickerSignposter();
  v64 = __swift_project_value_buffer(v17, (uint64_t)qword_254452038);
  v18 = sub_247A0F98C((uint64_t)v12, "fetch stickers", 14, 2);
  v69 = v12;
  v66 = v16;
  *(_QWORD *)&v12[v16] = v18;
  v19 = (char *)v6 + *(int *)(v76 + 48);
  v67 = v7;
  v20 = *(int *)(v7 + 48);
  v21 = v73;
  LOBYTE(v81) = v73;
  v22 = v72;
  *((_QWORD *)&v81 + 1) = v72;
  v23 = v71;
  *(_QWORD *)&v82 = v71;
  *((_QWORD *)&v82 + 1) = v13;
  *(_QWORD *)&v83 = v77;
  *((_QWORD *)&v83 + 1) = v14;
  LOBYTE(v84) = v15;
  *((_QWORD *)&v84 + 1) = v75;
  LOBYTE(v85) = v74;
  result = sub_247A0FBC4(v19, (char *)&v81);
  *(_QWORD *)v6 = v25;
  v63 = v19;
  v62 = v20;
  *(_QWORD *)&v19[v20] = result;
  v26 = v21;
  v27 = v22;
  v28 = v13;
  v68 = v6;
  if ((v15 & 1) != 0)
  {
    v29 = v14;
    v30 = 0x7FFFFFFFFFFFFFFFLL;
    v31 = v77;
LABEL_7:
    sub_2479D9770(v61 + 16, (uint64_t)v90);
    sub_2479D9770((uint64_t)v90, (uint64_t)&v81);
    BYTE8(v83) = v26;
    v33 = v27;
    *(_QWORD *)&v84 = v27;
    *((_QWORD *)&v84 + 1) = v23;
    *(_QWORD *)&v85 = v28;
    *((_QWORD *)&v85 + 1) = v31;
    v59 = v29;
    *(_QWORD *)&v86 = v29;
    BYTE8(v86) = v15;
    v34 = v75;
    *(_QWORD *)&v87 = v75;
    v35 = v74;
    BYTE8(v87) = v74;
    v79 = &type metadata for RangeGenerator;
    v80 = sub_2479EA3F0();
    v36 = swift_allocObject();
    *(_QWORD *)&v78 = v36;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v30;
    *(_QWORD *)(v36 + 32) = v34;
    *(_BYTE *)(v36 + 40) = v35;
    v37 = v33;
    sub_2479D50B4(v23);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v90);
    sub_2479E0B28(&v78, (uint64_t)v88);
    v38 = v88[0];
    v39 = v60;
    *(_OWORD *)(v60 + 96) = v87;
    *(_OWORD *)(v39 + 112) = v38;
    *(_OWORD *)(v39 + 128) = v88[1];
    *(_QWORD *)(v39 + 144) = v89;
    v40 = v84;
    *(_OWORD *)(v39 + 32) = v83;
    *(_OWORD *)(v39 + 48) = v40;
    v41 = v86;
    *(_OWORD *)(v39 + 64) = v85;
    *(_OWORD *)(v39 + 80) = v41;
    v42 = v82;
    *(_OWORD *)v39 = v81;
    *(_OWORD *)(v39 + 16) = v42;
    LOBYTE(v81) = v26;
    *((_QWORD *)&v81 + 1) = v33;
    *(_QWORD *)&v82 = v23;
    *((_QWORD *)&v82 + 1) = v28;
    *(_QWORD *)&v83 = v31;
    *((_QWORD *)&v83 + 1) = v59;
    LOBYTE(v84) = v15;
    *((_QWORD *)&v84 + 1) = v34;
    LOBYTE(v85) = v35;
    v43 = (uint64_t)v65 + *(int *)(v76 + 48);
    v44 = v67;
    v45 = *(int *)(v67 + 48);
    v46 = (uint64_t)v68;
    v47 = *v68;
    *v65 = *(_QWORD *)v68;
    v48 = sub_247A1AD34();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 16);
    v51 = v63;
    v50(v43, v63, v48);
    v52 = *(_QWORD *)&v51[v62];
    *(_QWORD *)(v43 + v45) = v52;
    swift_retain();
    sub_247A13174((uint64_t)&v81, v43, v52, v47);
    swift_release();
    v53 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v53(v43, v48);
    sub_2479D045C(v46, &qword_254450BC0);
    v54 = *(int *)(v44 + 48);
    v55 = (uint64_t)v70;
    v56 = (uint64_t)v69;
    v50((uint64_t)v70, v69, v48);
    v57 = *(_QWORD *)(v56 + v66);
    *(_QWORD *)(v55 + v54) = v57;
    swift_retain();
    sub_247A12024("fetch stickers", 14, 2, v55, v57);
    swift_release();
    v53(v55, v48);
    return sub_2479D045C(v56, (uint64_t *)&unk_254450A80);
  }
  v29 = v14;
  v31 = v77;
  v32 = __OFADD__(v14, v77);
  v30 = v14 + v77;
  if (!v32)
  {
    if (v30 >= v77)
      goto LABEL_7;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2479E13A8(char *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v5[4];
  __int128 v6;
  char v7;
  uint64_t v8;
  char v9;
  _BYTE v10[8];
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;

  v18 = *a1;
  v5[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v18, 0, v5, 0, 0, 0, 1, 8, (uint64_t)v10, 0);
  v2 = v11;
  v1 = v12;
  LOBYTE(v5[0]) = v10[0];
  v5[1] = v11;
  v5[2] = v12;
  v5[3] = v13;
  v6 = v14;
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v3 = sub_2479E0BA4((unsigned __int8 *)v5);

  sub_2479D5080(v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2479E147C(uint64_t a1, char *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v12;
  uint64_t v13;
  char v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[3];
  uint64_t v19;
  uint64_t v20;

  v6 = *a2;
  v7 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450990);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_247A1C690;
  *(_QWORD *)(v8 + 32) = a1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2C60);
  v17 = sub_2479D96F4(&qword_2576D2C68, &qword_2576D2C60, MEMORY[0x24BEE12C8]);
  v15[0] = v8;
  v14 = v6;
  v13 = v7;
  sub_2479E195C(v15, &v14, &v13, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  if (!v4)
  {
    v9 = v19;
    v10 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v15[2] = v9;
    v16 = v10;
    sub_247A1AFE0();
    v3 = v13;
    if (!v13)
    {
      sub_2479CF054();
      swift_allocError();
      *v12 = 1;
      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  return v3;
}

id sub_2479E15E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[8];
  void *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  char v29;
  _BYTE v30[40];
  _BYTE v31[48];
  void *v32;
  void *v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39[3];
  uint64_t v40;
  _BYTE v41[152];
  unint64_t v42;

  sub_2479D9734(v0, (uint64_t)v31);
  v1 = v40;
  v2 = __swift_project_boxed_opaque_existential_1(v39, v40);
  v3 = sub_2479D9770((uint64_t)v31, (uint64_t)v30);
  v5 = v32;
  v4 = v33;
  v22[0] = v31[40];
  v23 = v32;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v27 = v36;
  v28 = v37;
  v29 = v38;
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v8 + 16))(v7, v2, v1);
  v9 = v5;
  sub_2479D50B4(v4);
  swift_bridgeObjectRetain();
  sub_247A0930C((uint64_t)v30, (uint64_t)v7, v1, (uint64_t)v41);
  sub_2479D8018((uint64_t)v31);
  v10 = v42;
  v11 = v42 >> 62;
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRetain();
      v14 = sub_247A1B37C();
      result = (id)swift_bridgeObjectRelease();
      if (!v14)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
      v16 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_3:
        if ((v10 & 0xC000000000000001) != 0)
        {
          v12 = (id)MEMORY[0x249587908](0, v10);
          if (!v11)
          {
LABEL_6:
            if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_7:
              sub_2479EA0F8(0, 1);
LABEL_29:
              sub_2479D97B4((uint64_t)v41);
              return v12;
            }
            goto LABEL_21;
          }
        }
        else
        {
          if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
          v12 = *(id *)(v10 + 32);
          if (!v11)
            goto LABEL_6;
        }
        swift_bridgeObjectRetain();
        v17 = sub_247A1B37C();
        swift_bridgeObjectRelease();
        if (v17)
          goto LABEL_7;
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      __break(1u);
    }
  }
  else if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  result = (id)sub_247A095C4();
  v10 = v42;
  v11 = v42 >> 62;
  if (!(v42 >> 62))
  {
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_14;
LABEL_27:
    v12 = 0;
    goto LABEL_28;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  v18 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_27;
  swift_bridgeObjectRetain();
  v19 = sub_247A1B37C();
  result = (id)swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = sub_247A1B37C();
    result = (id)swift_bridgeObjectRelease();
    if (!v20)
    {
      __break(1u);
      goto LABEL_27;
    }
LABEL_14:
    if ((v10 & 0xC000000000000001) != 0)
    {
      result = (id)MEMORY[0x249587908](0, v10);
      v12 = result;
      if (!v11)
      {
LABEL_17:
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_18:
          sub_2479EA0F8(0, 1);
LABEL_28:
          sub_247A1268C(v12);
          goto LABEL_29;
        }
        goto LABEL_32;
      }
    }
    else
    {
      if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      result = *(id *)(v10 + 32);
      v12 = result;
      if (!v11)
        goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    v21 = sub_247A1B37C();
    result = (id)swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_18;
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2479E195C@<X0>(_QWORD *a1@<X0>, char *a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *boxed_opaque_existential_1;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE *v44;
  _BYTE v45[12];
  int v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[32];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[2];
  uint64_t v65;
  char v66[40];
  void *v67;
  __int128 v68;
  _BYTE v69[24];
  char v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;

  v5 = v4;
  v50 = a4;
  v48 = sub_247A1ACBC();
  v51 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v52 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_247A1ACD4();
  v73 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *a2;
  *(_QWORD *)&v49 = *a3;
  v14 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x24BDAC7A8](v14);
  (*(void (**)(_BYTE *))(v16 + 16))(&v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_2479CDA10(&qword_2576D2C70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF428], MEMORY[0x24BDCF468]);
  v54 = v10;
  sub_247A1B250();
  v66[0] = v13;
  v67 = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v66, 0, &v67, 0, 0, 0, 1, 8, (uint64_t)v58, 0);
  v18 = *(void **)&v58[8];
  v17 = *(void **)&v58[16];
  LOBYTE(v67) = v58[0];
  v68 = *(_OWORD *)&v58[8];
  *(_QWORD *)v69 = *(_QWORD *)&v58[24];
  *(_OWORD *)&v69[8] = v59;
  v70 = v60;
  v71 = *((_QWORD *)&v60 + 1);
  v72 = v61;
  v19 = v5;
  v20 = v53;
  v21 = sub_2479E0BA4((unsigned __int8 *)&v67);
  v53 = v20;
  if (v20)
  {

    sub_2479D5080(v17);
    swift_bridgeObjectRelease();
    v22 = v12;
  }
  else
  {
    v23 = v21;
    *(_QWORD *)&v47 = v19;
    v24 = v52;

    sub_2479D5080(v17);
    swift_bridgeObjectRelease();
    v22 = v12;
    v25 = sub_247A1ACB0();
    if ((v26 & 1) == 0 && (v25 & 0x8000000000000000) == 0 && v25 < v23)
    {
      v27 = sub_247A1ACA4();
      if ((v28 & 1) == 0 && (v27 & 0x8000000000000000) == 0 && v27 < v23)
      {
        sub_2479D9770(v47 + 16, (uint64_t)v66);
        LOBYTE(v55) = v13;
        *(_QWORD *)v58 = v49;
        sub_2479D50B4((id)v49);
        Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)&v55, 0, (void **)v58, 0, 0, 0, 1, 8, (uint64_t)&v67, 0);
        v29 = (char)v67;
        v49 = v68;
        v47 = *(_OWORD *)v69;
        v30 = *(_QWORD *)&v69[16];
        v31 = v70;
        v32 = v71;
        v46 = v72;
        v33 = v24;
        v34 = v22;
        sub_247A1ACC8();
        v35 = v50;
        v50[3] = (uint64_t)&type metadata for StickerSequence;
        v35[4] = sub_2479EA444();
        v36 = swift_allocObject();
        *v35 = v36;
        sub_2479D9770((uint64_t)v66, (uint64_t)v58);
        BYTE8(v59) = v29;
        v60 = v49;
        v61 = v47;
        *(_QWORD *)&v62 = v30;
        BYTE8(v62) = v31;
        *(_QWORD *)&v63 = v32;
        BYTE8(v63) = v46;
        v37 = v48;
        v56 = v48;
        v57 = sub_2479CDA10(&qword_2576D2C80, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF3E8], MEMORY[0x24BDCF3F8]);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v55);
        (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v51 + 32))(boxed_opaque_existential_1, v33, v37);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v66);
        sub_2479E0B28(&v55, (uint64_t)v64);
        v39 = v64[0];
        *(_OWORD *)(v36 + 112) = v63;
        *(_OWORD *)(v36 + 128) = v39;
        *(_OWORD *)(v36 + 144) = v64[1];
        *(_QWORD *)(v36 + 160) = v65;
        v40 = v60;
        *(_OWORD *)(v36 + 48) = v59;
        *(_OWORD *)(v36 + 64) = v40;
        v41 = v62;
        *(_OWORD *)(v36 + 80) = v61;
        *(_OWORD *)(v36 + 96) = v41;
        v42 = *(_OWORD *)&v58[16];
        *(_OWORD *)(v36 + 16) = *(_OWORD *)v58;
        *(_OWORD *)(v36 + 32) = v42;
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v34, v54);
      }
    }
    sub_2479CF054();
    swift_allocError();
    *v44 = 1;
    swift_willThrow();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v22, v54);
}

id sub_2479E1DB4(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v13[8];
  void *v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  void *v21[19];
  unsigned __int8 v22[8];
  id v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  char v29;

  v4 = v2;
  v5 = *a2;
  v13[0] = 2;
  v21[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v13, 0, v21, 0, 0, 0, 1, 8, (uint64_t)v22, 0);
  v6 = v24;
  sub_2479D50B4(v5);
  sub_2479D5080(v6);
  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_247A1C830;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2479D4FF8();
  *(_QWORD *)(v7 + 32) = 0x696669746E656469;
  *(_QWORD *)(v7 + 40) = 0xEA00000000007265;
  v8 = sub_247A1AC50();
  *(_QWORD *)(v7 + 96) = sub_2479D032C(0, &qword_254450BE0);
  *(_QWORD *)(v7 + 104) = sub_2479D9EA0();
  *(_QWORD *)(v7 + 72) = v8;
  v9 = (void *)sub_247A1B0F4();

  v13[0] = v22[0];
  v14 = v9;
  v15 = v5;
  v16 = v25;
  v17 = v26;
  v18 = v27;
  v19 = v28;
  v20 = v29;
  v10 = v9;
  sub_2479D50B4(v5);
  swift_bridgeObjectRetain();
  v11 = v4;
  sub_2479E0E44((unsigned __int8 *)v13, (uint64_t)v21);

  sub_2479D5080(v5);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = sub_2479E15E0();
    sub_2479D8018((uint64_t)v21);

  }
  sub_2479D5080(v5);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_2479E1FE4@<X0>(_QWORD *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v21;
  unsigned __int8 v22[8];
  void *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  char v29;
  _OWORD v30[9];
  uint64_t v31;
  unsigned __int8 v32[8];
  id v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;

  v40 = a3;
  v5 = *a2;
  v22[0] = 2;
  *(_QWORD *)&v30[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)v22, 0, (void **)v30, 0, 0, 0, 1, 8, (uint64_t)v32, v21);
  v6 = v34;
  sub_2479D50B4(v5);
  sub_2479D5080(v6);
  v34 = v5;
  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_247A1C830;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2479D4FF8();
  *(_QWORD *)(v7 + 32) = 0x696669746E656469;
  *(_QWORD *)(v7 + 40) = 0xEA00000000007265;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(unsigned __int8 *))(v10 + 16))(&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_247A1AC8C();
  v11 = sub_247A1B07C();
  *(_QWORD *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B88);
  *(_QWORD *)(v7 + 104) = sub_2479D96F4((unint64_t *)&qword_2576D2B90, &qword_2576D2B88, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v7 + 72) = v11;
  v12 = (void *)sub_247A1B0F4();

  v22[0] = v32[0];
  v23 = v12;
  v24 = v5;
  v25 = v35;
  v26 = v36;
  v27 = v37;
  v28 = v38;
  v29 = v39;
  v13 = v12;
  sub_2479D50B4(v5);
  swift_bridgeObjectRetain();
  sub_2479E0E44(v22, (uint64_t)v30);

  sub_2479D5080(v5);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = v40;
    v40[3] = (uint64_t)&type metadata for StickerSequence;
    v14[4] = sub_2479EA444();
    v15 = swift_allocObject();
    *v14 = v15;
    v16 = v30[7];
    *(_OWORD *)(v15 + 112) = v30[6];
    *(_OWORD *)(v15 + 128) = v16;
    *(_OWORD *)(v15 + 144) = v30[8];
    *(_QWORD *)(v15 + 160) = v31;
    v17 = v30[3];
    *(_OWORD *)(v15 + 48) = v30[2];
    *(_OWORD *)(v15 + 64) = v17;
    v18 = v30[5];
    *(_OWORD *)(v15 + 80) = v30[4];
    *(_OWORD *)(v15 + 96) = v18;
    v19 = v30[1];
    *(_OWORD *)(v15 + 16) = v30[0];
    *(_OWORD *)(v15 + 32) = v19;

  }
  sub_2479D5080(v5);
  return swift_bridgeObjectRelease();
}

id sub_2479E22E0(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  char *v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29[8];
  void *v30;
  void *v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  char v36;
  void *v37[19];
  unsigned __int8 v38[8];
  id v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  char v45;
  void *v46;

  v6 = sub_247A1AC8C();
  v24[1] = *(_QWORD *)(v6 - 8);
  v24[2] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24[0] = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Sticker.URIType(0);
  v8 = MEMORY[0x24BDAC7A8](v26);
  v25 = (uint64_t)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v27 = (char *)v24 - v10;
  v11 = *a3;
  v29[0] = 2;
  v37[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v29, 0, v37, 0, 0, 0, 1, 8, (uint64_t)v38, 0);
  v12 = v40;
  sub_2479D50B4(v11);
  sub_2479D5080(v12);
  v40 = v11;
  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_247A1C830;
  v14 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
  v15 = sub_2479D4FF8();
  *(_QWORD *)(v13 + 32) = 0x6C616E7265747865;
  *(_QWORD *)(v13 + 40) = 0xEB00000000495255;
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 72) = a1;
  *(_QWORD *)(v13 + 80) = a2;
  swift_bridgeObjectRetain();
  v16 = (void *)sub_247A1B0F4();

  v39 = v16;
  v29[0] = v38[0];
  v30 = v16;
  v31 = v11;
  v32 = v41;
  v33 = v42;
  v34 = v43;
  v35 = v44;
  v36 = v45;
  v17 = v16;
  sub_2479D50B4(v11);
  swift_bridgeObjectRetain();
  v18 = v46;
  v19 = v28;
  sub_2479E0E44((unsigned __int8 *)v29, (uint64_t)v37);
  if (v19)
  {

    sub_2479D5080(v11);
    swift_bridgeObjectRelease();
    sub_2479D5080(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
    v20 = v27;

    sub_2479D5080(v11);
    swift_bridgeObjectRelease();
    v21 = sub_2479E15E0();
    if (!v21)
    {
      type metadata accessor for Sticker(0);
      sub_2479FF3E0(v20);
      sub_2479CD904((uint64_t)v20, v25, type metadata accessor for Sticker.URIType);
      v23 = (char *)sub_2479E2634 + 4 * byte_247A1D154[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v18 = v21;
    sub_2479D8018((uint64_t)v37);

    sub_2479D5080(v11);
    swift_bridgeObjectRelease();
  }
  return v18;
}

void sub_2479E2634()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 32))(*v0, v3, v7);
  v0[8] = 0;
  sub_2479E1DB4(v6, (void **)v0 + 8);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    sub_2479CD960(v1, type metadata accessor for Sticker.URIType);
    sub_2479D8018((uint64_t)(v0 + 17));
    v8 = *(void **)(v4 - 144);

    sub_2479D5080(v8);
    JUMPOUT(0x2479E2550);
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  sub_2479CD960(v1, type metadata accessor for Sticker.URIType);
  sub_2479D8018((uint64_t)(v0 + 17));
  JUMPOUT(0x2479E2594);
}

unint64_t sub_2479E27E0(uint64_t a1, uint64_t a2, void **a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char v21[8];
  void *v22;
  void *v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  char v28;
  void *v29[19];
  unsigned __int8 v30[8];
  id v31;
  void *v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  char v37;

  v5 = v3;
  v8 = *a3;
  v21[0] = 2;
  v29[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v21, 0, v29, 0, 0, 0, 1, 8, (uint64_t)v30, 0);
  v9 = v32;
  sub_2479D50B4(v8);
  sub_2479D5080(v9);
  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_247A1C830;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v12 = sub_2479D4FF8();
  *(_QWORD *)(v10 + 32) = 0x6C616E7265747865;
  *(_QWORD *)(v10 + 40) = 0xEB00000000495255;
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 72) = a1;
  *(_QWORD *)(v10 + 80) = a2;
  swift_bridgeObjectRetain();
  v13 = (void *)sub_247A1B0F4();

  v21[0] = v30[0];
  v22 = v13;
  v23 = v8;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v27 = v36;
  v28 = v37;
  v14 = v13;
  sub_2479D50B4(v8);
  swift_bridgeObjectRetain();
  v15 = v5;
  sub_2479E0E44((unsigned __int8 *)v21, (uint64_t)v29);

  sub_2479D5080(v8);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_2479E97CC((uint64_t)v29);
    v15 = v16;
    sub_2479D8018((uint64_t)v29);
    if ((v15 & 0x8000000000000000) != 0 || (v15 & 0x4000000000000000) != 0)
    {
      swift_retain();
      v18 = sub_247A1B37C();
      swift_release();
      if (v18)
        goto LABEL_6;
    }
    else if (*(_QWORD *)(v15 + 16))
    {
LABEL_6:

      sub_2479D5080(v8);
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_release();
    v29[0] = 0;
    v19 = sub_2479E22E0(a1, a2, v29);
    if (v19)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_247A1D2A0;
      *(_QWORD *)(v20 + 32) = v19;
      v29[0] = (void *)v20;
      sub_247A1B04C();
      v15 = (unint64_t)v29[0];
    }
    else
    {
      v15 = MEMORY[0x24BEE4AF8];
    }
    goto LABEL_6;
  }

  swift_bridgeObjectRelease();
  sub_2479D5080(v8);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2479E2AAC@<X0>(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v11[4];
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  _BYTE v17[8];
  id v18;
  void *v19;
  void *v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  char v24;

  v5 = *a2;
  v16 = 2;
  v11[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v16, 0, v11, 0, 0, 0, 1, 8, (uint64_t)v17, 0);
  v6 = v19;
  sub_2479D50B4(v5);
  sub_2479D5080(v6);
  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_247A1C830;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2479D4FF8();
  *(_QWORD *)(v7 + 32) = 0x6C616E7265747865;
  *(_QWORD *)(v7 + 40) = 0xEB00000000495255;
  *(_QWORD *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B98);
  *(_QWORD *)(v7 + 104) = sub_2479D96F4(&qword_2576D2BA0, &qword_2576D2B98, MEMORY[0x24BDCFBF8]);
  *(_QWORD *)(v7 + 72) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_247A1B0F4();

  LOBYTE(v11[0]) = v17[0];
  v11[1] = v8;
  v11[2] = v5;
  v11[3] = v20;
  v12 = v21;
  v13 = v22;
  v14 = v23;
  v15 = v24;
  v9 = v8;
  sub_2479D50B4(v5);
  swift_bridgeObjectRetain();
  sub_2479E0E44((unsigned __int8 *)v11, a3);

  sub_2479D5080(v5);
  swift_bridgeObjectRelease();
  sub_2479D5080(v5);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_2479E2CB4(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  void **v14;
  void *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t inited;
  void *v30;
  char *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _BYTE *result;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[12];
  unsigned __int8 v65[48];
  id v66;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v4);
  if ((a1[OBJC_IVAR___STKSticker_type] & 1) == 0)
  {
    sub_2479CF054();
    swift_allocError();
    *v35 = 5;
    swift_willThrow();
    return a1;
  }
  v49 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v2;
  v6 = (unint64_t *)&a1[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  v58 = *v6;
  v7 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_name];
  swift_beginAccess();
  v8 = v7[1];
  v61 = *v7;
  v9 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_metadata];
  swift_beginAccess();
  v10 = *v9;
  v54 = v9[1];
  v55 = v10;
  v11 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_externalURI];
  swift_beginAccess();
  v60 = *v11;
  v52 = v11[1];
  v12 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_accessibilityName];
  swift_beginAccess();
  v13 = v12[1];
  v56 = *v12;
  v14 = (void **)&a1[OBJC_IVAR___STKSticker_attributionInfo];
  swift_beginAccess();
  v15 = *v14;
  v16 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  v57 = *v16;
  v66 = (id)v16[1];
  v63 = v1;
  v17 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  v18 = v17[1];
  v59 = *v17;
  v53 = v18;
  v65[0] = 0;
  v51 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  v19 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v54;
  v21 = v55;
  sub_2479D935C(v55, v54);
  swift_bridgeObjectRetain();
  v22 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = v15;
  swift_bridgeObjectRetain();
  v23 = (char *)sub_247A032BC(v65, v19, v61, v8, v21, v20, v60, v22, v56, v13, v15);

  sub_2479D96E0(v21, v20);
  v24 = &v23[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  v25 = v66;
  *(_QWORD *)v24 = v57;
  *((_QWORD *)v24 + 1) = v25;
  v26 = v23;
  swift_bridgeObjectRelease();
  v27 = &v26[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  v28 = v53;
  *(_QWORD *)v27 = v59;
  *((_QWORD *)v27 + 1) = v28;

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247A1D2B0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = v26;
  v64[0] = inited;
  sub_247A1B04C();
  v30 = (void *)v64[0];
  v31 = v26;
  v32 = a1;
  v33 = v62;
  v34 = sub_2479E3648((unint64_t)v30);
  swift_bridgeObjectRelease();
  if (v33)
  {

    return a1;
  }
  if ((v34 & 0xC000000000000001) != 0)
  {
    a1 = (_BYTE *)MEMORY[0x249587908](0, v34);
    v38 = (char *)MEMORY[0x249587908](1, v34);
LABEL_9:
    v39 = v38;
    swift_bridgeObjectRelease();
    v66 = v39;
    v40 = &v39[OBJC_IVAR___STKSticker_identifier];
    v41 = sub_247A1AC8C();
    v42 = *(_QWORD *)(v41 - 8);
    v43 = (uint64_t)v49;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v49, v40, v41);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
    v44 = (uint64_t)&a1[OBJC_IVAR___STKSticker__companionRecentUUID];
    swift_beginAccess();
    sub_2479EA85C(v43, v44);
    swift_endAccess();
    v45 = sub_2479E0690();
    LOBYTE(v64[0]) = 0;
    v46 = *(void **)(v45 + 64);
    objc_msgSend(v46, sel_lock);
    sub_247A06734(v45, v64);
    objc_msgSend(v46, sel_unlock);
    if ((v64[0] & 1) != 0)
    {
      objc_msgSend(*(id *)(v45 + 32), sel_postNotificationName_object_, *(_QWORD *)(v45 + 16), swift_weakLoadStrong());

      swift_release();
    }
    else
    {

    }
    swift_release();

    return a1;
  }
  v36 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v36)
  {
    if (v36 != 1)
    {
      v37 = *(void **)(v34 + 40);
      a1 = *(id *)(v34 + 32);
      v38 = v37;
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = objc_msgSend(v30, sel_unlock);
  __break(1u);
  return result;
}

uint64_t sub_2479E325C(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *inited;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  id v35;
  char *v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  _QWORD v43[3];
  uint64_t v44;
  _UNKNOWN **v45;
  __int128 v46[3];

  v2 = v1;
  v37 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (double *)((char *)&v34 - v8);
  v10 = (char *)&v34 + *(int *)(v7 + 48) - v8;
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v11 = *(int *)(v39 + 48);
  v12 = sub_247A0FE8C(v10, a1);
  *(_QWORD *)v9 = v13;
  v38 = v11;
  *(_QWORD *)&v10[v11] = v12;
  sub_2479D9770(v2 + 16, (uint64_t)v46);
  v14 = type metadata accessor for StickerStore();
  v44 = v14;
  v45 = &off_251912688;
  v43[0] = v2;
  type metadata accessor for StickerStore.AddStickerMethod();
  inited = (_QWORD *)swift_initStackObject();
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *))(v19 + 16))(v18);
  inited[7] = *v18;
  inited[10] = v14;
  inited[11] = &off_251912688;
  sub_2479E0B28(v46, (uint64_t)(inited + 2));
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  v20 = v40;
  v40 = sub_2479E7FF8((uint64_t)v37);
  if (v20)
  {
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    v21 = (uint64_t)v41 + *(int *)(v4 + 48);
    v22 = *(int *)(v39 + 48);
    v23 = *v9;
    *v41 = *(_QWORD *)v9;
    v24 = sub_247A1AD34();
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v21, v10, v24);
    v26 = *(_QWORD *)&v10[v38];
  }
  else
  {
    v37 = v9;
    v36 = v10;
    v27 = v38;
    v28 = (_QWORD *)sub_2479E0690();
    v42 = 0;
    v29 = (void *)v28[8];
    objc_msgSend(v29, sel_lock);
    sub_247A06734((uint64_t)v28, &v42);
    objc_msgSend(v29, sel_unlock);
    v30 = v4;
    if ((v42 & 1) != 0)
    {
      v35 = (id)v28[4];
      objc_msgSend(v35, sel_postNotificationName_object_, v28[2], swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    v31 = v27;
    v32 = v36;
    v9 = v37;
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    v21 = (uint64_t)v41 + *(int *)(v30 + 48);
    v22 = *(int *)(v39 + 48);
    v23 = *v9;
    *v41 = *(_QWORD *)v9;
    v24 = sub_247A1AD34();
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v21, v32, v24);
    v26 = *(_QWORD *)&v32[v31];
  }
  *(_QWORD *)(v21 + v22) = v26;
  swift_retain();
  sub_247A13AA0(v21, v26, v23);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v24);
  sub_2479D045C((uint64_t)v9, &qword_254450BC0);
  return v40;
}

uint64_t sub_2479E3648(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *inited;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD v42[3];
  uint64_t v43;
  _UNKNOWN **v44;
  __int128 v45[3];

  v38 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (double *)((char *)&v33 - v8);
  v10 = (char *)&v33 + *(int *)(v7 + 48) - v8;
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v11 = *(int *)(v40 + 48);
  v12 = sub_247A1059C(v10, a1);
  *(_QWORD *)v9 = v13;
  v37 = v11;
  *(_QWORD *)&v10[v11] = v12;
  sub_2479D9770(v1 + 16, (uint64_t)v45);
  v14 = type metadata accessor for StickerStore();
  v43 = v14;
  v44 = &off_251912688;
  v42[0] = v1;
  type metadata accessor for StickerStore.AddStickerMethod();
  inited = (_QWORD *)swift_initStackObject();
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, v43);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *))(v19 + 16))(v18);
  inited[7] = *v18;
  inited[10] = v14;
  inited[11] = &off_251912688;
  sub_2479E0B28(v45, (uint64_t)(inited + 2));
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  swift_retain();
  v20 = v39;
  v39 = sub_2479EA628(v38);
  if (v20)
  {
    v38 = v20;
    swift_release();
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    v21 = (uint64_t)v6 + *(int *)(v3 + 48);
    v22 = *(int *)(v40 + 48);
    v23 = *v9;
    *v6 = *(_QWORD *)v9;
    v24 = sub_247A1AD34();
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v21, v10, v24);
    v26 = *(_QWORD *)&v10[v37];
  }
  else
  {
    v35 = inited + 2;
    v36 = v6;
    v27 = v3;
    v28 = v37;
    swift_release();
    v29 = (_QWORD *)sub_2479E0690();
    v41 = 0;
    v30 = (void *)v29[8];
    objc_msgSend(v30, sel_lock);
    sub_247A06734((uint64_t)v29, &v41);
    v38 = 0;
    objc_msgSend(v30, sel_unlock);
    if ((v41 & 1) != 0)
    {
      v34 = (id)v29[4];
      objc_msgSend(v34, sel_postNotificationName_object_, v29[2], swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    v31 = v36;
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    v21 = (uint64_t)v31 + *(int *)(v27 + 48);
    v22 = *(int *)(v40 + 48);
    v23 = *v9;
    *v31 = *(_QWORD *)v9;
    v24 = sub_247A1AD34();
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v21, v10, v24);
    v26 = *(_QWORD *)&v10[v28];
  }
  *(_QWORD *)(v21 + v22) = v26;
  swift_retain();
  sub_247A13EEC(v21, v26, v23);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v24);
  sub_2479D045C((uint64_t)v9, &qword_254450BC0);
  return v39;
}

id sub_2479E3A38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  id result;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  double *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  void *v106;
  void *v107;
  uint64_t v108;
  __int128 v109;
  char v110;
  uint64_t v111;
  char v112;
  _BYTE v113[40];
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  _QWORD v117[5];
  char v118;
  void *v119;
  void *v120;
  uint64_t v121;
  __int128 v122;
  char v123;
  uint64_t v124;
  char v125;
  uint64_t v126[3];
  uint64_t v127;
  uint64_t v128;

  v3 = sub_247A1AC8C();
  v4 = *(_QWORD *)(v3 - 8);
  v103 = v3;
  v104 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v93 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v102 = (char *)&v88 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v95 = (uint64_t *)((char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (double *)((char *)&v88 - v12);
  v96 = v11;
  v14 = (char *)&v88 + *(int *)(v11 + 48) - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v16 = *(int *)(v15 + 48);
  v17 = sub_247A10DDC(v14, a1);
  v19 = v18;
  v20 = v17;
  v97 = v13;
  v98 = v16;
  *v13 = v18;
  *(_QWORD *)&v14[v16] = v17;
  v21 = v1[5];
  v22 = v1[6];
  v94 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 2, v21);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32);
  v100 = a1;
  v24 = v101;
  v23(a1, v21, v22);
  v25 = v24;
  if (v24)
  {
    v26 = (uint64_t)v95 + *(int *)(v96 + 48);
    v27 = *(int *)(v15 + 48);
    *(double *)v95 = v19;
    v28 = sub_247A1AD34();
    v29 = *(_QWORD *)(v28 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v26, v14, v28);
    *(_QWORD *)(v26 + v27) = v20;
    swift_retain();
    sub_247A135FC(v26, v20, v19);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v28);
    v30 = v97;
    return (id)sub_2479D045C((uint64_t)v30, &qword_254450BC0);
  }
  v89 = v1 + 2;
  v91 = v14;
  v92 = v15;
  v31 = v100;
  v32 = *(_QWORD *)(v100 + 16);
  v33 = MEMORY[0x24BEE4AF8];
  v34 = v98;
  if (v32)
  {
    v90 = 0;
    v117[0] = MEMORY[0x24BEE4AF8];
    sub_2479E8E9C(0, v32, 0);
    v35 = v31 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
    v36 = *(_QWORD *)(v104 + 72);
    v100 = *(_QWORD *)(v104 + 16);
    v101 = v36;
    v99 = 0x8000000247A1F6D0;
    do
    {
      v38 = v102;
      v37 = v103;
      ((void (*)(char *, unint64_t, uint64_t))v100)(v102, v35, v103);
      sub_247A1AC44();
      v114 = 0xD00000000000001BLL;
      v115 = v99;
      sub_247A1AF38();
      swift_bridgeObjectRelease();
      v40 = v114;
      v39 = v115;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v38, v37);
      v33 = v117[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2479E8E9C(0, *(_QWORD *)(v33 + 16) + 1, 1);
        v33 = v117[0];
      }
      v42 = *(_QWORD *)(v33 + 16);
      v41 = *(_QWORD *)(v33 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_2479E8E9C(v41 > 1, v42 + 1, 1);
        v33 = v117[0];
      }
      *(_QWORD *)(v33 + 16) = v42 + 1;
      v43 = v33 + 16 * v42;
      *(_QWORD *)(v43 + 32) = v40;
      *(_QWORD *)(v43 + 40) = v39;
      v35 += v101;
      --v32;
    }
    while (v32);
    v25 = v90;
    v34 = v98;
  }
  v114 = 0;
  sub_2479E2AAC(v33, (void **)&v114, (uint64_t)v117);
  v30 = v97;
  v44 = v91;
  v45 = v92;
  if (!v25)
  {
    v90 = 0;
    swift_bridgeObjectRelease();
    v49 = v127;
    v50 = v128;
    v51 = __swift_project_boxed_opaque_existential_1(v126, v127);
    v52 = sub_2479D9770((uint64_t)v117, (uint64_t)v113);
    v54 = v119;
    v53 = v120;
    v105 = v118;
    v106 = v119;
    v107 = v120;
    v108 = v121;
    v109 = v122;
    v110 = v123;
    v111 = v124;
    v112 = v125;
    MEMORY[0x24BDAC7A8](v52);
    v56 = (char *)&v88 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v57 + 16))(v56, v51, v49);
    v58 = v54;
    sub_2479D50B4(v53);
    swift_bridgeObjectRetain();
    sub_247A0930C((uint64_t)v113, (uint64_t)v56, v49, (uint64_t)&v114);
    v59 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v61 = v116;
      v62 = (unint64_t)v116 >> 62;
      if ((unint64_t)v116 >> 62)
      {
        if (v116 < 0)
          v50 = v116;
        else
          v50 = v116 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v69 = sub_247A1B37C();
        swift_bridgeObjectRelease();
        if (!v69)
        {
LABEL_36:
          sub_247A095C4();
          v72 = v116;
          v73 = (unint64_t)v116 >> 62;
          if ((unint64_t)v116 >> 62)
          {
            if (v116 < 0)
              v50 = v116;
            else
              v50 = v116 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v74 = sub_247A1B37C();
            swift_bridgeObjectRelease();
            if (!v74)
            {
LABEL_57:
              sub_247A1268C(0);
              v34 = v98;
LABEL_58:
              sub_2479D97B4((uint64_t)&v114);
              if (*(_QWORD *)(v59 + 16))
              {
                v77 = v94[5];
                v78 = v94[6];
                __swift_project_boxed_opaque_existential_1(v89, v77);
                v79 = v90;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v78 + 32))(v59, v77, v78);
                v80 = v79;
                v81 = v96;
                v30 = v97;
                if (v79)
                {
                  sub_2479D8018((uint64_t)v117);
                  swift_bridgeObjectRelease();
                  v46 = (uint64_t)v95 + *(int *)(v81 + 48);
                  v47 = *(int *)(v92 + 48);
                  v48 = *v30;
                  *v95 = *(_QWORD *)v30;
                  v82 = sub_247A1AD34();
                  v83 = *(_QWORD *)(v82 - 8);
                  v44 = v91;
                  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v46, v91, v82);
                  goto LABEL_67;
                }
              }
              else
              {
                v81 = v96;
                v30 = v97;
                v80 = v90;
              }
              swift_bridgeObjectRelease();
              v84 = sub_2479E0690();
              LOBYTE(v114) = 0;
              v50 = *(_QWORD *)(v84 + 64);
              objc_msgSend((id)v50, sel_lock);
              sub_247A06734(v84, &v114);
              if (!v80)
              {
                objc_msgSend((id)v50, sel_unlock);
                if ((v114 & 1) != 0)
                {
                  objc_msgSend(*(id *)(v84 + 32), sel_postNotificationName_object_, *(_QWORD *)(v84 + 16), swift_weakLoadStrong());
                  swift_release();
                  v81 = v96;
                }
                swift_release();
                v44 = v91;
                v85 = v95;
                sub_2479D8018((uint64_t)v117);
                v46 = (uint64_t)v85 + *(int *)(v81 + 48);
                v47 = *(int *)(v92 + 48);
                v48 = *v30;
                *v85 = *(_QWORD *)v30;
                goto LABEL_66;
              }
LABEL_77:
              result = objc_msgSend((id)v50, sel_unlock);
              __break(1u);
              return result;
            }
            swift_bridgeObjectRetain();
            v75 = sub_247A1B37C();
            swift_bridgeObjectRelease();
            if (!v75)
              goto LABEL_76;
            swift_bridgeObjectRetain();
            v76 = sub_247A1B37C();
            swift_bridgeObjectRelease();
            if (!v76)
              goto LABEL_74;
          }
          else if (!*(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_57;
          }
          if ((v72 & 0xC000000000000001) != 0)
          {
            v63 = (id)MEMORY[0x249587908](0, v72);
            if (v73)
              goto LABEL_14;
LABEL_41:
            if (!*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_72;
          }
          else
          {
            if (!*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_70;
            v63 = *(id *)(v72 + 32);
            if (!v73)
              goto LABEL_41;
LABEL_14:
            swift_bridgeObjectRetain();
            v60 = sub_247A1B37C();
            swift_bridgeObjectRelease();
            if (!v60)
              goto LABEL_72;
          }
          sub_2479EA0F8(0, 1);
          sub_247A1268C(v63);
          v34 = v98;
          if (!v63)
            goto LABEL_58;
          goto LABEL_16;
        }
        swift_bridgeObjectRetain();
        v70 = sub_247A1B37C();
        swift_bridgeObjectRelease();
        if (!v70)
          goto LABEL_75;
        swift_bridgeObjectRetain();
        v71 = sub_247A1B37C();
        swift_bridgeObjectRelease();
        if (!v71)
          goto LABEL_73;
      }
      else if (!*(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_36;
      }
      if ((v61 & 0xC000000000000001) != 0)
      {
        v63 = (id)MEMORY[0x249587908](0, v61);
        if (v62)
          goto LABEL_44;
      }
      else
      {
        if (!*(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
          goto LABEL_77;
        }
        v63 = *(id *)(v61 + 32);
        if (v62)
        {
LABEL_44:
          swift_bridgeObjectRetain();
          v64 = sub_247A1B37C();
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
      }
      v64 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_45:
      if (!v64)
        goto LABEL_71;
      sub_2479EA0F8(0, 1);
LABEL_16:
      if ((*((_BYTE *)v63 + OBJC_IVAR___STKSticker_type) & 1) == 0)
      {
        v50 = v104;
        v65 = v93;
        (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v93, (uint64_t)v63 + OBJC_IVAR___STKSticker_identifier, v103);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v66 = v59;
        else
          v66 = sub_2479E8A14(0, *(_QWORD *)(v59 + 16) + 1, 1, v59, &qword_254450988, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
        v68 = *(_QWORD *)(v66 + 16);
        v67 = *(_QWORD *)(v66 + 24);
        if (v68 >= v67 >> 1)
          v66 = sub_2479E8A14(v67 > 1, v68 + 1, 1, v66, &qword_254450988, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
        *(_QWORD *)(v66 + 16) = v68 + 1;
        v59 = v66;
        (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v66+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v68, v65, v103);
      }

    }
  }
  swift_bridgeObjectRelease();
  v46 = (uint64_t)v95 + *(int *)(v96 + 48);
  v47 = *(int *)(v45 + 48);
  v48 = *v30;
  *v95 = *(_QWORD *)v30;
LABEL_66:
  v82 = sub_247A1AD34();
  v83 = *(_QWORD *)(v82 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v46, v44, v82);
LABEL_67:
  v86 = *(_QWORD *)&v44[v34];
  *(_QWORD *)(v46 + v47) = v86;
  swift_retain();
  sub_247A135FC(v46, v86, v48);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v46, v82);
  return (id)sub_2479D045C((uint64_t)v30, &qword_254450BC0);
}

uint64_t sub_2479E440C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  char v7;

  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  if (!v1)
  {
    v5 = sub_2479E0690();
    v7 = 0;
    v6 = *(void **)(v5 + 64);
    objc_msgSend(v6, sel_lock);
    sub_247A06734(v5, &v7);
    objc_msgSend(v6, sel_unlock);
    if ((v7 & 1) != 0)
    {
      objc_msgSend(*(id *)(v5 + 32), sel_postNotificationName_object_, *(_QWORD *)(v5 + 16), swift_weakLoadStrong());
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2479E451C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  double *v34;
  char v35;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v34 = (double *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v32 - v8);
  v10 = (char *)&v32 + *(int *)(v7 + 48) - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v12 = *(int *)(v11 + 48);
  v13 = sub_247A10DDC(v10, a1);
  v15 = v14;
  v16 = v13;
  *(double *)v9 = v14;
  *(_QWORD *)&v10[v12] = v13;
  v18 = v2[5];
  v17 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v18);
  v19 = v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a1, v18, v17);
  if (v19)
  {
    v20 = (uint64_t)v34 + *(int *)(v4 + 48);
    v21 = *(int *)(v11 + 48);
    *v34 = v15;
    v22 = sub_247A1AD34();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v20, v10, v22);
    *(_QWORD *)(v20 + v21) = v16;
    swift_retain();
    sub_247A135FC(v20, v16, v15);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v20, v22);
  }
  else
  {
    v33 = v9;
    v24 = sub_2479E0690();
    v35 = 0;
    v25 = *(void **)(v24 + 64);
    objc_msgSend(v25, sel_lock);
    sub_247A06734(v24, &v35);
    objc_msgSend(v25, sel_unlock);
    if ((v35 & 1) != 0)
    {
      objc_msgSend(*(id *)(v24 + 32), sel_postNotificationName_object_, *(_QWORD *)(v24 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    v9 = v33;
    v26 = v16;
    v27 = (uint64_t)v34 + *(int *)(v4 + 48);
    v28 = *(int *)(v11 + 48);
    *v34 = v15;
    v29 = sub_247A1AD34();
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v27, v10, v29);
    *(_QWORD *)(v27 + v28) = v26;
    swift_retain();
    sub_247A135FC(v27, v26, v15);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v29);
  }
  return sub_2479D045C((uint64_t)v9, &qword_254450BC0);
}

uint64_t sub_2479E47D4(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void **v67;
  void *v68;
  void **v69;
  void *v70;
  id v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  _BYTE *v88;
  uint64_t v89;
  double *v90;
  _QWORD *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char v95[9];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v90 = (double *)((char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v81 - v7);
  v89 = v6;
  v9 = (char *)&v81 + *(int *)(v6 + 48) - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v11 = *(int *)(v10 + 48);
  v12 = sub_247A1133C(v9, a1);
  v14 = v13;
  v15 = v12;
  v91 = v8;
  *(double *)v8 = v13;
  *(_QWORD *)&v9[v11] = v12;
  v16 = v1[5];
  v17 = v1[6];
  v87 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 2, v16);
  v18 = *(void (**)(void *, uint64_t, uint64_t))(v17 + 40);
  v88 = a1;
  v19 = v92;
  v18(a1, v16, v17);
  if (v19)
  {
    v92 = v19;
    v20 = (uint64_t)v90 + *(int *)(v89 + 48);
    v21 = *(int *)(v10 + 48);
    *v90 = v14;
    v22 = sub_247A1AD34();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v20, v9, v22);
    *(_QWORD *)(v20 + v21) = v15;
    swift_retain();
    sub_247A13F00(v20, v15, v14);
LABEL_3:
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v20, v22);
    return sub_2479D045C((uint64_t)v91, &qword_254450BC0);
  }
  else
  {
    v83 = v1 + 2;
    v84 = v10;
    v85 = v9;
    v86 = v15;
    v25 = v87;
    if (v88[OBJC_IVAR___STKSticker_type] == 1)
    {
      sub_247A1AC44();
      v93 = 0xD00000000000001BLL;
      v94 = 0x8000000247A1F6D0;
      sub_247A1AF38();
      swift_bridgeObjectRelease();
      v26 = v93;
      v93 = 0;
      v27 = v25;
      v28 = sub_2479E27E0(v26, v94, (void **)&v93);
      v29 = v86;
      v40 = v28;
      swift_bridgeObjectRelease();
      if (v40 >> 62)
        goto LABEL_32;
      v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v41)
      {
        while (2)
        {
          if ((v40 & 0xC000000000000001) == 0)
          {
            v42 = (char *)*(id *)(v40 + 32);
            goto LABEL_13;
          }
          while (1)
          {
            v42 = (char *)MEMORY[0x249587908](0, v40);
LABEL_13:
            if (v42[OBJC_IVAR___STKSticker_type] != 1)
            {
LABEL_21:
              v45 = v42;
              v92 = 0;
LABEL_22:
              swift_bridgeObjectRelease_n();
              v46 = (uint64_t *)&v88[OBJC_IVAR___STKSticker_name];
              v47 = v88;
              swift_beginAccess();
              v49 = *v46;
              v48 = v46[1];
              v50 = &v45[OBJC_IVAR___STKSticker_name];
              swift_beginAccess();
              *(_QWORD *)v50 = v49;
              *((_QWORD *)v50 + 1) = v48;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v51 = (uint64_t *)&v47[OBJC_IVAR___STKSticker_effect];
              swift_beginAccess();
              v52 = *v51;
              v53 = &v45[OBJC_IVAR___STKSticker_effect];
              swift_beginAccess();
              *(_QWORD *)v53 = v52;
              v54 = (uint64_t *)&v47[OBJC_IVAR___STKSticker_metadata];
              swift_beginAccess();
              v56 = *v54;
              v55 = v54[1];
              v57 = (uint64_t *)&v45[OBJC_IVAR___STKSticker_metadata];
              swift_beginAccess();
              v58 = *v57;
              v82 = v57[1];
              *v57 = v56;
              v57[1] = v55;
              sub_2479D935C(v56, v55);
              sub_2479D96E0(v58, v82);
              v59 = (uint64_t *)&v47[OBJC_IVAR___STKSticker_externalURI];
              swift_beginAccess();
              v61 = *v59;
              v60 = v59[1];
              v62 = &v45[OBJC_IVAR___STKSticker_externalURI];
              swift_beginAccess();
              *(_QWORD *)v62 = v61;
              *((_QWORD *)v62 + 1) = v60;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v63 = (uint64_t *)&v47[OBJC_IVAR___STKSticker_accessibilityName];
              swift_beginAccess();
              v65 = *v63;
              v64 = v63[1];
              v66 = &v45[OBJC_IVAR___STKSticker_accessibilityName];
              swift_beginAccess();
              *(_QWORD *)v66 = v65;
              *((_QWORD *)v66 + 1) = v64;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v67 = (void **)&v47[OBJC_IVAR___STKSticker_attributionInfo];
              swift_beginAccess();
              v68 = *v67;
              v69 = (void **)&v45[OBJC_IVAR___STKSticker_attributionInfo];
              swift_beginAccess();
              v70 = *v69;
              *v69 = v68;
              v71 = v68;

              v72 = (uint64_t *)&v47[OBJC_IVAR___STKSticker_representations];
              swift_beginAccess();
              v73 = *v72;
              v74 = &v45[OBJC_IVAR___STKSticker_representations];
              swift_beginAccess();
              *(_QWORD *)v74 = v73;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              sub_2479FDA28();
              v75 = v27[5];
              v76 = v27[6];
              __swift_project_boxed_opaque_existential_1(v83, v75);
              v77 = v92;
              (*(void (**)(char *, uint64_t, uint64_t))(v76 + 40))(v45, v75, v76);
              if (v77)
              {
                v92 = v77;

                v20 = (uint64_t)v90 + *(int *)(v89 + 48);
                v30 = *(int *)(v84 + 48);
                *v90 = v14;
                v22 = sub_247A1AD34();
                v23 = *(_QWORD *)(v22 - 8);
                (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v20, v85, v22);
                *(_QWORD *)(v20 + v30) = v29;
                swift_retain();
                sub_247A13F00(v20, v29, v14);
                goto LABEL_3;
              }

              goto LABEL_6;
            }

            if (v41 == 1)
              goto LABEL_29;
            if ((v40 & 0xC000000000000001) != 0)
              break;
            v78 = 5;
            while (1)
            {
              v79 = v78 - 3;
              if (__OFADD__(v78 - 4, 1))
                break;
              v80 = *(void **)(v40 + 8 * v78);
              if ((*((_BYTE *)v80 + OBJC_IVAR___STKSticker_type) & 1) == 0)
              {
                v92 = 0;
                v45 = v80;
                goto LABEL_22;
              }
              ++v78;
              if (v79 == v41)
                goto LABEL_29;
            }
            __break(1u);
          }
          v43 = 1;
          while (1)
          {
            v42 = (char *)MEMORY[0x249587908](v43, v40);
            v44 = v43 + 1;
            if (__OFADD__(v43, 1))
              break;
            if (v42[OBJC_IVAR___STKSticker_type] != 1)
              goto LABEL_21;
            swift_unknownObjectRelease();
            ++v43;
            if (v44 == v41)
              goto LABEL_29;
          }
          __break(1u);
LABEL_32:
          swift_bridgeObjectRetain();
          v41 = sub_247A1B37C();
          if (v41)
            continue;
          break;
        }
      }
LABEL_29:
      swift_bridgeObjectRelease_n();
    }
LABEL_6:
    v31 = sub_2479E0690();
    v95[0] = 0;
    v32 = *(void **)(v31 + 64);
    objc_msgSend(v32, sel_lock);
    sub_247A06734(v31, v95);
    objc_msgSend(v32, sel_unlock);
    if ((v95[0] & 1) != 0)
    {
      objc_msgSend(*(id *)(v31 + 32), sel_postNotificationName_object_, *(_QWORD *)(v31 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    v33 = v85;
    v34 = (uint64_t)v91;
    v35 = (uint64_t)v90 + *(int *)(v89 + 48);
    v36 = *(int *)(v84 + 48);
    *v90 = v14;
    v37 = sub_247A1AD34();
    v38 = *(_QWORD *)(v37 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v35, v33, v37);
    v39 = v86;
    *(_QWORD *)(v35 + v36) = v86;
    swift_retain();
    sub_247A13F00(v35, v39, v14);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v35, v37);
    return sub_2479D045C(v34, &qword_254450BC0);
  }
}

uint64_t sub_2479E4FD0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  double *v34;
  char v35;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v34 = (double *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v32 - v8);
  v10 = (char *)&v32 + *(int *)(v7 + 48) - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v12 = *(int *)(v11 + 48);
  v13 = sub_247A1133C(v10, a1);
  v15 = v14;
  v16 = v13;
  *(double *)v9 = v14;
  *(_QWORD *)&v10[v12] = v13;
  v18 = v2[5];
  v17 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v18);
  v19 = v33;
  (*(void (**)(void *, uint64_t, uint64_t))(v17 + 40))(a1, v18, v17);
  if (v19)
  {
    v20 = (uint64_t)v34 + *(int *)(v4 + 48);
    v21 = *(int *)(v11 + 48);
    *v34 = v15;
    v22 = sub_247A1AD34();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v20, v10, v22);
    *(_QWORD *)(v20 + v21) = v16;
    swift_retain();
    sub_247A13F00(v20, v16, v15);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v20, v22);
  }
  else
  {
    v33 = v9;
    v24 = sub_2479E0690();
    v35 = 0;
    v25 = *(void **)(v24 + 64);
    objc_msgSend(v25, sel_lock);
    sub_247A06734(v24, &v35);
    objc_msgSend(v25, sel_unlock);
    if ((v35 & 1) != 0)
    {
      objc_msgSend(*(id *)(v24 + 32), sel_postNotificationName_object_, *(_QWORD *)(v24 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    v9 = v33;
    v26 = v16;
    v27 = (uint64_t)v34 + *(int *)(v4 + 48);
    v28 = *(int *)(v11 + 48);
    *v34 = v15;
    v29 = sub_247A1AD34();
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v27, v10, v29);
    *(_QWORD *)(v27 + v28) = v26;
    swift_retain();
    sub_247A13F00(v27, v26, v15);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v29);
  }
  return sub_2479D045C((uint64_t)v9, &qword_254450BC0);
}

uint64_t sub_2479E5288(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  char v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  char *v85;
  uint64_t v86;
  _QWORD v87[2];
  void (*v88)(uint64_t, uint64_t);
  void (*v89)(uint64_t, char *, uint64_t);
  _QWORD *v90;
  uint64_t v91;
  double *v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  void *v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101[4];
  __int128 v102;
  char v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  void *v107;
  void *v108;
  void *v109;
  __int128 v110;
  char v111;
  uint64_t v112;
  char v113;
  char v114;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (double *)((char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (_QWORD *)((char *)v87 - v12);
  LODWORD(v98) = *a3;
  v14 = (char *)v87 + *(int *)(v11 + 48) - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v16 = *(int *)(v15 + 48);
  v17 = sub_247A116E8(v14, a1, a2);
  v19 = v18;
  v20 = v17;
  *(double *)v13 = v18;
  *(_QWORD *)&v14[v16] = v17;
  v97 = a1;
  if (a1 == a2)
  {
    v21 = (uint64_t)v10 + *(int *)(v7 + 48);
    v22 = *(int *)(v15 + 48);
    *v10 = v18;
    v23 = sub_247A1AD34();
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v21, v14, v23);
    *(_QWORD *)(v21 + v22) = v20;
    swift_retain();
    sub_247A13F14(v21, v20, v19);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
    return sub_2479D045C((uint64_t)v13, &qword_254450BC0);
  }
  v96 = v15;
  v91 = v16;
  v93 = v7;
  v92 = v10;
  v95 = v14;
  v94 = v13;
  v25 = v99 + 2;
  v26 = v99[5];
  v27 = v99[6];
  __swift_project_boxed_opaque_existential_1(v99 + 2, v26);
  v114 = (char)v98;
  v101[0] = 0;
  swift_retain();
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v114, 0, v101, 0, 0, 0, 1, 8, (uint64_t)&v106, 0);
  v29 = v107;
  v28 = v108;
  LOBYTE(v101[0]) = v106;
  v101[1] = v107;
  v101[2] = v108;
  v101[3] = v109;
  v102 = v110;
  v103 = v111;
  v104 = v112;
  v105 = v113;
  v30 = v100;
  v31 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 8))(v101, v26, v27);
  if (v30)
  {

    sub_2479D5080(v28);
    swift_release();
    swift_bridgeObjectRelease();
    v32 = (uint64_t)v92 + *(int *)(v93 + 48);
    v33 = *(int *)(v96 + 48);
    *v92 = v19;
    v34 = sub_247A1AD34();
    v35 = *(_QWORD *)(v34 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v32, v95, v34);
    *(_QWORD *)(v32 + v33) = v20;
    swift_retain();
    sub_247A13F14(v32, v20, v19);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v32, v34);
    v13 = v94;
    return sub_2479D045C((uint64_t)v13, &qword_254450BC0);
  }
  v36 = v31;
  v90 = v25;

  sub_2479D5080(v28);
  swift_bridgeObjectRelease();
  v13 = v94;
  v37 = v92;
  if ((v97 & 0x8000000000000000) != 0 || v36 <= (uint64_t)v97 || a2 < 0 || v36 < a2)
  {
    swift_release();
    sub_2479CF054();
    swift_allocError();
    *v39 = 1;
    swift_willThrow();
    v40 = (uint64_t)v37 + *(int *)(v93 + 48);
    v41 = *(int *)(v96 + 48);
    v42 = *(double *)v13;
    *v37 = *(double *)v13;
    v43 = sub_247A1AD34();
    v44 = *(_QWORD *)(v43 - 8);
    v45 = v95;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v40, v95, v43);
    v46 = *(_QWORD *)&v45[v91];
    *(_QWORD *)(v40 + v41) = v46;
    swift_retain();
    sub_247A13F14(v40, v46, v42);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v40, v43);
    return sub_2479D045C((uint64_t)v13, &qword_254450BC0);
  }
  if (v97 >= a2)
  {
    v38 = (char)v98;
  }
  else
  {
    v38 = (char)v98;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_29:
      swift_once();
      goto LABEL_19;
    }
    if (v36 >= a2 + 1)
      ++a2;
    else
      a2 = v36;
  }
  LOBYTE(v106) = v38;
  sub_2479E5C4C(a2, v36, (char *)&v106);
  v3 = v47;
  v100 = 0;
  if (qword_254450A90 != -1)
    goto LABEL_29;
LABEL_19:
  v49 = type metadata accessor for StickerSignposter();
  v50 = __swift_project_value_buffer(v49, (uint64_t)qword_254452038);
  v51 = v93;
  v52 = (uint64_t)v37 + *(int *)(v93 + 48);
  *v37 = v19;
  v53 = *(int *)(v96 + 48);
  v54 = sub_247A1AD34();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = v95;
  v89 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 16);
  v89(v52, v95, v54);
  *(_QWORD *)(v52 + v53) = v20;
  swift_retain();
  v87[1] = v50;
  sub_247A1196C("Index position determined", 25, 2, v52, v20);
  swift_release();
  v88 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v88(v52, v54);
  LOBYTE(v101[0]) = (_BYTE)v98;
  v106 = 0;
  v57 = v100;
  v58 = sub_2479E147C(v97, (char *)v101, &v106);
  if (v57)
  {
    swift_release();
    v59 = *(int *)(v51 + 48);
LABEL_23:
    v73 = (uint64_t)v37 + v59;
    v74 = *(int *)(v96 + 48);
    v13 = v94;
    v75 = *(double *)v94;
    *v37 = *(double *)v94;
    v89((uint64_t)v37 + v59, v56, v54);
    v76 = *(_QWORD *)&v56[v91];
    *(_QWORD *)(v73 + v74) = v76;
    swift_retain();
    sub_247A13F14(v73, v76, v75);
    swift_release();
    v88(v73, v54);
    return sub_2479D045C((uint64_t)v13, &qword_254450BC0);
  }
  v60 = v51;
  v61 = *(int *)(v51 + 48);
  v62 = v20;
  v63 = (uint64_t)v37 + v61;
  *v37 = v19;
  v64 = *(int *)(v96 + 48);
  v65 = v58;
  v98 = (void *)v58;
  v100 = 0;
  v89((uint64_t)v37 + v61, v56, v54);
  *(_QWORD *)(v63 + v64) = v62;
  swift_retain();
  sub_247A1196C("Existing sticker fetched", 24, 2, v63, v62);
  swift_release();
  v66 = v88;
  v88(v63, v54);
  v67 = (_QWORD *)(v65 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  *v67 = v3;
  v68 = (uint64_t)v37 + *(int *)(v60 + 48);
  *v37 = v19;
  v69 = *(int *)(v96 + 48);
  v89(v68, v56, v54);
  *(_QWORD *)(v68 + v69) = v62;
  sub_247A1196C("Sticker assigned", 16, 2, v68, v62);
  swift_release();
  v66(v68, v54);
  v70 = v99[6];
  __swift_project_boxed_opaque_existential_1(v90, v99[5]);
  v71 = v98;
  v72 = v100;
  (*(void (**)(void))(v70 + 40))();
  if (v72)
  {

    v59 = *(int *)(v93 + 48);
    goto LABEL_23;
  }
  v77 = v54;
  v78 = sub_2479E0690();
  LOBYTE(v101[0]) = 0;
  v79 = *(void **)(v78 + 64);
  objc_msgSend(v79, sel_lock);
  sub_247A06734(v78, v101);
  objc_msgSend(v79, sel_unlock);
  v80 = v93;
  v81 = v96;
  if (((uint64_t)v101[0] & 1) != 0)
  {
    objc_msgSend(*(id *)(v78 + 32), sel_postNotificationName_object_, *(_QWORD *)(v78 + 16), swift_weakLoadStrong());

    swift_release();
  }
  else
  {

  }
  swift_release();
  v82 = (uint64_t)v92 + *(int *)(v80 + 48);
  v83 = *(int *)(v81 + 48);
  v13 = v94;
  v84 = *(double *)v94;
  *v92 = *(double *)v94;
  v85 = v95;
  v89(v82, v95, v77);
  v86 = *(_QWORD *)&v85[v91];
  *(_QWORD *)(v82 + v83) = v86;
  swift_retain();
  sub_247A13F14(v82, v86, v84);
  swift_release();
  v88(v82, v77);
  return sub_2479D045C((uint64_t)v13, &qword_254450BC0);
}

void sub_2479E5C4C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  char v21;
  _QWORD v22[5];
  uint64_t v23[4];

  v6 = *a3;
  if (!a1)
  {
    if (a2 >= 1)
    {
      LOBYTE(v22[0]) = *a3;
      v23[0] = 0;
      v9 = sub_2479E147C(0, (char *)v22, v23);
      if (!v4)
        goto LABEL_5;
    }
    return;
  }
  if (a1 != a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450990);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_247A1C830;
    if (!__OFSUB__(a1, 1))
    {
      v12 = v11;
      *(_QWORD *)(v11 + 32) = a1 - 1;
      *(_QWORD *)(v11 + 40) = a1;
      v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2C60);
      v22[4] = sub_2479D96F4(&qword_2576D2C68, &qword_2576D2C60, MEMORY[0x24BEE12C8]);
      v22[0] = v12;
      v21 = v6;
      v20 = 0;
      sub_2479E195C(v22, &v21, &v20, v23);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
      if (v4)
        return;
      v13 = __swift_project_boxed_opaque_existential_1(v23, v23[3]);
      MEMORY[0x24BDAC7A8](v13);
      (*(void (**)(char *))(v15 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      type metadata accessor for Sticker(0);
      v3 = sub_247A1B07C();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      v5 = v3 & 0xC000000000000001;
      if ((v3 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_25;
        }
        v16 = *(id *)(v3 + 32);
LABEL_16:
        v17 = v16;
        swift_beginAccess();

        if (v5)
        {
          v18 = (id)MEMORY[0x249587908](1, v3);
LABEL_20:
          v19 = v18;
          swift_bridgeObjectRelease();
          swift_beginAccess();

          return;
        }
        if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
        {
          v18 = *(id *)(v3 + 40);
          goto LABEL_20;
        }
LABEL_25:
        __break(1u);
        return;
      }
LABEL_23:
      v16 = (id)MEMORY[0x249587908](0, v3);
      goto LABEL_16;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  LOBYTE(v22[0]) = *a3;
  v23[0] = 0;
  v9 = sub_2479E147C(v8, (char *)v22, v23);
  if (!v4)
  {
LABEL_5:
    v10 = (void *)v9;
    swift_beginAccess();

  }
}

uint64_t sub_2479E5F6C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v5[4];
  __int128 v6;
  char v7;
  uint64_t v8;
  char v9;
  _BYTE v10[8];
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;

  v18 = 2;
  v5[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v18, 0, v5, 0, 0, 0, 1, 8, (uint64_t)v10, 0);
  v1 = v11;
  v0 = v12;
  LOBYTE(v5[0]) = v10[0];
  v5[1] = v11;
  v5[2] = v12;
  v5[3] = v13;
  v6 = v14;
  v7 = v15;
  v8 = v16;
  v9 = v17;
  sub_2479E0E44((unsigned __int8 *)v5, (uint64_t)v10);
  sub_2479E97CC((uint64_t)v10);
  v3 = v2;
  sub_2479D8018((uint64_t)v10);

  sub_2479D5080(v0);
  swift_bridgeObjectRelease();
  return v3;
}

void sub_2479E6044(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, int a5, uint64_t a6, unint64_t a7, void (**a8)(_QWORD, _QWORD), unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, char *a14)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  void (**v43)(_QWORD, _QWORD);
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(char *, uint64_t);
  void (**v59)(_QWORD, _QWORD);
  char *v60;
  char *v61;
  void *v62;
  char *v63;
  void *v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void (**v72)(_QWORD, _QWORD);
  unint64_t v73;
  uint64_t v74;
  char *v75;
  void *v76;
  uint64_t v77;
  void *v78;
  id v79;
  unint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint8_t *v94;
  void *v95;
  uint8_t *v96;
  uint64_t v97;
  void (**v98)(_QWORD, _QWORD);
  unint64_t v99;
  uint64_t v100;
  void (*v101)(_QWORD, _QWORD);
  char *v102;
  char *v103;
  unint64_t v104;
  double *v105;
  void *v106;
  void *v107;
  char v108;
  char *v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  void *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void (**v122)(_QWORD, _QWORD);
  uint64_t v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint8_t *v127;
  void (**v128)(_QWORD, _QWORD);
  uint64_t v129;
  void *v130;
  void *v131[2];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135[3];
  uint64_t v136;
  void (*v137)(_QWORD, _QWORD);
  int v138;
  char v139;

  v122 = a8;
  v138 = a5;
  v123 = a4;
  v125 = a3;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450808);
  MEMORY[0x24BDAC7A8](v18);
  v127 = (uint8_t *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_247A1AB9C();
  v128 = *(void (***)(_QWORD, _QWORD))(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v119 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v124 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v117 - v24;
  v26 = sub_247A1AC8C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v118 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v117 - v30;
  v32 = a6;
  v136 = a6;
  v137 = (void (*)(_QWORD, _QWORD))a7;
  swift_bridgeObjectRetain();
  v121 = a1;
  sub_247A1AC38();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    v120 = v27;
    v129 = v26;
    sub_2479D045C((uint64_t)v25, &qword_254450A70);
    goto LABEL_3;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v31, v25, v26);
  v135[0] = (void *)1;
  v45 = v130;
  v46 = (char *)sub_2479E1DB4((uint64_t)v31, v135);
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v26);
    swift_bridgeObjectRelease();
    return;
  }
  v48 = v46;
  v120 = v27;
  v129 = v26;
  v130 = 0;
  if (!v46)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v31, v129);
LABEL_3:
    v33 = v130;
    if (qword_254450A98 != -1)
      swift_once();
    v118 = a14;
    v34 = sub_247A1ADB8();
    v35 = __swift_project_value_buffer(v34, (uint64_t)qword_254452050);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v117 = v35;
    v36 = sub_247A1ADA0();
    v37 = sub_247A1B10C();
    v38 = os_log_type_enabled(v36, v37);
    v130 = v33;
    if (v38)
    {
      v39 = swift_slowAlloc();
      v40 = (void *)swift_slowAlloc();
      v135[0] = v40;
      *(_DWORD *)v39 = 136315394;
      swift_bridgeObjectRetain();
      v132 = sub_2479CCA28(v121, a2, (uint64_t *)v135);
      sub_247A1B208();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 12) = 2080;
      if (a7)
        v41 = v32;
      else
        v41 = 0;
      if (a7)
        v42 = a7;
      else
        v42 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v132 = sub_2479CCA28(v41, v42, (uint64_t *)v135);
      sub_247A1B208();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2479C5000, v36, v37, "Donating recent with non-store identifier %s externalURI %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      v33 = v130;
      MEMORY[0x249588124](v40, -1, -1);
      MEMORY[0x249588124](v39, -1, -1);

      v43 = v128;
      v44 = (uint64_t)v127;
      if (!a7)
      {
LABEL_32:
        swift_beginAccess();
        v73 = (unint64_t)v137;
        if (v137)
        {
          v74 = v136;
          v131[0] = 0;
          swift_bridgeObjectRetain();
          v75 = (char *)sub_2479E22E0(v74, v73, v131);
          v76 = v33;
          v77 = v129;
          if (v33)
          {
            swift_bridgeObjectRelease();
            v78 = v33;
LABEL_35:
            v131[0] = v78;
            v79 = v78;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
            if (!swift_dynamicCast() || v139 != 2)
            {
              swift_bridgeObjectRelease();

              return;
            }

            v81 = v136;
            v80 = (unint64_t)v137;
            swift_bridgeObjectRetain_n();
            v82 = sub_247A1ADA0();
            v83 = sub_247A1B10C();
            if (os_log_type_enabled(v82, v83))
            {
              v84 = (uint8_t *)swift_slowAlloc();
              v85 = swift_slowAlloc();
              v129 = v77;
              v86 = v85;
              v134 = v85;
              *(_DWORD *)v84 = 136315138;
              if (v80)
                v87 = v81;
              else
                v87 = 0x3E726F7272653CLL;
              if (v80)
                v88 = v80;
              else
                v88 = 0xE700000000000000;
              swift_bridgeObjectRetain();
              v133 = sub_2479CCA28(v87, v88, &v134);
              sub_247A1B208();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_2479C5000, v82, v83, "No existing sticker with externalURI %s", v84, 0xCu);
              swift_arrayDestroy();
              v89 = v86;
              v77 = v129;
              MEMORY[0x249588124](v89, -1, -1);
              MEMORY[0x249588124](v84, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            v130 = 0;

            goto LABEL_59;
          }
          v90 = v75;
          if (v75)
          {
            swift_bridgeObjectRetain();
            v91 = sub_247A1ADA0();
            v92 = sub_247A1B10C();
            if (os_log_type_enabled(v91, v92))
            {
              v130 = 0;
              v93 = swift_slowAlloc();
              v129 = v77;
              v94 = (uint8_t *)v93;
              v95 = (void *)swift_slowAlloc();
              v131[0] = v95;
              *(_DWORD *)v94 = 136315138;
              swift_bridgeObjectRetain();
              v134 = sub_2479CCA28(v74, v73, (uint64_t *)v131);
              v76 = v130;
              sub_247A1B208();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_2479C5000, v91, v92, "Donating existing sticker with externalURI %s", v94, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x249588124](v95, -1, -1);
              v96 = v94;
              v77 = v129;
              MEMORY[0x249588124](v96, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            sub_2479E6FC4(v90);
            v78 = v76;
            if (!v76)
            {

              swift_bridgeObjectRelease();
              return;
            }

            goto LABEL_35;
          }
          v130 = 0;
          swift_bridgeObjectRelease();
        }
        else
        {
          v77 = v129;
        }
LABEL_59:
        v129 = a10;
        LOBYTE(v131[0]) = 0;
        v97 = (uint64_t)v124;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v124, 1, 1, v77);
        if (a9)
          v98 = v122;
        else
          v98 = 0;
        v99 = 0xE000000000000000;
        if (a9)
          v99 = a9;
        v127 = (uint8_t *)v99;
        v128 = v98;
        v100 = v123;
        if ((v138 & 1) != 0)
          v100 = -1;
        v126 = v100;
        v101 = v137;
        v123 = v136;
        objc_allocWithZone((Class)type metadata accessor for Sticker(0));
        v102 = v118;
        v103 = v118;
        swift_bridgeObjectRetain();
        sub_2479D935C(a12, (unint64_t)a13);
        swift_bridgeObjectRetain();
        v104 = v125;
        swift_bridgeObjectRetain();
        v105 = (double *)sub_247A0296C((unsigned __int8 *)v131, v97, v104, (uint64_t)v128, (uint64_t)v127, v126, a12, a13, 0.0, v123, v101, v129, a11, v102, 0, 0, 0, 1, 0,
                           1,
                           0,
                           0);

        sub_2479D96E0(a12, (unint64_t)a13);
        v106 = v130;
        v107 = (void *)sub_2479E325C(v105);

        if (!v106)
        return;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v43 = v128;
      v44 = (uint64_t)v127;
      if (!a7)
        goto LABEL_32;
    }
    sub_247A1AB78();
    v47 = v126;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v43[6])(v44, 1, v126) == 1)
    {
      sub_2479D045C(v44, &qword_254450808);
      goto LABEL_32;
    }
    v60 = v119;
    ((void (*)(char *, uint64_t, uint64_t))v43[4])(v119, v44, v47);
    if ((sub_247A1AAE8() & 1) == 0 || (v61 = v118) == 0)
    {
      ((void (**)(char *, uint64_t))v43)[1](v60, v47);
      goto LABEL_32;
    }
    v62 = v33;
    v63 = &v118[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
    swift_beginAccess();
    v64 = (void *)*((_QWORD *)v63 + 1);
    if (!v64)
    {
      ((void (**)(char *, uint64_t))v43)[1](v60, v47);
      v33 = v62;
      goto LABEL_32;
    }
    v135[0] = *(void **)v63;
    v135[1] = v64;
    v131[0] = (void *)58;
    v131[1] = (void *)0xE100000000000000;
    sub_2479CF098();
    v65 = v61;
    v66 = (_QWORD *)sub_247A1B220();
    if (v66[2] != 3)
    {
      ((void (**)(char *, uint64_t))v43)[1](v60, v47);

      swift_bridgeObjectRelease();
      v33 = v62;
      goto LABEL_32;
    }
    v68 = v66[4];
    v67 = v66[5];
    v70 = v66[6];
    v69 = v66[7];
    v127 = (uint8_t *)v66[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v68 == 0xD000000000000032 && v67 == 0x8000000247A1F750)
    {
      swift_bridgeObjectRelease();
      v71 = v130;
      v72 = v128;
    }
    else
    {
      v108 = sub_247A1B4E4();
      swift_bridgeObjectRelease();
      v71 = v130;
      v72 = v128;
      if ((v108 & 1) == 0)
        goto LABEL_76;
    }
    if ((v70 != 0x3030303030303030 || v69 != 0xEA00000000003030) && (sub_247A1B4E4() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v109 = v119;
      sub_247A1AB24();
      v110 = sub_247A038D4();
      v112 = v111;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v136 = v110;
      v137 = (void (*)(_QWORD, _QWORD))v112;
      swift_bridgeObjectRetain_n();
      v113 = sub_247A1ADA0();
      v114 = sub_247A1B10C();
      if (os_log_type_enabled(v113, v114))
      {
        v115 = (uint8_t *)swift_slowAlloc();
        v116 = (void *)swift_slowAlloc();
        v135[0] = v116;
        *(_DWORD *)v115 = 136315138;
        v127 = v115 + 4;
        swift_bridgeObjectRetain();
        v131[0] = (void *)sub_2479CCA28(v110, v112, (uint64_t *)v135);
        sub_247A1B208();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2479C5000, v113, v114, "Converted externalURI to %s", v115, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x249588124](v116, -1, -1);
        MEMORY[0x249588124](v115, -1, -1);

        ((void (**)(char *, uint64_t))v128)[1](v119, v126);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        ((void (**)(char *, uint64_t))v128)[1](v109, v126);
      }
      v33 = v130;
      goto LABEL_32;
    }
LABEL_76:
    ((void (**)(char *, uint64_t))v72)[1](v119, v126);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v71;
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  if (qword_254450A98 != -1)
    swift_once();
  v49 = sub_247A1ADB8();
  __swift_project_value_buffer(v49, (uint64_t)qword_254452050);
  v50 = v120;
  v51 = v118;
  v52 = v129;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v118, v31, v129);
  v53 = sub_247A1ADA0();
  v54 = sub_247A1B10C();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v128 = (void (**)(_QWORD, _QWORD))swift_slowAlloc();
    v135[0] = v128;
    *(_DWORD *)v55 = 136315138;
    v127 = v55 + 4;
    sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v56 = sub_247A1B4CC();
    v132 = sub_2479CCA28(v56, v57, (uint64_t *)v135);
    sub_247A1B208();
    swift_bridgeObjectRelease();
    v58 = *(void (**)(char *, uint64_t))(v120 + 8);
    v58(v51, v52);
    _os_log_impl(&dword_2479C5000, v53, v54, "Donating recent with identifier %s", v55, 0xCu);
    v59 = v128;
    swift_arrayDestroy();
    MEMORY[0x249588124](v59, -1, -1);
    MEMORY[0x249588124](v55, -1, -1);
  }
  else
  {
    v58 = *(void (**)(char *, uint64_t))(v50 + 8);
    v58(v51, v52);
  }

  sub_2479E6FC4(v48);
  v58(v31, v52);

}

void sub_2479E6FC4(char *a1)
{
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  void **v22;
  uint64_t inited;
  unint64_t v24;
  char *v25;
  void **v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD);
  double *v52;
  void *v53;
  uint64_t v54;
  char *v55;
  _BYTE *v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  id v63;
  void (*v64)(_QWORD, _QWORD);
  id v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unsigned __int8 v75;

  v3 = v2;
  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void **)&a1[OBJC_IVAR___STKSticker_externalURI];
  swift_beginAccess();
  if (v9[1])
  {
    v10 = (uint64_t)*v9;
    v11 = (uint64_t)v9[1];
  }
  else
  {
    sub_247A1AC44();
    v73 = 0xD00000000000001BLL;
    v74 = 0x8000000247A1F6D0;
    sub_247A1AF38();
    swift_bridgeObjectRelease();
    v10 = v73;
    v11 = v74;
  }
  v73 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2479E27E0(v10, v11, (void **)&v73);
  if (v3)
    goto LABEL_5;
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((a1[OBJC_IVAR___STKSticker_type] & 1) == 0)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = (char *)sub_247A1B37C();
      if (!v8)
        goto LABEL_44;
    }
    else
    {
      v8 = *(char **)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v8)
        goto LABEL_44;
    }
    v15 = v13 & 0xC000000000000001;
    if ((v13 & 0xC000000000000001) != 0)
      v22 = (void **)MEMORY[0x249587908](0, v13);
    else
      v22 = (void **)*(id *)(v13 + 32);
    v9 = v22;
    if ((*((_BYTE *)v22 + OBJC_IVAR___STKSticker_type) & 1) != 0)
    {
LABEL_26:
      swift_bridgeObjectRelease_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_247A1D2B0;
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = v9;
      v73 = inited;
      sub_247A1B04C();
      v24 = v73;
      v25 = a1;
      v26 = v9;
      v27 = v24;
LABEL_48:
      sub_2479E77EC(v27);
      swift_bridgeObjectRelease();

      return;
    }

    if (v8 != (char *)1)
    {
      if (v15)
      {
        v28 = 1;
        while (1)
        {
          v29 = MEMORY[0x249587908](v28, v13);
          v30 = (char *)(v28 + 1);
          if (__OFADD__(v28, 1))
            goto LABEL_51;
          v9 = (void **)v29;
          if ((*(_BYTE *)(v29 + OBJC_IVAR___STKSticker_type) & 1) != 0)
            break;
          swift_unknownObjectRelease();
          ++v28;
          if (v30 == v8)
            goto LABEL_44;
        }
      }
      else
      {
        v54 = 5;
        while (1)
        {
          v55 = (char *)(v54 - 3);
          if (__OFADD__(v54 - 4, 1))
            goto LABEL_57;
          v56 = *(_BYTE **)(v13 + 8 * v54);
          if (v56[OBJC_IVAR___STKSticker_type] == 1)
            break;
          ++v54;
          if (v55 == v8)
            goto LABEL_44;
        }
        v9 = v56;
      }
      goto LABEL_26;
    }
LABEL_44:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
    v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = xmmword_247A1D2A0;
    *(_QWORD *)(v57 + 32) = a1;
    v73 = v57;
    sub_247A1B04C();
    v58 = v73;
    v59 = a1;
    sub_2479E77EC(v58);
LABEL_5:
    swift_bridgeObjectRelease();
    return;
  }
  if (v13 >> 62)
    goto LABEL_52;
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v14; v14 = sub_247A1B37C())
  {
    v71 = (char *)v14;
    v72 = v4;
    v15 = v13 & 0xC000000000000001;
    if ((v13 & 0xC000000000000001) == 0)
    {
      v16 = *(id *)(v13 + 32);
      goto LABEL_12;
    }
    while (1)
    {
      v16 = (id)MEMORY[0x249587908](0, v13);
LABEL_12:
      v17 = v16;
      if (*((_BYTE *)v16 + OBJC_IVAR___STKSticker_type) != 1)
      {
LABEL_47:
        swift_bridgeObjectRelease_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
        v60 = swift_initStackObject();
        *(_OWORD *)(v60 + 16) = xmmword_247A1D2B0;
        *(_QWORD *)(v60 + 32) = a1;
        *(_QWORD *)(v60 + 40) = v17;
        v73 = v60;
        sub_247A1B04C();
        v61 = v73;
        v62 = a1;
        v26 = (void **)v17;
        v27 = v61;
        goto LABEL_48;
      }

      v4 = v72;
      if (v71 == (char *)1)
        goto LABEL_38;
      if (v15)
        break;
      v31 = 5;
      while (1)
      {
        v32 = v31 - 3;
        if (__OFADD__(v31 - 4, 1))
          break;
        v33 = *(void **)(v13 + 8 * v31);
        if ((*((_BYTE *)v33 + OBJC_IVAR___STKSticker_type) & 1) == 0)
        {
          v17 = v33;
          goto LABEL_47;
        }
        ++v31;
        if ((char *)v32 == v71)
          goto LABEL_38;
      }
      __break(1u);
LABEL_57:
      __break(1u);
    }
    v18 = 1;
    while (1)
    {
      v19 = a1;
      a1 = v3;
      v3 = v8;
      v20 = MEMORY[0x249587908](v18, v13);
      v8 = (char *)(v18 + 1);
      if (__OFADD__(v18, 1))
        break;
      v17 = (id)v20;
      if (*(_BYTE *)(v20 + OBJC_IVAR___STKSticker_type) != 1)
      {
        a1 = v19;
        goto LABEL_47;
      }
      swift_unknownObjectRelease();
      ++v18;
      v4 = v72;
      v21 = v8 == v71;
      v8 = v3;
      v3 = a1;
      a1 = v19;
      if (v21)
        goto LABEL_38;
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    swift_bridgeObjectRetain();
  }
LABEL_38:
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
  v34 = swift_initStackObject();
  *(_OWORD *)(v34 + 16) = xmmword_247A1D2A0;
  *(_QWORD *)(v34 + 32) = a1;
  v73 = v34;
  sub_247A1B04C();
  v35 = v73;
  v36 = a1;
  sub_2479E77EC(v35);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v75 = 0;
    v37 = sub_247A1AC8C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v8, 1, 1, v37);
    v38 = (unint64_t *)&v36[OBJC_IVAR___STKSticker_representations];
    swift_beginAccess();
    v68 = *v38;
    v39 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_name];
    swift_beginAccess();
    v71 = (char *)*v39;
    v66 = v39[1];
    v40 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_effect];
    swift_beginAccess();
    v70 = *v40;
    v41 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_metadata];
    swift_beginAccess();
    v72 = v4;
    v43 = *v41;
    v42 = (char *)v41[1];
    v69 = *v9;
    v64 = (void (*)(_QWORD, _QWORD))v9[1];
    v44 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_accessibilityName];
    swift_beginAccess();
    v45 = *v44;
    v46 = v44[1];
    v67 = v45;
    v47 = (void **)&v36[OBJC_IVAR___STKSticker_attributionInfo];
    swift_beginAccess();
    v48 = *v47;
    v65 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
    v49 = v68;
    swift_bridgeObjectRetain();
    v50 = v66;
    swift_bridgeObjectRetain();
    sub_2479D935C(v43, (unint64_t)v42);
    v63 = v48;
    v51 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52 = (double *)sub_247A0296C(&v75, (uint64_t)v8, v49, (uint64_t)v71, v50, v70, v43, v42, 0.0, (uint64_t)v69, v51, v67, v46, v48, 0, 0, 0, 1, 0,
                      1,
                      0,
                      0);

    sub_2479D96E0(v43, (unint64_t)v42);
    v53 = (void *)sub_2479E325C(v52);

  }
}

void sub_2479E7760(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  char *v3;
  _BYTE *v4;
  uint64_t v5;

  v5 = 1;
  v2 = (char *)sub_2479E1DB4(a1, (void **)&v5);
  if (!v1)
  {
    v3 = v2;
    if (v2)
    {
      sub_2479E6FC4(v2);

    }
    else
    {
      sub_2479CF054();
      swift_allocError();
      *v4 = 2;
      swift_willThrow();
    }
  }
}

id sub_2479E77EC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *inited;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id result;
  _QWORD v37[2];
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  double *v45;
  char v46;
  _QWORD v47[3];
  uint64_t v48;
  _UNKNOWN **v49;
  __int128 v50[2];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v41 = (_QWORD *)((char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (double *)((char *)v37 - v9);
  v42 = v8;
  v11 = (char *)v37 + *(int *)(v8 + 48) - v9;
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v12 = *(int *)(v40 + 48);
  v13 = sub_247A11BE0(v11, a1);
  v45 = v10;
  *(_QWORD *)v10 = v14;
  v44 = v11;
  v43 = v12;
  *(_QWORD *)&v11[v12] = v13;
  sub_2479D9770(v3 + 16, (uint64_t)v50);
  v15 = type metadata accessor for StickerStore();
  v48 = v15;
  v49 = &off_251912688;
  v47[0] = v3;
  type metadata accessor for StickerStore.TouchStickerMethod();
  inited = (_QWORD *)swift_initStackObject();
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v47, v48);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (_QWORD *)((char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *))(v20 + 16))(v19);
  inited[7] = *v19;
  v39 = inited + 7;
  inited[10] = v15;
  inited[11] = &off_251912688;
  v38 = inited + 2;
  sub_2479E0B28(v50, (uint64_t)(inited + 2));
  v37[1] = v3;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  if (a1 >> 62)
    goto LABEL_17;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v21; v21 = sub_247A1B37C())
  {
    v22 = 4;
    while (1)
    {
      v23 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x249587908](v22 - 4, a1) : *(id *)(a1 + 8 * v22);
      v24 = v23;
      v25 = v22 - 3;
      if (__OFADD__(v22 - 4, 1))
        break;
      sub_2479E85B8((uint64_t)v23);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);

        goto LABEL_15;
      }

      ++v22;
      if (v25 == v21)
        goto LABEL_10;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v26 = sub_2479E0690();
  v46 = 0;
  v27 = *(void **)(v26 + 64);
  objc_msgSend(v27, sel_lock);
  sub_247A06734(v26, &v46);
  if (v2)
  {
    result = objc_msgSend(v27, sel_unlock);
    __break(1u);
  }
  else
  {
    objc_msgSend(v27, sel_unlock);
    if ((v46 & 1) != 0)
    {
      objc_msgSend(*(id *)(v26 + 32), sel_postNotificationName_object_, *(_QWORD *)(v26 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
LABEL_15:
    v28 = (uint64_t)v41 + *(int *)(v42 + 48);
    v29 = *(int *)(v40 + 48);
    v30 = (uint64_t)v45;
    v31 = *v45;
    *v41 = *(_QWORD *)v45;
    v32 = sub_247A1AD34();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v28, v44, v32);
    v35 = *(_QWORD *)&v34[v43];
    *(_QWORD *)(v28 + v29) = v35;
    swift_retain();
    sub_247A13610(v28, v35, v31);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v32);
    return (id)sub_2479D045C(v30, &qword_254450BC0);
  }
  return result;
}

uint64_t sub_2479E7C20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4);
}

uint64_t StickerStore.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  return v0;
}

uint64_t StickerStore.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2479E7CCC(unsigned __int8 *a1)
{
  return sub_2479E0BA4(a1);
}

uint64_t sub_2479E7CEC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479E0E44(a1, a2);
}

uint64_t sub_2479E7D0C(char *a1)
{
  return sub_2479E13A8(a1);
}

uint64_t sub_2479E7D2C(uint64_t a1, char *a2, uint64_t *a3)
{
  return sub_2479E147C(a1, a2, a3);
}

uint64_t sub_2479E7D4C@<X0>(_QWORD *a1@<X0>, char *a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_2479E195C(a1, a2, a3, a4);
}

id sub_2479E7D6C(uint64_t a1, void **a2)
{
  return sub_2479E1DB4(a1, a2);
}

uint64_t sub_2479E7D8C@<X0>(_QWORD *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2479E1FE4(a1, a2, a3);
}

id sub_2479E7DAC(uint64_t a1, uint64_t a2, void **a3)
{
  return sub_2479E22E0(a1, a2, a3);
}

void sub_2479E7DCC(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  char *v3;
  _BYTE *v4;
  uint64_t v5;

  v5 = 1;
  v2 = (char *)sub_2479E1DB4(a1, (void **)&v5);
  if (!v1)
  {
    v3 = v2;
    if (v2)
    {
      sub_2479E6FC4(v2);

    }
    else
    {
      sub_2479CF054();
      swift_allocError();
      *v4 = 2;
      swift_willThrow();
    }
  }
}

_BYTE *sub_2479E7E5C(_BYTE *a1)
{
  return sub_2479E2CB4(a1);
}

uint64_t sub_2479E7E7C(void *a1)
{
  return sub_2479E47D4(a1);
}

__n128 sub_2479E7E9C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, unint64_t a7, void (**a8)(_QWORD, _QWORD), unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, char *a14)
{
  __n128 result;

  sub_2479E6044(a1, a2, a3, a4, a5 & 1, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return result;
}

uint64_t sub_2479E7ED8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  return sub_2479E5288(a1, a2, a3);
}

id sub_2479E7EF8(uint64_t a1)
{
  return sub_2479E3A38(a1);
}

uint64_t sub_2479E7F18()
{
  return sub_2479E440C();
}

uint64_t sub_2479E7F38(double *a1)
{
  return sub_2479E325C(a1);
}

uint64_t sub_2479E7F58(void *a1)
{
  return sub_2479E4FD0(a1);
}

uint64_t sub_2479E7F78(uint64_t a1)
{
  return sub_2479E451C(a1);
}

uint64_t sub_2479E7F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 16), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4);
}

uint64_t sub_2479E7FF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char *v12;
  double *v13;
  double v14;
  double v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  void *v22[4];
  __int128 v23;
  char v24;
  uint64_t v25;
  char v26;
  unsigned __int8 v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  char v35;

  v3 = v1;
  v4 = a1;
  v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR___STKSticker_type);
  v6 = v1[5];
  v7 = v1[6];
  v20 = v1 + 2;
  __swift_project_boxed_opaque_existential_1(v1 + 2, v6);
  v21 = v5;
  v27 = v5;
  v22[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)&v27, 0, v22, 0, 0, 0, 1, 8, (uint64_t)&v28, 0);
  v8 = v29;
  v9 = v30;
  LOBYTE(v22[0]) = v28;
  v22[1] = v29;
  v22[2] = v30;
  v22[3] = v31;
  v23 = v32;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v10 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 8))(v22, v6, v7);

  sub_2479D5080(v9);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v1 + 7, v1[10]);
    if (v10 < 1)
    {
      v15 = 1024.0;
    }
    else
    {
      LOBYTE(v22[0]) = v21;
      v28 = 0;
      v12 = (char *)sub_2479E147C(0, (char *)v22, &v28);
      v13 = (double *)&v12[OBJC_IVAR___STKSticker_libraryIndex];
      swift_beginAccess();
      v14 = *v13;

      v15 = v14 + 1024.0;
    }
    v16 = (double *)(v4 + OBJC_IVAR___STKSticker_libraryIndex);
    swift_beginAccess();
    *v16 = v15;
    v17 = v3[5];
    v18 = v3[6];
    __swift_project_boxed_opaque_existential_1(v20, v17);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))(v4, v17, v18);
    v19 = 50;
    if (v21)
      v19 = 1000;
    if (v10 >= v19)
    {
      v27 = v21;
      sub_2479E823C(&v27);
    }
  }
  return v4;
}

uint64_t sub_2479E823C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  void *v7;
  id v8;
  id v9;
  char v11[8];
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  void *v20[19];
  unsigned __int8 v21[8];
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;

  v2 = v1;
  v11[0] = *a1;
  v3 = v11[0];
  v20[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v11, 0, v20, 0, 0, 0, 1, 8, (uint64_t)v21, 0);
  if (v3)
    v4 = 1000;
  else
    v4 = 50;
  v25 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450C00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450A48);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_247A1C690;
  KeyPath = swift_getKeyPath();
  MEMORY[0x249587080](KeyPath, 1);
  swift_bridgeObjectRelease();
  v24 = v5;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  v7 = v23;
  v11[0] = v21[0];
  v12 = v22;
  v13 = v23;
  v14 = v5;
  v15 = v4;
  v16 = v26;
  v17 = v27;
  v18 = v28;
  v19 = v29;
  v8 = v22;
  sub_2479D50B4(v7);
  swift_bridgeObjectRetain();
  sub_2479E0E44((unsigned __int8 *)v11, (uint64_t)v20);

  sub_2479D5080(v7);
  swift_bridgeObjectRelease();
  v9 = sub_2479E0174((uint64_t)v20);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  sub_2479E3A38((uint64_t)v9);
  sub_2479D8018((uint64_t)v20);
  swift_bridgeObjectRelease();

  sub_2479D5080(v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479E85B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  double *v23;
  double v24;
  double v25;
  double *v26;
  char v27[24];
  void *v28[4];
  __int128 v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  __int128 v37;
  char v38;
  uint64_t v39;
  char v40;

  v3 = v1;
  v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR___STKSticker_type);
  if ((v5 & 1) == 0)
  {
    v17 = v1[5];
    v18 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v17);
    v27[0] = 0;
    v28[0] = 0;
    Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v27, 0, v28, 0, 0, 0, 1, 8, (uint64_t)&v33, 0);
    v20 = v34;
    v19 = v35;
    LOBYTE(v28[0]) = v33;
    v28[1] = v34;
    v28[2] = v35;
    v28[3] = v36;
    v29 = v37;
    v30 = v38;
    v31 = v39;
    v32 = v40;
    v21 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v18 + 8))(v28, v17, v18);

    sub_2479D5080(v19);
    result = swift_bridgeObjectRelease();
    if (v2)
      return result;
    __swift_project_boxed_opaque_existential_1(v3 + 7, v3[10]);
    if (v21 < 1)
    {
      v25 = 1024.0;
    }
    else
    {
      LOBYTE(v28[0]) = 0;
      v33 = 0;
      v22 = (char *)sub_2479E147C(0, (char *)v28, &v33);
      v23 = (double *)&v22[OBJC_IVAR___STKSticker_libraryIndex];
      swift_beginAccess();
      v24 = *v23;

      v25 = v24 + 1024.0;
    }
    v26 = (double *)(a1 + OBJC_IVAR___STKSticker_libraryIndex);
    swift_beginAccess();
    *v26 = v25;
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v7 = objc_msgSend(v6, sel_timeProvider);

  objc_msgSend(v7, sel_timestamp);
  v9 = v8;
  swift_unknownObjectRelease();
  v10 = (_QWORD *)(a1 + OBJC_IVAR___STKSticker_lastUsedDate);
  swift_beginAccess();
  *v10 = v9;
  v11 = v3 + 2;
  v12 = v3[5];
  v13 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(a1, v12, v13);
  if (!v2)
  {
    if (v5)
    {
      v16 = v3[5];
      v15 = v3[6];
      __swift_project_boxed_opaque_existential_1(v11, v16);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a1, v16, v15);
    }
  }
  return result;
}

uint64_t sub_2479E8890()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  return swift_deallocClassInstance();
}

void sub_2479E88BC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v5)
      {
LABEL_18:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain();
      v6 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_3:
        if ((v1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x249587908](0, v1);
          if (!v2)
          {
LABEL_6:
            v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_14;
          }
        }
        else
        {
          if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
          *(id *)(v1 + 32);
          if (!v2)
            goto LABEL_6;
        }
        swift_bridgeObjectRetain();
        v3 = sub_247A1B37C();
        swift_bridgeObjectRelease();
LABEL_14:
        if (v3)
        {
          sub_2479EA0F8(0, 1);
          return;
        }
        goto LABEL_17;
      }
      __break(1u);
    }
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
}

uint64_t sub_2479E8A00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2479E8A14(a1, a2, a3, a4, &qword_2576D2AE8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_2479E8A14(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_247A1B370();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2479EA510(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_2479E8C20(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450990);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2479EA774(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2479E8D2C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2479EB20C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2479E8E38(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2479E8EE4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2479E8E54(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2479E9314(a1, a2, a3, (_QWORD *)*v3, &qword_2576D2AE8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
  *v3 = result;
  return result;
}

uint64_t sub_2479E8E80(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2479E9050(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2479E8E9C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2479E91AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2479E8EB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2479E9314(a1, a2, a3, (_QWORD *)*v3, &qword_254450988, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_2479E8EE4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450C20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479E9050(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450990);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479E91AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479E9314(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479E94F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (v23 < v5)
    goto LABEL_31;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x249587914](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  type metadata accessor for Sticker(0);
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return sub_247A1B04C();
  }
  if (!(v7 >> 62))
  {
    v16 = *(_QWORD *)(v13 + 16);
    v17 = v16 - v5;
    if (!__OFSUB__(v16, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  v17 = v24 - v5;
  if (__OFSUB__(v24, v5))
    goto LABEL_40;
LABEL_21:
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v15 + 1);
    v19 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v19 || v18 >= &v19[8 * v17])
      memmove(v18, v19, 8 * v17);
    if (!(v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v21 = v25 + v8;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

void sub_2479E97CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *i;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  const void *v35;
  BOOL v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  void *v41;
  void *v42;
  uint64_t v43;
  __int128 v44;
  char v45;
  uint64_t v46;
  char v47;
  _BYTE v48[40];
  _BYTE v49[48];
  void *v50;
  void *v51;
  uint64_t v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57[3];
  uint64_t v58;
  _BYTE v59[152];
  unint64_t v60;

  sub_2479D9734(a1, (uint64_t)v49);
  v1 = v58;
  v2 = __swift_project_boxed_opaque_existential_1(v57, v58);
  v3 = sub_2479D9770((uint64_t)v49, (uint64_t)v48);
  v5 = v50;
  v4 = v51;
  v40[8] = v49[40];
  v41 = v50;
  v42 = v51;
  v43 = v52;
  v44 = v53;
  v45 = v54;
  v46 = v55;
  v47 = v56;
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v8 + 16))(v7, v2, v1);
  v9 = v5;
  sub_2479D50B4(v4);
  swift_bridgeObjectRetain();
  sub_247A0930C((uint64_t)v48, (uint64_t)v7, v1, (uint64_t)v59);
  sub_2479D8018((uint64_t)v49);
  v10 = 0;
  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  for (i = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32); ; ++i)
  {
    v13 = v60;
    v14 = v60 >> 62;
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v17)
        goto LABEL_12;
      swift_bridgeObjectRetain();
      v18 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v18)
        goto LABEL_59;
      swift_bridgeObjectRetain();
      v19 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v19)
        goto LABEL_57;
LABEL_4:
      if ((v13 & 0xC000000000000001) != 0)
      {
        v15 = (id)MEMORY[0x249587908](0, v13);
        if (!v14)
        {
LABEL_7:
          v16 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
          if (!v16)
            goto LABEL_54;
          sub_2479EA0F8(0, 1);
          goto LABEL_30;
        }
      }
      else
      {
        if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_51;
        v15 = *(id *)(v13 + 32);
        if (!v14)
          goto LABEL_7;
      }
      swift_bridgeObjectRetain();
      v16 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_12:
    sub_247A095C4();
    v20 = v60;
    v21 = v60 >> 62;
    if (v60 >> 62)
      break;
    if (!*(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_45;
LABEL_14:
    if ((v20 & 0xC000000000000001) != 0)
    {
      v15 = (id)MEMORY[0x249587908](0, v20);
      if (!v21)
        goto LABEL_17;
    }
    else
    {
      if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      v15 = *(id *)(v20 + 32);
      if (!v21)
      {
LABEL_17:
        if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_55;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
    v25 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (!v25)
      goto LABEL_55;
LABEL_29:
    sub_2479EA0F8(0, 1);
    sub_247A1268C(v15);
    if (!v15)
      goto LABEL_46;
LABEL_30:
    if (!v10)
    {
      v26 = v11[3];
      if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_52;
      v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
      if (v27 <= 1)
        v28 = 1;
      else
        v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
      v29 = (_QWORD *)swift_allocObject();
      v30 = _swift_stdlib_malloc_size(v29);
      v31 = v30 - 32;
      if (v30 < 32)
        v31 = v30 - 25;
      v32 = v31 >> 3;
      v29[2] = v28;
      v29[3] = (2 * (v31 >> 3)) | 1;
      v33 = (unint64_t)(v29 + 4);
      v34 = v11[3] >> 1;
      if (v11[2])
      {
        v35 = v11 + 4;
        if (v29 != v11 || v33 >= (unint64_t)v35 + 8 * v34)
          memmove(v29 + 4, v35, 8 * v34);
        v11[2] = 0;
      }
      i = (_QWORD *)(v33 + 8 * v34);
      v10 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
      swift_release();
      v11 = v29;
    }
    v36 = __OFSUB__(v10--, 1);
    if (v36)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    *i = v15;
  }
  swift_bridgeObjectRetain();
  v22 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (v22)
  {
    swift_bridgeObjectRetain();
    v23 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (!v23)
      goto LABEL_60;
    swift_bridgeObjectRetain();
    v24 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (!v24)
      goto LABEL_58;
    goto LABEL_14;
  }
LABEL_45:
  sub_247A1268C(0);
LABEL_46:
  sub_2479D97B4((uint64_t)v59);
  v37 = v11[3];
  if (v37 < 2)
    return;
  v38 = v37 >> 1;
  v36 = __OFSUB__(v38, v10);
  v39 = v38 - v10;
  if (!v36)
  {
    v11[2] = v39;
    return;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

uint64_t sub_2479E9C50(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  const void *v25;
  uint64_t v26;

  v6 = result;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if ((a4 & 1) != 0 || a3)
  {
    v13 = a2 - result;
    if (__OFSUB__(a2, result))
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v8 = 0;
    v14 = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
    v26 = a3;
    while (v13 >= 1)
    {
      v15 = a2;
      if ((a4 & 1) == 0)
      {
        v15 = a2;
        if (v13 > a3)
        {
          v15 = v6 + a3;
          if (__OFADD__(v6, a3))
            goto LABEL_35;
          if (v15 < v6)
            goto LABEL_36;
          if (v15 > a2)
            goto LABEL_34;
        }
      }
      if (!v8)
      {
        v16 = v7[3];
        if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_37;
        v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
        if (v17 <= 1)
          v18 = 1;
        else
          v18 = v17;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2C88);
        v19 = (_QWORD *)swift_allocObject();
        v20 = _swift_stdlib_malloc_size(v19);
        v21 = v20 - 32;
        if (v20 < 32)
          v21 = v20 - 17;
        v22 = v21 >> 4;
        v19[2] = v18;
        v19[3] = 2 * (v21 >> 4);
        v23 = (unint64_t)(v19 + 4);
        v24 = v7[3] >> 1;
        if (v7[2])
        {
          v25 = v7 + 4;
          if (v19 != v7 || v23 >= (unint64_t)v25 + 16 * v24)
            memmove(v19 + 4, v25, 16 * v24);
          v7[2] = 0;
        }
        v14 = (uint64_t *)(v23 + 16 * v24);
        v8 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
        result = swift_release();
        v7 = v19;
        a3 = v26;
      }
      v11 = __OFSUB__(v8--, 1);
      if (v11)
        goto LABEL_33;
      *v14 = v6;
      v14[1] = v15;
      v14 += 2;
      v6 = v15;
      v13 = a2 - v15;
      if (__OFSUB__(a2, v15))
        goto LABEL_32;
    }
  }
  else
  {
    v8 = 0;
  }
  v9 = v7[3];
  if (v9 < 2)
    return (uint64_t)v7;
  v10 = v9 >> 1;
  v11 = __OFSUB__(v10, v8);
  v12 = v10 - v8;
  if (!v11)
  {
    v7[2] = v12;
    return (uint64_t)v7;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_2479E9DFC(uint64_t a1)
{
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  id *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  const void *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t *__return_ptr, id *);
  uint64_t v50;
  uint64_t v51;
  id v52;
  _OWORD v53[2];

  v1 = *(_OWORD *)(a1 + 16);
  v53[0] = *(_OWORD *)a1;
  v53[1] = v1;
  v2 = v1;
  v3 = *((_QWORD *)&v1 + 1) >> 1;
  v4 = (*((_QWORD *)&v1 + 1) >> 1) - v1;
  if (__OFSUB__(*((_QWORD *)&v1 + 1) >> 1, (_QWORD)v1))
    goto LABEL_44;
  v6 = *((_QWORD *)&v53[0] + 1);
  if (v4 <= 0)
  {
    if (v4 < 0)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v49 = *(void (**)(uint64_t *__return_ptr, id *))(a1 + 32);
    v26 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v14 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
    sub_2479EB1BC((uint64_t)v53);
    swift_retain();
    v11 = v26;
    v12 = v26 + 4;
    v23 = v2;
    v27 = __OFSUB__(v3, v2);
    v25 = v3 - v2;
    v24 = (v25 < 0) ^ v27 | (v25 == 0);
    if (!v25)
      goto LABEL_35;
LABEL_17:
    if (v24)
      goto LABEL_46;
    if (v23 < v2)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    v28 = (id *)(v6 + 8 * v23);
    while (1)
    {
      v52 = *v28;
      v29 = v52;
      v49(&v50, &v52);

      v31 = v50;
      v30 = v51;
      if (!v14)
      {
        v32 = v11[3];
        if ((uint64_t)((v32 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_43;
        v33 = v11;
        v34 = v32 & 0xFFFFFFFFFFFFFFFELL;
        if (v34 <= 1)
          v35 = 1;
        else
          v35 = v34;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
        v36 = (_QWORD *)swift_allocObject();
        v37 = _swift_stdlib_malloc_size(v36);
        v38 = v37 - 32;
        if (v37 < 32)
          v38 = v37 - 17;
        v39 = v38 >> 4;
        v36[2] = v35;
        v36[3] = 2 * (v38 >> 4);
        v40 = (unint64_t)(v36 + 4);
        v41 = v33[3] >> 1;
        if (v33[2])
        {
          v42 = v33 + 4;
          if (v36 != v33 || v40 >= (unint64_t)v42 + 16 * v41)
            memmove(v36 + 4, v42, 16 * v41);
          v33[2] = 0;
        }
        v12 = (_QWORD *)(v40 + 16 * v41);
        v14 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v41;
        swift_release();
        v11 = v36;
      }
      v27 = __OFSUB__(v14--, 1);
      if (v27)
        break;
      *v12 = v31;
      v12[1] = v30;
      v12 += 2;
      ++v28;
      if (!--v25)
        goto LABEL_35;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
  v7 = (_QWORD *)swift_allocObject();
  v8 = _swift_stdlib_malloc_size(v7);
  v9 = v8 - 32;
  if (v8 < 32)
    v9 = v8 - 17;
  v10 = v9 >> 4;
  v7[2] = v4;
  v7[3] = 2 * (v9 >> 4);
  v11 = v7;
  v12 = v7 + 4;
  v48 = v6;
  v13 = (v9 >> 4) & 0x7FFFFFFFFFFFFFFFLL;
  v49 = *(void (**)(uint64_t *__return_ptr, id *))(a1 + 32);
  sub_2479EB1BC((uint64_t)v53);
  v14 = v2 + v13 - v3;
  v46 = v3;
  if (v2 <= v3)
    v15 = v3;
  else
    v15 = v2;
  v16 = v2;
  v17 = v15 - v2;
  v18 = v10 | 0x8000000000000000;
  swift_retain();
  v19 = 0;
  v47 = v16;
  v20 = v48 + 8 * v16;
  do
  {
    if (v4 == v19)
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v17 == v19)
      goto LABEL_40;
    v52 = *(id *)(v20 + 8 * v19);
    v21 = v52;
    v49(&v50, &v52);

    if (v18 == v19)
      goto LABEL_41;
    ++v19;
    v22 = v51;
    *v12 = v50;
    v12[1] = v22;
    v12 += 2;
  }
  while (v4 != v19);
  v2 = v47;
  v23 = v47 + v19;
  v6 = v48;
  v25 = v46 - v23;
  v24 = v46 <= v23;
  if (v46 != v23)
    goto LABEL_17;
LABEL_35:
  sub_2479EB1E4((uint64_t)v53);
  swift_release();
  v43 = v11[3];
  if (v43 < 2)
    return;
  v44 = v43 >> 1;
  v27 = __OFSUB__(v44, v14);
  v45 = v44 - v14;
  if (v27)
  {
LABEL_48:
    __break(1u);
    return;
  }
  v11[2] = v45;
}

uint64_t sub_2479EA0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x249587914](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for Sticker(0);
  swift_arrayDestroy();
  if (!v5)
    return sub_247A1B04C();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_247A1B04C();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

unint64_t sub_2479EA3F0()
{
  unint64_t result;

  result = qword_254450AB8;
  if (!qword_254450AB8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for RangeGenerator, &type metadata for RangeGenerator);
    atomic_store(result, (unint64_t *)&qword_254450AB8);
  }
  return result;
}

uint64_t sub_2479EA434()
{
  return swift_deallocObject();
}

unint64_t sub_2479EA444()
{
  unint64_t result;

  result = qword_2576D2C78;
  if (!qword_2576D2C78)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerSequence, &type metadata for StickerSequence);
    atomic_store(result, (unint64_t *)&qword_2576D2C78);
  }
  return result;
}

uint64_t sub_2479EA488()
{
  uint64_t v0;
  void *v1;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  v1 = *(void **)(v0 + 72);
  if ((unint64_t)v1 >= 3)

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  return swift_deallocObject();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2479EA510(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479EA628(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v3)
      break;
    v8 = MEMORY[0x24BEE4AF8];
    result = sub_247A1B340();
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x249587908](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      sub_2479E7FF8((uint64_t)v6);

      if (v1)
        return swift_release();
      ++v5;
      sub_247A1B328();
      sub_247A1B34C();
      sub_247A1B358();
      sub_247A1B334();
      if (v3 == v5)
        return v8;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v3 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_2479EA774(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479EA85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StickerStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StickerStore.AddStickerMethod()
{
  return objc_opt_self();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t method lookup function for StickerStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StickerStore.__allocating_init(persistence:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of StickerStore.__allocating_init(dataMappper:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of StickerStore.count(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of StickerStore.stickers(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of StickerStore.count(type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of StickerStore.sticker(at:type:representationSpecifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of StickerStore.stickers(at:type:representationSpecifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of StickerStore.sticker(identifier:representationSpecifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of StickerStore.stickers(identifiers:representationSpecifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of StickerStore.sticker(uri:representationSpecifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of StickerStore.stickers(uri:representationSpecifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of StickerStore.stickers(uris:representationSpecifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of StickerStore.addSticker(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of StickerStore._internal_only_addSticker(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of StickerStore._internal_only_addStickers(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of StickerStore.removeStickers(identifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of StickerStore.reindexAllStickers()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of StickerStore._internal_only_removeStickers(identifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of StickerStore.updateSticker(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of StickerStore._internal_only_updateSticker(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of StickerStore.moveSticker(at:to:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of StickerStore.allStickers()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of StickerStore.donateStickerToRecents(with:representations:stickerEffect:externalURI:name:accessibilityName:metadata:attributionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v5 + 312))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of StickerStore.touchSticker(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of StickerStore._internal_only_touchStickSpotlightItem(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t *initializeBufferWithCopyOfBuffer for StickerStore.PersistenceType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_247A1AB9C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for StickerStore.PersistenceType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_247A1AB9C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 3, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for StickerStore.PersistenceType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for StickerStore.PersistenceType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for StickerStore.PersistenceType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for StickerStore.PersistenceType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerStore.PersistenceType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479EB01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_247A1AB9C();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StickerStore.PersistenceType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479EB074(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = sub_247A1AB9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2479EB0C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_247A1AB9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_2479EB100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AB9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_2479EB140()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1AB9C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StickerStore.TouchStickerMethod()
{
  return objc_opt_self();
}

uint64_t sub_2479EB1BC(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_2479EB1E4(uint64_t a1)
{
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_2479EB20C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

uint64_t sub_2479EB2FC()
{
  return 1;
}

uint64_t sub_2479EB304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Settings.shouldInitializeCloudKitSchema.getter()
{
  uint64_t result;

  result = os_variant_has_internal_content();
  if ((_DWORD)result)
  {
    if ((sub_2479EB388() & 1) != 0)
      return 1;
    else
      return sub_2479EB43C() & 1;
  }
  return result;
}

uint64_t sub_2479EB388()
{
  id v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = sub_2479EB55C(0xD00000000000001DLL, 0x8000000247A1F900);
  v3 = v2;

  if (v3)
  {
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = v1 & 0xFFFFFFFFFFFFLL;
    if (v4)
      v5 = sub_2479EBBF4(v1, v3);
    else
      v5 = 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_2479EB43C()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_247A1AE6C();
  if (*(_QWORD *)(v2 + 16) && (sub_2479F3740(0xD00000000000001BLL, 0x8000000247A1F8E0), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v4 = sub_247A1AF08();
    v6 = v5;
    swift_bridgeObjectRelease();
    LOBYTE(v4) = sub_2479EBBF4(v4, v6);
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

ValueMetadata *type metadata accessor for Settings()
{
  return &type metadata for Settings;
}

uint64_t sub_2479EB55C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  char v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  char v49;
  char v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD v71[2];
  id v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450830);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v3, sel_arguments);
  v10 = sub_247A1B034();

  swift_bridgeObjectRetain();
  v11 = sub_2479EC130(v10, a1, a2);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = 0;
  if ((v13 & 1) != 0)
    return v14;
  v14 = (uint64_t)objc_msgSend(v3, sel_arguments);
  v15 = sub_247A1B034();

  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_67;
  }
  if (v11 >= *(_QWORD *)(v15 + 16))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
    sub_247A01D38(v14, v15, 10);
    v50 = v70;
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  v71[1] = 0;
  v72 = v3;
  v16 = v15 + 16 * v11;
  v18 = *(_QWORD *)(v16 + 32);
  v17 = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v75 = v18;
  v76 = v17;
  v73 = 4013373;
  v74 = 0xE300000000000000;
  v19 = sub_247A1AC98();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  sub_2479CF098();
  sub_247A1B22C();
  v22 = v21;
  sub_2479EC0F0((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v75 = v18;
  v76 = v17;
  v73 = 15677;
  v74 = 0xE200000000000000;
  v20(v8, 1, 1, v19);
  sub_247A1B22C();
  v24 = v23;
  v26 = v25;
  sub_2479EC0F0((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
    v27 = v24;
LABEL_10:
    v32 = sub_2479EC230(v27, v18, v17);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x249587518](v32, v34, v36, v38);
    swift_bridgeObjectRelease();
    return v14;
  }
  v75 = v18;
  v76 = v17;
  v73 = 61;
  v74 = 0xE100000000000000;
  v20(v8, 1, 1, v19);
  sub_247A1B22C();
  v29 = v28;
  v31 = v30;
  sub_2479EC0F0((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    v27 = v29;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v40 = v72;
  v41 = objc_msgSend(v72, sel_arguments);
  v15 = sub_247A1B034();

  v42 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRelease();
  if (v11 == v42 - 1)
    return 0;
  v14 = (uint64_t)objc_msgSend(v40, sel_arguments);
  v43 = sub_247A1B034();

  if (v11 + 1 >= *(_QWORD *)(v43 + 16))
    goto LABEL_68;
  v44 = v43 + 16 * (v11 + 1);
  v14 = *(_QWORD *)(v44 + 32);
  v15 = *(_QWORD *)(v44 + 40);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v45 = HIBYTE(v15) & 0xF;
  v46 = v14 & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0)
    v47 = HIBYTE(v15) & 0xF;
  else
    v47 = v14 & 0xFFFFFFFFFFFFLL;
  if (!v47)
  {
LABEL_56:
    if ((sub_247A1AF8C() & 1) == 0)
      return v14;
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v15 & 0x1000000000000000) != 0)
    goto LABEL_69;
  if ((v15 & 0x2000000000000000) == 0)
  {
    if ((v14 & 0x1000000000000000) != 0)
      v48 = (unsigned __int8 *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v48 = (unsigned __int8 *)sub_247A1B31C();
    sub_247A01D24(v48, v46, 10);
    v50 = v49 & 1;
LABEL_55:
    if ((v50 & 1) == 0)
      return v14;
    goto LABEL_56;
  }
  v75 = v14;
  v76 = v15 & 0xFFFFFFFFFFFFFFLL;
  if (v14 == 43)
  {
    if (v45)
    {
      if (v45 != 1 && (BYTE1(v14) - 48) <= 9u)
      {
        if (v45 == 2)
          goto LABEL_54;
        if ((BYTE2(v14) - 48) <= 9u)
        {
          v58 = v45 - 3;
          if (v58)
          {
            v59 = (unsigned __int8 *)&v75 + 3;
            v60 = 10 * (BYTE1(v14) - 48) + (BYTE2(v14) - 48);
            while (1)
            {
              v61 = *v59 - 48;
              if (v61 > 9)
                goto LABEL_52;
              v62 = (unsigned __int128)(v60 * (__int128)10) >> 64;
              v63 = 10 * v60;
              if (v62 != v63 >> 63)
                goto LABEL_52;
              v57 = __OFADD__(v63, v61);
              v60 = v63 + v61;
              if (v57)
                goto LABEL_52;
              v50 = 0;
              ++v59;
              if (!--v58)
                goto LABEL_55;
            }
          }
          goto LABEL_54;
        }
      }
      goto LABEL_52;
    }
  }
  else
  {
    if (v14 != 45)
    {
      if (v45 && (v14 - 48) <= 9u)
      {
        if (v45 == 1)
          goto LABEL_54;
        if ((BYTE1(v14) - 48) <= 9u)
        {
          v64 = v45 - 2;
          if (v64)
          {
            v65 = (unsigned __int8 *)&v75 + 2;
            v66 = 10 * (v14 - 48) + (BYTE1(v14) - 48);
            while (1)
            {
              v67 = *v65 - 48;
              if (v67 > 9)
                goto LABEL_52;
              v68 = (unsigned __int128)(v66 * (__int128)10) >> 64;
              v69 = 10 * v66;
              if (v68 != v69 >> 63)
                goto LABEL_52;
              v57 = __OFADD__(v69, v67);
              v66 = v69 + v67;
              if (v57)
                goto LABEL_52;
              v50 = 0;
              ++v65;
              if (!--v64)
                goto LABEL_55;
            }
          }
          goto LABEL_54;
        }
      }
LABEL_52:
      v50 = 1;
      goto LABEL_55;
    }
    if (v45)
    {
      if (v45 != 1 && (BYTE1(v14) - 48) <= 9u)
      {
        if (v45 == 2)
          goto LABEL_54;
        if ((BYTE2(v14) - 48) <= 9u)
        {
          v51 = v45 - 3;
          if (v51)
          {
            v52 = (unsigned __int8 *)&v75 + 3;
            v53 = -10 * (BYTE1(v14) - 48) - (BYTE2(v14) - 48);
            while (1)
            {
              v54 = *v52 - 48;
              if (v54 > 9)
                goto LABEL_52;
              v55 = (unsigned __int128)(v53 * (__int128)10) >> 64;
              v56 = 10 * v53;
              if (v55 != v56 >> 63)
                goto LABEL_52;
              v57 = __OFSUB__(v56, v54);
              v53 = v56 - v54;
              if (v57)
                goto LABEL_52;
              v50 = 0;
              ++v52;
              if (!--v51)
                goto LABEL_55;
            }
          }
LABEL_54:
          v50 = 0;
          goto LABEL_55;
        }
      }
      goto LABEL_52;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2479EBBF4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unsigned __int8 *i;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *j;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *k;
  unsigned int v31;
  uint64_t v32;
  unsigned __int8 *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450830);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  v39 = a2;
  v36 = 49;
  v37 = 0xE100000000000000;
  v7 = sub_247A1AC98();
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v9 = 1;
  v8(v6, 1, 1, v7);
  sub_2479CF098();
  v10 = sub_247A1B238();
  sub_2479EC0F0((uint64_t)v6);
  if (!v10)
    return v9;
  v38 = a1;
  v39 = a2;
  v36 = 7562617;
  v37 = 0xE300000000000000;
  v9 = 1;
  v8(v6, 1, 1, v7);
  v11 = sub_247A1B238();
  sub_2479EC0F0((uint64_t)v6);
  if (!v11)
    return v9;
  v38 = a1;
  v39 = a2;
  v36 = 1702195828;
  v37 = 0xE400000000000000;
  v9 = 1;
  v8(v6, 1, 1, v7);
  v12 = sub_247A1B238();
  sub_2479EC0F0((uint64_t)v6);
  if (!v12)
    return v9;
  v38 = a1;
  v39 = a2;
  v36 = 28271;
  v37 = 0xE200000000000000;
  v9 = 1;
  v8(v6, 1, 1, v7);
  v13 = sub_247A1B238();
  result = sub_2479EC0F0((uint64_t)v6);
  if (!v13)
    return v9;
  v15 = HIBYTE(a2) & 0xF;
  v16 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v17 = HIBYTE(a2) & 0xF;
  else
    v17 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v17)
    return 0;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v33 = sub_247A01D38(a1, a2, 10);
    LOBYTE(a1) = v34;
    swift_bridgeObjectRelease();
    v19 = (uint64_t)v33;
    return (a1 & 1) == 0 && v19 > 0;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v18 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v18 = (unsigned __int8 *)sub_247A1B31C();
    v19 = (uint64_t)sub_247A01D24(v18, v16, 10);
    LOBYTE(a1) = v20 & 1;
    return (a1 & 1) == 0 && v19 > 0;
  }
  v38 = a1;
  v39 = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v15)
      goto LABEL_63;
    if (v15 == 1 || (BYTE1(a1) - 48) > 9u)
      goto LABEL_36;
    v19 = (BYTE1(a1) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(a1) - 48) > 9u)
        goto LABEL_36;
      v19 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
      v21 = v15 - 3;
      if (v21)
      {
        for (i = (unsigned __int8 *)&v38 + 3; ; ++i)
        {
          v23 = *i - 48;
          if (v23 > 9)
            goto LABEL_36;
          v24 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_36;
          v19 = v24 + v23;
          if (__OFADD__(v24, v23))
            goto LABEL_36;
          LOBYTE(a1) = 0;
          if (!--v21)
            return (a1 & 1) == 0 && v19 > 0;
        }
      }
    }
LABEL_48:
    LOBYTE(a1) = 0;
    return (a1 & 1) == 0 && v19 > 0;
  }
  if (a1 != 45)
  {
    if (!v15 || (a1 - 48) > 9u)
      goto LABEL_36;
    v19 = (a1 - 48);
    if (v15 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u)
        goto LABEL_36;
      v19 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      v25 = v15 - 2;
      if (v25)
      {
        for (j = (unsigned __int8 *)&v38 + 2; ; ++j)
        {
          v27 = *j - 48;
          if (v27 > 9)
            goto LABEL_36;
          v28 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_36;
          v19 = v28 + v27;
          if (__OFADD__(v28, v27))
            goto LABEL_36;
          LOBYTE(a1) = 0;
          if (!--v25)
            return (a1 & 1) == 0 && v19 > 0;
        }
      }
    }
    goto LABEL_48;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        LOBYTE(a1) = 0;
        v19 = -(uint64_t)(BYTE1(a1) - 48);
        return (a1 & 1) == 0 && v19 > 0;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        v19 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
        v29 = v15 - 3;
        if (!v29)
          goto LABEL_48;
        for (k = (unsigned __int8 *)&v38 + 3; ; ++k)
        {
          v31 = *k - 48;
          if (v31 > 9)
            break;
          v32 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            break;
          v19 = v32 - v31;
          if (__OFSUB__(v32, v31))
            break;
          LOBYTE(a1) = 0;
          if (!--v29)
            return (a1 & 1) == 0 && v19 > 0;
        }
      }
    }
LABEL_36:
    v19 = 0;
    LOBYTE(a1) = 1;
    return (a1 & 1) == 0 && v19 > 0;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_2479EC0F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2479EC130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  char v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  v6 = 0;
  for (i = (_QWORD *)(a1 + 40); *(i - 1) != a2 || *i != a3; i += 2)
  {
    if ((sub_247A1B4E4() & 1) != 0)
      break;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247A1AF38();
    v9 = sub_247A1AF8C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      break;
    if (v3 == ++v6)
      return 0;
  }
  return v6;
}

unint64_t sub_2479EC230(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_247A1AFBC();
  __break(1u);
  return result;
}

uint64_t sub_2479EC27C()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_2576D2C90);
  __swift_project_value_buffer(v0, (uint64_t)qword_2576D2C90);
  return sub_247A1ADAC();
}

id _STKMessagesObjCStoreFacade.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  objc_class *v9;
  objc_super v11;

  v1 = type metadata accessor for StickerStore.PersistenceType();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_247A1AB9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 3, v4);
  v5 = type metadata accessor for StickerStore();
  swift_allocObject();
  v6 = v0;
  v7 = StickerStore.init(persistence:)((uint64_t)v3);
  v8 = (uint64_t *)&v6[OBJC_IVAR____STKMessagesObjCStoreFacade_store];
  v8[3] = v5;
  v8[4] = (uint64_t)&protocol witness table for StickerStore;
  *v8 = v7;

  v9 = (objc_class *)type metadata accessor for _STKMessagesObjCStoreFacade();
  v11.receiver = v6;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t type metadata accessor for _STKMessagesObjCStoreFacade()
{
  return objc_opt_self();
}

id _STKMessagesObjCStoreFacade.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2479D9770(a1, (uint64_t)v3 + OBJC_IVAR____STKMessagesObjCStoreFacade_store);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

id _STKMessagesObjCStoreFacade.init(store:)(uint64_t a1)
{
  void *v1;
  id v3;
  objc_super v5;

  sub_2479D9770(a1, (uint64_t)v1 + OBJC_IVAR____STKMessagesObjCStoreFacade_store);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for _STKMessagesObjCStoreFacade();
  v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v3;
}

void sub_2479EC5C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13)
{
  uint64_t v13;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  char *v24;
  id v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v45;
  objc_super v46;
  uint64_t v47;

  v47 = a2;
  swift_bridgeObjectRetain();
  v45 = sub_2479ECBD0(a3);
  swift_bridgeObjectRelease();
  if (a13)
  {
    v39 = v13;
    v19 = *(void **)&a13[OBJC_IVAR____STKStickerAttributionInfo_adamID];
    v41 = a6;
    v21 = *(_QWORD *)&a13[OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier];
    v20 = *(_QWORD *)&a13[OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier + 8];
    v37 = *(_QWORD *)&a13[OBJC_IVAR____STKStickerAttributionInfo_name + 8];
    v38 = *(_QWORD *)&a13[OBJC_IVAR____STKStickerAttributionInfo_name];
    v22 = (objc_class *)type metadata accessor for Sticker.AttributionInfo();
    v42 = a7;
    v23 = (char *)objc_allocWithZone(v22);
    v40 = a5;
    v24 = &v23[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    *(_QWORD *)&v23[OBJC_IVAR___STKStickerAttributionInfo_adamID] = v19;
    swift_beginAccess();
    *(_QWORD *)v24 = v21;
    *((_QWORD *)v24 + 1) = v20;
    a6 = v41;
    v25 = v19;
    v13 = v39;
    v36 = v25;
    v26 = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v23;
    a7 = v42;
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = &v28[OBJC_IVAR___STKStickerAttributionInfo_name];
    *(_QWORD *)v29 = v38;
    *((_QWORD *)v29 + 1) = v37;

    v46.receiver = v28;
    v46.super_class = v22;
    v30 = objc_msgSendSuper2(&v46, sel_init);

    a5 = v40;
  }
  else
  {
    v30 = 0;
  }
  v31 = (_QWORD *)(v13 + OBJC_IVAR____STKMessagesObjCStoreFacade_store);
  v32 = *(_QWORD *)(v13 + OBJC_IVAR____STKMessagesObjCStoreFacade_store + 24);
  v33 = v31[4];
  __swift_project_boxed_opaque_existential_1(v31, v32);
  v34 = sub_247A02954(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, uint64_t))(v33 + 96))(a1, v47, v45, v34, v35 & 1, a5, a6, a7, a8, a9, a10, a11, a12, v30, v32, v33);
  swift_bridgeObjectRelease();

}

uint64_t sub_2479EC818(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450840);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_247A1AD04();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v29 - v11;
  v14 = *(_QWORD *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_type];
  v13 = *(_QWORD *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_type + 8];
  swift_bridgeObjectRetain();
  sub_247A1AD10();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_2479EDAF4((uint64_t)v5);
    if (qword_2576D28C8 != -1)
      swift_once();
    v15 = sub_247A1ADB8();
    __swift_project_value_buffer(v15, (uint64_t)qword_2576D2C90);
    v16 = a2;
    v17 = sub_247A1ADA0();
    v18 = sub_247A1B118();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain();
      v29[2] = sub_2479CCA28(v14, v13, &v30);
      sub_247A1B208();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2479C5000, v17, v18, "Skipping unsupported type %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v20, -1, -1);
      MEMORY[0x249588124](v19, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    v21 = *(_QWORD *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_data];
    v22 = *(_QWORD *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_data + 8];
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    v23 = *(_QWORD *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_role];
    v24 = *(_QWORD *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_role + 8];
    if (v24)
      v25 = *(_QWORD *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_role + 8];
    else
      v25 = 0xE000000000000000;
    v29[1] = v25;
    if (v24 && (v23 != 0xD000000000000020 || v24 != 0x8000000247A1EFF0))
      sub_247A1B4E4();
    objc_allocWithZone((Class)type metadata accessor for Sticker.Representation());
    sub_2479D9370(v21, v22);
    swift_bridgeObjectRetain();
    sub_247A0E7F8(v21, v22, (uint64_t)v10);
    v27 = v26;
    sub_2479D969C(v21, v22);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return v27;
}

uint64_t sub_2479ECBD0(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_247A1B37C())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x249587908](i - 4, a1)
         : (char *)*(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = sub_2479EC818(i - 4, v4);

      if (v7)
      {
        MEMORY[0x249587620]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_247A1B058();
        sub_247A1B070();
        sub_247A1B04C();
      }
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

id _STKMessagesObjCStoreFacade.__deallocating_deinit()
{
  return sub_2479ED978(type metadata accessor for _STKMessagesObjCStoreFacade);
}

uint64_t _STKStickerUIStickerRepresentation.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_data);
  sub_2479D9370(v1, *(_QWORD *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_data + 8));
  return v1;
}

uint64_t _STKStickerUIStickerRepresentation.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_type);
  swift_bridgeObjectRetain();
  return v1;
}

double _STKStickerUIStickerRepresentation.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_size);
}

uint64_t _STKStickerUIStickerRepresentation.role.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKStickerUIStickerRepresentation_role);
}

void sub_2479ED1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_247A1D2D0;
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = 0x3D656C6F72;
  *(_QWORD *)(v1 + 40) = 0xE500000000000000;
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  v2 = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = 0x3D65707974;
  *(_QWORD *)(v1 + 56) = 0xE500000000000000;
  MEMORY[0x249587788](v2, *(double *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_size), *(double *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_size + 8));
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = 0x3D657A6973;
  *(_QWORD *)(v1 + 72) = 0xE500000000000000;
  __asm { BR              X12 }
}

uint64_t sub_2479ED31C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v4;
  uint64_t v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_stringFromByteCount_countStyle_, BYTE6(v0), 0);
  sub_247A1AEE4();

  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = v4;
  *(_QWORD *)(v1 + 88) = v5;
  swift_getObjectType();
  sub_247A1B5BC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B98);
  sub_2479ED9F8();
  sub_247A1AE9C();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  return 60;
}

void _STKStickerUIStickerRepresentation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _STKStickerUIStickerRepresentation.__deallocating_deinit()
{
  return sub_2479ED978(type metadata accessor for _STKStickerUIStickerRepresentation);
}

void *_STKStickerAttributionInfo.adamID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____STKStickerAttributionInfo_adamID);
  v2 = v1;
  return v1;
}

uint64_t _STKStickerAttributionInfo.bundleIdentifier.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier);
}

uint64_t _STKStickerAttributionInfo.name.getter()
{
  return sub_2479D362C(&OBJC_IVAR____STKStickerAttributionInfo_name);
}

uint64_t sub_2479ED674()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_247A1D2E0;
  v2 = *(void **)(v0 + OBJC_IVAR____STKStickerAttributionInfo_adamID);
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_description);
    sub_247A1AEE4();

  }
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = 0x3D44496D616461;
  *(_QWORD *)(v1 + 40) = 0xE700000000000000;
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = 0xD000000000000011;
  *(_QWORD *)(v1 + 56) = 0x8000000247A1F950;
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = 0x3D656D616ELL;
  *(_QWORD *)(v1 + 72) = 0xE500000000000000;
  swift_getObjectType();
  sub_247A1B5BC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B98);
  sub_2479ED9F8();
  sub_247A1AE9C();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  return 60;
}

id _STKStickerAttributionInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void _STKStickerAttributionInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _STKStickerAttributionInfo.__deallocating_deinit()
{
  return sub_2479ED978(type metadata accessor for _STKStickerAttributionInfo);
}

id sub_2479ED978(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_2479ED9F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576D2D50;
  if (!qword_2576D2D50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2576D2B98);
    result = MEMORY[0x249588058](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2576D2D50);
  }
  return result;
}

uint64_t type metadata accessor for _STKStickerUIStickerRepresentation()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _STKStickerAttributionInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for _STKMessagesObjCStoreFacade()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _STKMessagesObjCStoreFacade.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of _STKMessagesObjCStoreFacade.donateStickerToRecents(with:representations:stickerEffectEnum:externalURI:name:accessibilityName:metadata:attributionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *v5) + 0x60))(a1, a2, a3, a4, a5);
}

uint64_t method lookup function for _STKStickerUIStickerRepresentation()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for _STKStickerAttributionInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2479EDAF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2479EDB3C(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;

  *(_QWORD *)(swift_allocObject() + 16) = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = a2;
    swift_bridgeObjectRetain();
    sub_247A1B274();
    type metadata accessor for ManagedRepresentation();
    sub_2479CDA10(&qword_2576D2D08, (uint64_t (*)(uint64_t))type metadata accessor for ManagedRepresentation, MEMORY[0x24BEE5BD8]);
    sub_247A1B0E8();
    a1 = v22;
    v21 = v23;
    v5 = v24;
    v6 = v25;
    v7 = v26;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    v11 = a2;
    swift_bridgeObjectRetain();
    v6 = 0;
  }
  v19 = v5;
  v20 = (unint64_t)(v5 + 64) >> 6;
  if (a1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v7)
    {
      v12 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v6 << 6);
      v14 = v6;
      goto LABEL_29;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v16 >= v20)
      goto LABEL_32;
    v17 = *(_QWORD *)(v21 + 8 * v16);
    v14 = v6 + 1;
    if (!v17)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v20)
        goto LABEL_32;
      v17 = *(_QWORD *)(v21 + 8 * v14);
      if (!v17)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v20)
          goto LABEL_32;
        v17 = *(_QWORD *)(v21 + 8 * v14);
        if (!v17)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v20)
            goto LABEL_32;
          v17 = *(_QWORD *)(v21 + 8 * v14);
          if (!v17)
          {
            v14 = v6 + 5;
            if (v6 + 5 >= v20)
              goto LABEL_32;
            v17 = *(_QWORD *)(v21 + 8 * v14);
            if (!v17)
            {
              v18 = v6 + 6;
              while (v20 != v18)
              {
                v17 = *(_QWORD *)(v21 + 8 * v18++);
                if (v17)
                {
                  v14 = v18 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_2479F7754();

              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v12 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v14 << 6);
LABEL_29:
    v15 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    if (!v15)
      goto LABEL_32;
    while (1)
    {
      objc_msgSend(a2, sel_deleteObject_, v15, v19);

      v6 = v14;
      v7 = v12;
      if ((a1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_247A1B298())
      {
        type metadata accessor for ManagedRepresentation();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v15 = v27;
        swift_unknownObjectRelease();
        v14 = v6;
        v12 = v7;
        if (v27)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_2479EDE38(void *a1, void *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t *v17;
  void *v18;
  uint64_t *v19;
  void *v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  double *v31;
  double *v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  char *v50;
  void (*v51)(uint64_t, char *, uint64_t);
  char *v52;
  char *v53;
  void (*v54)(unint64_t, uint64_t, uint64_t);
  id v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  unint64_t v80;
  char v81;
  id v82;
  id v83;
  id v84;
  unint64_t v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  uint64_t v93;
  void *v94;
  uint64_t i;
  id v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void (*v107)(unint64_t, uint64_t, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  unint64_t v111;
  unint64_t v112;
  void *v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;

  v4 = v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v7);
  isUniquelyReferenced_nonNull_native = (uint64_t)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_247A1AC8C();
  v10 = *(_QWORD *)(v105 - 8);
  v11 = MEMORY[0x24BDAC7A8](v105);
  v112 = (unint64_t)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v110 = (char *)&v101 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v109 = (char *)&v101 - v15;
  if (objc_msgSend(a1, sel_isInserted))
  {
    objc_msgSend(a1, sel_setType_, *(unsigned __int8 *)(v2 + OBJC_IVAR___STKSticker_type));
    v16 = (void *)sub_247A1AC50();
    objc_msgSend(a1, sel_setIdentifier_, v16);

  }
  v17 = (uint64_t *)(v4 + OBJC_IVAR___STKSticker_byteCount);
  swift_beginAccess();
  if (*v17 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_77;
  if (*v17 > 0x7FFFFFFF)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v106 = a2;
  objc_msgSend(a1, sel_setByteCount_);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v18 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setName_, v18);

  v19 = (uint64_t *)(v4 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  if (*v19 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (*v19 > 0x7FFFFFFF)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    swift_once();
    goto LABEL_24;
  }
  objc_msgSend(a1, sel_setEffect_);
  v3 = v4 + OBJC_IVAR___STKSticker_metadata;
  swift_beginAccess();
  v20 = 0;
  v21 = *(_QWORD *)(v3 + 8);
  if (v21 >> 60 != 15)
  {
    v3 = *(_QWORD *)v3;
    sub_2479D9370(v3, v21);
    v20 = (void *)sub_247A1ABB4();
    sub_2479D96E0(v3, v21);
  }
  objc_msgSend(a1, sel_setMetadata_, v20);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v22 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setExternalURI_, v22);

  v23 = v4 + OBJC_IVAR___STKSticker_accessibilityName;
  swift_beginAccess();
  if (*(_QWORD *)(v23 + 8))
  {
    swift_bridgeObjectRetain();
    v24 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  objc_msgSend(a1, sel_setAccessibilityName_, v24);

  v25 = (_QWORD *)(v4 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  if (*v25)
  {
    v26 = *(void **)(*v25 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
    v27 = v26;
  }
  else
  {
    v26 = 0;
  }
  objc_msgSend(a1, sel_setAttributionAdamID_, v26);

  if (*v25 && (v3 = *(_QWORD *)(*v25 + OBJC_IVAR___STKStickerAttributionInfo_name + 8)) != 0)
  {
    swift_bridgeObjectRetain();
    v28 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(a1, sel_setAttributionName_, v28);

  if (*v25
    && (v29 = *v25 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier, swift_beginAccess(), *(_QWORD *)(v29 + 8)))
  {
    swift_bridgeObjectRetain();
    v30 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(a1, sel_setAttributionBundleIdentifier_, v30);

  v31 = (double *)(v4 + OBJC_IVAR___STKSticker_creationDate);
  swift_beginAccess();
  objc_msgSend(a1, sel_setCreationDate_, *v31);
  v32 = (double *)(v4 + OBJC_IVAR___STKSticker_lastUsedDate);
  swift_beginAccess();
  objc_msgSend(a1, sel_setLastUsedDate_, *v32);
  v33 = (double *)(v4 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  objc_msgSend(a1, sel_setLibraryIndex_, *v33);
  if (qword_254450870 != -1)
    goto LABEL_81;
LABEL_24:
  v34 = qword_254450868 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride;
  swift_beginAccess();
  if (*(_BYTE *)(v34 + 8))
    v35 = 1;
  else
    v35 = *(_QWORD *)v34;
  if (v35 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v35 > 0x7FFFFFFF)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  objc_msgSend(a1, sel_setVersion_);
  v36 = v4 + OBJC_IVAR___STKSticker_searchText;
  swift_beginAccess();
  if (*(_QWORD *)(v36 + 8))
  {
    swift_bridgeObjectRetain();
    v37 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = 0;
  }
  objc_msgSend(a1, sel_setSearchText_, v37);

  v38 = v4 + OBJC_IVAR___STKSticker_sanitizedPrompt;
  swift_beginAccess();
  if (*(_QWORD *)(v38 + 8))
  {
    swift_bridgeObjectRetain();
    v39 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  objc_msgSend(a1, sel_setSanitizedPrompt_, v39);

  v40 = objc_msgSend(a1, sel_representations);
  v41 = objc_msgSend(v40, sel_allObjects);

  v42 = sub_247A1B034();
  v3 = sub_2479F1DCC(v42);
  swift_bridgeObjectRelease();
  v115 = sub_2479F22B0(MEMORY[0x24BEE4AF8]);
  if (!(v3 >> 62))
  {
    v43 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_37;
  }
LABEL_84:
  swift_bridgeObjectRetain_n();
  v43 = sub_247A1B37C();
  swift_bridgeObjectRelease();
LABEL_37:
  v44 = v106;
  v102 = a1;
  v103 = v4;
  if (v43)
  {
    v113 = (void *)v43;
    v114 = v3 & 0xC000000000000001;
    v45 = 4;
    v4 = v105;
    v104 = isUniquelyReferenced_nonNull_native;
    v108 = v10;
    v111 = v3;
    while (1)
    {
      if (v114)
        v46 = (id)MEMORY[0x249587908](v45 - 4, v3);
      else
        v46 = *(id *)(v3 + 8 * v45);
      v47 = v46;
      a1 = (void *)(v45 - 3);
      if (__OFADD__(v45 - 4, 1))
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      v48 = objc_msgSend(v46, sel_identifier);
      if (!v48)
        break;
      v49 = v48;
      v50 = v110;
      sub_247A1AC68();

      v51 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
      v52 = v50;
      v3 = v111;
      v51(isUniquelyReferenced_nonNull_native, v52, v4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(isUniquelyReferenced_nonNull_native, 0, 1, v4);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(isUniquelyReferenced_nonNull_native, 1, v4) == 1)goto LABEL_40;
      v53 = v109;
      v51((uint64_t)v109, (char *)isUniquelyReferenced_nonNull_native, v4);
      v54 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16);
      v10 = v112;
      v107 = v54;
      v54(v112, (uint64_t)v53, v4);
      v55 = v47;
      v56 = v115;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v116 = (_QWORD *)v56;
      v3 = sub_2479F37A4(v10);
      v58 = *(_QWORD *)(v56 + 16);
      v59 = (v57 & 1) == 0;
      v60 = v58 + v59;
      if (__OFADD__(v58, v59))
        goto LABEL_75;
      v61 = v57;
      if (*(_QWORD *)(v56 + 24) >= v60)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2479F4FA8();
      }
      else
      {
        sub_2479F4C2C(v60, isUniquelyReferenced_nonNull_native);
        v62 = sub_2479F37A4(v112);
        if ((v61 & 1) != (v63 & 1))
          goto LABEL_111;
        v3 = v62;
      }
      v64 = v116;
      v115 = (unint64_t)v116;
      if ((v61 & 1) != 0)
      {
        v65 = v116[7];
        v66 = *(void **)(v65 + 8 * v3);
        *(_QWORD *)(v65 + 8 * v3) = v55;

        v4 = v105;
      }
      else
      {
        v116[(v3 >> 6) + 8] |= 1 << v3;
        v4 = v105;
        v107(v64[6] + *(_QWORD *)(v108 + 72) * v3, v112, v105);
        *(_QWORD *)(v64[7] + 8 * v3) = v55;
        v67 = v64[2];
        v68 = __OFADD__(v67, 1);
        v69 = v67 + 1;
        if (v68)
          goto LABEL_76;
        v64[2] = v69;
      }
      swift_bridgeObjectRelease();
      v10 = v108;
      v70 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
      v70(v112, v4);
      v70((uint64_t)v109, v4);
      v44 = v106;
      isUniquelyReferenced_nonNull_native = v104;
      v3 = v111;
LABEL_41:

      ++v45;
      if (a1 == v113)
        goto LABEL_59;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(isUniquelyReferenced_nonNull_native, 1, 1, v4);
LABEL_40:
    sub_2479D045C(isUniquelyReferenced_nonNull_native, &qword_254450A70);
    goto LABEL_41;
  }
LABEL_59:
  swift_bridgeObjectRelease_n();
  v71 = v115;
  v72 = swift_bridgeObjectRetain();
  sub_2479F2444(v72);
  v118 = v73;
  v117 = MEMORY[0x24BEE4AF8];
  v74 = (unint64_t *)(v103 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  v75 = *v74;
  if (v75 >> 62)
  {
    swift_bridgeObjectRetain();
    v76 = sub_247A1B37C();
    if (!v76)
      goto LABEL_86;
  }
  else
  {
    v76 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v76)
      goto LABEL_86;
  }
  if (v76 >= 1)
  {
    v77 = 0;
    do
    {
      if ((v75 & 0xC000000000000001) != 0)
        v78 = (id)MEMORY[0x249587908](v77, v75);
      else
        v78 = *(id *)(v75 + 8 * v77 + 32);
      v79 = v78;
      if (*(_QWORD *)(v71 + 16)
        && (v80 = sub_2479F37A4((uint64_t)v78 + OBJC_IVAR___STKStickerRepresentation_identifier), (v81 & 1) != 0))
      {
        v82 = *(id *)(*(_QWORD *)(v71 + 56) + 8 * v80);

        v83 = v82;
      }
      else
      {
        type metadata accessor for ManagedRepresentation();
        v83 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v44);
        v82 = v83;
      }
      sub_2479F25E8(v83);
      v84 = v82;
      MEMORY[0x249587620]();
      if (*(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_247A1B058();
      sub_247A1B070();
      ++v77;
      sub_247A1B04C();

      v71 = v115;
    }
    while (v76 != v77);
LABEL_86:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v85 = v118;
    v86 = v44;
    v87 = swift_bridgeObjectRetain();
    sub_2479EDB3C(v87, v86);
    v115 = v85;
    swift_bridgeObjectRelease();
    v88 = v117;
    if (v117 >> 62)
      goto LABEL_104;
    v89 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v89)
    {
      while (v89 >= 1)
      {
        v90 = 0;
        while (1)
        {
          v91 = (v88 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x249587908](v90, v88)
              : *(id *)(v88 + 8 * v90 + 32);
          v92 = v91;
          if (v90 == 0x80000000)
            break;
          objc_msgSend(v91, sel_setIndex_, v90);

          if (v89 == ++v90)
            goto LABEL_95;
        }
        __break(1u);
LABEL_104:
        swift_bridgeObjectRetain_n();
        v89 = sub_247A1B37C();
        if (!v89)
          goto LABEL_95;
      }
      goto LABEL_109;
    }
LABEL_95:
    swift_bridgeObjectRelease_n();
    if (v88 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v93 = sub_247A1B37C();
      v94 = v102;
      if (!v93)
        goto LABEL_107;
    }
    else
    {
      v93 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      v94 = v102;
      if (!v93)
        goto LABEL_107;
    }
    if (v93 < 1)
      goto LABEL_110;
    for (i = 0; i != v93; ++i)
    {
      if ((v88 & 0xC000000000000001) != 0)
        v96 = (id)MEMORY[0x249587908](i, v88);
      else
        v96 = *(id *)(v88 + 8 * i + 32);
      v97 = v96;
      objc_msgSend(v96, sel_setSticker_, v94);

    }
LABEL_107:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_2479F1EA4(v88);
    swift_bridgeObjectRelease();
    v98 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
    v99 = (void *)sub_247A1B028();
    swift_bridgeObjectRelease();
    v100 = objc_msgSend(v98, sel_initWithArray_, v99);

    objc_msgSend(v94, sel_setRepresentations_, v100);
    return;
  }
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  sub_247A1B514();
  __break(1u);
}

uint64_t sub_2479EECBC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_2479F51C4();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2479F2A1C(v6);
  return sub_247A1B334();
}

uint64_t sub_2479EED34()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_254451FB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_254451FB0);
  return sub_247A1ADAC();
}

uint64_t sub_2479EEDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450880);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container;
  swift_beginAccess();
  sub_2479F77A4(v9, (uint64_t)v8, &qword_254450880);
  v10 = type metadata accessor for StickerContainer(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_2479F7648((uint64_t)v8, a1);
  sub_2479D045C((uint64_t)v8, &qword_254450880);
  sub_2479EEF18(v1, a1);
  sub_2479CD904(a1, (uint64_t)v6, type metadata accessor for StickerContainer);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_2479F768C((uint64_t)v6, v9);
  return swift_endAccess();
}

id sub_2479EEF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  char v12;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_lock);
  objc_msgSend(v4, sel_lock);
  sub_2479CD904(a1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_storeType, a2, type metadata accessor for CoreDataDataMapper.StoreType);
  v5 = type metadata accessor for StickerContainer(0);
  v6 = *(int *)(v5 + 20);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE192E0]), sel_init);
  *(_QWORD *)(a2 + v6) = v7;
  v8 = a2 + *(int *)(v5 + 24);
  *(_OWORD *)v8 = xmmword_247A1C6B0;
  *(_BYTE *)(v8 + 16) = 1;
  objc_msgSend(v7, sel_lock);
  type metadata accessor for StickerContainer.LoadMethod();
  swift_initStackObject();
  sub_2479C9FFC(a2, (uint64_t)&v11);
  v9 = v12;
  *(_OWORD *)v8 = v11;
  *(_BYTE *)(v8 + 16) = v9;
  objc_msgSend(v7, sel_unlock);
  return objc_msgSend(v4, sel_unlock);
}

uint64_t sub_2479EF02C(uint64_t a1)
{
  return sub_2479EFE44(a1, (uint64_t (*)(uint64_t, uint64_t *, uint64_t *, _OWORD *, uint64_t))sub_2479F595C);
}

uint64_t sub_2479EF048@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v7 = type metadata accessor for StickerContainer(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2479EEDA8((uint64_t)v9);
  v13 = a1;
  v14 = a2;
  sub_2479C8344();
  if (!v3)
    *a3 = v10;
  return sub_2479CD960((uint64_t)v9, type metadata accessor for StickerContainer);
}

uint64_t sub_2479EF104@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;

  v21 = a3;
  v6 = sub_247A1ADB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = qword_254450850;
  v11 = a1;
  if (v10 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v6, (uint64_t)qword_254451FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  _s14descr251913A39V5CountCMa();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v9, v6);
  v14 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  sub_2479F7580(a2);
  v15 = (void *)sub_247A1AEC0();
  v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  sub_2479F7580(a2);
  sub_247A14E3C(a2, v16);
  sub_2479F746C(a2);
  sub_2479F746C(a2);
  v17 = sub_2479DD004();
  if (v3)
  {

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    return swift_deallocClassInstance();
  }
  else
  {
    v19 = v17;

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    result = swift_deallocClassInstance();
    *v21 = v19;
  }
  return result;
}

uint64_t sub_2479EF330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v7;

  v7 = a6();
  sub_2479F746C(a4);
  swift_release();
  return v7;
}

void sub_2479EF37C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  BOOL v26;
  uint64_t v27;
  uint8_t *v28;
  _QWORD *v29;
  NSObject *v30;
  _BYTE *v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD v41[3];
  int v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  unsigned __int8 v53;
  void *v54;
  id v55;

  v50 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450880);
  MEMORY[0x24BDAC7A8](v12);
  v49 = (uint64_t)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StickerContainer(0);
  v48 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v41 - v16;
  swift_retain();
  v18 = a4;
  v46 = a6;
  v47 = a5;
  sub_2479F080C(a3, (uint64_t)v18, a5);
  if (!v6)
  {

    goto LABEL_17;
  }
  v55 = v6;
  v19 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
  sub_2479F760C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:

    swift_willThrow();
    goto LABEL_17;
  }
  v20 = v54;
  if (!sub_2479F14CC())
  {

    goto LABEL_11;
  }

  if (a1 <= 0)
  {
    sub_2479CF054();
    swift_allocError();
    *v31 = 6;
    swift_willThrow();

  }
  else
  {
    if (qword_254450850 != -1)
      swift_once();
    v21 = sub_247A1ADB8();
    __swift_project_value_buffer(v21, (uint64_t)qword_254451FB0);
    v22 = v20;
    v23 = sub_247A1ADA0();
    v24 = sub_247A1B118();
    v25 = v24;
    v45 = v23;
    v26 = os_log_type_enabled(v23, v24);
    v44 = v14;
    if (v26)
    {
      v27 = swift_slowAlloc();
      v42 = v25;
      v28 = (uint8_t *)v27;
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412290;
      v43 = a1;
      v51 = v22;
      v41[1] = &v52;
      v41[2] = v28 + 4;
      v30 = v22;
      sub_247A1B208();
      *v29 = v22;

      _os_log_impl(&dword_2479C5000, v45, (os_log_type_t)v42, "Database is corrupted, attempting recovery after %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v29, -1, -1);
      a1 = v43;
      MEMORY[0x249588124](v28, -1, -1);
    }
    else
    {

      v45 = v22;
    }

    sub_2479EEDA8((uint64_t)v17);
    v32 = sub_2479C8CEC();
    v45 = v22;
    if ((v32 & 1) != 0)
    {
      v33 = v44;
      v34 = *(void **)&v17[*(int *)(v44 + 20)];
      objc_msgSend(v34, sel_lock);
      type metadata accessor for StickerContainer.LoadMethod();
      swift_initStackObject();
      sub_2479C9FFC((uint64_t)v17, (uint64_t)&v51);
      swift_release();
      v35 = v52;
      v43 = (uint64_t)v51;
      v42 = v53;
      v36 = &v17[*(int *)(v33 + 24)];
      sub_2479CDCE0(*(void **)v36, *((_QWORD *)v36 + 1), v36[16]);
      *(_QWORD *)v36 = v43;
      *((_QWORD *)v36 + 1) = v35;
      v36[16] = v42;
      objc_msgSend(v34, sel_unlock);
    }
    v37 = v49;
    sub_2479F7648((uint64_t)v17, v49);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v37, 0, 1, v44);
    v38 = v50;
    v39 = v50 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container;
    swift_beginAccess();
    sub_2479F768C(v37, v39);
    swift_endAccess();
    swift_retain();
    v40 = v18;
    sub_2479EF37C(a1 - 1, v38, a3, v40, v47);

  }
LABEL_17:
  swift_release_n();

}

uint64_t sub_2479EF8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint8_t *v26;
  NSObject *v27;
  uint8_t *v28;
  _QWORD *v29;
  _BYTE *v30;
  char v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[3];
  uint8_t *v41;
  int v42;
  _QWORD *p_isa;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  unsigned __int8 v52;
  void *v53;
  id v54;

  v48 = a2;
  v49 = a1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450880);
  MEMORY[0x24BDAC7A8](v11);
  v47 = (uint64_t)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StickerContainer(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v40 - v16;
  swift_retain();
  swift_bridgeObjectRetain();
  v45 = a6;
  v46 = a5;
  sub_2479F080C(a3, a4, a5);
  if (!v6)
    goto LABEL_17;
  v54 = v6;
  v18 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
  sub_2479F760C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:

    swift_willThrow();
    goto LABEL_17;
  }
  v19 = v53;
  if (!sub_2479F14CC())
  {

    goto LABEL_10;
  }

  if (v49 <= 0)
  {
    sub_2479CF054();
    swift_allocError();
    *v30 = 6;
    swift_willThrow();

  }
  else
  {
    if (qword_254450850 != -1)
      swift_once();
    v20 = sub_247A1ADB8();
    __swift_project_value_buffer(v20, (uint64_t)qword_254451FB0);
    v21 = v19;
    v22 = sub_247A1ADA0();
    v23 = sub_247A1B118();
    v24 = v23;
    v44 = v22;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v42 = v24;
      v26 = (uint8_t *)v25;
      p_isa = (_QWORD *)swift_slowAlloc();
      v41 = v26;
      *(_DWORD *)v26 = 138412290;
      v50 = v21;
      v40[1] = &v51;
      v40[2] = v26 + 4;
      v27 = v21;
      sub_247A1B208();
      *p_isa = v21;

      v28 = v41;
      _os_log_impl(&dword_2479C5000, v44, (os_log_type_t)v42, "Database is corrupted, attempting recovery after %@", v41, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      v29 = p_isa;
      swift_arrayDestroy();
      MEMORY[0x249588124](v29, -1, -1);
      MEMORY[0x249588124](v28, -1, -1);
    }
    else
    {

      v44 = v21;
    }

    sub_2479EEDA8((uint64_t)v17);
    v31 = sub_2479C8CEC();
    v44 = v21;
    if ((v31 & 1) != 0)
    {
      v32 = *(void **)&v17[*(int *)(v13 + 20)];
      objc_msgSend(v32, sel_lock);
      type metadata accessor for StickerContainer.LoadMethod();
      swift_initStackObject();
      sub_2479C9FFC((uint64_t)v17, (uint64_t)&v50);
      swift_release();
      v33 = v51;
      p_isa = &v50->isa;
      v42 = v52;
      v34 = &v17[*(int *)(v13 + 24)];
      sub_2479CDCE0(*(void **)v34, *((_QWORD *)v34 + 1), v34[16]);
      *(_QWORD *)v34 = p_isa;
      *((_QWORD *)v34 + 1) = v33;
      v34[16] = v42;
      objc_msgSend(v32, sel_unlock);
    }
    v35 = v47;
    sub_2479F7648((uint64_t)v17, v47);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
    v36 = v48;
    v37 = v48 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container;
    swift_beginAccess();
    sub_2479F768C(v35, v37);
    swift_endAccess();
    v38 = v49 - 1;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2479EF8BC(v38, v36, a3, a4, v46);

  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_release_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479EFDE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;

  v5 = sub_2479F5EB4();
  swift_release();

  return v5;
}

uint64_t sub_2479EFE28(uint64_t a1)
{
  return sub_2479EFE44(a1, (uint64_t (*)(uint64_t, uint64_t *, uint64_t *, _OWORD *, uint64_t))sub_2479F5404);
}

uint64_t sub_2479EFE44(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *, uint64_t *, _OWORD *, uint64_t))
{
  uint64_t *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v9[4];
  char v10;

  v4 = *v2;
  v5 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v5;
  v10 = *(_BYTE *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  swift_retain();
  sub_2479F7580((uint64_t)v9);
  v7 = a2(1, v2, v2, v9, v4);
  sub_2479F746C((uint64_t)v9);
  swift_release();
  return v7;
}

uint64_t sub_2479EFEE0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v7 = type metadata accessor for StickerContainer(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2479EEDA8((uint64_t)v9);
  v13 = a1;
  v14 = a2;
  sub_2479C85AC();
  if (!v3)
    *a3 = v10;
  return sub_2479CD960((uint64_t)v9, type metadata accessor for StickerContainer);
}

uint64_t sub_2479EFF9C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  NSObject *v17;
  __int128 v18;
  __int128 v19;
  uint64_t result;
  uint64_t v21;
  _OWORD v22[4];
  char v23;
  uint64_t *v24;

  v24 = a3;
  v6 = sub_247A1ADB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = qword_254450850;
  v11 = a1;
  if (v10 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v6, (uint64_t)qword_254451FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  _s14descr251913BA9V5FetchCMa();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v9, v6);
  v14 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  sub_2479F7580(a2);
  v15 = (void *)sub_247A1AEC0();
  v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  sub_2479F7580(a2);
  sub_247A14E3C(a2, v16);
  sub_2479F746C(a2);
  sub_2479F746C(a2);
  v17 = sub_2479F77F0(v16);
  if (v3)
  {

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    return swift_deallocClassInstance();
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 48);
    v22[2] = *(_OWORD *)(a2 + 32);
    v22[3] = v18;
    v23 = *(_BYTE *)(a2 + 64);
    v19 = *(_OWORD *)(a2 + 16);
    v22[0] = *(_OWORD *)a2;
    v22[1] = v19;
    v21 = sub_2479F7A0C((unint64_t)v17, (uint64_t)v22);

    swift_bridgeObjectRelease();
    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    result = swift_deallocClassInstance();
    *v24 = v21;
  }
  return result;
}

void *sub_2479F0214(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  void *v5;

  v3 = *v1;
  swift_retain();
  v4 = a1;
  v5 = sub_2479F5EB4(1, (uint64_t)v1, (uint64_t)v1, v4, v3);

  swift_release();
  return v5;
}

uint64_t sub_2479F0288@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v7 = type metadata accessor for StickerContainer(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2479EEDA8((uint64_t)v9);
  v13 = a1;
  v14 = a2;
  sub_2479C8820();
  if (!v3)
    *a3 = v10;
  return sub_2479CD960((uint64_t)v9, type metadata accessor for StickerContainer);
}

uint64_t sub_2479F0344@<X0>(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t result;
  uint64_t v19;

  v7 = sub_247A1ADB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = qword_254450850;
  v12 = a1;
  if (v11 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v7, (uint64_t)qword_254451FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
  _s14descr2519138B1V3AddCMa();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v10, v7);
  sub_2479D97FC();
  if (v3)
    return swift_release();
  type metadata accessor for ManagedSticker();
  v15 = a3;
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v12);
  sub_2479EDE38(v16, v12);

  sub_2479D9BB4();
  v17 = a2;

  swift_setDeallocating();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v7);
  result = swift_deallocClassInstance();
  *v15 = v17;
  return result;
}

uint64_t sub_2479F0510(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_2479EF8BC(1, (uint64_t)v1, (uint64_t)v1, a1, v3, v4);
}

uint64_t sub_2479F0558(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  void *v22;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = sub_247A1AD58();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_247A1ADB8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v24 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v24 - v13;
  v15 = qword_254450850;
  v25 = a1;
  if (v15 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v5, (uint64_t)qword_254451FB0);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v17(v14, v16, v5);
  _s6RemoveCMa();
  v18 = swift_allocObject();
  v19 = v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter;
  v17(v12, v16, v5);
  v17(v9, (uint64_t)v12, v5);
  v20 = v26;
  sub_247A1AD40();
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_retain();
  v21(v12, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v19, v20, v28);
  swift_release();
  v22 = v25;
  *(_QWORD *)(v18 + 16) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v14, v5);
  sub_247A13F28(v29);

  swift_setDeallocating();
  v21((char *)(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger), v5);
  sub_2479CD960(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter, (uint64_t (*)(_QWORD))type metadata accessor for StickerSignposter);
  return swift_deallocClassInstance();
}

void sub_2479F07C0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v3 = *v1;
  swift_retain();
  v4 = a1;
  sub_2479EF37C(1, (uint64_t)v1, (uint64_t)v1, v4, v3, v5);
}

uint64_t sub_2479F080C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for StickerContainer(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2479EEDA8((uint64_t)v7);
  v10 = a2;
  v11 = a3;
  sub_2479C8A90();
  return sub_2479CD960((uint64_t)v7, type metadata accessor for StickerContainer);
}

void sub_2479F08D0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint8_t *v14;
  uint64_t v15;

  v5 = sub_247A1ADB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_254450850;
  v10 = a1;
  if (v9 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_254451FB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  _s6UpdateCMa();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v12 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v8, v5);
  v13 = sub_247A18CB8(a2 + OBJC_IVAR___STKSticker_identifier);
  if (v2)
  {
    swift_release();
  }
  else
  {
    v14 = v13;
    sub_2479EDE38(v13, v10);
    sub_247A19268();

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v5);
    swift_deallocClassInstance();
  }
}

uint64_t sub_2479F0A7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];
  uint64_t (*v9)(void *);
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *v1;
  v4 = type metadata accessor for StickerContainer(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2479EEDA8((uint64_t)v6);
  v12 = a1;
  v13 = v3;
  v9 = sub_2479F76EC;
  v10 = &v11;
  sub_2479C80D0();
  return sub_2479CD960((uint64_t)v6, type metadata accessor for StickerContainer);
}

uint64_t sub_2479F0B30(void *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  void *v22;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v27 = a2;
  v3 = sub_247A1AD58();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_247A1ADB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v24 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = qword_254450850;
  v24 = a1;
  if (v16 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v6, (uint64_t)qword_254451FB0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18(v15, v17, v6);
  _s5TouchCMa();
  v19 = swift_allocObject();
  v20 = v19 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter;
  v18(v13, v17, v6);
  v18(v10, (uint64_t)v13, v6);
  sub_247A1AD40();
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain();
  v21(v13, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v20, v5, v26);
  swift_release();
  v22 = v24;
  *(_QWORD *)(v19 + 16) = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v19 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v15, v6);
  sub_2479D0708(v27);

  swift_setDeallocating();
  v21((char *)(v19 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger), v6);
  sub_2479CD960(v19 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter, (uint64_t (*)(_QWORD))type metadata accessor for StickerSignposter);
  return swift_deallocClassInstance();
}

uint64_t sub_2479F0D7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t i;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22[4];
  char v23;
  _BYTE v24[72];

  v1 = *v0;
  v2 = sub_247A1AC8C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v22 - v7;
  v23 = 1;
  v22[0] = (void *)2;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v23, 0, v22, 0, 0, 0, 1, 8, (uint64_t)v24, 0);
  swift_retain();
  sub_2479F7580((uint64_t)v24);
  v9 = (unint64_t)sub_2479F5404(1, (uint64_t)v0, (uint64_t)v0, (uint64_t)v24, v1);
  sub_2479F746C((uint64_t)v24);
  swift_release();
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_16;
LABEL_3:
  v22[0] = (void *)MEMORY[0x24BEE4AF8];
  result = sub_2479E8EB8(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
    return result;
  }
  v12 = v22[0];
  if ((v9 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v10; ++i)
    {
      v14 = MEMORY[0x249587908](i, v9);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v14 + OBJC_IVAR___STKSticker_identifier, v2);
      swift_unknownObjectRelease();
      v22[0] = v12;
      v16 = v12[2];
      v15 = v12[3];
      if (v16 >= v15 >> 1)
      {
        sub_2479E8EB8(v15 > 1, v16 + 1, 1);
        v12 = v22[0];
      }
      v12[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v16, v8, v2);
    }
  }
  else
  {
    v17 = 0;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v18(v6, *(_QWORD *)(v9 + 8 * v17 + 32) + OBJC_IVAR___STKSticker_identifier, v2);
      v22[0] = v12;
      v20 = v12[2];
      v19 = v12[3];
      if (v20 >= v19 >> 1)
      {
        sub_2479E8EB8(v19 > 1, v20 + 1, 1);
        v12 = v22[0];
      }
      ++v17;
      v12[2] = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v20, v6, v2);
    }
    while (v10 != v17);
  }
  swift_bridgeObjectRelease();
LABEL_17:
  if (qword_2544508A0 != -1)
    swift_once();
  v21 = type metadata accessor for StickerReindexer(0);
  __swift_project_value_buffer(v21, (uint64_t)qword_254450888);
  swift_beginAccess();
  StickerReindexer.reindexStickers(with:)((Swift::OpaquePointer)v12);
  swift_endAccess();
  sub_2479F746C((uint64_t)v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479F1264()
{
  uint64_t v0;

  sub_2479CD960(v0 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_storeType, type metadata accessor for CoreDataDataMapper.StoreType);

  sub_2479D045C(v0 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container, &qword_254450880);
  return swift_deallocClassInstance();
}

uint64_t sub_2479F12C4()
{
  return type metadata accessor for CoreDataDataMapper(0);
}

uint64_t type metadata accessor for CoreDataDataMapper(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_254450C80);
}

void sub_2479F12E0()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for CoreDataDataMapper.StoreType(319);
  if (v0 <= 0x3F)
  {
    sub_2479F1388();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for CoreDataDataMapper.StoreType(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_254450CF8);
}

void sub_2479F1388()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254450CA0)
  {
    type metadata accessor for StickerContainer(255);
    v0 = sub_247A1B1F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254450CA0);
  }
}

uint64_t sub_2479F13DC(uint64_t a1)
{
  return sub_2479EF02C(a1);
}

uint64_t sub_2479F13FC(uint64_t a1)
{
  return sub_2479EFE28(a1);
}

void *sub_2479F141C(void *a1)
{
  return sub_2479F0214(a1);
}

uint64_t sub_2479F143C(uint64_t a1)
{
  return sub_2479F0510(a1);
}

void sub_2479F145C(void *a1)
{
  sub_2479F07C0(a1);
}

uint64_t sub_2479F147C(uint64_t a1)
{
  return sub_2479F0A7C(a1);
}

uint64_t sub_2479F14A4()
{
  return sub_2479F0D7C();
}

BOOL sub_2479F14CC()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;

  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_247A1AEE4();
  v4 = v3;

  if (v2 == sub_247A1AEE4() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
  }
  return objc_msgSend(v0, sel_code) == (id)11
      || objc_msgSend(v0, sel_code) == (id)26
      || objc_msgSend(v0, sel_code) == (id)20
      || objc_msgSend(v0, sel_code) == (id)17;
}

uint64_t sub_2479F15D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  v2 = sub_247A1ADB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2479F1630()
{
  return type metadata accessor for CoreDataDataMapper.ExtractedMethod(0);
}

uint64_t type metadata accessor for CoreDataDataMapper.ExtractedMethod(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_254450C38);
}

uint64_t sub_2479F164C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1ADB8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_2479F16C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_247A1AB9C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_2479F1790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_247A1AB9C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_2479F17F8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_2479F189C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_2479F198C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_2479F1A30(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_2479F1B20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479F1B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_247A1AB9C();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_2479F1B78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2479F1B84(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_247A1AB9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2479F1BD8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_247A1AB9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_2479F1C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AB9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_2479F1C50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1AB9C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_2479F1CA4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_2479E8E38(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450C28);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2479E8E38(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2479E8E38(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2479F7744(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2479F1DCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v6 = MEMORY[0x24BEE4AF8];
    sub_247A1B340();
    v4 = a1 + 32;
    do
    {
      sub_2479CF11C(v4, (uint64_t)&v5);
      type metadata accessor for ManagedRepresentation();
      swift_dynamicCast();
      sub_247A1B328();
      sub_247A1B34C();
      sub_247A1B358();
      sub_247A1B334();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_2479F1EA4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_2479E8E38(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x249587908](i, a1);
        type metadata accessor for ManagedRepresentation();
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2479E8E38(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_2479E8E38(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_2479F7744(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      type metadata accessor for ManagedRepresentation();
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2479E8E38(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_2479E8E38(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_2479F7744(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_2479F20D4(void **a1, unint64_t a2)
{
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;

  v2 = a2;
  v3 = *a1;
  if (!*a1)
  {
    if (a2 >> 62)
      goto LABEL_20;
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; v5 = sub_247A1B37C())
    {
      v6 = 4;
      while (1)
      {
        v7 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x249587908](v6 - 4, v2) : *(id *)(v2 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        if ((objc_msgSend(v7, sel_isPreferred) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254450C18);
          v10 = swift_allocObject();
          *(_OWORD *)(v10 + 16) = xmmword_247A1D2A0;
          *(_QWORD *)(v10 + 32) = v8;
          v13 = v10;
          sub_247A1B04C();
          return v13;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_14;
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  if (v3 == (void *)1)
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  if (v3 == (void *)2)
    return MEMORY[0x24BEE4AF8];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  v12[2] = sub_2479F75E8;
  v12[3] = MEMORY[0x24BDAC7A8](v4);
  swift_bridgeObjectRetain();
  sub_2479D50B4(v3);
  v2 = sub_2479DEDC8(v2, sub_2479F75F0, (uint64_t)v12);
  swift_release();
  return v2;
}

unint64_t sub_2479F22B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2D10);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2CF8);
  v6 = sub_247A1B3AC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2479F77A4(v12, (uint64_t)v5, &qword_2576D2D10);
    result = sub_2479F37A4((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_247A1AC8C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_2479F2444(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13[2];

  type metadata accessor for ManagedRepresentation();
  sub_2479CDA10(&qword_2576D2D08, (uint64_t (*)(uint64_t))type metadata accessor for ManagedRepresentation, MEMORY[0x24BEE5BD8]);
  v2 = 0;
  v13[1] = (id)sub_247A1B0DC();
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_2479F3810(v13, *(id *)(*(_QWORD *)(a1 + 56) + 8 * v9));

  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

id sub_2479F25E8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 *v13;
  uint64_t v14;
  id result;
  uint64_t v16;

  v2 = v1;
  v4 = (void *)sub_247A1AC50();
  objc_msgSend(a1, sel_setIdentifier_, v4);

  v5 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  v7 = *v5;
  v6 = v5[1];
  sub_2479D9370(v7, v6);
  v8 = (void *)sub_247A1ABB4();
  sub_2479D969C(v7, v6);
  objc_msgSend(a1, sel_setData_, v8);

  sub_247A1ACEC();
  v9 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setUti_, v9);

  v10 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  swift_beginAccess();
  if (*v10 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (*v10 <= 0x7FFFFFFF)
  {
    objc_msgSend(a1, sel_setByteCount_);
    v11 = v2 + OBJC_IVAR___STKStickerRepresentation_size;
    objc_msgSend(a1, sel_setSize_w_, *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size));
    objc_msgSend(a1, sel_setSize_h_, *(double *)(v11 + 8));
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v12 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setRole_, v12);

    v13 = (unsigned __int8 *)(v2 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
    swift_beginAccess();
    objc_msgSend(a1, sel_setIsPreferred_, *v13);
    if (qword_254450870 == -1)
      goto LABEL_4;
    goto LABEL_12;
  }
  __break(1u);
LABEL_12:
  swift_once();
LABEL_4:
  v14 = qword_254450868 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
  result = (id)swift_beginAccess();
  if (*(_BYTE *)(v14 + 8))
    v16 = 1;
  else
    v16 = *(_QWORD *)v14;
  if (v16 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v16 <= 0x7FFFFFFF)
  {
    return objc_msgSend(a1, sel_setVersion_);
  }
  __break(1u);
  return result;
}

id sub_2479F28B4(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  _QWORD v11[3];
  uint64_t v12;

  sub_2479F77A4(a1, (uint64_t)v11, &qword_254450C30);
  v3 = v12;
  if (v12)
  {
    v4 = __swift_project_boxed_opaque_existential_1(v11, v12);
    v5 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v4);
    v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    v8 = sub_247A1B4D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(a2, sel_evaluateWithObject_, v8);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_2479F29A8(void *a1, uint64_t (*a2)(_QWORD *))
{
  id v4;
  char v5;
  _QWORD v7[4];

  v7[3] = type metadata accessor for ManagedRepresentation();
  v7[0] = a1;
  v4 = a1;
  v5 = a2(v7);
  sub_2479D045C((uint64_t)v7, &qword_254450C30);
  return v5 & 1;
}

void sub_2479F2A1C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  signed int v16;
  id *v17;
  void *v18;
  id v19;
  id v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  signed int v35;
  signed int v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  signed int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void **v109;
  uint64_t v110;

  v3 = a1[1];
  v4 = sub_247A1B4C0();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_2479F317C(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v103 = v4;
  v98 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v110 = MEMORY[0x24BEE4AF8];
    v109 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        v92 = *v98;
        do
        {
          v93 = v11 - 2;
          if (v11 < 2)
            goto LABEL_127;
          if (!v92)
            goto LABEL_139;
          v94 = *(_QWORD *)&v8[16 * v93 + 32];
          v95 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_2479F326C((id *)(v92 + 8 * v94), (id *)(v92 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), v92 + 8 * v95, v109);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_2479F372C((uint64_t)v8);
          if (v93 >= *((_QWORD *)v8 + 2))
            goto LABEL_129;
          v96 = &v8[16 * v93 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v8 + 2);
          if (v11 > v97)
            goto LABEL_130;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v97 - v11));
          *((_QWORD *)v8 + 2) = v97 - 1;
          v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_247A1B04C();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for ManagedRepresentation();
    v7 = sub_247A1B064();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v109 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v110 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v99 = *a1 - 8;
  v100 = *a1 + 16;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v12 = v9++;
    v107 = v12;
    if (v9 < v3)
    {
      v13 = *(void **)(v10 + 8 * v12);
      v14 = *(id *)(v10 + 8 * v9);
      v15 = v13;
      v104 = objc_msgSend(v14, sel_index);
      v16 = objc_msgSend(v15, sel_index);

      v3 = v106;
      v9 = v12 + 2;
      if (v12 + 2 < v106)
      {
        v101 = v8;
        v17 = (id *)(v100 + 8 * v12);
        while (1)
        {
          v18 = *(v17 - 1);
          v19 = *v17;
          v20 = v18;
          v21 = objc_msgSend(v19, sel_index);
          LODWORD(v18) = objc_msgSend(v20, sel_index);

          if (v104 < v16 == v21 >= (int)v18)
            break;
          ++v9;
          ++v17;
          v3 = v106;
          if (v106 == v9)
          {
            v9 = v106;
            v8 = v101;
            goto LABEL_22;
          }
        }
        v8 = v101;
        v3 = v106;
LABEL_22:
        v12 = v107;
      }
      if (v104 < v16)
      {
        if (v9 < v12)
          goto LABEL_133;
        if (v12 < v9)
        {
          v22 = (uint64_t *)(v99 + 8 * v9);
          v23 = v9;
          v24 = v12;
          v25 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v24 != --v23)
            {
              if (!v10)
                goto LABEL_138;
              v26 = *v25;
              *v25 = *v22;
              *v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_131;
      if (v9 - v12 < v103)
        break;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_2479F3588(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v39 = *((_QWORD *)v8 + 2);
    v38 = *((_QWORD *)v8 + 3);
    v11 = v39 + 1;
    if (v39 >= v38 >> 1)
      v8 = sub_2479F3588((char *)(v38 > 1), v39 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v40 = v8 + 32;
    v41 = &v8[16 * v39 + 32];
    *(_QWORD *)v41 = v12;
    *((_QWORD *)v41 + 1) = v9;
    if (v39)
    {
      v108 = v9;
      while (1)
      {
        v42 = v11 - 1;
        if (v11 >= 4)
        {
          v47 = &v40[16 * v11];
          v48 = *((_QWORD *)v47 - 8);
          v49 = *((_QWORD *)v47 - 7);
          v53 = __OFSUB__(v49, v48);
          v50 = v49 - v48;
          if (v53)
            goto LABEL_115;
          v52 = *((_QWORD *)v47 - 6);
          v51 = *((_QWORD *)v47 - 5);
          v53 = __OFSUB__(v51, v52);
          v45 = v51 - v52;
          v46 = v53;
          if (v53)
            goto LABEL_116;
          v54 = v11 - 2;
          v55 = &v40[16 * v11 - 32];
          v57 = *(_QWORD *)v55;
          v56 = *((_QWORD *)v55 + 1);
          v53 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v53)
            goto LABEL_118;
          v53 = __OFADD__(v45, v58);
          v59 = v45 + v58;
          if (v53)
            goto LABEL_121;
          if (v59 >= v50)
          {
            v77 = &v40[16 * v42];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v53 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v53)
              goto LABEL_125;
            v70 = v45 < v80;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v71 = *((_QWORD *)v8 + 4);
            v72 = *((_QWORD *)v8 + 5);
            v53 = __OFSUB__(v72, v71);
            v64 = v72 - v71;
            v65 = v53;
            goto LABEL_80;
          }
          v44 = *((_QWORD *)v8 + 4);
          v43 = *((_QWORD *)v8 + 5);
          v53 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          v46 = v53;
        }
        if ((v46 & 1) != 0)
          goto LABEL_117;
        v54 = v11 - 2;
        v60 = &v40[16 * v11 - 32];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v63 = __OFSUB__(v61, v62);
        v64 = v61 - v62;
        v65 = v63;
        if (v63)
          goto LABEL_120;
        v66 = &v40[16 * v42];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v53 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v53)
          goto LABEL_123;
        if (__OFADD__(v64, v69))
          goto LABEL_124;
        if (v64 + v69 >= v45)
        {
          v70 = v45 < v69;
LABEL_86:
          if (v70)
            v42 = v54;
          goto LABEL_88;
        }
LABEL_80:
        if ((v65 & 1) != 0)
          goto LABEL_119;
        v73 = &v40[16 * v42];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v53 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v53)
          goto LABEL_122;
        if (v76 < v64)
          goto LABEL_14;
LABEL_88:
        v81 = v42 - 1;
        if (v42 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v82 = v10;
        if (!v10)
          goto LABEL_137;
        v83 = v8;
        v84 = &v40[16 * v81];
        v85 = *(_QWORD *)v84;
        v86 = v40;
        v87 = v42;
        v88 = &v40[16 * v42];
        v89 = *((_QWORD *)v88 + 1);
        v90 = v82;
        sub_2479F326C((id *)(v82 + 8 * *(_QWORD *)v84), (id *)(v82 + 8 * *(_QWORD *)v88), v82 + 8 * v89, v109);
        if (v1)
          goto LABEL_109;
        if (v89 < v85)
          goto LABEL_112;
        if (v87 > *((_QWORD *)v83 + 2))
          goto LABEL_113;
        *(_QWORD *)v84 = v85;
        *(_QWORD *)&v86[16 * v81 + 8] = v89;
        v91 = *((_QWORD *)v83 + 2);
        if (v87 >= v91)
          goto LABEL_114;
        v8 = v83;
        v11 = v91 - 1;
        memmove(v88, v88 + 16, 16 * (v91 - 1 - v87));
        v40 = v86;
        *((_QWORD *)v83 + 2) = v91 - 1;
        v10 = v90;
        v9 = v108;
        if (v91 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v106;
    if (v9 >= v106)
      goto LABEL_98;
  }
  if (__OFADD__(v12, v103))
    goto LABEL_134;
  if (v12 + v103 >= v3)
    v27 = v3;
  else
    v27 = v12 + v103;
  if (v27 >= v12)
  {
    if (v9 != v27)
    {
      v102 = v8;
      v28 = v99 + 8 * v9;
      v105 = v27;
      do
      {
        v29 = *(void **)(v10 + 8 * v9);
        v30 = v12;
        v31 = v28;
        do
        {
          v32 = *(void **)v31;
          v33 = v29;
          v34 = v32;
          v35 = objc_msgSend(v33, sel_index);
          v36 = objc_msgSend(v34, sel_index);

          if (v35 >= v36)
            break;
          if (!v10)
            goto LABEL_136;
          v37 = *(void **)v31;
          v29 = *(void **)(v31 + 8);
          *(_QWORD *)v31 = v29;
          *(_QWORD *)(v31 + 8) = v37;
          v31 -= 8;
          ++v30;
        }
        while (v9 != v30);
        ++v9;
        v28 += 8;
        v12 = v107;
      }
      while (v9 != v105);
      v9 = v105;
      v8 = v102;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_247A1B370();
  __break(1u);
}

void sub_2479F317C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  signed int v12;
  signed int v13;
  void *v14;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v17 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, sel_index);
      v13 = objc_msgSend(v11, sel_index);

      if (v12 >= v13)
      {
LABEL_4:
        ++v4;
        v6 = v17 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v14 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_2479F326C(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  signed int v18;
  signed int v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  signed int v29;
  signed int v30;
  uint64_t result;
  id *v32;
  id *v35;
  char *v36;
  void **v37;
  id *v38;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v38 = __src;
  v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v22 = &a4[v11];
      v36 = (char *)v22;
      v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v23 = (id *)(a3 - 8);
        v24 = v4;
        v32 = v5;
        do
        {
          v35 = v4;
          v25 = v23 + 1;
          v26 = *--v24;
          v27 = *(v22 - 1);
          v28 = v26;
          v29 = objc_msgSend(v27, sel_index);
          v30 = objc_msgSend(v28, sel_index);

          if (v29 >= v30)
          {
            v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22)
              *v23 = *(v22 - 1);
            v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35)
              *v23 = *v24;
            v38 = v24;
          }
          if (v24 <= v32)
            break;
          --v23;
          v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = &a4[v8];
    v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = a4;
      do
      {
        v14 = v5;
        v15 = *v13;
        v16 = *v4;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_index);
        v19 = objc_msgSend(v17, sel_index);

        if (v18 >= v19)
        {
          v21 = v14;
          if (v14 != v13)
            *v14 = *v13;
          v37 = ++v13;
          v20 = v4;
        }
        else
        {
          v20 = v4 + 1;
          v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4)
            *v14 = *v4;
        }
        v5 = v21 + 1;
        if (v13 >= v12)
          break;
        v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      v38 = v5;
    }
LABEL_43:
    sub_2479F3684((void **)&v38, (const void **)&v37, &v36);
    return 1;
  }
  result = sub_247A1B3B8();
  __break(1u);
  return result;
}

char *sub_2479F3588(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2C88);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2479F3684(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_247A1B3B8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_2479F372C(uint64_t a1)
{
  return sub_2479F3588(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_2479F3740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247A1B568();
  sub_247A1AF2C();
  v4 = sub_247A1B580();
  return sub_2479F4898(a1, a2, v4);
}

unint64_t sub_2479F37A4(uint64_t a1)
{
  uint64_t v2;

  sub_247A1AC8C();
  sub_2479CDA10(&qword_2576D2DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_247A1AE84();
  return sub_2479F4978(a1, v2);
}

uint64_t sub_2479F3810(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_247A1B28C();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for ManagedRepresentation();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_247A1B280();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_2479F4634(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_2479F41F8();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_2479F4818((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_247A1B1C0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for ManagedRepresentation();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_247A1B1CC();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_247A1B1CC();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_2479F4AB8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_2479F3A8C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_247A1B2A4();

    if ((v5 & 1) != 0)
    {
      v6 = sub_2479F3C50();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_247A1B1C0();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  type metadata accessor for ManagedRepresentation();
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_247A1B1CC();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_247A1B1CC();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2479F3DD8();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_2479F4494(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2479F3C50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_247A1B280();
  v3 = swift_unknownObjectRetain();
  v4 = sub_2479F4634(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_247A1B1C0();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    type metadata accessor for ManagedRepresentation();
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_247A1B1CC();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_2479F4494(v7);
      if ((sub_247A1B1CC() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_247A1B1CC();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

id sub_2479F3DD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2D00);
  v2 = *v0;
  v3 = sub_247A1B2B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2479F3F80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2D00);
  v3 = sub_247A1B2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_247A1B1C0();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2479F41F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2D00);
  v3 = sub_247A1B2BC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_247A1B1C0();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_2479F4494(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_247A1B25C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_247A1B1C0();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2479F4634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2D00);
    v2 = sub_247A1B2C8();
    v14 = v2;
    sub_247A1B274();
    if (sub_247A1B298())
    {
      type metadata accessor for ManagedRepresentation();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_2479F41F8();
          v2 = v14;
        }
        result = sub_247A1B1C0();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_247A1B298());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

unint64_t sub_2479F4818(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_247A1B1C0();
  result = sub_247A1B268();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_2479F4898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_247A1B4E4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_247A1B4E4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2479F4978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_247A1AC8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_247A1AEB4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

void sub_2479F4AB8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2479F41F8();
  }
  else
  {
    if (v7 > v6)
    {
      sub_2479F3DD8();
      goto LABEL_14;
    }
    sub_2479F3F80();
  }
  v8 = *v3;
  v9 = sub_247A1B1C0();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for ManagedRepresentation();
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_247A1B1CC();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_247A1B508();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_247A1B1CC();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_2479F4C2C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_247A1AC8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2CF8);
  v42 = a2;
  v10 = sub_247A1B3A0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_39;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v18++, 1))
      goto LABEL_41;
    if (v18 >= v39)
      break;
    v23 = v40;
    v24 = v40[v18];
    if (!v24)
    {
      v25 = v18 + 1;
      if (v18 + 1 >= v39)
      {
LABEL_32:
        swift_release();
        v3 = v38;
        if ((v42 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v24 = v40[v25];
      if (!v24)
      {
        while (1)
        {
          v18 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v18 >= v39)
            goto LABEL_32;
          v24 = v40[v18];
          ++v25;
          if (v24)
            goto LABEL_19;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v18;
    }
LABEL_19:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_20:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_2479CDA10(&qword_2576D2DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_247A1AE84();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v11;
  return result;
}

id sub_2479F4FA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = v0;
  v2 = sub_247A1AC8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2CF8);
  v6 = *v0;
  v7 = sub_247A1B394();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (id)swift_release();
LABEL_26:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (id)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v26 = v6 + 64;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1))
      goto LABEL_28;
    if (v12 >= v27)
    {
LABEL_24:
      result = (id)swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v26 + 8 * v12);
    if (!v22)
      break;
LABEL_23:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 8 * v17;
    v20 = *(void **)(*(_QWORD *)(v6 + 56) + v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v12 + 1;
  if (v12 + 1 >= v27)
    goto LABEL_24;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_2479F51C4()
{
  JUMPOUT(0x249587AB8);
}

uint64_t sub_2479F51D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_247A1AB9C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450858);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_2479CD904(a1, (uint64_t)v14, type metadata accessor for CoreDataDataMapper.StoreType);
  sub_2479CD904(a2, v15, type metadata accessor for CoreDataDataMapper.StoreType);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_2479CD904((uint64_t)v14, (uint64_t)v10, type metadata accessor for CoreDataDataMapper.StoreType);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = MEMORY[0x24958714C](v10, v7);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_2479CD960((uint64_t)v14, type metadata accessor for CoreDataDataMapper.StoreType);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_2479D045C((uint64_t)v14, (uint64_t *)&unk_254450858);
    v18 = 0;
    return v18 & 1;
  }
  sub_2479CD960((uint64_t)v14, type metadata accessor for CoreDataDataMapper.StoreType);
  v18 = 1;
  return v18 & 1;
}

void *sub_2479F5404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint8_t *v24;
  NSObject *v25;
  NSObject *v26;
  uint8_t *v27;
  _QWORD *v28;
  _BYTE *v29;
  NSObject *v30;
  char v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  NSObject *v39;
  uint8_t *v40;
  uint8_t *v41;
  int v42;
  _QWORD *p_isa;
  NSObject *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  unsigned __int8 v51;
  void *v52;
  id v53;
  uint64_t v54;

  v47 = a2;
  v48 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450880);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StickerContainer(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v38 - v15;
  swift_retain();
  sub_2479F7580(a4);
  v46 = a5;
  sub_2479EFEE0(a4, a5, &v54);
  if (!v5)
  {
    swift_release();
    sub_2479F746C(a4);
    return (void *)v54;
  }
  v53 = v5;
  v17 = v5;
  v18 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
  sub_2479F760C();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_11;
  v18 = v52;
  if (!sub_2479F14CC())
  {

LABEL_11:
    swift_willThrow();
LABEL_15:
    swift_release();
    sub_2479F746C(a4);
    return v18;
  }

  if (v48 <= 0)
  {
    sub_2479CF054();
    swift_allocError();
    *v29 = 6;
    swift_willThrow();

    goto LABEL_15;
  }
  if (qword_254450850 != -1)
    swift_once();
  v19 = sub_247A1ADB8();
  __swift_project_value_buffer(v19, (uint64_t)qword_254451FB0);
  v44 = v18;
  v20 = sub_247A1ADA0();
  v21 = sub_247A1B118();
  v22 = v21;
  v45 = v20;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = swift_slowAlloc();
    v42 = v22;
    v24 = (uint8_t *)v23;
    p_isa = (_QWORD *)swift_slowAlloc();
    v41 = v24;
    *(_DWORD *)v24 = 138412290;
    v40 = v24 + 4;
    v25 = v44;
    v49 = v44;
    v38 = &v50;
    v39 = v44;
    sub_247A1B208();
    *p_isa = v25;
    v26 = v39;

    v27 = v41;
    _os_log_impl(&dword_2479C5000, v45, (os_log_type_t)v42, "Database is corrupted, attempting recovery after %@", v41, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    v28 = p_isa;
    swift_arrayDestroy();
    MEMORY[0x249588124](v28, -1, -1);
    MEMORY[0x249588124](v27, -1, -1);
  }
  else
  {

    v30 = v44;
    v45 = v30;
  }

  sub_2479EEDA8((uint64_t)v16);
  v31 = sub_2479C8CEC();
  if ((v31 & 1) != 0)
  {
    v45 = *(NSObject **)&v16[*(int *)(v12 + 20)];
    -[NSObject lock](v45, sel_lock);
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_2479C9FFC((uint64_t)v16, (uint64_t)&v49);
    swift_release();
    v33 = v50;
    p_isa = &v49->isa;
    v42 = v51;
    v34 = &v16[*(int *)(v12 + 24)];
    sub_2479CDCE0(*(void **)v34, *((_QWORD *)v34 + 1), v34[16]);
    *(_QWORD *)v34 = p_isa;
    *((_QWORD *)v34 + 1) = v33;
    v34[16] = v42;
    -[NSObject unlock](v45, sel_unlock);
  }
  sub_2479F7648((uint64_t)v16, (uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v35 = v47;
  v36 = v47 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container;
  swift_beginAccess();
  sub_2479F768C((uint64_t)v11, v36);
  swift_endAccess();
  v37 = v48 - 1;
  swift_retain();
  sub_2479F7580(a4);
  v18 = (void *)sub_2479EF330(v37, v35, a3, a4, v46, sub_2479F5404);

  swift_release();
  sub_2479F746C(a4);
  return v18;
}

void *sub_2479F595C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint8_t *v24;
  NSObject *v25;
  NSObject *v26;
  uint8_t *v27;
  _QWORD *v28;
  _BYTE *v29;
  NSObject *v30;
  char v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  NSObject *v39;
  uint8_t *v40;
  uint8_t *v41;
  int v42;
  _QWORD *p_isa;
  NSObject *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  unsigned __int8 v51;
  void *v52;
  id v53;
  uint64_t v54;

  v47 = a2;
  v48 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450880);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StickerContainer(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v38 - v15;
  swift_retain();
  sub_2479F7580(a4);
  v46 = a5;
  sub_2479EF048(a4, a5, &v54);
  if (!v5)
  {
    swift_release();
    sub_2479F746C(a4);
    return (void *)v54;
  }
  v53 = v5;
  v17 = v5;
  v18 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
  sub_2479F760C();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_11;
  v18 = v52;
  if (!sub_2479F14CC())
  {

LABEL_11:
    swift_willThrow();
LABEL_15:
    swift_release();
    sub_2479F746C(a4);
    return v18;
  }

  if (v48 <= 0)
  {
    sub_2479CF054();
    swift_allocError();
    *v29 = 6;
    swift_willThrow();

    goto LABEL_15;
  }
  if (qword_254450850 != -1)
    swift_once();
  v19 = sub_247A1ADB8();
  __swift_project_value_buffer(v19, (uint64_t)qword_254451FB0);
  v44 = v18;
  v20 = sub_247A1ADA0();
  v21 = sub_247A1B118();
  v22 = v21;
  v45 = v20;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = swift_slowAlloc();
    v42 = v22;
    v24 = (uint8_t *)v23;
    p_isa = (_QWORD *)swift_slowAlloc();
    v41 = v24;
    *(_DWORD *)v24 = 138412290;
    v40 = v24 + 4;
    v25 = v44;
    v49 = v44;
    v38 = &v50;
    v39 = v44;
    sub_247A1B208();
    *p_isa = v25;
    v26 = v39;

    v27 = v41;
    _os_log_impl(&dword_2479C5000, v45, (os_log_type_t)v42, "Database is corrupted, attempting recovery after %@", v41, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    v28 = p_isa;
    swift_arrayDestroy();
    MEMORY[0x249588124](v28, -1, -1);
    MEMORY[0x249588124](v27, -1, -1);
  }
  else
  {

    v30 = v44;
    v45 = v30;
  }

  sub_2479EEDA8((uint64_t)v16);
  v31 = sub_2479C8CEC();
  if ((v31 & 1) != 0)
  {
    v45 = *(NSObject **)&v16[*(int *)(v12 + 20)];
    -[NSObject lock](v45, sel_lock);
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_2479C9FFC((uint64_t)v16, (uint64_t)&v49);
    swift_release();
    v33 = v50;
    p_isa = &v49->isa;
    v42 = v51;
    v34 = &v16[*(int *)(v12 + 24)];
    sub_2479CDCE0(*(void **)v34, *((_QWORD *)v34 + 1), v34[16]);
    *(_QWORD *)v34 = p_isa;
    *((_QWORD *)v34 + 1) = v33;
    v34[16] = v42;
    -[NSObject unlock](v45, sel_unlock);
  }
  sub_2479F7648((uint64_t)v16, (uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v35 = v47;
  v36 = v47 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container;
  swift_beginAccess();
  sub_2479F768C((uint64_t)v11, v36);
  swift_endAccess();
  v37 = v48 - 1;
  swift_retain();
  sub_2479F7580(a4);
  v18 = (void *)sub_2479EF330(v37, v35, a3, a4, v46, sub_2479F595C);

  swift_release();
  sub_2479F746C(a4);
  return v18;
}

void *sub_2479F5EB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint8_t *v25;
  NSObject *v26;
  NSObject *v27;
  uint8_t *v28;
  _QWORD *v29;
  _BYTE *v30;
  NSObject *v31;
  char v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t *v40;
  NSObject *v41;
  uint8_t *v42;
  uint8_t *v43;
  int v44;
  _QWORD *p_isa;
  NSObject *v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  unsigned __int8 v53;
  void *v54;
  id v55;
  uint64_t v56;

  v49 = a2;
  v50 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450880);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StickerContainer(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v40 - v15;
  swift_retain();
  v17 = a4;
  v48 = a5;
  sub_2479F0288((uint64_t)v17, a5, &v56);
  if (!v5)
  {

    swift_release();
    return (void *)v56;
  }
  v55 = v5;
  v18 = v5;
  v19 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
  sub_2479F760C();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_11;
  v19 = v54;
  if (!sub_2479F14CC())
  {

LABEL_11:
    swift_willThrow();
LABEL_15:

    swift_release();
    return v19;
  }

  if (v50 <= 0)
  {
    sub_2479CF054();
    swift_allocError();
    *v30 = 6;
    swift_willThrow();

    goto LABEL_15;
  }
  if (qword_254450850 != -1)
    swift_once();
  v20 = sub_247A1ADB8();
  __swift_project_value_buffer(v20, (uint64_t)qword_254451FB0);
  v46 = v19;
  v21 = sub_247A1ADA0();
  v22 = sub_247A1B118();
  v23 = v22;
  v47 = v21;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v44 = v23;
    v25 = (uint8_t *)v24;
    p_isa = (_QWORD *)swift_slowAlloc();
    v43 = v25;
    *(_DWORD *)v25 = 138412290;
    v42 = v25 + 4;
    v26 = v46;
    v51 = v46;
    v40 = &v52;
    v41 = v46;
    sub_247A1B208();
    *p_isa = v26;
    v27 = v41;

    v28 = v43;
    _os_log_impl(&dword_2479C5000, v47, (os_log_type_t)v44, "Database is corrupted, attempting recovery after %@", v43, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    v29 = p_isa;
    swift_arrayDestroy();
    MEMORY[0x249588124](v29, -1, -1);
    MEMORY[0x249588124](v28, -1, -1);
  }
  else
  {

    v31 = v46;
    v47 = v31;
  }

  sub_2479EEDA8((uint64_t)v16);
  v32 = sub_2479C8CEC();
  if ((v32 & 1) != 0)
  {
    v47 = *(NSObject **)&v16[*(int *)(v12 + 20)];
    -[NSObject lock](v47, sel_lock);
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_2479C9FFC((uint64_t)v16, (uint64_t)&v51);
    swift_release();
    v34 = v52;
    p_isa = &v51->isa;
    v44 = v53;
    v35 = &v16[*(int *)(v12 + 24)];
    sub_2479CDCE0(*(void **)v35, *((_QWORD *)v35 + 1), v35[16]);
    *(_QWORD *)v35 = p_isa;
    *((_QWORD *)v35 + 1) = v34;
    v35[16] = v44;
    -[NSObject unlock](v47, sel_unlock);
  }
  sub_2479F7648((uint64_t)v16, (uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v36 = v49;
  v37 = v49 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper____lazy_storage___container;
  swift_beginAccess();
  sub_2479F768C((uint64_t)v11, v37);
  swift_endAccess();
  v38 = v50 - 1;
  swift_retain();
  v39 = v17;
  v19 = (void *)sub_2479EFDE0(v38, v36, a3, v39);

  swift_release();
  return v19;
}

uint64_t sub_2479F63F8(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  void *v30;
  unint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  objc_class *v46;
  _BYTE *v47;
  _QWORD *v48;
  unint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  objc_super v69;
  char *v70;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450840);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_247A1AD04();
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v57 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_247A1AC8C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v70 = (char *)&v57 - v19;
  v20 = (void *)a2[1];
  v21 = (void *)a2[2];
  v22 = a2[3];

  sub_2479D5080(v21);
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(a1, "uti");
  if (!v23)
    goto LABEL_12;
  v24 = v23;
  v64 = sub_247A1AEE4();
  v22 = v25;

  v26 = objc_msgSend(a1, sel_identifier);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_9;
  }
  v27 = v26;
  sub_247A1AC68();

  v28 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v28(v13, v18, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_2479D045C((uint64_t)v13, &qword_254450A70);
LABEL_12:
    sub_2479F74B0();
    swift_allocError();
    *v37 = 2;
    swift_willThrow();

    return v22;
  }
  v63 = (void (*)(char *, char *, uint64_t))v22;
  v22 = (uint64_t)v70;
  v28(v70, v13, v14);
  v29 = objc_msgSend(a1, sel_data);
  if (!v29)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v22, v14);
    goto LABEL_12;
  }
  v30 = v29;
  v22 = sub_247A1ABCC();
  v62 = v31;

  v32 = objc_msgSend(a1, sel_role);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    sub_2479D969C(v22, v62);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v70, v14);
    goto LABEL_12;
  }
  v33 = v32;
  v61 = v22;
  v59 = sub_247A1AEE4();
  v60 = v34;

  sub_247A1AD10();
  v35 = v67;
  v22 = v68;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v6, 1, v68) == 1)
  {
    swift_bridgeObjectRelease();
    sub_2479D045C((uint64_t)v6, (uint64_t *)&unk_254450840);
    sub_2479F74B0();
    swift_allocError();
    *v36 = 1;
    swift_willThrow();
    sub_2479D969C(v61, v62);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v70, v14);
  }
  else
  {
    v39 = v66;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v66, v6, v22);
    v40 = v22;
    v63 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v63(v18, v70, v14);
    v41 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v41(v65, v39, v40);
    v64 = (int)objc_msgSend(a1, sel_byteCount);
    objc_msgSend(a1, sel_size_w);
    v43 = v42;
    objc_msgSend(a1, sel_size_h);
    v45 = v44;
    v58 = objc_msgSend(a1, sel_isPreferred);
    v57 = (int)objc_msgSend(a1, sel_version);
    v46 = (objc_class *)type metadata accessor for Sticker.Representation();
    v47 = objc_allocWithZone(v46);
    v63(&v47[OBJC_IVAR___STKStickerRepresentation_identifier], v18, v14);
    v48 = &v47[OBJC_IVAR___STKStickerRepresentation_data];
    v49 = v62;
    *v48 = v61;
    v48[1] = v49;
    v50 = v65;
    v41(&v47[OBJC_IVAR___STKStickerRepresentation_uti], v65, v68);
    *(_QWORD *)&v47[OBJC_IVAR___STKStickerRepresentation_byteCount] = v64;
    v51 = &v47[OBJC_IVAR___STKStickerRepresentation_size];
    *v51 = v43;
    v51[1] = v45;
    v52 = (uint64_t *)&v47[OBJC_IVAR___STKStickerRepresentation_role];
    v53 = v60;
    *v52 = v59;
    v52[1] = v53;
    v47[OBJC_IVAR___STKStickerRepresentation_isPreferred] = v58;
    *(_QWORD *)&v47[OBJC_IVAR___STKStickerRepresentation_version] = v57;
    v69.receiver = v47;
    v69.super_class = v46;
    v22 = (uint64_t)objc_msgSendSuper2(&v69, sel_init);
    v54 = v68;
    v55 = *(void (**)(char *, uint64_t))(v67 + 8);
    v55(v50, v68);
    v56 = *(void (**)(char *, uint64_t))(v15 + 8);
    v56(v18, v14);

    v55(v66, v54);
    v56(v70, v14);
  }
  return v22;
}

uint64_t sub_2479F69D0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v10;
  id v11;
  _OWORD v12[4];
  char v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v5)
      break;
    v14 = MEMORY[0x24BEE4AF8];
    result = sub_247A1B340();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x249587908](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = *(_OWORD *)(a2 + 48);
      v12[2] = *(_OWORD *)(a2 + 32);
      v12[3] = v9;
      v13 = *(_BYTE *)(a2 + 64);
      v10 = *(_OWORD *)(a2 + 16);
      v12[0] = *(_OWORD *)a2;
      v12[1] = v10;
      v11 = v8;
      sub_2479F7580(a2);
      sub_2479F63F8(v11, v12);

      if (v2)
        return swift_release();
      ++v7;
      sub_247A1B328();
      sub_247A1B34C();
      sub_247A1B358();
      sub_247A1B334();
      if (v5 == v7)
        return v14;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v5 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2479F6B40(id a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  unsigned int v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  int v20;
  uint64_t v21;
  void *v22;
  _BYTE *v23;
  unint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_class *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t *v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  id v58;
  void *v59;
  char *v60;
  id v61;
  uint64_t v62;
  void (*v63)(_QWORD, _QWORD);
  id v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  double v79;
  id v80;
  void *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  id v86;
  void *v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t result;
  unint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD, _QWORD);
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  id v104;
  objc_super v105;
  void *v106[3];
  unsigned __int8 v107;
  __int128 v108;
  _OWORD v109[3];
  char v110;
  id v111[2];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a2 + 48);
  v109[1] = *(_OWORD *)(a2 + 32);
  v109[2] = v9;
  v110 = *(_BYTE *)(a2 + 64);
  v10 = *(_OWORD *)(a2 + 16);
  v108 = *(_OWORD *)a2;
  v109[0] = v10;
  v11 = objc_msgSend(a1, sel_type);
  if (v11)
  {
    if (v11 != 1)
    {
      sub_2479F746C((uint64_t)&v108);
      sub_2479F74B0();
      swift_allocError();
      *v23 = 0;
      swift_willThrow();

      return a2;
    }
    v103 = v8;
    LODWORD(v102) = 1;
  }
  else
  {
    v103 = v8;
    LODWORD(v102) = 0;
  }
  v12 = objc_msgSend(a1, sel_representations);
  v13 = objc_msgSend(v12, sel_allObjects);

  v14 = sub_247A1B034();
  v15 = sub_2479F1DCC(v14);
  swift_bridgeObjectRelease();
  v106[0] = (void *)MEMORY[0x24BEE4AF8];
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v104 = a1;
  if (!v16)
  {
    swift_bridgeObjectRelease();
    v22 = (void *)MEMORY[0x24BEE4AF8];
    goto LABEL_25;
  }
  if (v16 < 1)
  {
    __break(1u);
LABEL_64:
    result = swift_release();
    __break(1u);
    return result;
  }
  v101 = v2;
  for (i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (id)MEMORY[0x249587908](i, v15);
    else
      v18 = *(id *)(v15 + 8 * i + 32);
    v19 = v18;
    v20 = objc_msgSend(v18, sel_version);
    if (qword_254450870 != -1)
      swift_once();
    v21 = qword_254450868 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
    swift_beginAccess();
    if (*(_BYTE *)(v21 + 8) == 1)
    {
      if (v20 >= 2)
        goto LABEL_10;
    }
    else if (*(_QWORD *)v21 < v20)
    {
LABEL_10:

      continue;
    }
    sub_247A1B328();
    sub_247A1B34C();
    sub_247A1B358();
    sub_247A1B334();
  }
  swift_bridgeObjectRelease();
  v22 = v106[0];
  a1 = v104;
  v3 = v101;
LABEL_25:
  sub_2479F74F4(v109, v111);
  sub_2479F74F4(v111, v106);
  sub_2479F7530(v111);
  v24 = sub_2479F20D4(v106, (unint64_t)v22);
  swift_release();
  sub_2479F7558(v111);
  if ((v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
  {
    v92 = swift_bridgeObjectRetain();
    v25 = sub_2479D5268(v92);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = (void *)(v24 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  v106[0] = v25;
  sub_2479EECBC((uint64_t *)v106);
  if (v3)
    goto LABEL_64;
  swift_bridgeObjectRelease();
  v26 = v106[0];
  sub_2479F7580((uint64_t)&v108);
  v27 = sub_2479F69D0((unint64_t)v26, (uint64_t)&v108);
  sub_2479F746C((uint64_t)&v108);
  sub_2479F746C((uint64_t)&v108);
  swift_release();
  v98 = v27;
  v28 = objc_msgSend(a1, sel_attributionName);
  if (v28)
    goto LABEL_30;
  v29 = objc_msgSend(a1, sel_attributionAdamID);

  if (v29)
  {
LABEL_32:
    v30 = objc_msgSend(a1, sel_attributionAdamID);
    v31 = objc_msgSend(a1, sel_attributionBundleIdentifier);
    if (v31)
    {
      v32 = v31;
      v101 = (char *)sub_247A1AEE4();
      v100 = v33;

    }
    else
    {
      v101 = 0;
      v100 = 0;
    }
    v34 = objc_msgSend(a1, sel_attributionName);
    if (v34)
    {
      v35 = v34;
      v36 = sub_247A1AEE4();
      v38 = v37;

    }
    else
    {
      v36 = 0;
      v38 = 0;
    }
    v39 = (objc_class *)type metadata accessor for Sticker.AttributionInfo();
    v40 = (char *)objc_allocWithZone(v39);
    v41 = &v40[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
    *(_QWORD *)v41 = 0;
    *((_QWORD *)v41 + 1) = 0;
    *(_QWORD *)&v40[OBJC_IVAR___STKStickerAttributionInfo_adamID] = v30;
    swift_beginAccess();
    v42 = v100;
    *(_QWORD *)v41 = v101;
    *((_QWORD *)v41 + 1) = v42;
    v43 = v40;
    v44 = v30;
    swift_bridgeObjectRelease();
    v45 = (uint64_t *)&v43[OBJC_IVAR___STKStickerAttributionInfo_name];
    *v45 = v36;
    v45[1] = v38;

    v105.receiver = v43;
    v105.super_class = v39;
    v97 = objc_msgSendSuper2(&v105, sel_init);

    a1 = v104;
  }
  else
  {
    v28 = objc_msgSend(a1, sel_attributionBundleIdentifier);
    if (v28)
    {
LABEL_30:

      goto LABEL_32;
    }
    v97 = 0;
  }
  v107 = v102;
  v46 = objc_msgSend(a1, sel_identifier);
  v47 = (uint64_t)v103;
  if (v46)
  {
    v48 = v46;
    sub_247A1AC68();

    v49 = sub_247A1AC8C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v47, 0, 1, v49);
  }
  else
  {
    v50 = sub_247A1AC8C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v47, 1, 1, v50);
  }
  v51 = objc_msgSend(a1, sel_name);
  v52 = sub_247A1AEE4();
  v54 = v53;

  v55 = sub_247A02954((int)objc_msgSend(a1, sel_effect));
  if ((v56 & 1) != 0)
    v57 = 0;
  else
    v57 = v55;
  objc_msgSend(a1, sel_byteCount);
  v58 = objc_msgSend(a1, sel_metadata);
  if (v58)
  {
    v59 = v58;
    v102 = sub_247A1ABCC();
    v101 = v60;

  }
  else
  {
    v102 = 0;
    v101 = (char *)0xF000000000000000;
  }
  v61 = objc_msgSend(a1, sel_externalURI);
  v62 = sub_247A1AEE4();
  v94 = v63;

  v64 = objc_msgSend(a1, sel_accessibilityName);
  v96 = v54;
  if (v64)
  {
    v65 = v64;
    v100 = sub_247A1AEE4();
    v99 = v66;

  }
  else
  {
    v100 = 0;
    v99 = 0;
  }
  v67 = objc_msgSend(a1, sel_searchText);
  v95 = v57;
  if (v67)
  {
    v68 = v67;
    v69 = v52;
    v70 = sub_247A1AEE4();
    v72 = v71;

  }
  else
  {
    v69 = v52;
    v70 = 0;
    v72 = 0;
  }
  v73 = v104;
  objc_msgSend(v104, sel_creationDate);
  v75 = v74;
  objc_msgSend(v73, sel_lastUsedDate);
  v77 = v76;
  objc_msgSend(v73, sel_libraryIndex);
  v79 = v78;
  v80 = objc_msgSend(v73, sel_sanitizedPrompt);
  if (v80)
  {
    v81 = v80;
    v82 = sub_247A1AEE4();
    v84 = v83;

  }
  else
  {
    v82 = 0;
    v84 = 0;
  }
  v85 = v98;
  v86 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  v93 = v82;
  v87 = v97;
  v88 = v85;
  v89 = v102;
  v90 = v101;
  a2 = sub_247A0296C(&v107, (uint64_t)v103, v88, v69, v96, v95, v102, v101, v79, v62, v94, v100, v99, v97, v70, v72, v75, 0, v77,
         0,
         v93,
         v84);

  sub_2479D96E0(v89, (unint64_t)v90);
  return a2;
}

uint64_t sub_2479F746C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 16);

  sub_2479D5080(v2);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2479F74B0()
{
  unint64_t result;

  result = qword_2576D2CE8;
  if (!qword_2576D2CE8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for ManagedStickerDecodingError, &type metadata for ManagedStickerDecodingError);
    atomic_store(result, (unint64_t *)&qword_2576D2CE8);
  }
  return result;
}

_QWORD *sub_2479F74F4(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

id *sub_2479F7530(id *a1)
{
  sub_2479D50B4(*a1);
  return a1;
}

id *sub_2479F7558(id *a1)
{
  sub_2479D5080(*a1);
  return a1;
}

uint64_t sub_2479F7580(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  v3 = *(id *)(a1 + 8);
  sub_2479D50B4(v2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2479F75C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2479F75E8(uint64_t a1)
{
  uint64_t v1;

  return sub_2479F28B4(a1, *(void **)(v1 + 16));
}

uint64_t sub_2479F75F0(void *a1)
{
  uint64_t v1;

  return sub_2479F29A8(a1, *(uint64_t (**)(_QWORD *))(v1 + 16)) & 1;
}

unint64_t sub_2479F760C()
{
  unint64_t result;

  result = qword_2576D2CF0;
  if (!qword_2576D2CF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576D2CF0);
  }
  return result;
}

uint64_t sub_2479F7648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StickerContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2479F768C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2479F76D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2479EFF9C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2479F76EC(void *a1)
{
  uint64_t v1;

  return sub_2479F0B30(a1, *(char **)(v1 + 16));
}

uint64_t sub_2479F76F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

void sub_2479F772C(void *a1)
{
  uint64_t v1;

  sub_2479F08D0(a1, *(_QWORD *)(v1 + 16));
}

_OWORD *sub_2479F7744(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2479F7754()
{
  return swift_release();
}

uint64_t sub_2479F775C(void *a1)
{
  uint64_t v1;

  return sub_2479F0558(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2479F7774@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_2479F0344(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_2479F778C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2479EF104(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2479F77A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

NSObject *sub_2479F77F0(void *a1)
{
  id v1;
  id v2;
  void *v3;
  NSObject *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  void *v14;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x24BDAC8D0];
  v16[0] = 0;
  v1 = objc_msgSend(a1, sel_execute_, v16);
  v2 = v16[0];
  if (v1)
  {
    v3 = v1;
    type metadata accessor for ManagedSticker();
    v4 = sub_247A1B034();
    v5 = v2;

  }
  else
  {
    v6 = v16[0];
    v7 = (void *)sub_247A1AADC();

    swift_willThrow();
    v8 = v7;
    v9 = v7;
    v4 = sub_247A1ADA0();
    v10 = sub_247A1B118();
    if (os_log_type_enabled(v4, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v7;
      v14 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v16[0] = v14;
      sub_247A1B208();
      *v12 = v14;

      _os_log_impl(&dword_2479C5000, v4, v10, "Could not fetch stickers: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v12, -1, -1);
      MEMORY[0x249588124](v11, -1, -1);

    }
    else
    {

    }
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_2479F7A0C(unint64_t a1, uint64_t a2)
{
  void *v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  _OWORD v16[4];
  char v17;
  uint64_t v18;

  v4 = *(_OWORD *)(a2 + 48);
  v16[2] = *(_OWORD *)(a2 + 32);
  v16[3] = v4;
  v17 = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v5;
  sub_2479F7580((uint64_t)v16);
  v6 = sub_2479F7C30(a1, (uint64_t)v16);
  if (v2)
  {
    sub_2479F746C((uint64_t)v16);
    v7 = v2;
    v8 = v2;
    v9 = sub_247A1ADA0();
    v10 = sub_247A1B118();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v2;
      v14 = _swift_stdlib_bridgeErrorToNSError();
      v18 = v14;
      sub_247A1B208();
      *v12 = v14;

      _os_log_impl(&dword_2479C5000, v9, v10, "Could not convert fetched stickers: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v12, -1, -1);
      MEMORY[0x249588124](v11, -1, -1);

    }
    else
    {

    }
    swift_willThrow();
  }
  else
  {
    sub_2479F746C((uint64_t)v16);
  }
  return v6;
}

uint64_t sub_2479F7BEC()
{
  return _s14descr251913BA9V5FetchCMa();
}

uint64_t _s14descr251913BA9V5FetchCMa()
{
  uint64_t result;

  result = qword_254450C68;
  if (!qword_254450C68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2479F7C30(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v10;
  id v11;
  _OWORD v12[4];
  char v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v5)
      break;
    v14 = MEMORY[0x24BEE4AF8];
    result = sub_247A1B340();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x249587908](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = *(_OWORD *)(a2 + 48);
      v12[2] = *(_OWORD *)(a2 + 32);
      v12[3] = v9;
      v13 = *(_BYTE *)(a2 + 64);
      v10 = *(_OWORD *)(a2 + 16);
      v12[0] = *(_OWORD *)a2;
      v12[1] = v10;
      v11 = v8;
      sub_2479F7580(a2);
      sub_2479F6B40(v11, (uint64_t)v12);

      if (v2)
        return swift_release();
      ++v7;
      sub_247A1B328();
      sub_247A1B34C();
      sub_247A1B358();
      sub_247A1B334();
      if (v5 == v7)
        return v14;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v5 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  return result;
}

id static RemoteStickersAPI.xpcInterface.getter()
{
  id v0;
  uint64_t inited;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2576D89E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450A40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247A1C830;
  *(_QWORD *)(inited + 32) = sub_2479D032C(0, &qword_254450BE8);
  *(_QWORD *)(inited + 40) = sub_2479D032C(0, &qword_254450BE0);
  sub_2479F7E70(inited, (uint64_t)sel_removeStickersWithIdentifiers_withReply_, 0, 0);
  swift_setDeallocating();
  return v0;
}

void sub_2479F7E70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  id v9;
  void *v10;
  id v11;
  id v12;

  v5 = v4;
  sub_2479F1CA4(a1);
  v9 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v10 = (void *)sub_247A1B028();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithArray_, v10);

  sub_247A1B0D0();
  v12 = (id)sub_247A1B0C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setClasses_forSelector_argumentIndex_ofReply_, v12, a2, a3, a4 & 1);

}

uint64_t XPCDataMapper.__allocating_init(proxier:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2479E0B28(a1, v2 + 16);
  return v2;
}

uint64_t XPCDataMapper.init(proxier:)(__int128 *a1)
{
  uint64_t v1;

  sub_2479E0B28(a1, v1 + 16);
  return v1;
}

id sub_2479F7FE8(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  id v20;
  _QWORD v21[5];
  id v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  char v28;

  v3 = v1;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  LOBYTE(v22) = *(_BYTE *)a1;
  v23 = *(_OWORD *)(a1 + 8);
  v24 = v4;
  v25 = *(_OWORD *)(a1 + 32);
  v26 = v5;
  v27 = v6;
  v28 = v7;
  sub_247A1AAC4();
  swift_allocObject();
  v8 = (id)sub_247A1AAB8();
  sub_2479F81F8();
  v9 = sub_247A1AAAC();
  v11 = v10;
  swift_release();
  if (v2)
  {

    sub_2479F823C();
    swift_allocError();
    *(_OWORD *)v12 = xmmword_247A1D430;
    *(_BYTE *)(v12 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    v13 = v3 + 2;
    v15 = v3[5];
    v14 = v3[6];
    v16 = __swift_project_boxed_opaque_existential_1(v13, v15);
    MEMORY[0x24BDAC7A8](v16);
    v21[2] = v9;
    v21[3] = v11;
    v17 = *(void (**)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v14 + 8);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507F0);
    v17(&v22, sub_2479F843C, v21, v18, v15, v14);
    v8 = v22;
    if ((v23 & 1) != 0)
    {
      v20 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
      swift_willThrowTypedImpl();
      sub_2479D969C(v9, v11);
      sub_2479F8444(v8, 1);
    }
    else
    {
      sub_2479D969C(v9, v11);
    }
  }
  return v8;
}

unint64_t sub_2479F81F8()
{
  unint64_t result;

  result = qword_254450758;
  if (!qword_254450758)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.FetchRequest, &type metadata for Sticker.FetchRequest);
    atomic_store(result, (unint64_t *)&qword_254450758);
  }
  return result;
}

unint64_t sub_2479F823C()
{
  unint64_t result;

  result = qword_2576D2D18;
  if (!qword_2576D2D18)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for XPCDataMapperError, &type metadata for XPCDataMapperError);
    atomic_store(result, (unint64_t *)&qword_2576D2D18);
  }
  return result;
}

uint64_t XPCCoder.encode<A>(_:)()
{
  uint64_t v0;

  sub_247A1AAC4();
  swift_allocObject();
  sub_247A1AAB8();
  v0 = sub_247A1AAAC();
  swift_release();
  return v0;
}

uint64_t sub_2479F8310@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  _QWORD v10[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = -1;
  v5 = (void *)sub_247A1ABB4();
  v10[4] = sub_2479F9DC4;
  v10[5] = v4;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2479F84F0;
  v10[3] = &block_descriptor_25;
  v6 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_countFor_withReply_, v5, v6);
  _Block_release(v6);

  swift_beginAccess();
  v7 = *(void **)(v4 + 16);
  *(_QWORD *)a2 = v7;
  v8 = *(_BYTE *)(v4 + 24);
  *(_BYTE *)(a2 + 8) = v8;
  sub_2479F9DCC(v7, v8);
  return swift_release();
}

uint64_t sub_2479F843C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479F8310(a1, a2);
}

void sub_2479F8444(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

void sub_2479F8450(uint64_t a1, void *a2, uint64_t a3)
{
  void *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  unsigned __int8 v10;

  if (a2)
  {
    swift_beginAccess();
    v6 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = a2;
    v7 = *(_BYTE *)(a3 + 24);
    *(_BYTE *)(a3 + 24) = 1;
    v8 = a2;
    v9 = v6;
    v10 = v7;
  }
  else
  {
    swift_beginAccess();
    v9 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = a1;
    v10 = *(_BYTE *)(a3 + 24);
    *(_BYTE *)(a3 + 24) = 0;
  }
  sub_2479F9DF0(v9, v10);
}

void sub_2479F84F0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_2479F8550(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  _QWORD v24[5];
  id v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  char v31;

  v3 = v1;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  LOBYTE(v25) = *(_BYTE *)a1;
  v26 = *(_OWORD *)(a1 + 8);
  v27 = v4;
  v28 = *(_OWORD *)(a1 + 32);
  v29 = v5;
  v30 = v6;
  v31 = v7;
  sub_247A1AAC4();
  swift_allocObject();
  v8 = sub_247A1AAB8();
  sub_2479F81F8();
  v9 = sub_247A1AAAC();
  v11 = v10;
  swift_release();
  if (v2)
  {

    sub_2479F823C();
    swift_allocError();
    *(_OWORD *)v12 = xmmword_247A1D430;
    *(_BYTE *)(v12 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    v13 = v3 + 2;
    v15 = v3[5];
    v14 = v3[6];
    v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(v13, v15);
    MEMORY[0x24BDAC7A8](v8);
    v24[2] = v9;
    v24[3] = v11;
    v16 = *(void (**)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v14 + 8);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507E8);
    v16(&v25, sub_2479F87F8, v24, v17, v15, v14);
    v18 = v25;
    v19 = v26;
    v20 = BYTE8(v26);
    if ((BYTE8(v26) & 1) != 0)
    {
      v21 = v25;
      v25 = v18;
      v22 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
      swift_willThrowTypedImpl();
      sub_2479D969C(v9, v11);
      sub_2479F8828(v18, 1);
      sub_2479F8834(v18, v19, v20);
    }
    else
    {
      sub_247A1AAA0();
      swift_allocObject();
      sub_247A1AA94();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BB8);
      sub_2479F8840();
      sub_247A1AA88();
      swift_release();
      v8 = (uint64_t)v25;
      sub_2479D969C(v9, v11);
      sub_2479F8834(v18, v19, 0);
    }
  }
  return v8;
}

uint64_t sub_2479F87F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479F8CB8(a1, (uint64_t)sub_2479F9D2C, (uint64_t)&block_descriptor_19, (SEL *)&selRef_fetch_withReply_, a2);
}

void sub_2479F8828(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_2479F8834(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_2479D969C((uint64_t)a1, a2);
}

unint64_t sub_2479F8840()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2544507A0;
  if (!qword_2544507A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254450BB8);
    v2 = sub_2479F8C78(&qword_254450780, (uint64_t)&protocol conformance descriptor for Sticker);
    result = MEMORY[0x249588058](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2544507A0);
  }
  return result;
}

uint64_t sub_2479F88B4(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_247A1ABCC();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_2479D96E0((uint64_t)v4, v8);
  return swift_release();
}

uint64_t XPCCoder.decode<A>(_:)()
{
  sub_247A1AAA0();
  swift_allocObject();
  sub_247A1AA94();
  sub_247A1AA88();
  return swift_release();
}

id sub_2479F89E0(void *a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  id v17;
  id v18;
  _QWORD v20[4];
  uint64_t v21;
  id v22[2];
  char v23;
  uint64_t *v24;

  v3 = v1;
  v22[0] = a1;
  sub_247A1AAC4();
  swift_allocObject();
  v4 = (id)sub_247A1AAB8();
  type metadata accessor for Sticker(0);
  sub_2479F8C78((unint64_t *)&unk_2576D2D20, (uint64_t)&protocol conformance descriptor for Sticker);
  v5 = sub_247A1AAAC();
  v7 = v6;
  swift_release();
  if (v2)
  {

    sub_2479F823C();
    swift_allocError();
    *(_OWORD *)v8 = xmmword_247A1D440;
    *(_BYTE *)(v8 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    v9 = v3 + 2;
    v11 = v3[5];
    v10 = v3[6];
    v4 = __swift_project_boxed_opaque_existential_1(v9, v11);
    v24 = &v21;
    MEMORY[0x24BDAC7A8](v4);
    v20[2] = v5;
    v20[3] = v7;
    v12 = *(void (**)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v10 + 8);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507E8);
    v12(v22, sub_2479F8DEC, v20, v13, v11, v10);
    v21 = v5;
    v14 = v22[0];
    v15 = v22[1];
    v16 = v23;
    if ((v23 & 1) != 0)
    {
      v17 = v22[0];
      v22[0] = v14;
      v18 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
      swift_willThrowTypedImpl();
      sub_2479D969C(v21, v7);
      sub_2479F8E1C(v14);
      sub_2479F8834(v14, (unint64_t)v15, v16);
    }
    else
    {
      sub_247A1AAA0();
      swift_allocObject();
      sub_247A1AA94();
      sub_2479F8C78(&qword_254450780, (uint64_t)&protocol conformance descriptor for Sticker);
      sub_247A1AA88();
      swift_release();
      v4 = v22[0];
      sub_2479D969C(v21, v7);
      sub_2479F8834(v14, (unint64_t)v15, 0);
    }
  }
  return v4;
}

uint64_t sub_2479F8C78(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Sticker(255);
    result = MEMORY[0x249588058](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2479F8CB8@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, SEL *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  unsigned __int8 v15;
  _QWORD v17[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 32) = -1;
  v11 = (void *)sub_247A1ABB4();
  v17[4] = a2;
  v17[5] = v10;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_2479F88B4;
  v17[3] = a3;
  v12 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a4, v11, v12);
  _Block_release(v12);

  swift_beginAccess();
  v13 = *(void **)(v10 + 16);
  v14 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)a5 = v13;
  *(_QWORD *)(a5 + 8) = v14;
  v15 = *(_BYTE *)(v10 + 32);
  *(_BYTE *)(a5 + 16) = v15;
  sub_2479F9D44(v13, v14, v15);
  return swift_release();
}

uint64_t sub_2479F8DEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479F8CB8(a1, (uint64_t)sub_2479F9D2C, (uint64_t)&block_descriptor_15, (SEL *)&selRef_addSticker_withReply_, a2);
}

void sub_2479F8E1C(id a1)
{

}

void sub_2479F8E28(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  void *v7;
  unint64_t v8;
  unsigned __int8 v9;
  id v10;
  void *v11;
  unint64_t v12;
  unsigned __int8 v13;
  void *v15;
  unint64_t v16;
  unsigned __int8 v17;

  if (a3)
  {
    swift_beginAccess();
    v7 = *(void **)(a4 + 16);
    v8 = *(_QWORD *)(a4 + 24);
    *(_QWORD *)(a4 + 16) = a3;
    *(_QWORD *)(a4 + 24) = 0;
    v9 = *(_BYTE *)(a4 + 32);
    *(_BYTE *)(a4 + 32) = 1;
    v10 = a3;
    v11 = v7;
    v12 = v8;
    v13 = v9;
  }
  else
  {
    if (a2 >> 60 == 15)
      return;
    swift_beginAccess();
    v15 = *(void **)(a4 + 16);
    v16 = *(_QWORD *)(a4 + 24);
    *(_QWORD *)(a4 + 16) = a1;
    *(_QWORD *)(a4 + 24) = a2;
    v17 = *(_BYTE *)(a4 + 32);
    *(_BYTE *)(a4 + 32) = 0;
    sub_2479D9370(a1, a2);
    v11 = v15;
    v12 = v16;
    v13 = v17;
  }
  sub_2479F9D68(v11, v12, v13);
}

_QWORD *sub_2479F8EF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *(*v6)(uint64_t *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *result;
  _QWORD v9[4];
  uint64_t v10;
  char v11;

  v4 = v1[5];
  v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  v9[2] = a1;
  v6 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD *, uint64_t, uint64_t, uint64_t))(v5 + 8);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507F8);
  result = v6(&v10, sub_2479F90E4, v9, v7, v4, v5);
  if (!v2 && (v11 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
    return (_QWORD *)swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_2479F8FB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  _QWORD v10[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = -1;
  sub_247A1AC8C();
  v5 = (void *)sub_247A1B028();
  v10[4] = sub_2479F9CC8;
  v10[5] = v4;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2479D1400;
  v10[3] = &block_descriptor_9;
  v6 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_removeStickersWithIdentifiers_withReply_, v5, v6);
  _Block_release(v6);

  swift_beginAccess();
  v7 = *(void **)(v4 + 16);
  *(_QWORD *)a2 = v7;
  v8 = *(_BYTE *)(v4 + 24);
  *(_BYTE *)(a2 + 8) = v8;
  sub_2479F9DCC(v7, v8);
  return swift_release();
}

uint64_t sub_2479F90E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479F8FB4(a1, a2);
}

void sub_2479F90EC(void *a1)
{
  sub_2479F9368(a1, (uint64_t)sub_2479F9234);
}

uint64_t sub_2479F9108@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, SEL *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  _QWORD v16[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 24) = -1;
  v11 = (void *)sub_247A1ABB4();
  v16[4] = a2;
  v16[5] = v10;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_2479D1400;
  v16[3] = a3;
  v12 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a4, v11, v12);
  _Block_release(v12);

  swift_beginAccess();
  v13 = *(void **)(v10 + 16);
  *(_QWORD *)a5 = v13;
  v14 = *(_BYTE *)(v10 + 24);
  *(_BYTE *)(a5 + 8) = v14;
  sub_2479F9DCC(v13, v14);
  return swift_release();
}

uint64_t sub_2479F9234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479F9108(a1, (uint64_t)sub_2479F9CC8, (uint64_t)&block_descriptor_5, (SEL *)&selRef_updateSticker_withReply_, a2);
}

_QWORD *sub_2479F9264()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *(*v4)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  char v8;

  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v4 = *(_QWORD *(**)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD, uint64_t, uint64_t, uint64_t))(v3 + 8);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507F8);
  result = v4(&v7, sub_2479F931C, 0, v5, v2, v3);
  if (!v1 && (v8 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
    return (_QWORD *)swift_willThrowTypedImpl();
  }
  return result;
}

id sub_2479F931C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result;

  result = objc_msgSend(a1, sel_reindexAllStickers);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_2479F934C(void *a1)
{
  sub_2479F9368(a1, (uint64_t)sub_2479F9560);
}

void sub_2479F9368(void *a1, uint64_t a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(id *__return_ptr, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  char v18;
  id *v19;

  v17 = a1;
  sub_247A1AAC4();
  swift_allocObject();
  sub_247A1AAB8();
  type metadata accessor for Sticker(0);
  sub_2479F8C78((unint64_t *)&unk_2576D2D20, (uint64_t)&protocol conformance descriptor for Sticker);
  v5 = sub_247A1AAAC();
  v7 = v6;
  swift_release();
  if (v3)
  {

    sub_2479F823C();
    swift_allocError();
    *(_OWORD *)v8 = xmmword_247A1D440;
    *(_BYTE *)(v8 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    v10 = v2[5];
    v9 = v2[6];
    v11 = __swift_project_boxed_opaque_existential_1(v2 + 2, v10);
    v19 = &v17;
    MEMORY[0x24BDAC7A8](v11);
    v16[2] = v5;
    v16[3] = v7;
    v12 = *(void (**)(id *__return_ptr, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))(v9 + 8);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507F8);
    v12(&v17, a2, v16, v13, v10, v9);
    if ((v18 & 1) != 0)
    {
      v14 = v17;
      v15 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
      swift_willThrowTypedImpl();
      sub_2479D969C(v5, v7);
      sub_2479F8444(v14, 1);
    }
    else
    {
      sub_2479D969C(v5, v7);
    }
  }
}

uint64_t sub_2479F9560@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2479F9108(a1, (uint64_t)sub_2479F9CC8, (uint64_t)&block_descriptor_1, (SEL *)&selRef_touchStickerSpotlightItem_withReply_, a2);
}

void sub_2479F9590(void *a1, uint64_t a2)
{
  void *v4;
  unsigned __int8 v5;
  id v6;
  void *v7;
  unsigned __int8 v8;

  if (a1)
  {
    swift_beginAccess();
    v4 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = a1;
    v5 = *(_BYTE *)(a2 + 24);
    *(_BYTE *)(a2 + 24) = 1;
    v6 = a1;
    v7 = v4;
    v8 = v5;
  }
  else
  {
    swift_beginAccess();
    v7 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = 0;
    v8 = *(_BYTE *)(a2 + 24);
    *(_BYTE *)(a2 + 24) = 0;
  }
  sub_2479F9DF0(v7, v8);
}

uint64_t XPCDataMapper.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t XPCDataMapper.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_2479F966C(uint64_t a1)
{
  return sub_2479F7FE8(a1);
}

uint64_t sub_2479F968C(uint64_t a1)
{
  return sub_2479F8550(a1);
}

id sub_2479F96AC(void *a1)
{
  return sub_2479F89E0(a1);
}

_QWORD *sub_2479F96CC(uint64_t a1)
{
  return sub_2479F8EF4(a1);
}

void sub_2479F96EC(void *a1)
{
  sub_2479F90EC(a1);
}

void sub_2479F970C(void *a1)
{
  sub_2479F934C(a1);
}

_QWORD *sub_2479F972C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *(*v4)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v2);
  v4 = *(_QWORD *(**)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD, uint64_t, uint64_t, uint64_t))(v3 + 8);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507F8);
  result = v4(&v7, sub_2479F931C, 0, v5, v2, v3);
  if (!v1 && (v8 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B00);
    return (_QWORD *)swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t XPCDataMapperError.errorDescription.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) && *(_BYTE *)(v0 + 16) != 1)
    __asm { BR              X10 }
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  sub_247A1AF38();
  return 0x6574656D61726150;
}

void sub_2479F9920()
{
  JUMPOUT(0x2479F98D8);
}

void sub_2479F9944()
{
  JUMPOUT(0x2479F98D8);
}

void sub_2479F995C()
{
  JUMPOUT(0x2479F98D8);
}

ValueMetadata *type metadata accessor for RemoteStickersAPI()
{
  return &type metadata for RemoteStickersAPI;
}

uint64_t type metadata accessor for XPCDataMapper()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCDataMapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCDataMapper.__allocating_init(proxier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of XPCDataMapper.count(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of XPCDataMapper.fetch(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of XPCDataMapper.addSticker(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of XPCDataMapper.removeStickers(identifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of XPCDataMapper.updateSticker(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of XPCDataMapper.reindexAllStickers()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of XPCDataMapper.touchSpotlightItem(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_2479F9A94(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for XPCDataMapperError(uint64_t a1)
{
  return sub_2479F9ABC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2479F9ABC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s8Stickers18XPCDataMapperErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2479F9A94(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for XPCDataMapperError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2479F9A94(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2479F9ABC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for XPCDataMapperError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2479F9ABC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCDataMapperError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCDataMapperError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2479F9C54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2479F9C6C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for XPCDataMapperError()
{
  return &type metadata for XPCDataMapperError;
}

uint64_t dispatch thunk of ProxyProvider.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for XPCCoder()
{
  return &type metadata for XPCCoder;
}

uint64_t sub_2479F9CBC()
{
  return objectdestroyTm((void (*)(_QWORD, _QWORD))sub_2479FA3A0);
}

void sub_2479F9CC8(void *a1)
{
  uint64_t v1;

  sub_2479F9590(a1, v1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_2479F9CF8()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_2479F8834(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), v1 & 1);
  return swift_deallocObject();
}

void sub_2479F9D2C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_2479F8E28(a1, a2, a3, v3);
}

id sub_2479F9D44(id result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_2479F9D5C(result, a2, a3 & 1);
  return result;
}

id sub_2479F9D5C(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)sub_2479D9370((uint64_t)a1, a2);
}

void sub_2479F9D68(void *a1, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_2479F8834(a1, a2, a3 & 1);
}

uint64_t sub_2479F9D80()
{
  return objectdestroyTm((void (*)(_QWORD, _QWORD))sub_2479F8444);
}

uint64_t objectdestroyTm(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 24);
  if (v2 != 255)
    a1(*(_QWORD *)(v1 + 16), v2 & 1);
  return swift_deallocObject();
}

void sub_2479F9DC4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2479F8450(a1, a2, v2);
}

id sub_2479F9DCC(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_2479F9DE4(result, a2 & 1);
  return result;
}

id sub_2479F9DE4(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

void sub_2479F9DF0(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_2479F8444(a1, a2 & 1);
}

ValueMetadata *type metadata accessor for XPCProxyProvider()
{
  return &type metadata for XPCProxyProvider;
}

void sub_2479F9E18(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t inited;
  uint64_t v16;
  id *v17;
  void *v18;
  id v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  _QWORD aBlock[14];

  v36 = a4;
  v38 = a1;
  v39 = a2;
  v37 = sub_247A1B1F0();
  v5 = *(_QWORD *)(v37 - 8);
  v6 = MEMORY[0x24BDAC7A8](v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v33 - v9;
  v11 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v12 = (void *)sub_247A1AEC0();
  v13 = objc_msgSend(v11, sel_initWithMachServiceName_options_, v12, 0);

  v14 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2576D89E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450A40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247A1C830;
  *(_QWORD *)(inited + 32) = sub_2479D032C(0, &qword_254450BE8);
  *(_QWORD *)(inited + 40) = sub_2479D032C(0, &qword_254450BE0);
  sub_2479F7E70(inited, (uint64_t)sel_removeStickersWithIdentifiers_withReply_, 0, 0);
  swift_setDeallocating();
  objc_msgSend(v13, sel_setRemoteObjectInterface_, v14);

  objc_msgSend(v13, sel_resume);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  v17 = (id *)(v16 + 16);
  aBlock[4] = sub_2479FA398;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2479FA310;
  aBlock[3] = &block_descriptor_31;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v19 = objc_msgSend(v13, sel_synchronousRemoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_247A1B244();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450738);
  if (!swift_dynamicCast())
  {
    sub_2479F823C();
    swift_allocError();
    *(_OWORD *)v23 = xmmword_247A1D450;
    *(_BYTE *)(v23 + 16) = 2;
    swift_willThrow();
LABEL_5:
    swift_release();
    goto LABEL_6;
  }
  v20 = v38;
  v34 = a3;
  v35 = v5;
  v21 = aBlock[13];
  swift_beginAccess();
  if (!*v17)
  {
    v20(v21);
    if (*v17)
    {
      v24 = *v17;
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v37);
      swift_release();
      goto LABEL_6;
    }
    v25 = v35;
    v26 = v8;
    v27 = v37;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v8, v10, v37);
    v28 = v34;
    v29 = *(_QWORD *)(v34 - 8);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v34);
    v31 = *(void (**)(char *, uint64_t))(v25 + 8);
    if (v30 != 1)
    {
      v31(v10, v27);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v36, v26, v28);
      swift_release();
      objc_msgSend(v13, sel_invalidate);

      return;
    }
    v31(v26, v27);
    sub_2479F823C();
    swift_allocError();
    *(_OWORD *)v32 = xmmword_247A1D460;
    *(_BYTE *)(v32 + 16) = 2;
    swift_willThrow();
    swift_unknownObjectRelease();
    v31(v10, v27);
    goto LABEL_5;
  }
  v22 = *v17;
  swift_willThrow();
  swift_release();
  swift_unknownObjectRelease();
LABEL_6:
  objc_msgSend(v13, sel_invalidate);

}

id sub_2479FA2C0(void *a1, uint64_t a2)
{
  void *v4;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  return a1;
}

void sub_2479FA310(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_2479FA360(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2479F9E18(a1, a2, a3, a4);
}

uint64_t sub_2479FA374()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2479FA398(void *a1)
{
  uint64_t v1;

  return sub_2479FA2C0(a1, v1);
}

id ManagedRepresentation.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedRepresentation.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedRepresentation();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedRepresentation()
{
  return objc_opt_self();
}

id ManagedRepresentation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedRepresentation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2479FA52C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_247A1AFA4();
  else
    return 0;
}

uint64_t sub_2479FA570(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_247A1B37C())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x249587908](0, a2);
LABEL_5:
      v6 = v5;
      type metadata accessor for Sticker.Representation();
      v7 = sub_247A1B1CC();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_247A1B1CC();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x249587908](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_247A1B1CC();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_2479FA6E4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x249587908](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x249587908](0, v2);
LABEL_21:
    v14 = v13;
    type metadata accessor for Sticker.Representation();
    v15 = sub_247A1B1CC();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x249587908](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x249587908](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_247A1B1CC();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_247A1B1CC();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t Sticker.__allocating_init(type:identifier:representations:name:effect:byteCount:metadata:externalURI:accessibilityName:attributionInfo:searchText:creationDate:lastUsedDate:libraryIndex:sanitizedPrompt:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, uint64_t a10, char *a11, __int128 a12, uint64_t a13, uint64_t a14, void *a15, __int128 a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char *a22)
{
  objc_class *v22;
  id v24;
  uint64_t v25;

  v24 = objc_allocWithZone(v22);
  v25 = sub_247A0296C(a1, a2, a3, a4, a5, a6, a10, a11, a9, a12, *((void (**)(_QWORD, _QWORD))&a12 + 1), a13, a14, a15, a16, *((uint64_t *)&a16 + 1), a17, a18 & 1, a19,
          a20 & 1,
          a21,
          a22);

  sub_2479D96E0(a10, (unint64_t)a11);
  return v25;
}

char *Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:searchText:sanitizedPrompt:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  id v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  unsigned __int8 v28[32];

  v28[0] = *a1;
  v22 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  v23 = (char *)sub_247A032BC(v28, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_2479D96E0(a5, a6);
  v24 = &v23[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  *(_QWORD *)v24 = a12;
  *((_QWORD *)v24 + 1) = a13;
  v25 = v23;
  swift_bridgeObjectRelease();
  v26 = &v25[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  *(_QWORD *)v26 = a14;
  *((_QWORD *)v26 + 1) = a15;

  swift_bridgeObjectRelease();
  return v25;
}

uint64_t Sticker.Effect.init(rawValue:)(uint64_t a1)
{
  return sub_247A02954(a1);
}

Stickers::Sticker::StickerType_optional __swiftcall Sticker.StickerType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (Stickers::Sticker::StickerType_optional)rawValue;
}

uint64_t Sticker.StickerType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_2479FAC74()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_2576D2D30);
  __swift_project_value_buffer(v0, (uint64_t)qword_2576D2D30);
  return sub_247A1ADAC();
}

void Sticker.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___STKSticker_type);
}

uint64_t _s8Stickers7StickerC10identifier10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___STKSticker_identifier;
  v4 = sub_247A1AC8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2479FADE4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_2479FAEB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  *v3 = a1;
  swift_bridgeObjectRelease();
  sub_2479FDA28();
}

void sub_2479FAF10(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2479FDA28();
}

void (*sub_2479FAF7C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2479FAFC4;
}

void sub_2479FAFC4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_2479FDA28();
}

uint64_t sub_2479FB000()
{
  return sub_2479FB9EC(&OBJC_IVAR___STKSticker_accessibilityName);
}

uint64_t sub_2479FB018(uint64_t a1, uint64_t a2)
{
  return sub_2479FBACC(a1, a2, &OBJC_IVAR___STKSticker_accessibilityName);
}

uint64_t (*sub_2479FB024())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2479FB0AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___STKSticker_byteCount;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2479FB1A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2479FB25C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479FB2B8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2479FB320())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2479FB370()
{
  return sub_2479FB9EC(&OBJC_IVAR___STKSticker_searchText);
}

uint64_t sub_2479FB388(uint64_t a1, uint64_t a2)
{
  return sub_2479FBACC(a1, a2, &OBJC_IVAR___STKSticker_searchText);
}

uint64_t (*sub_2479FB394())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2479FB3E4()
{
  return sub_2479FB9EC(&OBJC_IVAR___STKSticker_sanitizedPrompt);
}

uint64_t sub_2479FB3FC(uint64_t a1, uint64_t a2)
{
  return sub_2479FBACC(a1, a2, &OBJC_IVAR___STKSticker_sanitizedPrompt);
}

uint64_t (*sub_2479FB408())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

BOOL sub_2479FB4B8()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___STKSticker_searchText);
  swift_beginAccess();
  v2 = v1[1];
  if (!v2)
    return 0;
  if ((v2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(v2) & 0xF;
  else
    v3 = *v1 & 0xFFFFFFFFFFFFLL;
  return v3 != 0;
}

uint64_t sub_2479FB568()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___STKSticker_effect;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2479FB5F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___STKSticker_effect);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_2479FB63C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2479FB70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR___STKSticker_metadata;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  sub_2479D935C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_2479FB7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v5 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_2479D96E0(v6, v7);
}

uint64_t sub_2479FB850@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_2479D935C(v4, v5);
}

uint64_t sub_2479FB8A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(*a2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  *v4 = v2;
  v4[1] = v3;
  sub_2479D935C(v2, v3);
  return sub_2479D96E0(v5, v6);
}

uint64_t (*sub_2479FB91C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_2479FB96C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  void *v4;

  v3 = a1 + *a3;
  swift_beginAccess();
  if (!*(_QWORD *)(v3 + 8))
    return 0;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2479FB9E0()
{
  return sub_2479FB9EC(&OBJC_IVAR___STKSticker_externalURI);
}

uint64_t sub_2479FB9EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_2479FBA48(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  if (a3)
  {
    v6 = sub_247A1AEE4();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479FBAC0(uint64_t a1, uint64_t a2)
{
  return sub_2479FBACC(a1, a2, &OBJC_IVAR___STKSticker_externalURI);
}

uint64_t sub_2479FBACC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2479FBB24(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2479FBB88())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *sub_2479FBC14()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_2479FBCBC(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_2479FBD0C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_2479FBD6C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2479FBDF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___STKSticker_creationDate;
  swift_beginAccess();
  return *(double *)v1;
}

double sub_2479FBECC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___STKSticker_lastUsedDate;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_2479FBF60(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR___STKSticker_lastUsedDate);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_2479FBFB0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2479FC038()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___STKSticker_libraryIndex;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_2479FC1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  return sub_2479F77A4(v3, a1, &qword_254450A70);
}

uint64_t sub_2479FC304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  sub_2479EA85C(a1, v3);
  return swift_endAccess();
}

uint64_t sub_2479FC35C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2479F77A4(a1, (uint64_t)v6, &qword_254450A70);
  v7 = *a2 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  sub_2479EA85C((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t (*sub_2479FC410())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  objc_class *v11;
  id v18;
  uint64_t v19;

  v18 = objc_allocWithZone(v11);
  v19 = sub_247A032BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_2479D96E0(a5, a6);
  return v19;
}

uint64_t Sticker.init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v13;

  v13 = sub_247A032BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_2479D96E0(a5, a6);
  return v13;
}

uint64_t Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:searchText:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  id v20;
  uint64_t v21;
  _QWORD *v22;
  unsigned __int8 v24[24];

  v24[0] = *a1;
  v20 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  v21 = sub_247A032BC(v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_2479D96E0(a5, a6);
  v22 = (_QWORD *)(v21 + OBJC_IVAR___STKSticker_searchText);
  swift_beginAccess();
  *v22 = a12;
  v22[1] = a13;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t Sticker.__allocating_init(type:representations:name:metadata:externalURI:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v17;
  uint64_t v18;

  v17 = objc_allocWithZone(v8);
  v18 = sub_247A039B0(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_2479D96E0(a5, a6);
  return v18;
}

uint64_t Sticker.init(type:representations:name:metadata:externalURI:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;

  v10 = sub_247A039B0(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_2479D96E0(a5, a6);
  return v10;
}

uint64_t Sticker.init(type:identifier:representations:name:effect:byteCount:metadata:externalURI:accessibilityName:attributionInfo:searchText:creationDate:lastUsedDate:libraryIndex:sanitizedPrompt:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, void (*a13)(_QWORD, _QWORD), uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char *a24)
{
  uint64_t v24;

  v24 = sub_247A0296C(a1, a2, a3, a4, a5, a6, a10, a11, a7, a12, a13, a14, a15, a16, a17, a18, a19, a20 & 1, a21,
          a22 & 1,
          a23,
          a24);

  sub_2479D96E0(a10, (unint64_t)a11);
  return v24;
}

uint64_t sub_2479FC840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  id *v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD v39[7];
  unint64_t v40;
  _QWORD v41[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2BC0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_247A1D2E0;
  sub_247A1AF38();
  sub_247A1B364();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  strcpy((char *)v41, "identifier = ");
  HIWORD(v41[1]) = -4864;
  sub_247A1AC8C();
  sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  v3 = v41[1];
  *(_QWORD *)(v2 + 48) = v41[0];
  *(_QWORD *)(v2 + 56) = v3;
  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  v39[6] = 0xD000000000000012;
  v40 = 0x8000000247A1FC40;
  swift_beginAccess();
  v4 = type metadata accessor for Sticker.Representation();
  v5 = swift_bridgeObjectRetain();
  MEMORY[0x249587644](v5, v4);
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = 0xD000000000000012;
  *(_QWORD *)(v2 + 72) = v40;
  v6 = (_QWORD *)(v1 + OBJC_IVAR___STKSticker_accessibilityName);
  swift_beginAccess();
  v7 = v6[1];
  if (v7)
  {
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = *v6 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      swift_bridgeObjectRetain();
      sub_247A1B2D4();
      swift_bridgeObjectRelease();
      v39[3] = 0xD000000000000014;
      v39[4] = 0x8000000247A1FC80;
      sub_247A1AF38();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      if (v10 >= v9 >> 1)
        v2 = (uint64_t)sub_2479E8D2C((_QWORD *)(v9 > 1), v10 + 1, 1, (_QWORD *)v2);
      *(_QWORD *)(v2 + 16) = v10 + 1;
      v11 = v2 + 16 * v10;
      *(_QWORD *)(v11 + 32) = 0xD000000000000014;
      *(_QWORD *)(v11 + 40) = 0x8000000247A1FC80;
    }
  }
  v12 = v1 + OBJC_IVAR___STKSticker_externalURI;
  swift_beginAccess();
  if (*(_QWORD *)(v12 + 8))
  {
    swift_bridgeObjectRetain();
    sub_247A1B2D4();
    swift_bridgeObjectRelease();
    strcpy((char *)v39, "externalURI = ");
    HIBYTE(v39[1]) = -18;
    sub_247A1AF38();
    swift_bridgeObjectRelease();
    v13 = v39[0];
    v14 = v39[1];
    v16 = *(_QWORD *)(v2 + 16);
    v15 = *(_QWORD *)(v2 + 24);
    if (v16 >= v15 >> 1)
      v2 = (uint64_t)sub_2479E8D2C((_QWORD *)(v15 > 1), v16 + 1, 1, (_QWORD *)v2);
    *(_QWORD *)(v2 + 16) = v16 + 1;
    v17 = v2 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v13;
    *(_QWORD *)(v17 + 40) = v14;
  }
  v18 = (uint64_t *)(v1 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  v19 = v18[1];
  if (v19 >> 60 != 15)
  {
    sub_2479D9370(*v18, v19);
    sub_247A1B2D4();
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  v20 = (id *)(v1 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  if (*v20)
  {
    v21 = *v20;
    sub_247A1B2D4();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v21, sel_description);
    sub_247A1AEE4();

    sub_247A1AF38();
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v2 + 16);
    v23 = *(_QWORD *)(v2 + 24);
    if (v24 >= v23 >> 1)
      v2 = (uint64_t)sub_2479E8D2C((_QWORD *)(v23 > 1), v24 + 1, 1, (_QWORD *)v2);
    *(_QWORD *)(v2 + 16) = v24 + 1;
    v25 = v2 + 16 * v24;
    *(_QWORD *)(v25 + 32) = 0xD000000000000012;
    *(_QWORD *)(v25 + 40) = 0x8000000247A1FC60;

  }
  sub_247A1AF38();
  swift_beginAccess();
  sub_247A1B364();
  v27 = *(_QWORD *)(v2 + 16);
  v26 = *(_QWORD *)(v2 + 24);
  if (v27 >= v26 >> 1)
    v2 = (uint64_t)sub_2479E8D2C((_QWORD *)(v26 > 1), v27 + 1, 1, (_QWORD *)v2);
  *(_QWORD *)(v2 + 16) = v27 + 1;
  v28 = v2 + 16 * v27;
  *(_QWORD *)(v28 + 32) = 0;
  *(_QWORD *)(v28 + 40) = 0xE000000000000000;
  sub_247A1B2D4();
  sub_247A1AF38();
  swift_beginAccess();
  sub_247A1B0B8();
  v30 = *(_QWORD *)(v2 + 16);
  v29 = *(_QWORD *)(v2 + 24);
  if (v30 >= v29 >> 1)
    v2 = (uint64_t)sub_2479E8D2C((_QWORD *)(v29 > 1), v30 + 1, 1, (_QWORD *)v2);
  *(_QWORD *)(v2 + 16) = v30 + 1;
  v31 = v2 + 16 * v30;
  *(_QWORD *)(v31 + 32) = 0;
  *(_QWORD *)(v31 + 40) = 0xE000000000000000;
  sub_247A1B2D4();
  sub_247A1AF38();
  swift_beginAccess();
  sub_247A1B0B8();
  v33 = *(_QWORD *)(v2 + 16);
  v32 = *(_QWORD *)(v2 + 24);
  if (v33 >= v32 >> 1)
    v2 = (uint64_t)sub_2479E8D2C((_QWORD *)(v32 > 1), v33 + 1, 1, (_QWORD *)v2);
  *(_QWORD *)(v2 + 16) = v33 + 1;
  v34 = v2 + 16 * v33;
  *(_QWORD *)(v34 + 32) = 0;
  *(_QWORD *)(v34 + 40) = 0xE000000000000000;
  sub_247A1B2D4();
  sub_247A1AF38();
  swift_beginAccess();
  sub_247A1B0B8();
  v36 = *(_QWORD *)(v2 + 16);
  v35 = *(_QWORD *)(v2 + 24);
  if (v36 >= v35 >> 1)
    v2 = (uint64_t)sub_2479E8D2C((_QWORD *)(v35 > 1), v36 + 1, 1, (_QWORD *)v2);
  *(_QWORD *)(v2 + 16) = v36 + 1;
  v37 = v2 + 16 * v36;
  *(_QWORD *)(v37 + 32) = 0;
  *(_QWORD *)(v37 + 40) = 0xE000000000000000;
  swift_getObjectType();
  sub_247A1B5BC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B98);
  sub_2479D96F4((unint64_t *)&qword_2576D2D50, &qword_2576D2B98, MEMORY[0x24BEE12B0]);
  sub_247A1AE9C();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  return 60;
}

BOOL sub_2479FD1CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v27;
  char v28;
  void **v29;
  void *v30;
  void **v31;
  void *v32;
  id v33;
  id v34;
  char v35;
  double *v36;
  double v37;
  double *v38;
  double v39;
  unsigned __int8 *v40;
  _BYTE v41[24];
  uint64_t v42;

  v2 = v1;
  sub_2479F77A4(a1, (uint64_t)v41, &qword_254450C30);
  if (!v42)
  {
    sub_2479D045C((uint64_t)v41, &qword_254450C30);
    return 0;
  }
  type metadata accessor for Sticker(0);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR___STKSticker_type) != v40[OBJC_IVAR___STKSticker_type])
    goto LABEL_23;
  sub_247A1AC8C();
  sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  if ((sub_247A1AEB4() & 1) == 0)
    goto LABEL_23;
  v3 = (uint64_t *)(v1 + OBJC_IVAR___STKSticker_accessibilityName);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = &v40[OBJC_IVAR___STKSticker_accessibilityName];
  swift_beginAccess();
  v7 = *((_QWORD *)v6 + 1);
  if (v5)
  {
    if (!v7 || (v4 != *(_QWORD *)v6 || v5 != v7) && (sub_247A1B4E4() & 1) == 0)
      goto LABEL_23;
  }
  else if (v7)
  {
    goto LABEL_23;
  }
  v8 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  v9 = *v8;
  v10 = v8[1];
  v11 = &v40[OBJC_IVAR___STKSticker_name];
  swift_beginAccess();
  if ((v9 != *(_QWORD *)v11 || v10 != *((_QWORD *)v11 + 1)) && (sub_247A1B4E4() & 1) == 0)
    goto LABEL_23;
  v12 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  v13 = *v12;
  v14 = &v40[OBJC_IVAR___STKSticker_effect];
  swift_beginAccess();
  if (v13 != *(_QWORD *)v14)
    goto LABEL_23;
  v15 = (unint64_t *)(v2 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  v16 = *v15;
  v17 = (unint64_t *)&v40[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  v18 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_2479FA6E4(v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
    goto LABEL_23;
  v20 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  v21 = *v20;
  v22 = v20[1];
  v23 = (uint64_t *)&v40[OBJC_IVAR___STKSticker_metadata];
  swift_beginAccess();
  v24 = *v23;
  v25 = v23[1];
  if (v22 >> 60 == 15)
  {
    if (v25 >> 60 == 15)
      goto LABEL_26;
LABEL_22:
    sub_2479D935C(v21, v22);
    sub_2479D935C(v24, v25);
    sub_2479D96E0(v21, v22);
    sub_2479D96E0(v24, v25);
    goto LABEL_23;
  }
  if (v25 >> 60 == 15)
    goto LABEL_22;
  sub_2479D935C(v21, v22);
  sub_2479D935C(v24, v25);
  sub_247A026DC(v21, v22);
  v28 = v27;
  sub_2479D96E0(v24, v25);
  sub_2479D96E0(v21, v22);
  if ((v28 & 1) == 0)
    goto LABEL_23;
LABEL_26:
  v29 = (void **)(v2 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  v30 = *v29;
  v31 = (void **)&v40[OBJC_IVAR___STKSticker_attributionInfo];
  swift_beginAccess();
  v32 = *v31;
  if (v30)
  {
    if (v32)
    {
      type metadata accessor for Sticker.AttributionInfo();
      v33 = v32;
      v34 = v30;
      v35 = sub_247A1B1CC();

      if ((v35 & 1) != 0)
        goto LABEL_31;
    }
LABEL_23:

    return 0;
  }
  if (v32)
    goto LABEL_23;
LABEL_31:
  v36 = (double *)(v2 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  v37 = *v36;
  v38 = (double *)&v40[OBJC_IVAR___STKSticker_libraryIndex];
  swift_beginAccess();
  v39 = *v38;

  return v37 == v39;
}

void *sub_2479FD704()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  char *v8;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  v2 = *v1;
  if (v2 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v3; v3 = sub_247A1B37C())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x249587908](v4 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = &v5[OBJC_IVAR___STKStickerRepresentation_isPreferred];
      swift_beginAccess();
      if (*v8 == 1)
      {
        swift_bridgeObjectRelease_n();
        return v6;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain_n();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_2479FD858(uint64_t a1)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  char *v11;
  char v12;
  char *v13;

  v3 = (unint64_t *)(v1 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  v5 = sub_2479FA570(a1, v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    sub_247A03FBC();
    swift_allocError();
    return swift_willThrow();
  }
  v6 = *v3;
  if (!(*v3 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v7)
      goto LABEL_4;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  v7 = sub_247A1B37C();
  if (!v7)
    return swift_bridgeObjectRelease_n();
LABEL_4:
  result = sub_2479D032C(0, (unint64_t *)&unk_2576D2D60);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (char *)MEMORY[0x249587908](v9, v6);
      else
        v10 = (char *)*(id *)(v6 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      v12 = sub_247A1B1CC();
      v13 = &v11[OBJC_IVAR___STKStickerRepresentation_isPreferred];
      swift_beginAccess();
      *v13 = v12 & 1;

    }
    while (v7 != v9);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_2479FDA28()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  NSObject *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  unint64_t *i;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  v2 = *v1;
  if (*v1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (i = v1; v3; i = v1)
  {
    v4 = MEMORY[0x24BEE4AF8];
    v5 = 4;
    while (1)
    {
      v6 = v5 - 4;
      v7 = (v2 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x249587908](v5 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v5);
      v8 = v7;
      v1 = (unint64_t *)(v5 - 3);
      if (__OFADD__(v6, 1))
        break;
      v9 = &v7[OBJC_IVAR___STKStickerRepresentation_isPreferred];
      swift_beginAccess();
      LODWORD(v9) = *v9;

      if ((_DWORD)v9 == 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = (unint64_t)sub_2479E8C20(0, *(_QWORD *)(v4 + 16) + 1, 1, (_QWORD *)v4);
        v11 = *(_QWORD *)(v4 + 16);
        v10 = *(_QWORD *)(v4 + 24);
        if (v11 >= v10 >> 1)
          v4 = (unint64_t)sub_2479E8C20((_QWORD *)(v10 > 1), v11 + 1, 1, (_QWORD *)v4);
        *(_QWORD *)(v4 + 16) = v11 + 1;
        *(_QWORD *)(v4 + 8 * v11 + 32) = v6;
      }
      ++v5;
      if (v1 == (unint64_t *)v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain_n();
    v3 = sub_247A1B37C();
  }
  v4 = MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease_n();
  v12 = *(_QWORD *)(v4 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    v4 = *i;
    if (*i >> 62)
      goto LABEL_41;
    v14 = *(NSObject **)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_23;
LABEL_42:
    swift_bridgeObjectRelease();
    if (qword_2576D28D8 != -1)
      swift_once();
    v29 = sub_247A1ADB8();
    __swift_project_value_buffer(v29, (uint64_t)qword_2576D2D30);
    v14 = sub_247A1ADA0();
    v30 = sub_247A1B118();
    if (os_log_type_enabled(v14, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_2479C5000, v14, v30, "No representation was preferred, but none was preferable", v31, 2u);
      MEMORY[0x249588124](v31, -1, -1);
    }
    goto LABEL_46;
  }
  v13 = v12 - 1;
  if (v12 == 1)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  v23 = 0;
  while (1)
  {
    v24 = *(_QWORD *)(v4 + 8 * v23 + 40);
    v25 = *i;
    if ((*i & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v26 = (char *)MEMORY[0x249587908](v24, v25);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    if ((v24 & 0x8000000000000000) != 0)
      break;
    if (v24 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_40;
    v26 = (char *)*(id *)(v25 + 8 * v24 + 32);
LABEL_34:
    v27 = &v26[OBJC_IVAR___STKStickerRepresentation_isPreferred];
    swift_beginAccess();
    *v27 = 0;

    if (v13 == ++v23)
      goto LABEL_20;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  swift_bridgeObjectRetain();
  v14 = sub_247A1B37C();
  if (!v14)
    goto LABEL_42;
LABEL_23:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v15 = MEMORY[0x249587908](0, v4);
LABEL_26:
    v14 = v15;
    swift_bridgeObjectRelease();
    if (qword_2576D28D8 != -1)
      goto LABEL_49;
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v15 = *(id *)(v4 + 32);
      goto LABEL_26;
    }
    __break(1u);
LABEL_49:
    swift_once();
  }
  v16 = sub_247A1ADB8();
  __swift_project_value_buffer(v16, (uint64_t)qword_2576D2D30);
  v17 = v32;
  v18 = sub_247A1ADA0();
  v19 = sub_247A1B100();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v20 = 138412290;
    v22 = v17;
    sub_247A1B208();
    *v21 = v17;

    _os_log_impl(&dword_2479C5000, v18, v19, "Implicitly preferring the first representation of sticker: %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    swift_arrayDestroy();
    MEMORY[0x249588124](v21, -1, -1);
    MEMORY[0x249588124](v20, -1, -1);
  }
  else
  {

    v18 = v17;
  }

  v28 = (char *)v14 + OBJC_IVAR___STKStickerRepresentation_isPreferred;
  swift_beginAccess();
  *v28 = 1;
LABEL_46:

}

uint64_t static Sticker.supportsSecureCoding.getter()
{
  return 1;
}

id Sticker.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Sticker.init(coder:)(a1);
}

id Sticker.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  void (*v17)(void);
  void *v18;
  uint64_t v19;
  void *v20;
  unsigned int (*v21)(_BYTE *, uint64_t, uint64_t);
  char *v22;
  id *v23;
  uint64_t v24;
  id v25;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t *v65;
  void **v66;
  void *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  objc_class *v72;
  _BYTE v73[4];
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  _BYTE *v86;
  uint64_t v87;
  unint64_t *v88;
  id *v89;
  char *v90;
  char *v91;
  char *v92;
  objc_super v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v73[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v73[-v7];
  v9 = sub_247A1AC8C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v86 = &v73[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = &v1[OBJC_IVAR___STKSticker_accessibilityName];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v1[OBJC_IVAR___STKSticker_searchText];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v90 = v13;
  v14 = &v1[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v91 = v14;
  v15 = &v1[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v1[OBJC_IVAR___STKSticker_metadata] = xmmword_247A1D600;
  v16 = &v1[OBJC_IVAR___STKSticker_externalURI];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v88 = (unint64_t *)v16;
  v89 = (id *)&v1[OBJC_IVAR___STKSticker_attributionInfo];
  *(_QWORD *)&v1[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  v17 = *(void (**)(void))(v10 + 56);
  v87 = (uint64_t)&v1[OBJC_IVAR___STKSticker__companionRecentUUID];
  v17();
  v92 = v1;
  v18 = (void *)sub_247A1AEC0();
  v85 = objc_msgSend(a1, sel_decodeIntegerForKey_, v18);

  sub_2479D032C(0, &qword_254450BE0);
  v19 = sub_247A1B190();
  if (!v19
    || (v20 = (void *)v19,
        ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v17)(v6, 1, 1, v9),
        sub_2479CDA10((unint64_t *)&unk_2576D2D70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB0]), sub_247A1B3D0(), v20, v21 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48), v21(v6, 1, v9) == 1))
  {
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v17)(v8, 1, 1, v9);
LABEL_4:

    sub_2479D045C((uint64_t)v8, &qword_254450A70);
LABEL_5:
    v22 = v92;
    v23 = v89;
    v24 = v87;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2479D96E0(*(_QWORD *)v15, *((_QWORD *)v15 + 1));
    swift_bridgeObjectRelease();

    sub_2479D045C(v24, &qword_254450A70);
    type metadata accessor for Sticker(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32);
  v27(v8, v6, v9);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v17)(v8, 0, 1, v9);
  if (v21(v8, 1, v9) == 1)
    goto LABEL_4;
  v28 = v86;
  v27(v86, v8, v9);
  type metadata accessor for Sticker.Representation();
  v29 = sub_247A1B19C();
  if (!v29)
  {

LABEL_28:
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v28, v9);
    goto LABEL_5;
  }
  v30 = v29;
  sub_2479D032C(0, (unint64_t *)&qword_2576D2F60);
  v31 = sub_247A1B190();
  if (!v31 || (v32 = (void *)v31, v96 = 0, v97 = 0, sub_247A1AED8(), v32, !v97))
  {

LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v84 = v97;
  v83 = v96;
  v33 = sub_247A1B190();
  if (!v33 || (v34 = (void *)v33, v96 = 0, v97 = 0, sub_247A1AED8(), v34, !v97))
  {

LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v82 = v97;
  v80 = v96;
  v35 = (void *)sub_247A1AEC0();
  v79 = objc_msgSend(a1, sel_decodeIntegerForKey_, v35);

  v36 = (void *)sub_247A1AEC0();
  v81 = objc_msgSend(a1, sel_decodeIntegerForKey_, v36);

  v37 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v37);
  v39 = v38;

  v40 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v40);
  v42 = v41;

  v43 = sub_247A1B190();
  if (!v43 || (v44 = (void *)v43, v96 = 0, v97 = 0, sub_247A1AED8(), v44, !v97))
  {

    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v78 = v97;
  v77 = v96;
  v45 = sub_247A1B190();
  if (!v45 || (v46 = (void *)v45, v96 = 0, v97 = 0, sub_247A1AED8(), v46, !v97))
  {

    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (!v85)
  {
    v75 = v96;
    v76 = v97;
    v74 = 0;
    goto LABEL_30;
  }
  if (v85 != (id)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v75 = v96;
  v76 = v97;
  v74 = 1;
LABEL_30:
  type metadata accessor for Sticker.AttributionInfo();
  v85 = (id)sub_247A1B190();
  sub_2479D032C(0, (unint64_t *)&unk_2576D2D80);
  v47 = sub_247A1B190();
  if (v47)
  {
    v48 = (void *)v47;
    v87 = sub_247A1ABCC();
    v50 = v49;

  }
  else
  {
    v87 = 0;
    v50 = 0xF000000000000000;
  }
  v51 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v51);
  v53 = v52;

  v54 = v92;
  v92[OBJC_IVAR___STKSticker_type] = v74;
  (*(void (**)(char *, _BYTE *, uint64_t))(v10 + 16))(&v54[OBJC_IVAR___STKSticker_identifier], v86, v9);
  *(_QWORD *)&v54[OBJC_IVAR___STKSticker_representations] = v30;
  swift_beginAccess();
  v55 = v84;
  *(_QWORD *)v12 = v83;
  *((_QWORD *)v12 + 1) = v55;
  swift_bridgeObjectRelease();
  v56 = &v54[OBJC_IVAR___STKSticker_name];
  v57 = v82;
  *(_QWORD *)v56 = v80;
  *((_QWORD *)v56 + 1) = v57;
  if ((unint64_t)v79 + 1 >= 6)
    v58 = 0;
  else
    v58 = v79;
  *(_QWORD *)&v54[OBJC_IVAR___STKSticker_effect] = v58;
  swift_beginAccess();
  v59 = *(_QWORD *)v15;
  v60 = *((_QWORD *)v15 + 1);
  v61 = v87;
  *(_QWORD *)v15 = v87;
  *((_QWORD *)v15 + 1) = v50;
  sub_2479D935C(v61, v50);
  sub_2479D96E0(v59, v60);
  v62 = v86;
  sub_247A1AC44();
  v94 = 0xD00000000000001BLL;
  v95 = 0x8000000247A1F6D0;
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_2479D96E0(v61, v50);
  v63 = v94;
  v64 = v95;
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v62, v9);
  v65 = v88;
  swift_beginAccess();
  *v65 = v63;
  v65[1] = v64;
  swift_bridgeObjectRelease();
  v66 = v89;
  swift_beginAccess();
  v67 = *v66;
  *v66 = v85;

  *(_QWORD *)&v54[OBJC_IVAR___STKSticker_byteCount] = v81;
  *(_QWORD *)&v54[OBJC_IVAR___STKSticker_creationDate] = v39;
  *(_QWORD *)&v54[OBJC_IVAR___STKSticker_lastUsedDate] = v42;
  *(_QWORD *)&v54[OBJC_IVAR___STKSticker_libraryIndex] = v53;
  v68 = v90;
  swift_beginAccess();
  v69 = v78;
  *(_QWORD *)v68 = v77;
  *((_QWORD *)v68 + 1) = v69;
  swift_bridgeObjectRelease();
  v70 = v91;
  swift_beginAccess();
  v71 = v76;
  *(_QWORD *)v70 = v75;
  *((_QWORD *)v70 + 1) = v71;

  swift_bridgeObjectRelease();
  v72 = (objc_class *)type metadata accessor for Sticker(0);
  v93.receiver = v54;
  v93.super_class = v72;
  v25 = objc_msgSendSuper2(&v93, sel_init);

  return v25;
}

void sub_2479FEA6C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id *v23;
  id v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  void *v28;
  double *v29;
  double v30;
  void *v31;
  double *v32;
  double v33;
  void *v34;
  double *v35;
  double v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR___STKSticker_type);
  v5 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v4, v5);

  v6 = (void *)sub_247A1AC50();
  v7 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  swift_beginAccess();
  type metadata accessor for Sticker.Representation();
  swift_bridgeObjectRetain();
  v8 = (void *)sub_247A1B028();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  v10 = v2 + OBJC_IVAR___STKSticker_accessibilityName;
  swift_beginAccess();
  if (*(_QWORD *)(v10 + 8))
  {
    swift_bridgeObjectRetain();
    v11 = sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);
  swift_unknownObjectRelease();

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v13 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  v15 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  v16 = *v15;
  v17 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v16, v17);

  v18 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  v19 = 0;
  v20 = v18[1];
  if (v20 >> 60 != 15)
  {
    v21 = *v18;
    sub_2479D9370(v21, v20);
    v19 = sub_247A1ABB4();
    sub_2479D96E0(v21, v20);
  }
  v22 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v19, v22);
  swift_unknownObjectRelease();

  v23 = (id *)(v2 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  v24 = *v23;
  v25 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v24, v25);

  v26 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_byteCount);
  swift_beginAccess();
  v27 = *v26;
  v28 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v27, v28);

  v29 = (double *)(v2 + OBJC_IVAR___STKSticker_creationDate);
  swift_beginAccess();
  v30 = *v29;
  v31 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v31, v30);

  v32 = (double *)(v2 + OBJC_IVAR___STKSticker_lastUsedDate);
  swift_beginAccess();
  v33 = *v32;
  v34 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v34, v33);

  v35 = (double *)(v2 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  v36 = *v35;
  v37 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v37, v36);

  v38 = v2 + OBJC_IVAR___STKSticker_searchText;
  swift_beginAccess();
  if (*(_QWORD *)(v38 + 8))
  {
    swift_bridgeObjectRetain();
    v39 = sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  v40 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v39, v40);
  swift_unknownObjectRelease();

  v41 = v2 + OBJC_IVAR___STKSticker_sanitizedPrompt;
  swift_beginAccess();
  if (*(_QWORD *)(v41 + 8))
  {
    swift_bridgeObjectRetain();
    v42 = sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = 0;
  }
  v43 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v42, v43);
  swift_unknownObjectRelease();

}

void *static Sticker.StickerType.allCases.getter()
{
  return &unk_251912440;
}

_QWORD *sub_2479FF158@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_2479FF178(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_2479FF184()
{
  sub_247A05F90();
  return sub_247A1B010();
}

uint64_t sub_2479FF1E0()
{
  sub_247A05F90();
  return sub_247A1AFF8();
}

void sub_2479FF22C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251912468;
}

BOOL sub_2479FF23C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2479FF250()
{
  sub_247A1B568();
  sub_247A1B574();
  return sub_247A1B580();
}

uint64_t sub_2479FF294()
{
  return sub_247A1B574();
}

uint64_t sub_2479FF2BC()
{
  sub_247A1B568();
  sub_247A1B574();
  return sub_247A1B580();
}

uint64_t sub_2479FF2FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_247A02954(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_2479FF32C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2479FF338()
{
  sub_247A05F4C();
  return sub_247A1B010();
}

uint64_t sub_2479FF394()
{
  sub_247A05F4C();
  return sub_247A1AFF8();
}

uint64_t sub_2479FF3E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t result;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  void (*v40)(char *, uint64_t);
  char v41;
  void (*v42)(char *, char *, uint64_t);
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unsigned __int8 *v64;
  unsigned int v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unsigned __int8 *v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 *v81;
  unsigned int v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD v98[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_247A1AC8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450808);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_247A1AB9C();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v15;
  sub_247A1AB78();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12) == 1)
  {
    v17 = &qword_254450808;
    v18 = (uint64_t)v11;
LABEL_3:
    sub_2479D045C(v18, v17);
LABEL_11:
    type metadata accessor for Sticker.URIType(0);
    return swift_storeEnumTagMultiPayload();
  }
  v97 = v16;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v11, v12);
  v19 = sub_247A1AB6C();
  v21 = v12;
  if (!v20)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v12);
    goto LABEL_11;
  }
  if (v19 == 0x72656B63697473 && v20 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      goto LABEL_10;
  }
  v96 = a1;
  v25 = (_QWORD *)sub_247A1AB0C();
  v26 = v25;
  v27 = v25[2];
  if ((unint64_t)(v27 - 6) < 0xFFFFFFFFFFFFFFFELL)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v12);
    goto LABEL_11;
  }
  v29 = v25[6];
  v28 = v25[7];
  v30 = v29 == 1919251317 && v28 == 0xE400000000000000;
  v31 = v30;
  v95 = v31;
  if (!v30 && (sub_247A1B4E4() & 1) == 0)
  {
    v32 = v29 == 0x746E65636572 && v28 == 0xE600000000000000;
    if (!v32 && (sub_247A1B4E4() & 1) == 0)
    {
      if (v29 == 0x696A6F6D656DLL && v28 == 0xE600000000000000 || (sub_247A1B4E4() & 1) != 0)
      {
        if (v27 == 4)
        {
          v45 = v26[8];
          v44 = v26[9];
          v47 = v26[10];
          v46 = v26[11];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v21);
          v48 = v96;
          *v96 = v45;
          v48[1] = v44;
          v48[2] = v47;
          v48[3] = v46;
          type metadata accessor for Sticker.URIType(0);
          return swift_storeEnumTagMultiPayload();
        }
      }
      else if (v29 == 0x696A6F6D65 && v28 == 0xE500000000000000 || (sub_247A1B4E4() & 1) != 0)
      {
        if (v27 == 4)
        {
          v57 = v21;
          v59 = v26[8];
          v58 = v26[9];
          v61 = v26[10];
          v60 = v26[11];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v59 == 0x696669746E656469 && v58 == 0xEA00000000007265)
          {
            swift_bridgeObjectRelease();
            v62 = v96;
          }
          else
          {
            v84 = sub_247A1B4E4();
            swift_bridgeObjectRelease();
            v62 = v96;
            if ((v84 & 1) == 0)
            {
              (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v57);
              swift_bridgeObjectRelease();
              goto LABEL_11;
            }
          }
          v85 = sub_2479FA52C(v61, v60);
          v87 = v86;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v57);
          if (v87)
          {
            *v62 = v85;
            v62[1] = v87;
            type metadata accessor for Sticker.URIType(0);
            return swift_storeEnumTagMultiPayload();
          }
          goto LABEL_11;
        }
      }
      else if ((v29 == 0x61705F6472696874 && v28 == 0xEB00000000797472 || (sub_247A1B4E4() & 1) != 0) && v27 == 5)
      {
        v69 = v26[8];
        v68 = v26[9];
        v70 = v21;
        v72 = v26[10];
        v71 = v26[11];
        v74 = v26[12];
        v73 = v26[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v70);
        v75 = v96;
        *v96 = v69;
        v75[1] = v68;
        v75[2] = v72;
        v75[3] = v71;
        v75[4] = v74;
        v75[5] = v73;
        type metadata accessor for Sticker.URIType(0);
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_128;
    }
  }
  if (v27 != 4)
  {
    v40 = *(void (**)(char *, uint64_t))(v97 + 8);
    swift_bridgeObjectRetain();
    v40(v14, v21);
    swift_bridgeObjectRelease();
LABEL_129:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v94 = v21;
  v34 = v26[8];
  v33 = v26[9];
  v35 = v26[10];
  v91 = v29;
  v92 = v35;
  v36 = v28;
  v37 = v26[11];
  v38 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v93 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v34 == 0x696669746E656469 && v33 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    v39 = v96;
LABEL_36:
    swift_bridgeObjectRelease();
    sub_247A1AC38();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v94);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v42 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v42(v8, v4, v5);
      v42((char *)v39, v8, v5);
      type metadata accessor for Sticker.URIType(0);
      return swift_storeEnumTagMultiPayload();
    }
    v17 = &qword_254450A70;
    v18 = (uint64_t)v4;
    goto LABEL_3;
  }
  v41 = sub_247A1B4E4();
  v39 = v96;
  if ((v41 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  if (v34 == 0x7865646E69 && v33 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v43 = v93;
    goto LABEL_48;
  }
  v49 = sub_247A1B4E4();
  swift_bridgeObjectRelease();
  v43 = v93;
  if ((v49 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v94);
    swift_bridgeObjectRelease();
    goto LABEL_129;
  }
LABEL_48:
  v50 = HIBYTE(v43) & 0xF;
  result = v92;
  v51 = v92 & 0xFFFFFFFFFFFFLL;
  if ((v43 & 0x2000000000000000) != 0)
    v52 = HIBYTE(v43) & 0xF;
  else
    v52 = v92 & 0xFFFFFFFFFFFFLL;
  v21 = v94;
  if (!v52)
  {
    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  if ((v43 & 0x1000000000000000) == 0)
  {
    if ((v43 & 0x2000000000000000) == 0)
    {
      if ((v92 & 0x1000000000000000) != 0)
        v53 = (unsigned __int8 *)((v43 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v53 = (unsigned __int8 *)sub_247A1B31C();
      v54 = (uint64_t)sub_247A01E1C(v53, v51, 10);
      v56 = v55 & 1;
LABEL_89:
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0)
        goto LABEL_90;
      goto LABEL_128;
    }
    v98[0] = v92;
    v98[1] = v43 & 0xFFFFFFFFFFFFFFLL;
    if (v92 == 43)
    {
      if (!v50)
        goto LABEL_132;
      if (v50 != 1 && (BYTE1(v92) - 48) <= 9u)
      {
        v54 = (BYTE1(v92) - 48);
        if (v50 == 2)
          goto LABEL_88;
        if ((BYTE2(v92) - 48) <= 9u)
        {
          v54 = 10 * (BYTE1(v92) - 48) + (BYTE2(v92) - 48);
          v63 = v50 - 3;
          if (v63)
          {
            v64 = (unsigned __int8 *)v98 + 3;
            while (1)
            {
              v65 = *v64 - 48;
              if (v65 > 9)
                goto LABEL_86;
              v66 = 10 * v54;
              if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63
                || (v54 = v66 + v65, __OFADD__(v66, v65)))
              {
LABEL_125:
                v54 = 0;
                v56 = 1;
                v39 = v96;
                v21 = v94;
                goto LABEL_89;
              }
              v56 = 0;
              ++v64;
              --v63;
              v39 = v96;
              v21 = v94;
              if (!v63)
                goto LABEL_89;
            }
          }
          goto LABEL_88;
        }
      }
    }
    else
    {
      if (v92 == 45)
      {
        if (v50)
        {
          if (v50 == 1 || (BYTE1(v92) - 48) > 9u)
            goto LABEL_86;
          if (v50 == 2)
          {
            v56 = 0;
            v54 = -(uint64_t)(BYTE1(v92) - 48);
            goto LABEL_89;
          }
          if ((BYTE2(v92) - 48) > 9u)
            goto LABEL_86;
          v54 = -10 * (BYTE1(v92) - 48) - (BYTE2(v92) - 48);
          v80 = v50 - 3;
          if (v80)
          {
            v81 = (unsigned __int8 *)v98 + 3;
            while (1)
            {
              v82 = *v81 - 48;
              if (v82 > 9)
                goto LABEL_86;
              v83 = 10 * v54;
              if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63)
                goto LABEL_125;
              v54 = v83 - v82;
              if (__OFSUB__(v83, v82))
                goto LABEL_125;
              v56 = 0;
              ++v81;
              --v80;
              v39 = v96;
              v21 = v94;
              if (!v80)
                goto LABEL_89;
            }
          }
LABEL_88:
          v56 = 0;
          goto LABEL_89;
        }
        __break(1u);
LABEL_132:
        __break(1u);
        goto LABEL_133;
      }
      if (v50 && (v92 - 48) <= 9u)
      {
        v54 = (v92 - 48);
        if (v50 == 1)
          goto LABEL_88;
        if ((BYTE1(v92) - 48) <= 9u)
        {
          v54 = 10 * (v92 - 48) + (BYTE1(v92) - 48);
          v76 = v50 - 2;
          if (v76)
          {
            v77 = (unsigned __int8 *)v98 + 2;
            while (1)
            {
              v78 = *v77 - 48;
              if (v78 > 9)
                goto LABEL_86;
              v79 = 10 * v54;
              if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63)
                goto LABEL_125;
              v54 = v79 + v78;
              if (__OFADD__(v79, v78))
                goto LABEL_125;
              v56 = 0;
              ++v77;
              --v76;
              v39 = v96;
              v21 = v94;
              if (!v76)
                goto LABEL_89;
            }
          }
          goto LABEL_88;
        }
      }
    }
LABEL_86:
    v54 = 0;
    v56 = 1;
    goto LABEL_89;
  }
  v54 = (uint64_t)sub_247A01D38(v92, v43, 10);
  v89 = v88;
  swift_bridgeObjectRelease();
  if ((v89 & 1) != 0)
  {
LABEL_128:
    (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v21);
    goto LABEL_129;
  }
LABEL_90:
  if ((v95 & 1) != 0 || (sub_247A1B4E4() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v21);
    swift_bridgeObjectRelease();
    *v39 = v54;
    *((_BYTE *)v39 + 8) = 1;
    goto LABEL_11;
  }
  if (v91 == 0x746E65636572 && v38 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_97:
    (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v21);
    *v39 = v54;
    *((_BYTE *)v39 + 8) = 0;
    goto LABEL_11;
  }
  v67 = sub_247A1B4E4();
  result = swift_bridgeObjectRelease();
  if ((v67 & 1) != 0)
    goto LABEL_97;
LABEL_133:
  __break(1u);
  return result;
}

unint64_t sub_2479FFFA4()
{
  sub_247A1AC44();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

unint64_t sub_247A00000()
{
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

uint64_t sub_247A00090()
{
  sub_247A1B2D4();
  sub_247A1AF38();
  sub_247A1AE90();
  return 0;
}

unint64_t sub_247A00120()
{
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  sub_247A1AF38();
  sub_247A1AF38();
  return 0xD000000000000012;
}

id Sticker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Sticker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_247A00248(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_247A00274 + 4 * byte_247A1D610[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_247A00274()
{
  return 0x696669746E656469;
}

uint64_t sub_247A00290()
{
  return 0x6E65736572706572;
}

unint64_t sub_247A002B4()
{
  return 0xD000000000000011;
}

uint64_t sub_247A002D0()
{
  return 0x6E756F4365747962;
}

uint64_t sub_247A002EC()
{
  return 1701667182;
}

uint64_t sub_247A002F8()
{
  return 0x6554686372616573;
}

uint64_t sub_247A00318()
{
  return 0x657A6974696E6173;
}

uint64_t sub_247A0033C()
{
  return 0x746365666665;
}

uint64_t sub_247A00350()
{
  return 0x617461646174656DLL;
}

uint64_t sub_247A00368()
{
  return 0x6C616E7265747865;
}

uint64_t sub_247A00388()
{
  return 0x7475626972747461;
}

uint64_t sub_247A003AC()
{
  return 0x6E6F697461657263;
}

uint64_t sub_247A003E0()
{
  return 0x497972617262696CLL;
}

unint64_t sub_247A00400()
{
  return 0xD000000000000014;
}

uint64_t sub_247A00420()
{
  unsigned __int8 *v0;

  return sub_247A00248(*v0);
}

uint64_t sub_247A00428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_247A05844(a1, a2);
  *a3 = result;
  return result;
}

void sub_247A0044C(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_247A00458()
{
  sub_247A04014();
  return sub_247A1B5A4();
}

uint64_t sub_247A00480()
{
  sub_247A04014();
  return sub_247A1B5B0();
}

id Sticker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Sticker(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_247A005D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450970);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247A04014();
  sub_247A1B598();
  v40 = *(_BYTE *)(v2 + OBJC_IVAR___STKSticker_type);
  LOBYTE(v39) = 0;
  sub_2479DBA5C();
  v11 = v41;
  sub_247A1B49C();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v41 = v8;
  v25 = v6;
  v40 = 1;
  v13 = sub_247A1AC8C();
  sub_2479CDA10(&qword_254450828, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_247A1B49C();
  v14 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  v39 = *v14;
  v38 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450BB0);
  sub_247A0409C(&qword_254450928, &qword_2544508E0, (uint64_t)&protocol conformance descriptor for Sticker.Representation, MEMORY[0x24BEE12A0]);
  v24 = v7;
  sub_247A1B49C();
  v23 = v2;
  swift_beginAccess();
  v38 = 3;
  swift_bridgeObjectRetain();
  sub_247A1B454();
  v22 = v13;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v37 = 4;
  sub_247A1B490();
  swift_beginAccess();
  v36 = 5;
  swift_bridgeObjectRetain();
  sub_247A1B46C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v35 = 6;
  swift_bridgeObjectRetain();
  sub_247A1B454();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v34 = 7;
  swift_bridgeObjectRetain();
  sub_247A1B454();
  swift_bridgeObjectRelease();
  v15 = v23;
  v16 = (uint64_t *)(v23 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  v33 = *v16;
  LOBYTE(v32) = 8;
  sub_247A04058();
  sub_247A1B49C();
  v17 = (__int128 *)(v15 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  v32 = *v17;
  v31 = 9;
  sub_2479DBC00();
  sub_247A1B460();
  swift_beginAccess();
  v31 = 10;
  swift_bridgeObjectRetain();
  sub_247A1B454();
  swift_bridgeObjectRelease();
  v18 = (uint64_t *)(v23 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  v30 = *v18;
  v29 = 11;
  type metadata accessor for Sticker.AttributionInfo();
  sub_2479CDA10((unint64_t *)&unk_2544508E8, (uint64_t (*)(uint64_t))type metadata accessor for Sticker.AttributionInfo, (uint64_t)&protocol conformance descriptor for Sticker.AttributionInfo);
  sub_247A1B460();
  swift_beginAccess();
  v29 = 12;
  sub_247A1B484();
  swift_beginAccess();
  v28 = 13;
  sub_247A1B484();
  swift_beginAccess();
  v27 = 14;
  sub_247A1B484();
  v19 = v23 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  v20 = (uint64_t)v25;
  sub_2479F77A4(v19, (uint64_t)v25, &qword_254450A70);
  v26 = 15;
  v21 = v24;
  sub_247A1B460();
  sub_2479D045C(v20, &qword_254450A70);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v10, v21);
}

id Sticker.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Sticker.init(from:)(a1);
}

id Sticker.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  void (*v16)(void);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  void *v48;
  void **v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  objc_class *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  id *v66;
  uint64_t *v67;
  char *v68;
  uint64_t *v69;
  uint64_t *v70;
  objc_super v71;
  void *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t *v80;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v3);
  v58 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_247A1AC8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507C0);
  v9 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v1[OBJC_IVAR___STKSticker_accessibilityName];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v69 = (uint64_t *)v12;
  v13 = &v1[OBJC_IVAR___STKSticker_searchText];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v80 = (uint64_t *)v13;
  v14 = &v1[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v70 = (uint64_t *)v14;
  v68 = &v1[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v1[OBJC_IVAR___STKSticker_metadata] = xmmword_247A1D600;
  v15 = &v1[OBJC_IVAR___STKSticker_externalURI];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v67 = (uint64_t *)v15;
  v66 = (id *)&v1[OBJC_IVAR___STKSticker_attributionInfo];
  *(_QWORD *)&v1[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  v61 = v6;
  v16 = *(void (**)(void))(v6 + 56);
  v65 = &v1[OBJC_IVAR___STKSticker__companionRecentUUID];
  v62 = v5;
  v16();
  v17 = a1[3];
  v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_247A04014();
  v18 = v1;
  v59 = v11;
  v19 = v64;
  sub_247A1B58C();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
    v24 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2479D96E0(*(_QWORD *)v68, *((_QWORD *)v68 + 1));
    swift_bridgeObjectRelease();

    sub_2479D045C((uint64_t)v65, &qword_254450A70);
    type metadata accessor for Sticker(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v20 = v9;
    v78 = 0;
    sub_2479DAB40();
    sub_247A1B448();
    v21 = v69;
    v18[OBJC_IVAR___STKSticker_type] = v79;
    LOBYTE(v79) = 1;
    v22 = sub_2479CDA10((unint64_t *)&unk_254450710, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v23 = v62;
    sub_247A1B448();
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(&v18[OBJC_IVAR___STKSticker_identifier], v8, v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BB0);
    v78 = 2;
    sub_247A0409C(&qword_254450798, &qword_254450760, (uint64_t)&protocol conformance descriptor for Sticker.Representation, MEMORY[0x24BEE12D0]);
    sub_247A1B448();
    v64 = v22;
    *(_QWORD *)&v18[OBJC_IVAR___STKSticker_representations] = v79;
    LOBYTE(v79) = 3;
    v25 = sub_247A1B3E8();
    v27 = v26;
    swift_beginAccess();
    *v21 = v25;
    v21[1] = v27;
    swift_bridgeObjectRelease();
    v78 = 4;
    *(_QWORD *)&v18[OBJC_IVAR___STKSticker_byteCount] = sub_247A1B43C();
    v78 = 5;
    v28 = sub_247A1B418();
    v29 = (uint64_t *)&v18[OBJC_IVAR___STKSticker_name];
    *v29 = v28;
    v29[1] = v30;
    v78 = 6;
    v31 = sub_247A1B3E8();
    v33 = v32;
    v34 = v80;
    swift_beginAccess();
    *v34 = v31;
    v34[1] = v33;
    swift_bridgeObjectRelease();
    v77 = 7;
    v35 = sub_247A1B3E8();
    v37 = v36;
    v38 = v70;
    swift_beginAccess();
    *v38 = v35;
    v38[1] = v37;
    swift_bridgeObjectRelease();
    LOBYTE(v74) = 8;
    sub_247A04120();
    sub_247A1B448();
    *(_QWORD *)&v18[OBJC_IVAR___STKSticker_effect] = v76;
    LOBYTE(v76) = 9;
    sub_2479DAAFC();
    sub_247A1B400();
    v39 = v74;
    v40 = v75;
    v41 = (uint64_t *)v68;
    swift_beginAccess();
    v42 = *v41;
    v43 = v41[1];
    *v41 = v39;
    v41[1] = v40;
    sub_2479D96E0(v42, v43);
    LOBYTE(v74) = 10;
    v44 = sub_247A1B3E8();
    v46 = v45;
    v47 = v67;
    swift_beginAccess();
    *v47 = v44;
    v47[1] = v46;
    swift_bridgeObjectRelease();
    type metadata accessor for Sticker.AttributionInfo();
    v73 = 11;
    sub_2479CDA10((unint64_t *)&unk_254450768, (uint64_t (*)(uint64_t))type metadata accessor for Sticker.AttributionInfo, (uint64_t)&protocol conformance descriptor for Sticker.AttributionInfo);
    sub_247A1B400();
    v48 = v72;
    v49 = v66;
    swift_beginAccess();
    v50 = *v49;
    *v49 = v48;

    LOBYTE(v72) = 12;
    sub_247A1B430();
    *(_QWORD *)&v18[OBJC_IVAR___STKSticker_creationDate] = v51;
    LOBYTE(v72) = 13;
    sub_247A1B430();
    *(_QWORD *)&v18[OBJC_IVAR___STKSticker_lastUsedDate] = v52;
    LOBYTE(v72) = 14;
    sub_247A1B430();
    *(_QWORD *)&v18[OBJC_IVAR___STKSticker_libraryIndex] = v53;
    LOBYTE(v72) = 15;
    sub_247A1B400();
    v55 = (uint64_t)v65;
    swift_beginAccess();
    sub_2479EA85C(v58, v55);
    swift_endAccess();

    v56 = (objc_class *)type metadata accessor for Sticker(0);
    v71.receiver = v18;
    v71.super_class = v56;
    v24 = objc_msgSendSuper2(&v71, sel_init);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v59, v60);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
  }
  return v24;
}

id sub_247A017E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  result = Sticker.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_247A01834(_QWORD *a1)
{
  return sub_247A005D0(a1);
}

uint64_t sub_247A01854@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR___STKSticker_identifier;
  v4 = sub_247A1AC8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t static StickerError.== infix(_:_:)()
{
  return 1;
}

uint64_t StickerError.hash(into:)()
{
  return sub_247A1B574();
}

uint64_t StickerError.hashValue.getter()
{
  sub_247A1B568();
  sub_247A1B574();
  return sub_247A1B580();
}

uint64_t sub_247A01908()
{
  sub_247A1B568();
  sub_247A1B574();
  return sub_247A1B580();
}

uint64_t sub_247A01948()
{
  return sub_247A1B574();
}

uint64_t sub_247A0196C()
{
  sub_247A1B568();
  sub_247A1B574();
  return sub_247A1B580();
}

unint64_t StickerError.errorDescription.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_247A019C4()
{
  return 0xD000000000000016;
}

void sub_247A019E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_247A01A40(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x247A01C24);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

_QWORD *sub_247A01C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450C10);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_247A01CAC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_247A1AF80();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x249587560](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_247A01D24(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_247A01E1C(a1, a2, a3);
}

unsigned __int8 *sub_247A01D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_247A1AFB0();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_247A02098();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_247A1B31C();
  }
LABEL_7:
  v11 = sub_247A01E1C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_247A01E1C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_247A02098()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_247A1AFBC();
  v4 = sub_247A02114(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_247A02114(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_247A02258(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_247A01C48(v9, 0);
      v12 = sub_247A02344((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x249587524](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x249587524);
LABEL_9:
      sub_247A1B31C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x249587524]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_247A02258(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_247A01CAC(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_247A01CAC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_247A1AF68();
  }
  __break(1u);
  return result;
}

unint64_t sub_247A02344(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_247A01CAC(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_247A1AF74();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_247A1B31C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_247A01CAC(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_247A1AF50();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_247A02554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_247A019E0((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_247A02628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_247A1AA34();
  v11 = result;
  if (result)
  {
    result = sub_247A1AA4C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_247A1AA40();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_247A019E0(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_247A026DC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_247A02728()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_247A0275C + dword_247A02934[v0 >> 62]))();
}

uint64_t sub_247A0276C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_247A02954(uint64_t result)
{
  if ((unint64_t)(result + 1) >= 6)
    return 0;
  return result;
}

uint64_t sub_247A0296C(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, double a9, uint64_t a10, void (*a11)(_QWORD, _QWORD), uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char *a22)
{
  char *v22;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t *v38;
  unint64_t *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  unint64_t v53;
  void (*v54)(_QWORD, _QWORD);
  void (*v55)(_QWORD, _QWORD);
  void **v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t result;
  _QWORD *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  BOOL v78;
  id v80;
  id v81;
  uint64_t v82;
  id v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  objc_class *v90;
  id v91;
  char *v92;
  char *v93;
  int v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void **v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void (*v105)(_QWORD, _QWORD);
  uint64_t v106;
  uint64_t v107;
  objc_super v108;
  _QWORD *v109;
  unint64_t v110;
  unint64_t v111;

  v103 = a8;
  v102 = a7;
  v100 = a6;
  v99 = a5;
  v98 = a4;
  v107 = a2;
  v97 = a13;
  v96 = a12;
  v105 = a11;
  v106 = a10;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_247A1AC8C();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v104 = (char *)&v92 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v92 - v33;
  v94 = *a1;
  v35 = &v22[OBJC_IVAR___STKSticker_accessibilityName];
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  v36 = &v22[OBJC_IVAR___STKSticker_searchText];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v92 = v36;
  v37 = &v22[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v93 = v37;
  v38 = (uint64_t *)&v22[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v22[OBJC_IVAR___STKSticker_metadata] = xmmword_247A1D600;
  v39 = (unint64_t *)&v22[OBJC_IVAR___STKSticker_externalURI];
  *v39 = 0;
  v39[1] = 0;
  v101 = (void **)&v22[OBJC_IVAR___STKSticker_attributionInfo];
  *(_QWORD *)&v22[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(&v22[OBJC_IVAR___STKSticker__companionRecentUUID], 1, 1, v29);
  sub_2479F77A4(v107, (uint64_t)v28, &qword_254450A70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    v40 = v22;
    sub_247A1AC80();
    sub_2479D045C((uint64_t)v28, &qword_254450A70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v34, v28, v29);
    v41 = v22;
  }
  v95 = a14;
  v22[OBJC_IVAR___STKSticker_type] = v94;
  v42 = v30;
  v43 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v43(&v22[OBJC_IVAR___STKSticker_identifier], v34, v29);
  *(_QWORD *)&v22[OBJC_IVAR___STKSticker_representations] = a3;
  swift_beginAccess();
  v44 = v97;
  *(_QWORD *)v35 = v96;
  *((_QWORD *)v35 + 1) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = &v22[OBJC_IVAR___STKSticker_name];
  v46 = v99;
  *(_QWORD *)v45 = v98;
  *((_QWORD *)v45 + 1) = v46;
  v47 = (uint64_t *)v22;
  *(_QWORD *)&v22[OBJC_IVAR___STKSticker_effect] = v100;
  swift_beginAccess();
  v48 = *v38;
  v49 = v38[1];
  v50 = v102;
  v51 = (unint64_t)v103;
  *v38 = v102;
  v38[1] = v51;
  sub_2479D935C(v50, v51);
  sub_2479D96E0(v48, v49);
  v52 = v104;
  v103 = v34;
  v43(v104, v34, v29);
  v53 = v106;
  v54 = v105;
  if (!v105)
  {
    sub_247A1AC44();
    v110 = 0xD00000000000001BLL;
    v111 = 0x8000000247A1F6D0;
    sub_247A1AF38();
    swift_bridgeObjectRelease();
    v53 = v110;
    v54 = (void (*)(_QWORD, _QWORD))v111;
  }
  v55 = *(void (**)(_QWORD, _QWORD))(v42 + 8);
  v106 = v29;
  v105 = v55;
  v55(v52, v29);
  swift_beginAccess();
  *v39 = v53;
  v39[1] = (unint64_t)v54;
  swift_bridgeObjectRelease();
  v56 = v101;
  swift_beginAccess();
  v57 = *v56;
  v58 = v95;
  *v56 = v95;
  v59 = v58;

  if (a3 >> 62)
    goto LABEL_25;
  v60 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v61 = v47;
  if (!v60)
    goto LABEL_26;
  while (1)
  {
    v109 = (_QWORD *)MEMORY[0x24BEE4AF8];
    result = sub_2479E8E80(0, v60 & ~(v60 >> 63), 0);
    if (v60 < 0)
    {
      __break(1u);
      return result;
    }
    v63 = v109;
    if ((a3 & 0xC000000000000001) != 0)
    {
      v64 = 0;
      v47 = &OBJC_IVAR___STKStickerRepresentation_byteCount;
      do
      {
        v65 = (uint64_t *)(MEMORY[0x249587908](v64, a3) + OBJC_IVAR___STKStickerRepresentation_byteCount);
        swift_beginAccess();
        v66 = *v65;
        swift_unknownObjectRelease();
        v109 = v63;
        v68 = v63[2];
        v67 = v63[3];
        if (v68 >= v67 >> 1)
        {
          sub_2479E8E80(v67 > 1, v68 + 1, 1);
          v63 = v109;
        }
        ++v64;
        v63[2] = v68 + 1;
        v63[v68 + 4] = v66;
      }
      while (v60 != v64);
    }
    else
    {
      v69 = 0;
      v47 = &OBJC_IVAR___STKStickerRepresentation_byteCount;
      do
      {
        v70 = (uint64_t *)(*(_QWORD *)(a3 + 8 * v69 + 32) + OBJC_IVAR___STKStickerRepresentation_byteCount);
        swift_beginAccess();
        v71 = *v70;
        v109 = v63;
        v73 = v63[2];
        v72 = v63[3];
        if (v73 >= v72 >> 1)
        {
          sub_2479E8E80(v72 > 1, v73 + 1, 1);
          v63 = v109;
        }
        ++v69;
        v63[2] = v73 + 1;
        v63[v73 + 4] = v71;
      }
      while (v60 != v69);
    }
    swift_bridgeObjectRelease();
    v74 = v63[2];
    if (!v74)
      break;
    while (1)
    {
      v75 = 0;
      v76 = v63 + 4;
      while (1)
      {
        v77 = *v76++;
        v78 = __OFADD__(v75, v77);
        v75 += v77;
        if (v78)
          break;
        if (!--v74)
          goto LABEL_28;
      }
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
      v60 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      v61 = v47;
      if (v60)
        break;
LABEL_26:
      swift_bridgeObjectRelease();
      v63 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v74 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (!v74)
        goto LABEL_27;
    }
  }
LABEL_27:
  v75 = 0;
LABEL_28:
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v61 + OBJC_IVAR___STKSticker_byteCount) = v75;
  if ((a18 & 1) != 0)
  {
    v80 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
    v81 = objc_msgSend(v80, sel_timeProvider);

    objc_msgSend(v81, sel_timestamp);
    a17 = v82;
    swift_unknownObjectRelease();
  }
  v104 = a22;
  *(uint64_t *)((char *)v61 + OBJC_IVAR___STKSticker_creationDate) = a17;
  if ((a20 & 1) != 0)
  {
    v84 = objc_msgSend((id)objc_opt_self(), (SEL)0x251917F1FLL);
    v85 = objc_msgSend(v84, (SEL)&selRef_execute_ + 4);

    objc_msgSend(v85, (SEL)0x251917548);
    a19 = v86;
    swift_unknownObjectRelease();
  }
  v105(v103, v106);
  *(uint64_t *)((char *)v61 + OBJC_IVAR___STKSticker_lastUsedDate) = a19;
  *(double *)((char *)v61 + OBJC_IVAR___STKSticker_libraryIndex) = a9;
  v87 = v92;
  swift_beginAccess();
  *(_QWORD *)v87 = a15;
  *((_QWORD *)v87 + 1) = a16;
  swift_bridgeObjectRelease();
  v88 = v93;
  swift_beginAccess();
  v89 = v104;
  *(_QWORD *)v88 = a21;
  *((_QWORD *)v88 + 1) = v89;

  swift_bridgeObjectRelease();
  v90 = (objc_class *)type metadata accessor for Sticker(0);
  v108.receiver = v61;
  v108.super_class = v90;
  v91 = objc_msgSendSuper2(&v108, sel_init);
  sub_2479D045C(v107, &qword_254450A70);
  return (uint64_t)v91;
}

uint64_t type metadata accessor for Sticker(uint64_t a1)
{
  return sub_2479CD9B0(a1, (uint64_t *)&unk_254450CE8);
}

uint64_t sub_247A0319C()
{
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  sub_247A1AC8C();
  sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  return 0x3A72656B63697473;
}

uint64_t sub_247A032BC(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  char *v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  _QWORD *v30;
  uint64_t i;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t j;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  void **v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  objc_class *v65;
  id v66;
  _BYTE v67[12];
  int v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, _BYTE *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  _BYTE *v78;
  uint64_t v79;
  void **v80;
  char *v81;
  uint64_t v82;
  objc_super v83;
  char v84;
  _QWORD *v85;

  v71 = a7;
  v76 = a6;
  v75 = a5;
  v74 = a4;
  v73 = a3;
  v15 = sub_247A1AC8C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v78 = &v67[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v67[-v19];
  v21 = *a1;
  v22 = &v11[OBJC_IVAR___STKSticker_accessibilityName];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v81 = v22;
  v23 = &v11[OBJC_IVAR___STKSticker_searchText];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v11[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v25 = (uint64_t *)&v11[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v11[OBJC_IVAR___STKSticker_metadata] = xmmword_247A1D600;
  v26 = &v11[OBJC_IVAR___STKSticker_externalURI];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v77 = (uint64_t *)v26;
  v80 = (void **)&v11[OBJC_IVAR___STKSticker_attributionInfo];
  *(_QWORD *)&v11[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(&v11[OBJC_IVAR___STKSticker__companionRecentUUID], 1, 1, v15);
  v27 = v11;
  sub_247A1AC80();
  v27[OBJC_IVAR___STKSticker_type] = v21;
  v79 = v16;
  v72 = *(void (**)(char *, _BYTE *, uint64_t))(v16 + 16);
  v72(&v27[OBJC_IVAR___STKSticker_identifier], v20, v15);
  *(_QWORD *)&v27[OBJC_IVAR___STKSticker_representations] = a2;
  if (a2 >> 62)
    goto LABEL_20;
  v28 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v82 = a8;
  if (!v28)
    goto LABEL_21;
  while (1)
  {
    v85 = (_QWORD *)MEMORY[0x24BEE4AF8];
    result = sub_2479E8E80(0, v28 & ~(v28 >> 63), 0);
    if (v28 < 0)
    {
      __break(1u);
      return result;
    }
    v68 = v21;
    v69 = v20;
    v70 = v15;
    v30 = v85;
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v28; ++i)
      {
        v32 = (uint64_t *)(MEMORY[0x249587908](i, a2) + OBJC_IVAR___STKStickerRepresentation_byteCount);
        swift_beginAccess();
        v33 = *v32;
        swift_unknownObjectRelease();
        v85 = v30;
        v35 = v30[2];
        v34 = v30[3];
        if (v35 >= v34 >> 1)
        {
          sub_2479E8E80(v34 > 1, v35 + 1, 1);
          v30 = v85;
        }
        v30[2] = v35 + 1;
        v30[v35 + 4] = v33;
      }
    }
    else
    {
      for (j = 0; j != v28; ++j)
      {
        v37 = (uint64_t *)(*(_QWORD *)(a2 + 8 * j + 32) + OBJC_IVAR___STKStickerRepresentation_byteCount);
        swift_beginAccess();
        v38 = *v37;
        v85 = v30;
        v40 = v30[2];
        v39 = v30[3];
        if (v40 >= v39 >> 1)
        {
          sub_2479E8E80(v39 > 1, v40 + 1, 1);
          v30 = v85;
        }
        v30[2] = v40 + 1;
        v30[v40 + 4] = v38;
      }
    }
    swift_bridgeObjectRelease();
    v15 = v70;
    v20 = v69;
    v21 = v68;
    v41 = v30[2];
    if (!v41)
      break;
    while (1)
    {
      a8 = 0;
      v42 = v30 + 4;
      while (1)
      {
        v43 = *v42++;
        v44 = __OFADD__(a8, v43);
        a8 += v43;
        if (v44)
          break;
        if (!--v41)
          goto LABEL_23;
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      v28 = sub_247A1B37C();
      v82 = a8;
      if (v28)
        break;
LABEL_21:
      swift_bridgeObjectRelease();
      v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v41 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (!v41)
        goto LABEL_22;
    }
  }
LABEL_22:
  a8 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  *(_QWORD *)&v27[OBJC_IVAR___STKSticker_byteCount] = a8;
  v45 = &v27[OBJC_IVAR___STKSticker_name];
  v46 = v74;
  *(_QWORD *)v45 = v73;
  *((_QWORD *)v45 + 1) = v46;
  *(_QWORD *)&v27[OBJC_IVAR___STKSticker_effect] = 0;
  swift_beginAccess();
  v47 = *v25;
  v48 = v25[1];
  v49 = v75;
  v50 = v76;
  *v25 = v75;
  v25[1] = v50;
  sub_2479D935C(v49, v50);
  sub_2479D96E0(v47, v48);
  v51 = v78;
  v72(v78, v20, v15);
  v52 = v82;
  if (v82)
  {
    v53 = *(void (**)(_BYTE *, uint64_t))(v79 + 8);
    v53(v51, v15);
    v54 = v71;
  }
  else
  {
    v84 = v21;
    v54 = sub_247A0319C();
    v52 = v55;
    v53 = *(void (**)(_BYTE *, uint64_t))(v79 + 8);
    v53(v51, v15);
  }
  v56 = v77;
  swift_beginAccess();
  *v56 = v54;
  v56[1] = v52;
  swift_bridgeObjectRelease();
  v57 = v81;
  swift_beginAccess();
  *(_QWORD *)v57 = a9;
  *((_QWORD *)v57 + 1) = a10;
  swift_bridgeObjectRelease();
  v58 = v80;
  swift_beginAccess();
  v59 = *v58;
  *v58 = a11;
  v60 = a11;

  v61 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v62 = objc_msgSend(v61, sel_timeProvider);

  objc_msgSend(v62, sel_timestamp);
  v64 = v63;
  swift_unknownObjectRelease();
  *(_QWORD *)&v27[OBJC_IVAR___STKSticker_creationDate] = v64;
  *(_QWORD *)&v27[OBJC_IVAR___STKSticker_lastUsedDate] = v64;
  *(_QWORD *)&v27[OBJC_IVAR___STKSticker_libraryIndex] = 0;

  v65 = (objc_class *)type metadata accessor for Sticker(0);
  v83.receiver = v27;
  v83.super_class = v65;
  v66 = objc_msgSendSuper2(&v83, sel_init);
  sub_2479FDA28();

  v53(v20, v15);
  return (uint64_t)v66;
}

unint64_t sub_247A038D4()
{
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  sub_247A1AF38();
  sub_247A1AF38();
  sub_247A1AF38();
  sub_247A1AF38();
  return 0xD000000000000017;
}

uint64_t sub_247A039B0(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  int v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t i;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t j;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  void (*v50)(_BYTE *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  void **v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  objc_class *v61;
  id v62;
  _BYTE v63[12];
  int v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, _BYTE *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  _BYTE *v75;
  uint64_t v76;
  void **v77;
  char *v78;
  objc_super v79;
  char v80;
  _QWORD *v81;

  v73 = a6;
  v72 = a5;
  v71 = a4;
  v70 = a3;
  v13 = sub_247A1AC8C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v75 = &v63[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v63[-v17];
  v19 = *a1;
  v20 = &v8[OBJC_IVAR___STKSticker_accessibilityName];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v78 = v20;
  v21 = &v8[OBJC_IVAR___STKSticker_searchText];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v8[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = (uint64_t *)&v8[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v8[OBJC_IVAR___STKSticker_metadata] = xmmword_247A1D600;
  v24 = &v8[OBJC_IVAR___STKSticker_externalURI];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v74 = (uint64_t *)v24;
  v77 = (void **)&v8[OBJC_IVAR___STKSticker_attributionInfo];
  *(_QWORD *)&v8[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(&v8[OBJC_IVAR___STKSticker__companionRecentUUID], 1, 1, v13);
  v25 = v8;
  sub_247A1AC80();
  v25[OBJC_IVAR___STKSticker_type] = v19;
  v76 = v14;
  v69 = *(void (**)(char *, _BYTE *, uint64_t))(v14 + 16);
  v69(&v25[OBJC_IVAR___STKSticker_identifier], v18, v13);
  *(_QWORD *)&v25[OBJC_IVAR___STKSticker_representations] = a2;
  if (a2 >> 62)
    goto LABEL_26;
  v26 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v68 = a7;
    if (v26)
      break;
    swift_bridgeObjectRelease();
    v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v34 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v34)
      goto LABEL_12;
LABEL_18:
    a7 = 0;
    v40 = v28 + 4;
    while (1)
    {
      v41 = *v40++;
      v42 = __OFADD__(a7, v41);
      a7 += v41;
      if (v42)
        break;
      if (!--v34)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    v26 = sub_247A1B37C();
  }
  v81 = (_QWORD *)MEMORY[0x24BEE4AF8];
  result = sub_2479E8E80(0, v26 & ~(v26 >> 63), 0);
  if (v26 < 0)
  {
    __break(1u);
    return result;
  }
  v64 = v19;
  v65 = a8;
  v66 = v18;
  v67 = v13;
  v28 = v81;
  if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v26; ++i)
    {
      v30 = (uint64_t *)(MEMORY[0x249587908](i, a2) + OBJC_IVAR___STKStickerRepresentation_byteCount);
      swift_beginAccess();
      v31 = *v30;
      swift_unknownObjectRelease();
      v81 = v28;
      v33 = v28[2];
      v32 = v28[3];
      if (v33 >= v32 >> 1)
      {
        sub_2479E8E80(v32 > 1, v33 + 1, 1);
        v28 = v81;
      }
      v28[2] = v33 + 1;
      v28[v33 + 4] = v31;
    }
  }
  else
  {
    for (j = 0; j != v26; ++j)
    {
      v36 = (uint64_t *)(*(_QWORD *)(a2 + 8 * j + 32) + OBJC_IVAR___STKStickerRepresentation_byteCount);
      swift_beginAccess();
      v37 = *v36;
      v81 = v28;
      v39 = v28[2];
      v38 = v28[3];
      if (v39 >= v38 >> 1)
      {
        sub_2479E8E80(v38 > 1, v39 + 1, 1);
        v28 = v81;
      }
      v28[2] = v39 + 1;
      v28[v39 + 4] = v37;
    }
  }
  swift_bridgeObjectRelease();
  v13 = v67;
  v18 = v66;
  a8 = v65;
  v19 = v64;
  v34 = v28[2];
  if (v34)
    goto LABEL_18;
LABEL_12:
  a7 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25[OBJC_IVAR___STKSticker_byteCount] = a7;
  v43 = &v25[OBJC_IVAR___STKSticker_name];
  v44 = v71;
  *(_QWORD *)v43 = v70;
  *((_QWORD *)v43 + 1) = v44;
  *(_QWORD *)&v25[OBJC_IVAR___STKSticker_effect] = 0;
  swift_beginAccess();
  v45 = *v23;
  v46 = v23[1];
  v47 = v72;
  v48 = v73;
  *v23 = v72;
  v23[1] = v48;
  sub_2479D935C(v47, v48);
  sub_2479D96E0(v45, v46);
  v49 = v75;
  v69(v75, v18, v13);
  if (a8)
  {
    v50 = *(void (**)(_BYTE *, uint64_t))(v76 + 8);
    v50(v49, v13);
    v51 = v68;
  }
  else
  {
    v80 = v19;
    v51 = sub_247A0319C();
    a8 = v52;
    v50 = *(void (**)(_BYTE *, uint64_t))(v76 + 8);
    v50(v49, v13);
  }
  v53 = v74;
  swift_beginAccess();
  *v53 = v51;
  v53[1] = a8;
  swift_bridgeObjectRelease();
  v54 = v78;
  swift_beginAccess();
  *(_QWORD *)v54 = 0;
  *((_QWORD *)v54 + 1) = 0;
  swift_bridgeObjectRelease();
  v55 = v77;
  swift_beginAccess();
  v56 = *v55;
  *v55 = 0;

  v57 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v58 = objc_msgSend(v57, sel_timeProvider);

  objc_msgSend(v58, sel_timestamp);
  v60 = v59;
  swift_unknownObjectRelease();
  *(_QWORD *)&v25[OBJC_IVAR___STKSticker_creationDate] = v60;
  *(_QWORD *)&v25[OBJC_IVAR___STKSticker_lastUsedDate] = v60;
  *(_QWORD *)&v25[OBJC_IVAR___STKSticker_libraryIndex] = 0;

  v61 = (objc_class *)type metadata accessor for Sticker(0);
  v79.receiver = v25;
  v79.super_class = v61;
  v62 = objc_msgSendSuper2(&v79, sel_init);
  sub_2479FDA28();

  v50(v18, v13);
  return (uint64_t)v62;
}

unint64_t sub_247A03FBC()
{
  unint64_t result;

  result = qword_2576D2D58;
  if (!qword_2576D2D58)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerError, &type metadata for StickerError);
    atomic_store(result, (unint64_t *)&qword_2576D2D58);
  }
  return result;
}

uint64_t type metadata accessor for Sticker.URIType(uint64_t a1)
{
  return sub_2479CD9B0(a1, qword_2576D2DC0);
}

unint64_t sub_247A04014()
{
  unint64_t result;

  result = qword_254450B08;
  if (!qword_254450B08)
  {
    result = MEMORY[0x249588058](&unk_247A1DBE0, &type metadata for Sticker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254450B08);
  }
  return result;
}

unint64_t sub_247A04058()
{
  unint64_t result;

  result = qword_2544508F8;
  if (!qword_2544508F8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.Effect, &type metadata for Sticker.Effect);
    atomic_store(result, (unint64_t *)&qword_2544508F8);
  }
  return result;
}

uint64_t sub_247A0409C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254450BB0);
    v10 = sub_2479CDA10(a2, (uint64_t (*)(uint64_t))type metadata accessor for Sticker.Representation, a3);
    result = MEMORY[0x249588058](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_247A04120()
{
  unint64_t result;

  result = qword_254450778;
  if (!qword_254450778)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.Effect, &type metadata for Sticker.Effect);
    atomic_store(result, (unint64_t *)&qword_254450778);
  }
  return result;
}

unint64_t sub_247A04168()
{
  unint64_t result;

  result = qword_2576D2D90;
  if (!qword_2576D2D90)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.StickerType, &type metadata for Sticker.StickerType);
    atomic_store(result, (unint64_t *)&qword_2576D2D90);
  }
  return result;
}

uint64_t sub_247A041AC()
{
  return sub_2479D96F4(&qword_2576D2D98, &qword_2576D2DA0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_247A041DC()
{
  unint64_t result;

  result = qword_2576D2DA8;
  if (!qword_2576D2DA8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.Effect, &type metadata for Sticker.Effect);
    atomic_store(result, (unint64_t *)&qword_2576D2DA8);
  }
  return result;
}

uint64_t sub_247A04220()
{
  return sub_2479CDA10(&qword_2576D2DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

unint64_t sub_247A04250()
{
  unint64_t result;

  result = qword_2576D2DB8;
  if (!qword_2576D2DB8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerError, &type metadata for StickerError);
    atomic_store(result, (unint64_t *)&qword_2576D2DB8);
  }
  return result;
}

uint64_t sub_247A04298@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247A042F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___STKSticker_accessibilityName, a2);
}

uint64_t sub_247A042FC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2479FBB24(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_accessibilityName);
}

uint64_t sub_247A04318@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___STKSticker_byteCount);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_247A04368(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_byteCount);
}

uint64_t sub_247A04374@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247A043CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___STKSticker_searchText, a2);
}

uint64_t sub_247A043D8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2479FBB24(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_searchText);
}

uint64_t sub_247A043F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___STKSticker_sanitizedPrompt, a2);
}

uint64_t sub_247A04400(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2479FBB24(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_sanitizedPrompt);
}

uint64_t sub_247A0441C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___STKSticker_effect);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_247A0446C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_effect);
}

uint64_t keypath_set_4Tm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t sub_247A044C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___STKSticker_externalURI, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247A04524(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2479FBB24(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_externalURI);
}

id sub_247A04540@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

double sub_247A04594@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR___STKSticker_creationDate, a2);
}

uint64_t sub_247A045A0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_20Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_creationDate);
}

double sub_247A045AC@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR___STKSticker_lastUsedDate, a2);
}

double keypath_get_19Tm@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  double *v4;
  double result;

  v4 = (double *)(*a1 + *a2);
  swift_beginAccess();
  result = *v4;
  *a3 = *(_QWORD *)v4;
  return result;
}

uint64_t sub_247A04604(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_20Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_lastUsedDate);
}

uint64_t keypath_set_20Tm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t sub_247A04668@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  return sub_2479F77A4(v3, a2, &qword_254450A70);
}

uint64_t sub_247A046C8()
{
  return type metadata accessor for Sticker(0);
}

void sub_247A046D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_247A1AC8C();
  if (v0 <= 0x3F)
  {
    sub_247A04D68();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for Sticker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Sticker.id.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of Sticker.representations.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of Sticker.representations.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of Sticker.representations.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of Sticker.accessibilityName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of Sticker.accessibilityName.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of Sticker.accessibilityName.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of Sticker.byteCount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of Sticker.name.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of Sticker.name.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of Sticker.name.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of Sticker.searchText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of Sticker.searchText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of Sticker.searchText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of Sticker.sanitizedPrompt.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of Sticker.sanitizedPrompt.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of Sticker.sanitizedPrompt.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of Sticker.isGeneratedSticker.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of Sticker.effect.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of Sticker.effect.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of Sticker.effect.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of Sticker.metadata.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x188))();
}

uint64_t dispatch thunk of Sticker.metadata.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x190))();
}

uint64_t dispatch thunk of Sticker.metadata.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of Sticker.externalURI.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of Sticker.externalURI.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of Sticker.externalURI.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of Sticker.attributionInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of Sticker.attributionInfo.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of Sticker.attributionInfo.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of Sticker.creationDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of Sticker.lastUsedDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of Sticker.lastUsedDate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of Sticker.lastUsedDate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of Sticker.libraryIndex.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x200))();
}

uint64_t dispatch thunk of Sticker._companionRecentUUID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x218))();
}

uint64_t dispatch thunk of Sticker._companionRecentUUID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x220))();
}

uint64_t dispatch thunk of Sticker._companionRecentUUID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x228))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 560))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(type:representations:name:metadata:externalURI:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(type:identifier:representations:name:effect:byteCount:metadata:externalURI:accessibilityName:attributionInfo:searchText:creationDate:lastUsedDate:libraryIndex:sanitizedPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  LOBYTE(a19) = a19 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 584))(a1, a2, a3, a4, a5, a6, a7, a8 & 1, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t dispatch thunk of Sticker.preferredRepresentation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x250))();
}

uint64_t dispatch thunk of Sticker.setPreferredRepresentation(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x258))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 624))();
}

uint64_t dispatch thunk of Sticker.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x278))();
}

uint64_t dispatch thunk of static Sticker.classify(uri:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 640))();
}

uint64_t dispatch thunk of static Sticker.uri(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 648))();
}

uint64_t dispatch thunk of static Sticker.url(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 656))();
}

uint64_t dispatch thunk of static Sticker.emoji(char:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 664))();
}

uint64_t dispatch thunk of static Sticker.memojiURI(avatarRecordIdentifier:stickerConfigurationIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 672))();
}

uint64_t dispatch thunk of static Sticker.thirdPartyURI(teamIdentifier:bundleIdentifier:filename:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 680))();
}

uint64_t dispatch thunk of Sticker.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 696))();
}

void sub_247A04D68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254450A78)
  {
    sub_247A1AC8C();
    v0 = sub_247A1B1F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254450A78);
  }
}

uint64_t storeEnumTagSinglePayload for Sticker.StickerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_247A04E08 + 4 * byte_247A1D625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_247A04E3C + 4 * byte_247A1D620[v4]))();
}

uint64_t sub_247A04E3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A04E44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247A04E4CLL);
  return result;
}

uint64_t sub_247A04E58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247A04E60);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_247A04E64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A04E6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Sticker.StickerType()
{
  return &type metadata for Sticker.StickerType;
}

ValueMetadata *type metadata accessor for Sticker.Effect()
{
  return &type metadata for Sticker.Effect;
}

uint64_t *initializeBufferWithCopyOfBuffer for Sticker.URIType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_247A1AC8C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = a2[2];
        v12 = a2[3];
        a1[2] = v11;
        a1[3] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        v15 = a2[3];
        a1[2] = a2[2];
        a1[3] = v15;
        v16 = a2[4];
        v17 = a2[5];
        a1[4] = v16;
        a1[5] = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for Sticker.URIType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_247A1AC8C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 3:
      goto LABEL_5;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for Sticker.URIType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_247A1AC8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_7;
    case 2u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[2];
      v9 = a2[3];
      a1[2] = v8;
      a1[3] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 4u:
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[4];
      v14 = a2[5];
      a1[4] = v13;
      a1[5] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for Sticker.URIType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_247A05330((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_247A1AC8C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_247A05330(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Sticker.URIType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for Sticker.URIType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_247A1AC8C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for Sticker.URIType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_247A05330((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_247A1AC8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_247A0548C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1AC8C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StickerError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for StickerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_247A055AC + 4 * byte_247A1D63E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_247A055CC + 4 * byte_247A1D643[v4]))();
}

_BYTE *sub_247A055AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_247A055CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_247A055D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_247A055DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_247A055E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_247A055EC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_247A055F8()
{
  return 0;
}

ValueMetadata *type metadata accessor for StickerError()
{
  return &type metadata for StickerError;
}

uint64_t getEnumTagSinglePayload for Sticker.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Sticker.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_247A056EC + 4 * byte_247A1D64D[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_247A05720 + 4 * byte_247A1D648[v4]))();
}

uint64_t sub_247A05720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A05728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247A05730);
  return result;
}

uint64_t sub_247A0573C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247A05744);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_247A05748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A05750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Sticker.CodingKeys()
{
  return &type metadata for Sticker.CodingKeys;
}

unint64_t sub_247A05770()
{
  unint64_t result;

  result = qword_2576D2DD8;
  if (!qword_2576D2DD8)
  {
    result = MEMORY[0x249588058](&unk_247A1DBB8, &type metadata for Sticker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576D2DD8);
  }
  return result;
}

unint64_t sub_247A057B8()
{
  unint64_t result;

  result = qword_254450B20;
  if (!qword_254450B20)
  {
    result = MEMORY[0x249588058](&unk_247A1DB28, &type metadata for Sticker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254450B20);
  }
  return result;
}

unint64_t sub_247A05800()
{
  unint64_t result;

  result = qword_254450B18;
  if (!qword_254450B18)
  {
    result = MEMORY[0x249588058](&unk_247A1DB50, &type metadata for Sticker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254450B18);
  }
  return result;
}

uint64_t sub_247A05844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65736572706572 && a2 == 0xEF736E6F69746174 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000247A1F180 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E756F4365747962 && a2 == 0xE900000000000074 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6554686372616573 && a2 == 0xEA00000000007478 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657A6974696E6173 && a2 == 0xEF74706D6F725064 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746365666665 && a2 == 0xE600000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xEB00000000495255 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEF6F666E496E6F69 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x646573557473616CLL && a2 == 0xEC00000065746144 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x497972617262696CLL && a2 == 0xEC0000007865646ELL || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000247A1FE00)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

unint64_t sub_247A05F4C()
{
  unint64_t result;

  result = qword_254450BA0;
  if (!qword_254450BA0)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.Effect, &type metadata for Sticker.Effect);
    atomic_store(result, (unint64_t *)&qword_254450BA0);
  }
  return result;
}

unint64_t sub_247A05F90()
{
  unint64_t result;

  result = qword_254450AF8;
  if (!qword_254450AF8)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for Sticker.StickerType, &type metadata for Sticker.StickerType);
    atomic_store(result, (unint64_t *)&qword_254450AF8);
  }
  return result;
}

void sub_247A05FD8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_metadata);
  if (v3)
  {
    v4 = v3;
    v5 = sub_247A1ABCC();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_247A0603C(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_247A1ABB4();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setMetadata_);

}

void sub_247A060A0(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(*a1, *a2);
  v5 = sub_247A1AEE4();
  v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

uint64_t sub_247A060F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ManagedSticker();
  result = sub_247A1B2EC();
  *a1 = result;
  return result;
}

char *keypath_get_selector_attributionAdamID()
{
  return sel_attributionAdamID;
}

id sub_247A0613C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_attributionAdamID);
  *a2 = result;
  return result;
}

id sub_247A06174(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAttributionAdamID_, *a1);
}

char *keypath_get_selector_attributionBundleIdentifier()
{
  return sel_attributionBundleIdentifier;
}

void sub_247A06194(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2479C77A8(a1, (SEL *)&selRef_attributionBundleIdentifier, a2);
}

void sub_247A061B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2479C7808(a1, a2, a3, a4, (SEL *)&selRef_setAttributionBundleIdentifier_);
}

char *keypath_get_selector_attributionName()
{
  return sel_attributionName;
}

void sub_247A061D8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2479C77A8(a1, (SEL *)&selRef_attributionName, a2);
}

void sub_247A061F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2479C7808(a1, a2, a3, a4, (SEL *)&selRef_setAttributionName_);
}

char *keypath_get_selector_accessibilityName()
{
  return sel_accessibilityName;
}

void sub_247A0621C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2479C77A8(a1, (SEL *)&selRef_accessibilityName, a2);
}

void sub_247A06238(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2479C7808(a1, a2, a3, a4, (SEL *)&selRef_setAccessibilityName_);
}

id sub_247A06254@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_byteCount);
  *a2 = (_DWORD)result;
  return result;
}

id sub_247A06284(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setByteCount_, *a1);
}

char *keypath_get_selector_creationDate()
{
  return sel_creationDate;
}

id sub_247A062A4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_creationDate);
  *a2 = v4;
  return result;
}

id sub_247A062D4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCreationDate_, *a1);
}

char *keypath_get_selector_effect()
{
  return sel_effect;
}

id sub_247A062F4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_effect);
  *a2 = (_DWORD)result;
  return result;
}

id sub_247A06324(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEffect_, *a1);
}

char *keypath_get_selector_externalURI()
{
  return sel_externalURI;
}

void sub_247A06344(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_247A060A0(a1, (SEL *)&selRef_externalURI, a2);
}

void sub_247A06360(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_14Tm(a1, a2, a3, a4, (SEL *)&selRef_setExternalURI_);
}

char *keypath_get_selector_lastUsedDate()
{
  return sel_lastUsedDate;
}

id sub_247A06380@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_lastUsedDate);
  *a2 = v4;
  return result;
}

id sub_247A063B0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastUsedDate_, *a1);
}

char *keypath_get_selector_libraryIndex()
{
  return sel_libraryIndex;
}

id sub_247A063D0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_libraryIndex);
  *a2 = v4;
  return result;
}

id sub_247A06400(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLibraryIndex_, *a1);
}

char *keypath_get_selector_metadata()
{
  return sel_metadata;
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_247A06434(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_247A060A0(a1, (SEL *)&selRef_name, a2);
}

void sub_247A06450(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_14Tm(a1, a2, a3, a4, (SEL *)&selRef_setName_);
}

void keypath_set_14Tm(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = *a2;
  v7 = (id)sub_247A1AEC0();
  objc_msgSend(v6, *a5, v7);

}

char *keypath_get_selector_type()
{
  return sel_type;
}

id sub_247A064B8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_type);
  *a2 = (_DWORD)result;
  return result;
}

id sub_247A064E8(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setType_, *a1);
}

char *keypath_get_selector_representations()
{
  return sel_representations;
}

id sub_247A06508@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_representations);
  *a2 = result;
  return result;
}

id sub_247A06540(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRepresentations_, *a1);
}

id sub_247A06554@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_version);
  *a2 = (_DWORD)result;
  return result;
}

id sub_247A06584(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

char *keypath_get_selector_searchText()
{
  return sel_searchText;
}

void sub_247A065A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2479C77A8(a1, (SEL *)&selRef_searchText, a2);
}

void sub_247A065C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2479C7808(a1, a2, a3, a4, (SEL *)&selRef_setSearchText_);
}

char *keypath_get_selector_sanitizedPrompt()
{
  return sel_sanitizedPrompt;
}

void sub_247A065E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2479C77A8(a1, (SEL *)&selRef_sanitizedPrompt, a2);
}

void sub_247A06604(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2479C7808(a1, a2, a3, a4, (SEL *)&selRef_setSanitizedPrompt_);
}

uint64_t sub_247A06620(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  swift_weakInit();
  *(_QWORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE192E0]), sel_init);
  *(_QWORD *)(v3 + 16) = a1;
  swift_weakAssign();
  *(_QWORD *)(v3 + 32) = a3;
  v6 = (void *)objc_opt_self();
  v7 = a1;
  v8 = a3;
  v9 = objc_msgSend(v6, sel_currentEnvironment);
  v10 = objc_msgSend(v9, sel_schedulerProvider);

  v11 = objc_msgSend(v10, sel_backgroundSchedulerWithQualityOfService_, 4);
  swift_unknownObjectRelease();

  swift_release();
  *(_QWORD *)(v3 + 40) = v11;
  return v3;
}

uint64_t sub_247A06734(uint64_t result, _BYTE *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v2 = result;
  if (*(_QWORD *)(result + 48))
  {
    *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    *a2 = 1;
    v3 = *(void **)(result + 40);
    v4 = swift_allocObject();
    swift_weakInit();
    v7[4] = sub_247A06AC4;
    v7[5] = v4;
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 1107296256;
    v7[2] = sub_247A06830;
    v7[3] = &block_descriptor_2;
    v5 = _Block_copy(v7);
    swift_release();
    v6 = objc_msgSend(v3, sel_afterDelay_performBlock_, v5, 1.0);
    _Block_release(v5);
    *(_QWORD *)(v2 + 48) = v6;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_247A06830(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_247A0685C(uint64_t a1, _BYTE *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v8[6];

  if (*(_BYTE *)(a1 + 56) == 1)
  {
    *(_BYTE *)(a1 + 56) = 0;
    *a2 = 1;
    v3 = *(void **)(a1 + 40);
    v4 = swift_allocObject();
    swift_weakInit();
    v8[4] = sub_247A06AC4;
    v8[5] = v4;
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 1107296256;
    v8[2] = sub_247A06830;
    v8[3] = &block_descriptor_4;
    v5 = _Block_copy(v8);
    swift_release();
    v6 = objc_msgSend(v3, sel_afterDelay_performBlock_, v5, 1.0);
    _Block_release(v5);
    *(_QWORD *)(a1 + 48) = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_247A0695C()
{
  uint64_t result;
  uint64_t v1;
  void *v2;
  char v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v3 = 0;
    v2 = *(void **)(result + 64);
    objc_msgSend(v2, sel_lock);
    sub_247A0685C(v1, &v3);
    objc_msgSend(v2, sel_unlock);
    if (v3 == 1)
    {
      objc_msgSend(*(id *)(v1 + 32), sel_postNotificationName_object_, *(_QWORD *)(v1 + 16), swift_weakLoadStrong());
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_247A06A34()
{
  id *v0;

  swift_weakDestroy();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s33CoalescingNotificationBroadcasterCMa()
{
  return objc_opt_self();
}

uint64_t sub_247A06AA0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_247A06AC4()
{
  return sub_247A0695C();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_247A06AFC(char a1)
{
  sub_247A1B568();
  __asm { BR              X10 }
}

uint64_t sub_247A06B48()
{
  sub_247A1AF2C();
  swift_bridgeObjectRelease();
  return sub_247A1B580();
}

void sub_247A06BF4(uint64_t a1, char a2)
{
  sub_247A1B568();
  __asm { BR              X10 }
}

uint64_t sub_247A06C3C()
{
  sub_247A1AF2C();
  swift_bridgeObjectRelease();
  return sub_247A1B580();
}

id static LaunchStateManagerAPI.xpcInterface.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2576D8A40);
}

uint64_t sub_247A06D28()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_2576D4CA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2576D4CA8);
  return sub_247A1ADAC();
}

id LaunchStateManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id LaunchStateManager.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LaunchStateManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for LaunchStateManager()
{
  return objc_opt_self();
}

id sub_247A06E68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
  if (v2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
  }
  else
  {
    v4 = (id)sub_247A08370();
    if (!v4)
      v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LaunchConfiguration()), sel_init);
    v3 = v4;
  }
  v5 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = v3;
  v6 = v2;
  v7 = v3;

  return v7;
}

uint64_t sub_247A06EFC(void *a1)
{
  return sub_247A06FB8(a1);
}

void sub_247A06F28()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_247A1AEC0();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);

  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration) = 0;

}

uint64_t sub_247A06FB8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  sub_247A1AA28();
  swift_allocObject();
  sub_247A1AA1C();
  type metadata accessor for LaunchConfiguration();
  sub_247A08EA8((unint64_t *)&unk_2576D2F30, (uint64_t)&protocol conformance descriptor for LaunchConfiguration);
  v4 = sub_247A1AA10();
  v6 = v5;
  result = swift_release();
  if (!v2)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v9 = (void *)sub_247A1ABB4();
    v10 = (void *)sub_247A1AEC0();
    objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

    v11 = *(void **)(v1 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration) = a1;
    v12 = a1;

    return sub_2479D969C(v4, v6);
  }
  return result;
}

id LaunchStateManager.__deallocating_deinit()
{
  return sub_2479ED978(type metadata accessor for LaunchStateManager);
}

Stickers::StickerSectionType_optional __swiftcall StickerSectionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Stickers::StickerSectionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_247A1B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static StickerSectionType.allCases.getter()
{
  return &unk_251912368;
}

uint64_t StickerSectionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_247A071B0 + 4 * byte_247A1DCFC[*v0]))(0x746E65636572, 0xE600000000000000);
}

uint64_t sub_247A071B0()
{
  return 0x746E6F4372657375;
}

uint64_t sub_247A071D0()
{
  return 0x6472616F6279656BLL;
}

uint64_t sub_247A071F4()
{
  return 0x696A6F6D656DLL;
}

uint64_t sub_247A07204()
{
  return 0x696A6F6D65;
}

uint64_t sub_247A07218()
{
  return 0x7261506472696874;
}

void sub_247A07234(char *a1)
{
  sub_247A15298(*a1);
}

void sub_247A07240()
{
  char *v0;

  sub_247A06AFC(*v0);
}

void sub_247A07248()
{
  __asm { BR              X10 }
}

uint64_t sub_247A07280()
{
  sub_247A1AF2C();
  return swift_bridgeObjectRelease();
}

void sub_247A07318(uint64_t a1)
{
  char *v1;

  sub_247A06BF4(a1, *v1);
}

Stickers::StickerSectionType_optional sub_247A07320(Swift::String *a1)
{
  return StickerSectionType.init(rawValue:)(*a1);
}

uint64_t sub_247A0732C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_247A07358 + 4 * byte_247A1DD08[*v0]))();
}

void sub_247A07358(_QWORD *a1@<X8>)
{
  *a1 = 0x746E6F4372657375;
  a1[1] = 0xEB00000000746E65;
}

void sub_247A0737C(char *a1@<X8>)
{
  strcpy(a1, "keyboardRecent");
  a1[15] = -18;
}

void sub_247A073A4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x696A6F6D656DLL;
  a1[1] = v1;
}

void sub_247A073B8(_QWORD *a1@<X8>)
{
  *a1 = 0x696A6F6D65;
  a1[1] = 0xE500000000000000;
}

void sub_247A073D0(_QWORD *a1@<X8>)
{
  *a1 = 0x7261506472696874;
  a1[1] = 0xEA00000000007974;
}

uint64_t sub_247A073F0()
{
  sub_247A08E1C();
  return sub_247A1B004();
}

uint64_t sub_247A0744C()
{
  sub_247A08E1C();
  return sub_247A1AFEC();
}

void sub_247A07498(_QWORD *a1@<X8>)
{
  *a1 = &unk_251912368;
}

void LaunchConfiguration.sectionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType);
}

uint64_t LaunchConfiguration.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

char *LaunchConfiguration.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  _BYTE *v5;
  _QWORD *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  v0 = sub_247A1AC2C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (objc_class *)type metadata accessor for LaunchConfiguration();
  v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType] = 0;
  v6 = &v5[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier];
  *v6 = 0;
  v6[1] = 0;
  v7 = (void *)objc_opt_self();
  v8 = v5;
  v9 = objc_msgSend(v7, sel_currentEnvironment);
  v10 = objc_msgSend(v9, sel_timeProvider);

  objc_msgSend(v10, sel_timestamp);
  v12 = v11;
  swift_unknownObjectRelease();
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v12;

  v18.receiver = v8;
  v18.super_class = v4;
  v13 = objc_msgSendSuper2(&v18, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v14 = (char *)v13;
  sub_247A1ABFC();
  sub_247A1ABF0();
  v16 = v15;

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v16;
  return v14;
}

id LaunchConfiguration.__allocating_init(sectionType:identifier:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return LaunchConfiguration.init(sectionType:identifier:)(a1, a2, a3);
}

id LaunchConfiguration.init(sectionType:identifier:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v3[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType] = *a1;
  v4 = &v3[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier];
  *v4 = a2;
  v4[1] = a3;
  v5 = (void *)objc_opt_self();
  v6 = v3;
  v7 = objc_msgSend(v5, sel_currentEnvironment);
  v8 = objc_msgSend(v7, sel_timeProvider);

  objc_msgSend(v8, sel_timestamp);
  v10 = v9;
  swift_unknownObjectRelease();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v10;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for LaunchConfiguration();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t static LaunchConfiguration.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_2576D2E40;
}

uint64_t static LaunchConfiguration.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_2576D2E40 = a1;
  return result;
}

uint64_t (*static LaunchConfiguration.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t LaunchConfiguration.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return LaunchConfiguration.init(coder:)(a1);
}

uint64_t LaunchConfiguration.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  void *v6;
  Swift::String rawValue;

  v2 = v1;
  sub_247A086D4();
  v4 = v2;
  v5 = sub_247A1B190();
  if (v5)
  {
    v6 = (void *)v5;
    rawValue._countAndFlagsBits = 0;
    sub_247A1AED8();

  }
  type metadata accessor for LaunchConfiguration();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_247A07B90()
{
  __asm { BR              X11 }
}

void sub_247A07BEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  double v26;
  void *v27;

  v22 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v23 = (void *)sub_247A1AEC0();
  objc_msgSend(v20, sel_encodeObject_forKey_, v22, v23);

  if (*(_QWORD *)(v21 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier + 8))
    v24 = sub_247A1AEC0();
  else
    v24 = 0;
  v25 = (void *)sub_247A1AEC0();
  objc_msgSend(v20, sel_encodeObject_forKey_, v24, v25);
  swift_unknownObjectRelease();

  v26 = *(double *)(v21 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate);
  v27 = (void *)sub_247A1AEC0();
  objc_msgSend(v20, sel_encodeDouble_forKey_, v27, v26);

}

void sub_247A07DE4(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate) = a1;
}

uint64_t sub_247A07DF4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x6E6F697461657263;
  if (*v0)
    return v1;
  else
    return 0x546E6F6974636573;
}

uint64_t sub_247A07E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_247A08C8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_247A07E88(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_247A07E94()
{
  sub_247A08710();
  return sub_247A1B5A4();
}

uint64_t sub_247A07EBC()
{
  sub_247A08710();
  return sub_247A1B5B0();
}

id LaunchConfiguration.__deallocating_deinit()
{
  return sub_2479ED978(type metadata accessor for LaunchConfiguration);
}

uint64_t sub_247A07F04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2E70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247A08710();
  sub_247A1B598();
  v10[15] = *(_BYTE *)(v3 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType);
  v10[14] = 0;
  sub_247A08754();
  sub_247A1B49C();
  if (!v2)
  {
    v10[13] = 1;
    sub_247A1B454();
    v10[12] = 2;
    sub_247A1B484();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

id LaunchConfiguration.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return LaunchConfiguration.init(from:)(a1);
}

id LaunchConfiguration.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  objc_super v22;
  char v23;
  char v24;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2E88);
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v20 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_247A08710();
  v21 = v1;
  sub_247A1B58C();
  if (v2)
  {
    v17 = v21;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);

    type metadata accessor for LaunchConfiguration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v4;
    v23 = 0;
    sub_247A08798();
    v9 = v19;
    sub_247A1B448();
    v11 = v21;
    v21[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType] = v24;
    v24 = 1;
    v12 = sub_247A1B3E8();
    v13 = (uint64_t *)&v11[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier];
    *v13 = v12;
    v13[1] = v14;
    v24 = 2;
    sub_247A1B430();
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v15;

    v16 = (objc_class *)type metadata accessor for LaunchConfiguration();
    v22.receiver = v11;
    v22.super_class = v16;
    v17 = objc_msgSendSuper2(&v22, sel_init);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  return v17;
}

id sub_247A08300@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for LaunchConfiguration());
  result = LaunchConfiguration.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_247A08350(_QWORD *a1)
{
  return sub_247A07F04(a1);
}

uint64_t sub_247A08370()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v4;
  unint64_t v5;
  _OWORD v6[2];
  _QWORD v7[4];

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_247A1AEC0();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_247A1B244();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_247A08E60((uint64_t)v6, (uint64_t)v7);
  if (v7[3])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_247A1AA04();
      swift_allocObject();
      sub_247A1A9F8();
      type metadata accessor for LaunchConfiguration();
      sub_247A08EA8((unint64_t *)&unk_2576D2F40, (uint64_t)&protocol conformance descriptor for LaunchConfiguration);
      sub_247A1A9EC();
      sub_2479D969C(v4, v5);
      swift_release();
      return v7[0];
    }
  }
  else
  {
    sub_2479DFA90((uint64_t)v7);
  }
  return 0;
}

uint64_t type metadata accessor for LaunchConfiguration()
{
  return objc_opt_self();
}

unint64_t sub_247A086D4()
{
  unint64_t result;

  result = qword_2576D2F60;
  if (!qword_2576D2F60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576D2F60);
  }
  return result;
}

unint64_t sub_247A08710()
{
  unint64_t result;

  result = qword_2576D2E78;
  if (!qword_2576D2E78)
  {
    result = MEMORY[0x249588058](&unk_247A1E01C, &type metadata for LaunchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576D2E78);
  }
  return result;
}

unint64_t sub_247A08754()
{
  unint64_t result;

  result = qword_2576D2E80;
  if (!qword_2576D2E80)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerSectionType, &type metadata for StickerSectionType);
    atomic_store(result, (unint64_t *)&qword_2576D2E80);
  }
  return result;
}

unint64_t sub_247A08798()
{
  unint64_t result;

  result = qword_2576D2E90;
  if (!qword_2576D2E90)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerSectionType, &type metadata for StickerSectionType);
    atomic_store(result, (unint64_t *)&qword_2576D2E90);
  }
  return result;
}

unint64_t sub_247A087E0()
{
  unint64_t result;

  result = qword_2576D2E98;
  if (!qword_2576D2E98)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerSectionType, &type metadata for StickerSectionType);
    atomic_store(result, (unint64_t *)&qword_2576D2E98);
  }
  return result;
}

unint64_t sub_247A08828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576D2EA0;
  if (!qword_2576D2EA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2576D2EA8);
    result = MEMORY[0x249588058](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2576D2EA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchStateManagerAPI()
{
  return &type metadata for LaunchStateManagerAPI;
}

uint64_t method lookup function for LaunchStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LaunchStateManager.launchConfiguration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of LaunchStateManager.updateConfiguration(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of LaunchStateManager.reset()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t getEnumTagSinglePayload for StickerSectionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerSectionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_247A089D0 + 4 * byte_247A1DD19[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_247A08A04 + 4 * byte_247A1DD14[v4]))();
}

uint64_t sub_247A08A04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A08A0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247A08A14);
  return result;
}

uint64_t sub_247A08A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247A08A28);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_247A08A2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A08A34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StickerSectionType()
{
  return &type metadata for StickerSectionType;
}

uint64_t method lookup function for LaunchConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LaunchConfiguration.__allocating_init(sectionType:identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of LaunchConfiguration.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of LaunchConfiguration.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LaunchConfiguration.setCreatedAt(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LaunchConfiguration.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LaunchConfiguration.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t storeEnumTagSinglePayload for LaunchConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_247A08B34 + 4 * byte_247A1DD23[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_247A08B68 + 4 * byte_247A1DD1E[v4]))();
}

uint64_t sub_247A08B68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A08B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247A08B78);
  return result;
}

uint64_t sub_247A08B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247A08B8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_247A08B90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A08B98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchConfiguration.CodingKeys()
{
  return &type metadata for LaunchConfiguration.CodingKeys;
}

unint64_t sub_247A08BB8()
{
  unint64_t result;

  result = qword_2576D2F10;
  if (!qword_2576D2F10)
  {
    result = MEMORY[0x249588058](&unk_247A1DFF4, &type metadata for LaunchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576D2F10);
  }
  return result;
}

unint64_t sub_247A08C00()
{
  unint64_t result;

  result = qword_2576D2F18;
  if (!qword_2576D2F18)
  {
    result = MEMORY[0x249588058](&unk_247A1DF64, &type metadata for LaunchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576D2F18);
  }
  return result;
}

unint64_t sub_247A08C48()
{
  unint64_t result;

  result = qword_2576D2F20;
  if (!qword_2576D2F20)
  {
    result = MEMORY[0x249588058](&unk_247A1DF8C, &type metadata for LaunchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576D2F20);
  }
  return result;
}

uint64_t sub_247A08C8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x546E6F6974636573 && a2 == 0xEB00000000657079;
  if (v2 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_247A08E1C()
{
  unint64_t result;

  result = qword_2576D2F28;
  if (!qword_2576D2F28)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerSectionType, &type metadata for StickerSectionType);
    atomic_store(result, (unint64_t *)&qword_2576D2F28);
  }
  return result;
}

uint64_t sub_247A08E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_247A08EA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LaunchConfiguration();
    result = MEMORY[0x249588058](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RangeGenerator.init(offset:limit:batchSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;

  if ((a3 & 1) != 0)
    goto LABEL_5;
  v6 = a2 + result;
  if (!__OFADD__(a2, result))
  {
    if (v6 >= result)
    {
LABEL_6:
      *(_QWORD *)a6 = result;
      *(_QWORD *)(a6 + 8) = v6;
      *(_QWORD *)(a6 + 16) = a4;
      *(_BYTE *)(a6 + 24) = a5 & 1;
      return result;
    }
    __break(1u);
LABEL_5:
    v6 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t RangeGenerator.next()()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;

  v1 = v0[2];
  v2 = *((_BYTE *)v0 + 24);
  if ((v2 & 1) == 0 && !v1)
    return 0;
  result = *v0;
  v4 = v0[1];
  v5 = v4 - *v0;
  if (__OFSUB__(v4, *v0))
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 < 1)
    return 0;
  if (v1 >= v5)
    v2 = 1;
  if ((v2 & 1) != 0)
    goto LABEL_11;
  v6 = __OFADD__(result, v1);
  v7 = result + v1;
  if (v6)
    goto LABEL_15;
  if (v7 >= result)
  {
    v8 = v4 < v7;
    v4 = v7;
    if (!v8)
    {
LABEL_11:
      *v0 = v4;
      return result;
    }
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_247A08F98()
{
  unint64_t result;

  result = qword_254450AC0;
  if (!qword_254450AC0)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for RangeGenerator, &type metadata for RangeGenerator);
    atomic_store(result, (unint64_t *)&qword_254450AC0);
  }
  return result;
}

__n128 sub_247A08FDC@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[1].n128_u64[0];
  v3 = v1[1].n128_u8[8];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t sub_247A08FF8()
{
  return 0;
}

uint64_t sub_247A09000()
{
  return 2;
}

uint64_t sub_247A09008()
{
  uint64_t v0;

  return sub_2479E9C50(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_247A09018(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_247A09028(a1, a2, a3, *(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

uint64_t sub_247A09028(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!a2)
  {
LABEL_15:
    a3 = 0;
    goto LABEL_16;
  }
  if (!a3)
  {
LABEL_16:
    *(_QWORD *)result = a4;
    *(_QWORD *)(result + 8) = a5;
    *(_QWORD *)(result + 16) = a6;
    *(_BYTE *)(result + 24) = a7 & 1;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (a7 & 1 | (a6 != 0))
    {
      v7 = 0;
      v8 = a4;
      while (1)
      {
        v9 = a5 - v8;
        if (__OFSUB__(a5, v8))
          break;
        if (v9 < 1)
        {
          a4 = v8;
          a3 = v7;
          goto LABEL_16;
        }
        v10 = a5;
        if ((a7 & 1) == 0)
        {
          v10 = a5;
          if (v9 > a6)
          {
            v10 = v8 + a6;
            if (__OFADD__(v8, a6))
              goto LABEL_21;
            if (v10 < v8)
              goto LABEL_22;
            if (v10 > a5)
              goto LABEL_20;
          }
        }
        *a2 = v8;
        a2[1] = v10;
        if (a3 - 1 == v7)
        {
          a4 = v10;
          goto LABEL_16;
        }
        ++v7;
        a2 += 2;
        v8 = v10;
        if (!(a7 & 1 | (a6 != 0)))
          goto LABEL_15;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    goto LABEL_15;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_247A090EC()
{
  return sub_247A1AFD4();
}

uint64_t sub_247A0910C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = RangeGenerator.next()();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RangeGenerator(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RangeGenerator(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RangeGenerator()
{
  return &type metadata for RangeGenerator;
}

uint64_t StickerSequence.makeIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  _BYTE v19[8];
  void *v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  char v26;
  _BYTE v27[40];

  v2 = v1;
  v4 = (_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 136);
  v6 = __swift_project_boxed_opaque_existential_1(v4, v5);
  v7 = sub_2479D9770(v2, (uint64_t)v27);
  v9 = *(void **)(v2 + 48);
  v8 = *(void **)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 64);
  v11 = *(_BYTE *)(v2 + 88);
  v12 = *(_QWORD *)(v2 + 96);
  v13 = *(_BYTE *)(v2 + 104);
  v19[0] = *(_BYTE *)(v2 + 40);
  v20 = v9;
  v21 = v8;
  v22 = v10;
  v23 = *(_OWORD *)(v2 + 72);
  v24 = v11;
  v25 = v12;
  v26 = v13;
  MEMORY[0x24BDAC7A8](v7);
  v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v16 + 16))(v15, v6, v5);
  v17 = v9;
  sub_2479D50B4(v8);
  swift_bridgeObjectRetain();
  return sub_247A0930C((uint64_t)v27, (uint64_t)v15, v5, a1);
}

void *StickerSequenceIterator.next()()
{
  void *v0;
  void *v1;
  void *v2;

  sub_2479E88BC();
  v1 = v0;
  if (!v0)
  {
    sub_247A095C4();
    sub_2479E88BC();
    v1 = v2;
    sub_247A1268C(v2);
  }
  return v1;
}

uint64_t sub_247A0930C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  v22 = a2;
  v23 = a1;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v10;
  v12 = *(_OWORD *)(v10 + 8);
  v20 = *(_OWORD *)(v10 + 24);
  v21 = v12;
  v13 = *((_QWORD *)v10 + 5);
  v14 = v10[48];
  v15 = *((_QWORD *)v10 + 7);
  v16 = v10[64];
  *(_QWORD *)(a4 + 152) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a4 + 160) = 0;
  sub_2479D9770(v7, a4);
  *(_BYTE *)(a4 + 40) = v11;
  v17 = v20;
  *(_OWORD *)(a4 + 48) = v21;
  *(_OWORD *)(a4 + 64) = v17;
  *(_QWORD *)(a4 + 80) = v13;
  *(_BYTE *)(a4 + 88) = v14;
  *(_QWORD *)(a4 + 96) = v15;
  *(_BYTE *)(a4 + 104) = v16;
  v18 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v22, a3);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  sub_247A1AFC8();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, a3);
  __swift_destroy_boxed_opaque_existential_0(v23);
  return sub_2479E0B28(&v24, a4 + 112);
}

uint64_t sub_247A0947C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  id v15;
  _BYTE v17[8];
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  char v24;
  _BYTE v25[40];

  v3 = *(_QWORD *)(v1 + 136);
  v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 112), v3);
  v5 = sub_2479D9770(v1, (uint64_t)v25);
  v7 = *(void **)(v1 + 48);
  v6 = *(void **)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_BYTE *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v11 = *(_BYTE *)(v1 + 104);
  v17[0] = *(_BYTE *)(v1 + 40);
  v18 = v7;
  v19 = v6;
  v20 = v8;
  v21 = *(_OWORD *)(v1 + 72);
  v22 = v9;
  v23 = v10;
  v24 = v11;
  MEMORY[0x24BDAC7A8](v5);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v14 + 16))(v13, v4, v3);
  v15 = v7;
  sub_2479D50B4(v6);
  swift_bridgeObjectRetain();
  sub_247A0930C((uint64_t)v25, (uint64_t)v13, v3, a1);
  return sub_2479D8018(v1);
}

uint64_t sub_247A09590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2479E97CC(v0);
  v2 = v1;
  sub_2479D8018(v0);
  return v2;
}

uint64_t sub_247A095C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  uint8_t *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v77;
  double *v78;
  _QWORD *v79;
  char *v80;
  int v81;
  uint64_t v82;
  int v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char v98;
  uint64_t v99;
  char v100;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char **)((char *)&v77 - v7);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (double *)((char *)&v77 - v10);
  v12 = (char *)&v77 + *(int *)(v9 + 48) - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v14 = *(int *)(v13 + 48);
  v15 = sub_247A09E24(v12);
  *(_QWORD *)v11 = v16;
  *(_QWORD *)&v12[v14] = v15;
  if (*(_BYTE *)(v0 + 160) == 1)
  {
    if (qword_254450AE8 != -1)
      swift_once();
    v17 = sub_247A1ADB8();
    __swift_project_value_buffer(v17, (uint64_t)qword_254452080);
    v18 = sub_247A1ADA0();
    v19 = sub_247A1B10C();
    if (!os_log_type_enabled(v18, v19))
      goto LABEL_12;
    v20 = v13;
    v21 = v8;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_2479C5000, v18, v19, "Last refill was partial — the last sticker has probably already been fetched", v22, 2u);
    v23 = v22;
    v8 = v21;
LABEL_11:
    v13 = v20;
    MEMORY[0x249588124](v23, -1, -1);
LABEL_12:

    v28 = (uint64_t)v8 + *(int *)(v2 + 48);
    v29 = *(int *)(v13 + 48);
    v30 = *v11;
    *v8 = *(_QWORD *)v11;
    v31 = sub_247A1AD34();
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v28, v12, v31);
    v33 = *(_QWORD *)&v12[v14];
    goto LABEL_30;
  }
  v91 = v8;
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 112, *(_QWORD *)(v0 + 136));
  sub_247A1B1FC();
  if ((v94 & 1) != 0)
  {
    if (qword_254450AE8 != -1)
      swift_once();
    v24 = sub_247A1ADB8();
    __swift_project_value_buffer(v24, (uint64_t)qword_254452080);
    v18 = sub_247A1ADA0();
    v25 = sub_247A1B10C();
    v26 = os_log_type_enabled(v18, v25);
    v8 = v91;
    if (!v26)
      goto LABEL_12;
    v20 = v13;
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_2479C5000, v18, v25, "Can’t refill — range exhaustion", v27, 2u);
    v23 = v27;
    goto LABEL_11;
  }
  v34 = v92;
  v35 = v93;
  if (__OFSUB__(v93, v92))
  {
    __break(1u);
    swift_once();
    v50 = sub_247A1ADB8();
    __swift_project_value_buffer(v50, (uint64_t)qword_254452080);
    v51 = v35;
    v52 = v35;
    v53 = sub_247A1ADA0();
    v54 = sub_247A1B118();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v55 = 138412290;
      v57 = v35;
      v58 = v5;
      v59 = _swift_stdlib_bridgeErrorToNSError();
      v92 = v59;
      sub_247A1B208();
      *v56 = v59;
      v5 = v58;

      _os_log_impl(&dword_2479C5000, v53, v54, "Error refilling buffer: %@", v55, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v56, -1, -1);
      MEMORY[0x249588124](v55, -1, -1);

    }
    else
    {

    }
    v74 = v86;
    v73 = v87;
    v75 = v88;
    v72 = v90;
    v11 = v78;
  }
  else
  {
    v78 = v11;
    v86 = v14;
    v87 = v12;
    v83 = *(unsigned __int8 *)(v1 + 104);
    v82 = *(_QWORD *)(v1 + 96);
    v36 = v5;
    v5 = *(char **)(v1 + 56);
    v37 = *(_QWORD *)(v1 + 64);
    v80 = *(char **)(v1 + 48);
    v81 = *(unsigned __int8 *)(v1 + 40);
    v88 = v2;
    v89 = &v93[-v92];
    v38 = (char *)v36 + *(int *)(v2 + 48);
    v90 = v13;
    v39 = *(int *)(v13 + 48);
    v40 = v80;
    sub_2479D50B4(v5);
    swift_bridgeObjectRetain();
    v41 = v40;
    sub_2479D50B4(v5);
    swift_bridgeObjectRetain();
    v42 = sub_247A0A050(v38, v34, (uint64_t)v35);
    v44 = v43;
    v45 = v42;
    v79 = v36;
    *(double *)v36 = v43;
    v77 = v38;
    *(_QWORD *)&v38[v39] = v42;
    v47 = *(_QWORD *)(v1 + 24);
    v46 = *(_QWORD *)(v1 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v1, v47);
    swift_retain();
    v48 = v41;
    sub_2479D50B4(v5);
    sub_2479D5080(v5);

    LOBYTE(v92) = v81;
    v93 = v80;
    v94 = v5;
    v95 = v37;
    v96 = v34;
    v97 = v89;
    v98 = 0;
    v99 = v82;
    v100 = v83;
    v49 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v46 + 16))(&v92, v47, v46);
    v84 = v48;
    v85 = v37;
    v60 = v49;

    sub_2479D5080(v5);
    swift_bridgeObjectRelease();
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      v61 = sub_247A1B37C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v11 = v78;
    v62 = (uint64_t)v91 + *(int *)(v88 + 48);
    *(double *)v91 = v44;
    v63 = *(int *)(v90 + 48);
    v64 = sub_247A1AD34();
    v65 = *(_QWORD *)(v64 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v62, v77, v64);
    *(_QWORD *)(v62 + v63) = v45;
    sub_247A0ADB4(v61, v62, v45, v44);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v62, v64);
    sub_2479D4C48(v60);
    v66 = v61 < (uint64_t)v89;
    *(_BYTE *)(v1 + 160) = v61 < (uint64_t)v89;
    if (v66)
    {
      v74 = v86;
      v73 = v87;
      if (qword_254450AE8 != -1)
        swift_once();
      v67 = sub_247A1ADB8();
      __swift_project_value_buffer(v67, (uint64_t)qword_254452080);
      v68 = sub_247A1ADA0();
      v69 = sub_247A1B100();
      v70 = os_log_type_enabled(v68, v69);
      v75 = v88;
      if (v70)
      {
        v71 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v71 = 0;
        _os_log_impl(&dword_2479C5000, v68, v69, "This is the last batch", v71, 2u);
        MEMORY[0x249588124](v71, -1, -1);
      }

      sub_2479D045C((uint64_t)v79, &qword_254450BC0);
    }
    else
    {
      sub_2479D045C((uint64_t)v79, &qword_254450BC0);
      v74 = v86;
      v73 = v87;
      v75 = v88;
    }
    v72 = v90;
  }

  sub_2479D5080(v5);
  swift_bridgeObjectRelease();
  v28 = (uint64_t)v91 + *(int *)(v75 + 48);
  v29 = *(int *)(v72 + 48);
  v30 = *v11;
  *v91 = *(_QWORD *)v11;
  v31 = sub_247A1AD34();
  v32 = *(_QWORD *)(v31 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v28, v73, v31);
  v33 = *(_QWORD *)&v73[v74];
LABEL_30:
  *(_QWORD *)(v28 + v29) = v33;
  swift_retain();
  sub_247A0A928(v28, v33, v30);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v28, v31);
  return sub_2479D045C((uint64_t)v11, &qword_254450BC0);
}

uint64_t sub_247A09E24(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - v6;
  if (qword_254450AE8 != -1)
    swift_once();
  v8 = sub_247A1ADB8();
  __swift_project_value_buffer(v8, (uint64_t)qword_254452080);
  v9 = sub_247A1ADA0();
  v10 = sub_247A1B100();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_2479C5000, v9, v10, "BEGIN refillBuffer()", v11, 2u);
    MEMORY[0x249588124](v11, -1, -1);
  }

  v12 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v13 = objc_msgSend(v12, sel_timeProvider);

  objc_msgSend(v13, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450AE0 != -1)
    swift_once();
  v14 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v14, (uint64_t)qword_254452068);
  v15 = sub_247A0F98C((uint64_t)v7, "refill buffer", 13, 2);
  v16 = sub_247A1AD34();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v5, v7, v16);
  v17(a1, v5, v16);
  return v15;
}

uint64_t sub_247A0A050(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  if (qword_254450AE8 != -1)
    swift_once();
  v12 = sub_247A1ADB8();
  __swift_project_value_buffer(v12, (uint64_t)qword_254452080);
  v13 = sub_247A1ADA0();
  v14 = sub_247A1B100();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    *(_DWORD *)v15 = 134218240;
    v24 = a2;
    sub_247A1B208();
    *(_WORD *)(v15 + 12) = 2048;
    v24 = a3;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v13, v14, "will fetch range %ld..<%ld", (uint8_t *)v15, 0x16u);
    MEMORY[0x249588124](v15, -1, -1);
  }

  v16 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v17 = objc_msgSend(v16, sel_timeProvider);

  objc_msgSend(v17, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450AE0 != -1)
    swift_once();
  v18 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v18, (uint64_t)qword_254452068);
  v19 = sub_247A0F98C((uint64_t)v11, "fetch range", 11, 2);
  v20 = sub_247A1AD34();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v9, v11, v20);
  v21(a1, v9, v20);
  return v19;
}

void sub_247A0A2D8(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  void *v4;

  sub_2479E88BC();
  v3 = v2;
  if (!v2)
  {
    sub_247A095C4();
    sub_2479E88BC();
    v3 = v4;
    sub_247A1268C(v4);
  }
  *a1 = v3;
}

uint64_t sub_247A0A330()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_254452080);
  __swift_project_value_buffer(v0, (uint64_t)qword_254452080);
  return sub_247A1ADAC();
}

uint64_t sub_247A0A3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v0 = sub_247A1AD58();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_247A1ADB8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - v9;
  v11 = type metadata accessor for StickerSignposter();
  __swift_allocate_value_buffer(v11, qword_254452068);
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_254452068);
  if (qword_254450AE8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_254452080);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, (uint64_t)v10, v4);
  sub_247A1AD40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v12, v3, v0);
}

void sub_247A0A530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _QWORD v40[2];
  char v41;
  void *v42;
  void *v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  uint64_t v47;
  char v48;
  _BYTE v49[40];
  _OWORD v50[9];
  __int128 v51;
  char v52;

  v7 = *(_QWORD *)(v3 + 136);
  v6 = *(_QWORD *)(v3 + 144);
  v40[0] = a3;
  v40[1] = v6;
  v8 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 112), v7);
  v9 = sub_2479D9770(v3, (uint64_t)v49);
  v10 = *(void **)(v3 + 48);
  v11 = *(void **)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 88);
  v14 = *(_QWORD *)(v3 + 96);
  v15 = *(_BYTE *)(v3 + 104);
  v41 = *(_BYTE *)(v3 + 40);
  v42 = v10;
  v43 = v11;
  v44 = v12;
  v45 = *(_OWORD *)(v3 + 72);
  v46 = v13;
  v47 = v14;
  v48 = v15;
  MEMORY[0x24BDAC7A8](v9);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t))(v18 + 16))(v17, v8, v7);
  v19 = v10;
  sub_2479D50B4(v11);
  swift_bridgeObjectRetain();
  sub_247A0930C((uint64_t)v49, (uint64_t)v17, v7, (uint64_t)v50);
  sub_2479D8018(v3);
  if (!a2 || (v20 = v40[0]) == 0)
  {
LABEL_35:
    v35 = v51;
    *(_OWORD *)(a1 + 128) = v50[8];
    *(_OWORD *)(a1 + 144) = v35;
    *(_BYTE *)(a1 + 160) = v52;
    v36 = v50[5];
    *(_OWORD *)(a1 + 64) = v50[4];
    *(_OWORD *)(a1 + 80) = v36;
    v37 = v50[7];
    *(_OWORD *)(a1 + 96) = v50[6];
    *(_OWORD *)(a1 + 112) = v37;
    v38 = v50[1];
    *(_OWORD *)a1 = v50[0];
    *(_OWORD *)(a1 + 16) = v38;
    v39 = v50[3];
    *(_OWORD *)(a1 + 32) = v50[2];
    *(_OWORD *)(a1 + 48) = v39;
    return;
  }
  if ((v40[0] & 0x8000000000000000) != 0)
    goto LABEL_42;
  v21 = 0;
  while (1)
  {
    v23 = *((_QWORD *)&v51 + 1);
    v24 = *((_QWORD *)&v51 + 1) >> 62;
    if (*((_QWORD *)&v51 + 1) >> 62)
      break;
    if (!*(_QWORD *)((*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_19;
LABEL_10:
    if ((v23 & 0xC000000000000001) != 0)
    {
      v25 = (id)MEMORY[0x249587908](0, v23);
      if (v24)
        goto LABEL_27;
    }
    else
    {
      if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_38;
      v25 = *(id *)(v23 + 32);
      if (v24)
      {
LABEL_27:
        swift_bridgeObjectRetain();
        v31 = sub_247A1B37C();
        swift_bridgeObjectRelease();
        if (!v31)
          goto LABEL_40;
        goto LABEL_14;
      }
    }
    if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_40;
LABEL_14:
    sub_2479EA0F8(0, 1);
LABEL_7:
    *(_QWORD *)(a2 + 8 * v21++) = v25;
    if (v20 == v21)
      goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  v26 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_19:
    sub_247A095C4();
    v29 = *((_QWORD *)&v51 + 1);
    v30 = *((_QWORD *)&v51 + 1) >> 62;
    if (*((_QWORD *)&v51 + 1) >> 62)
    {
      swift_bridgeObjectRetain();
      v32 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v32)
      {
LABEL_36:
        sub_247A1268C(0);
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
      v33 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v33)
        goto LABEL_45;
      swift_bridgeObjectRetain();
      v34 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      if (!v34)
        goto LABEL_43;
    }
    else if (!*(_QWORD *)((*((_QWORD *)&v51 + 1) & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_36;
    }
    if ((v29 & 0xC000000000000001) != 0)
    {
      v25 = (id)MEMORY[0x249587908](0, v29);
      if (!v30)
      {
LABEL_24:
        if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_41;
        goto LABEL_6;
      }
    }
    else
    {
      if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_39;
      v25 = *(id *)(v29 + 32);
      if (!v30)
        goto LABEL_24;
    }
    swift_bridgeObjectRetain();
    v22 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (!v22)
      goto LABEL_41;
LABEL_6:
    sub_2479EA0F8(0, 1);
    sub_247A1268C(v25);
    if (!v25)
      goto LABEL_35;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v27 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_44;
  swift_bridgeObjectRetain();
  v28 = sub_247A1B37C();
  swift_bridgeObjectRelease();
  if (v28)
    goto LABEL_10;
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_247A0A928(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  double v40;
  double v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  double *v59;
  uint64_t v60;
  uint64_t v61;

  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v6 = MEMORY[0x24BDAC7A8](v56);
  v57 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (double *)((char *)&v54 - v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v55 = (char *)&v54 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v54 - v17;
  v19 = *(int *)(v16 + 48);
  v20 = sub_247A1AD34();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v18, a1, v20);
  *(_QWORD *)&v18[v19] = a2;
  v23 = v56;
  v24 = (char *)v9 + *(int *)(v56 + 48);
  v58 = v21;
  v59 = v9;
  *v9 = a3;
  v25 = *(int *)(v10 + 48);
  v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v26(v24, v18, v20);
  v27 = a2;
  *(_QWORD *)&v24[v25] = a2;
  v28 = *(int *)(v23 + 48);
  v29 = (void (*)(char *, char *, uint64_t))v22;
  v30 = &v57[v28];
  v31 = v24;
  v32 = v55;
  v33 = v27;
  v29(&v57[v28], v31, v20);
  v26(v13, v30, v20);
  v34 = *(int *)(v10 + 48);
  v26(v32, v13, v20);
  *(_QWORD *)&v32[v34] = v33;
  v35 = qword_254450AE0;
  swift_retain_n();
  if (v35 != -1)
    swift_once();
  v36 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v36, (uint64_t)qword_254452068);
  v37 = *(int *)(v10 + 48);
  v29(v13, v32, v20);
  *(_QWORD *)&v13[v37] = v33;
  sub_247A12024("refill buffer", 13, 2, (uint64_t)v13, v33);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v20);
  v38 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v39 = objc_msgSend(v38, sel_timeProvider);

  objc_msgSend(v39, sel_timestamp);
  v41 = v40;
  swift_unknownObjectRelease();
  v42 = objc_msgSend((id)objc_opt_self(), sel_stringForTimeInterval_, v41 - a3);
  v43 = sub_247A1AEE4();
  v45 = v44;

  if (qword_254450AE8 != -1)
    swift_once();
  v46 = sub_247A1ADB8();
  __swift_project_value_buffer(v46, (uint64_t)qword_254452080);
  swift_bridgeObjectRetain();
  v47 = sub_247A1ADA0();
  v48 = sub_247A1B100();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = (uint64_t)v32;
    v51 = swift_slowAlloc();
    v61 = v51;
    *(_DWORD *)v49 = 136315138;
    swift_bridgeObjectRetain();
    v60 = sub_2479CCA28(v43, v45, &v61);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2479C5000, v47, v48, "END refillBuffer() (%s)", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v51, -1, -1);
    MEMORY[0x249588124](v49, -1, -1);

    v52 = v50;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v52 = (uint64_t)v32;
  }
  sub_2479D045C(v52, (uint64_t *)&unk_254450A80);
  return sub_2479D045C((uint64_t)v59, &qword_254450BC0);
}

uint64_t sub_247A0ADB4(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(uint64_t, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  double v39;
  double v40;
  double v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  double *v68;
  uint64_t v69;
  uint64_t v70;

  v63 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v66 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (double *)((char *)&v63 - v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v64 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v63 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v63 - v18;
  v20 = *(int *)(v17 + 48);
  v21 = sub_247A1AD34();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v23(v19, a2, v21);
  *(_QWORD *)&v19[v20] = a3;
  v24 = (char *)v11 + *(int *)(v7 + 48);
  v67 = v22;
  v68 = v11;
  *v11 = a4;
  v25 = *(int *)(v12 + 48);
  v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v27 = (void (*)(uint64_t, char *, uint64_t))v23;
  v26(v24, v19, v21);
  *(_QWORD *)&v24[v25] = a3;
  v28 = (uint64_t)v64;
  v29 = a3;
  v30 = (char *)(v66 + *(int *)(v7 + 48));
  v23(v30, (uint64_t)v24, v21);
  v26((char *)v28, v30, v21);
  v31 = *(int *)(v12 + 48);
  v32 = v65;
  v26(v65, (char *)v28, v21);
  *(_QWORD *)&v32[v31] = v29;
  v33 = (uint64_t)v32;
  v34 = qword_254450AE0;
  swift_retain_n();
  if (v34 != -1)
    swift_once();
  v35 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v35, (uint64_t)qword_254452068);
  v36 = *(int *)(v12 + 48);
  v27(v28, v32, v21);
  *(_QWORD *)(v28 + v36) = v29;
  sub_247A12024("fetch range", 11, 2, v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v28, v21);
  v37 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v38 = objc_msgSend(v37, sel_timeProvider);

  objc_msgSend(v38, sel_timestamp);
  v40 = v39;
  swift_unknownObjectRelease();
  v41 = v40 - a4;
  v42 = objc_msgSend((id)objc_opt_self(), sel_stringForTimeInterval_, v41);
  v67 = sub_247A1AEE4();
  v44 = v43;

  if (qword_254450AE8 != -1)
    swift_once();
  v66 = sub_247A1ADB8();
  v45 = __swift_project_value_buffer(v66, (uint64_t)qword_254452080);
  swift_bridgeObjectRetain_n();
  v46 = sub_247A1ADA0();
  v47 = sub_247A1B100();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    *(_DWORD *)v48 = 134218498;
    v64 = (char *)v45;
    v50 = v63;
    v69 = v63;
    v70 = v49;
    sub_247A1B208();
    *(_WORD *)(v48 + 12) = 2080;
    if (v50 == 1)
      v51 = 0x72656B63697473;
    else
      v51 = 0x7372656B63697473;
    if (v50 == 1)
      v52 = 0xE700000000000000;
    else
      v52 = 0xE800000000000000;
    v69 = sub_2479CCA28(v51, v52, &v70);
    sub_247A1B208();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 22) = 2080;
    swift_bridgeObjectRetain();
    v69 = sub_2479CCA28(v67, v44, &v70);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2479C5000, v46, v47, "did fetch %ld %s in %s", (uint8_t *)v48, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x249588124](v49, -1, -1);
    MEMORY[0x249588124](v48, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread) && v41 > 0.0001)
  {
    swift_bridgeObjectRetain_n();
    v53 = sub_247A1ADA0();
    v54 = sub_247A1B130();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v70 = v56;
      *(_DWORD *)v55 = 136315138;
      swift_bridgeObjectRetain();
      v69 = sub_2479CCA28(v67, v44, &v70);
      sub_247A1B208();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2479C5000, v53, v54, "An instance of StickerSequence is being iterated on the main thread, which may negatively impact the responsiveness of the UI: %s was spent performing I/O on the main thread.", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v56, -1, -1);
      MEMORY[0x249588124](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (qword_254450A98 != -1)
      swift_once();
    __swift_project_value_buffer(v66, (uint64_t)qword_254452050);
    swift_bridgeObjectRetain();
    v58 = sub_247A1ADA0();
    v59 = sub_247A1B130();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = swift_slowAlloc();
      v70 = v61;
      *(_DWORD *)v60 = 136315138;
      swift_bridgeObjectRetain();
      v69 = sub_2479CCA28(v67, v44, &v70);
      sub_247A1B208();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2479C5000, v58, v59, "An instance of StickerSequence is being iterated on the main thread, which may negatively impact the responsiveness of the UI: %s was spent performing I/O on the main thread.", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v61, -1, -1);
      MEMORY[0x249588124](v60, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v57 = v33;
  }
  else
  {
    swift_bridgeObjectRelease();
    v57 = v33;
  }
  sub_2479D045C(v57, (uint64_t *)&unk_254450A80);
  return sub_2479D045C((uint64_t)v68, &qword_254450BC0);
}

unint64_t sub_247A0B594()
{
  unint64_t result;

  result = qword_2576D2F50;
  if (!qword_2576D2F50)
  {
    result = MEMORY[0x249588058](&protocol conformance descriptor for StickerSequenceIterator, &type metadata for StickerSequenceIterator);
    atomic_store(result, (unint64_t *)&qword_2576D2F50);
  }
  return result;
}

uint64_t destroy for StickerSequence(uint64_t a1)
{
  void *v2;

  __swift_destroy_boxed_opaque_existential_0(a1);

  v2 = *(void **)(a1 + 56);
  if ((unint64_t)v2 >= 3)

  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(a1 + 112);
}

uint64_t initializeWithCopy for StickerSequence(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = v5;
  if ((unint64_t)v6 >= 3)
    v8 = v6;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v9;
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v12 = a2 + 112;
  v13 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v13;
  v14 = v13;
  v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
  swift_bridgeObjectRetain();
  v15(a1 + 112, v12, v14);
  return a1;
}

uint64_t assignWithCopy for StickerSequence(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 56);
  v8 = *(void **)(a2 + 56);
  if ((unint64_t)v7 >= 3)
  {
    if ((unint64_t)v8 >= 3)
    {
      *(_QWORD *)(a1 + 56) = v8;
      v10 = v8;

      goto LABEL_8;
    }

    v8 = *(void **)(a2 + 56);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 3)
  {
LABEL_6:
    *(_QWORD *)(a1 + 56) = v8;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 56) = v8;
  v9 = v8;
LABEL_8:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  v12 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v12;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for StickerSequence(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v6 = *(void **)(a1 + 56);
  v7 = *(_QWORD *)(a2 + 56);
  if ((unint64_t)v6 >= 3)
  {
    if (v7 >= 3)
    {
      *(_QWORD *)(a1 + 56) = v7;

      goto LABEL_6;
    }

  }
  *(_QWORD *)(a1 + 56) = v7;
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  __swift_destroy_boxed_opaque_existential_0(a1 + 112);
  v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerSequence(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerSequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerSequence()
{
  return &type metadata for StickerSequence;
}

uint64_t destroy for StickerSequenceIterator(uint64_t a1)
{
  void *v2;

  __swift_destroy_boxed_opaque_existential_0(a1);

  v2 = *(void **)(a1 + 56);
  if ((unint64_t)v2 >= 3)

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 112);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StickerSequenceIterator(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = v5;
  if ((unint64_t)v6 >= 3)
    v8 = v6;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v9;
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v12 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v12;
  v13 = v12;
  v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  swift_bridgeObjectRetain();
  v14(a1 + 112, a2 + 112, v13);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StickerSequenceIterator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 56);
  v8 = *(void **)(a2 + 56);
  if ((unint64_t)v7 >= 3)
  {
    if ((unint64_t)v8 >= 3)
    {
      *(_QWORD *)(a1 + 56) = v8;
      v10 = v8;

      goto LABEL_8;
    }

    v8 = *(void **)(a2 + 56);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 3)
  {
LABEL_6:
    *(_QWORD *)(a1 + 56) = v8;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 56) = v8;
  v9 = v8;
LABEL_8:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  v12 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v12;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for StickerSequenceIterator(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v6 = *(void **)(a1 + 56);
  v7 = *(_QWORD *)(a2 + 56);
  if ((unint64_t)v6 >= 3)
  {
    if (v7 >= 3)
    {
      *(_QWORD *)(a1 + 56) = v7;

      goto LABEL_6;
    }

  }
  *(_QWORD *)(a1 + 56) = v7;
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  __swift_destroy_boxed_opaque_existential_0(a1 + 112);
  v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerSequenceIterator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 161))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerSequenceIterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 161) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 161) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerSequenceIterator()
{
  return &type metadata for StickerSequenceIterator;
}

id ManagedSticker.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSticker.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSticker();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSticker()
{
  return objc_opt_self();
}

id ManagedSticker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSticker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t Sticker.Representation.__allocating_init(data:uti:size:role:isPreferred:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v7 = objc_allocWithZone(v3);
  sub_247A0E7F8(a1, a2, a3);
  v9 = v8;
  sub_2479D969C(a1, a2);
  return v9;
}

uint64_t Sticker.Representation.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2479D3F58(&OBJC_IVAR___STKStickerRepresentation_identifier, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_247A0C1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR___STKStickerRepresentation_data;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  sub_2479D9370(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

void sub_247A0C260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v5 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  sub_2479D969C(v6, v7);
  __asm { BR              X12 }
}

uint64_t sub_247A0C2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = BYTE6(v0);
  v3 = (_QWORD *)(v1 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_247A0C344@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_2479D9370(v4, v5);
}

void (*sub_247A0C398(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___STKStickerRepresentation_data;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_247A0C3F0;
}

void sub_247A0C3F0(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
    __asm { BR              X13 }
  free(v3);
}

uint64_t Sticker.Representation.uti.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2479D3F58(&OBJC_IVAR___STKStickerRepresentation_uti, (uint64_t (*)(_QWORD))MEMORY[0x24BEE63B8], a1);
}

uint64_t sub_247A0C538()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___STKStickerRepresentation_byteCount;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

double Sticker.Representation.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___STKStickerRepresentation_size);
}

uint64_t sub_247A0C654()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_247A0C710(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_247A0C76C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_247A0C7D4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_247A0C85C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  swift_beginAccess();
  return *v1;
}

uint64_t Sticker.Representation.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___STKStickerRepresentation_version);
}

uint64_t static Sticker.Representation.Role.default.getter()
{
  return 0;
}

uint64_t Sticker.Representation.init(data:uti:size:role:isPreferred:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  sub_247A0E7F8(a1, a2, a3);
  v6 = v5;
  sub_2479D969C(a1, a2);
  return v6;
}

id Sticker.Representation.__allocating_init(identifier:data:uti:byteCount:size:role:isPreferred:version:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13)
{
  objc_class *v13;
  char v21;
  id v22;
  id v23;

  v21 = a6 & 1;
  v22 = objc_allocWithZone(v13);
  v23 = sub_247A0EA54(a1, a2, a3, a4, a5, v21, a7, a8, a9, a10, a11, a12, a13 & 1);
  sub_2479D969C(a2, a3);
  return v23;
}

id Sticker.Representation.init(identifier:data:uti:byteCount:size:role:isPreferred:version:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13)
{
  id v15;

  v15 = sub_247A0EA54(a1, a2, a3, a4, a5, a6 & 1, a7, a8, a9, a10, a11, a12, a13 & 1);
  sub_2479D969C(a2, a3);
  return v15;
}

BOOL sub_247A0CA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v20;
  char *v21;
  _BYTE v22[24];
  uint64_t v23;

  v2 = v1;
  swift_getObjectType();
  sub_2479DFAD0(a1, (uint64_t)v22);
  if (!v23)
  {
    sub_2479D045C((uint64_t)v22, &qword_254450C30);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (*(_QWORD *)(v1 + OBJC_IVAR___STKStickerRepresentation_version) != *(_QWORD *)&v21[OBJC_IVAR___STKStickerRepresentation_version])
    goto LABEL_14;
  sub_247A1AC8C();
  sub_2479CDA10((unint64_t *)&qword_254450700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  if ((sub_247A1AEB4() & 1) == 0)
    goto LABEL_14;
  v4 = (uint64_t *)(v1 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  v6 = *v4;
  v5 = v4[1];
  v7 = (uint64_t *)&v21[OBJC_IVAR___STKStickerRepresentation_data];
  swift_beginAccess();
  v9 = *v7;
  v8 = v7[1];
  sub_2479D9370(v6, v5);
  sub_2479D9370(v9, v8);
  sub_247A026DC(v6, v5);
  v11 = v10;
  sub_2479D969C(v9, v8);
  sub_2479D969C(v6, v5);
  if ((v11 & 1) == 0
    || (sub_247A1AD04(),
        sub_2479CDA10((unint64_t *)&unk_254450720, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE63E8]), (sub_247A1AEB4() & 1) == 0)|| (v12 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_byteCount), swift_beginAccess(), v13 = *v12, v14 = &v21[OBJC_IVAR___STKStickerRepresentation_byteCount], swift_beginAccess(), v13 != *(_QWORD *)v14)|| *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size) != *(double *)&v21[OBJC_IVAR___STKStickerRepresentation_size]|| *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size + 8) != *(double *)&v21[OBJC_IVAR___STKStickerRepresentation_size+ 8])
  {
LABEL_14:

    return 0;
  }
  v15 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  v16 = *v15;
  v17 = v15[1];
  v18 = &v21[OBJC_IVAR___STKStickerRepresentation_role];
  swift_beginAccess();
  if (v16 == *(_QWORD *)v18 && v17 == *((_QWORD *)v18 + 1))
  {

    return 1;
  }
  else
  {
    v20 = sub_247A1B4E4();

    return (v20 & 1) != 0;
  }
}

uint64_t static Sticker.Representation.supportsSecureCoding.getter()
{
  return 1;
}

id Sticker.Representation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Sticker.Representation.init(coder:)(a1);
}

id Sticker.Representation.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _BYTE *v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  objc_class *v53;
  id v54;
  unsigned int v55;
  __int128 v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  objc_super v64;
  __int128 v65;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450840);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_247A1AD04();
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v54 - v12;
  v14 = sub_247A1AC8C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2479D032C(0, &qword_254450BE0);
  v18 = v1;
  v19 = sub_247A1B190();
  if (!v19)
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    goto LABEL_13;
  }
  v20 = (void *)v19;
  v60 = v5;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v21(v11, 1, 1, v14);
  sub_2479CDA10((unint64_t *)&unk_2576D2D70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB0]);
  sub_247A1B3D0();

  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v22(v11, 1, v14) == 1)
  {
LABEL_13:
    v21(v13, 1, 1, v14);
    goto LABEL_14;
  }
  v23 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v23(v13, v11, v14);
  v21(v13, 0, 1, v14);
  if (v22(v13, 1, v14) != 1)
  {
    v23(v17, v13, v14);
    sub_2479D032C(0, (unint64_t *)&unk_2576D2D80);
    v24 = sub_247A1B190();
    if (v24)
    {
      v25 = (void *)v24;
      v65 = xmmword_247A1D600;
      sub_247A1ABC0();

      v26 = *((_QWORD *)&v65 + 1);
      if (*((_QWORD *)&v65 + 1) >> 60 != 15)
      {
        v27 = v65;
        sub_2479D032C(0, (unint64_t *)&qword_2576D2F60);
        v28 = sub_247A1B190();
        if (v28)
        {
          v29 = (void *)v28;
          v65 = 0uLL;
          sub_247A1AED8();

          if (*((_QWORD *)&v65 + 1))
          {
            v59 = v65;
            v30 = (void *)sub_247A1AEC0();
            v58 = objc_msgSend(a1, sel_decodeIntegerForKey_, v30);

            v31 = (void *)sub_247A1AEC0();
            objc_msgSend(a1, sel_decodeSizeForKey_, v31);
            v33 = v32;
            v35 = v34;

            v36 = sub_247A1B190();
            if (v36)
            {
              v37 = (void *)v36;
              v65 = 0uLL;
              sub_247A1AED8();

              if (*((_QWORD *)&v65 + 1))
              {
                v57 = v27;
                v56 = v65;
                v38 = (void *)sub_247A1AEC0();
                v55 = objc_msgSend(a1, sel_decodeBoolForKey_, v38);

                v39 = (void *)sub_247A1AEC0();
                v54 = objc_msgSend(a1, sel_decodeIntegerForKey_, v39);

                v40 = (uint64_t)v60;
                sub_247A1AD10();
                v41 = v62;
                v42 = v63;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v40, 1, v63) != 1)
                {
                  v47 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
                  v48 = v61;
                  v47(v61, v40, v42);
                  v23(&v18[OBJC_IVAR___STKStickerRepresentation_identifier], v17, v14);
                  v49 = &v18[OBJC_IVAR___STKStickerRepresentation_data];
                  *v49 = v57;
                  v49[1] = v26;
                  v47(&v18[OBJC_IVAR___STKStickerRepresentation_uti], (uint64_t)v48, v42);
                  *(_QWORD *)&v18[OBJC_IVAR___STKStickerRepresentation_byteCount] = v58;
                  v50 = &v18[OBJC_IVAR___STKStickerRepresentation_size];
                  *v50 = v33;
                  v50[1] = v35;
                  v51 = &v18[OBJC_IVAR___STKStickerRepresentation_role];
                  v52 = *((_QWORD *)&v56 + 1);
                  *v51 = v56;
                  v51[1] = v52;
                  v18[OBJC_IVAR___STKStickerRepresentation_isPreferred] = v55;
                  *(_QWORD *)&v18[OBJC_IVAR___STKStickerRepresentation_version] = v54;

                  v53 = (objc_class *)type metadata accessor for Sticker.Representation();
                  v64.receiver = v18;
                  v64.super_class = v53;
                  v45 = objc_msgSendSuper2(&v64, sel_init);

                  return v45;
                }
                sub_2479D96E0(v57, v26);

                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
                v43 = (uint64_t *)&unk_254450840;
                v44 = v40;
                goto LABEL_15;
              }
            }
            sub_2479D96E0(v27, v26);

            swift_bridgeObjectRelease();
LABEL_20:
            (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
            goto LABEL_16;
          }
        }
        sub_2479D96E0(v27, v26);
      }
    }

    goto LABEL_20;
  }
LABEL_14:

  v43 = &qword_254450A70;
  v44 = (uint64_t)v13;
LABEL_15:
  sub_2479D045C(v44, v43);
LABEL_16:
  type metadata accessor for Sticker.Representation();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_247A0D4F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;

  v2 = v1;
  v4 = (void *)sub_247A1AC50();
  v5 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  v8 = *v6;
  v7 = v6[1];
  sub_2479D9370(v8, v7);
  v9 = (void *)sub_247A1ABB4();
  sub_2479D969C(v8, v7);
  v10 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  sub_247A1ACEC();
  v11 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  v13 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  swift_beginAccess();
  v14 = *v13;
  v15 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v14, v15);

  v16 = *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size);
  v17 = *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size + 8);
  v18 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeSize_forKey_, v18, v16, v17);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v19 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v19, v20);

  v21 = (unsigned __int8 *)(v2 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  swift_beginAccess();
  v22 = *v21;
  v23 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeBool_forKey_, v22, v23);

  v24 = *(_QWORD *)(v2 + OBJC_IVAR___STKStickerRepresentation_version);
  v25 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v24, v25);

}

uint64_t sub_247A0D8B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  id v4;

  v1 = v0;
  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  sub_247A1AC8C();
  sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  v2 = (void *)objc_opt_self();
  v3 = (_QWORD *)(v1 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  swift_beginAccess();
  v4 = objc_msgSend(v2, sel_stringFromByteCount_countStyle_, *v3, 0);
  sub_247A1AEE4();

  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  sub_247A1AD04();
  sub_2479CDA10(&qword_2576D2F70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE6408]);
  sub_247A1B4CC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  sub_247A1B0AC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  sub_247A1B0AC();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  return 60;
}

unint64_t static Sticker.Representation.Role.original.getter()
{
  return 0xD000000000000020;
}

unint64_t static Sticker.Representation.Role.stillVariant.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static Sticker.Representation.Role.animatedVariant.getter()
{
  return 0xD000000000000020;
}

unint64_t static Sticker.Representation.Role.keyboardPreview.getter()
{
  return 0xD000000000000020;
}

id Sticker.Representation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Sticker.Representation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_247A0DBDC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_247A0DC10 + 4 * byte_247A1E290[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_247A0DC10()
{
  return 1635017060;
}

uint64_t sub_247A0DC20()
{
  return 6911093;
}

uint64_t sub_247A0DC30()
{
  return 0x6E756F4365747962;
}

uint64_t sub_247A0DC4C()
{
  return 1702521203;
}

uint64_t sub_247A0DC5C()
{
  return 1701605234;
}

uint64_t sub_247A0DC6C()
{
  return 0x7265666572507369;
}

uint64_t sub_247A0DC8C()
{
  return 0x6E6F6973726576;
}

uint64_t sub_247A0DCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_247A0F39C(a1, a2);
  *a3 = result;
  return result;
}

void sub_247A0DCC8(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_247A0DCD4()
{
  sub_247A0ECF8();
  return sub_247A1B5A4();
}

uint64_t sub_247A0DCFC()
{
  sub_247A0ECF8();
  return sub_247A1B5B0();
}

id Sticker.Representation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Sticker.Representation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_247A0DDE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 *v9;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450978);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247A0ECF8();
  sub_247A1B598();
  v15 = 0;
  sub_247A1AC8C();
  sub_2479CDA10(&qword_254450828, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_247A1B49C();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + OBJC_IVAR___STKStickerRepresentation_data);
    swift_beginAccess();
    v14 = *v9;
    LOBYTE(v13) = 1;
    sub_2479DBC00();
    sub_247A1B49C();
    LOBYTE(v14) = 2;
    sub_247A1AD04();
    sub_2479CDA10(&qword_254450838, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE63D8]);
    sub_247A1B49C();
    swift_beginAccess();
    LOBYTE(v13) = 3;
    sub_247A1B490();
    v13 = *(_OWORD *)(v3 + OBJC_IVAR___STKStickerRepresentation_size);
    v12 = 4;
    type metadata accessor for CGSize(0);
    sub_2479CDA10(&qword_254450950, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
    sub_247A1B49C();
    swift_beginAccess();
    v12 = 5;
    swift_bridgeObjectRetain();
    sub_247A1B46C();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    HIBYTE(v11) = 6;
    sub_247A1B478();
    HIBYTE(v11) = 7;
    sub_247A1B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id Sticker.Representation.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Sticker.Representation.init(from:)(a1);
}

id Sticker.Representation.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  _BYTE *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  char *v33;
  objc_super v34;
  __int128 v35;
  char v36;

  v2 = v1;
  v4 = sub_247A1AD04();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_247A1AC8C();
  v30 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507C8);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_247A0ECF8();
  v32 = v2;
  v13 = v33;
  sub_247A1B58C();
  if (v13)
  {
    v16 = v32;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);

    type metadata accessor for Sticker.Representation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v33 = v6;
    v14 = v9;
    LOBYTE(v35) = 0;
    sub_2479CDA10((unint64_t *)&unk_254450710, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v15 = v26;
    sub_247A1B448();
    v18 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))((uint64_t)v32 + OBJC_IVAR___STKStickerRepresentation_identifier, v15, v7);
    v36 = 1;
    sub_2479DAAFC();
    sub_247A1B448();
    *(_OWORD *)&v18[OBJC_IVAR___STKStickerRepresentation_data] = v35;
    LOBYTE(v35) = 2;
    sub_2479CDA10(&qword_254450730, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE63F0]);
    v19 = v33;
    v20 = v29;
    sub_247A1B448();
    (*(void (**)(_BYTE *, char *, uint64_t))(v28 + 32))(&v18[OBJC_IVAR___STKStickerRepresentation_uti], v19, v20);
    LOBYTE(v35) = 3;
    *(_QWORD *)&v18[OBJC_IVAR___STKStickerRepresentation_byteCount] = sub_247A1B43C();
    type metadata accessor for CGSize(0);
    v36 = 4;
    sub_2479CDA10(&qword_2544507B8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
    sub_247A1B448();
    v21 = (uint64_t)v31;
    *(_OWORD *)&v18[OBJC_IVAR___STKStickerRepresentation_size] = v35;
    LOBYTE(v35) = 5;
    v22 = sub_247A1B418();
    v23 = (uint64_t *)&v18[OBJC_IVAR___STKStickerRepresentation_role];
    *v23 = v22;
    v23[1] = v24;
    LOBYTE(v35) = 6;
    v18[OBJC_IVAR___STKStickerRepresentation_isPreferred] = sub_247A1B424() & 1;
    LOBYTE(v35) = 7;
    *(_QWORD *)&v18[OBJC_IVAR___STKStickerRepresentation_version] = sub_247A1B43C();

    v25 = (objc_class *)type metadata accessor for Sticker.Representation();
    v34.receiver = v18;
    v34.super_class = v25;
    v16 = objc_msgSendSuper2(&v34, sel_init);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v27);
    __swift_destroy_boxed_opaque_existential_0(v21);
  }
  return v16;
}

id sub_247A0E784@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for Sticker.Representation());
  result = Sticker.Representation.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_247A0E7D8(_QWORD *a1)
{
  return sub_247A0DDE8(a1);
}

void sub_247A0E7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v7 = sub_247A1AC8C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3;
  sub_247A1AC80();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v11[OBJC_IVAR___STKStickerRepresentation_identifier], v10, v7);
  v12 = &v11[OBJC_IVAR___STKStickerRepresentation_data];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  v13 = &v11[OBJC_IVAR___STKStickerRepresentation_uti];
  v14 = sub_247A1AD04();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a3, v14);
  __asm { BR              X10 }
}

id sub_247A0E900()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  *(_QWORD *)&v1[OBJC_IVAR___STKStickerRepresentation_byteCount] = BYTE6(v6);
  v11 = &v1[OBJC_IVAR___STKStickerRepresentation_size];
  *v11 = v10;
  v11[1] = v9;
  v12 = &v1[OBJC_IVAR___STKStickerRepresentation_role];
  *v12 = v5;
  v12[1] = v4;
  v1[OBJC_IVAR___STKStickerRepresentation_isPreferred] = v3 & 1;
  if (qword_254450870 != -1)
    swift_once();
  v13 = qword_254450868 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
  swift_beginAccess();
  v14 = *(_QWORD *)v13;
  if (*(_BYTE *)(v13 + 8))
    v14 = 1;
  *(_QWORD *)&v1[OBJC_IVAR___STKStickerRepresentation_version] = v14;

  v15 = type metadata accessor for Sticker.Representation();
  *(_QWORD *)(v8 - 136) = v1;
  *(_QWORD *)(v8 - 128) = v15;
  v16 = objc_msgSendSuper2((objc_super *)(v8 - 136), sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v2);
  return v16;
}

id sub_247A0EA54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13)
{
  _BYTE *v13;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v32;
  id v33;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;

  v22 = &v13[OBJC_IVAR___STKStickerRepresentation_identifier];
  v23 = sub_247A1AC8C();
  v37 = *(_QWORD *)(v23 - 8);
  v38 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v22, a1, v23);
  v24 = (uint64_t *)&v13[OBJC_IVAR___STKStickerRepresentation_data];
  *v24 = a2;
  v24[1] = a3;
  v25 = &v13[OBJC_IVAR___STKStickerRepresentation_uti];
  v26 = sub_247A1AD04();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, a4, v26);
  if ((a6 & 1) != 0)
    __asm { BR              X10 }
  *(_QWORD *)&v13[OBJC_IVAR___STKStickerRepresentation_byteCount] = a5;
  v28 = (double *)&v13[OBJC_IVAR___STKStickerRepresentation_size];
  *v28 = a9;
  v28[1] = a10;
  v29 = &v13[OBJC_IVAR___STKStickerRepresentation_role];
  *v29 = a7;
  v29[1] = a8;
  v13[OBJC_IVAR___STKStickerRepresentation_isPreferred] = a11 & 1;
  v30 = v13;
  sub_2479D9370(a2, a3);
  if ((a13 & 1) != 0)
  {
    if (qword_254450870 != -1)
      swift_once();
    v32 = qword_254450868 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
    swift_beginAccess();
    a12 = *(_QWORD *)v32;
    if (*(_BYTE *)(v32 + 8))
      a12 = 1;
  }
  *(_QWORD *)&v30[OBJC_IVAR___STKStickerRepresentation_version] = a12;

  v39.receiver = v30;
  v39.super_class = (Class)type metadata accessor for Sticker.Representation();
  v33 = objc_msgSendSuper2(&v39, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a4, v26);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v23);
  return v33;
}

uint64_t type metadata accessor for Sticker.Representation()
{
  uint64_t result;

  result = qword_254450D08;
  if (!qword_254450D08)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_247A0ECF8()
{
  unint64_t result;

  result = qword_254450B60;
  if (!qword_254450B60)
  {
    result = MEMORY[0x249588058](&unk_247A1E440, &_s14RepresentationC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B60);
  }
  return result;
}

void sub_247A0ED40(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_2479D9370(*a1, v2);
  sub_247A0C260(v1, v2);
}

uint64_t sub_247A0ED80@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_247A0EDD0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_247A0EE1C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247A0EE74@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_247A0EEC4(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_247A0EF10()
{
  return type metadata accessor for Sticker.Representation();
}

uint64_t sub_247A0EF18()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_247A1AC8C();
  if (v1 <= 0x3F)
  {
    result = sub_247A1AD04();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Sticker.Representation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Sticker.Representation.data.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of Sticker.Representation.data.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of Sticker.Representation.data.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of Sticker.Representation.byteCount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of Sticker.Representation.role.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of Sticker.Representation.role.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of Sticker.Representation.role.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of Sticker.Representation.isPreferred.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(data:uti:size:role:isPreferred:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(identifier:data:uti:byteCount:size:role:isPreferred:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6 + 248))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of Sticker.Representation.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of Sticker.Representation.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

ValueMetadata *type metadata accessor for Sticker.Representation.Role()
{
  return &type metadata for Sticker.Representation.Role;
}

uint64_t _s14RepresentationC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14RepresentationC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_247A0F244 + 4 * byte_247A1E29D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_247A0F278 + 4 * byte_247A1E298[v4]))();
}

uint64_t sub_247A0F278(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A0F280(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247A0F288);
  return result;
}

uint64_t sub_247A0F294(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247A0F29CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_247A0F2A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A0F2A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14RepresentationC10CodingKeysOMa()
{
  return &_s14RepresentationC10CodingKeysON;
}

unint64_t sub_247A0F2C8()
{
  unint64_t result;

  result = qword_2576D2F78;
  if (!qword_2576D2F78)
  {
    result = MEMORY[0x249588058](&unk_247A1E418, &_s14RepresentationC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2576D2F78);
  }
  return result;
}

unint64_t sub_247A0F310()
{
  unint64_t result;

  result = qword_254450B70;
  if (!qword_254450B70)
  {
    result = MEMORY[0x249588058](&unk_247A1E388, &_s14RepresentationC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B70);
  }
  return result;
}

unint64_t sub_247A0F358()
{
  unint64_t result;

  result = qword_254450B68;
  if (!qword_254450B68)
  {
    result = MEMORY[0x249588058](&unk_247A1E3B0, &_s14RepresentationC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B68);
  }
  return result;
}

uint64_t sub_247A0F39C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6911093 && a2 == 0xE300000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E756F4365747962 && a2 == 0xE900000000000074 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7265666572507369 && a2 == 0xEB00000000646572 || (sub_247A1B4E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_247A0F6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AD58();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_247A0F710(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_247A1AD58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_247A0F744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AD58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_247A0F788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AD58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_247A0F7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AD58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_247A0F810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AD58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_247A0F854()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_247A0F860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AD58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_247A0F89C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_247A0F8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_247A1AD58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StickerSignposter()
{
  uint64_t result;

  result = qword_254450AC8;
  if (!qword_254450AC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_247A0F924()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1AD58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_247A0F98C(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  NSObject *v15;
  uint64_t result;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v20;
  _BYTE v21[4];
  int v22;
  uint64_t v23;
  char *v24;
  char v25;

  v24 = (char *)a2;
  v7 = sub_247A1AD34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_247A1AD58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_247A1AD4C();
  sub_247A1AD1C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, v4, v11);
  v15 = sub_247A1AD4C();
  v22 = sub_247A1B154();
  result = sub_247A1B1E4();
  v23 = v11;
  if ((result & 1) == 0)
    goto LABEL_5;
  if ((a4 & 1) == 0)
  {
    if (!v24)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
LABEL_11:
      sub_247A1AD88();
      swift_allocObject();
      v20 = sub_247A1AD7C();
      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v23);
      return v20;
    }
LABEL_10:
    v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
    v17(v10, a1, v7);
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    v19 = sub_247A1AD28();
    _os_signpost_emit_with_name_impl(&dword_2479C5000, v15, (os_signpost_type_t)v22, v19, v24, "", v18, 2u);
    MEMORY[0x249588124](v18, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    v17(v10, a1, v7);
    goto LABEL_11;
  }
  if ((unint64_t)v24 >> 32)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v24 >> 11 != 27)
  {
    if (v24 >> 16 <= 0x10)
    {
      v24 = &v25;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_247A0FBB0(char *a1, char *a2)
{
  return sub_247A0FBD8(a1, a2, "BEGIN count(for:)", "count stickers");
}

uint64_t sub_247A0FBC4(char *a1, char *a2)
{
  return sub_247A0FBD8(a1, a2, "BEGIN stickers(for:)", "fetch stickers");
}

uint64_t sub_247A0FBD8(char *a1, char *a2, const char *a3, const char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  const char *v23;
  char *v24;
  char *v25;
  uint8_t *v26;
  uint8_t *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v36;
  int v37;
  __int128 v38;
  __int128 v39;
  char v40[8];
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  char v46;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - v12;
  v14 = *a2;
  v15 = *(_OWORD *)(a2 + 8);
  v16 = *((_QWORD *)a2 + 3);
  v38 = *((_OWORD *)a2 + 2);
  v39 = v15;
  v37 = a2[48];
  v36 = *((_QWORD *)a2 + 7);
  v17 = a2[64];
  if (qword_254450A98 != -1)
    swift_once();
  v18 = sub_247A1ADB8();
  __swift_project_value_buffer(v18, (uint64_t)qword_254452050);
  v19 = sub_247A1ADA0();
  v20 = sub_247A1B100();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = a3;
    v23 = a4;
    v24 = v11;
    v25 = a1;
    v26 = v21;
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_2479C5000, v19, v20, v22, v21, 2u);
    v27 = v26;
    a1 = v25;
    v11 = v24;
    a4 = v23;
    MEMORY[0x249588124](v27, -1, -1);
  }

  v40[0] = v14;
  v41 = v39;
  v42 = v16;
  v43 = v38;
  v44 = v37;
  v45 = v36;
  v46 = v17;
  sub_247A12944((uint64_t)v40);
  v28 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v29 = objc_msgSend(v28, sel_timeProvider);

  objc_msgSend(v29, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450A90 != -1)
    swift_once();
  v30 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v30, (uint64_t)qword_254452038);
  v32 = sub_247A0F98C((uint64_t)v13, a4, v31, 2);
  v33 = sub_247A1AD34();
  v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
  v34(v11, v13, v33);
  v34(a1, v11, v33);
  return v32;
}

uint64_t sub_247A0FE8C(char *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  NSObject **v34;
  uint64_t i;
  objc_class *v36;
  objc_class *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53[3];

  v51 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v49 = (uint64_t)v48 - v6;
  if (qword_254450A98 != -1)
    swift_once();
  v7 = sub_247A1ADB8();
  __swift_project_value_buffer(v7, (uint64_t)qword_254452050);
  v8 = sub_247A1ADA0();
  v9 = sub_247A1B100();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_2479C5000, v8, v9, "BEGIN addSticker(_:)", v10, 2u);
    MEMORY[0x249588124](v10, -1, -1);
  }

  v11 = a2;
  v12 = sub_247A1ADA0();
  v13 = sub_247A1B100();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    v53[0] = v15;
    sub_247A1AC8C();
    sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v16 = sub_247A1B4CC();
    v52 = sub_2479CCA28(v16, v17, v53);
    sub_247A1B208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v12, v13, " - identifier: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v15, -1, -1);
    MEMORY[0x249588124](v14, -1, -1);

  }
  else
  {

  }
  v18 = (char *)v11;
  v19 = sub_247A1ADA0();
  v20 = sub_247A1B100();
  if (os_log_type_enabled(v19, v20))
  {
    v12 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v53[0] = v21;
    LODWORD(v12->isa) = 136315138;
    v48[1] = (char *)&v12->isa + 4;
    v22 = (void *)objc_opt_self();
    v23 = &v18[OBJC_IVAR___STKSticker_byteCount];
    swift_beginAccess();
    v24 = objc_msgSend(v22, sel_stringFromByteCount_countStyle_, *(_QWORD *)v23, 0);
    v25 = sub_247A1AEE4();
    v27 = v26;

    v52 = sub_2479CCA28(v25, v27, v53);
    sub_247A1B208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v19, v20, " - byteCount: %s", (uint8_t *)v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v21, -1, -1);
    MEMORY[0x249588124](v12, -1, -1);

  }
  else
  {

  }
  v28 = v18;
  v29 = sub_247A1ADA0();
  LOBYTE(v30) = sub_247A1B100();
  if (!os_log_type_enabled((os_log_t)v29, (os_log_type_t)v30))
  {

    v29 = (unint64_t)v28;
    goto LABEL_16;
  }
  v12 = swift_slowAlloc();
  LODWORD(v12->isa) = 134217984;
  v31 = (unint64_t *)((char *)v28 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  v32 = *v31;
  if (v32 >> 62)
    goto LABEL_29;
  v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v53[0] = v33;
    sub_247A1B208();

    _os_log_impl(&dword_2479C5000, (os_log_t)v29, (os_log_type_t)v30, " - representations (%ld):", (uint8_t *)v12, 0xCu);
    MEMORY[0x249588124](v12, -1, -1);
LABEL_16:

    v34 = (NSObject **)((char *)v28 + OBJC_IVAR___STKSticker_representations);
    swift_beginAccess();
    v29 = (unint64_t)*v34;
    if ((unint64_t)*v34 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v30 = sub_247A1B37C();
      if (!v30)
        goto LABEL_25;
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v30)
        goto LABEL_25;
    }
    if (v30 >= 1)
      break;
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    v33 = sub_247A1B37C();
    swift_bridgeObjectRelease();
  }
  for (i = 0; i != v30; ++i)
  {
    if ((v29 & 0xC000000000000001) != 0)
      v36 = (objc_class *)MEMORY[0x249587908](i, v29);
    else
      v36 = (objc_class *)*(id *)(v29 + 8 * i + 32);
    v37 = v36;
    sub_247A13AB4(i, v36);

  }
LABEL_25:
  swift_bridgeObjectRelease_n();
  v38 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v39 = objc_msgSend(v38, sel_timeProvider);

  objc_msgSend(v39, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450A90 != -1)
    swift_once();
  v40 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v40, (uint64_t)qword_254452038);
  v41 = v49;
  v43 = sub_247A0F98C(v49, "add sticker", v42, 2);
  v44 = sub_247A1AD34();
  v45 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32);
  v46 = v50;
  v45(v50, v41, v44);
  v45(v51, (uint64_t)v46, v44);
  return v43;
}

uint64_t sub_247A1059C(char *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  NSObject *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t i;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  __int128 v71;
  unint64_t v72;
  uint64_t v73;

  v69 = a2;
  v64 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v63 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v62 = (uint64_t)&v61 - v5;
  if (qword_254450A98 != -1)
    goto LABEL_43;
  while (1)
  {
    v6 = sub_247A1ADB8();
    __swift_project_value_buffer(v6, (uint64_t)qword_254452050);
    v7 = sub_247A1ADA0();
    v8 = sub_247A1B100();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_2479C5000, v7, v8, "BEGIN addSticker(_:)", v9, 2u);
      MEMORY[0x249588124](v9, -1, -1);
    }

    v10 = v69;
    if (!(v69 >> 62))
    {
      v11 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11)
        break;
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    v11 = sub_247A1B37C();
    if (!v11)
      break;
LABEL_6:
    v13 = v10;
    v14 = 0;
    v72 = v13 & 0xC000000000000001;
    v66 = v13 & 0xFFFFFFFFFFFFFF8;
    v65 = v13 + 32;
    *(_QWORD *)&v12 = 136315138;
    v71 = v12;
    v68 = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v12 = 134217984;
    v67 = v12;
    v70 = v11;
    while (1)
    {
      if (v72)
      {
        v15 = (id)MEMORY[0x249587908](v14, v69);
      }
      else
      {
        if (v14 >= *(_QWORD *)(v66 + 16))
          goto LABEL_42;
        v15 = *(id *)(v65 + 8 * v14);
      }
      v16 = v15;
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if (v14)
      {
        v18 = sub_247A1ADA0();
        v19 = sub_247A1B100();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_2479C5000, v18, v19, " ----- Next sticker:", v20, 2u);
          MEMORY[0x249588124](v20, -1, -1);
        }

      }
      v21 = v16;
      v22 = sub_247A1ADA0();
      v23 = sub_247A1B100();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v73 = v25;
        *(_DWORD *)v24 = v71;
        sub_247A1AC8C();
        sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v26 = sub_247A1B4CC();
        *(_QWORD *)(v24 + 4) = sub_2479CCA28(v26, v27, &v73);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2479C5000, v22, v23, " - identifier: %s", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x249588124](v25, -1, -1);
        MEMORY[0x249588124](v24, -1, -1);

      }
      else
      {

      }
      v28 = (char *)v21;
      v29 = sub_247A1ADA0();
      v30 = sub_247A1B100();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        v73 = v32;
        *(_DWORD *)v31 = v71;
        v33 = (void *)objc_opt_self();
        v34 = &v28[OBJC_IVAR___STKSticker_byteCount];
        swift_beginAccess();
        v35 = objc_msgSend(v33, sel_stringFromByteCount_countStyle_, *(_QWORD *)v34, 0);
        v36 = sub_247A1AEE4();
        v38 = v37;

        *(_QWORD *)(v31 + 4) = sub_2479CCA28(v36, v38, &v73);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2479C5000, v29, v30, " - byteCount: %s", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x249588124](v32, -1, -1);
        MEMORY[0x249588124](v31, -1, -1);

      }
      else
      {

      }
      v39 = v28;
      v40 = sub_247A1ADA0();
      v41 = sub_247A1B100();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = swift_slowAlloc();
        *(_DWORD *)v42 = v67;
        v43 = (Class *)((char *)&v39->isa + OBJC_IVAR___STKSticker_representations);
        swift_beginAccess();
        if (*v43 >> 62)
        {
          swift_bridgeObjectRetain();
          v44 = sub_247A1B37C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v44 = *(_QWORD *)((*v43 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        *(_QWORD *)(v42 + 4) = v44;

        _os_log_impl(&dword_2479C5000, v40, v41, " - representations (%ld):", (uint8_t *)v42, 0xCu);
        MEMORY[0x249588124](v42, -1, -1);
      }
      else
      {

        v40 = v39;
      }

      v45 = (uint64_t *)((char *)v39 + OBJC_IVAR___STKSticker_representations);
      swift_beginAccess();
      v46 = *v45;
      if ((unint64_t)*v45 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v47 = sub_247A1B37C();
        if (!v47)
          goto LABEL_7;
      }
      else
      {
        v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v47)
          goto LABEL_7;
      }
      if (v47 < 1)
        goto LABEL_41;
      for (i = 0; i != v47; ++i)
      {
        if ((v46 & 0xC000000000000001) != 0)
          v49 = (id)MEMORY[0x249587908](i, v46);
        else
          v49 = *(id *)(v46 + 8 * i + 32);
        v50 = v49;
        sub_247A13AB4(i, v49);

      }
LABEL_7:

      swift_bridgeObjectRelease_n();
      v14 = v17;
      if (v17 == v70)
        goto LABEL_45;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    swift_once();
  }
LABEL_45:
  swift_bridgeObjectRelease();
  v51 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v52 = objc_msgSend(v51, sel_timeProvider);

  objc_msgSend(v52, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450A90 != -1)
    swift_once();
  v53 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v53, (uint64_t)qword_254452038);
  v54 = v62;
  v56 = sub_247A0F98C(v62, "add stickers", v55, 2);
  v57 = sub_247A1AD34();
  v58 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 32);
  v59 = v63;
  v58(v63, v54, v57);
  v58(v64, (uint64_t)v59, v57);
  return v56;
}

uint64_t sub_247A10DDC(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  char *v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  __int128 v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  char *v54;
  uint64_t v55;
  void (*v56)(_QWORD, _QWORD, _QWORD);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v51 = a1;
  v3 = sub_247A1AC8C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)v48 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (uint64_t)v48 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254450A98 != -1)
    swift_once();
  v16 = sub_247A1ADB8();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_254452050);
  swift_bridgeObjectRetain();
  v59 = v17;
  v18 = sub_247A1ADA0();
  v19 = sub_247A1B100();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = v15;
    v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v21 = 134217984;
    v60 = *(_QWORD *)(a2 + 16);
    sub_247A1B208();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v18, v19, "BEGIN removeStickers(identifiers:) (%ld)", v21, 0xCu);
    v22 = v21;
    v15 = v20;
    MEMORY[0x249588124](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v23 = *(_QWORD *)(a2 + 16);
  v48[1] = a2;
  if (v23)
  {
    v24 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v57 = *(_QWORD *)(v4 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v26 = 136315138;
    v53 = v26;
    v52 = MEMORY[0x24BEE4AD8] + 8;
    v27 = v54;
    v55 = v4;
    v56 = v25;
    v58 = v15;
    while (1)
    {
      v25(v15, v24, v3);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v29(v15, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v3) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v27, v15, v3);
      v25(v7, v27, v3);
      v30 = sub_247A1ADA0();
      v31 = sub_247A1B100();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v60 = v33;
        *(_DWORD *)v32 = v53;
        sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v34 = sub_247A1B4CC();
        *(_QWORD *)(v32 + 4) = sub_2479CCA28(v34, v35, &v60);
        swift_bridgeObjectRelease();
        v28 = *(void (**)(char *, uint64_t))(v55 + 8);
        v28(v7, v3);
        _os_log_impl(&dword_2479C5000, v30, v31, " - identifier: %s", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        v36 = v33;
        v4 = v55;
        MEMORY[0x249588124](v36, -1, -1);
        v37 = v32;
        v27 = v54;
        MEMORY[0x249588124](v37, -1, -1);
      }
      else
      {
        v28 = *(void (**)(char *, uint64_t))(v4 + 8);
        v28(v7, v3);
      }

      v28(v27, v3);
      v15 = v58;
      v24 += v57;
      --v23;
      v25 = v56;
      if (!v23)
        goto LABEL_14;
    }
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
LABEL_14:
    v29(v15, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  v38 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v39 = objc_msgSend(v38, sel_timeProvider);

  objc_msgSend(v39, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450A90 != -1)
    swift_once();
  v40 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v40, (uint64_t)qword_254452038);
  v41 = v49;
  v43 = sub_247A0F98C(v49, "remove stickers", v42, 2);
  v44 = sub_247A1AD34();
  v45 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32);
  v46 = v50;
  v45(v50, v41, v44);
  v45(v51, (uint64_t)v46, v44);
  return v43;
}

uint64_t sub_247A1133C(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - v8;
  if (qword_254450A98 != -1)
    swift_once();
  v10 = sub_247A1ADB8();
  __swift_project_value_buffer(v10, (uint64_t)qword_254452050);
  v11 = sub_247A1ADA0();
  v12 = sub_247A1B100();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_2479C5000, v11, v12, "BEGIN updateSticker(_:)", v13, 2u);
    MEMORY[0x249588124](v13, -1, -1);
  }

  v14 = a2;
  v15 = sub_247A1ADA0();
  v16 = sub_247A1B100();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v32 = a1;
    v19 = v18;
    v31 = v9;
    *(_DWORD *)v17 = 136315138;
    v34 = v18;
    sub_247A1AC8C();
    sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_247A1B4CC();
    v33 = sub_2479CCA28(v20, v21, &v34);
    v9 = v31;
    sub_247A1B208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v15, v16, " - identifier: %s", v17, 0xCu);
    swift_arrayDestroy();
    v22 = v19;
    a1 = v32;
    MEMORY[0x249588124](v22, -1, -1);
    MEMORY[0x249588124](v17, -1, -1);

  }
  else
  {

  }
  v23 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v24 = objc_msgSend(v23, sel_timeProvider);

  objc_msgSend(v24, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450A90 != -1)
    swift_once();
  v25 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v25, (uint64_t)qword_254452038);
  v27 = sub_247A0F98C((uint64_t)v9, "update sticker", v26, 2);
  v28 = sub_247A1AD34();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
  v29(v7, v9, v28);
  v29(a1, v7, v28);
  return v27;
}

uint64_t sub_247A116E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - v10;
  if (qword_254450A98 != -1)
    swift_once();
  v12 = sub_247A1ADB8();
  __swift_project_value_buffer(v12, (uint64_t)qword_254452050);
  v13 = sub_247A1ADA0();
  v14 = sub_247A1B100();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    *(_DWORD *)v15 = 134218240;
    v25 = a2;
    sub_247A1B208();
    *(_WORD *)(v15 + 12) = 2048;
    v25 = a3;
    sub_247A1B208();
    _os_log_impl(&dword_2479C5000, v13, v14, "BEGIN moveSticker(at:to:) (%ld --> %ld", (uint8_t *)v15, 0x16u);
    MEMORY[0x249588124](v15, -1, -1);
  }

  v16 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v17 = objc_msgSend(v16, sel_timeProvider);

  objc_msgSend(v17, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450A90 != -1)
    swift_once();
  v18 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v18, (uint64_t)qword_254452038);
  v20 = sub_247A0F98C((uint64_t)v11, "move sticker", v19, 2);
  v21 = sub_247A1AD34();
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v9, v11, v21);
  v22(a1, v9, v21);
  return v20;
}

uint64_t sub_247A1196C(const char *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_signpost_type_t v21;
  uint64_t result;
  char *v23;
  uint8_t *v24;
  os_signpost_id_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  char *v30;
  char v31;

  v6 = v5;
  v29 = a3;
  v30 = (char *)a1;
  v9 = sub_247A1AD34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v27 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_247A1AD58();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v10;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v18, a4, v9);
  *(_QWORD *)&v18[*(int *)(v16 + 48)] = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, v12);
  swift_retain();
  v20 = sub_247A1AD4C();
  v21 = sub_247A1B160();
  result = sub_247A1B1E4();
  if ((result & 1) == 0)
    goto LABEL_5;
  if ((v29 & 1) == 0)
  {
    if (!v30)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return sub_2479D045C((uint64_t)v18, (uint64_t *)&unk_254450A80);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v30 >> 32)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v30 >> 11 == 27)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v30 >> 16 > 0x10)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v30 = &v31;
LABEL_10:
  v23 = v27;
  v19(v27, (uint64_t)v18, v9);
  v24 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v24 = 0;
  v25 = sub_247A1AD28();
  _os_signpost_emit_with_name_impl(&dword_2479C5000, v20, v21, v25, v30, "", v24, 2u);
  MEMORY[0x249588124](v24, -1, -1);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_2479D045C((uint64_t)v18, (uint64_t *)&unk_254450A80);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v23, v9);
}

uint64_t sub_247A11BE0(char *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (uint64_t)&v33 - v6;
  if (qword_254450A98 != -1)
    swift_once();
  v7 = sub_247A1ADB8();
  __swift_project_value_buffer(v7, (uint64_t)qword_254452050);
  v8 = sub_247A1ADA0();
  v9 = sub_247A1B100();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_2479C5000, v8, v9, "BEGIN touchStickers(_:)", v10, 2u);
    MEMORY[0x249588124](v10, -1, -1);
  }

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_247A1B37C();
    v11 = result;
    if (!result)
      goto LABEL_17;
  }
  else
  {
    v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v11)
      goto LABEL_17;
  }
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  v14 = 0;
  *(_QWORD *)&v13 = 136315138;
  v37 = v13;
  v36 = MEMORY[0x24BEE4AD8] + 8;
  v38 = v11;
  do
  {
    if ((a2 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x249587908](v14, a2);
    else
      v15 = *(id *)(a2 + 8 * v14 + 32);
    v16 = v15;
    v17 = sub_247A1ADA0();
    v18 = sub_247A1B100();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v40 = v39;
      *(_DWORD *)v19 = v37;
      sub_247A1AC8C();
      sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v20 = sub_247A1B4CC();
      *(_QWORD *)(v19 + 4) = sub_2479CCA28(v20, v21, &v40);

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2479C5000, v17, v18, " - identifier: %s", (uint8_t *)v19, 0xCu);
      v22 = v39;
      swift_arrayDestroy();
      MEMORY[0x249588124](v22, -1, -1);
      v23 = v19;
      v11 = v38;
      MEMORY[0x249588124](v23, -1, -1);

    }
    else
    {

    }
    ++v14;
  }
  while (v11 != v14);
LABEL_17:
  swift_bridgeObjectRelease();
  v24 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v25 = objc_msgSend(v24, sel_timeProvider);

  objc_msgSend(v25, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_254450A90 != -1)
    swift_once();
  v26 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v26, (uint64_t)qword_254452038);
  v27 = v33;
  v29 = sub_247A0F98C(v33, "touch stickers", v28, 2);
  v30 = sub_247A1AD34();
  v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
  v32 = v34;
  v31(v34, v27, v30);
  v31(v35, (uint64_t)v32, v30);
  return v29;
}

uint64_t sub_247A12024(const char *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  const char *v30;
  char *v31;
  uint8_t *v32;
  os_signpost_id_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  char *v45;
  char v46;

  v45 = (char *)a1;
  v43 = a3;
  v7 = sub_247A1AD64();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_247A1AD34();
  v10 = *(char **)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - v13;
  v15 = sub_247A1AD58();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v10 + 2);
  v38(v21, a4, v9);
  v22 = *(int *)(v19 + 48);
  v23 = v15;
  *(_QWORD *)&v21[v22] = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v44, v15);
  swift_retain();
  v24 = sub_247A1AD4C();
  sub_247A1AD70();
  LODWORD(v44) = sub_247A1B148();
  result = sub_247A1B1E4();
  if ((result & 1) == 0)
    goto LABEL_5;
  v37 = v10;
  if ((v43 & 1) == 0)
  {
    v10 = v42;
    if (!v45)
    {
      __break(1u);
LABEL_5:

      (*((void (**)(char *, uint64_t))v10 + 1))(v14, v9);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return sub_2479D045C((uint64_t)v21, (uint64_t *)&unk_254450A80);
    }
    goto LABEL_10;
  }
  v10 = v42;
  if ((unint64_t)v45 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v45 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v45 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v45 = &v46;
LABEL_10:
  swift_retain();
  sub_247A1AD94();
  swift_release();
  v27 = v39;
  v26 = v40;
  v28 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v10, v40);
  v29 = *MEMORY[0x24BEE7810];
  v36 = v23;
  if (v28 == v29)
  {
    v30 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
    v30 = "";
  }
  v31 = v41;
  v38(v41, (uint64_t)v14, v9);
  v32 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v32 = 0;
  v33 = sub_247A1AD28();
  _os_signpost_emit_with_name_impl(&dword_2479C5000, v24, (os_signpost_type_t)v44, v33, v45, v30, v32, 2u);
  MEMORY[0x249588124](v32, -1, -1);

  v34 = (void (*)(char *, uint64_t))*((_QWORD *)v37 + 1);
  v34(v14, v9);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v36);
  sub_2479D045C((uint64_t)v21, (uint64_t *)&unk_254450A80);
  return ((uint64_t (*)(char *, uint64_t))v34)(v31, v9);
}

uint64_t sub_247A12394()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_254452050);
  __swift_project_value_buffer(v0, (uint64_t)qword_254452050);
  return sub_247A1ADAC();
}

uint64_t sub_247A1240C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v0 = sub_247A1AD58();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_247A1ADB8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - v9;
  v11 = type metadata accessor for StickerSignposter();
  __swift_allocate_value_buffer(v11, qword_254452038);
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_254452038);
  if (qword_254450A98 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_254452050);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, (uint64_t)v10, v4);
  sub_247A1AD40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v12, v3, v0);
}

uint64_t sub_247A1258C(void *a1)
{
  id v3;

  if (!a1)
    return 0xD000000000000010;
  if (a1 == (void *)1)
    return 0x67616D69206C6C61;
  if (a1 == (void *)2)
    return 0x6567616D69206F6ELL;
  v3 = objc_msgSend(a1, sel_description);
  sub_247A1AEE4();

  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_2479D5080(a1);
  sub_2479D5080(a1);
  return 0x206572656877;
}

void sub_247A1268C(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;
  uint64_t v14;

  if (a1)
  {
    v1 = qword_254450A98;
    v2 = a1;
    if (v1 != -1)
      swift_once();
    v3 = sub_247A1ADB8();
    __swift_project_value_buffer(v3, (uint64_t)qword_254452050);
    v13 = v2;
    v4 = sub_247A1ADA0();
    v5 = sub_247A1B100();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      *(_DWORD *)v6 = 136315138;
      v14 = v7;
      sub_247A1AC8C();
      sub_2479CDA10((unint64_t *)&qword_254450A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v8 = sub_247A1B4CC();
      sub_2479CCA28(v8, v9, &v14);
      sub_247A1B208();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2479C5000, v4, v5, "Returning sticker %s to caller", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_254450A98 != -1)
      swift_once();
    v10 = sub_247A1ADB8();
    __swift_project_value_buffer(v10, (uint64_t)qword_254452050);
    v13 = sub_247A1ADA0();
    v11 = sub_247A1B100();
    if (os_log_type_enabled(v13, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_2479C5000, v13, v11, "Returned last sticker (end of sequence)", v12, 2u);
      MEMORY[0x249588124](v12, -1, -1);
    }
  }

}

void sub_247A12944(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  char **__ptr32 *v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48[2];

  v48[1] = *MEMORY[0x24BDAC8D0];
  v2 = *(void **)(a1 + 8);
  v1 = *(void **)(a1 + 16);
  v40 = *(_QWORD *)(a1 + 32);
  v43 = *(_QWORD *)(a1 + 40);
  v42 = *(_BYTE *)(a1 + 48);
  v45 = *(_QWORD *)(a1 + 56);
  v44 = *(_BYTE *)(a1 + 64);
  if (qword_254450A98 != -1)
    swift_once();
  v3 = sub_247A1ADB8();
  __swift_project_value_buffer(v3, (uint64_t)qword_254452050);
  v4 = v2;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v5 = v4;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v6 = sub_247A1ADA0();
  v7 = sub_247A1B100();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    if (v2)
    {
      v46 = (uint64_t)v5;
      v9 = v5;
      v10 = v2;
    }
    else
    {
      v10 = 0;
      v46 = 0;
    }
    sub_247A1B208();
    *v38 = v10;

    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v6, v7, " - predicate: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    swift_arrayDestroy();
    MEMORY[0x249588124](v38, -1, -1);
    MEMORY[0x249588124](v8, -1, -1);

  }
  else
  {

    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    sub_2479D5080(v1);

    swift_bridgeObjectRelease();
  }
  v11 = v5;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v12 = v11;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v13 = sub_247A1ADA0();
  v14 = sub_247A1B100();
  v15 = &off_247A1C000;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v46 = v39;
    *(_DWORD *)v16 = 136315138;
    sub_2479D50B4(v1);
    v17 = sub_247A1258C(v1);
    v48[0] = sub_2479CCA28(v17, v18, &v46);
    sub_247A1B208();

    v15 = &off_247A1C000;
    swift_bridgeObjectRelease();
    sub_2479D5080(v1);

    swift_bridgeObjectRelease();
    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v13, v14, " - representations: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v39, -1, -1);
    MEMORY[0x249588124](v16, -1, -1);

  }
  else
  {

    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    sub_2479D5080(v1);

    swift_bridgeObjectRelease();
  }
  v19 = v12;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v20 = sub_247A1ADA0();
  v21 = sub_247A1B100();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v22 = 134217984;
    v46 = v40;
    sub_247A1B208();

    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v20, v21, " - offset: %ld", v22, 0xCu);
    MEMORY[0x249588124](v22, -1, -1);

  }
  else
  {

    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
  }
  v23 = v19;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v24 = v23;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v25 = sub_247A1ADA0();
  v26 = sub_247A1B100();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v48[0] = v41;
    *(_DWORD *)v27 = *((_QWORD *)v15 + 201);
    v46 = v43;
    v47 = v42;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450BC8);
    v28 = sub_247A1AEFC();
    v46 = sub_2479CCA28(v28, v29, v48);
    sub_247A1B208();

    swift_bridgeObjectRelease();
    sub_2479D5080(v1);

    swift_bridgeObjectRelease();
    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v25, v26, " - limit: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v41, -1, -1);
    MEMORY[0x249588124](v27, -1, -1);

  }
  else
  {

    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    sub_2479D5080(v1);

    swift_bridgeObjectRelease();
  }
  v30 = v24;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v31 = v30;
  sub_2479D50B4(v1);
  swift_bridgeObjectRetain();
  v32 = sub_247A1ADA0();
  v33 = sub_247A1B100();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v48[0] = v35;
    *(_DWORD *)v34 = 136315138;
    v46 = v45;
    v47 = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450BC8);
    v36 = sub_247A1AEFC();
    v46 = sub_2479CCA28(v36, v37, v48);
    sub_247A1B208();

    swift_bridgeObjectRelease();
    sub_2479D5080(v1);

    swift_bridgeObjectRelease();
    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v32, v33, " - batchSize: %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v35, -1, -1);
    MEMORY[0x249588124](v34, -1, -1);

  }
  else
  {

    sub_2479D5080(v1);
    swift_bridgeObjectRelease();
    sub_2479D5080(v1);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_247A13168(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_247A13180(a4, a1, a2, a3, "END count(for:) (%s)");
}

uint64_t sub_247A13174(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_247A13180(a4, a1, a2, a3, "END stickers(for:) (%s)");
}

uint64_t sub_247A13180(double a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  double v40;
  double v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  const char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  double *v57;
  uint64_t v58;
  uint64_t v59;

  v52 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (double *)((char *)&v52 - v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v53 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v54 = (char *)&v52 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v52 - v19;
  v21 = *(int *)(v18 + 48);
  v22 = sub_247A1AD34();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v24((uint64_t)v20, a3, v22);
  *(_QWORD *)&v20[v21] = a4;
  v25 = (char *)v12 + *(int *)(v8 + 48);
  v56 = v23;
  v57 = v12;
  *v12 = a1;
  v26 = *(int *)(v13 + 48);
  v27 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v27(v25, v20, v22);
  v28 = a4;
  v29 = v24;
  *(_QWORD *)&v25[v26] = v28;
  v30 = (uint64_t)v53;
  v31 = &v55[*(int *)(v8 + 48)];
  v24((uint64_t)v31, (uint64_t)v25, v22);
  v27((char *)v30, v31, v22);
  v32 = *(int *)(v13 + 48);
  v33 = (uint64_t)v54;
  v27(v54, (char *)v30, v22);
  *(_QWORD *)(v33 + v32) = v28;
  v34 = qword_254450A90;
  swift_retain_n();
  if (v34 != -1)
    swift_once();
  v35 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v35, (uint64_t)qword_254452038);
  v36 = *(int *)(v13 + 48);
  v29(v30, v33, v22);
  *(_QWORD *)(v30 + v36) = v28;
  sub_247A12024("count stickers", v37, 2, v30, v28);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v30, v22);
  v38 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v39 = objc_msgSend(v38, sel_timeProvider);

  objc_msgSend(v39, sel_timestamp);
  v41 = v40;
  swift_unknownObjectRelease();
  v42 = objc_msgSend((id)objc_opt_self(), sel_stringForTimeInterval_, v41 - a1);
  v43 = sub_247A1AEE4();
  v45 = v44;

  if (qword_254450A98 != -1)
    swift_once();
  v46 = sub_247A1ADB8();
  __swift_project_value_buffer(v46, (uint64_t)qword_254452050);
  swift_bridgeObjectRetain();
  v47 = sub_247A1ADA0();
  v48 = sub_247A1B100();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v59 = v50;
    *(_DWORD *)v49 = 136315138;
    swift_bridgeObjectRetain();
    v58 = sub_2479CCA28(v43, v45, &v59);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2479C5000, v47, v48, v52, v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v50, -1, -1);
    MEMORY[0x249588124](v49, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_2479D045C(v33, (uint64_t *)&unk_254450A80);
  return sub_2479D045C((uint64_t)v57, &qword_254450BC0);
}

uint64_t sub_247A135FC(uint64_t a1, uint64_t a2, double a3)
{
  return sub_247A13624(a1, a2, "remove stickers", "END removeStickers(identifiers:) (%s)", a3);
}

uint64_t sub_247A13610(uint64_t a1, uint64_t a2, double a3)
{
  return sub_247A13624(a1, a2, "touch stickers", "END touchStickers(stickers:) (%s)", a3);
}

uint64_t sub_247A13624(uint64_t a1, uint64_t a2, const char *a3, const char *a4, double a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  double v42;
  double v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v54;
  const char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  const char *v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;

  v55 = a4;
  v60 = a3;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450BC0);
  v8 = MEMORY[0x24BDAC7A8](v57);
  v58 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (double *)((char *)&v54 - v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v54 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v54 - v19;
  v21 = *(int *)(v18 + 48);
  v22 = sub_247A1AD34();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v24(v20, a1, v22);
  *(_QWORD *)&v20[v21] = a2;
  v25 = v57;
  v26 = (char *)v11 + *(int *)(v57 + 48);
  v61 = v11;
  *v11 = a5;
  v27 = *(int *)(v12 + 48);
  v59 = v23;
  v28 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v28(v26, v20, v22);
  v29 = a2;
  *(_QWORD *)&v26[v27] = a2;
  v30 = v12;
  v31 = (void (*)(char *, char *, uint64_t))v24;
  v32 = v29;
  v33 = (uint64_t)v56;
  v34 = &v58[*(int *)(v25 + 48)];
  v31(v34, v26, v22);
  v28(v15, v34, v22);
  v35 = *(int *)(v30 + 48);
  v28((char *)v33, v15, v22);
  *(_QWORD *)(v33 + v35) = v32;
  v36 = qword_254450A90;
  swift_retain_n();
  if (v36 != -1)
    swift_once();
  v37 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v37, (uint64_t)qword_254452038);
  v38 = *(int *)(v30 + 48);
  v31(v15, (char *)v33, v22);
  *(_QWORD *)&v15[v38] = v32;
  sub_247A12024(v60, v39, 2, (uint64_t)v15, v32);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v22);
  v40 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
  v41 = objc_msgSend(v40, sel_timeProvider);

  objc_msgSend(v41, sel_timestamp);
  v43 = v42;
  swift_unknownObjectRelease();
  v44 = objc_msgSend((id)objc_opt_self(), sel_stringForTimeInterval_, v43 - a5);
  v45 = sub_247A1AEE4();
  v47 = v46;

  if (qword_254450A98 != -1)
    swift_once();
  v48 = sub_247A1ADB8();
  __swift_project_value_buffer(v48, (uint64_t)qword_254452050);
  swift_bridgeObjectRetain();
  v49 = sub_247A1ADA0();
  v50 = sub_247A1B100();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v63 = v52;
    *(_DWORD *)v51 = 136315138;
    swift_bridgeObjectRetain();
    v62 = sub_2479CCA28(v45, v47, &v63);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2479C5000, v49, v50, v55, v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x249588124](v52, -1, -1);
    MEMORY[0x249588124](v51, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_2479D045C(v33, (uint64_t *)&unk_254450A80);
  return sub_2479D045C((uint64_t)v61, &qword_254450BC0);
}

uint64_t sub_247A13AA0(uint64_t a1, uint64_t a2, double a3)
{
  return sub_247A13624(a1, a2, "add sticker", "END addSticker(_:) (%s)", a3);
}

void sub_247A13AB4(uint64_t a1, void *a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double *v16;
  double v17;
  double v18;
  char *v19;
  uint64_t v20;

  if (qword_254450A98 != -1)
    swift_once();
  v3 = sub_247A1ADB8();
  __swift_project_value_buffer(v3, (uint64_t)qword_254452050);
  v19 = a2;
  v4 = sub_247A1ADA0();
  v5 = sub_247A1B100();
  if (!os_log_type_enabled(v4, v5))
  {

    return;
  }
  v6 = swift_slowAlloc();
  v7 = swift_slowAlloc();
  v20 = v7;
  *(_DWORD *)v6 = 134219010;
  sub_247A1B208();
  *(_WORD *)(v6 + 12) = 2080;
  sub_247A1AD04();
  sub_2479CDA10(&qword_2576D2F70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE6408]);
  v8 = sub_247A1B4CC();
  sub_2479CCA28(v8, v9, &v20);
  sub_247A1B208();

  swift_bridgeObjectRelease();
  *(_WORD *)(v6 + 22) = 2080;
  v10 = (void *)objc_opt_self();
  v11 = &v19[OBJC_IVAR___STKStickerRepresentation_byteCount];
  swift_beginAccess();
  v12 = objc_msgSend(v10, sel_stringFromByteCount_countStyle_, *(_QWORD *)v11, 0);
  v13 = sub_247A1AEE4();
  v15 = v14;

  sub_2479CCA28(v13, v15, &v20);
  sub_247A1B208();

  swift_bridgeObjectRelease();
  *(_WORD *)(v6 + 32) = 2048;
  v16 = (double *)&v19[OBJC_IVAR___STKStickerRepresentation_size];
  v17 = *(double *)&v19[OBJC_IVAR___STKStickerRepresentation_size];

  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_247A1B208();

  *(_WORD *)(v6 + 42) = 2048;
  v18 = v16[1];

  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v18 > -9.22337204e18)
  {
    if (v18 < 9.22337204e18)
    {
      sub_247A1B208();

      _os_log_impl(&dword_2479C5000, v4, v5, "   [%ld] %s %s %ldx%ld", (uint8_t *)v6, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x249588124](v7, -1, -1);
      MEMORY[0x249588124](v6, -1, -1);

      return;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_247A13EEC(uint64_t a1, uint64_t a2, double a3)
{
  return sub_247A13624(a1, a2, "add stickers", "END addStickers(_:) (%s)", a3);
}

uint64_t sub_247A13F00(uint64_t a1, uint64_t a2, double a3)
{
  return sub_247A13624(a1, a2, "update sticker", "END updateSticker(_:) (%s)", a3);
}

uint64_t sub_247A13F14(uint64_t a1, uint64_t a2, double a3)
{
  return sub_247A13624(a1, a2, "move stickers", "END moveSticker(at:to:) (%s)", a3);
}

uint64_t sub_247A13F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450A80);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v34 - v8;
  v10 = *(int *)(v7 + 48);
  v11 = v1 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter;
  v12 = sub_247A0F98C((uint64_t)&v34 - v8, "remove stickers", 15, 2);
  *(_QWORD *)&v9[v10] = v12;
  swift_retain();
  v13 = v40;
  v14 = sub_247A1425C(a1);
  v40 = v13;
  if (!v13)
  {
    v39 = v1;
    v37 = v10;
    v19 = *(int *)(v3 + 48);
    v20 = (unint64_t)v14;
    v21 = sub_247A1AD34();
    v22 = *(_QWORD *)(v21 - 8);
    v35 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v36 = v9;
    v35(v6, v9, v21);
    *(_QWORD *)&v6[v19] = v12;
    v38 = v11;
    sub_247A1196C("stickers fetched", 16, 2, (uint64_t)v6, v12);
    swift_release();
    v23 = *(void (**)(char *, uint64_t))(v22 + 8);
    v23(v6, v21);
    v24 = v20;
    v25 = v3;
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      v26 = sub_247A1B37C();
      swift_bridgeObjectRelease();
      v24 = v20;
    }
    else
    {
      v26 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v27 = v40;
    if (v26)
    {
      sub_247A145A4(v24);
      swift_bridgeObjectRelease();
      sub_247A146A4();
      if (v27)
      {
        v28 = *(int *)(v25 + 48);
        v9 = v36;
        v35(v6, v36, v21);
        v29 = *(_QWORD *)&v9[v37];
        *(_QWORD *)&v6[v28] = v29;
        swift_retain();
        sub_247A12024("remove stickers", 15, 2, (uint64_t)v6, v29);
        swift_release();
        v23(v6, v21);
        goto LABEL_3;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v30 = *(int *)(v25 + 48);
    v31 = (uint64_t)v36;
    v35(v6, v36, v21);
    v32 = *(_QWORD *)(v31 + v37);
    *(_QWORD *)&v6[v30] = v32;
    swift_retain();
    sub_247A12024("remove stickers", 15, 2, (uint64_t)v6, v32);
    swift_release();
    v23(v6, v21);
    v18 = v31;
    return sub_2479D16A4(v18);
  }
  swift_release();
  v15 = *(int *)(v3 + 48);
  v16 = sub_247A1AD34();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v6, v9, v16);
  *(_QWORD *)&v6[v15] = v12;
  swift_retain();
  sub_247A12024("remove stickers", 15, 2, (uint64_t)v6, v12);
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
LABEL_3:
  v18 = (uint64_t)v9;
  return sub_2479D16A4(v18);
}

uint8_t *sub_247A1425C(uint64_t a1)
{
  uint8_t *v1;
  uint8_t *v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v23[2];

  v2 = v1;
  v23[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v5 = (void *)sub_247A1AEC0();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_2479DB9BC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_247A1C830;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2479D4FF8();
  *(_QWORD *)(v7 + 32) = 0x696669746E656469;
  *(_QWORD *)(v7 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2576D2B88);
  *(_QWORD *)(v7 + 104) = sub_247A1497C();
  *(_QWORD *)(v7 + 72) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_247A1B0F4();
  objc_msgSend(v6, sel_setPredicate_, v8);

  v23[0] = 0;
  v9 = objc_msgSend(v6, sel_execute_, v23);
  v10 = v23[0];
  if (v9)
  {
    v11 = v9;
    type metadata accessor for ManagedSticker();
    v2 = (uint8_t *)sub_247A1B034();
    v12 = v10;

  }
  else
  {
    v13 = v23[0];
    v14 = (void *)sub_247A1AADC();

    swift_willThrow();
    v15 = v14;
    v16 = v14;
    v17 = sub_247A1ADA0();
    v18 = sub_247A1B118();
    if (os_log_type_enabled(v17, v18))
    {
      v2 = (uint8_t *)swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v2 = 138412290;
      v20 = v14;
      v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v23[0] = v21;
      sub_247A1B208();
      *v19 = v21;

      _os_log_impl(&dword_2479C5000, v17, v18, "Could not fetch stickers to delete: %@", v2, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v19, -1, -1);
      MEMORY[0x249588124](v2, -1, -1);

    }
    else
    {

    }
    swift_willThrow();
  }
  return v2;
}

void sub_247A145A4(unint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  id v10;

  v3 = *(void **)(v1 + 16);
  v10 = v3;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v3;
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();

    return;
  }
  v9 = v3;
  swift_bridgeObjectRetain();
  v4 = sub_247A1B37C();
  if (!v4)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x249587908](i, a1);
      else
        v7 = *(id *)(a1 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v10, sel_deleteObject_, v7);

    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_247A146A4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v13[0] = 0;
  if (objc_msgSend(v1, sel_save_, v13))
  {
    v2 = v13[0];
  }
  else
  {
    v3 = v13[0];
    v4 = (void *)sub_247A1AADC();

    swift_willThrow();
    v5 = v4;
    v6 = v4;
    v7 = sub_247A1ADA0();
    v8 = sub_247A1B118();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v11 = v4;
      v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v13[0] = v12;
      sub_247A1B208();
      *v10 = v12;

      _os_log_impl(&dword_2479C5000, v7, v8, "Could not save after deleting stickers: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v10, -1, -1);
      MEMORY[0x249588124](v9, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_247A148BC()
{
  uint64_t v0;

  return sub_2479D15DC(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter);
}

uint64_t sub_247A148CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  v2 = sub_247A1ADB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2479D15DC(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter);
  return swift_deallocClassInstance();
}

uint64_t sub_247A14938()
{
  return _s6RemoveCMa();
}

uint64_t _s6RemoveCMa()
{
  uint64_t result;

  result = qword_2544509B0;
  if (!qword_2544509B0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_247A1497C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576D2B90;
  if (!qword_2576D2B90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2576D2B88);
    result = MEMORY[0x249588058](MEMORY[0x24BDCFBF8], v1);
    atomic_store(result, (unint64_t *)&qword_2576D2B90);
  }
  return result;
}

id _s8Stickers14ManagedStickerC12countRequest3forSo07NSFetchE0CySo8NSNumberCGAA0C0C05FetchE0VSg_tFZ_0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;
  _BYTE v14[8];
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  v1 = *(void **)(a1 + 8);
  v13 = *(_QWORD *)a1;
  v3 = *(void **)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v9 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v10 = (void *)sub_247A1AEC0();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  if (v2)
  {
    v14[0] = v13;
    v15 = v1;
    v16 = v3;
    v17 = v2;
    v18 = v4;
    v19 = v5;
    v20 = v6 & 1;
    v21 = v7;
    v22 = v8 & 1;
    sub_247A14E40(v13, v1, v3, v2);
    sub_247A14EB0((uint64_t)v14, v11);
    sub_247A14E78(v13, v1, v3, v2);
  }
  return v11;
}

id sub_247A14B08(unsigned __int8 *a1)
{
  int v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = *a1;
  v2 = (void *)*((_QWORD *)a1 + 1);
  v15 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_247A1C830;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  v4 = sub_2479D4FF8();
  *(_QWORD *)(v3 + 64) = v4;
  *(_QWORD *)(v3 + 32) = 0x6E6F6973726576;
  *(_QWORD *)(v3 + 40) = 0xE700000000000000;
  if (qword_254450870 != -1)
    swift_once();
  v5 = qword_254450868 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride;
  swift_beginAccess();
  if (*(_BYTE *)(v5 + 8))
    v6 = 1;
  else
    v6 = *(_QWORD *)v5;
  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  v7 = MEMORY[0x24BEE1768];
  v8 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v3 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v3 + 104) = v8;
  *(_QWORD *)(v3 + 72) = v6;
  sub_247A1B0F4();
  MEMORY[0x249587620]();
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_247A1B058();
  sub_247A1B070();
  sub_247A1B04C();
  if (v1 != 2)
  {
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_247A1C830;
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 64) = v4;
    *(_QWORD *)(v9 + 32) = 1701869940;
    *(_QWORD *)(v9 + 40) = 0xE400000000000000;
    *(_QWORD *)(v9 + 96) = v7;
    *(_QWORD *)(v9 + 104) = v8;
    *(_QWORD *)(v9 + 72) = v1 & 1;
    v10 = (id)sub_247A1B0F4();
    MEMORY[0x249587620]();
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_247A1B058();
    sub_247A1B070();
    sub_247A1B04C();

  }
  if (v2)
  {
    v11 = v2;
    MEMORY[0x249587620]();
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_247A1B058();
    sub_247A1B070();
    sub_247A1B04C();

  }
  v12 = (void *)sub_247A1B028();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  return v13;
}

uint64_t sub_247A14E40(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v5;
  uint64_t result;

  if (a4)
  {
    v5 = a2;
    sub_2479D50B4(a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_247A14E78(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {

    sub_2479D5080(a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_247A14EB0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[4];
  char v25;
  uint64_t v26;
  _BYTE v27[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A48);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_OWORD *)(a1 + 48);
  v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v11;
  v25 = *(_BYTE *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v12;
  v13 = sub_247A14B08((unsigned __int8 *)v24);
  objc_msgSend(a2, sel_setPredicate_, v13);

  objc_msgSend(a2, sel_setFetchOffset_, *(_QWORD *)(a1 + 32));
  sub_247A15128(a1 + 40, (uint64_t)v27);
  sub_247A15128((uint64_t)v27, (uint64_t)v24);
  if ((BYTE8(v24[0]) & 1) == 0)
    objc_msgSend(a2, sel_setFetchLimit_, *(_QWORD *)&v24[0]);
  v14 = *(_QWORD *)(a1 + 24);
  v26 = v14;
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v20 = a2;
    v23 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_247A1B340();
    v16 = sub_2479D032C(0, &qword_254450940);
    v17 = v14 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v21 = *(_QWORD *)(v5 + 72);
    v22 = v16;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v18(v10, v17, v4);
      v18(v8, (uint64_t)v10, v4);
      type metadata accessor for Sticker(0);
      sub_247A1B13C();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      sub_247A1B328();
      sub_247A1B34C();
      sub_247A1B358();
      sub_247A1B334();
      v17 += v21;
      --v15;
    }
    while (v15);
    sub_247A15170((uint64_t)&v26);
    a2 = v20;
  }
  sub_2479D032C(0, &qword_254450940);
  v19 = (void *)sub_247A1B028();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setSortDescriptors_, v19);

}

uint64_t sub_247A15128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_247A15170(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247A15198(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000010;
    else
      v3 = 1701667182;
    if (v2 == 1)
      v4 = 0x8000000247A1E790;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000010;
      else
        v6 = 1701667182;
      if (v5 == 1)
        v7 = 0x8000000247A1E790;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x44496D616461;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x44496D616461)
  {
LABEL_21:
    v8 = sub_247A1B4E4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_247A15298(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_247A152E0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_247A15380 + 4 * byte_247A1E4C6[a2]))(0x746E6F4372657375);
}

uint64_t sub_247A15380(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x746E6F4372657375 && v1 == 0xEB00000000746E65)
    v2 = 1;
  else
    v2 = sub_247A1B4E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

id Sticker.AttributionInfo.__allocating_init(adamID:bundleIdentifier:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  objc_super v18;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = &v11[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR___STKStickerAttributionInfo_adamID] = a1;
  swift_beginAccess();
  *(_QWORD *)v12 = a2;
  *((_QWORD *)v12 + 1) = a3;
  v13 = v11;
  v14 = a1;
  swift_bridgeObjectRelease();
  v15 = &v13[OBJC_IVAR___STKStickerAttributionInfo_name];
  *(_QWORD *)v15 = a4;
  *((_QWORD *)v15 + 1) = a5;

  v18.receiver = v13;
  v18.super_class = v5;
  v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

void *Sticker.AttributionInfo.adamID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  v2 = v1;
  return v1;
}

uint64_t sub_247A15608()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_247A156D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_247A15730(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_247A15798())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t Sticker.AttributionInfo.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_247A15870(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_247A15198(*a1, *a2);
}

uint64_t sub_247A1587C()
{
  sub_247A1B568();
  sub_247A1AF2C();
  swift_bridgeObjectRelease();
  return sub_247A1B580();
}

uint64_t sub_247A15914()
{
  sub_247A1AF2C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247A15988()
{
  sub_247A1B568();
  sub_247A1AF2C();
  swift_bridgeObjectRelease();
  return sub_247A1B580();
}

uint64_t sub_247A15A1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_247A16F5C();
  *a1 = result;
  return result;
}

void sub_247A15A48(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0x8000000247A1E790;
  v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    v5 = 1701667182;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x44496D616461;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_247A15AA0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 1701667182;
  if (*v0)
    return v1;
  else
    return 0x44496D616461;
}

uint64_t sub_247A15AF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_247A16F5C();
  *a1 = result;
  return result;
}

uint64_t sub_247A15B18()
{
  sub_247A164D4();
  return sub_247A1B5A4();
}

uint64_t sub_247A15B40()
{
  sub_247A164D4();
  return sub_247A1B5B0();
}

id Sticker.AttributionInfo.init(adamID:bundleIdentifier:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v11;
  char *v12;
  id v13;
  char *v14;
  id v15;
  objc_super v17;

  v11 = &v5[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR___STKStickerAttributionInfo_adamID] = a1;
  swift_beginAccess();
  *(_QWORD *)v11 = a2;
  *((_QWORD *)v11 + 1) = a3;
  v12 = v5;
  v13 = a1;
  swift_bridgeObjectRelease();
  v14 = &v12[OBJC_IVAR___STKStickerAttributionInfo_name];
  *(_QWORD *)v14 = a4;
  *((_QWORD *)v14 + 1) = a5;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for Sticker.AttributionInfo();
  v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

uint64_t type metadata accessor for Sticker.AttributionInfo()
{
  return objc_opt_self();
}

uint64_t sub_247A15C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  BOOL v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  char *v20;
  _BYTE v21[24];
  uint64_t v22;

  v2 = v1;
  swift_getObjectType();
  sub_2479DFAD0(a1, (uint64_t)v21);
  if (!v22)
  {
    sub_2479DFA90((uint64_t)v21);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v4 = *(void **)(v1 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  v5 = *(void **)&v20[OBJC_IVAR___STKStickerAttributionInfo_adamID];
  if (v4)
  {
    if (!v5)
      goto LABEL_23;
    sub_2479D032C(0, (unint64_t *)&qword_254450BF0);
    v6 = v5;
    v7 = v4;
    v8 = sub_247A1B1CC();

    if ((v8 & 1) == 0)
      goto LABEL_23;
  }
  else if (v5)
  {
    goto LABEL_23;
  }
  v9 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  v10 = *v9;
  v11 = v9[1];
  v12 = &v20[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  swift_beginAccess();
  v13 = *((_QWORD *)v12 + 1);
  if (v11)
  {
    if (!v13)
      goto LABEL_23;
    v14 = v10 == *(_QWORD *)v12 && v11 == v13;
    if (!v14 && (sub_247A1B4E4() & 1) == 0)
      goto LABEL_23;
  }
  else if (v13)
  {
    goto LABEL_23;
  }
  v15 = (_QWORD *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_name);
  v16 = *(_QWORD *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_name + 8);
  v17 = *(_QWORD *)&v20[OBJC_IVAR___STKStickerAttributionInfo_name + 8];
  if (!v16)
  {
    swift_bridgeObjectRetain();

    if (v17)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return 1;
  }
  if (!v17)
  {
LABEL_23:

    return 0;
  }
  if (*v15 == *(_QWORD *)&v20[OBJC_IVAR___STKStickerAttributionInfo_name] && v16 == v17)
  {

    return 1;
  }
  v19 = sub_247A1B4E4();

  result = 0;
  if ((v19 & 1) != 0)
    return 1;
  return result;
}

uint64_t sub_247A15EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_adamID))
    v2 = sub_247A1B1D8();
  else
    v2 = 0;
  if (*(_QWORD *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_name + 8))
    v3 = sub_247A1AF98();
  else
    v3 = 0;
  v4 = v1 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier;
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 8))
  {
    swift_bridgeObjectRetain();
    v5 = sub_247A1AF98();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  return v3 ^ v2 ^ v5;
}

uint64_t static Sticker.AttributionInfo.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t Sticker.AttributionInfo.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Sticker.AttributionInfo.init(coder:)(a1);
}

uint64_t Sticker.AttributionInfo.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v2 = v1;
  v4 = &v2[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  sub_2479D032C(0, (unint64_t *)&qword_254450BF0);
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = v2;
  v6 = sub_247A1B190();
  if (v6)
  {
    v7 = (void *)v6;
    sub_2479D032C(0, (unint64_t *)&qword_2576D2F60);
    v8 = sub_247A1B190();
    if (v8)
    {
      v9 = (void *)v8;
      v11 = 0;
      sub_247A1AED8();

    }
  }
  else
  {

  }
  swift_bridgeObjectRelease();
  type metadata accessor for Sticker.AttributionInfo();
  swift_deallocPartialClassInstance();
  return 0;
}

void *Sticker.AttributionInfo.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Sticker.AttributionInfo.init(from:)(a1);
}

void *Sticker.AttributionInfo.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  objc_class *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  objc_super v29;
  char v30;
  char v31;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544507D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v3[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v27 = a1;
  v28 = (uint64_t *)v9;
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247A164D4();
  v11 = v3;
  sub_247A1B58C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);

    swift_bridgeObjectRelease();
    type metadata accessor for Sticker.AttributionInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v30 = 0;
    v12 = sub_247A1B40C();
    v14 = v5;
    if ((v13 & 1) != 0)
      v16 = 0;
    else
      v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, v12);
    v17 = v28;
    *(_QWORD *)&v11[OBJC_IVAR___STKStickerAttributionInfo_adamID] = v16;
    v30 = 1;
    v18 = sub_247A1B3E8();
    v20 = v19;
    swift_beginAccess();
    *v17 = v18;
    v17[1] = v20;
    swift_bridgeObjectRelease();
    v31 = 2;
    v21 = sub_247A1B3E8();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
    v24 = (uint64_t *)&v11[OBJC_IVAR___STKStickerAttributionInfo_name];
    *v24 = v21;
    v24[1] = v23;

    v25 = (objc_class *)type metadata accessor for Sticker.AttributionInfo();
    v29.receiver = v11;
    v29.super_class = v25;
    v10 = objc_msgSendSuper2(&v29, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  }
  return v10;
}

unint64_t sub_247A164D4()
{
  unint64_t result;

  result = qword_254450B78;
  if (!qword_254450B78)
  {
    result = MEMORY[0x249588058](&unk_247A1E644, &_s15AttributionInfoC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B78);
  }
  return result;
}

void sub_247A16518(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  v4 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = v1 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier;
  swift_beginAccess();
  if (*(_QWORD *)(v5 + 8))
  {
    swift_bridgeObjectRetain();
    v6 = sub_247A1AEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR___STKStickerAttributionInfo_name + 8))
    v8 = sub_247A1AEC0();
  else
    v8 = 0;
  v9 = (void *)sub_247A1AEC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);
  swift_unknownObjectRelease();

}

void sub_247A166D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  __int128 *v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450980);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247A164D4();
  sub_247A1B598();
  v9 = *(void **)(v3 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v10, sel_longLongValue);
    v15 = 0;
    sub_247A1B4A8();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      return;
    }

  }
  v11 = (__int128 *)(v3 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  v14 = *v11;
  v13 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450908);
  sub_247A168A8();
  sub_247A1B49C();
  if (!v2)
  {
    v14 = *(_OWORD *)(v3 + OBJC_IVAR___STKStickerAttributionInfo_name);
    v13 = 2;
    sub_247A1B49C();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_247A168A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254450910;
  if (!qword_254450910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254450908);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x249588058](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254450910);
  }
  return result;
}

unint64_t sub_247A16958()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_247A1B2D4();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  swift_bridgeObjectRetain();
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  v1 = *(void **)(v0 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_description);
    sub_247A1AEE4();

  }
  sub_247A1AF38();
  swift_bridgeObjectRelease();
  sub_247A1AF38();
  return 0xD000000000000012;
}

id Sticker.AttributionInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Sticker.AttributionInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Sticker.AttributionInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Sticker.AttributionInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_247A16C20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *result;

  v5 = objc_allocWithZone((Class)type metadata accessor for Sticker.AttributionInfo());
  result = Sticker.AttributionInfo.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_247A16C70(_QWORD *a1)
{
  sub_247A166D0(a1);
}

uint64_t sub_247A16C90@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for Sticker.AttributionInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.bundleIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.bundleIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.bundleIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.__allocating_init(adamID:bundleIdentifier:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t _s15AttributionInfoC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_247A16E04 + 4 * byte_247A1E4D1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_247A16E38 + 4 * byte_247A1E4CC[v4]))();
}

uint64_t sub_247A16E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A16E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247A16E48);
  return result;
}

uint64_t sub_247A16E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247A16E5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_247A16E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247A16E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15AttributionInfoC10CodingKeysOMa()
{
  return &_s15AttributionInfoC10CodingKeysON;
}

unint64_t sub_247A16E88()
{
  unint64_t result;

  result = qword_2576D2FA0;
  if (!qword_2576D2FA0)
  {
    result = MEMORY[0x249588058](&unk_247A1E61C, &_s15AttributionInfoC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2576D2FA0);
  }
  return result;
}

unint64_t sub_247A16ED0()
{
  unint64_t result;

  result = qword_254450B98;
  if (!qword_254450B98)
  {
    result = MEMORY[0x249588058](&unk_247A1E554, &_s15AttributionInfoC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254450B98);
  }
  return result;
}

unint64_t sub_247A16F18()
{
  unint64_t result;

  result = qword_254450B80[0];
  if (!qword_254450B80[0])
  {
    result = MEMORY[0x249588058](&unk_247A1E57C, &_s15AttributionInfoC10CodingKeysON);
    atomic_store(result, qword_254450B80);
  }
  return result;
}

uint64_t sub_247A16F5C()
{
  unint64_t v0;

  v0 = sub_247A1B3DC();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_247A16FA4()
{
  uint64_t v0;

  v0 = sub_247A1ADB8();
  __swift_allocate_value_buffer(v0, qword_254451F98);
  __swift_project_value_buffer(v0, (uint64_t)qword_254451F98);
  return sub_247A1ADAC();
}

uint64_t (*sub_247A17014())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_247A17058()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  void *v18;
  unsigned int v19;
  void *v20;
  char *v21;
  void *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  objc_class *v32;
  id result;
  char *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  objc_super v39;
  uint64_t v40;
  unint64_t v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450480);
  v36 = *(_QWORD *)(v2 - 8);
  v37 = (void *)v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v34 - v5;
  v6 = sub_247A1AB9C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0;
  v11 = (void *)CPSharedResourcesDirectory();
  if (v11)
  {
    v12 = v11;
    v13 = sub_247A1AEF0();
    v15 = v14;
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_247A1B2D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v40 = v13;
    v41 = v15;
    sub_247A1AF38();
    sub_247A1AB18();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(&v10[OBJC_IVAR___STKStickerUsageManager_serializationLocation], v9, v6);
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_247A1B2D4();
    swift_bridgeObjectRelease();
    v40 = v13;
    v41 = v15;
    sub_247A1AF38();
    sub_247A1AB18();
    swift_bridgeObjectRelease();
    v16(&v10[OBJC_IVAR___STKStickerUsageManager_serializationContextLocation], v9, v6);
    v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_247A1AB60();
    v18 = (void *)sub_247A1AEC0();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    v20 = v10;
    if (v19)
    {
      sub_247A1ABA8();
      sub_247A18658();
      v21 = v34;
      v22 = v37;
      sub_247A1AE18();
      (*(void (**)(char *, char *, void *))(v36 + 32))(&v10[OBJC_IVAR___STKStickerUsageManager_dictionary], v21, v22);

    }
    else
    {
      sub_247A1AE54();
      v23 = v35;
      sub_247A1ADC4();
      (*(void (**)(char *, char *, void *))(v36 + 32))(&v10[OBJC_IVAR___STKStickerUsageManager_dictionary], v23, v37);
      if (qword_254450478 != -1)
        swift_once();
      v24 = sub_247A1ADB8();
      __swift_project_value_buffer(v24, (uint64_t)qword_254451F98);
      v25 = v10;
      v26 = sub_247A1ADA0();
      v27 = sub_247A1B100();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v40 = v29;
        v37 = v20;
        *(_DWORD *)v28 = 136315138;
        sub_247A18610();
        v30 = sub_247A1B4CC();
        v38 = sub_2479CCA28(v30, v31, &v40);
        v20 = v37;
        sub_247A1B208();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2479C5000, v26, v27, "StickerUsageManager init no file exists at: %s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x249588124](v29, -1, -1);
        MEMORY[0x249588124](v28, -1, -1);

      }
      else
      {

      }
    }
    v32 = (objc_class *)type metadata accessor for StickerUsageManager();
    v39.receiver = v20;
    v39.super_class = v32;
    return objc_msgSendSuper2(&v39, sel_init);
  }
  else
  {
    __break(1u);

    result = (id)swift_unexpectedError();
    __break(1u);
  }
  return result;
}

id sub_247A17710()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StickerUsageManager()), sel_init);
  qword_254450448 = (uint64_t)result;
  return result;
}

id static StickerUsageManager.sharedManager.getter()
{
  if (qword_254450450 != -1)
    swift_once();
  return (id)qword_254450448;
}

void sub_247A177C0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  char *v29;
  uint64_t (*v30)();
  void (*v31)(_QWORD *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  uint64_t v40[4];

  v37 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254450490);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v35 = (char *)&v33 - v10;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450480);
  v11 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254450478 != -1)
    swift_once();
  v14 = sub_247A1ADB8();
  __swift_project_value_buffer(v14, (uint64_t)qword_254451F98);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_247A1ADA0();
  v16 = sub_247A1B130();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v33 = v11;
    v18 = v17;
    v19 = swift_slowAlloc();
    v40[0] = v19;
    *(_DWORD *)v18 = 136315394;
    swift_bridgeObjectRetain();
    v39[0] = sub_2479CCA28(a1, a2, v40);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v20 = v37;
    v39[0] = sub_2479CCA28(v37, a4, v40);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2479C5000, v15, v16, "StickerUsageManager logSticker %s bundleIdentifier %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x249588124](v19, -1, -1);
    v21 = v18;
    v11 = v33;
    MEMORY[0x249588124](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v20 = v37;
  }
  v22 = v38 + OBJC_IVAR___STKStickerUsageManager_dictionary;
  swift_beginAccess();
  v23 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v22, v36);
  v40[0] = v20;
  v40[1] = a4;
  v24 = (uint64_t)v35;
  sub_247A1ADE8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
  v25 = sub_247A1AE54();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v24, 1, v25);
  sub_247A17BF0(v24);
  if (v28 == 1)
  {
    swift_bridgeObjectRetain();
    v29 = v34;
    sub_247A1AE60();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
    v39[0] = v20;
    v39[1] = a4;
    swift_beginAccess();
    sub_247A1ADF4();
    swift_endAccess();
  }
  swift_bridgeObjectRetain();
  v30 = sub_247A17014();
  v39[4] = v20;
  v39[5] = a4;
  v31 = (void (*)(_QWORD *, _QWORD))sub_247A1ADDC();
  if (!v27(v32, 1, v25))
    sub_247A1AE48();
  v31(v39, 0);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, _QWORD))v30)(v40, 0);
  sub_247A17F38();
}

uint64_t sub_247A17BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254450490);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_247A17CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[3];

  v22[0] = a2;
  v4 = sub_247A1AE54();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_254450490);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v22 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450480);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v2 + OBJC_IVAR___STKStickerUsageManager_dictionary;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v22[1] = a1;
  v22[2] = v22[0];
  sub_247A1ADE8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_247A18430((uint64_t)v13, (uint64_t)v11);
  v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  v20 = sub_247A1AE3C();
  if ((v20 & 0x8000000000000000) == 0)
  {
    v19 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_4:
    sub_247A17BF0((uint64_t)v13);
    return v19;
  }
  result = sub_247A1B370();
  __break(1u);
  return result;
}

void sub_247A17F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_247A1AE00();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450480);
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450808);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_247A1AB9C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247A1AE30();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v1 + OBJC_IVAR___STKStickerUsageManager_serializationContextLocation, v11);
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  v15 = (void *)sub_247A1AE24();
  v16 = v1 + OBJC_IVAR___STKStickerUsageManager_dictionary;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v7, v16, v5);
  v18 = v23;
  v17 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v4, *MEMORY[0x24BE184E0], v24);
  sub_247A18658();
  v19 = sub_247A1AE0C();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v17);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  sub_247A1ABD8();
  sub_2479D969C(v19, v21);

}

id StickerUsageManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerUsageManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_247A18430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_254450490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StickerUsageManager()
{
  uint64_t result;

  result = qword_254450430;
  if (!qword_254450430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_247A184B4()
{
  return type metadata accessor for StickerUsageManager();
}

void sub_247A184BC()
{
  unint64_t v0;
  unint64_t v1;

  sub_247A18588();
  if (v0 <= 0x3F)
  {
    sub_247A1AB9C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for StickerUsageManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StickerUsageManager.logSticker(stickerIdentifier:bundleIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StickerUsageManager.stickerCounts(bundleIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

void sub_247A18588()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254450488)
  {
    sub_247A1AE54();
    v0 = sub_247A1ADD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254450488);
  }
}

unint64_t sub_247A18610()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254450440;
  if (!qword_254450440)
  {
    v1 = sub_247A1AB9C();
    result = MEMORY[0x249588058](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_254450440);
  }
  return result;
}

unint64_t sub_247A18658()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576D2FA8;
  if (!qword_2576D2FA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254450480);
    result = MEMORY[0x249588058](MEMORY[0x24BE18400], v1);
    atomic_store(result, (unint64_t *)&qword_2576D2FA8);
  }
  return result;
}

uint64_t sub_247A186A4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = a4;
    v6 = a3;
    v8 = a2;
    v9 = result;
    v7 = a5;
    v10 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v11 = sub_247A1B37C();
  result = swift_bridgeObjectRelease();
LABEL_4:
  if (v11 >= v9)
    v12 = v9;
  else
    v12 = v11;
  if (v11 < 0)
    v12 = v9;
  if (v9)
    v13 = v12;
  else
    v13 = 0;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v15 = sub_247A1B37C();
    result = swift_bridgeObjectRelease();
    if (v15 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    v14 = sub_247A1B37C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 < v13)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v8 & 0xC000000000000001) != 0 && v13)
  {
    sub_247A18988();
    result = 0;
    do
    {
      v16 = result + 1;
      sub_247A1B2F8();
      result = v16;
    }
    while (v13 != v16);
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    v18 = sub_247A1B388();
    v19 = v21;
    v17 = v22;
    v20 = v23;
    result = swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = 0;
    v18 = v8 & 0xFFFFFFFFFFFFFF8;
    v19 = (v8 & 0xFFFFFFFFFFFFFF8) + 32;
    v20 = (2 * v13) | 1;
  }
  *v7 = v18;
  v7[1] = v19;
  v7[2] = v17;
  v7[3] = v20;
  v7[4] = v6;
  v7[5] = v5;
  return result;
}

uint64_t EmojiRecency.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2E820]), sel_initWithMachName_, 0);
  return v0;
}

uint64_t EmojiRecency.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2E820]), sel_initWithMachName_, 0);
  return v0;
}

uint64_t sub_247A188D0(uint64_t a1)
{
  uint64_t v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  _OWORD v9[2];

  objc_msgSend(*(id *)(v1 + 16), sel_readEmojiDefaults);
  v3 = objc_msgSend(*(id *)(v1 + 16), sel_recentEmojis);
  sub_247A18988();
  v4 = sub_247A1B034();

  sub_247A186A4(a1, v4, (uint64_t)sub_247A189C4, 0, (uint64_t *)v8);
  sub_2479E9DFC((uint64_t)v8);
  v6 = v5;
  v9[0] = v8[0];
  v9[1] = v8[1];
  sub_2479EB1E4((uint64_t)v9);
  swift_release();
  return v6;
}

unint64_t sub_247A18988()
{
  unint64_t result;

  result = qword_2576D2FB0;
  if (!qword_2576D2FB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576D2FB0);
  }
  return result;
}

void sub_247A189C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_string);
  if (v3)
  {
    v4 = v3;
    v5 = sub_247A1AEE4();
    v7 = v6;

    *a2 = v5;
    a2[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

id sub_247A18A20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_247A1ACE0();
  if (objc_msgSend(*(id *)(v0 + 16), sel_respondsToSelector_, v1))
    objc_msgSend(objc_retainAutorelease(*(id *)(v0 + 16)), sel_performSelector_, v1);
  return objc_msgSend(*(id *)(v0 + 16), sel_readEmojiDefaults);
}

uint64_t EmojiRecency.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EmojiRecency.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmojiRecency()
{
  return objc_opt_self();
}

uint64_t method lookup function for EmojiRecency()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiRecency.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EmojiRecency.recentEmojis(limit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of EmojiRecency.reloadCachedRecentEmojis()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_247A18B20(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v5 = sub_247A1B37C();
  result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    swift_bridgeObjectRetain();
    v9 = sub_247A1B37C();
    result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    v8 = sub_247A1B37C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for Sticker(0);
    v10 = 0;
    do
    {
      v11 = v10 + 1;
      sub_247A1B2F8();
      v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    v12 = sub_247A1B388();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint8_t *sub_247A18CB8(uint64_t a1)
{
  uint8_t *v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  id v15;
  uint8_t *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _QWORD *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  id v39[2];

  v39[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (uint8_t *)sub_247A1AC8C();
  v37 = *((_QWORD *)v2 - 1);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v6 = (void *)sub_247A1AEC0();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_2479D032C(0, (unint64_t *)&qword_254450938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254450998);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_247A1C830;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2479D4FF8();
  *(_QWORD *)(v8 + 32) = 0x696669746E656469;
  *(_QWORD *)(v8 + 40) = 0xEA00000000007265;
  v9 = sub_247A1AC50();
  *(_QWORD *)(v8 + 96) = sub_2479D032C(0, &qword_254450BE0);
  *(_QWORD *)(v8 + 104) = sub_2479D9EA0();
  *(_QWORD *)(v8 + 72) = v9;
  v10 = (void *)sub_247A1B0F4();
  objc_msgSend(v7, sel_setPredicate_, v10);

  v39[0] = 0;
  v11 = objc_msgSend(v7, sel_execute_, v39);
  v12 = v39[0];
  if (!v11)
  {
    v17 = v39[0];
    v18 = (void *)sub_247A1AADC();

    swift_willThrow();
    v19 = v18;
    v20 = v18;
    v21 = sub_247A1ADA0();
    v22 = sub_247A1B118();
    if (os_log_type_enabled(v21, v22))
    {
      v2 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v2 = 138412290;
      v24 = v18;
      v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v39[0] = v25;
      sub_247A1B208();
      *v23 = v25;

      _os_log_impl(&dword_2479C5000, v21, v22, "Could not fetch sticker: %@", v2, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v23, -1, -1);
      MEMORY[0x249588124](v2, -1, -1);

    }
    else
    {

    }
LABEL_16:
    swift_willThrow();
    return v2;
  }
  v13 = v11;
  type metadata accessor for ManagedSticker();
  v14 = sub_247A1B034();
  v15 = v12;

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_247A1B37C();
    swift_bridgeObjectRelease();
    if (v26)
      goto LABEL_4;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    v27 = v37;
    (*(void (**)(char *, uint64_t, uint8_t *))(v37 + 16))(v4, a1, v2);
    v28 = sub_247A1ADA0();
    v29 = sub_247A1B118();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = (void *)swift_slowAlloc();
      v39[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v36[1] = v30 + 4;
      sub_2479D1618();
      v32 = sub_247A1B4CC();
      v38 = sub_2479CCA28(v32, v33, (uint64_t *)v39);
      sub_247A1B208();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint8_t *))(v27 + 8))(v4, v2);
      _os_log_impl(&dword_2479C5000, v28, v29, "Unknown sticker %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x249588124](v31, -1, -1);
      MEMORY[0x249588124](v30, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint8_t *))(v27 + 8))(v4, v2);
    }
    sub_2479CF054();
    swift_allocError();
    *v34 = 2;
    goto LABEL_16;
  }
LABEL_4:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v16 = (uint8_t *)MEMORY[0x249587908](0, v14);
  }
  else
  {
    if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v16 = (uint8_t *)*(id *)(v14 + 32);
  }
  v2 = v16;
  swift_bridgeObjectRelease();
  return v2;
}

void sub_247A19268()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v13[0] = 0;
  if (objc_msgSend(v1, sel_save_, v13))
  {
    v2 = v13[0];
  }
  else
  {
    v3 = v13[0];
    v4 = (void *)sub_247A1AADC();

    swift_willThrow();
    v5 = v4;
    v6 = v4;
    v7 = sub_247A1ADA0();
    v8 = sub_247A1B118();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v11 = v4;
      v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v13[0] = v12;
      sub_247A1B208();
      *v10 = v12;

      _os_log_impl(&dword_2479C5000, v7, v8, "Could not save sticker: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v10, -1, -1);
      MEMORY[0x249588124](v9, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_247A19480()
{
  return _s6UpdateCMa();
}

uint64_t _s6UpdateCMa()
{
  uint64_t result;

  result = qword_2544509C0;
  if (!qword_2544509C0)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for StickerSpotlightItemAttributeKey()
{
  return &type metadata for StickerSpotlightItemAttributeKey;
}

id sub_247A19500(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  char v18;
  id v19;
  void *v20;
  unsigned int v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  NSObject *v33;
  uint64_t v34;
  uint8_t *v35;
  _QWORD *v36;
  id v37;
  id v38;
  id v40;

  type metadata accessor for ManagedRepresentation();
  v2 = swift_dynamicCastClass();
  if (!v2)
  {
    type metadata accessor for ManagedSticker();
    v10 = swift_dynamicCastClass();
    v11 = a1;
    v12 = v11;
    if (v10)
    {
      v13 = v11;
      v14 = sub_247A1ADA0();
      v15 = sub_247A1B10C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v16 = 138412290;
        v13 = v13;
        sub_247A1B208();
        *v17 = v10;

        _os_log_impl(&dword_2479C5000, v14, v15, "Ignoring indexing sticker object: %@", v16, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
        swift_arrayDestroy();
        MEMORY[0x249588124](v17, -1, -1);
        MEMORY[0x249588124](v16, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v33 = sub_247A1ADA0();
      v34 = sub_247A1B118();
      if (os_log_type_enabled(v33, (os_log_type_t)v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v35 = 138412290;
        v37 = v12;
        sub_247A1B208();
        *v36 = v12;

        _os_log_impl(&dword_2479C5000, v33, (os_log_type_t)v34, "Could not create attributes for %@", v35, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
        swift_arrayDestroy();
        MEMORY[0x249588124](v36, -1, -1);
        MEMORY[0x249588124](v35, -1, -1);
      }
      else
      {

      }
    }
    return 0;
  }
  v3 = (void *)v2;
  v4 = a1;
  v5 = objc_msgSend(v3, sel_role);
  if (!v5)
    goto LABEL_15;
  v6 = v5;
  v7 = sub_247A1AEE4();
  v9 = v8;

  if (v7 == 0xD00000000000001DLL && v9 == 0x8000000247A1EFD0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = sub_247A1B4E4();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      goto LABEL_15;
  }
  v19 = objc_msgSend(v3, sel_sticker);
  if (!v19 || (v20 = v19, v21 = objc_msgSend(v19, sel_type), v20, v21 != 1))
  {
LABEL_15:
    v28 = v4;
    v29 = sub_247A1ADA0();
    v30 = sub_247A1B10C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v31 = 138412290;
      v28 = v28;
      sub_247A1B208();
      *v32 = v3;

      _os_log_impl(&dword_2479C5000, v29, v30, "Ignoring index representation object: %@", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v32, -1, -1);
      MEMORY[0x249588124](v31, -1, -1);
    }
    else
    {

    }
    return 0;
  }
  v22 = v4;
  v23 = sub_247A1ADA0();
  v24 = sub_247A1B10C();
  if (os_log_type_enabled(v23, v24))
  {
    v40 = v22;
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v25 = 138412290;
    v27 = v22;
    sub_247A1B208();
    *v26 = v3;

    v22 = v40;
    _os_log_impl(&dword_2479C5000, v23, v24, "Will index %@", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    swift_arrayDestroy();
    MEMORY[0x249588124](v26, -1, -1);
    MEMORY[0x249588124](v25, -1, -1);
  }
  else
  {

  }
  v38 = sub_247A19B20(v3);

  return v38;
}

id sub_247A19B20(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  id v41;
  void *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  void *v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  id v56;
  char *v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  char *v66;
  void *v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  id v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  NSObject *v83;
  void (*v84)(char *, id);
  id v85;
  NSObject *v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  _QWORD *v90;
  NSObject *v91;
  char *v92;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  NSObject *v97;
  os_log_type_t v98;
  _BOOL4 v99;
  char *v100;
  uint8_t *v101;
  void (*v102)(char *, void *);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint8_t *v107;
  char *v108;
  uint64_t v109;
  NSObject *v110;
  char *v111;
  id v112;
  char *v113;
  id v114;
  uint64_t v115;
  NSObject *v116;

  v3 = sub_247A1AC2C();
  v106 = *(_QWORD *)(v3 - 8);
  v107 = (uint8_t *)v3;
  MEMORY[0x24BDAC7A8](v3);
  v105 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254450A70);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v110 = ((char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v103 - v8;
  v10 = sub_247A1AC8C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v108 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v103 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v111 = (char *)&v103 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254450840);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_247A1AD04();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = a1;
  v25 = objc_msgSend(a1, "uti");
  if (!v25)
  {
    v32 = sub_247A1ADA0();
    v39 = sub_247A1B118();
    if (!os_log_type_enabled(v32, v39))
    {
LABEL_20:

      return 0;
    }
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_2479C5000, v32, v39, ".uti is nil -- this record is probably syncing down for the first time", v40, 2u);
    v38 = (uint64_t)v40;
LABEL_7:
    MEMORY[0x249588124](v38, -1, -1);
    goto LABEL_20;
  }
  v26 = v25;
  v112 = v1;
  v113 = v24;
  v109 = v11;
  v27 = sub_247A1AEE4();
  v29 = v28;

  swift_bridgeObjectRetain();
  sub_247A1AD10();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_2479D045C((uint64_t)v20, (uint64_t *)&unk_254450840);
    v30 = v114;
    swift_bridgeObjectRetain();
    v31 = v30;
    v32 = sub_247A1ADA0();
    v33 = sub_247A1B118();
    if (!os_log_type_enabled(v32, v33))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_20;
    }
    v34 = swift_slowAlloc();
    v35 = (_QWORD *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v116 = v36;
    *(_DWORD *)v34 = 136315394;
    swift_bridgeObjectRetain();
    v115 = sub_2479CCA28(v27, v29, (uint64_t *)&v116);
    sub_247A1B208();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2112;
    v115 = (uint64_t)v31;
    v37 = v31;
    sub_247A1B208();
    *v35 = v31;

    _os_log_impl(&dword_2479C5000, v32, v33, "Could not create UTType from %s for %@", (uint8_t *)v34, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
    swift_arrayDestroy();
    MEMORY[0x249588124](v35, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x249588124](v36, -1, -1);
    v38 = v34;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v113, v20, v21);
  v41 = objc_msgSend(v114, sel_identifier);
  v103 = v22;
  v104 = v21;
  if (!v41)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v9, 1, 1, v10);
    goto LABEL_22;
  }
  v42 = v41;
  sub_247A1AC68();

  v43 = v109;
  v44 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
  v45 = (void *)v10;
  v44(v9, v16, v10);
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  v46(v9, 0, 1, v10);
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  if (v47(v9, 1, v10) == 1)
  {
LABEL_22:
    sub_2479D045C((uint64_t)v9, &qword_254450A70);
    v86 = v114;
    v87 = sub_247A1ADA0();
    v88 = sub_247A1B118();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      v90 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v89 = 138412290;
      v116 = v86;
      v91 = v86;
      sub_247A1B208();
      *v90 = v86;

      _os_log_impl(&dword_2479C5000, v87, v88, ".identifier is nil -- this record is probably syncing down for the first time: %@", v89, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254450BF8);
      swift_arrayDestroy();
      MEMORY[0x249588124](v90, -1, -1);
      MEMORY[0x249588124](v89, -1, -1);
    }
    else
    {

      v87 = v86;
    }
    v92 = v113;

    (*(void (**)(char *, uint64_t))(v103 + 8))(v92, v104);
    return 0;
  }
  v48 = v111;
  v44(v111, v9, (uint64_t)v45);
  v49 = objc_msgSend(v114, sel_sticker);
  if (!v49)
  {
    v94 = sub_247A1ADA0();
    v95 = sub_247A1B118();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v96 = 0;
      _os_log_impl(&dword_2479C5000, v94, v95, ".sticker is nil -- this record is probably syncing down for the first time", v96, 2u);
      MEMORY[0x249588124](v96, -1, -1);
    }

    (*(void (**)(char *, void *))(v109 + 8))(v48, v45);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v113, v104);
    return 0;
  }
  v50 = v49;
  v51 = objc_msgSend(v49, sel_identifier);
  if (!v51)
  {
    v53 = (uint64_t)v110;
    v46((char *)v110, 1, 1, (uint64_t)v45);
    v55 = v109;
    goto LABEL_32;
  }
  v52 = v51;
  sub_247A1AC68();

  v53 = (uint64_t)v110;
  v44((char *)v110, v16, (uint64_t)v45);
  v46((char *)v53, 0, 1, (uint64_t)v45);
  v54 = v47((char *)v53, 1, (uint64_t)v45);
  v55 = v109;
  if (v54 == 1)
  {
LABEL_32:
    sub_2479D045C(v53, &qword_254450A70);
    v97 = sub_247A1ADA0();
    v98 = sub_247A1B118();
    v99 = os_log_type_enabled(v97, v98);
    v100 = v113;
    if (v99)
    {
      v101 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v101 = 0;
      _os_log_impl(&dword_2479C5000, v97, v98, "sticker.identifier is nil -- this record is probably syncing down for the first time", v101, 2u);
      MEMORY[0x249588124](v101, -1, -1);
    }

    (*(void (**)(char *, void *))(v55 + 8))(v48, v45);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v100, v104);
    return 0;
  }
  v44(v108, (char *)v53, (uint64_t)v45);
  v56 = objc_allocWithZone(MEMORY[0x24BDC2480]);
  v57 = v113;
  v58 = (void *)sub_247A1ACF8();
  v59 = objc_msgSend(v56, sel_initWithContentType_, v58);

  sub_247A1AC44();
  v60 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_setIdentifier_, v60);

  sub_247A1AC44();
  v61 = (void *)sub_247A1AEC0();
  swift_bridgeObjectRelease();
  v62 = (void *)sub_247A1AEC0();
  objc_msgSend(v59, sel_setAttribute_forKey_, v61, v62);

  objc_msgSend(v114, sel_byteCount);
  v63 = (void *)sub_247A1B55C();
  v64 = (void *)sub_247A1AEC0();
  objc_msgSend(v59, sel_setAttribute_forKey_, v63, v64);

  sub_2479DD200();
  v65 = (void *)sub_247A1B1A8();
  objc_msgSend(v59, sel_setEligibleForPhotosProcessing_, v65);

  objc_msgSend(v50, sel_lastUsedDate);
  v66 = v105;
  sub_247A1ABE4();
  v67 = (void *)sub_247A1AC08();
  (*(void (**)(char *, uint8_t *))(v106 + 8))(v66, v107);
  objc_msgSend(v59, sel_setLastUsedDate_, v67);

  v68 = objc_msgSend(v50, sel_searchText);
  if (v68)
  {
    v69 = v68;
    v70 = (void *)sub_247A1AEC0();
    objc_msgSend(v59, sel_setAttribute_forKey_, v69, v70);

  }
  v71 = objc_msgSend(v50, sel_accessibilityName, v103);
  if (v71)
  {
    v72 = v71;
    v73 = (void *)sub_247A1AEC0();
    objc_msgSend(v59, sel_setAttribute_forKey_, v72, v73);

  }
  v74 = v59;
  v75 = sub_247A1ADA0();
  v76 = sub_247A1B10C();
  if (os_log_type_enabled(v75, v76))
  {
    v77 = (uint8_t *)swift_slowAlloc();
    v110 = swift_slowAlloc();
    v116 = v110;
    *(_DWORD *)v77 = 136315138;
    v107 = v77 + 4;
    v78 = objc_msgSend(v74, sel_attributeDictionary);
    v114 = v45;
    v79 = v78;
    v112 = v50;
    sub_247A1AE6C();

    v80 = sub_247A1AE78();
    v82 = v81;
    swift_bridgeObjectRelease();
    v115 = sub_2479CCA28(v80, v82, (uint64_t *)&v116);
    sub_247A1B208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2479C5000, v75, v76, "Attributes: %s", v77, 0xCu);
    v83 = v110;
    swift_arrayDestroy();
    MEMORY[0x249588124](v83, -1, -1);
    MEMORY[0x249588124](v77, -1, -1);

    v84 = *(void (**)(char *, id))(v109 + 8);
    v85 = v114;
    v84(v108, v114);
    v84(v111, v85);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v113, v104);
  }
  else
  {

    v102 = *(void (**)(char *, void *))(v109 + 8);
    v102(v108, v45);
    v102(v48, v45);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v104);
  }
  return v74;
}

id sub_247A1A8C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerSpotlightDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_247A1A938()
{
  return type metadata accessor for StickerSpotlightDelegate();
}

uint64_t type metadata accessor for StickerSpotlightDelegate()
{
  uint64_t result;

  result = qword_254450CA8;
  if (!qword_254450CA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_247A1A97C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_247A1ADB8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_247A1A9EC()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_247A1A9F8()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_247A1AA04()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_247A1AA10()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_247A1AA1C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_247A1AA28()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_247A1AA34()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_247A1AA40()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_247A1AA4C()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_247A1AA58()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_247A1AA64()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_247A1AA70()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_247A1AA7C()
{
  return MEMORY[0x24BDCBF08]();
}

uint64_t sub_247A1AA88()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_247A1AA94()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_247A1AAA0()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_247A1AAAC()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_247A1AAB8()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_247A1AAC4()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_247A1AAD0()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_247A1AADC()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_247A1AAE8()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_247A1AAF4()
{
  return MEMORY[0x24BDCD750]();
}

uint64_t sub_247A1AB00()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_247A1AB0C()
{
  return MEMORY[0x24BDCD830]();
}

uint64_t sub_247A1AB18()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_247A1AB24()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_247A1AB30()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_247A1AB3C()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_247A1AB48()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_247A1AB54()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_247A1AB60()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_247A1AB6C()
{
  return MEMORY[0x24BDCDA48]();
}

uint64_t sub_247A1AB78()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_247A1AB84()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_247A1AB90()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_247A1AB9C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_247A1ABA8()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_247A1ABB4()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_247A1ABC0()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_247A1ABCC()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_247A1ABD8()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_247A1ABE4()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_247A1ABF0()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_247A1ABFC()
{
  return MEMORY[0x24BDCE2F8]();
}

uint64_t sub_247A1AC08()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_247A1AC14()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_247A1AC20()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_247A1AC2C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_247A1AC38()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_247A1AC44()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_247A1AC50()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_247A1AC5C()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_247A1AC68()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_247A1AC74()
{
  return MEMORY[0x24BDCEA30]();
}

uint64_t sub_247A1AC80()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_247A1AC8C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_247A1AC98()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_247A1ACA4()
{
  return MEMORY[0x24BDCF380]();
}

uint64_t sub_247A1ACB0()
{
  return MEMORY[0x24BDCF390]();
}

uint64_t sub_247A1ACBC()
{
  return MEMORY[0x24BDCF3E8]();
}

uint64_t sub_247A1ACC8()
{
  return MEMORY[0x24BDCF410]();
}

uint64_t sub_247A1ACD4()
{
  return MEMORY[0x24BDCF428]();
}

uint64_t sub_247A1ACE0()
{
  return MEMORY[0x24BEE5BB0]();
}

uint64_t sub_247A1ACEC()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_247A1ACF8()
{
  return MEMORY[0x24BEE6238]();
}

uint64_t sub_247A1AD04()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_247A1AD10()
{
  return MEMORY[0x24BEE6410]();
}

uint64_t sub_247A1AD1C()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_247A1AD28()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_247A1AD34()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_247A1AD40()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_247A1AD4C()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_247A1AD58()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_247A1AD64()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_247A1AD70()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_247A1AD7C()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_247A1AD88()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_247A1AD94()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_247A1ADA0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_247A1ADAC()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_247A1ADB8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_247A1ADC4()
{
  return MEMORY[0x24BE183D0]();
}

uint64_t sub_247A1ADD0()
{
  return MEMORY[0x24BE183D8]();
}

uint64_t sub_247A1ADDC()
{
  return MEMORY[0x24BE183E8]();
}

uint64_t sub_247A1ADE8()
{
  return MEMORY[0x24BE183F0]();
}

uint64_t sub_247A1ADF4()
{
  return MEMORY[0x24BE183F8]();
}

uint64_t sub_247A1AE00()
{
  return MEMORY[0x24BE184E8]();
}

uint64_t sub_247A1AE0C()
{
  return MEMORY[0x24BE186C0]();
}

uint64_t sub_247A1AE18()
{
  return MEMORY[0x24BE186C8]();
}

uint64_t sub_247A1AE24()
{
  return MEMORY[0x24BE189C8]();
}

uint64_t sub_247A1AE30()
{
  return MEMORY[0x24BE189D0]();
}

uint64_t sub_247A1AE3C()
{
  return MEMORY[0x24BE189E8]();
}

uint64_t sub_247A1AE48()
{
  return MEMORY[0x24BE189F0]();
}

uint64_t sub_247A1AE54()
{
  return MEMORY[0x24BE18A08]();
}

uint64_t sub_247A1AE60()
{
  return MEMORY[0x24BE18A18]();
}

uint64_t sub_247A1AE6C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_247A1AE78()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_247A1AE84()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_247A1AE90()
{
  return MEMORY[0x24BEE06E8]();
}

uint64_t sub_247A1AE9C()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_247A1AEA8()
{
  return MEMORY[0x24BDCF858]();
}

uint64_t sub_247A1AEB4()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_247A1AEC0()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_247A1AECC()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_247A1AED8()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_247A1AEE4()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_247A1AEF0()
{
  return MEMORY[0x24BDCFB30]();
}

uint64_t sub_247A1AEFC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_247A1AF08()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_247A1AF14()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_247A1AF20()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_247A1AF2C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_247A1AF38()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_247A1AF44()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_247A1AF50()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_247A1AF5C()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_247A1AF68()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_247A1AF74()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_247A1AF80()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_247A1AF8C()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_247A1AF98()
{
  return MEMORY[0x24BEE0CD8]();
}

uint64_t sub_247A1AFA4()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_247A1AFB0()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_247A1AFBC()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_247A1AFC8()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_247A1AFD4()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_247A1AFE0()
{
  return MEMORY[0x24BEE0E98]();
}

uint64_t sub_247A1AFEC()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_247A1AFF8()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_247A1B004()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_247A1B010()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_247A1B01C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_247A1B028()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_247A1B034()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_247A1B040()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_247A1B04C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_247A1B058()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_247A1B064()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_247A1B070()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_247A1B07C()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_247A1B088()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_247A1B094()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_247A1B0A0()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_247A1B0AC()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_247A1B0B8()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_247A1B0C4()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_247A1B0D0()
{
  return MEMORY[0x24BDCFCD0]();
}

uint64_t sub_247A1B0DC()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_247A1B0E8()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_247A1B0F4()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_247A1B100()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_247A1B10C()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_247A1B118()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_247A1B124()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_247A1B130()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_247A1B13C()
{
  return MEMORY[0x24BDCFF98]();
}

uint64_t sub_247A1B148()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_247A1B154()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_247A1B160()
{
  return MEMORY[0x24BEE7958]();
}

uint64_t sub_247A1B16C()
{
  return MEMORY[0x24BDBB360]();
}

uint64_t sub_247A1B178()
{
  return MEMORY[0x24BDBB388]();
}

uint64_t sub_247A1B184()
{
  return MEMORY[0x24BDBD840]();
}

uint64_t sub_247A1B190()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_247A1B19C()
{
  return MEMORY[0x24BDD0190]();
}

uint64_t sub_247A1B1A8()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_247A1B1B4()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_247A1B1C0()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_247A1B1CC()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_247A1B1D8()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_247A1B1E4()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_247A1B1F0()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_247A1B1FC()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_247A1B208()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_247A1B214()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_247A1B220()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_247A1B22C()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_247A1B238()
{
  return MEMORY[0x24BDD0620]();
}

uint64_t sub_247A1B244()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_247A1B250()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_247A1B25C()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_247A1B268()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_247A1B274()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_247A1B280()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_247A1B28C()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_247A1B298()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_247A1B2A4()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_247A1B2B0()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_247A1B2BC()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_247A1B2C8()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_247A1B2D4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_247A1B2E0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_247A1B2EC()
{
  return MEMORY[0x24BEE2578]();
}

uint64_t sub_247A1B2F8()
{
  return MEMORY[0x24BEE2648]();
}

uint64_t sub_247A1B304()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_247A1B310()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_247A1B31C()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_247A1B328()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_247A1B334()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_247A1B340()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_247A1B34C()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_247A1B358()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_247A1B364()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_247A1B370()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_247A1B37C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_247A1B388()
{
  return MEMORY[0x24BEE3070]();
}

uint64_t sub_247A1B394()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_247A1B3A0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_247A1B3AC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_247A1B3B8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_247A1B3C4()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_247A1B3D0()
{
  return MEMORY[0x24BEE3278]();
}

uint64_t sub_247A1B3DC()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_247A1B3E8()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_247A1B3F4()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_247A1B400()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_247A1B40C()
{
  return MEMORY[0x24BEE3328]();
}

uint64_t sub_247A1B418()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_247A1B424()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_247A1B430()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_247A1B43C()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_247A1B448()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_247A1B454()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_247A1B460()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_247A1B46C()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_247A1B478()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_247A1B484()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_247A1B490()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_247A1B49C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_247A1B4A8()
{
  return MEMORY[0x24BEE34F0]();
}

uint64_t sub_247A1B4B4()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_247A1B4C0()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_247A1B4CC()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_247A1B4D8()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_247A1B4E4()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_247A1B4F0()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_247A1B4FC()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_247A1B508()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_247A1B514()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_247A1B520()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_247A1B52C()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_247A1B538()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_247A1B544()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_247A1B550()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_247A1B55C()
{
  return MEMORY[0x24BDD0730]();
}

uint64_t sub_247A1B568()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_247A1B574()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_247A1B580()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_247A1B58C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_247A1B598()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_247A1B5A4()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_247A1B5B0()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_247A1B5BC()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t CNRunWithLock()
{
  return MEMORY[0x24BE191E0]();
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x24BE04728]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

