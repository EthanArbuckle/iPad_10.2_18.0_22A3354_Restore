id DIV_LOG_CLIENT()
{
  if (DIV_LOG_CLIENT_once != -1)
    dispatch_once(&DIV_LOG_CLIENT_once, &__block_literal_global);
  return (id)DIV_LOG_CLIENT_log;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

id DIV_LOG_CLIENT_0()
{
  if (DIV_LOG_CLIENT_once_0 != -1)
    dispatch_once(&DIV_LOG_CLIENT_once_0, &__block_literal_global_0);
  return (id)DIV_LOG_CLIENT_log_0;
}

void sub_20A113418(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id DIV_LOG_SIGNPOST()
{
  if (DIV_LOG_SIGNPOST_once != -1)
    dispatch_once(&DIV_LOG_SIGNPOST_once, &__block_literal_global_1);
  return (id)DIV_LOG_SIGNPOST_log;
}

id DIV_LOG_CLIENT_1()
{
  if (DIV_LOG_CLIENT_once_1 != -1)
    dispatch_once(&DIV_LOG_CLIENT_once_1, &__block_literal_global_117);
  return (id)DIV_LOG_CLIENT_log_1;
}

void MobileDocumentReaderSession.State.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for MobileDocumentReaderResponse(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for MobileDocumentReaderSession.State();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A11EAA0(v0, (uint64_t)v5);
  v6 = (char *)sub_20A11E9F8
     + 4 * byte_20A1ABBE0[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v5, 3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_20A11E9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20A12063C(v2, v0, type metadata accessor for MobileDocumentReaderResponse);
  sub_20A1A9318();
  MobileDocumentReaderResponse.hash(into:)(v1);
  return sub_20A124284(v0, type metadata accessor for MobileDocumentReaderResponse);
}

uint64_t type metadata accessor for MobileDocumentReaderSession.State()
{
  uint64_t result;

  result = qword_2545D81B8;
  if (!qword_2545D81B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A11EAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentReaderSession.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A11EAE8()
{
  return 0;
}

uint64_t sub_20A11EAF4()
{
  return 0;
}

void sub_20A11EB00(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_20A11EB0C()
{
  sub_20A120510();
  return sub_20A1A9360();
}

uint64_t sub_20A11EB34()
{
  sub_20A120510();
  return sub_20A1A936C();
}

BOOL sub_20A11EB5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20A11EB70()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A11EBB4()
{
  return sub_20A1A9318();
}

uint64_t sub_20A11EBDC()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A11EC1C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A11EC48 + 4 * byte_20A1ABBE4[*v0]))(0x7964616572, 0xE500000000000000);
}

uint64_t sub_20A11EC48()
{
  return 0x697463656E6E6F63;
}

unint64_t sub_20A11EC64()
{
  return 0xD000000000000010;
}

uint64_t sub_20A11EC80()
{
  return 0x64656873696E6966;
}

uint64_t sub_20A11EC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A124090(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A11ECBC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_20A11ECC8()
{
  sub_20A120488();
  return sub_20A1A9360();
}

uint64_t sub_20A11ECF0()
{
  sub_20A120488();
  return sub_20A1A936C();
}

uint64_t sub_20A11ED18()
{
  sub_20A120554();
  return sub_20A1A9360();
}

uint64_t sub_20A11ED40()
{
  sub_20A120554();
  return sub_20A1A936C();
}

uint64_t sub_20A11ED68()
{
  return 1;
}

uint64_t sub_20A11ED70()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A11EDB0()
{
  return sub_20A1A9318();
}

uint64_t sub_20A11EDD4()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A11EE10()
{
  return 12383;
}

uint64_t sub_20A11EE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A11EE98()
{
  sub_20A1204CC();
  return sub_20A1A9360();
}

uint64_t sub_20A11EEC0()
{
  sub_20A1204CC();
  return sub_20A1A936C();
}

uint64_t sub_20A11EEE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_20A11EF14()
{
  sub_20A120598();
  return sub_20A1A9360();
}

uint64_t sub_20A11EF3C()
{
  sub_20A120598();
  return sub_20A1A936C();
}

void MobileDocumentReaderSession.State.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD v17[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8118);
  v17[5] = *(_QWORD *)(v2 - 8);
  v17[6] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v17[4] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MobileDocumentReaderResponse(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v17[3] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8120);
  v17[11] = *(_QWORD *)(v7 - 8);
  v17[12] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[10] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8128);
  v17[8] = *(_QWORD *)(v9 - 8);
  v17[9] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[7] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8130);
  v17[1] = *(_QWORD *)(v11 - 8);
  v17[2] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for MobileDocumentReaderSession.State();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8138);
  v17[13] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A120488();
  sub_20A1A9354();
  sub_20A11EAA0(v17[15], (uint64_t)v14);
  v16 = (char *)sub_20A11F1B0
      + 4 * byte_20A1ABBE8[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 3, v4)];
  __asm { BR              X10 }
}

uint64_t sub_20A11F1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v3 - 184);
  sub_20A12063C(v2, v4, type metadata accessor for MobileDocumentReaderResponse);
  *(_BYTE *)(v3 - 65) = 3;
  sub_20A1204CC();
  v5 = *(_QWORD *)(v3 - 176);
  sub_20A1A91D4();
  sub_20A1205FC(&qword_2545DB040, type metadata accessor for MobileDocumentReaderResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse);
  v6 = *(_QWORD *)(v3 - 160);
  sub_20A1A9228();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 168) + 8))(v5, v6);
  sub_20A124284(v4, type metadata accessor for MobileDocumentReaderResponse);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v1, v0);
}

void MobileDocumentReaderSession.State.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for MobileDocumentReaderResponse(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = type metadata accessor for MobileDocumentReaderSession.State();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A11EAA0(v1, (uint64_t)v6);
  v7 = (char *)sub_20A11F434
     + 4 * byte_20A1ABBEC[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 3, v2)];
  __asm { BR              X10 }
}

uint64_t sub_20A11F434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20A12063C(v1, v0, type metadata accessor for MobileDocumentReaderResponse);
  sub_20A1A9318();
  MobileDocumentReaderResponse.hash(into:)(v2 - 120);
  sub_20A124284(v0, type metadata accessor for MobileDocumentReaderResponse);
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderSession.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  _QWORD v27[15];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v27[13] = a2;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8168);
  v27[9] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27[12] = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8170);
  v27[7] = *(_QWORD *)(v4 - 8);
  v27[8] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v27[11] = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8178);
  v27[5] = *(_QWORD *)(v6 - 8);
  v27[6] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v27[14] = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8180);
  v27[3] = *(_QWORD *)(v8 - 8);
  v27[4] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v27[10] = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8188);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MobileDocumentReaderSession.State();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v27 - v18;
  v20 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_20A120488();
  v21 = v30;
  sub_20A1A9348();
  if (!v21)
  {
    v27[1] = v17;
    v27[2] = v19;
    v30 = v11;
    v22 = sub_20A1A91C8();
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v23 = sub_20A1A90B4();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v25 = v14;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

uint64_t sub_20A11FAE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderSession.State.init(from:)(a1, a2);
}

void sub_20A11FAFC(_QWORD *a1)
{
  MobileDocumentReaderSession.State.encode(to:)(a1);
}

void sub_20A11FB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for MobileDocumentReaderResponse(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A11EAA0(v0, (uint64_t)v5);
  v6 = (char *)sub_20A11FBD4
     + 4 * byte_20A1ABBF4[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v5, 3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_20A11FBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20A12063C(v2, v0, type metadata accessor for MobileDocumentReaderResponse);
  sub_20A1A9318();
  MobileDocumentReaderResponse.hash(into:)(v1);
  return sub_20A124284(v0, type metadata accessor for MobileDocumentReaderResponse);
}

void sub_20A11FC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for MobileDocumentReaderResponse(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A11EAA0(v1, (uint64_t)v6);
  v7 = (char *)sub_20A11FD14
     + 4 * byte_20A1ABBF8[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 3, v2)];
  __asm { BR              X10 }
}

uint64_t sub_20A11FD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20A12063C(v1, v0, type metadata accessor for MobileDocumentReaderResponse);
  sub_20A1A9318();
  MobileDocumentReaderResponse.hash(into:)(v2 - 136);
  sub_20A124284(v0, type metadata accessor for MobileDocumentReaderResponse);
  return sub_20A1A933C();
}

id sub_20A11FDA0()
{
  id *v0;

  return *v0;
}

uint64_t sub_20A11FDA8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_20A11FDB0()
{
  sub_20A1205FC(&qword_2545D8210, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1AC);
  return sub_20A1A92B8();
}

uint64_t sub_20A11FDF0()
{
  sub_20A1205FC(&qword_2545D8210, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1AC);
  return sub_20A1A92AC();
}

uint64_t sub_20A11FE34()
{
  sub_20A1205FC(&qword_2545D8248, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1F0);
  return sub_20A1A8B68();
}

uint64_t sub_20A11FE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD21434](&unk_20A1AC0D4, a3);
  return sub_20A1A8CE8();
}

uint64_t sub_20A11FEC0()
{
  return sub_20A1A8DB4();
}

uint64_t sub_20A11FED0()
{
  sub_20A1205FC(&qword_2545D8248, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1F0);
  return sub_20A1A8BA4();
}

uint64_t sub_20A11FF10()
{
  sub_20A1205FC(&qword_2545D8248, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1F0);
  return sub_20A1A8B80();
}

uint64_t sub_20A11FF50(void *a1)
{
  id v2;

  sub_20A1205FC(&qword_2545D8248, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1F0);
  v2 = a1;
  return sub_20A1A8B74();
}

uint64_t sub_20A11FFB4()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_20A1A8FDC();

  return v2;
}

uint64_t sub_20A11FFE8()
{
  sub_20A1205FC(&qword_2545D8248, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1F0);
  return sub_20A1A8B98();
}

uint64_t sub_20A120038()
{
  sub_20A1A930C();
  sub_20A1A8D60();
  return sub_20A1A933C();
}

_QWORD *sub_20A120094@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_20A1200A4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_20A1200B0()
{
  sub_20A1205FC(&qword_2545D8248, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1F0);
  return sub_20A1A8B8C();
}

BOOL sub_20A120108(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20A12011C(uint64_t a1)
{
  MEMORY[0x20BD21434](&unk_20A1AC0D4, a1);
  return sub_20A1A8D00();
}

uint64_t sub_20A120158()
{
  MEMORY[0x20BD21434](&unk_20A1AC0D4);
  return sub_20A1A8CF4();
}

uint64_t sub_20A1201A0(uint64_t a1, uint64_t a2)
{
  sub_20A1A930C();
  MEMORY[0x20BD21434](&unk_20A1AC0D4, a2);
  sub_20A1A8CF4();
  return sub_20A1A933C();
}

void _s7CoreIDV27MobileDocumentReaderSessionC5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for MobileDocumentReaderResponse(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = type metadata accessor for MobileDocumentReaderSession.State();
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82A0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_20A11EAA0(a1, (uint64_t)v10);
  sub_20A11EAA0(a2, v11);
  v12 = (char *)sub_20A12030C
      + 4 * byte_20A1ABBFC[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 3, v4)];
  __asm { BR              X10 }
}

uint64_t sub_20A12030C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  char v6;

  sub_20A11EAA0(v0, v3);
  if (v4(v5, 3, v1))
  {
    sub_20A124284(v3, type metadata accessor for MobileDocumentReaderResponse);
    sub_20A124244(v0);
    v6 = 0;
  }
  else
  {
    sub_20A12063C(v5, (uint64_t)v2, type metadata accessor for MobileDocumentReaderResponse);
    v6 = _s7CoreIDV28MobileDocumentReaderResponseV2eeoiySbAC_ACtFZ_0(v3, v2);
    sub_20A124284((uint64_t)v2, type metadata accessor for MobileDocumentReaderResponse);
    sub_20A124284(v3, type metadata accessor for MobileDocumentReaderResponse);
    sub_20A124284(v0, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
  }
  return v6 & 1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x20BD2141C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_20A120488()
{
  unint64_t result;

  result = qword_2545D8140;
  if (!qword_2545D8140)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC484, &_s5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8140);
  }
  return result;
}

unint64_t sub_20A1204CC()
{
  unint64_t result;

  result = qword_2545D8148;
  if (!qword_2545D8148)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC434, &_s5StateO18FinishedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8148);
  }
  return result;
}

unint64_t sub_20A120510()
{
  unint64_t result;

  result = qword_2545D8150;
  if (!qword_2545D8150)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC3E4, &_s5StateO26AwaitingApprovalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8150);
  }
  return result;
}

unint64_t sub_20A120554()
{
  unint64_t result;

  result = qword_2545D8158;
  if (!qword_2545D8158)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC394, &_s5StateO20ConnectingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8158);
  }
  return result;
}

unint64_t sub_20A120598()
{
  unint64_t result;

  result = qword_2545D8160;
  if (!qword_2545D8160)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC344, &_s5StateO15ReadyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8160);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_20A1205FC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x20BD21434](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A12063C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A120680()
{
  return sub_20A1205FC(&qword_2545D81A0, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession.State, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession.State);
}

unint64_t *_s5StateOwCP(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  void (*v74)(unint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  char *v77;
  char *__dst;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MobileDocumentReaderResponse(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      if (v10 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        v11 = *a2;
        sub_20A120BD8(*a2, a2[1]);
        *a1 = v11;
        a1[1] = v10;
      }
      v12 = (uint64_t *)(a2 + 2);
      v13 = a2[3];
      if (v13 >> 60 == 15)
      {
        *((_OWORD *)a1 + 1) = *(_OWORD *)v12;
      }
      else
      {
        v14 = *v12;
        sub_20A120BD8(*v12, a2[3]);
        a1[2] = v14;
        a1[3] = v13;
      }
      v15 = *(int *)(v7 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
      v19 = *((_QWORD *)v18 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = sub_20A1A8B5C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        v16[v18[5]] = v17[v18[5]];
        v22 = v18[6];
        v23 = &v16[v22];
        v24 = (uint64_t *)&v17[v22];
        v25 = v24[1];
        v79 = v19;
        v80 = v8;
        if (v25 >> 60 == 15)
        {
          *(_OWORD *)v23 = *(_OWORD *)v24;
        }
        else
        {
          v26 = *v24;
          sub_20A120BD8(*v24, v25);
          *(_QWORD *)v23 = v26;
          *((_QWORD *)v23 + 1) = v25;
        }
        v27 = v18[7];
        v28 = &v16[v27];
        v29 = &v17[v27];
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v28[8] = v29[8];
        *(_QWORD *)&v16[v18[8]] = *(_QWORD *)&v17[v18[8]];
        v30 = v18[9];
        v77 = v16;
        __dst = &v16[v30];
        v31 = &v17[v30];
        v32 = sub_20A1A8AD8();
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
        swift_bridgeObjectRetain();
        v82 = v34;
        if (v34(v31, 1, v32))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
          memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
        }
        v36 = v18[10];
        v37 = &v77[v36];
        v38 = &v17[v36];
        v39 = *((_QWORD *)v38 + 1);
        v81 = v32;
        v76 = v33;
        if (v39 == 1)
        {
          v40 = *((_OWORD *)v38 + 3);
          *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
          *((_OWORD *)v37 + 3) = v40;
          *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
          v41 = *((_OWORD *)v38 + 1);
          *(_OWORD *)v37 = *(_OWORD *)v38;
          *((_OWORD *)v37 + 1) = v41;
        }
        else
        {
          *(_QWORD *)v37 = *(_QWORD *)v38;
          *((_QWORD *)v37 + 1) = v39;
          v42 = *((_QWORD *)v38 + 3);
          *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
          *((_QWORD *)v37 + 3) = v42;
          v43 = *((_QWORD *)v38 + 5);
          *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
          *((_QWORD *)v37 + 5) = v43;
          v44 = *((_QWORD *)v38 + 7);
          *((_QWORD *)v37 + 6) = *((_QWORD *)v38 + 6);
          *((_QWORD *)v37 + 7) = v44;
          v45 = *((_QWORD *)v38 + 9);
          *((_QWORD *)v37 + 8) = *((_QWORD *)v38 + 8);
          *((_QWORD *)v37 + 9) = v45;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v46 = v18[11];
        v47 = &v77[v46];
        v48 = &v17[v46];
        v49 = *((_QWORD *)v48 + 1);
        *(_QWORD *)v47 = *(_QWORD *)v48;
        *((_QWORD *)v47 + 1) = v49;
        v50 = v18[12];
        v51 = &v77[v50];
        v52 = &v17[v50];
        v53 = *(_QWORD *)&v17[v50 + 8];
        swift_bridgeObjectRetain();
        if (v53 == 1)
        {
          v54 = *((_OWORD *)v52 + 1);
          *(_OWORD *)v51 = *(_OWORD *)v52;
          *((_OWORD *)v51 + 1) = v54;
          *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
        }
        else
        {
          *(_QWORD *)v51 = *(_QWORD *)v52;
          *((_QWORD *)v51 + 1) = v53;
          v55 = *((_QWORD *)v52 + 3);
          *((_QWORD *)v51 + 2) = *((_QWORD *)v52 + 2);
          *((_QWORD *)v51 + 3) = v55;
          v56 = *((_QWORD *)v52 + 4);
          v57 = *((_QWORD *)v52 + 5);
          *((_QWORD *)v51 + 4) = v56;
          *((_QWORD *)v51 + 5) = v57;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(_QWORD *)&v77[v18[13]] = *(_QWORD *)&v17[v18[13]];
        *(_QWORD *)&v77[v18[14]] = *(_QWORD *)&v17[v18[14]];
        v77[v18[15]] = v17[v18[15]];
        v58 = v18[16];
        v59 = &v77[v58];
        v60 = &v17[v58];
        v61 = *((_QWORD *)v60 + 1);
        *(_QWORD *)v59 = *(_QWORD *)v60;
        *((_QWORD *)v59 + 1) = v61;
        v62 = v18[17];
        v63 = &v77[v62];
        v64 = &v17[v62];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v82(v64, 1, v81))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v63, v64, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v63, 0, 1, v81);
        }
        v66 = v18[18];
        v67 = &v77[v66];
        v68 = &v17[v66];
        if (v82(v68, 1, v81))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v67, v68, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v67, 0, 1, v81);
        }
        v8 = v80;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v79 + 56))(v77, 0, 1, v18);
      }
      v70 = *(int *)(v7 + 28);
      v71 = (unint64_t *)((char *)a1 + v70);
      v72 = (unint64_t *)((char *)a2 + v70);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      v74 = *(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v74(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_20A120BD8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t _s5StateOwxx(uint64_t *a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;

  v2 = type metadata accessor for MobileDocumentReaderResponse(0);
  result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = a1[1];
    if (v4 >> 60 != 15)
      sub_20A120E74(*a1, v4);
    v5 = a1[3];
    if (v5 >> 60 != 15)
      sub_20A120E74(a1[2], v5);
    v6 = (char *)a1 + *(int *)(v2 + 24);
    v7 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
    {
      v8 = sub_20A1A8B5C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
      v9 = (uint64_t *)&v6[v7[6]];
      v10 = v9[1];
      if (v10 >> 60 != 15)
        sub_20A120E74(*v9, v10);
      swift_bridgeObjectRelease();
      v11 = &v6[v7[9]];
      v12 = sub_20A1A8AD8();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (!v14(v11, 1, v12))
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      if (*(_QWORD *)&v6[v7[10] + 8] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)&v6[v7[12] + 8] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = &v6[v7[17]];
      if (!v14(v15, 1, v12))
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v16 = &v6[v7[18]];
      if (!v14(v16, 1, v12))
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A120E74(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_OWORD *_s5StateOwcp(_OWORD *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  void (*v72)(_OWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  char *__dst;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for MobileDocumentReaderResponse(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    if (v8 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      v9 = *a2;
      sub_20A120BD8(*a2, a2[1]);
      *(_QWORD *)a1 = v9;
      *((_QWORD *)a1 + 1) = v8;
    }
    v10 = (uint64_t *)(a2 + 2);
    v11 = a2[3];
    if (v11 >> 60 == 15)
    {
      a1[1] = *(_OWORD *)v10;
    }
    else
    {
      v12 = *v10;
      sub_20A120BD8(*v10, a2[3]);
      *((_QWORD *)a1 + 2) = v12;
      *((_QWORD *)a1 + 3) = v11;
    }
    v13 = *(int *)(v6 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
    v17 = *((_QWORD *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_20A1A8B5C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      v14[v16[5]] = v15[v16[5]];
      v20 = v16[6];
      v21 = &v14[v20];
      v22 = (uint64_t *)&v15[v20];
      v23 = v22[1];
      v78 = v17;
      v79 = v7;
      if (v23 >> 60 == 15)
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      else
      {
        v24 = *v22;
        sub_20A120BD8(*v22, v23);
        *(_QWORD *)v21 = v24;
        *((_QWORD *)v21 + 1) = v23;
      }
      v25 = v16[7];
      v26 = &v14[v25];
      v27 = &v15[v25];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      *(_QWORD *)&v14[v16[8]] = *(_QWORD *)&v15[v16[8]];
      v28 = v16[9];
      v75 = v14;
      __dst = &v14[v28];
      v29 = &v15[v28];
      v30 = sub_20A1A8AD8();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_bridgeObjectRetain();
      v80 = v32;
      if (v32(v29, 1, v30))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
      }
      v34 = v16[10];
      v35 = &v75[v34];
      v36 = &v15[v34];
      v37 = *((_QWORD *)v36 + 1);
      v77 = v30;
      v74 = v31;
      if (v37 == 1)
      {
        v38 = *((_OWORD *)v36 + 3);
        *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
        *((_OWORD *)v35 + 3) = v38;
        *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
        v39 = *((_OWORD *)v36 + 1);
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v39;
      }
      else
      {
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = v37;
        v40 = *((_QWORD *)v36 + 3);
        *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
        *((_QWORD *)v35 + 3) = v40;
        v41 = *((_QWORD *)v36 + 5);
        *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
        *((_QWORD *)v35 + 5) = v41;
        v42 = *((_QWORD *)v36 + 7);
        *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
        *((_QWORD *)v35 + 7) = v42;
        v43 = *((_QWORD *)v36 + 9);
        *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
        *((_QWORD *)v35 + 9) = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v44 = v16[11];
      v45 = &v75[v44];
      v46 = &v15[v44];
      v47 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      v48 = v16[12];
      v49 = &v75[v48];
      v50 = &v15[v48];
      v51 = *(_QWORD *)&v15[v48 + 8];
      swift_bridgeObjectRetain();
      if (v51 == 1)
      {
        v52 = *((_OWORD *)v50 + 1);
        *(_OWORD *)v49 = *(_OWORD *)v50;
        *((_OWORD *)v49 + 1) = v52;
        *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
      }
      else
      {
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v51;
        v53 = *((_QWORD *)v50 + 3);
        *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
        *((_QWORD *)v49 + 3) = v53;
        v54 = *((_QWORD *)v50 + 4);
        v55 = *((_QWORD *)v50 + 5);
        *((_QWORD *)v49 + 4) = v54;
        *((_QWORD *)v49 + 5) = v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)&v75[v16[13]] = *(_QWORD *)&v15[v16[13]];
      *(_QWORD *)&v75[v16[14]] = *(_QWORD *)&v15[v16[14]];
      v75[v16[15]] = v15[v16[15]];
      v56 = v16[16];
      v57 = &v75[v56];
      v58 = &v15[v56];
      v59 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v59;
      v60 = v16[17];
      v61 = &v75[v60];
      v62 = &v15[v60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v80(v62, 1, v77))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v61, v62, v77);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v61, 0, 1, v77);
      }
      v64 = v16[18];
      v65 = &v75[v64];
      v66 = &v15[v64];
      if (v80(v66, 1, v77))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v65, v66, v77);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v65, 0, 1, v77);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56))(v75, 0, 1, v16);
      v7 = v79;
    }
    v68 = *(int *)(v6 + 28);
    v69 = (_QWORD *)((char *)a1 + v68);
    v70 = (unint64_t *)((char *)a2 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    v72 = *(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v72(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t *_s5StateOwca(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, void *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  int *v52;
  _QWORD *v53;
  uint64_t (*v54)(uint64_t, uint64_t, int *);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  size_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  unsigned int (*v71)(char *, uint64_t, void *);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  void (*v95)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  void *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(void *, uint64_t, uint64_t);
  int v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  void *v189;
  char *v190;
  int v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  char *v196;
  int v197;
  int v198;
  uint64_t v199;
  void (**__src)(uint64_t, _QWORD, uint64_t, int *);
  void *__srca;
  char *__dst;
  void (**__dsta)(void *, const void *, _QWORD);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unsigned int (*v207)(char *, uint64_t, void *);
  unsigned int (*v208)(char *, uint64_t, uint64_t);
  uint64_t (*v209)(uint64_t, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;

  v6 = type metadata accessor for MobileDocumentReaderResponse(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8((uint64_t *)a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_20A124284((uint64_t)a1, type metadata accessor for MobileDocumentReaderResponse);
      goto LABEL_7;
    }
    v12 = *(_QWORD *)(a2 + 8);
    if ((unint64_t)a1[1] >> 60 == 15)
    {
      if (v12 >> 60 != 15)
      {
        v13 = *(_QWORD *)a2;
        sub_20A120BD8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
        *a1 = v13;
        a1[1] = v12;
        goto LABEL_26;
      }
    }
    else
    {
      if (v12 >> 60 != 15)
      {
        v40 = *(_QWORD *)a2;
        sub_20A120BD8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
        v41 = *a1;
        v42 = a1[1];
        *a1 = v40;
        a1[1] = v12;
        sub_20A120E74(v41, v42);
LABEL_26:
        v43 = (uint64_t *)(a2 + 16);
        v44 = *(_QWORD *)(a2 + 24);
        if ((unint64_t)a1[3] >> 60 == 15)
        {
          if (v44 >> 60 != 15)
          {
            v45 = *v43;
            sub_20A120BD8(*v43, *(_QWORD *)(a2 + 24));
            a1[2] = v45;
            a1[3] = v44;
            goto LABEL_33;
          }
        }
        else
        {
          if (v44 >> 60 != 15)
          {
            v46 = *v43;
            sub_20A120BD8(*v43, *(_QWORD *)(a2 + 24));
            v47 = a1[2];
            v48 = a1[3];
            a1[2] = v46;
            a1[3] = v44;
            sub_20A120E74(v47, v48);
LABEL_33:
            v49 = *(int *)(v6 + 24);
            v50 = (uint64_t)a1 + v49;
            v51 = (_BYTE *)(a2 + v49);
            v52 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
            v53 = (_QWORD *)*((_QWORD *)v52 - 1);
            v54 = (uint64_t (*)(uint64_t, uint64_t, int *))v53[6];
            v55 = v54(v50, 1, v52);
            v56 = v54((uint64_t)v51, 1, v52);
            if (v55)
            {
              if (!v56)
              {
                v214 = a2;
                v57 = sub_20A1A8B5C();
                (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v50, v51, v57);
                *(_BYTE *)(v50 + v52[5]) = v51[v52[5]];
                v58 = v52[6];
                v59 = v50 + v58;
                v60 = (uint64_t *)&v51[v58];
                v61 = v60[1];
                __src = (void (**)(uint64_t, _QWORD, uint64_t, int *))v53;
                v211 = v6;
                if (v61 >> 60 == 15)
                {
                  *(_OWORD *)v59 = *(_OWORD *)v60;
                }
                else
                {
                  v102 = *v60;
                  sub_20A120BD8(*v60, v61);
                  *(_QWORD *)v59 = v102;
                  *(_QWORD *)(v59 + 8) = v61;
                }
                v103 = v52[7];
                v104 = v50 + v103;
                v105 = &v51[v103];
                v106 = *(_QWORD *)v105;
                *(_BYTE *)(v104 + 8) = v105[8];
                *(_QWORD *)v104 = v106;
                *(_QWORD *)(v50 + v52[8]) = *(_QWORD *)&v51[v52[8]];
                v107 = v52[9];
                v108 = (void *)(v50 + v107);
                v109 = &v51[v107];
                v110 = sub_20A1A8AD8();
                v111 = *(_QWORD *)(v110 - 8);
                v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
                swift_bridgeObjectRetain();
                v208 = v112;
                if (v112(v109, 1, v110))
                {
                  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                  memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v111 + 16))(v108, v109, v110);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
                }
                v114 = v52[10];
                v115 = v50 + v114;
                v116 = &v51[v114];
                v205 = v110;
                if (*((_QWORD *)v116 + 1) == 1)
                {
                  *(_OWORD *)v115 = *(_OWORD *)v116;
                  v117 = *((_OWORD *)v116 + 1);
                  v118 = *((_OWORD *)v116 + 2);
                  v119 = *((_OWORD *)v116 + 4);
                  *(_OWORD *)(v115 + 48) = *((_OWORD *)v116 + 3);
                  *(_OWORD *)(v115 + 64) = v119;
                  *(_OWORD *)(v115 + 16) = v117;
                  *(_OWORD *)(v115 + 32) = v118;
                }
                else
                {
                  *(_QWORD *)v115 = *(_QWORD *)v116;
                  *(_QWORD *)(v115 + 8) = *((_QWORD *)v116 + 1);
                  *(_QWORD *)(v115 + 16) = *((_QWORD *)v116 + 2);
                  *(_QWORD *)(v115 + 24) = *((_QWORD *)v116 + 3);
                  *(_QWORD *)(v115 + 32) = *((_QWORD *)v116 + 4);
                  *(_QWORD *)(v115 + 40) = *((_QWORD *)v116 + 5);
                  *(_QWORD *)(v115 + 48) = *((_QWORD *)v116 + 6);
                  *(_QWORD *)(v115 + 56) = *((_QWORD *)v116 + 7);
                  *(_QWORD *)(v115 + 64) = *((_QWORD *)v116 + 8);
                  *(_QWORD *)(v115 + 72) = *((_QWORD *)v116 + 9);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                v120 = v52[11];
                v121 = (_QWORD *)(v50 + v120);
                v122 = &v51[v120];
                *v121 = *v122;
                v121[1] = v122[1];
                v123 = v52[12];
                v124 = v50 + v123;
                v125 = &v51[v123];
                v126 = *(_QWORD *)&v51[v123 + 8];
                swift_bridgeObjectRetain();
                if (v126 == 1)
                {
                  v127 = *(_OWORD *)v125;
                  v128 = *((_OWORD *)v125 + 2);
                  *(_OWORD *)(v124 + 16) = *((_OWORD *)v125 + 1);
                  *(_OWORD *)(v124 + 32) = v128;
                  *(_OWORD *)v124 = v127;
                }
                else
                {
                  *(_QWORD *)v124 = *(_QWORD *)v125;
                  *(_QWORD *)(v124 + 8) = *((_QWORD *)v125 + 1);
                  *(_QWORD *)(v124 + 16) = *((_QWORD *)v125 + 2);
                  *(_QWORD *)(v124 + 24) = *((_QWORD *)v125 + 3);
                  *(_QWORD *)(v124 + 32) = *((_QWORD *)v125 + 4);
                  *(_QWORD *)(v124 + 40) = *((_QWORD *)v125 + 5);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                *(_QWORD *)(v50 + v52[13]) = *(_QWORD *)&v51[v52[13]];
                *(_QWORD *)(v50 + v52[14]) = *(_QWORD *)&v51[v52[14]];
                *(_BYTE *)(v50 + v52[15]) = v51[v52[15]];
                v129 = v52[16];
                v130 = (_QWORD *)(v50 + v129);
                v131 = &v51[v129];
                *v130 = *v131;
                v130[1] = v131[1];
                v132 = v52[17];
                v133 = (void *)(v50 + v132);
                v134 = &v51[v132];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v208(v134, 1, v205))
                {
                  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                  memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v111 + 16))(v133, v134, v205);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v133, 0, 1, v205);
                }
                v136 = v52[18];
                v137 = (void *)(v50 + v136);
                v138 = &v51[v136];
                v6 = v211;
                a2 = v214;
                if (v208(v138, 1, v205))
                {
                  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                  memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v111 + 16))(v137, v138, v205);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v137, 0, 1, v205);
                }
                __src[7](v50, 0, 1, v52);
                goto LABEL_76;
              }
              goto LABEL_39;
            }
            if (v56)
            {
              sub_20A124284(v50, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
LABEL_39:
              v62 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0) - 8) + 64);
              v63 = (void *)v50;
              v64 = v51;
              goto LABEL_40;
            }
            v96 = sub_20A1A8B5C();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v96 - 8) + 24))(v50, v51, v96);
            *(_BYTE *)(v50 + v52[5]) = v51[v52[5]];
            v97 = v52[6];
            v98 = (uint64_t *)(v50 + v97);
            v99 = (uint64_t *)&v51[v97];
            v100 = *(_QWORD *)&v51[v97 + 8];
            v212 = v6;
            v215 = a2;
            if (*(_QWORD *)(v50 + v97 + 8) >> 60 == 15)
            {
              if (v100 >> 60 != 15)
              {
                v101 = *v99;
                sub_20A120BD8(*v99, v100);
                *v98 = v101;
                v98[1] = v100;
                goto LABEL_82;
              }
            }
            else
            {
              if (v100 >> 60 != 15)
              {
                v144 = *v99;
                sub_20A120BD8(*v99, v100);
                v145 = *v98;
                v146 = v98[1];
                *v98 = v144;
                v98[1] = v100;
                sub_20A120E74(v145, v146);
LABEL_82:
                v147 = v52[7];
                v148 = v50 + v147;
                v149 = &v51[v147];
                v150 = *(_QWORD *)v149;
                *(_BYTE *)(v148 + 8) = v149[8];
                *(_QWORD *)v148 = v150;
                *(_QWORD *)(v50 + v52[8]) = *(_QWORD *)&v51[v52[8]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v151 = v52[9];
                v152 = (void *)(v50 + v151);
                v153 = &v51[v151];
                v154 = sub_20A1A8AD8();
                v155 = *(_QWORD *)(v154 - 8);
                v156 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v155 + 48);
                v157 = v156(v152, 1, v154);
                v206 = v154;
                v209 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v156;
                v158 = v156(v153, 1, v154);
                __dsta = (void (**)(void *, const void *, _QWORD))v155;
                if (v157)
                {
                  if (v158)
                  {
                    v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
                    v160 = v154;
                  }
                  else
                  {
                    v160 = v154;
                    (*(void (**)(void *, char *, uint64_t))(v155 + 16))(v152, v153, v154);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v152, 0, 1, v154);
                  }
                }
                else
                {
                  v160 = v154;
                  if (v158)
                  {
                    (*(void (**)(void *, uint64_t))(v155 + 8))(v152, v154);
                    v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(v155 + 24))(v152, v153, v154);
                  }
                }
                v162 = v52[10];
                v163 = v50 + v162;
                v164 = &v51[v162];
                v165 = *(_QWORD *)(v50 + v162 + 8);
                v166 = *(_QWORD *)&v51[v162 + 8];
                if (v165 == 1)
                {
                  if (v166 == 1)
                  {
                    *(_OWORD *)v163 = *(_OWORD *)v164;
                    v167 = *((_OWORD *)v164 + 1);
                    v168 = *((_OWORD *)v164 + 2);
                    v169 = *((_OWORD *)v164 + 4);
                    *(_OWORD *)(v163 + 48) = *((_OWORD *)v164 + 3);
                    *(_OWORD *)(v163 + 64) = v169;
                    *(_OWORD *)(v163 + 16) = v167;
                    *(_OWORD *)(v163 + 32) = v168;
                  }
                  else
                  {
                    *(_QWORD *)v163 = *(_QWORD *)v164;
                    *(_QWORD *)(v163 + 8) = *((_QWORD *)v164 + 1);
                    *(_QWORD *)(v163 + 16) = *((_QWORD *)v164 + 2);
                    *(_QWORD *)(v163 + 24) = *((_QWORD *)v164 + 3);
                    *(_QWORD *)(v163 + 32) = *((_QWORD *)v164 + 4);
                    *(_QWORD *)(v163 + 40) = *((_QWORD *)v164 + 5);
                    *(_QWORD *)(v163 + 48) = *((_QWORD *)v164 + 6);
                    *(_QWORD *)(v163 + 56) = *((_QWORD *)v164 + 7);
                    *(_QWORD *)(v163 + 64) = *((_QWORD *)v164 + 8);
                    *(_QWORD *)(v163 + 72) = *((_QWORD *)v164 + 9);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v166 == 1)
                {
                  sub_20A122564(v163);
                  *(_OWORD *)v163 = *(_OWORD *)v164;
                  v170 = *((_OWORD *)v164 + 4);
                  v172 = *((_OWORD *)v164 + 1);
                  v171 = *((_OWORD *)v164 + 2);
                  *(_OWORD *)(v163 + 48) = *((_OWORD *)v164 + 3);
                  *(_OWORD *)(v163 + 64) = v170;
                  *(_OWORD *)(v163 + 16) = v172;
                  *(_OWORD *)(v163 + 32) = v171;
                }
                else
                {
                  *(_QWORD *)v163 = *(_QWORD *)v164;
                  *(_QWORD *)(v163 + 8) = *((_QWORD *)v164 + 1);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v163 + 16) = *((_QWORD *)v164 + 2);
                  *(_QWORD *)(v163 + 24) = *((_QWORD *)v164 + 3);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v163 + 32) = *((_QWORD *)v164 + 4);
                  *(_QWORD *)(v163 + 40) = *((_QWORD *)v164 + 5);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v163 + 48) = *((_QWORD *)v164 + 6);
                  *(_QWORD *)(v163 + 56) = *((_QWORD *)v164 + 7);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v163 + 64) = *((_QWORD *)v164 + 8);
                  *(_QWORD *)(v163 + 72) = *((_QWORD *)v164 + 9);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                }
                v173 = v52[11];
                v174 = (_QWORD *)(v50 + v173);
                v175 = &v51[v173];
                *v174 = *v175;
                v174[1] = v175[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v176 = v52[12];
                v177 = v50 + v176;
                v178 = &v51[v176];
                v179 = *(_QWORD *)(v50 + v176 + 8);
                v180 = *(_QWORD *)&v51[v176 + 8];
                if (v179 == 1)
                {
                  if (v180 == 1)
                  {
                    v181 = *(_OWORD *)v178;
                    v182 = *((_OWORD *)v178 + 2);
                    *(_OWORD *)(v177 + 16) = *((_OWORD *)v178 + 1);
                    *(_OWORD *)(v177 + 32) = v182;
                    *(_OWORD *)v177 = v181;
                  }
                  else
                  {
                    *(_QWORD *)v177 = *(_QWORD *)v178;
                    *(_QWORD *)(v177 + 8) = *((_QWORD *)v178 + 1);
                    *(_QWORD *)(v177 + 16) = *((_QWORD *)v178 + 2);
                    *(_QWORD *)(v177 + 24) = *((_QWORD *)v178 + 3);
                    *(_QWORD *)(v177 + 32) = *((_QWORD *)v178 + 4);
                    *(_QWORD *)(v177 + 40) = *((_QWORD *)v178 + 5);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v180 == 1)
                {
                  sub_20A122598(v177);
                  v184 = *((_OWORD *)v178 + 1);
                  v183 = *((_OWORD *)v178 + 2);
                  *(_OWORD *)v177 = *(_OWORD *)v178;
                  *(_OWORD *)(v177 + 16) = v184;
                  *(_OWORD *)(v177 + 32) = v183;
                }
                else
                {
                  *(_QWORD *)v177 = *(_QWORD *)v178;
                  *(_QWORD *)(v177 + 8) = *((_QWORD *)v178 + 1);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v177 + 16) = *((_QWORD *)v178 + 2);
                  *(_QWORD *)(v177 + 24) = *((_QWORD *)v178 + 3);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v177 + 32) = *((_QWORD *)v178 + 4);
                  *(_QWORD *)(v177 + 40) = *((_QWORD *)v178 + 5);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                }
                *(_QWORD *)(v50 + v52[13]) = *(_QWORD *)&v51[v52[13]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v50 + v52[14]) = *(_QWORD *)&v51[v52[14]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_BYTE *)(v50 + v52[15]) = v51[v52[15]];
                v185 = v52[16];
                v186 = (_QWORD *)(v50 + v185);
                v187 = &v51[v185];
                *v186 = *v187;
                v186[1] = v187[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v188 = v52[17];
                v189 = (void *)(v50 + v188);
                v190 = &v51[v188];
                v191 = v209(v50 + v188, 1, v160);
                v192 = v209((uint64_t)v190, 1, v160);
                if (v191)
                {
                  if (!v192)
                  {
                    __dsta[2](v189, v190, v160);
                    ((void (*)(void *, _QWORD, uint64_t, uint64_t))__dsta[7])(v189, 0, 1, v160);
LABEL_109:
                    v194 = v52[18];
                    v195 = (void *)(v50 + v194);
                    v196 = &v51[v194];
                    v6 = v212;
                    v197 = v209((uint64_t)v195, 1, v160);
                    v198 = v209((uint64_t)v196, 1, v160);
                    a2 = v215;
                    if (v197)
                    {
                      if (!v198)
                      {
                        __dsta[2](v195, v196, v206);
                        ((void (*)(void *, _QWORD, uint64_t, uint64_t))__dsta[7])(v195, 0, 1, v206);
                        goto LABEL_76;
                      }
                    }
                    else
                    {
                      if (!v198)
                      {
                        __dsta[3](v195, v196, v206);
                        goto LABEL_76;
                      }
                      ((void (*)(void *, uint64_t))__dsta[1])(v195, v206);
                    }
                    v62 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8) - 8)
                                    + 64);
                    v63 = v195;
                    v64 = v196;
LABEL_40:
                    memcpy(v63, v64, v62);
LABEL_76:
                    v140 = *(int *)(v6 + 28);
                    v141 = (uint64_t *)((char *)a1 + v140);
                    v142 = (_QWORD *)(a2 + v140);
                    *v141 = *v142;
                    v141[1] = v142[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    return a1;
                  }
                }
                else
                {
                  if (!v192)
                  {
                    __dsta[3](v189, v190, v160);
                    goto LABEL_109;
                  }
                  ((void (*)(void *, uint64_t))__dsta[1])(v189, v160);
                }
                v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
                goto LABEL_109;
              }
              sub_20A122530((uint64_t)v98);
            }
            *(_OWORD *)v98 = *(_OWORD *)v99;
            goto LABEL_82;
          }
          sub_20A122530((uint64_t)(a1 + 2));
        }
        *((_OWORD *)a1 + 1) = *(_OWORD *)v43;
        goto LABEL_33;
      }
      sub_20A122530((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_26;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = *(_QWORD *)(a2 + 8);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v14 = *(_QWORD *)a2;
    sub_20A120BD8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
    *a1 = v14;
    a1[1] = v11;
  }
  v15 = (uint64_t *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  if (v16 >> 60 == 15)
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v15;
  }
  else
  {
    v17 = *v15;
    sub_20A120BD8(*v15, *(_QWORD *)(a2 + 24));
    a1[2] = v17;
    a1[3] = v16;
  }
  v18 = *(int *)(v6 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)(a2 + v18);
  v21 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v204 = v22;
    v213 = a2;
    v24 = sub_20A1A8B5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
    v19[v21[5]] = v20[v21[5]];
    v25 = v21[6];
    v26 = &v19[v25];
    v27 = (uint64_t *)&v20[v25];
    v28 = v27[1];
    v210 = v6;
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
    }
    else
    {
      v29 = *v27;
      sub_20A120BD8(*v27, v28);
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v28;
    }
    v30 = v21[7];
    v31 = &v19[v30];
    v32 = &v20[v30];
    v33 = *(_QWORD *)v32;
    v31[8] = v32[8];
    *(_QWORD *)v31 = v33;
    *(_QWORD *)&v19[v21[8]] = *(_QWORD *)&v20[v21[8]];
    v34 = v21[9];
    __dst = &v19[v34];
    v35 = &v20[v34];
    v36 = sub_20A1A8AD8();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, void *))(v37 + 48);
    swift_bridgeObjectRetain();
    v207 = v38;
    if (v38(v35, 1, (void *)v36))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
    }
    v199 = v37;
    __srca = (void *)v36;
    v65 = v21[10];
    v66 = &v19[v65];
    v67 = &v20[v65];
    if (*((_QWORD *)v67 + 1) == 1)
    {
      *(_OWORD *)v66 = *(_OWORD *)v67;
      v68 = *((_OWORD *)v67 + 1);
      v69 = *((_OWORD *)v67 + 2);
      v70 = *((_OWORD *)v67 + 4);
      *((_OWORD *)v66 + 3) = *((_OWORD *)v67 + 3);
      *((_OWORD *)v66 + 4) = v70;
      *((_OWORD *)v66 + 1) = v68;
      *((_OWORD *)v66 + 2) = v69;
    }
    else
    {
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
      *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
      *((_QWORD *)v66 + 3) = *((_QWORD *)v67 + 3);
      *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
      *((_QWORD *)v66 + 5) = *((_QWORD *)v67 + 5);
      *((_QWORD *)v66 + 6) = *((_QWORD *)v67 + 6);
      *((_QWORD *)v66 + 7) = *((_QWORD *)v67 + 7);
      *((_QWORD *)v66 + 8) = *((_QWORD *)v67 + 8);
      *((_QWORD *)v66 + 9) = *((_QWORD *)v67 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v71 = v38;
    v72 = v21[11];
    v73 = &v19[v72];
    v74 = &v20[v72];
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
    v75 = v21[12];
    v76 = &v19[v75];
    v77 = &v20[v75];
    v78 = *(_QWORD *)&v20[v75 + 8];
    swift_bridgeObjectRetain();
    if (v78 == 1)
    {
      v79 = *(_OWORD *)v77;
      v80 = *((_OWORD *)v77 + 2);
      *((_OWORD *)v76 + 1) = *((_OWORD *)v77 + 1);
      *((_OWORD *)v76 + 2) = v80;
      *(_OWORD *)v76 = v79;
    }
    else
    {
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
      *((_QWORD *)v76 + 2) = *((_QWORD *)v77 + 2);
      *((_QWORD *)v76 + 3) = *((_QWORD *)v77 + 3);
      *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
      *((_QWORD *)v76 + 5) = *((_QWORD *)v77 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)&v19[v21[13]] = *(_QWORD *)&v20[v21[13]];
    *(_QWORD *)&v19[v21[14]] = *(_QWORD *)&v20[v21[14]];
    v19[v21[15]] = v20[v21[15]];
    v81 = v21[16];
    v82 = &v19[v81];
    v83 = &v20[v81];
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = *((_QWORD *)v83 + 1);
    v84 = v21[17];
    v85 = &v19[v84];
    v86 = &v20[v84];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v207(v86, 1, __srca))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v199 + 16))(v85, v86, __srca);
      v71 = v207;
      (*(void (**)(char *, _QWORD, uint64_t, void *))(v199 + 56))(v85, 0, 1, __srca);
    }
    v88 = v21[18];
    v89 = &v19[v88];
    v90 = &v20[v88];
    a2 = v213;
    if (v71(v90, 1, __srca))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v199 + 16))(v89, v90, __srca);
      (*(void (**)(char *, _QWORD, uint64_t, void *))(v199 + 56))(v89, 0, 1, __srca);
    }
    v6 = v210;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v204 + 56))(v19, 0, 1, v21);
  }
  v92 = *(int *)(v6 + 28);
  v93 = (uint64_t *)((char *)a1 + v92);
  v94 = (_QWORD *)(a2 + v92);
  *v93 = *v94;
  v93[1] = v94[1];
  v95 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v95(a1, 0, 3, v6);
  return a1;
}

uint64_t sub_20A122530(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t sub_20A122564(uint64_t a1)
{
  destroy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address();
  return a1;
}

uint64_t sub_20A122598(uint64_t a1)
{
  destroy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority();
  return a1;
}

_OWORD *_s5StateOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *__dst;
  unsigned int (*v47)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for MobileDocumentReaderResponse(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v45 = v13;
      v15 = sub_20A1A8B5C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
      v10[v12[5]] = v11[v12[5]];
      *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
      v16 = v12[7];
      v17 = &v10[v16];
      v18 = &v11[v16];
      v17[8] = v18[8];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
      v19 = v12[9];
      __dst = &v10[v19];
      v20 = &v11[v19];
      v21 = sub_20A1A8AD8();
      v22 = *(_QWORD *)(v21 - 8);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      v44 = v22;
      if (v47(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      v24 = v12[10];
      v25 = &v10[v24];
      v26 = &v11[v24];
      v27 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v27;
      *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
      v28 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v28;
      *(_OWORD *)&v10[v12[11]] = *(_OWORD *)&v11[v12[11]];
      v29 = v12[12];
      v30 = &v10[v29];
      v31 = &v11[v29];
      v32 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v32;
      *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
      *(_QWORD *)&v10[v12[13]] = *(_QWORD *)&v11[v12[13]];
      *(_QWORD *)&v10[v12[14]] = *(_QWORD *)&v11[v12[14]];
      v10[v12[15]] = v11[v12[15]];
      *(_OWORD *)&v10[v12[16]] = *(_OWORD *)&v11[v12[16]];
      v33 = v12[17];
      v34 = &v10[v33];
      v35 = &v11[v33];
      if (v47(&v11[v33], 1, v21))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        v37 = v44;
      }
      else
      {
        v38 = v35;
        v37 = v44;
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v34, v38, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v34, 0, 1, v21);
      }
      v39 = v12[18];
      v40 = &v10[v39];
      v41 = &v11[v39];
      if (v47(v41, 1, v21))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v41, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v21);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v45 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

uint64_t *_s5StateOwta(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  unsigned int (**v16)(const void *, uint64_t, int *);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, int *);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  char *v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  _OWORD *v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  void *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void *v109;
  char *v110;
  uint64_t v111;
  uint64_t (*v112)(void *, uint64_t, uint64_t);
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  char *v146;
  int v147;
  uint64_t v148;
  int v149;
  int v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  char *v156;
  int v157;
  int v158;
  void *v159;
  unsigned int (**__src)(const void *, uint64_t, int *);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *__dst;
  void *__dsta;
  void *__dstb;
  unsigned int (*v167)(char *, uint64_t, uint64_t);
  unsigned int (*v168)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for MobileDocumentReaderResponse(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_20A124284((uint64_t)a1, type metadata accessor for MobileDocumentReaderResponse);
      goto LABEL_7;
    }
    v18 = a1[1];
    if (v18 >> 60 != 15)
    {
      v19 = a2[1];
      if (v19 >> 60 != 15)
      {
        v29 = *a1;
        *a1 = *a2;
        a1[1] = v19;
        sub_20A120E74(v29, v18);
LABEL_15:
        v30 = a2 + 2;
        v31 = a1[3];
        if (v31 >> 60 != 15)
        {
          v32 = a2[3];
          if (v32 >> 60 != 15)
          {
            v33 = a1[2];
            a1[2] = *v30;
            a1[3] = v32;
            sub_20A120E74(v33, v31);
LABEL_20:
            v34 = *(int *)(v6 + 24);
            v35 = (uint64_t)a1 + v34;
            v36 = (char *)a2 + v34;
            v37 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
            v38 = *((_QWORD *)v37 - 1);
            v39 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v38 + 48);
            v40 = v39(v35, 1, v37);
            v41 = v39((uint64_t)v36, 1, v37);
            if (v40)
            {
              if (!v41)
              {
                v42 = sub_20A1A8B5C();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v35, v36, v42);
                *(_BYTE *)(v35 + v37[5]) = v36[v37[5]];
                *(_OWORD *)(v35 + v37[6]) = *(_OWORD *)&v36[v37[6]];
                v43 = v37[7];
                v44 = v35 + v43;
                v45 = &v36[v43];
                *(_BYTE *)(v44 + 8) = v45[8];
                *(_QWORD *)v44 = *(_QWORD *)v45;
                *(_QWORD *)(v35 + v37[8]) = *(_QWORD *)&v36[v37[8]];
                v46 = v37[9];
                __dsta = (void *)(v35 + v46);
                v47 = &v36[v46];
                v48 = sub_20A1A8AD8();
                v49 = *(_QWORD *)(v48 - 8);
                v168 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
                v162 = v49;
                if (v168(v47, 1, v48))
                {
                  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                  memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v49 + 32))(__dsta, v47, v48);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(__dsta, 0, 1, v48);
                }
                v79 = v37[10];
                v80 = (_OWORD *)(v35 + v79);
                v81 = &v36[v79];
                v82 = *((_OWORD *)v81 + 3);
                v80[2] = *((_OWORD *)v81 + 2);
                v80[3] = v82;
                v80[4] = *((_OWORD *)v81 + 4);
                v83 = *((_OWORD *)v81 + 1);
                *v80 = *(_OWORD *)v81;
                v80[1] = v83;
                *(_OWORD *)(v35 + v37[11]) = *(_OWORD *)&v36[v37[11]];
                v84 = v37[12];
                v85 = (_OWORD *)(v35 + v84);
                v86 = &v36[v84];
                v87 = *((_OWORD *)v86 + 1);
                *v85 = *(_OWORD *)v86;
                v85[1] = v87;
                v85[2] = *((_OWORD *)v86 + 2);
                *(_QWORD *)(v35 + v37[13]) = *(_QWORD *)&v36[v37[13]];
                *(_QWORD *)(v35 + v37[14]) = *(_QWORD *)&v36[v37[14]];
                *(_BYTE *)(v35 + v37[15]) = v36[v37[15]];
                *(_OWORD *)(v35 + v37[16]) = *(_OWORD *)&v36[v37[16]];
                v88 = v37[17];
                v89 = (void *)(v35 + v88);
                v90 = &v36[v88];
                if (v168(&v36[v88], 1, v48))
                {
                  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                  memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
                  v92 = v162;
                }
                else
                {
                  v93 = v90;
                  v92 = v162;
                  (*(void (**)(void *, char *, uint64_t))(v162 + 32))(v89, v93, v48);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v89, 0, 1, v48);
                }
                v94 = v37[18];
                v95 = (void *)(v35 + v94);
                v96 = &v36[v94];
                if (v168(v96, 1, v48))
                {
                  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                  memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v92 + 32))(v95, v96, v48);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v95, 0, 1, v48);
                }
                (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
                goto LABEL_49;
              }
              goto LABEL_26;
            }
            if (v41)
            {
              sub_20A124284(v35, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
LABEL_26:
              v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0) - 8) + 64);
              v52 = (void *)v35;
              v53 = v36;
              goto LABEL_27;
            }
            v73 = sub_20A1A8B5C();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 40))(v35, v36, v73);
            *(_BYTE *)(v35 + v37[5]) = v36[v37[5]];
            v74 = v37[6];
            v75 = (uint64_t *)(v35 + v74);
            v76 = (uint64_t *)&v36[v74];
            v77 = *(_QWORD *)(v35 + v74 + 8);
            if (v77 >> 60 != 15)
            {
              v78 = v76[1];
              if (v78 >> 60 != 15)
              {
                v104 = *v75;
                *v75 = *v76;
                v75[1] = v78;
                sub_20A120E74(v104, v77);
LABEL_52:
                v105 = v37[7];
                v106 = v35 + v105;
                v107 = &v36[v105];
                *(_QWORD *)v106 = *(_QWORD *)v107;
                *(_BYTE *)(v106 + 8) = v107[8];
                *(_QWORD *)(v35 + v37[8]) = *(_QWORD *)&v36[v37[8]];
                swift_bridgeObjectRelease();
                v108 = v37[9];
                v109 = (void *)(v35 + v108);
                v110 = &v36[v108];
                v111 = sub_20A1A8AD8();
                v163 = *(_QWORD *)(v111 - 8);
                v112 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v163 + 48);
                v159 = v109;
                LODWORD(v109) = v112(v109, 1, v111);
                __dstb = (void *)v111;
                v113 = v112(v110, 1, v111);
                if ((_DWORD)v109)
                {
                  if (v113)
                  {
                    v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                    memcpy(v159, v110, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
                    v115 = v111;
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(v163 + 32))(v159, v110, v111);
                    v115 = v111;
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v159, 0, 1, v111);
                  }
                }
                else
                {
                  v115 = v111;
                  if (v113)
                  {
                    (*(void (**)(void *, uint64_t))(v163 + 8))(v159, v111);
                    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                    memcpy(v159, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(v163 + 40))(v159, v110, v111);
                  }
                }
                v117 = v37[10];
                v118 = (_QWORD *)(v35 + v117);
                v119 = &v36[v117];
                if (*(_QWORD *)(v35 + v117 + 8) != 1)
                {
                  v120 = *((_QWORD *)v119 + 1);
                  if (v120 != 1)
                  {
                    *v118 = *(_QWORD *)v119;
                    v118[1] = v120;
                    swift_bridgeObjectRelease();
                    v123 = *((_QWORD *)v119 + 3);
                    v118[2] = *((_QWORD *)v119 + 2);
                    v118[3] = v123;
                    swift_bridgeObjectRelease();
                    v124 = *((_QWORD *)v119 + 5);
                    v118[4] = *((_QWORD *)v119 + 4);
                    v118[5] = v124;
                    swift_bridgeObjectRelease();
                    v125 = *((_QWORD *)v119 + 7);
                    v118[6] = *((_QWORD *)v119 + 6);
                    v118[7] = v125;
                    swift_bridgeObjectRelease();
                    v126 = *((_QWORD *)v119 + 9);
                    v118[8] = *((_QWORD *)v119 + 8);
                    v118[9] = v126;
                    swift_bridgeObjectRelease();
LABEL_64:
                    v127 = v37[11];
                    v128 = (_QWORD *)(v35 + v127);
                    v129 = &v36[v127];
                    v131 = *(_QWORD *)v129;
                    v130 = *((_QWORD *)v129 + 1);
                    *v128 = v131;
                    v128[1] = v130;
                    swift_bridgeObjectRelease();
                    v132 = v37[12];
                    v133 = (_QWORD *)(v35 + v132);
                    v134 = &v36[v132];
                    if (*(_QWORD *)(v35 + v132 + 8) != 1)
                    {
                      v135 = *((_QWORD *)v134 + 1);
                      if (v135 != 1)
                      {
                        *v133 = *(_QWORD *)v134;
                        v133[1] = v135;
                        swift_bridgeObjectRelease();
                        v137 = *((_QWORD *)v134 + 3);
                        v133[2] = *((_QWORD *)v134 + 2);
                        v133[3] = v137;
                        swift_bridgeObjectRelease();
                        v138 = *((_QWORD *)v134 + 5);
                        v133[4] = *((_QWORD *)v134 + 4);
                        v133[5] = v138;
                        swift_bridgeObjectRelease();
                        goto LABEL_69;
                      }
                      sub_20A122598((uint64_t)v133);
                    }
                    v136 = *((_OWORD *)v134 + 1);
                    *(_OWORD *)v133 = *(_OWORD *)v134;
                    *((_OWORD *)v133 + 1) = v136;
                    *((_OWORD *)v133 + 2) = *((_OWORD *)v134 + 2);
LABEL_69:
                    *(_QWORD *)(v35 + v37[13]) = *(_QWORD *)&v36[v37[13]];
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v35 + v37[14]) = *(_QWORD *)&v36[v37[14]];
                    swift_bridgeObjectRelease();
                    *(_BYTE *)(v35 + v37[15]) = v36[v37[15]];
                    v139 = v37[16];
                    v140 = (_QWORD *)(v35 + v139);
                    v141 = &v36[v139];
                    v143 = *(_QWORD *)v141;
                    v142 = *((_QWORD *)v141 + 1);
                    *v140 = v143;
                    v140[1] = v142;
                    swift_bridgeObjectRelease();
                    v144 = v37[17];
                    v145 = (void *)(v35 + v144);
                    v146 = &v36[v144];
                    v147 = v112((void *)(v35 + v144), 1, v115);
                    v148 = v115;
                    v149 = v147;
                    v150 = v112(v146, 1, v148);
                    if (v149)
                    {
                      if (v150)
                      {
                        v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                        memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
                        v152 = __dstb;
                      }
                      else
                      {
                        (*(void (**)(void *, char *, void *))(v163 + 32))(v145, v146, __dstb);
                        v152 = __dstb;
                        (*(void (**)(void *, _QWORD, uint64_t, void *))(v163 + 56))(v145, 0, 1, __dstb);
                      }
                    }
                    else
                    {
                      v152 = __dstb;
                      if (v150)
                      {
                        (*(void (**)(void *, void *))(v163 + 8))(v145, __dstb);
                        v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                        memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(void *, char *, void *))(v163 + 40))(v145, v146, __dstb);
                      }
                    }
                    v154 = v37[18];
                    v155 = (void *)(v35 + v154);
                    v156 = &v36[v154];
                    v157 = v112(v155, 1, (uint64_t)v152);
                    v158 = v112(v156, 1, (uint64_t)v152);
                    if (v157)
                    {
                      if (!v158)
                      {
                        (*(void (**)(void *, char *, void *))(v163 + 32))(v155, v156, v152);
                        (*(void (**)(void *, _QWORD, uint64_t, void *))(v163 + 56))(v155, 0, 1, v152);
                        goto LABEL_49;
                      }
                    }
                    else
                    {
                      if (!v158)
                      {
                        (*(void (**)(void *, char *, void *))(v163 + 40))(v155, v156, v152);
                        goto LABEL_49;
                      }
                      (*(void (**)(void *, void *))(v163 + 8))(v155, v152);
                    }
                    v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8) - 8)
                                    + 64);
                    v52 = v155;
                    v53 = v156;
LABEL_27:
                    memcpy(v52, v53, v51);
LABEL_49:
                    v98 = *(int *)(v6 + 28);
                    v99 = (uint64_t *)((char *)a1 + v98);
                    v100 = (uint64_t *)((char *)a2 + v98);
                    v102 = *v100;
                    v101 = v100[1];
                    *v99 = v102;
                    v99[1] = v101;
                    swift_bridgeObjectRelease();
                    return a1;
                  }
                  sub_20A122564((uint64_t)v118);
                }
                v121 = *((_OWORD *)v119 + 3);
                *((_OWORD *)v118 + 2) = *((_OWORD *)v119 + 2);
                *((_OWORD *)v118 + 3) = v121;
                *((_OWORD *)v118 + 4) = *((_OWORD *)v119 + 4);
                v122 = *((_OWORD *)v119 + 1);
                *(_OWORD *)v118 = *(_OWORD *)v119;
                *((_OWORD *)v118 + 1) = v122;
                goto LABEL_64;
              }
              sub_20A122530((uint64_t)v75);
            }
            *(_OWORD *)v75 = *(_OWORD *)v76;
            goto LABEL_52;
          }
          sub_20A122530((uint64_t)(a1 + 2));
        }
        *((_OWORD *)a1 + 1) = *(_OWORD *)v30;
        goto LABEL_20;
      }
      sub_20A122530((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_15;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = *(int *)(v6 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v16 = (unsigned int (**)(const void *, uint64_t, int *))*((_QWORD *)v15 - 1);
  if (v16[6](v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    __src = v16;
    v20 = sub_20A1A8B5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
    v13[v15[5]] = v14[v15[5]];
    *(_OWORD *)&v13[v15[6]] = *(_OWORD *)&v14[v15[6]];
    v21 = v15[7];
    v22 = &v13[v21];
    v23 = &v14[v21];
    v22[8] = v23[8];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)&v13[v15[8]] = *(_QWORD *)&v14[v15[8]];
    v24 = v15[9];
    __dst = &v13[v24];
    v25 = &v14[v24];
    v26 = sub_20A1A8AD8();
    v27 = *(_QWORD *)(v26 - 8);
    v167 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v161 = v27;
    if (v167(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dst, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    v54 = v15[10];
    v55 = &v13[v54];
    v56 = &v14[v54];
    v57 = *((_OWORD *)v56 + 3);
    *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
    *((_OWORD *)v55 + 3) = v57;
    *((_OWORD *)v55 + 4) = *((_OWORD *)v56 + 4);
    v58 = *((_OWORD *)v56 + 1);
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *((_OWORD *)v55 + 1) = v58;
    *(_OWORD *)&v13[v15[11]] = *(_OWORD *)&v14[v15[11]];
    v59 = v15[12];
    v60 = &v13[v59];
    v61 = &v14[v59];
    v62 = *((_OWORD *)v61 + 1);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v62;
    *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
    *(_QWORD *)&v13[v15[13]] = *(_QWORD *)&v14[v15[13]];
    *(_QWORD *)&v13[v15[14]] = *(_QWORD *)&v14[v15[14]];
    v13[v15[15]] = v14[v15[15]];
    *(_OWORD *)&v13[v15[16]] = *(_OWORD *)&v14[v15[16]];
    v63 = v15[17];
    v64 = &v13[v63];
    v65 = &v14[v63];
    if (v167(&v14[v63], 1, v26))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      v67 = v161;
    }
    else
    {
      v68 = v65;
      v67 = v161;
      (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v64, v68, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v64, 0, 1, v26);
    }
    v69 = v15[18];
    v70 = &v13[v69];
    v71 = &v14[v69];
    if (v167(v71, 1, v26))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v70, v71, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v70, 0, 1, v26);
    }
    ((void (*)(char *, _QWORD, uint64_t, int *))__src[7])(v13, 0, 1, v15);
  }
  *(_OWORD *)((char *)a1 + *(int *)(v6 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 28));
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t _s5StateOwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A1235B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for MobileDocumentReaderResponse(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t _s5StateOwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A12360C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = type metadata accessor for MobileDocumentReaderResponse(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_20A123660(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MobileDocumentReaderResponse(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_20A12369C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentReaderResponse(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_20A1236DC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MobileDocumentReaderResponse(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A123770(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20A123790(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_20A123CB0(a1, &qword_2545D81C8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_20A123CB0(a1, &qword_253EB1CE8);
}

void type metadata accessor for DIIdentityFatalError(uint64_t a1)
{
  sub_20A123CB0(a1, &qword_2545D81D0);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_20A123CB0(a1, &qword_2545D81D8);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s5StateO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5StateO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A1238F4 + 4 * byte_20A1ABC05[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A123928 + 4 * byte_20A1ABC00[v4]))();
}

uint64_t sub_20A123928(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A123930(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A123938);
  return result;
}

uint64_t sub_20A123944(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A12394CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A123950(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A123958(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A123964(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_20A12396C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s5StateO10CodingKeysOMa()
{
  return &_s5StateO10CodingKeysON;
}

ValueMetadata *_s5StateO15ReadyCodingKeysOMa()
{
  return &_s5StateO15ReadyCodingKeysON;
}

ValueMetadata *_s5StateO20ConnectingCodingKeysOMa()
{
  return &_s5StateO20ConnectingCodingKeysON;
}

ValueMetadata *_s5StateO26AwaitingApprovalCodingKeysOMa()
{
  return &_s5StateO26AwaitingApprovalCodingKeysON;
}

uint64_t _s5StateO18FinishedCodingKeysOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s5StateO18FinishedCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A123A48 + 4 * byte_20A1ABC0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A123A68 + 4 * byte_20A1ABC0F[v4]))();
}

_BYTE *sub_20A123A48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A123A68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A123A70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A123A78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A123A80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A123A88(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_20A123A94()
{
  return 0;
}

ValueMetadata *_s5StateO18FinishedCodingKeysOMa()
{
  return &_s5StateO18FinishedCodingKeysON;
}

unint64_t sub_20A123AB0()
{
  unint64_t result;

  result = qword_2545D81E0;
  if (!qword_2545D81E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABE84, &_s5StateO18FinishedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D81E0);
  }
  return result;
}

unint64_t sub_20A123AF8()
{
  unint64_t result;

  result = qword_2545D81E8;
  if (!qword_2545D81E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC02C, &_s5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D81E8);
  }
  return result;
}

uint64_t sub_20A123B3C()
{
  return sub_20A1205FC(&qword_2545D81F0, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_20A1AC064);
}

uint64_t sub_20A123B68()
{
  return sub_20A1205FC(&qword_2545D81F8, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_20A1AC090);
}

uint64_t sub_20A123B94()
{
  return sub_20A1205FC(&qword_2545D8200, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC108);
}

uint64_t sub_20A123BC0()
{
  return sub_20A1205FC((unint64_t *)&qword_2545D8208, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC300);
}

uint64_t sub_20A123BEC()
{
  return sub_20A1205FC(&qword_2545D8210, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1AC);
}

uint64_t sub_20A123C18()
{
  return sub_20A1205FC(&qword_2545D8218, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC178);
}

uint64_t sub_20A123C44()
{
  return sub_20A1205FC(&qword_2545D8220, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC134);
}

uint64_t sub_20A123C70()
{
  return sub_20A1205FC(&qword_2545D8228, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_20A1AC298);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_20A123CB0(a1, &qword_2545D82A8);
}

void sub_20A123CB0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_20A123CF4()
{
  return sub_20A1205FC(&qword_2545D8230, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_20A1AC25C);
}

unint64_t sub_20A123D24()
{
  unint64_t result;

  result = qword_2545D8238;
  if (!qword_2545D8238)
  {
    result = MEMORY[0x20BD21434](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2545D8238);
  }
  return result;
}

uint64_t sub_20A123D68()
{
  return sub_20A1205FC(&qword_2545D8240, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_20A1AC2D4);
}

uint64_t sub_20A123D94()
{
  return sub_20A1205FC(&qword_2545D8248, (uint64_t (*)(uint64_t))type metadata accessor for DIIdentityFatalError, (uint64_t)&unk_20A1AC1F0);
}

unint64_t sub_20A123DC4()
{
  unint64_t result;

  result = qword_2545D8250;
  if (!qword_2545D8250)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABF4C, &_s5StateO15ReadyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8250);
  }
  return result;
}

unint64_t sub_20A123E0C()
{
  unint64_t result;

  result = qword_2545D8258;
  if (!qword_2545D8258)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABF74, &_s5StateO15ReadyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8258);
  }
  return result;
}

unint64_t sub_20A123E54()
{
  unint64_t result;

  result = qword_2545D8260;
  if (!qword_2545D8260)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABEFC, &_s5StateO20ConnectingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8260);
  }
  return result;
}

unint64_t sub_20A123E9C()
{
  unint64_t result;

  result = qword_2545D8268;
  if (!qword_2545D8268)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABF24, &_s5StateO20ConnectingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8268);
  }
  return result;
}

unint64_t sub_20A123EE4()
{
  unint64_t result;

  result = qword_2545D8270;
  if (!qword_2545D8270)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABEAC, &_s5StateO26AwaitingApprovalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8270);
  }
  return result;
}

unint64_t sub_20A123F2C()
{
  unint64_t result;

  result = qword_2545D8278;
  if (!qword_2545D8278)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABED4, &_s5StateO26AwaitingApprovalCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8278);
  }
  return result;
}

unint64_t sub_20A123F74()
{
  unint64_t result;

  result = qword_2545D8280;
  if (!qword_2545D8280)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABDF4, &_s5StateO18FinishedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8280);
  }
  return result;
}

unint64_t sub_20A123FBC()
{
  unint64_t result;

  result = qword_2545D8288;
  if (!qword_2545D8288)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABE1C, &_s5StateO18FinishedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8288);
  }
  return result;
}

unint64_t sub_20A124004()
{
  unint64_t result;

  result = qword_2545D8290;
  if (!qword_2545D8290)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABF9C, &_s5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8290);
  }
  return result;
}

unint64_t sub_20A12404C()
{
  unint64_t result;

  result = qword_2545D8298;
  if (!qword_2545D8298)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ABFC4, &_s5StateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8298);
  }
  return result;
}

uint64_t sub_20A124090(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7964616572 && a2 == 0xE500000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEA0000000000676ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BBC40 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A124244(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A124284(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t DIIdentityNationalIDCardDescriptor.region.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(v1, sel_regionCode);
  if (v3)
  {
    v4 = v3;
    sub_20A1A8DB4();

  }
  sub_20A1A8CB8();
  v5 = sub_20A1A8CAC();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 0, 1, v5);
}

uint64_t sub_20A124354@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, sel_regionCode);
  if (v3)
  {
    v4 = v3;
    sub_20A1A8DB4();

  }
  sub_20A1A8CB8();
  v5 = sub_20A1A8CAC();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 0, 1, v5);
}

uint64_t sub_20A1243E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A124570(a1, (uint64_t)v4);
  return DIIdentityNationalIDCardDescriptor.region.setter((uint64_t)v4);
}

uint64_t DIIdentityNationalIDCardDescriptor.region.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A124570(a1, (uint64_t)v6);
  v7 = sub_20A1A8CAC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_20A1245B8((uint64_t)v6);
    v9 = 0;
  }
  else
  {
    sub_20A1A8C88();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    v9 = (void *)sub_20A1A8D9C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v2, sel_setRegionCode_, v9);

  return sub_20A1245B8(a1);
}

uint64_t sub_20A124570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A1245B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*DIIdentityNationalIDCardDescriptor.region.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  size_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = malloc(0x38uLL);
  *a1 = v4;
  *v4 = v2;
  v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B0) - 8) + 64);
  v4[1] = malloc(v5);
  v4[2] = malloc(v5);
  v4[3] = malloc(v5);
  v6 = malloc(v5);
  v4[4] = v6;
  v7 = objc_msgSend(v2, sel_regionCode);
  if (v7)
  {
    v8 = v7;
    sub_20A1A8DB4();

  }
  sub_20A1A8CB8();
  v9 = sub_20A1A8CAC();
  v4[5] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[6] = v10;
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  return sub_20A124708;
}

void sub_20A124708(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 40);
  v4 = *(_QWORD *)(*a1 + 48);
  v5 = *(_QWORD *)(*a1 + 32);
  if ((a2 & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 8);
    v6 = *(_QWORD *)(v2 + 16);
    sub_20A124570(v5, v6);
    sub_20A124570(v6, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3) == 1)
    {
      sub_20A1245B8(*(_QWORD *)(v2 + 8));
      v8 = 0;
    }
    else
    {
      v11 = *(_QWORD *)(v2 + 40);
      v12 = *(_QWORD *)(v2 + 48);
      v13 = *(_QWORD *)(v2 + 8);
      sub_20A1A8C88();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v11);
      v8 = (void *)sub_20A1A8D9C();
      swift_bridgeObjectRelease();
    }
    v15 = *(void **)(v2 + 24);
    v14 = *(void **)(v2 + 32);
    v17 = *(void **)(v2 + 8);
    v16 = *(void **)(v2 + 16);
    objc_msgSend(*(id *)v2, sel_setRegionCode_, v8);

    sub_20A1245B8((uint64_t)v16);
  }
  else
  {
    v9 = *(_QWORD *)(v2 + 24);
    sub_20A124570(v5, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    {
      sub_20A1245B8(*(_QWORD *)(v2 + 24));
      v10 = 0;
    }
    else
    {
      v18 = *(_QWORD *)(v2 + 40);
      v19 = *(_QWORD *)(v2 + 48);
      v20 = *(_QWORD *)(v2 + 24);
      sub_20A1A8C88();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
      v10 = (void *)sub_20A1A8D9C();
      swift_bridgeObjectRelease();
    }
    v15 = *(void **)(v2 + 24);
    v14 = *(void **)(v2 + 32);
    v17 = *(void **)(v2 + 8);
    v16 = *(void **)(v2 + 16);
    objc_msgSend(*(id *)v2, sel_setRegionCode_, v10);

  }
  sub_20A1245B8((uint64_t)v14);
  free(v14);
  free(v15);
  free(v16);
  free(v17);
  free((void *)v2);
}

uint64_t MobileDocumentReaderIssuerRootCertificateList.certificates.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  const __CFAllocator *v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  const __CFData *v7;
  SecCertificateRef v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *v0;
  v12 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v3 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    swift_bridgeObjectRetain_n();
    v4 = (unint64_t *)(v1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_20A120BD8(v5, *v4);
      v7 = (const __CFData *)sub_20A1A8C1C();
      v8 = SecCertificateCreateWithData(v3, v7);

      v9 = sub_20A120E74(v5, v6);
      if (v8)
      {
        MEMORY[0x20BD20924](v9);
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_20A1A8EC8();
        sub_20A1A8ED4();
        sub_20A1A8EBC();
      }
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v10 = v12;
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MobileDocumentReaderIssuerRootCertificateList.init(certificateData:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t MobileDocumentReaderIssuerRootCertificateList.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *v0;
  result = sub_20A1A9318();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (unint64_t *)(v1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_20A120BD8(v5, *v4);
      sub_20A1A8C34();
      sub_20A120E74(v5, v6);
      v4 += 2;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static MobileDocumentReaderIssuerRootCertificateList.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_20A124AA4(*a1, *a2);
}

uint64_t sub_20A124AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X8 }
  }
  return 1;
}

uint64_t sub_20A1253B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v13;
  _QWORD v14[8];
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v15 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  v4 = MEMORY[0x24BDAC7A8](v15);
  v6 = (_QWORD *)((char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v9 = (_QWORD *)((char *)v14 - v8);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v10 || a1 == a2)
    return 1;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14[7] = *(_QWORD *)(v7 + 72);
  v14[3] = a2;
  v14[4] = a1;
  sub_20A127E8C(a1 + v11, (uint64_t)v14 - v8, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem);
  sub_20A127E8C(a2 + v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem);
  v13 = *v9 == *v6 && v9[1] == v6[1];
  if ((v13 || (sub_20A1A9258() & 1) != 0) && (sub_20A1A8C58() & 1) != 0)
    __asm { BR              X10 }
  sub_20A124284((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem);
  sub_20A124284((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem);
  return 0;
}

uint64_t sub_20A125DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v21 = *(_QWORD *)(a1 + 16);
    v22 = a2 + 32;
    v23 = a1 + 32;
    while (1)
    {
      v5 = (_QWORD *)(v23 + 40 * v3);
      v6 = (_QWORD *)v5[2];
      v7 = v5[3];
      v8 = v5[4];
      v9 = (_QWORD *)(v22 + 40 * v3);
      v10 = (_QWORD *)v9[2];
      v24 = v9[3];
      v11 = v9[4];
      v12 = *v5 == *v9 && v5[1] == v9[1];
      if (!v12 && (sub_20A1A9258() & 1) == 0)
        return 0;
      if (v6)
      {
        if (!v10)
          return 0;
        v13 = v6[2];
        if (v13 != v10[2])
          return 0;
        if (v13)
          v14 = v6 == v10;
        else
          v14 = 1;
        if (!v14)
        {
          v15 = v6[4] == v10[4] && v6[5] == v10[5];
          if (!v15 && (sub_20A1A9258() & 1) == 0)
            return 0;
          v16 = v13 - 1;
          if (v16)
          {
            v17 = v10 + 7;
            v18 = v6 + 7;
            do
            {
              v19 = *(v18 - 1) == *(v17 - 1) && *v18 == *v17;
              if (!v19 && (sub_20A1A9258() & 1) == 0)
                return 0;
              v17 += 2;
              v18 += 2;
            }
            while (--v16);
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      if (v8 >> 60 != 15)
      {
        v4 = v7;
        if (v11 >> 60 != 15)
          __asm { BR              X8 }
LABEL_39:
        sub_20A127ED0(v4, v8);
        sub_20A127ED0(v24, v11);
        sub_20A127EE4(v4, v8);
        sub_20A127EE4(v24, v11);
        return 0;
      }
      v4 = v7;
      if (v11 >> 60 != 15)
        goto LABEL_39;
      if (++v3 == v21)
        return 1;
    }
  }
  return 1;
}

uint64_t sub_20A126560(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_20A1A9258(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_20A1A9258() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_20A126624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  BOOL v15;
  int v16;
  char v17;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v19 = a1;
      while (1)
      {
        v6 = *(_QWORD *)(a1 + v4 + 48);
        v7 = *(_QWORD *)(a1 + v4 + 56);
        v8 = *(_QWORD *)(a1 + v4 + 64);
        v9 = *(unsigned __int8 *)(a1 + v4 + 72);
        v10 = *(_QWORD *)(v3 + v4 + 48);
        v11 = *(_QWORD *)(v3 + v4 + 56);
        v12 = *(_QWORD *)(v3 + v4 + 64);
        v13 = *(unsigned __int8 *)(v3 + v4 + 72);
        v14 = *(_QWORD *)(a1 + v4 + 32) == *(_QWORD *)(v3 + v4 + 32)
           && *(_QWORD *)(a1 + v4 + 40) == *(_QWORD *)(v3 + v4 + 40);
        if (!v14 && (sub_20A1A9258() & 1) == 0)
          break;
        v15 = v6 == v10 && v7 == v11;
        if (!v15 && (sub_20A1A9258() & 1) == 0)
          break;
        if (v9)
        {
          if (v8)
          {
            if (v12)
              v16 = v13;
            else
              v16 = 0;
            if (v16 != 1)
              return 0;
          }
          else
          {
            if (v12)
              v17 = 0;
            else
              v17 = v13;
            if ((v17 & 1) == 0)
              return 0;
          }
        }
        else
        {
          if (v8 == v12)
            v5 = v13;
          else
            v5 = 1;
          if ((v5 & 1) != 0)
            return 0;
        }
        v4 += 48;
        --v2;
        a1 = v19;
        v3 = a2;
        if (!v2)
          return 1;
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_20A126744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  char *i;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (_BYTE *)(a1 + 40);
  for (i = (char *)(a2 + 40); ; i += 16)
  {
    v6 = *((_QWORD *)v3 - 1);
    v5 = *i;
    if (*v3 == 1)
      break;
    if (v6 != *((_QWORD *)i - 1))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
    v3 += 16;
    if (!--v2)
      return 1;
  }
  return ((uint64_t (*)(void))((char *)&loc_20A1267B8 + 4 * byte_20A1AC500[v6]))();
}

uint64_t sub_20A12693C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      v8 = *(v3 - 2);
      v9 = *(v3 - 1);
      v10 = *v3;
      if (v5)
      {
        if (!v8)
          return 0;
        v11 = *(v4 - 3) == *(v3 - 3) && v5 == v8;
        if (!v11 && (sub_20A1A9258() & 1) == 0)
          return 0;
      }
      else if (v8)
      {
        return 0;
      }
      v12 = v6 == v9 && v7 == v10;
      if (!v12 && (sub_20A1A9258() & 1) == 0)
        return 0;
      v3 += 4;
      v4 += 4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_20A126A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 40);
    for (i = (_QWORD *)(a1 + 40); ; i += 6)
    {
      v6 = i[1];
      v5 = i[2];
      v7 = i[4];
      v13 = i[3];
      v9 = v3[1];
      v8 = v3[2];
      v11 = v3[3];
      v10 = v3[4];
      if ((*(i - 1) != *(v3 - 1) || *i != *v3) && (sub_20A1A9258() & 1) == 0)
        break;
      if (v5)
      {
        if (!v8 || (v6 != v9 || v5 != v8) && (sub_20A1A9258() & 1) == 0)
          return 0;
      }
      else if (v8)
      {
        return 0;
      }
      if (v7)
      {
        if (!v10 || (v13 != v11 || v7 != v10) && (sub_20A1A9258() & 1) == 0)
          return 0;
      }
      else if (v10)
      {
        return 0;
      }
      v3 += 6;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_20A126B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  char *i;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (_BYTE *)(a1 + 40);
  for (i = (char *)(a2 + 40); ; i += 16)
  {
    v6 = *((_QWORD *)v3 - 1);
    v5 = *i;
    if (*v3 == 1)
      break;
    if (v6 != *((_QWORD *)i - 1))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
    v3 += 16;
    if (!--v2)
      return 1;
  }
  return ((uint64_t (*)(void))((char *)&loc_20A126BBC + 4 * byte_20A1AC517[v6]))();
}

BOOL sub_20A126CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  int *v5;
  int *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (int *)(a1 + 36);
  v6 = (int *)(a2 + 36);
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_20A126D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_20A127E8C(a1 + v12, (uint64_t)v10, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
        sub_20A127E8C(a2 + v12, (uint64_t)v7, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
        v15 = static MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.== infix(_:_:)(v10, v7);
        sub_20A124284((uint64_t)v7, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
        sub_20A124284((uint64_t)v10, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_20A126E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t result;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  BOOL v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;

  v4 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8320);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v65 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v22 || a1 == a2)
    return 1;
  v75 = v13;
  v76 = v18;
  v73 = v10;
  v23 = 0;
  v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v19 + 72);
  v71 = v5;
  v72 = v4;
  v69 = v11;
  v70 = v7;
  v67 = v25;
  v68 = v22;
  v65 = v27;
  v66 = v26;
  while (1)
  {
    v74 = v23;
    v28 = v27 * v23;
    sub_20A127E8C(v25 + v28, (uint64_t)v21, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
    sub_20A127E8C(v26 + v28, (uint64_t)v17, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
    v29 = (uint64_t)v75;
    v30 = (uint64_t)&v75[*(int *)(v11 + 48)];
    sub_20A127DC4((uint64_t)v21, (uint64_t)v75);
    sub_20A127DC4((uint64_t)v17, v30);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v31(v29, 1, v4) != 1)
      break;
    if (v31(v30, 1, v4) != 1)
      goto LABEL_58;
    sub_20A127E0C(v29, &qword_2545D8318);
LABEL_10:
    v34 = *(int *)(v76 + 20);
    v35 = *(_QWORD *)&v21[v34];
    v36 = *(_QWORD *)&v17[v34];
    v37 = *(_QWORD *)(v35 + 16);
    if (v37 != *(_QWORD *)(v36 + 16))
      goto LABEL_59;
    if (v37)
      v38 = v35 == v36;
    else
      v38 = 1;
    if (!v38)
    {
      v45 = (uint64_t *)(v36 + 56);
      v46 = (uint64_t *)(v35 + 56);
      do
      {
        v47 = *(v46 - 2);
        v48 = *(v46 - 1);
        v49 = *v46;
        v50 = *(v45 - 2);
        v51 = *(v45 - 1);
        v52 = *v45;
        if (v47)
        {
          if (!v50)
            goto LABEL_59;
          v53 = *(v46 - 3) == *(v45 - 3) && v47 == v50;
          if (!v53 && (sub_20A1A9258() & 1) == 0)
            goto LABEL_59;
        }
        else if (v50)
        {
          goto LABEL_59;
        }
        v54 = v48 == v51 && v49 == v52;
        if (!v54 && (sub_20A1A9258() & 1) == 0)
          goto LABEL_59;
        v45 += 4;
        v46 += 4;
      }
      while (--v37);
    }
    v39 = *(int *)(v76 + 24);
    v40 = *(_QWORD *)&v21[v39];
    v41 = *(_QWORD *)&v17[v39];
    v42 = *(_QWORD *)(v40 + 16);
    if (v42 != *(_QWORD *)(v41 + 16))
      goto LABEL_59;
    if (v42)
      v43 = v40 == v41;
    else
      v43 = 1;
    if (!v43)
    {
      v55 = (uint64_t *)(v41 + 56);
      v56 = (uint64_t *)(v40 + 56);
      do
      {
        v57 = *(v56 - 2);
        v58 = *(v56 - 1);
        v59 = *v56;
        v60 = *(v55 - 2);
        v61 = *(v55 - 1);
        v62 = *v55;
        if (v57)
        {
          if (!v60)
            goto LABEL_59;
          v63 = *(v56 - 3) == *(v55 - 3) && v57 == v60;
          if (!v63 && (sub_20A1A9258() & 1) == 0)
            goto LABEL_59;
        }
        else if (v60)
        {
          goto LABEL_59;
        }
        v64 = v58 == v61 && v59 == v62;
        if (!v64 && (sub_20A1A9258() & 1) == 0)
          goto LABEL_59;
        v55 += 4;
        v56 += 4;
        --v42;
      }
      while (v42);
    }
    v23 = v74 + 1;
    sub_20A124284((uint64_t)v17, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
    sub_20A124284((uint64_t)v21, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
    result = 1;
    v11 = v69;
    v5 = v71;
    v4 = v72;
    v7 = v70;
    v26 = v66;
    v25 = v67;
    v27 = v65;
    if (v23 == v68)
      return result;
  }
  v32 = (uint64_t)v73;
  sub_20A127DC4(v29, (uint64_t)v73);
  if (v31(v30, 1, v4) != 1)
  {
    sub_20A127E48(v30, (uint64_t)v7);
    v33 = static MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.== infix(_:_:)(v32, v7);
    sub_20A124284((uint64_t)v7, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
    sub_20A124284(v32, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
    sub_20A127E0C(v29, &qword_2545D8318);
    if ((v33 & 1) == 0)
      goto LABEL_59;
    goto LABEL_10;
  }
  sub_20A124284(v32, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
LABEL_58:
  sub_20A127E0C(v29, &qword_2545D8320);
LABEL_59:
  sub_20A124284((uint64_t)v17, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
  sub_20A124284((uint64_t)v21, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
  return 0;
}

uint64_t sub_20A127304()
{
  return 0x6369666974726563;
}

uint64_t sub_20A127328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6369666974726563 && a2 == 0xEF61746144657461)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A1273E0()
{
  sub_20A127550();
  return sub_20A1A9360();
}

uint64_t sub_20A127408()
{
  sub_20A127550();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderIssuerRootCertificateList.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A127550();
  sub_20A1A9354();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82C8);
  sub_20A1278D8(&qword_2545D82D0, (uint64_t (*)(void))sub_20A1275D8, MEMORY[0x24BEE12A0]);
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A127550()
{
  unint64_t result;

  result = qword_2545D82C0;
  if (!qword_2545D82C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC6E4, &type metadata for MobileDocumentReaderIssuerRootCertificateList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D82C0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x20BD21428](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_20A1275D8()
{
  unint64_t result;

  result = qword_2545D82D8;
  if (!qword_2545D82D8)
  {
    result = MEMORY[0x20BD21434](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2545D82D8);
  }
  return result;
}

uint64_t MobileDocumentReaderIssuerRootCertificateList.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *v0;
  sub_20A1A930C();
  sub_20A1A9318();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (unint64_t *)(v1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      sub_20A120BD8(v4, *v3);
      sub_20A1A8C34();
      sub_20A120E74(v4, v5);
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderIssuerRootCertificateList.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A127550();
  sub_20A1A9348();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82C8);
    sub_20A1278D8(&qword_2545D82E8, (uint64_t (*)(void))sub_20A127940, MEMORY[0x24BEE12D0]);
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A127804@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MobileDocumentReaderIssuerRootCertificateList.init(from:)(a1, a2);
}

uint64_t sub_20A127818(_QWORD *a1)
{
  return MobileDocumentReaderIssuerRootCertificateList.encode(to:)(a1);
}

uint64_t sub_20A127834()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *v0;
  sub_20A1A930C();
  v2 = *(_QWORD *)(v1 + 16);
  sub_20A1A9318();
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (unint64_t *)(v1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      sub_20A120BD8(v4, *v3);
      sub_20A1A8C34();
      sub_20A120E74(v4, v5);
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_20A1A933C();
}

uint64_t sub_20A1278D8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D82C8);
    v8 = a2();
    result = MEMORY[0x20BD21434](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A127940()
{
  unint64_t result;

  result = qword_2545D82F0;
  if (!qword_2545D82F0)
  {
    result = MEMORY[0x20BD21434](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2545D82F0);
  }
  return result;
}

unint64_t sub_20A127988()
{
  unint64_t result;

  result = qword_2545D82F8;
  if (!qword_2545D82F8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderIssuerRootCertificateList, &type metadata for MobileDocumentReaderIssuerRootCertificateList);
    atomic_store(result, (unint64_t *)&qword_2545D82F8);
  }
  return result;
}

uint64_t sub_20A1279CC(uint64_t *a1, uint64_t *a2)
{
  return sub_20A124AA4(*a1, *a2);
}

ValueMetadata *type metadata accessor for MobileDocumentReaderIssuerRootCertificateList()
{
  return &type metadata for MobileDocumentReaderIssuerRootCertificateList;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderIssuerRootCertificateList.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A127A28 + 4 * byte_20A1AC525[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A127A48 + 4 * byte_20A1AC52A[v4]))();
}

_BYTE *sub_20A127A28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A127A48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A127A50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A127A58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A127A60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A127A68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderIssuerRootCertificateList.CodingKeys()
{
  return &type metadata for MobileDocumentReaderIssuerRootCertificateList.CodingKeys;
}

unint64_t sub_20A127A88()
{
  unint64_t result;

  result = qword_2545D8300;
  if (!qword_2545D8300)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC6BC, &type metadata for MobileDocumentReaderIssuerRootCertificateList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8300);
  }
  return result;
}

unint64_t sub_20A127AD0()
{
  unint64_t result;

  result = qword_2545D8308;
  if (!qword_2545D8308)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC62C, &type metadata for MobileDocumentReaderIssuerRootCertificateList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8308);
  }
  return result;
}

unint64_t sub_20A127B18()
{
  unint64_t result;

  result = qword_2545D8310;
  if (!qword_2545D8310)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AC654, &type metadata for MobileDocumentReaderIssuerRootCertificateList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8310);
  }
  return result;
}

void sub_20A127B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_20A127BBC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x20A127DA0);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_20A127DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A127E0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A127E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A127E8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A127ED0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_20A120BD8(a1, a2);
  return a1;
}

uint64_t sub_20A127EE4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_20A120E74(a1, a2);
  return a1;
}

uint64_t MobileDocumentReaderSession.Error.Code.hash(into:)()
{
  uint64_t v0;
  uint64_t result;

  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
    case 0xFLL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
      result = sub_20A1A9318();
      break;
    default:
      sub_20A1A9318();
      result = sub_20A1A8DE4();
      break;
  }
  return result;
}

uint64_t sub_20A12801C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A128050 + 4 * byte_20A1AC755[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_20A128050()
{
  return 0x7469746E45746F6ELL;
}

unint64_t sub_20A1280E4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_20A1280F0()
{
  return 0x5464696C61766E69;
}

unint64_t sub_20A128110()
{
  return 0xD000000000000024;
}

uint64_t sub_20A12814C()
{
  return 0x65646F6373736170;
}

uint64_t sub_20A128170()
{
  return 0x6173694432617368;
}

unint64_t sub_20A128190()
{
  return 0xD000000000000014;
}

unint64_t sub_20A1281A8()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_20A1281C0()
{
  return 0x456E6F6973736573;
}

unint64_t sub_20A1281E4()
{
  return 0xD000000000000012;
}

uint64_t sub_20A1281FC()
{
  return 0x456B726F7774656ELL;
}

void sub_20A12821C()
{
  JUMPOUT(0x20A128230);
}

uint64_t sub_20A12823C()
{
  return 0x6F70707553746F6ELL;
}

uint64_t sub_20A128260()
{
  return 0x707553746F4E736FLL;
}

uint64_t sub_20A1282A0()
{
  sub_20A12CC1C();
  return sub_20A1A9360();
}

uint64_t sub_20A1282C8()
{
  sub_20A12CC1C();
  return sub_20A1A936C();
}

uint64_t sub_20A1282F0()
{
  sub_20A12CC60();
  return sub_20A1A9360();
}

uint64_t sub_20A128318()
{
  sub_20A12CC60();
  return sub_20A1A936C();
}

uint64_t sub_20A128340()
{
  unsigned __int8 *v0;

  return sub_20A12801C(*v0);
}

uint64_t sub_20A128348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A12E5C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A12836C(_BYTE *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_20A128378()
{
  sub_20A12C798();
  return sub_20A1A9360();
}

uint64_t sub_20A1283A0()
{
  sub_20A12C798();
  return sub_20A1A936C();
}

uint64_t sub_20A1283C8()
{
  sub_20A12CCA4();
  return sub_20A1A9360();
}

uint64_t sub_20A1283F0()
{
  sub_20A12CCA4();
  return sub_20A1A936C();
}

uint64_t sub_20A128418()
{
  sub_20A12CB94();
  return sub_20A1A9360();
}

uint64_t sub_20A128440()
{
  sub_20A12CB94();
  return sub_20A1A936C();
}

uint64_t sub_20A128468()
{
  sub_20A12C9FC();
  return sub_20A1A9360();
}

uint64_t sub_20A128490()
{
  sub_20A12C9FC();
  return sub_20A1A936C();
}

uint64_t sub_20A1284B8()
{
  sub_20A12CA40();
  return sub_20A1A9360();
}

uint64_t sub_20A1284E0()
{
  sub_20A12CA40();
  return sub_20A1A936C();
}

uint64_t sub_20A128508()
{
  sub_20A12C8A8();
  return sub_20A1A9360();
}

uint64_t sub_20A128530()
{
  sub_20A12C8A8();
  return sub_20A1A936C();
}

uint64_t sub_20A128558()
{
  sub_20A12CCE8();
  return sub_20A1A9360();
}

uint64_t sub_20A128580()
{
  sub_20A12CCE8();
  return sub_20A1A936C();
}

uint64_t sub_20A1285A8()
{
  sub_20A12CAC8();
  return sub_20A1A9360();
}

uint64_t sub_20A1285D0()
{
  sub_20A12CAC8();
  return sub_20A1A936C();
}

uint64_t sub_20A1285F8()
{
  sub_20A12CB50();
  return sub_20A1A9360();
}

uint64_t sub_20A128620()
{
  sub_20A12CB50();
  return sub_20A1A936C();
}

uint64_t sub_20A128648()
{
  sub_20A12C8EC();
  return sub_20A1A9360();
}

uint64_t sub_20A128670()
{
  sub_20A12C8EC();
  return sub_20A1A936C();
}

uint64_t sub_20A128698()
{
  sub_20A12CBD8();
  return sub_20A1A9360();
}

uint64_t sub_20A1286C0()
{
  sub_20A12CBD8();
  return sub_20A1A936C();
}

uint64_t sub_20A1286E8()
{
  sub_20A12C7DC();
  return sub_20A1A9360();
}

uint64_t sub_20A128710()
{
  sub_20A12C7DC();
  return sub_20A1A936C();
}

uint64_t sub_20A128738()
{
  sub_20A12C9B8();
  return sub_20A1A9360();
}

uint64_t sub_20A128760()
{
  sub_20A12C9B8();
  return sub_20A1A936C();
}

uint64_t sub_20A128788()
{
  sub_20A12CD2C();
  return sub_20A1A9360();
}

uint64_t sub_20A1287B0()
{
  sub_20A12CD2C();
  return sub_20A1A936C();
}

uint64_t sub_20A1287D8()
{
  sub_20A12C864();
  return sub_20A1A9360();
}

uint64_t sub_20A128800()
{
  sub_20A12C864();
  return sub_20A1A936C();
}

uint64_t sub_20A128828()
{
  sub_20A12C820();
  return sub_20A1A9360();
}

uint64_t sub_20A128850()
{
  sub_20A12C820();
  return sub_20A1A936C();
}

uint64_t sub_20A128878()
{
  sub_20A12CA84();
  return sub_20A1A9360();
}

uint64_t sub_20A1288A0()
{
  sub_20A12CA84();
  return sub_20A1A936C();
}

uint64_t sub_20A1288C8()
{
  sub_20A12C930();
  return sub_20A1A9360();
}

uint64_t sub_20A1288F0()
{
  sub_20A12C930();
  return sub_20A1A936C();
}

uint64_t sub_20A128918()
{
  sub_20A12C974();
  return sub_20A1A9360();
}

uint64_t sub_20A128940()
{
  sub_20A12C974();
  return sub_20A1A936C();
}

unint64_t sub_20A128968()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_20A128984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A12EF44(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20A1289AC()
{
  sub_20A12CB0C();
  return sub_20A1A9360();
}

uint64_t sub_20A1289D4()
{
  sub_20A12CB0C();
  return sub_20A1A936C();
}

uint64_t sub_20A1289FC()
{
  sub_20A12CD70();
  return sub_20A1A9360();
}

uint64_t sub_20A128A24()
{
  sub_20A12CD70();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderSession.Error.Code.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t result;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  char **v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8328);
  v127 = *(_QWORD *)(v3 - 8);
  v128 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v126 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8330);
  v124 = *(_QWORD *)(v5 - 8);
  v125 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v123 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8338);
  v121 = *(_QWORD *)(v7 - 8);
  v122 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v120 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8340);
  v118 = *(_QWORD *)(v9 - 8);
  v119 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8348);
  v115 = *(_QWORD *)(v11 - 8);
  v116 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v114 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8350);
  v112 = *(_QWORD *)(v13 - 8);
  v113 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v111 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8358);
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v108 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8360);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v105 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8368);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v102 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8370);
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8378);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v96 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8380);
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v92 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8388);
  v91 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v90 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8390);
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8398);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83A0);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83A8);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v78 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83B0);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v75 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83B8);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83C0);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83C8);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v30 = (char *)&v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83D0);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v66 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D83D8);
  v129 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v1[1];
  v66 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A12C798();
  v130 = v36;
  sub_20A1A9354();
  switch(v37)
  {
    case 0:
      v133 = 0;
      sub_20A12CD70();
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      goto LABEL_27;
    case 1:
      v133 = 1;
      sub_20A12CD2C();
      v45 = v130;
      v46 = v131;
      sub_20A1A91D4();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v30, v68);
      return (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v45, v46);
    case 2:
      v133 = 2;
      sub_20A12CCE8();
      v47 = v69;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v70 + 8);
      v49 = v47;
      v50 = (char **)&v103;
      goto LABEL_18;
    case 3:
      v133 = 3;
      sub_20A12CCA4();
      v51 = v72;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v73 + 8);
      v49 = v51;
      v50 = (char **)&v106;
      goto LABEL_18;
    case 4:
      v133 = 4;
      sub_20A12CC60();
      v52 = v75;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v76 + 8);
      v49 = v52;
      v50 = (char **)&v109;
      goto LABEL_18;
    case 5:
      v133 = 5;
      sub_20A12CC1C();
      v53 = v78;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v79 + 8);
      v49 = v53;
      v50 = (char **)&v112;
      goto LABEL_18;
    case 6:
      v133 = 6;
      sub_20A12CBD8();
      v54 = v81;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v82 + 8);
      v49 = v54;
      v50 = (char **)&v115;
      goto LABEL_18;
    case 7:
      v133 = 7;
      sub_20A12CB94();
      v55 = v84;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v85 + 8);
      v49 = v55;
      v50 = (char **)&v118;
      goto LABEL_18;
    case 8:
      v133 = 8;
      sub_20A12CB50();
      v56 = v87;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v88 + 8);
      v49 = v56;
      v50 = (char **)&v121;
      goto LABEL_18;
    case 9:
      v133 = 10;
      sub_20A12CAC8();
      v57 = v92;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v94 + 8);
      v49 = v57;
      v50 = (char **)&v127;
      goto LABEL_18;
    case 10:
      v133 = 11;
      sub_20A12CA84();
      v58 = v96;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v97 + 8);
      v49 = v58;
      v50 = &v130;
      goto LABEL_18;
    case 11:
      v133 = 12;
      sub_20A12CA40();
      v59 = v99;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v100 + 8);
      v49 = v59;
      v50 = (char **)&v132;
      goto LABEL_18;
    case 12:
      v133 = 13;
      sub_20A12C9FC();
      v60 = v102;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v103 + 8);
      v49 = v60;
      v50 = (char **)&v134;
      goto LABEL_18;
    case 13:
      v133 = 14;
      sub_20A12C9B8();
      v61 = v105;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v106 + 8);
      v49 = v61;
      v50 = (char **)&v135;
      goto LABEL_18;
    case 14:
      v133 = 15;
      sub_20A12C974();
      v62 = v108;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v48 = *(void (**)(char *, uint64_t))(v109 + 8);
      v49 = v62;
      v50 = (char **)&v136;
LABEL_18:
      v63 = (uint64_t)*(v50 - 32);
      goto LABEL_26;
    case 15:
      v133 = 16;
      sub_20A12C930();
      v64 = v111;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v65 = v112;
      v63 = v113;
      goto LABEL_25;
    case 16:
      v133 = 17;
      sub_20A12C8EC();
      v64 = v114;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v65 = v115;
      v63 = v116;
      goto LABEL_25;
    case 17:
      v133 = 18;
      sub_20A12C8A8();
      v64 = v117;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v65 = v118;
      v63 = v119;
      goto LABEL_25;
    case 18:
      v133 = 19;
      sub_20A12C864();
      v64 = v120;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v65 = v121;
      v63 = v122;
      goto LABEL_25;
    case 19:
      v133 = 20;
      sub_20A12C820();
      v64 = v123;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v65 = v124;
      v63 = v125;
      goto LABEL_25;
    case 20:
      v133 = 21;
      sub_20A12C7DC();
      v64 = v126;
      v39 = v130;
      v38 = v131;
      sub_20A1A91D4();
      v65 = v127;
      v63 = v128;
LABEL_25:
      v48 = *(void (**)(char *, uint64_t))(v65 + 8);
      v49 = v64;
LABEL_26:
      v48(v49, v63);
LABEL_27:
      result = (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v39, v38);
      break;
    default:
      v133 = 9;
      sub_20A12CB0C();
      v40 = v90;
      v42 = v130;
      v41 = v131;
      sub_20A1A91D4();
      v43 = v93;
      sub_20A1A9204();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v40, v43);
      result = (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v42, v41);
      break;
  }
  return result;
}

uint64_t MobileDocumentReaderSession.Error.Code.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderSession.Error.Code.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderSession.Error.Code.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD v40[6];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;

  v98 = a2;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8498);
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v103 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84A0);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v97 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84A8);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v96 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84B0);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v95 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84B8);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v94 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84C0);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v93 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84C8);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v92 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84D0);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v91 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84D8);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v90 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84E0);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v89 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84E8);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v88 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84F0);
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v87 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D84F8);
  v58 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v102 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8500);
  v52 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v85 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8508);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v101 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8510);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v86 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8518);
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v99 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8520);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v84 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8528);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v83 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8530);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v82 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8538);
  v40[5] = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v24 = (char *)v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8540);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8548);
  v29 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v31 = (char *)v40 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1[3];
  v104 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_20A12C798();
  v33 = v105;
  sub_20A1A9348();
  if (!v33)
  {
    v40[3] = v28;
    v40[1] = v26;
    v40[2] = v25;
    v40[4] = v24;
    v34 = v100;
    v105 = v29;
    v35 = sub_20A1A91C8();
    if (*(_QWORD *)(v35 + 16) == 1)
      __asm { BR              X10 }
    v36 = sub_20A1A90B4();
    swift_allocError();
    v38 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v38 = &type metadata for MobileDocumentReaderSession.Error.Code;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x24BEE26D0], v36);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v31, v34);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
}

uint64_t sub_20A12AE84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderSession.Error.Code.init(from:)(a1, a2);
}

uint64_t sub_20A12AE98(_QWORD *a1)
{
  return MobileDocumentReaderSession.Error.Code.encode(to:)(a1);
}

uint64_t sub_20A12AEAC()
{
  sub_20A1A930C();
  MobileDocumentReaderSession.Error.Code.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A12AEF8()
{
  sub_20A1A930C();
  MobileDocumentReaderSession.Error.Code.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderSession.Error.code.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_20A12CDB4(v2, v3);
}

void *MobileDocumentReaderSession.Error.underlyingError.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void MobileDocumentReaderSession.Error.underlyingError.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*MobileDocumentReaderSession.Error.underlyingError.modify())()
{
  return nullsub_1;
}

uint64_t MobileDocumentReaderSession.Error.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderSession.Error.debugDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*MobileDocumentReaderSession.Error.debugDescription.modify())()
{
  return nullsub_1;
}

__n128 MobileDocumentReaderSession.Error.init(code:underlyingError:debugDescription:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X8>)
{
  __n128 result;

  result = *a1;
  *a5 = *a1;
  a5[1].n128_u64[0] = a2;
  a5[1].n128_u64[1] = a3;
  a5[2].n128_u64[0] = a4;
  return result;
}

uint64_t MobileDocumentReaderSession.Error.init(_bridgedNSError:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t result;
  __int128 v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;

  v4 = objc_msgSend(a1, sel_domain);
  v5 = sub_20A1A8DB4();
  v7 = v6;

  sub_20A12CDC8();
  if (v5 == sub_20A1A8A90() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      goto LABEL_15;
  }
  v11 = objc_msgSend(a1, sel_userInfo);
  v12 = sub_20A1A8D54();

  if (!*(_QWORD *)(v12 + 16) || (v13 = sub_20A12B970(0xD00000000000002ALL, 0x800000020A1BC430), (v14 & 1) == 0))
  {
    v39 = 0u;
    v40 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_20A12CE64(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v39);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_14:
    sub_20A127E0C((uint64_t)&v39, &qword_2545D8558);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:

    result = swift_bridgeObjectRelease();
    *a2 = 0;
    a2[1] = 0;
    a2[3] = 0;
    a2[4] = 0;
    a2[2] = 1;
    return result;
  }
  sub_20A1A8B20();
  swift_allocObject();
  sub_20A1A8B14();
  sub_20A12CE0C();
  sub_20A1A8B08();
  swift_release();
  v16 = v39;
  v17 = objc_msgSend(a1, sel_code);
  if (*((_QWORD *)&v16 + 1) > 0x14uLL)
    v18 = 9;
  else
    v18 = qword_20A1ADC40[*((_QWORD *)&v16 + 1)];
  if (v17 != (id)v18)
  {
    sub_20A12CE50(v16, *((unint64_t *)&v16 + 1));
    sub_20A120E74(v37, v38);
    goto LABEL_15;
  }
  sub_20A12CDB4(v16, *((unint64_t *)&v16 + 1));
  v19 = objc_msgSend(a1, sel_userInfo);
  v20 = sub_20A1A8D54();

  v21 = sub_20A1A8DB4();
  if (*(_QWORD *)(v20 + 16) && (v23 = sub_20A12B970(v21, v22), (v24 & 1) != 0))
  {
    sub_20A12CE64(*(_QWORD *)(v20 + 56) + 32 * v23, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v40 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    if (swift_dynamicCast())
      v25 = (void *)v37;
    else
      v25 = 0;
  }
  else
  {
    sub_20A127E0C((uint64_t)&v39, &qword_2545D8558);
    v25 = 0;
  }
  v26 = v25;

  v27 = objc_msgSend(a1, sel_userInfo);
  v28 = sub_20A1A8D54();

  v29 = sub_20A1A8DB4();
  if (*(_QWORD *)(v28 + 16) && (v31 = sub_20A12B970(v29, v30), (v32 & 1) != 0))
  {
    sub_20A12CE64(*(_QWORD *)(v28 + 56) + 32 * v31, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_20A120E74(v37, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v40 + 1))
  {
    v33 = swift_dynamicCast();
    if (v33)
      v34 = v37;
    else
      v34 = 0;
    if (v33)
      v35 = v38;
    else
      v35 = 0;
  }
  else
  {
    sub_20A127E0C((uint64_t)&v39, &qword_2545D8558);
    v34 = 0;
    v35 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_20A12CDB4(v16, *((unint64_t *)&v16 + 1));
  v36 = v25;

  sub_20A12CE50(v16, *((unint64_t *)&v16 + 1));
  *(_OWORD *)a2 = v16;
  a2[2] = v25;
  a2[3] = v34;
  a2[4] = v35;
  sub_20A12CE50(v16, *((unint64_t *)&v16 + 1));

  return swift_bridgeObjectRelease();
}

uint64_t MobileDocumentReaderSession.Error.errorCode.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 > 0x14)
    return 9;
  else
    return qword_20A1ADC40[v1];
}

unint64_t MobileDocumentReaderSession.Error.errorUserInfo.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v24;
  char v25;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = MEMORY[0x24BEE4B00];
  v32 = MEMORY[0x24BEE4B00];
  sub_20A1A8B44();
  swift_allocObject();
  sub_20A1A8B38();
  sub_20A12CDB4(v1, v2);
  sub_20A12CEA0();
  v7 = sub_20A1A8B2C();
  v9 = v8;
  sub_20A12CE50(v1, v2);
  swift_release();
  v31 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)&v30 = v7;
  *((_QWORD *)&v30 + 1) = v9;
  sub_20A12CF20(&v30, v27);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_20A12C39C(v27, 0xD00000000000002ALL, 0x800000020A1BC430, isUniquelyReferenced_nonNull_native);
  v32 = v6;
  swift_bridgeObjectRelease();
  v11 = sub_20A1A8DB4();
  v13 = v11;
  v14 = v12;
  if (v5)
  {
    v31 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v30 = v4;
    *((_QWORD *)&v30 + 1) = v5;
    sub_20A12CF20(&v30, v27);
    swift_bridgeObjectRetain();
    v15 = v32;
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v32 = 0x8000000000000000;
    sub_20A12C39C(v27, v13, v14, v16);
    v32 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A12C0D8(v11, v12, &v30);
    swift_bridgeObjectRelease();
    sub_20A127E0C((uint64_t)&v30, &qword_2545D8558);
  }
  v17 = sub_20A1A8DB4();
  v19 = v17;
  v20 = v18;
  if (v3)
  {
    swift_getErrorValue();
    v21 = v28;
    v22 = v29;
    v31 = v29;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v30);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(boxed_opaque_existential_0, v21, v22);
    sub_20A12CF20(&v30, v27);
    v24 = v32;
    v25 = swift_isUniquelyReferenced_nonNull_native();
    v32 = 0x8000000000000000;
    sub_20A12C39C(v27, v19, v20, v25);
    v32 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A12C0D8(v17, v18, &v30);
    swift_bridgeObjectRelease();
    sub_20A127E0C((uint64_t)&v30, &qword_2545D8558);
  }
  return v32;
}

uint64_t sub_20A12B83C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 > 0x14)
    return 9;
  else
    return qword_20A1ADC40[v1];
}

uint64_t sub_20A12B868()
{
  sub_20A12CDC8();
  return sub_20A1A92B8();
}

uint64_t sub_20A12B890()
{
  sub_20A12CDC8();
  return sub_20A1A92AC();
}

unint64_t sub_20A12B8BC(uint64_t a1, char a2)
{
  char v3;
  uint64_t v4;

  v3 = a2 & 1;
  sub_20A1A930C();
  IdentityElement.rawValue.getter();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  v4 = sub_20A1A933C();
  return sub_20A12BA04(a1, v3, v4);
}

unint64_t sub_20A12B940(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20A1A9300();
  return sub_20A12BE98(a1, v2);
}

unint64_t sub_20A12B970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_20A1A930C();
  sub_20A1A8DE4();
  v4 = sub_20A1A933C();
  return sub_20A12BF34(a1, a2, v4);
}

unint64_t sub_20A12B9D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20A1A9030();
  return sub_20A12C014(a1, v2);
}

unint64_t sub_20A12BA04(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;

  v4 = a3 & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v7 = *(_QWORD *)(v3 + 48) + 16 * v4;
    if (*(_BYTE *)(v7 + 8) == 1)
      __asm { BR              X9 }
    sub_20A1A9240();
    sub_20A1A8DF0();
    swift_bridgeObjectRelease();
    sub_20A1A8DF0();
    if ((a2 & 1) != 0)
      __asm { BR              X8 }
    sub_20A1A9240();
    sub_20A1A8DF0();
    swift_bridgeObjectRelease();
    sub_20A1A8DF0();
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_20A12BE98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_20A12BF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_20A1A9258() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_20A1A9258() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_20A12C014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_20A12EFC8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x20BD20AD4](v9, a1);
      sub_20A12F004((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

double sub_20A12C0D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_20A12B970(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20A180138();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_20A12CF20((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_20A12C1C8(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_20A12C1C8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A1A9024();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_20A1A930C();
        swift_bridgeObjectRetain();
        sub_20A1A8DE4();
        v10 = sub_20A1A933C();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_20A12C39C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_20A12B970(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_20A12CF20(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_20A180138();
      goto LABEL_7;
    }
    sub_20A17F8E4(v15, a4 & 1);
    v21 = sub_20A12B970(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_20A12C4CC(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_20A1A92A0();
  __break(1u);
  return result;
}

_OWORD *sub_20A12C4CC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_20A12CF20(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t _s7CoreIDV27MobileDocumentReaderSessionC5ErrorV4CodeO2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_50;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_50;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_50;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_50;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_50;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_50;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_50;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_50;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_50;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_50;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_50;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_50;
      v6 = 1;
      v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12)
        goto LABEL_50;
      v6 = 1;
      v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13)
        goto LABEL_50;
      v6 = 1;
      v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14)
        goto LABEL_50;
      v6 = 1;
      v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15)
        goto LABEL_50;
      v6 = 1;
      v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16)
        goto LABEL_50;
      v6 = 1;
      v3 = 16;
      break;
    case 0x11uLL:
      if (v5 != 17)
        goto LABEL_50;
      v6 = 1;
      v3 = 17;
      break;
    case 0x12uLL:
      if (v5 != 18)
        goto LABEL_50;
      v6 = 1;
      v3 = 18;
      break;
    case 0x13uLL:
      if (v5 != 19)
        goto LABEL_50;
      v6 = 1;
      v3 = 19;
      break;
    case 0x14uLL:
      if (v5 != 20)
        goto LABEL_50;
      v6 = 1;
      v3 = 20;
      break;
    default:
      if (v5 < 0x15)
      {
LABEL_50:
        v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        v6 = 1;
      }
      else
      {
        v6 = sub_20A1A9258();
      }
      sub_20A12CDB4(v4, v5);
      sub_20A12CDB4(v2, v3);
      break;
  }
  sub_20A12CE50(v2, v3);
  sub_20A12CE50(v4, v5);
  return v6 & 1;
}

unint64_t sub_20A12C798()
{
  unint64_t result;

  result = qword_2545D83E0;
  if (!qword_2545D83E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADBE8, &_s5ErrorV4CodeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D83E0);
  }
  return result;
}

unint64_t sub_20A12C7DC()
{
  unint64_t result;

  result = qword_2545D83E8;
  if (!qword_2545D83E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADB98, &_s5ErrorV4CodeO37NfcNegotiatedHandoverFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D83E8);
  }
  return result;
}

unint64_t sub_20A12C820()
{
  unint64_t result;

  result = qword_2545D83F0;
  if (!qword_2545D83F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADB48, &_s5ErrorV4CodeO24OsNotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D83F0);
  }
  return result;
}

unint64_t sub_20A12C864()
{
  unint64_t result;

  result = qword_2545D83F8;
  if (!qword_2545D83F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADAF8, &_s5ErrorV4CodeO22NotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D83F8);
  }
  return result;
}

unint64_t sub_20A12C8A8()
{
  unint64_t result;

  result = qword_2545D8400;
  if (!qword_2545D8400)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADAA8, &_s5ErrorV4CodeO32ICloudAccountSignedOutCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8400);
  }
  return result;
}

unint64_t sub_20A12C8EC()
{
  unint64_t result;

  result = qword_2545D8408;
  if (!qword_2545D8408)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADA58, &_s5ErrorV4CodeO22NetworkErrorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8408);
  }
  return result;
}

unint64_t sub_20A12C930()
{
  unint64_t result;

  result = qword_2545D8410;
  if (!qword_2545D8410)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADA08, &_s5ErrorV4CodeO28ServiceUnavailableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8410);
  }
  return result;
}

unint64_t sub_20A12C974()
{
  unint64_t result;

  result = qword_2545D8418;
  if (!qword_2545D8418)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD9B8, &_s5ErrorV4CodeO24SessionExpiredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8418);
  }
  return result;
}

unint64_t sub_20A12C9B8()
{
  unint64_t result;

  result = qword_2545D8420;
  if (!qword_2545D8420)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD968, &_s5ErrorV4CodeO38NfcOverheatProtectionEnabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8420);
  }
  return result;
}

unint64_t sub_20A12C9FC()
{
  unint64_t result;

  result = qword_2545D8428;
  if (!qword_2545D8428)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD918, &_s5ErrorV4CodeO30DocumentReadTimedOutCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8428);
  }
  return result;
}

unint64_t sub_20A12CA40()
{
  unint64_t result;

  result = qword_2545D8430;
  if (!qword_2545D8430)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD8C8, &_s5ErrorV4CodeO22Hsa2DisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8430);
  }
  return result;
}

unint64_t sub_20A12CA84()
{
  unint64_t result;

  result = qword_2545D8438;
  if (!qword_2545D8438)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD878, &_s5ErrorV4CodeO24PasscodeNotSetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8438);
  }
  return result;
}

unint64_t sub_20A12CAC8()
{
  unint64_t result;

  result = qword_2545D8440;
  if (!qword_2545D8440)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD828, &_s5ErrorV4CodeO25InvalidResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8440);
  }
  return result;
}

unint64_t sub_20A12CB0C()
{
  unint64_t result;

  result = qword_2545D8448;
  if (!qword_2545D8448)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD7D8, &_s5ErrorV4CodeO46TermsAndConditionsAcceptanceRequiredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8448);
  }
  return result;
}

unint64_t sub_20A12CB50()
{
  unint64_t result;

  result = qword_2545D8450;
  if (!qword_2545D8450)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD788, &_s5ErrorV4CodeO22InvalidTokenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8450);
  }
  return result;
}

unint64_t sub_20A12CB94()
{
  unint64_t result;

  result = qword_2545D8458;
  if (!qword_2545D8458)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD738, &_s5ErrorV4CodeO37DocumentReadConnectionErrorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8458);
  }
  return result;
}

unint64_t sub_20A12CBD8()
{
  unint64_t result;

  result = qword_2545D8460;
  if (!qword_2545D8460)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD6E8, &_s5ErrorV4CodeO21NfcDisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8460);
  }
  return result;
}

unint64_t sub_20A12CC1C()
{
  unint64_t result;

  result = qword_2545D8468;
  if (!qword_2545D8468)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD698, &_s5ErrorV4CodeO27BluetoothDisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8468);
  }
  return result;
}

unint64_t sub_20A12CC60()
{
  unint64_t result;

  result = qword_2545D8470;
  if (!qword_2545D8470)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD648, &_s5ErrorV4CodeO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8470);
  }
  return result;
}

unint64_t sub_20A12CCA4()
{
  unint64_t result;

  result = qword_2545D8478;
  if (!qword_2545D8478)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD5F8, &_s5ErrorV4CodeO39DocumentReadAlreadyInProgressCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8478);
  }
  return result;
}

unint64_t sub_20A12CCE8()
{
  unint64_t result;

  result = qword_2545D8480;
  if (!qword_2545D8480)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD5A8, &_s5ErrorV4CodeO24InvalidRequestCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8480);
  }
  return result;
}

unint64_t sub_20A12CD2C()
{
  unint64_t result;

  result = qword_2545D8488;
  if (!qword_2545D8488)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD558, &_s5ErrorV4CodeO21NotEntitledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8488);
  }
  return result;
}

unint64_t sub_20A12CD70()
{
  unint64_t result;

  result = qword_2545D8490;
  if (!qword_2545D8490)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD508, &_s5ErrorV4CodeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8490);
  }
  return result;
}

uint64_t sub_20A12CDB4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x15)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_20A12CDC8()
{
  unint64_t result;

  result = qword_2545D8550;
  if (!qword_2545D8550)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderSession.Error, &type metadata for MobileDocumentReaderSession.Error);
    atomic_store(result, (unint64_t *)&qword_2545D8550);
  }
  return result;
}

unint64_t sub_20A12CE0C()
{
  unint64_t result;

  result = qword_2545D8560;
  if (!qword_2545D8560)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderSession.Error.Code, &type metadata for MobileDocumentReaderSession.Error.Code);
    atomic_store(result, (unint64_t *)&qword_2545D8560);
  }
  return result;
}

uint64_t sub_20A12CE50(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x15)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_20A12CE64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_20A12CEA0()
{
  unint64_t result;

  result = qword_2545D8568;
  if (!qword_2545D8568)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderSession.Error.Code, &type metadata for MobileDocumentReaderSession.Error.Code);
    atomic_store(result, (unint64_t *)&qword_2545D8568);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

_OWORD *sub_20A12CF20(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_20A12CF34()
{
  unint64_t result;

  result = qword_2545D8570;
  if (!qword_2545D8570)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderSession.Error.Code, &type metadata for MobileDocumentReaderSession.Error.Code);
    atomic_store(result, (unint64_t *)&qword_2545D8570);
  }
  return result;
}

unint64_t sub_20A12CF7C()
{
  unint64_t result;

  result = qword_2545D8578;
  if (!qword_2545D8578)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderSession.Error, &type metadata for MobileDocumentReaderSession.Error);
    atomic_store(result, (unint64_t *)&qword_2545D8578);
  }
  return result;
}

uint64_t _s5ErrorVwxx(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0x15uLL)
    swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *_s5ErrorVwcp(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  if (v4 >= 0x15)
  {
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = (void *)a2[2];
  v6 = v5;
  v8 = a2[3];
  v7 = a2[4];
  a1[2] = v5;
  a1[3] = v8;
  a1[4] = v7;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5ErrorVwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a2[1];
  if (a1[1] >= 0x15uLL)
  {
    if (v4 >= 0x15)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_20A127E0C((uint64_t)a1, &qword_2545D8580);
    goto LABEL_6;
  }
  if (v4 < 0x15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  v5 = (void *)a1[2];
  v6 = (void *)a2[2];
  v7 = v6;
  a1[2] = v6;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *_s5ErrorVwta(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  void *v5;
  uint64_t v6;

  if (a1[1] >= 0x15uLL)
  {
    v4 = a2[1];
    if (v4 >= 0x15)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A127E0C((uint64_t)a1, &qword_2545D8580);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v5 = (void *)a1[2];
  a1[2] = a2[2];

  v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5ErrorVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5ErrorVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderSession.Error()
{
  return &type metadata for MobileDocumentReaderSession.Error;
}

unint64_t _s5ErrorV4CodeOwxx(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s5ErrorV4CodeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *_s5ErrorV4CodeOwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s5ErrorV4CodeOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5ErrorV4CodeOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFEA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483627);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 20;
  if (v4 >= 0x16)
    return v5;
  else
    return 0;
}

uint64_t _s5ErrorV4CodeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483627;
    if (a3 >= 0x7FFFFFEB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFEB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 20;
  }
  return result;
}

uint64_t sub_20A12D4B4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_20A12D4CC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderSession.Error.Code()
{
  return &type metadata for MobileDocumentReaderSession.Error.Code;
}

uint64_t _s5ErrorV4CodeO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEB)
    goto LABEL_17;
  if (a2 + 21 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 21) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 21;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 21;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 21;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v8 = v6 - 22;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5ErrorV4CodeO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_20A12D5D8 + 4 * byte_20A1AC7F6[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_20A12D60C + 4 * byte_20A1AC7F1[v4]))();
}

uint64_t sub_20A12D60C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A12D614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A12D61CLL);
  return result;
}

uint64_t sub_20A12D628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A12D630);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_20A12D634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A12D63C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5ErrorV4CodeO10CodingKeysOMa()
{
  return &_s5ErrorV4CodeO10CodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO17UnknownCodingKeysOMa()
{
  return &_s5ErrorV4CodeO17UnknownCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO21NotEntitledCodingKeysOMa()
{
  return &_s5ErrorV4CodeO21NotEntitledCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO24InvalidRequestCodingKeysOMa()
{
  return &_s5ErrorV4CodeO24InvalidRequestCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO39DocumentReadAlreadyInProgressCodingKeysOMa()
{
  return &_s5ErrorV4CodeO39DocumentReadAlreadyInProgressCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO19CancelledCodingKeysOMa()
{
  return &_s5ErrorV4CodeO19CancelledCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO27BluetoothDisabledCodingKeysOMa()
{
  return &_s5ErrorV4CodeO27BluetoothDisabledCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO21NfcDisabledCodingKeysOMa()
{
  return &_s5ErrorV4CodeO21NfcDisabledCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO37DocumentReadConnectionErrorCodingKeysOMa()
{
  return &_s5ErrorV4CodeO37DocumentReadConnectionErrorCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO22InvalidTokenCodingKeysOMa()
{
  return &_s5ErrorV4CodeO22InvalidTokenCodingKeysON;
}

uint64_t _s5ErrorV4CodeO46TermsAndConditionsAcceptanceRequiredCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A12D728 + 4 * byte_20A1AC7FB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A12D748 + 4 * byte_20A1AC800[v4]))();
}

_BYTE *sub_20A12D728(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A12D748(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A12D750(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A12D758(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A12D760(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A12D768(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s5ErrorV4CodeO46TermsAndConditionsAcceptanceRequiredCodingKeysOMa()
{
  return &_s5ErrorV4CodeO46TermsAndConditionsAcceptanceRequiredCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO25InvalidResponseCodingKeysOMa()
{
  return &_s5ErrorV4CodeO25InvalidResponseCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO24PasscodeNotSetCodingKeysOMa()
{
  return &_s5ErrorV4CodeO24PasscodeNotSetCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO22Hsa2DisabledCodingKeysOMa()
{
  return &_s5ErrorV4CodeO22Hsa2DisabledCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO30DocumentReadTimedOutCodingKeysOMa()
{
  return &_s5ErrorV4CodeO30DocumentReadTimedOutCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO38NfcOverheatProtectionEnabledCodingKeysOMa()
{
  return &_s5ErrorV4CodeO38NfcOverheatProtectionEnabledCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO24SessionExpiredCodingKeysOMa()
{
  return &_s5ErrorV4CodeO24SessionExpiredCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO28ServiceUnavailableCodingKeysOMa()
{
  return &_s5ErrorV4CodeO28ServiceUnavailableCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO22NetworkErrorCodingKeysOMa()
{
  return &_s5ErrorV4CodeO22NetworkErrorCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO32ICloudAccountSignedOutCodingKeysOMa()
{
  return &_s5ErrorV4CodeO32ICloudAccountSignedOutCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO22NotSupportedCodingKeysOMa()
{
  return &_s5ErrorV4CodeO22NotSupportedCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO24OsNotSupportedCodingKeysOMa()
{
  return &_s5ErrorV4CodeO24OsNotSupportedCodingKeysON;
}

ValueMetadata *_s5ErrorV4CodeO37NfcNegotiatedHandoverFailedCodingKeysOMa()
{
  return &_s5ErrorV4CodeO37NfcNegotiatedHandoverFailedCodingKeysON;
}

unint64_t sub_20A12D848()
{
  unint64_t result;

  result = qword_2545D8588;
  if (!qword_2545D8588)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD158, &_s5ErrorV4CodeO46TermsAndConditionsAcceptanceRequiredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8588);
  }
  return result;
}

unint64_t sub_20A12D890()
{
  unint64_t result;

  result = qword_2545D8590;
  if (!qword_2545D8590)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD4E0, &_s5ErrorV4CodeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8590);
  }
  return result;
}

unint64_t sub_20A12D8D8()
{
  unint64_t result;

  result = qword_2545D8598;
  if (!qword_2545D8598)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD400, &_s5ErrorV4CodeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8598);
  }
  return result;
}

unint64_t sub_20A12D920()
{
  unint64_t result;

  result = qword_2545D85A0;
  if (!qword_2545D85A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD428, &_s5ErrorV4CodeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85A0);
  }
  return result;
}

unint64_t sub_20A12D968()
{
  unint64_t result;

  result = qword_2545D85A8;
  if (!qword_2545D85A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD3B0, &_s5ErrorV4CodeO21NotEntitledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85A8);
  }
  return result;
}

unint64_t sub_20A12D9B0()
{
  unint64_t result;

  result = qword_2545D85B0;
  if (!qword_2545D85B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD3D8, &_s5ErrorV4CodeO21NotEntitledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85B0);
  }
  return result;
}

unint64_t sub_20A12D9F8()
{
  unint64_t result;

  result = qword_2545D85B8;
  if (!qword_2545D85B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD360, &_s5ErrorV4CodeO24InvalidRequestCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85B8);
  }
  return result;
}

unint64_t sub_20A12DA40()
{
  unint64_t result;

  result = qword_2545D85C0;
  if (!qword_2545D85C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD388, &_s5ErrorV4CodeO24InvalidRequestCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85C0);
  }
  return result;
}

unint64_t sub_20A12DA88()
{
  unint64_t result;

  result = qword_2545D85C8;
  if (!qword_2545D85C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD310, &_s5ErrorV4CodeO39DocumentReadAlreadyInProgressCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85C8);
  }
  return result;
}

unint64_t sub_20A12DAD0()
{
  unint64_t result;

  result = qword_2545D85D0;
  if (!qword_2545D85D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD338, &_s5ErrorV4CodeO39DocumentReadAlreadyInProgressCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85D0);
  }
  return result;
}

unint64_t sub_20A12DB18()
{
  unint64_t result;

  result = qword_2545D85D8;
  if (!qword_2545D85D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD2C0, &_s5ErrorV4CodeO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85D8);
  }
  return result;
}

unint64_t sub_20A12DB60()
{
  unint64_t result;

  result = qword_2545D85E0;
  if (!qword_2545D85E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD2E8, &_s5ErrorV4CodeO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85E0);
  }
  return result;
}

unint64_t sub_20A12DBA8()
{
  unint64_t result;

  result = qword_2545D85E8;
  if (!qword_2545D85E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD270, &_s5ErrorV4CodeO27BluetoothDisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85E8);
  }
  return result;
}

unint64_t sub_20A12DBF0()
{
  unint64_t result;

  result = qword_2545D85F0;
  if (!qword_2545D85F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD298, &_s5ErrorV4CodeO27BluetoothDisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85F0);
  }
  return result;
}

unint64_t sub_20A12DC38()
{
  unint64_t result;

  result = qword_2545D85F8;
  if (!qword_2545D85F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD220, &_s5ErrorV4CodeO21NfcDisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D85F8);
  }
  return result;
}

unint64_t sub_20A12DC80()
{
  unint64_t result;

  result = qword_2545D8600;
  if (!qword_2545D8600)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD248, &_s5ErrorV4CodeO21NfcDisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8600);
  }
  return result;
}

unint64_t sub_20A12DCC8()
{
  unint64_t result;

  result = qword_2545D8608;
  if (!qword_2545D8608)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD1D0, &_s5ErrorV4CodeO37DocumentReadConnectionErrorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8608);
  }
  return result;
}

unint64_t sub_20A12DD10()
{
  unint64_t result;

  result = qword_2545D8610;
  if (!qword_2545D8610)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD1F8, &_s5ErrorV4CodeO37DocumentReadConnectionErrorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8610);
  }
  return result;
}

unint64_t sub_20A12DD58()
{
  unint64_t result;

  result = qword_2545D8618;
  if (!qword_2545D8618)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD180, &_s5ErrorV4CodeO22InvalidTokenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8618);
  }
  return result;
}

unint64_t sub_20A12DDA0()
{
  unint64_t result;

  result = qword_2545D8620;
  if (!qword_2545D8620)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD1A8, &_s5ErrorV4CodeO22InvalidTokenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8620);
  }
  return result;
}

unint64_t sub_20A12DDE8()
{
  unint64_t result;

  result = qword_2545D8628;
  if (!qword_2545D8628)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD0C8, &_s5ErrorV4CodeO46TermsAndConditionsAcceptanceRequiredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8628);
  }
  return result;
}

unint64_t sub_20A12DE30()
{
  unint64_t result;

  result = qword_2545D8630;
  if (!qword_2545D8630)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD0F0, &_s5ErrorV4CodeO46TermsAndConditionsAcceptanceRequiredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8630);
  }
  return result;
}

unint64_t sub_20A12DE78()
{
  unint64_t result;

  result = qword_2545D8638;
  if (!qword_2545D8638)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD078, &_s5ErrorV4CodeO25InvalidResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8638);
  }
  return result;
}

unint64_t sub_20A12DEC0()
{
  unint64_t result;

  result = qword_2545D8640;
  if (!qword_2545D8640)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD0A0, &_s5ErrorV4CodeO25InvalidResponseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8640);
  }
  return result;
}

unint64_t sub_20A12DF08()
{
  unint64_t result;

  result = qword_2545D8648;
  if (!qword_2545D8648)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD028, &_s5ErrorV4CodeO24PasscodeNotSetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8648);
  }
  return result;
}

unint64_t sub_20A12DF50()
{
  unint64_t result;

  result = qword_2545D8650;
  if (!qword_2545D8650)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD050, &_s5ErrorV4CodeO24PasscodeNotSetCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8650);
  }
  return result;
}

unint64_t sub_20A12DF98()
{
  unint64_t result;

  result = qword_2545D8658;
  if (!qword_2545D8658)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACFD8, &_s5ErrorV4CodeO22Hsa2DisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8658);
  }
  return result;
}

unint64_t sub_20A12DFE0()
{
  unint64_t result;

  result = qword_2545D8660;
  if (!qword_2545D8660)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD000, &_s5ErrorV4CodeO22Hsa2DisabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8660);
  }
  return result;
}

unint64_t sub_20A12E028()
{
  unint64_t result;

  result = qword_2545D8668;
  if (!qword_2545D8668)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACF88, &_s5ErrorV4CodeO30DocumentReadTimedOutCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8668);
  }
  return result;
}

unint64_t sub_20A12E070()
{
  unint64_t result;

  result = qword_2545D8670;
  if (!qword_2545D8670)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACFB0, &_s5ErrorV4CodeO30DocumentReadTimedOutCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8670);
  }
  return result;
}

unint64_t sub_20A12E0B8()
{
  unint64_t result;

  result = qword_2545D8678;
  if (!qword_2545D8678)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACF38, &_s5ErrorV4CodeO38NfcOverheatProtectionEnabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8678);
  }
  return result;
}

unint64_t sub_20A12E100()
{
  unint64_t result;

  result = qword_2545D8680;
  if (!qword_2545D8680)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACF60, &_s5ErrorV4CodeO38NfcOverheatProtectionEnabledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8680);
  }
  return result;
}

unint64_t sub_20A12E148()
{
  unint64_t result;

  result = qword_2545D8688;
  if (!qword_2545D8688)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACEE8, &_s5ErrorV4CodeO24SessionExpiredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8688);
  }
  return result;
}

unint64_t sub_20A12E190()
{
  unint64_t result;

  result = qword_2545D8690;
  if (!qword_2545D8690)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACF10, &_s5ErrorV4CodeO24SessionExpiredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8690);
  }
  return result;
}

unint64_t sub_20A12E1D8()
{
  unint64_t result;

  result = qword_2545D8698;
  if (!qword_2545D8698)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACE98, &_s5ErrorV4CodeO28ServiceUnavailableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8698);
  }
  return result;
}

unint64_t sub_20A12E220()
{
  unint64_t result;

  result = qword_2545D86A0;
  if (!qword_2545D86A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACEC0, &_s5ErrorV4CodeO28ServiceUnavailableCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86A0);
  }
  return result;
}

unint64_t sub_20A12E268()
{
  unint64_t result;

  result = qword_2545D86A8;
  if (!qword_2545D86A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACE48, &_s5ErrorV4CodeO22NetworkErrorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86A8);
  }
  return result;
}

unint64_t sub_20A12E2B0()
{
  unint64_t result;

  result = qword_2545D86B0;
  if (!qword_2545D86B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACE70, &_s5ErrorV4CodeO22NetworkErrorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86B0);
  }
  return result;
}

unint64_t sub_20A12E2F8()
{
  unint64_t result;

  result = qword_2545D86B8;
  if (!qword_2545D86B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACDF8, &_s5ErrorV4CodeO32ICloudAccountSignedOutCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86B8);
  }
  return result;
}

unint64_t sub_20A12E340()
{
  unint64_t result;

  result = qword_2545D86C0;
  if (!qword_2545D86C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACE20, &_s5ErrorV4CodeO32ICloudAccountSignedOutCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86C0);
  }
  return result;
}

unint64_t sub_20A12E388()
{
  unint64_t result;

  result = qword_2545D86C8;
  if (!qword_2545D86C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACDA8, &_s5ErrorV4CodeO22NotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86C8);
  }
  return result;
}

unint64_t sub_20A12E3D0()
{
  unint64_t result;

  result = qword_2545D86D0;
  if (!qword_2545D86D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACDD0, &_s5ErrorV4CodeO22NotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86D0);
  }
  return result;
}

unint64_t sub_20A12E418()
{
  unint64_t result;

  result = qword_2545D86D8;
  if (!qword_2545D86D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACD58, &_s5ErrorV4CodeO24OsNotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86D8);
  }
  return result;
}

unint64_t sub_20A12E460()
{
  unint64_t result;

  result = qword_2545D86E0;
  if (!qword_2545D86E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACD80, &_s5ErrorV4CodeO24OsNotSupportedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86E0);
  }
  return result;
}

unint64_t sub_20A12E4A8()
{
  unint64_t result;

  result = qword_2545D86E8;
  if (!qword_2545D86E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACD08, &_s5ErrorV4CodeO37NfcNegotiatedHandoverFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86E8);
  }
  return result;
}

unint64_t sub_20A12E4F0()
{
  unint64_t result;

  result = qword_2545D86F0;
  if (!qword_2545D86F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ACD30, &_s5ErrorV4CodeO37NfcNegotiatedHandoverFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86F0);
  }
  return result;
}

unint64_t sub_20A12E538()
{
  unint64_t result;

  result = qword_2545D86F8;
  if (!qword_2545D86F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD450, &_s5ErrorV4CodeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D86F8);
  }
  return result;
}

unint64_t sub_20A12E580()
{
  unint64_t result;

  result = qword_2545D8700;
  if (!qword_2545D8700)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AD478, &_s5ErrorV4CodeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545D8700);
  }
  return result;
}

uint64_t sub_20A12E5C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469746E45746F6ELL && a2 == 0xEB0000000064656CLL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5264696C61766E69 && a2 == 0xEE00747365757165 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000020A1BC460 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC480 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x626173694463666ELL && a2 == 0xEB0000000064656CLL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A1BC4A0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x5464696C61766E69 && a2 == 0xEC0000006E656B6FLL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x800000020A1BC4C0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x5264696C61766E69 && a2 == 0xEF65736E6F707365 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x65646F6373736170 && a2 == 0xEE00746553746F4ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6173694432617368 && a2 == 0xEC00000064656C62 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A1BC4F0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000020A1BC510 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x456E6F6973736573 && a2 == 0xEE00646572697078 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A1BC530 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BC550 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6F70707553746F6ELL && a2 == 0xEC00000064657472 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x707553746F4E736FLL && a2 == 0xEE00646574726F70 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A1BC570)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 21;
    else
      return 22;
  }
}

uint64_t sub_20A12EF44(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A1BC590)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20A12EFC8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_20A12F004(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t static MobileDocumentReaderStoreSession.Error.Code.== infix(_:_:)()
{
  return 1;
}

uint64_t MobileDocumentReaderStoreSession.Error.Code.hash(into:)()
{
  return sub_20A1A9318();
}

uint64_t sub_20A12F06C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_20A12F084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A12F118()
{
  sub_20A12F2F4();
  return sub_20A1A9360();
}

uint64_t sub_20A12F140()
{
  sub_20A12F2F4();
  return sub_20A1A936C();
}

uint64_t sub_20A12F168()
{
  sub_20A12F338();
  return sub_20A1A9360();
}

uint64_t sub_20A12F190()
{
  sub_20A12F338();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderStoreSession.Error.Code.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8708);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8710);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A12F2F4();
  sub_20A1A9354();
  sub_20A12F338();
  sub_20A1A91D4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A12F2F4()
{
  unint64_t result;

  result = qword_2545D8718;
  if (!qword_2545D8718)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADFFC, &_s5ErrorV4CodeO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2545D8718);
  }
  return result;
}

unint64_t sub_20A12F338()
{
  unint64_t result;

  result = qword_2545D8720;
  if (!qword_2545D8720)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADFAC, &_s5ErrorV4CodeO17UnknownCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2545D8720);
  }
  return result;
}

uint64_t MobileDocumentReaderStoreSession.Error.Code.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderStoreSession.Error.Code.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8728);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8730);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A12F2F4();
  v8 = v23;
  sub_20A1A9348();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_20A1A91C8() + 16) != 1)
  {
    v14 = sub_20A1A90B4();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v16 = &type metadata for MobileDocumentReaderStoreSession.Error.Code;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v13);
  }
  sub_20A12F338();
  v11 = v4;
  sub_20A1A9150();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_20A12F618(_QWORD *a1)
{
  return MobileDocumentReaderStoreSession.Error.Code.init(from:)(a1);
}

uint64_t sub_20A12F62C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8708);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8710);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A12F2F4();
  sub_20A1A9354();
  sub_20A12F338();
  sub_20A1A91D4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id MobileDocumentReaderStoreSession.Error.underlyingError.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void MobileDocumentReaderStoreSession.Error.underlyingError.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*MobileDocumentReaderStoreSession.Error.underlyingError.modify())()
{
  return nullsub_1;
}

void MobileDocumentReaderStoreSession.Error.init(code:underlyingError:)(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  *a2 = a1;
}

void MobileDocumentReaderStoreSession.Error.init(_bridgedNSError:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;

  v4 = objc_msgSend(a1, sel_domain);
  v5 = sub_20A1A8DB4();
  v7 = v6;

  sub_20A12FAF4();
  if (v5 == sub_20A1A8A90() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      goto LABEL_15;
  }
  v11 = objc_msgSend(a1, sel_userInfo);
  v12 = sub_20A1A8D54();

  if (!*(_QWORD *)(v12 + 16) || (v13 = sub_20A12B970(0xD00000000000002FLL, 0x800000020A1BC650), (v14 & 1) == 0))
  {
    v24 = 0u;
    v25 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_20A12CE64(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v24);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v25 + 1))
  {
LABEL_14:
    sub_20A12FE34((uint64_t)&v24);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    v15 = 1;
    goto LABEL_16;
  }
  sub_20A1A8B20();
  swift_allocObject();
  sub_20A1A8B14();
  sub_20A12FE74();
  sub_20A1A8B08();
  swift_release();
  if (objc_msgSend(a1, sel_code))
  {
    sub_20A120E74(v22, v23);
    goto LABEL_15;
  }
  v16 = objc_msgSend(a1, sel_userInfo);
  v17 = sub_20A1A8D54();

  v18 = sub_20A1A8DB4();
  if (*(_QWORD *)(v17 + 16) && (v20 = sub_20A12B970(v18, v19), (v21 & 1) != 0))
  {
    sub_20A12CE64(*(_QWORD *)(v17 + 56) + 32 * v20, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_20A120E74(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v25 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    if (swift_dynamicCast())
      v15 = v22;
    else
      v15 = 0;
  }
  else
  {
    sub_20A12FE34((uint64_t)&v24);
    v15 = 0;
  }
LABEL_16:

  *a2 = v15;
}

unint64_t sub_20A12FAF4()
{
  unint64_t result;

  result = qword_2545D8738;
  if (!qword_2545D8738)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderStoreSession.Error, &type metadata for MobileDocumentReaderStoreSession.Error);
    atomic_store(result, (unint64_t *)&qword_2545D8738);
  }
  return result;
}

uint64_t MobileDocumentReaderStoreSession.Error.errorCode.getter()
{
  return 0;
}

unint64_t MobileDocumentReaderStoreSession.Error.errorUserInfo.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v17;
  char v18;
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;
  uint64_t v23;
  unint64_t v24;

  v1 = *v0;
  v2 = MEMORY[0x24BEE4B00];
  v24 = MEMORY[0x24BEE4B00];
  sub_20A1A8B44();
  swift_allocObject();
  sub_20A1A8B38();
  sub_20A12FEB8();
  v3 = sub_20A1A8B2C();
  v5 = v4;
  swift_release();
  v23 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)&v22 = v3;
  *((_QWORD *)&v22 + 1) = v5;
  sub_20A12CF20(&v22, v21);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = 0x8000000000000000;
  sub_20A12C39C(v21, 0xD00000000000002FLL, 0x800000020A1BC650, isUniquelyReferenced_nonNull_native);
  v7 = v2;
  swift_bridgeObjectRelease();
  v8 = sub_20A1A8DB4();
  v10 = v9;
  v23 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v22 = 0x6E776F6E6B6E55;
  *((_QWORD *)&v22 + 1) = 0xE700000000000000;
  sub_20A12CF20(&v22, v21);
  v11 = swift_isUniquelyReferenced_nonNull_native();
  v24 = 0x8000000000000000;
  sub_20A12C39C(v21, v8, v10, v11);
  v24 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_20A1A8DB4();
  v14 = v12;
  v15 = v13;
  if (v1)
  {
    swift_getErrorValue();
    v23 = v20;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v22);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_0);
    sub_20A12CF20(&v22, v21);
    v17 = v24;
    v18 = swift_isUniquelyReferenced_nonNull_native();
    v24 = 0x8000000000000000;
    sub_20A12C39C(v21, v14, v15, v18);
    v24 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A12C0D8(v12, v13, &v22);
    swift_bridgeObjectRelease();
    sub_20A12FE34((uint64_t)&v22);
  }
  return v24;
}

uint64_t sub_20A12FDD4()
{
  return 0;
}

uint64_t sub_20A12FDE4()
{
  sub_20A12FAF4();
  return sub_20A1A92B8();
}

uint64_t sub_20A12FE0C()
{
  sub_20A12FAF4();
  return sub_20A1A92AC();
}

uint64_t sub_20A12FE34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8558);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A12FE74()
{
  unint64_t result;

  result = qword_2545D8740;
  if (!qword_2545D8740)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderStoreSession.Error.Code, &type metadata for MobileDocumentReaderStoreSession.Error.Code);
    atomic_store(result, (unint64_t *)&qword_2545D8740);
  }
  return result;
}

unint64_t sub_20A12FEB8()
{
  unint64_t result;

  result = qword_2545D8748;
  if (!qword_2545D8748)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderStoreSession.Error.Code, &type metadata for MobileDocumentReaderStoreSession.Error.Code);
    atomic_store(result, (unint64_t *)&qword_2545D8748);
  }
  return result;
}

unint64_t sub_20A12FF00()
{
  unint64_t result;

  result = qword_2545D8750;
  if (!qword_2545D8750)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderStoreSession.Error.Code, &type metadata for MobileDocumentReaderStoreSession.Error.Code);
    atomic_store(result, (unint64_t *)&qword_2545D8750);
  }
  return result;
}

unint64_t sub_20A12FF48()
{
  unint64_t result;

  result = qword_2545D8758;
  if (!qword_2545D8758)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderStoreSession.Error, &type metadata for MobileDocumentReaderStoreSession.Error);
    atomic_store(result, (unint64_t *)&qword_2545D8758);
  }
  return result;
}

_QWORD *_s5ErrorVwCP(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void _s5ErrorVwxx_0(id *a1)
{

}

void **_s5ErrorVwca_0(void **a1, id *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  v5 = *a2;
  *a1 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **_s5ErrorVwta_0(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t _s5ErrorVwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5ErrorVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderStoreSession.Error()
{
  return &type metadata for MobileDocumentReaderStoreSession.Error;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderStoreSession.Error.Code()
{
  return &type metadata for MobileDocumentReaderStoreSession.Error.Code;
}

uint64_t _s5ErrorV4CodeOwst_0_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A130158 + 4 * byte_20A1ADCF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A130178 + 4 * byte_20A1ADCF5[v4]))();
}

_BYTE *sub_20A130158(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A130178(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A130180(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A130188(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A130190(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A130198(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s5ErrorV4CodeO10CodingKeysOMa_0()
{
  return &_s5ErrorV4CodeO10CodingKeysON_0;
}

ValueMetadata *_s5ErrorV4CodeO17UnknownCodingKeysOMa_0()
{
  return &_s5ErrorV4CodeO17UnknownCodingKeysON_0;
}

unint64_t sub_20A1301C8()
{
  unint64_t result;

  result = qword_2545D8760;
  if (!qword_2545D8760)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADF84, &_s5ErrorV4CodeO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2545D8760);
  }
  return result;
}

unint64_t sub_20A130210()
{
  unint64_t result;

  result = qword_2545D8768;
  if (!qword_2545D8768)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADEA4, &_s5ErrorV4CodeO17UnknownCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2545D8768);
  }
  return result;
}

unint64_t sub_20A130258()
{
  unint64_t result;

  result = qword_2545D8770;
  if (!qword_2545D8770)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADECC, &_s5ErrorV4CodeO17UnknownCodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2545D8770);
  }
  return result;
}

unint64_t sub_20A1302A0()
{
  unint64_t result;

  result = qword_2545D8778;
  if (!qword_2545D8778)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADEF4, &_s5ErrorV4CodeO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2545D8778);
  }
  return result;
}

unint64_t sub_20A1302E8()
{
  unint64_t result;

  result = qword_2545D8780;
  if (!qword_2545D8780)
  {
    result = MEMORY[0x20BD21434](&unk_20A1ADF1C, &_s5ErrorV4CodeO10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2545D8780);
  }
  return result;
}

unint64_t machServiceIdentityProvisioningXPC.getter()
{
  return 0xD00000000000002CLL;
}

id static DIIdentityProvisioningXPCInterface.interface()()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2545F9D48);
}

uint64_t DIIdentityProvisioningXPCInterface.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DIIdentityProvisioningXPCInterface.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIIdentityProvisioningXPCInterface()
{
  return objc_opt_self();
}

uint64_t method lookup function for DIIdentityProvisioningXPCInterface()
{
  return swift_lookUpClassMethod();
}

uint64_t IdentityDocumentRelyingParty.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityDocumentRelyingParty.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IdentityDocumentRelyingParty.name.modify())()
{
  return nullsub_1;
}

void *IdentityDocumentRelyingParty.logo.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void IdentityDocumentRelyingParty.logo.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*IdentityDocumentRelyingParty.logo.modify())()
{
  return nullsub_1;
}

uint64_t IdentityDocumentRelyingParty.init(name:logo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void destroy for IdentityDocumentRelyingParty(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s7CoreIDV28IdentityDocumentRelyingPartyVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for IdentityDocumentRelyingParty(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IdentityDocumentRelyingParty(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentRelyingParty(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentRelyingParty(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentRelyingParty()
{
  return &type metadata for IdentityDocumentRelyingParty;
}

uint64_t sub_20A130660()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B0);
  __swift_allocate_value_buffer(v0, qword_2545D8788);
  __swift_project_value_buffer(v0, (uint64_t)qword_2545D8788);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B8);
  return sub_20A1A8D0C();
}

uint64_t static IdentityElementRawValueKeys.givenName.getter()
{
  return 0x6D614E6E65766967;
}

uint64_t static IdentityElementRawValueKeys.familyName.getter()
{
  return 0x614E796C696D6166;
}

uint64_t static IdentityElementRawValueKeys.sex.getter()
{
  return 7890291;
}

uint64_t static IdentityElementRawValueKeys.portrait.getter()
{
  return 0x7469617274726F70;
}

uint64_t static IdentityElementRawValueKeys.address.getter()
{
  return 0x73736572646461;
}

unint64_t static IdentityElementRawValueKeys.issuingAuthority.getter()
{
  return 0xD000000000000010;
}

unint64_t static IdentityElementRawValueKeys.documentDHSComplianceStatus.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static IdentityElementRawValueKeys.documentExpirationDate.getter()
{
  return 0xD000000000000016;
}

uint64_t static IdentityElementRawValueKeys.documentNumber.getter()
{
  return 0x746E656D75636F64;
}

unint64_t static IdentityElementRawValueKeys.documentIssueDate.getter()
{
  return 0xD000000000000011;
}

unint64_t static IdentityElementRawValueKeys.drivingPrivileges.getter()
{
  return 0xD000000000000011;
}

uint64_t static IdentityElementRawValueKeys.age.getter()
{
  return 6645601;
}

uint64_t static IdentityElementRawValueKeys.dateOfBirth.getter()
{
  return 0x6942664F65746164;
}

uint64_t static IdentityElementRawValueKeys.ageIsOver(_:)()
{
  sub_20A1A9240();
  sub_20A1A8DF0();
  swift_bridgeObjectRelease();
  sub_20A1A8DF0();
  return 0x65764F7349656761;
}

id IdentityElementRawValueKeys.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IdentityElementRawValueKeys.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IdentityElementRawValueKeys();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for IdentityElementRawValueKeys()
{
  return objc_opt_self();
}

id IdentityElementRawValueKeys.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IdentityElementRawValueKeys();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t IdentityElement.description.getter()
{
  uint64_t v0;
  _QWORD v2[2];

  if (*(_BYTE *)(v0 + 8) == 1)
    __asm { BR              X10 }
  strcpy((char *)v2, "Age is Over ");
  sub_20A1A9240();
  sub_20A1A8DF0();
  swift_bridgeObjectRelease();
  return v2[0];
}

uint64_t sub_20A130E44()
{
  sub_20A132670();
  return sub_20A1A8E80();
}

uint64_t sub_20A130EA0()
{
  sub_20A132670();
  return sub_20A1A8E74();
}

uint64_t sub_20A130EEC()
{
  sub_20A1A930C();
  IdentityElement.rawValue.getter();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A130F58()
{
  IdentityElement.rawValue.getter();
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A130FB0()
{
  sub_20A1A930C();
  IdentityElement.rawValue.getter();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A13101C()
{
  return sub_20A138954();
}

void IdentityElement.init(rawValue:)(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD v30[2];
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87A8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v30 - v14;
  if (a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v16 = 0;
    v17 = 0;
LABEL_5:
    v18 = 1;
    goto LABEL_6;
  }
  if (a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v16 = 1;
    goto LABEL_5;
  }
  if (a1 == 7890291 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 2;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BC630 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 5;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xE800000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A1BC610 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BC5F0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 8;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE007265626D754ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5D0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 10;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 11;
  }
  else
  {
    if ((a1 != 0x6942664F65746164 || a2 != 0xEB00000000687472) && (sub_20A1A9258() & 1) == 0)
    {
      if ((sub_20A1A8E44() & 1) != 0)
      {
        v32 = a1;
        v33 = a2;
        if (qword_2545D80C0 != -1)
          swift_once();
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B0);
        v31 = __swift_project_value_buffer(v19, (uint64_t)qword_2545D8788);
        v30[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B8);
        sub_20A13194C();
        sub_20A131990();
        sub_20A1A8D6C();
        swift_bridgeObjectRelease();
        sub_20A1319DC((uint64_t)v15, (uint64_t)v13);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
          swift_getKeyPath();
          sub_20A1A8D18();
          swift_release();
          v20 = v32;
          v21 = v33;
          v31 = v35;
          if ((v33 ^ v32) >> 14)
          {
            v22 = v34;
            v23 = sub_20A1324A8(v32, v33, v34, v31, 10);
            if ((v24 & 0x100) != 0)
              v16 = (uint64_t)sub_20A131C80(v20, v21, v22, v31, 10);
            else
              v16 = v23;
            v25 = v24;
            swift_bridgeObjectRelease();
            if ((v25 & 1) == 0)
            {
              (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
              sub_20A131A24((uint64_t)v15);
              v18 = 0;
              v17 = 0;
              goto LABEL_6;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        sub_20A131A24((uint64_t)v15);
        if (qword_253EB1CD0 != -1)
          swift_once();
        v26 = sub_20A1A8D3C();
        __swift_project_value_buffer(v26, (uint64_t)qword_253EB3268);
        v27 = sub_20A1A8D24();
        v28 = sub_20A1A8FAC();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v29 = 0;
          _os_log_impl(&dword_20A10F000, v27, v28, "Could not extract age from ageIsOver element", v29, 2u);
          MEMORY[0x20BD214DC](v29, -1, -1);
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v16 = 0;
      v18 = 0;
      v17 = 1;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    v17 = 0;
    v18 = 1;
    v16 = 12;
  }
LABEL_6:
  *(_QWORD *)a3 = v16;
  *(_BYTE *)(a3 + 8) = v18;
  *(_BYTE *)(a3 + 9) = v17;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_20A13194C()
{
  unint64_t result;

  result = qword_2545D87C0;
  if (!qword_2545D87C0)
  {
    result = MEMORY[0x20BD21434](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2545D87C0);
  }
  return result;
}

unint64_t sub_20A131990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545D87C8;
  if (!qword_2545D87C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D87B0);
    result = MEMORY[0x20BD21434](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&qword_2545D87C8);
  }
  return result;
}

uint64_t sub_20A1319DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A131A24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t IdentityElement.rawValue.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    __asm { BR              X10 }
  sub_20A1A9240();
  sub_20A1A8DF0();
  swift_bridgeObjectRelease();
  sub_20A1A8DF0();
  return 0x65764F7349656761;
}

void sub_20A131B40()
{
  JUMPOUT(0x20A131B30);
}

void sub_20A131B50()
{
  JUMPOUT(0x20A131B30);
}

void sub_20A131B68()
{
  JUMPOUT(0x20A131B30);
}

void sub_20A131B80()
{
  JUMPOUT(0x20A131B30);
}

void sub_20A131BE0()
{
  JUMPOUT(0x20A131B30);
}

void sub_20A131C20()
{
  JUMPOUT(0x20A131B30);
}

void sub_20A131C30()
{
  JUMPOUT(0x20A131B30);
}

void sub_20A131C50(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  IdentityElement.init(rawValue:)(*a1, a1[1], a2);
}

uint64_t sub_20A131C5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IdentityElement.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned __int8 *sub_20A131C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_20A1326B4();
  swift_bridgeObjectRetain();
  v7 = sub_20A1A8E50();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_20A131FEC();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_20A1A90E4();
  }
LABEL_7:
  v13 = sub_20A131D70(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_20A131D70(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_20A131FEC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_20A1A8E5C();
  v4 = sub_20A132068(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20A132068(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_20A1321AC(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_20A1473A0(v9, 0);
      v12 = sub_20A132298((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x20BD20870](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x20BD20870);
LABEL_9:
      sub_20A1A90E4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x20BD20870]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_20A1321AC(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_20A147404(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_20A147404(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_20A1A8E20();
  }
  __break(1u);
  return result;
}

unint64_t sub_20A132298(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_20A147404(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_20A1A8E2C();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_20A1A90E4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_20A147404(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_20A1A8E08();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_20A1324A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_20A1A90E4();
  }
  result = sub_20A1326F8((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

unint64_t sub_20A13257C()
{
  unint64_t result;

  result = qword_2545D87D0;
  if (!qword_2545D87D0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityElement, &type metadata for IdentityElement);
    atomic_store(result, (unint64_t *)&qword_2545D87D0);
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IdentityElement(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IdentityElement(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_20A132624(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20A132640(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityElement()
{
  return &type metadata for IdentityElement;
}

unint64_t sub_20A132670()
{
  unint64_t result;

  result = qword_2545D87D8;
  if (!qword_2545D87D8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityElement, &type metadata for IdentityElement);
    atomic_store(result, (unint64_t *)&qword_2545D87D8);
  }
  return result;
}

unint64_t sub_20A1326B4()
{
  unint64_t result;

  result = qword_2545D87E0;
  if (!qword_2545D87E0)
  {
    result = MEMORY[0x20BD21434](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2545D87E0);
  }
  return result;
}

uint64_t sub_20A1326F8(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_20A147404(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_20A1A8E20();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_20A147404(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_20A147404(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_20A1A8E20();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.sessionIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.certificateChain.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.merchantLogo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_20A127ED0(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.init(sessionIdentifier:certificateChain:merchantLogo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v2)
  {
    sub_20A1A9324();
    sub_20A1A9318();
    v4 = *(_QWORD *)(v2 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = v2 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_20A1A8DE4();
        swift_bridgeObjectRelease();
        v5 += 16;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_20A1A9324();
  }
  if (v3 >> 60 == 15)
    return sub_20A1A9324();
  sub_20A1A9324();
  sub_20A120BD8(v1, v3);
  sub_20A1A8C34();
  return sub_20A127EE4(v1, v3);
}

unint64_t sub_20A132D08()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0x746E61686372656DLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_20A132D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A135240(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A132D94(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_20A132DA0()
{
  sub_20A134940();
  return sub_20A1A9360();
}

uint64_t sub_20A132DC8()
{
  sub_20A134940();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13 = v1[3];
  v14 = v7;
  v12 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A134940();
  sub_20A1A9354();
  LOBYTE(v16) = 0;
  v8 = v15;
  sub_20A1A9204();
  if (!v8)
  {
    v10 = v12;
    v9 = v13;
    v16 = v14;
    v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87F8);
    sub_20A134984(&qword_2545D8800, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_20A1A91F8();
    v16 = v9;
    v17 = v10;
    v18 = 2;
    sub_20A1275D8();
    sub_20A1A91F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderCertificateResponse.StatusItem.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8808);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A134940();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v19) = 0;
  v9 = sub_20A1A918C();
  v11 = v10;
  v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87F8);
  v21 = 1;
  sub_20A134984(&qword_2545D8810, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_20A1A9180();
  v12 = v19;
  v21 = 2;
  sub_20A127940();
  v17 = v12;
  swift_bridgeObjectRetain();
  sub_20A1A9180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v19;
  v14 = v20;
  swift_bridgeObjectRetain();
  v15 = v17;
  swift_bridgeObjectRetain();
  sub_20A127ED0(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v18;
  a2[1] = v11;
  a2[2] = v15;
  a2[3] = v13;
  a2[4] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_20A127EE4(v13, v14);
}

uint64_t sub_20A1332A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentReaderCertificateResponse.StatusItem.init(from:)(a1, a2);
}

uint64_t sub_20A1332B8(_QWORD *a1)
{
  return MobileDocumentReaderCertificateResponse.StatusItem.encode(to:)(a1);
}

uint64_t sub_20A1332CC()
{
  sub_20A1A930C();
  MobileDocumentReaderCertificateResponse.StatusItem.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A133328()
{
  sub_20A1A930C();
  MobileDocumentReaderCertificateResponse.StatusItem.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderCertificateResponse.items.getter()
{
  return swift_bridgeObjectRetain();
}

CoreIDV::MobileDocumentReaderCertificateResponse __swiftcall MobileDocumentReaderCertificateResponse.init(items:)(CoreIDV::MobileDocumentReaderCertificateResponse items)
{
  CoreIDV::MobileDocumentReaderCertificateResponse *v1;

  v1->items._rawValue = items.items._rawValue;
  return items;
}

uint64_t MobileDocumentReaderCertificateResponse.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_20A1339C0(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static MobileDocumentReaderCertificateResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_20A125DD0(*a1, *a2);
}

uint64_t sub_20A1333D4()
{
  return 0x736D657469;
}

uint64_t sub_20A1333E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A133474()
{
  sub_20A1349E4();
  return sub_20A1A9360();
}

uint64_t sub_20A13349C()
{
  sub_20A1349E4();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderCertificateResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8818);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1349E4();
  sub_20A1A9354();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8828);
  sub_20A134A6C(&qword_2545D8830, (uint64_t (*)(void))sub_20A134A28, MEMORY[0x24BEE12A0]);
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentReaderCertificateResponse.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1339C0((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderCertificateResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8840);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1349E4();
  sub_20A1A9348();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8828);
    sub_20A134A6C(&qword_2545D8848, (uint64_t (*)(void))sub_20A134AD4, MEMORY[0x24BEE12D0]);
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A133778@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MobileDocumentReaderCertificateResponse.init(from:)(a1, a2);
}

uint64_t sub_20A13378C(_QWORD *a1)
{
  return MobileDocumentReaderCertificateResponse.encode(to:)(a1);
}

uint64_t sub_20A1337A0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1339C0((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A1337F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_20A1339C0(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A13382C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1339C0((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A13387C(uint64_t *a1, uint64_t *a2)
{
  return sub_20A125DD0(*a1, *a2);
}

uint64_t sub_20A133888(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_20A1A9318();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v11 = MEMORY[0x24BDCEA88];
    do
    {
      sub_20A127E8C(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem);
      sub_20A1A8DE4();
      sub_20A1A8C70();
      sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v11);
      sub_20A1A8D60();
      sub_20A1A8C34();
      result = sub_20A124284((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_20A1339C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_20A1A9318();
  if (v3)
  {
    v5 = 0;
    v6 = a2 + 32;
    v13 = a2 + 32;
    v14 = v3;
    do
    {
      v7 = (_QWORD *)(v6 + 40 * v5);
      v9 = v7[3];
      v8 = v7[4];
      v10 = v7[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_20A127ED0(v9, v8);
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      if (v10)
      {
        sub_20A1A9324();
        sub_20A1A9318();
        v11 = *(_QWORD *)(v10 + 16);
        if (v11)
        {
          swift_bridgeObjectRetain();
          v12 = v10 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_20A1A8DE4();
            swift_bridgeObjectRelease();
            v12 += 16;
            --v11;
          }
          while (v11);
          swift_bridgeObjectRelease();
          v6 = v13;
          v3 = v14;
        }
      }
      else
      {
        sub_20A1A9324();
      }
      sub_20A1A9324();
      if (v8 >> 60 != 15)
      {
        sub_20A120BD8(v9, v8);
        sub_20A1A8C34();
        sub_20A127EE4(v9, v8);
      }
      ++v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_20A127EE4(v9, v8);
    }
    while (v5 != v3);
  }
  return result;
}

uint64_t sub_20A133B54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  int v6;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_20A1A9318();
  if (v3)
  {
    v5 = (unsigned __int8 *)(a2 + 72);
    do
    {
      v6 = *v5;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      if (v6 != 1)
        sub_20A1A9318();
      sub_20A1A9318();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_20A133C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = sub_20A1A8AD8();
  v4 = *(_QWORD *)(v3 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v33 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v32 - v8;
  v9 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v43 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (uint64_t)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  MEMORY[0x24BDAC7A8](v11);
  v42 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  v13 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a2 + 16);
  result = sub_20A1A9318();
  v41 = v16;
  if (v16)
  {
    v18 = 0;
    v37 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v36 = *(_QWORD *)(v13 + 72);
    v39 = v4;
    v40 = v3;
    v38 = v9;
    do
    {
      sub_20A127E8C(v37 + v36 * v18, (uint64_t)v15, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
      v19 = v42;
      sub_20A1353A0((uint64_t)v15, v42, &qword_2545D8318);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v19, 1, v9) == 1)
      {
        sub_20A1A9324();
      }
      else
      {
        v20 = v44;
        sub_20A127E48(v19, v44);
        sub_20A1A9324();
        sub_20A1A8DE4();
        sub_20A1A8DE4();
        v21 = v35;
        sub_20A1353A0(v20 + *(int *)(v9 + 24), v35, &qword_2545D81A8);
        v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
        if (v22(v21, 1, v3) == 1)
        {
          sub_20A1A9324();
        }
        else
        {
          v23 = v34;
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v34, v21, v3);
          sub_20A1A9324();
          sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
          sub_20A1A8D60();
          (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v3);
        }
        v24 = v33;
        sub_20A1353A0(v44 + *(int *)(v9 + 28), v33, &qword_2545D81A8);
        if (v22(v24, 1, v3) == 1)
        {
          sub_20A1A9324();
        }
        else
        {
          v25 = v34;
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v34, v24, v3);
          sub_20A1A9324();
          sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
          sub_20A1A8D60();
          (*(void (**)(char *, uint64_t))(v4 + 8))(v25, v3);
        }
        sub_20A124284(v44, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
      }
      v26 = *(_QWORD *)&v15[*(int *)(v45 + 20)];
      sub_20A1A9318();
      v27 = *(_QWORD *)(v26 + 16);
      if (v27)
      {
        v28 = v26 + 56;
        do
        {
          if (*(_QWORD *)(v28 - 16))
          {
            sub_20A1A9324();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_20A1A8DE4();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_20A1A9324();
            swift_bridgeObjectRetain();
          }
          v28 += 32;
          sub_20A1A8DE4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v27;
        }
        while (v27);
      }
      v29 = *(_QWORD *)&v15[*(int *)(v45 + 24)];
      sub_20A1A9318();
      v30 = *(_QWORD *)(v29 + 16);
      if (v30)
      {
        v31 = v29 + 56;
        do
        {
          if (*(_QWORD *)(v31 - 16))
          {
            sub_20A1A9324();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_20A1A8DE4();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_20A1A9324();
            swift_bridgeObjectRetain();
          }
          v31 += 32;
          sub_20A1A8DE4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v30;
        }
        while (v30);
      }
      ++v18;
      result = sub_20A124284((uint64_t)v15, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
      v3 = v40;
      v9 = v38;
      v4 = v39;
    }
    while (v18 != v41);
  }
  return result;
}

uint64_t sub_20A1341B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_20A1A9318();
  if (v3)
  {
    v5 = a2 + 56;
    do
    {
      if (*(_QWORD *)(v5 - 16))
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_20A1A8DE4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain();
      }
      v5 += 32;
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_20A13428C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v3 = sub_20A1A8AD8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  v38 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  v12 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  result = sub_20A1A9318();
  v37 = v15;
  if (v15)
  {
    v17 = (uint64_t)v11;
    v18 = 0;
    v31 = a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v30 = *(_QWORD *)(v12 + 72);
    v34 = v4;
    v35 = v3;
    v32 = v17;
    v33 = v9;
    v39 = v14;
    while (1)
    {
      sub_20A127E8C(v31 + v30 * v18, (uint64_t)v14, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
      sub_20A1A8DE4();
      v19 = v38;
      sub_20A1353A0((uint64_t)&v14[*(int *)(v38 + 20)], v17, &qword_2545D81A8);
      v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      if (v20(v17, 1, v3) == 1)
      {
        sub_20A1A9324();
      }
      else
      {
        v21 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v36, v17, v3);
        sub_20A1A9324();
        sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
        sub_20A1A8D60();
        v22 = v21;
        v19 = v38;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v22, v3);
      }
      sub_20A1353A0((uint64_t)&v39[*(int *)(v19 + 24)], (uint64_t)v9, &qword_2545D81A8);
      if (v20((uint64_t)v9, 1, v3) == 1)
      {
        sub_20A1A9324();
        v23 = (uint64_t)v39;
      }
      else
      {
        v24 = v36;
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v36, v9, v3);
        sub_20A1A9324();
        sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
        sub_20A1A8D60();
        v23 = (uint64_t)v39;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v24, v3);
      }
      v25 = *(_QWORD *)(v23 + *(int *)(v19 + 28));
      sub_20A1A9318();
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
        break;
LABEL_3:
      ++v18;
      v14 = v39;
      result = sub_20A124284((uint64_t)v39, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
      v4 = v34;
      v3 = v35;
      v17 = v32;
      v9 = v33;
      if (v18 == v37)
        return result;
    }
    v27 = v25 + 40;
    while (1)
    {
      v28 = *(_QWORD *)(v27 + 16);
      v29 = *(_QWORD *)(v27 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      if (v28)
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain();
        sub_20A1A8DE4();
        swift_bridgeObjectRelease();
        if (!v29)
          goto LABEL_18;
      }
      else
      {
        sub_20A1A9324();
        if (!v29)
        {
LABEL_18:
          sub_20A1A9324();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
      sub_20A1A9324();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_13:
      v27 += 48;
      if (!--v26)
        goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_20A1346C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_20A1A9318();
  if (v3)
  {
    v5 = a2 + 40;
    do
    {
      v6 = *(_QWORD *)(v5 + 16);
      v7 = *(_QWORD *)(v5 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      if (v6)
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain();
        sub_20A1A8DE4();
        swift_bridgeObjectRelease();
        if (v7)
          goto LABEL_9;
      }
      else
      {
        sub_20A1A9324();
        if (v7)
        {
LABEL_9:
          sub_20A1A9324();
          swift_bridgeObjectRetain();
          sub_20A1A8DE4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease_n();
          goto LABEL_4;
        }
      }
      sub_20A1A9324();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
LABEL_4:
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

BOOL _s7CoreIDV39MobileDocumentReaderCertificateResponseV10StatusItemV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  char v11;
  char v12;

  v2 = (_QWORD *)a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v6 = (_QWORD *)a2[2];
  v5 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_20A1A9258(), result = 0, (v9 & 1) != 0))
  {
    if (v2)
    {
      if (!v6 || (sub_20A126560(v2, v6) & 1) == 0)
        return 0;
    }
    else if (v6)
    {
      return 0;
    }
    if (v3 >> 60 == 15)
    {
      if (v7 >> 60 == 15)
        return 1;
      goto LABEL_15;
    }
    if (v7 >> 60 == 15)
    {
LABEL_15:
      sub_20A127ED0(v4, v3);
      sub_20A127ED0(v5, v7);
      sub_20A127EE4(v4, v3);
      sub_20A127EE4(v5, v7);
      return 0;
    }
    sub_20A127ED0(v4, v3);
    sub_20A127ED0(v5, v7);
    sub_20A1692C0(v4, v3);
    v12 = v11;
    sub_20A127EE4(v5, v7);
    sub_20A127EE4(v4, v3);
    return (v12 & 1) != 0;
  }
  return result;
}

unint64_t sub_20A134940()
{
  unint64_t result;

  result = qword_2545D87F0;
  if (!qword_2545D87F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE640, &type metadata for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D87F0);
  }
  return result;
}

uint64_t sub_20A134984(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D87F8);
    v8 = a2;
    result = MEMORY[0x20BD21434](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A1349E4()
{
  unint64_t result;

  result = qword_2545D8820;
  if (!qword_2545D8820)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE5F0, &type metadata for MobileDocumentReaderCertificateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8820);
  }
  return result;
}

unint64_t sub_20A134A28()
{
  unint64_t result;

  result = qword_2545D8838;
  if (!qword_2545D8838)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderCertificateResponse.StatusItem, &type metadata for MobileDocumentReaderCertificateResponse.StatusItem);
    atomic_store(result, (unint64_t *)&qword_2545D8838);
  }
  return result;
}

uint64_t sub_20A134A6C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D8828);
    v8 = a2();
    result = MEMORY[0x20BD21434](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A134AD4()
{
  unint64_t result;

  result = qword_2545D8850;
  if (!qword_2545D8850)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderCertificateResponse.StatusItem, &type metadata for MobileDocumentReaderCertificateResponse.StatusItem);
    atomic_store(result, (unint64_t *)&qword_2545D8850);
  }
  return result;
}

unint64_t sub_20A134B1C()
{
  unint64_t result;

  result = qword_2545D8858;
  if (!qword_2545D8858)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderCertificateResponse.StatusItem, &type metadata for MobileDocumentReaderCertificateResponse.StatusItem);
    atomic_store(result, (unint64_t *)&qword_2545D8858);
  }
  return result;
}

unint64_t sub_20A134B64()
{
  unint64_t result;

  result = qword_2545D8860;
  if (!qword_2545D8860)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderCertificateResponse, &type metadata for MobileDocumentReaderCertificateResponse);
    atomic_store(result, (unint64_t *)&qword_2545D8860);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderCertificateResponse()
{
  return &type metadata for MobileDocumentReaderCertificateResponse;
}

uint64_t destroy for MobileDocumentReaderCertificateResponse.StatusItem(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >> 60 != 15)
    return sub_20A120E74(*(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t initializeWithCopy for MobileDocumentReaderCertificateResponse.StatusItem(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  v4 = a2 + 3;
  v5 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
  }
  else
  {
    v6 = *v4;
    sub_20A120BD8(*v4, v5);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderCertificateResponse.StatusItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 3;
  v5 = a2[4];
  if (a1[4] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_20A120BD8(*v4, v5);
      v8 = a1[3];
      v9 = a1[4];
      a1[3] = v7;
      a1[4] = v5;
      sub_20A120E74(v8, v9);
      return a1;
    }
    sub_20A122530((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_20A120BD8(*v4, v5);
  a1[3] = v6;
  a1[4] = v5;
  return a1;
}

_QWORD *assignWithTake for MobileDocumentReaderCertificateResponse.StatusItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v5 = a2 + 3;
  v6 = a1[4];
  if (v6 >> 60 != 15)
  {
    v7 = a2[4];
    if (v7 >> 60 != 15)
    {
      v8 = a1[3];
      a1[3] = *v5;
      a1[4] = v7;
      sub_20A120E74(v8, v6);
      return a1;
    }
    sub_20A122530((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderCertificateResponse.StatusItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderCertificateResponse.StatusItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderCertificateResponse.StatusItem()
{
  return &type metadata for MobileDocumentReaderCertificateResponse.StatusItem;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderCertificateResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A134ED8 + 4 * byte_20A1AE2A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A134EF8 + 4 * byte_20A1AE2A5[v4]))();
}

_BYTE *sub_20A134ED8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A134EF8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A134F00(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A134F08(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A134F10(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A134F18(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderCertificateResponse.CodingKeys()
{
  return &type metadata for MobileDocumentReaderCertificateResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A135010 + 4 * byte_20A1AE2AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A135044 + 4 * byte_20A1AE2AA[v4]))();
}

uint64_t sub_20A135044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A13504C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A135054);
  return result;
}

uint64_t sub_20A135060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A135068);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A13506C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A135074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys()
{
  return &type metadata for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys;
}

unint64_t sub_20A135094()
{
  unint64_t result;

  result = qword_2545D8868;
  if (!qword_2545D8868)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE510, &type metadata for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8868);
  }
  return result;
}

unint64_t sub_20A1350DC()
{
  unint64_t result;

  result = qword_2545D8870;
  if (!qword_2545D8870)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE5C8, &type metadata for MobileDocumentReaderCertificateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8870);
  }
  return result;
}

unint64_t sub_20A135124()
{
  unint64_t result;

  result = qword_2545D8878;
  if (!qword_2545D8878)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE538, &type metadata for MobileDocumentReaderCertificateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8878);
  }
  return result;
}

unint64_t sub_20A13516C()
{
  unint64_t result;

  result = qword_2545D8880;
  if (!qword_2545D8880)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE560, &type metadata for MobileDocumentReaderCertificateResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8880);
  }
  return result;
}

unint64_t sub_20A1351B4()
{
  unint64_t result;

  result = qword_2545D8888;
  if (!qword_2545D8888)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE480, &type metadata for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8888);
  }
  return result;
}

unint64_t sub_20A1351FC()
{
  unint64_t result;

  result = qword_2545D8890;
  if (!qword_2545D8890)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE4A8, &type metadata for MobileDocumentReaderCertificateResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8890);
  }
  return result;
}

uint64_t sub_20A135240(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC850 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BC870 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC0000006F676F4CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A1353A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of XPCValueContainer.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of XPCValueContainer.init(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t DigitalPresentmentRequest.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A1353A0(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_descriptor, a1, &qword_2545D8970);
}

uint64_t DigitalPresentmentRequest.nonce.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce);
  sub_20A127ED0(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce + 8));
  return v1;
}

uint64_t DigitalPresentmentRequest.merchantID.getter()
{
  return sub_20A135474(&OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantID);
}

uint64_t DigitalPresentmentRequest.merchantNameOverride.getter()
{
  return sub_20A135474(&OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantNameOverride);
}

uint64_t sub_20A135474(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DigitalPresentmentRequest.merchantPrivacyPolicyOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A1353A0(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantPrivacyPolicyOverride, a1, (uint64_t *)&unk_2545D8978);
}

id DigitalPresentmentRequest.__allocating_init(descriptor:nonce:merchantID:merchantNameOverride:merchantPrivacyPolicyOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  objc_super v23;

  v17 = (char *)objc_allocWithZone(v8);
  sub_20A1353A0(a1, (uint64_t)&v17[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_descriptor], &qword_2545D8970);
  v18 = &v17[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce];
  *(_QWORD *)v18 = a2;
  *((_QWORD *)v18 + 1) = a3;
  v19 = &v17[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantID];
  *(_QWORD *)v19 = a4;
  *((_QWORD *)v19 + 1) = a5;
  v20 = &v17[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantNameOverride];
  *(_QWORD *)v20 = a6;
  *((_QWORD *)v20 + 1) = a7;
  sub_20A1353A0(a8, (uint64_t)&v17[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantPrivacyPolicyOverride], (uint64_t *)&unk_2545D8978);
  v23.receiver = v17;
  v23.super_class = v8;
  v21 = objc_msgSendSuper2(&v23, sel_init);
  sub_20A127E0C(a8, (uint64_t *)&unk_2545D8978);
  sub_20A127E0C(a1, &qword_2545D8970);
  return v21;
}

id DigitalPresentmentRequest.init(descriptor:nonce:merchantID:merchantNameOverride:merchantPrivacyPolicyOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  objc_class *ObjectType;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_20A1353A0(a1, (uint64_t)&v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_descriptor], &qword_2545D8970);
  v18 = &v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce];
  *(_QWORD *)v18 = a2;
  *((_QWORD *)v18 + 1) = a3;
  v19 = &v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantID];
  *(_QWORD *)v19 = a4;
  *((_QWORD *)v19 + 1) = a5;
  v20 = &v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantNameOverride];
  *(_QWORD *)v20 = a6;
  *((_QWORD *)v20 + 1) = a7;
  sub_20A1353A0(a8, (uint64_t)&v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantPrivacyPolicyOverride], (uint64_t *)&unk_2545D8978);
  v23.receiver = v8;
  v23.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v23, sel_init);
  sub_20A127E0C(a8, (uint64_t *)&unk_2545D8978);
  sub_20A127E0C(a1, &qword_2545D8970);
  return v21;
}

uint64_t static DigitalPresentmentRequest.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall DigitalPresentmentRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  id v19;
  id v20;
  void *v21;
  Class isa;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  char *v34;
  void *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  objc_super v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D8978);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20A1A8BF8();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8970);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IdentityDocumentDescriptor(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v37 - v16;
  sub_20A1353A0(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_descriptor, (uint64_t)v10, &qword_2545D8970);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_20A127E0C((uint64_t)v10, &qword_2545D8970);
  }
  else
  {
    sub_20A135B44((uint64_t)v10, (uint64_t)v17);
    sub_20A135B88((uint64_t)v17, (uint64_t)v15);
    v18 = (objc_class *)type metadata accessor for XPCIdentityDocumentDescriptor(0);
    v19 = objc_allocWithZone(v18);
    sub_20A135B88((uint64_t)v15, (uint64_t)v19 + OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value);
    v39.receiver = v19;
    v39.super_class = v18;
    v20 = objc_msgSendSuper2(&v39, sel_init);
    sub_20A135DF0((uint64_t)v15);
    v21 = (void *)sub_20A1A8D9C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v20, v21);

    sub_20A135DF0((uint64_t)v17);
  }
  isa = with.super.isa;
  v23 = (uint64_t *)(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce + 8);
  v25 = v6;
  if (v24 >> 60 != 15)
  {
    v26 = *v23;
    sub_20A120BD8(*v23, *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce + 8));
    v27 = (void *)sub_20A1A8C1C();
    v28 = (void *)sub_20A1A8D9C();
    -[objc_class encodeObject:forKey:](isa, sel_encodeObject_forKey_, v27, v28);

    sub_20A127EE4(v26, v24);
  }
  v29 = v38;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantID + 8))
  {
    v30 = (void *)sub_20A1A8D9C();
    v31 = (void *)sub_20A1A8D9C();
    -[objc_class encodeObject:forKey:](isa, sel_encodeObject_forKey_, v30, v31);

  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantNameOverride + 8))
  {
    v32 = (void *)sub_20A1A8D9C();
    v33 = (void *)sub_20A1A8D9C();
    -[objc_class encodeObject:forKey:](isa, sel_encodeObject_forKey_, v32, v33);

  }
  sub_20A1353A0(v1 + OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantPrivacyPolicyOverride, (uint64_t)v5, (uint64_t *)&unk_2545D8978);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v25) == 1)
  {
    sub_20A127E0C((uint64_t)v5, (uint64_t *)&unk_2545D8978);
  }
  else
  {
    v34 = v37;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v37, v5, v25);
    v35 = (void *)sub_20A1A8BE0();
    v36 = (void *)sub_20A1A8D9C();
    -[objc_class encodeObject:forKey:](isa, sel_encodeObject_forKey_, v35, v36);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v25);
  }
}

uint64_t sub_20A135B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityDocumentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A135B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityDocumentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id DigitalPresentmentRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_20A135E2C();

  return v4;
}

id DigitalPresentmentRequest.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_20A135E2C();

  return v2;
}

id DigitalPresentmentRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DigitalPresentmentRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DigitalPresentmentRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A135DF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IdentityDocumentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_20A135E2C()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D8978);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8970);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for XPCIdentityDocumentDescriptor(0);
  v8 = v0;
  v9 = sub_20A1A8FD0();
  v10 = (void *)v9;
  if (v9)
  {
    sub_20A135B88(v9 + OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, (uint64_t)v7);
    v11 = type metadata accessor for IdentityDocumentDescriptor(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for IdentityDocumentDescriptor(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  }
  sub_20A136700((uint64_t)v7, (uint64_t)&v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_descriptor], &qword_2545D8970);
  sub_20A1366C8(0, (unint64_t *)&qword_2545DB140);
  v13 = sub_20A1A8FD0();
  if (v13)
  {
    v14 = (void *)v13;
    v15 = sub_20A1A8C28();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0xF000000000000000;
  }
  v18 = (uint64_t *)&v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce];
  *v18 = v15;
  v18[1] = v17;
  sub_20A1366C8(0, &qword_2545D89B0);
  v19 = sub_20A1A8FD0();
  if (v19)
  {
    v20 = (void *)v19;
    v21 = sub_20A1A8DB4();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = (uint64_t *)&v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantID];
  *v24 = v21;
  v24[1] = v23;
  v25 = sub_20A1A8FD0();
  if (v25)
  {
    v26 = (void *)v25;
    v27 = sub_20A1A8DB4();
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0;
  }
  v30 = (uint64_t *)&v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantNameOverride];
  *v30 = v27;
  v30[1] = v29;
  sub_20A1366C8(0, &qword_2545D89B8);
  v31 = sub_20A1A8FD0();
  if (v31)
  {
    v32 = (void *)v31;
    sub_20A1A8BEC();

    v33 = sub_20A1A8BF8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v4, 0, 1, v33);
  }
  else
  {

    v34 = sub_20A1A8BF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v4, 1, 1, v34);
  }
  sub_20A136700((uint64_t)v4, (uint64_t)&v8[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantPrivacyPolicyOverride], (uint64_t *)&unk_2545D8978);

  v36.receiver = v8;
  v36.super_class = ObjectType;
  return objc_msgSendSuper2(&v36, sel_init);
}

uint64_t sub_20A1361A0()
{
  return type metadata accessor for DigitalPresentmentRequest();
}

uint64_t type metadata accessor for DigitalPresentmentRequest()
{
  uint64_t result;

  result = qword_2545D8988;
  if (!qword_2545D8988)
    return swift_getSingletonMetadata();
  return result;
}

void sub_20A1361E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_20A1362BC(319, &qword_2545D8998, (void (*)(uint64_t))type metadata accessor for IdentityDocumentDescriptor);
  if (v0 <= 0x3F)
  {
    sub_20A1362BC(319, (unint64_t *)&unk_2545D89A0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DigitalPresentmentRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DigitalPresentmentRequest.__allocating_init(descriptor:nonce:merchantID:merchantNameOverride:merchantPrivacyPolicyOverride:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DigitalPresentmentRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_20A1362BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_20A1A8FE8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

id sub_20A136308(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  objc_class *v38;
  char *v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  id v44;
  unint64_t v46;
  uint64_t v47;
  objc_super v48;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D8978);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IdentityDocumentDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8970);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v46 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v46 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v18((char *)&v46 - v16, 1, 1, v5);
  v19 = objc_msgSend(a1, sel_descriptor);
  if (v19)
  {
    sub_20A17D198((uint64_t)v19, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
    {
      sub_20A127E0C((uint64_t)v15, &qword_2545D8970);
    }
    else
    {
      sub_20A127E0C((uint64_t)v17, &qword_2545D8970);
      sub_20A135B44((uint64_t)v15, (uint64_t)v8);
      sub_20A135B44((uint64_t)v8, (uint64_t)v17);
      v18(v17, 0, 1, v5);
    }
  }
  sub_20A1353A0((uint64_t)v17, (uint64_t)v12, &qword_2545D8970);
  v20 = objc_msgSend(a1, sel_nonce);
  if (v20)
  {
    v21 = v20;
    v22 = sub_20A1A8C28();
    v46 = v23;
    v47 = v22;

  }
  else
  {
    v46 = 0xF000000000000000;
    v47 = 0;
  }
  v24 = objc_msgSend(a1, sel_merchantIdentifier, v46, v47);
  if (v24)
  {
    v25 = v24;
    v26 = sub_20A1A8DB4();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  v29 = objc_msgSend(a1, sel_merchantNameOverride);
  if (v29)
  {
    v30 = v29;
    v31 = sub_20A1A8DB4();
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0;
  }
  v34 = objc_msgSend(a1, sel_merchantPrivacyPolicyOverride);
  if (v34)
  {
    v35 = v34;
    sub_20A1A8BEC();

    v36 = sub_20A1A8BF8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v4, 0, 1, v36);
  }
  else
  {
    v37 = sub_20A1A8BF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v4, 1, 1, v37);
  }
  v38 = (objc_class *)type metadata accessor for DigitalPresentmentRequest();
  v39 = (char *)objc_allocWithZone(v38);
  sub_20A1353A0((uint64_t)v12, (uint64_t)&v39[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_descriptor], &qword_2545D8970);
  v40 = (uint64_t *)&v39[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_nonce];
  v41 = v46;
  *v40 = v47;
  v40[1] = v41;
  v42 = (uint64_t *)&v39[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantID];
  *v42 = v26;
  v42[1] = v28;
  v43 = (uint64_t *)&v39[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantNameOverride];
  *v43 = v31;
  v43[1] = v33;
  sub_20A1353A0((uint64_t)v4, (uint64_t)&v39[OBJC_IVAR____TtC7CoreIDV25DigitalPresentmentRequest_merchantPrivacyPolicyOverride], (uint64_t *)&unk_2545D8978);
  v48.receiver = v39;
  v48.super_class = v38;
  v44 = objc_msgSendSuper2(&v48, sel_init);
  sub_20A127E0C((uint64_t)v4, (uint64_t *)&unk_2545D8978);
  sub_20A127E0C((uint64_t)v12, &qword_2545D8970);
  sub_20A127E0C((uint64_t)v17, &qword_2545D8970);
  return v44;
}

uint64_t sub_20A1366C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_20A136700(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A136744(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A136778 + 4 * byte_20A1AE720[a1]))(0x61746144676E70, 0xE700000000000000);
}

unint64_t sub_20A136778()
{
  return 0xD000000000000011;
}

uint64_t sub_20A136794()
{
  return 0x746E65746E69;
}

uint64_t sub_20A1367A8()
{
  return 0x724165646F636564;
}

unint64_t sub_20A1367C8()
{
  return 0xD000000000000016;
}

uint64_t sub_20A1367E8()
{
  unsigned __int8 *v0;

  return sub_20A136744(*v0);
}

uint64_t sub_20A1367F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A137CE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A136814(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_20A136820()
{
  sub_20A137A14();
  return sub_20A1A9360();
}

uint64_t sub_20A136848()
{
  sub_20A137A14();
  return sub_20A1A936C();
}

id CGImageCodable.image.getter()
{
  id *v0;

  return *v0;
}

uint64_t CGImageCodable.init(image:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CGImageCodable.init(from:)@<X0>(_QWORD *a1@<X0>, CGImageRef *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  const __CFData *v16;
  CGDataProvider *v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *v21;
  os_log_type_t v22;
  _DWORD *v24;
  _DWORD *v25;
  _DWORD *v26;
  const CGFloat *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint8_t *v34;
  uint8_t *v35;
  CGImageRef v36;
  CGImageRef v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint8_t *v42;
  _QWORD v43[2];
  int v44;
  uint64_t v45;
  uint64_t v46;
  CGDataProvider *v47;
  CGColorRenderingIntent v48;
  int v49;
  CGImageRef *v50;
  unint64_t v51;
  const CGFloat *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D89C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A137A14();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v58) = 0;
  v9 = sub_20A127940();
  sub_20A1A91B0();
  v52 = (const CGFloat *)v9;
  v50 = a2;
  v10 = v56;
  v11 = v57;
  if (qword_253EB1CD0 != -1)
    swift_once();
  v12 = sub_20A1A8D3C();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_253EB3268);
  sub_20A120BD8(v10, v11);
  v54 = v13;
  v14 = sub_20A1A8D24();
  v15 = sub_20A1A8FA0();
  if (os_log_type_enabled(v14, v15))
  {
    v53 = v6;
    v51 = v11;
    *(_DWORD *)swift_slowAlloc() = 134217984;
    __asm { BR              X10 }
  }
  sub_20A120E74(v10, v11);

  v16 = (const __CFData *)sub_20A1A8C1C();
  v17 = CGDataProviderCreateWithCFData(v16);

  if (!v17)
  {
    LOBYTE(v56) = 0;
    sub_20A1A90B4();
    swift_allocError();
    sub_20A137A58();
    sub_20A1A909C();
    swift_willThrow();
    v18 = v10;
    v19 = v11;
LABEL_9:
    sub_20A120E74(v18, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v56) = 1;
  v49 = sub_20A1A9198();
  LOBYTE(v56) = 2;
  v48 = sub_20A1A91BC();
  v21 = sub_20A1A8D24();
  v22 = sub_20A1A8FA0();
  LODWORD(v51) = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = (_DWORD *)swift_slowAlloc();
    v47 = v17;
    v25 = v24;
    *v24 = 67109376;
    LODWORD(v56) = v49 & 1;
    v53 = v6;
    sub_20A1A8FF4();
    *((_WORD *)v25 + 4) = 1024;
    LODWORD(v56) = v48;
    v6 = v53;
    sub_20A1A8FF4();
    _os_log_impl(&dword_20A10F000, v21, (os_log_type_t)v51, "CGImageCodable decoding: shouldInterpolate=%{BOOL}d, renderingIntent=%d", (uint8_t *)v25, 0xEu);
    v26 = v25;
    v17 = v47;
    MEMORY[0x20BD214DC](v26, -1, -1);
  }

  v58 = 0;
  LOBYTE(v55) = 3;
  sub_20A1A9180();
  v51 = v11;
  if (v57 >> 60 == 15)
  {
    v27 = 0;
  }
  else
  {
    v47 = (CGDataProvider *)v57;
    v28 = v56;
    LOBYTE(v56) = 4;
    v29 = sub_20A1A91A4();
    v45 = v28;
    if ((unint64_t)(v29 - 0x1000000000000000) >> 61 != 7)
    {
      __break(1u);
      JUMPOUT(0x20A137030);
    }
    v52 = (const CGFloat *)swift_slowAlloc();
    v30 = (unint64_t)v47;
    sub_20A137040((uint64_t)v52, v29, 0, 0, 1, v45, (uint64_t)v47);
    v58 = v29;
    v31 = sub_20A1A8D24();
    v32 = sub_20A1A8FA0();
    v44 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v53 = v6;
      v46 = v10;
      v34 = v33;
      *(_DWORD *)v33 = 134217984;
      v43[1] = v33 + 4;
      swift_beginAccess();
      v55 = v58;
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v31, (os_log_type_t)v44, "CGImageCodable decoding: Decode array present in image with count %ld", v34, 0xCu);
      v35 = v34;
      v10 = v46;
      v6 = v53;
      MEMORY[0x20BD214DC](v35, -1, -1);
    }
    sub_20A127EE4(v45, v30);

    v27 = v52;
  }
  v36 = CGImageCreateWithPNGDataProvider(v17, v27, v49 & 1, v48);
  if (!v36)
  {
    LOBYTE(v55) = 3;
    sub_20A1A90B4();
    swift_allocError();
    sub_20A137A58();
    sub_20A1A909C();
    swift_willThrow();
    if (v27)
      MEMORY[0x20BD214DC](v27, -1, -1);

    v18 = v10;
    v19 = v51;
    goto LABEL_9;
  }
  v37 = v36;
  v52 = v27;
  v46 = v10;
  v38 = sub_20A1A8D24();
  v39 = sub_20A1A8FA0();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v47 = v17;
    v41 = v40;
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_20A10F000, v38, v39, "CGImageCodable decoding: Image decoded sucessfully.", v40, 2u);
    v42 = v41;
    v17 = v47;
    MEMORY[0x20BD214DC](v42, -1, -1);
  }

  if (v52)
    MEMORY[0x20BD214DC](v52, -1, -1);

  sub_20A120E74(v46, v51);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *v50 = v37;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A137040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __asm { BR              X11 }
}

uint64_t sub_20A137070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = BYTE6(a7);
  if (!BYTE6(a7))
    return 0;
  if ((a5 & 1) != 0)
    goto LABEL_11;
  if (v8 != a4)
  {
    if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v9 = a4 - v8;
    if (__OFSUB__(a4, v8))
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v7 = 8 * a2;
    if (v9 >= 8 * a2)
      v9 = 8 * a2;
    v10 = v8 + v9;
    if (__OFADD__(v8, v9))
      goto LABEL_32;
    if (v10 >= v8)
      goto LABEL_21;
    __break(1u);
LABEL_11:
    if (v7)
    {
      if (v7 == 1)
        v8 = (int)a6;
      else
        v8 = *(_QWORD *)(a6 + 16);
    }
    else
    {
      v8 = 0;
    }
    if ((unint64_t)(a2 - 0x1000000000000000) >> 61 == 7)
    {
      if (v9 >= 8 * a2)
        v9 = 8 * a2;
      v10 = v8 + v9;
      if (!__OFADD__(v8, v9))
      {
        if (v10 >= v8)
        {
LABEL_21:
          if (v8 == v10)
            return 0;
          if (!a1)
          {
LABEL_33:
            __break(1u);
            JUMPOUT(0x20A1371A0);
          }
          sub_20A1A8C10();
          v11 = v10 - v8;
          if (!__OFSUB__(v10, v8))
            return v11;
          goto LABEL_29;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  return 0;
}

void CGImageCodable.encode(to:)(_QWORD *a1)
{
  CGImage **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  CGImage *v10;
  CFMutableDataRef Mutable;
  __CFData *v12;
  __CFString *v13;
  CGImageDestination *v14;
  CGImage *v15;
  BOOL v16;
  char *v17;
  __CFData *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __CFData *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  CGImage **v33;
  CGImage **v34;
  char *v35;
  CGImage *v36;
  CGImage *v37;
  const CGFloat *Decode;
  void **p_vtable;
  uint64_t v40;
  CGColorSpace *v41;
  void *v42;
  size_t NumberOfComponents;
  void **v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _DWORD *v48;
  _DWORD *v49;
  _DWORD *v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  __CFData *v55;
  uint8_t *v56;
  uint8_t *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  CGImageDestination *v61;
  uint64_t v62;
  __CFData *v63;
  uint64_t v64;
  size_t v65;
  unint64_t v66;
  char v67;

  v3 = sub_20A1A90CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D89D8);
  v7 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable)
    goto LABEL_8;
  v12 = Mutable;
  v62 = v7;
  v13 = (__CFString *)sub_20A1A8D9C();
  v14 = CGImageDestinationCreateWithData(v12, v13, 1uLL, 0);

  if (!v14)
  {

LABEL_8:
    sub_20A1A90A8();
    v27 = sub_20A1A90D8();
    swift_allocError();
    v29 = v28;
    v30 = (char *)v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D89E0) + 48);
    v29[3] = MEMORY[0x24BEE1768];
    *v29 = 0;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v30, v6, v3);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE2728], v27);
    swift_willThrow();
LABEL_10:
    v24 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25 = v6;
    v26 = v3;
    goto LABEL_11;
  }
  v60 = v9;
  v15 = v10;
  CGImageDestinationAddImage(v14, v10, 0);
  v16 = CGImageDestinationFinalize(v14);
  v61 = v14;
  if (!v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D89E8);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_20A1AE8C0;
    *(_QWORD *)(v31 + 56) = &type metadata for CGImageCodable.CodingKeys;
    *(_QWORD *)(v31 + 64) = sub_20A137A14();
    *(_BYTE *)(v31 + 32) = 0;
    sub_20A1A90A8();
    v32 = sub_20A1A90D8();
    swift_allocError();
    v34 = v33;
    v35 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D89E0) + 48);
    type metadata accessor for CGImage(0);
    v34[3] = v36;
    *v34 = v15;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v35, v6, v3);
    (*(void (**)(CGImage **, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE2728], v32);
    v37 = v15;
    swift_willThrow();

    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A137A14();
  v17 = v60;
  sub_20A1A9354();
  v18 = v12;
  v19 = sub_20A1A8C28();
  v21 = v20;

  v65 = v19;
  v66 = v21;
  v67 = 0;
  sub_20A1275D8();
  v22 = v63;
  v23 = v64;
  sub_20A1A9228();
  if (!v22)
  {
    sub_20A120E74(v19, v21);
    CGImageGetShouldInterpolate(v10);
    LOBYTE(v65) = 1;
    sub_20A1A9210();
    CGImageGetRenderingIntent(v10);
    LOBYTE(v65) = 2;
    sub_20A1A9234();
    Decode = CGImageGetDecode(v10);
    p_vtable = DIIdentityDriversLicenseDescriptor.vtable;
    if (!Decode
      || (v40 = (uint64_t)Decode, (v41 = CGImageGetColorSpace(v10)) == 0))
    {
      v58 = v60;
LABEL_20:
      if (p_vtable[410] != (void *)-1)
        swift_once();
      v52 = sub_20A1A8D3C();
      __swift_project_value_buffer(v52, (uint64_t)qword_253EB3268);
      v53 = sub_20A1A8D24();
      v54 = sub_20A1A8FA0();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = v18;
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        _os_log_impl(&dword_20A10F000, v53, v54, "CGImage.encode: Successfully encoded image.", v56, 2u);
        v57 = v56;
        v18 = v55;
        MEMORY[0x20BD214DC](v57, -1, -1);
      }

      v24 = *(void (**)(char *, uint64_t))(v62 + 8);
      v25 = v58;
      goto LABEL_6;
    }
    v42 = v41;
    NumberOfComponents = CGColorSpaceGetNumberOfComponents(v41);

    if ((uint64_t)(NumberOfComponents + 0x4000000000000000) < 0)
    {
      __break(1u);
    }
    else
    {
      v10 = (CGImage *)(2 * NumberOfComponents);
      v42 = (void *)sub_20A137918(v40, 2 * NumberOfComponents);
      p_vtable = v44;
      if (qword_253EB1CD0 == -1)
      {
LABEL_16:
        v45 = sub_20A1A8D3C();
        __swift_project_value_buffer(v45, (uint64_t)qword_253EB3268);
        v46 = sub_20A1A8D24();
        v47 = sub_20A1A8FA0();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (_DWORD *)swift_slowAlloc();
          v63 = v18;
          v49 = v48;
          *v48 = 134218240;
          v65 = NumberOfComponents;
          sub_20A1A8FF4();
          *((_WORD *)v49 + 6) = 2048;
          v65 = (size_t)v10;
          sub_20A1A8FF4();
          _os_log_impl(&dword_20A10F000, v46, v47, "CGImageCodable.encode: Attempting to encode image with numberOfColorSpaceComponents=%ld, data array count = %ld", (uint8_t *)v49, 0x16u);
          v50 = v49;
          v18 = v63;
          MEMORY[0x20BD214DC](v50, -1, -1);
        }

        LOBYTE(v65) = 4;
        v23 = v64;
        v51 = v60;
        sub_20A1A921C();
        v65 = (size_t)v42;
        v66 = (unint64_t)p_vtable;
        v67 = 3;
        sub_20A1A9228();
        v58 = v51;
        sub_20A120E74((uint64_t)v42, (unint64_t)p_vtable);
        p_vtable = (void **)(DIIdentityDriversLicenseDescriptor + 24);
        goto LABEL_20;
      }
    }
    swift_once();
    goto LABEL_16;
  }

  sub_20A120E74(v19, v21);
  v24 = *(void (**)(char *, uint64_t))(v62 + 8);
  v25 = v17;
LABEL_6:
  v26 = v23;
LABEL_11:
  v24(v25, v26);
}

uint64_t sub_20A137918(uint64_t __src, uint64_t a2)
{
  uint64_t v3;

  if (__src)
  {
    if ((unint64_t)(a2 - 0x1000000000000000) >> 61 == 7)
    {
      v3 = 8 * a2;
      if (8 * a2)
      {
        if (v3 <= 14)
        {
          return sub_20A137F08((_BYTE *)__src, (_BYTE *)(__src + v3));
        }
        else
        {
          sub_20A1A8ACC();
          swift_allocObject();
          sub_20A1A8A9C();
          if ((unint64_t)v3 >= 0x7FFFFFFF)
          {
            sub_20A1A8C04();
            __src = swift_allocObject();
            *(_QWORD *)(__src + 16) = 0;
            *(_QWORD *)(__src + 24) = v3;
          }
          else
          {
            return a2 << 35;
          }
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return __src;
}

uint64_t sub_20A1379EC@<X0>(_QWORD *a1@<X0>, CGImageRef *a2@<X8>)
{
  return CGImageCodable.init(from:)(a1, a2);
}

void sub_20A137A00(_QWORD *a1)
{
  CGImageCodable.encode(to:)(a1);
}

unint64_t sub_20A137A14()
{
  unint64_t result;

  result = qword_2545D89C8;
  if (!qword_2545D89C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE858, &type metadata for CGImageCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D89C8);
  }
  return result;
}

unint64_t sub_20A137A58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545D89D0;
  if (!qword_2545D89D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D89C0);
    result = MEMORY[0x20BD21434](MEMORY[0x24BEE33F8], v1);
    atomic_store(result, (unint64_t *)&qword_2545D89D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CGImageCodable()
{
  return &type metadata for CGImageCodable;
}

uint64_t getEnumTagSinglePayload for CGImageCodable.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CGImageCodable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_20A137B90 + 4 * byte_20A1AE72A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_20A137BC4 + 4 * byte_20A1AE725[v4]))();
}

uint64_t sub_20A137BC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A137BCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A137BD4);
  return result;
}

uint64_t sub_20A137BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A137BE8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_20A137BEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A137BF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CGImageCodable.CodingKeys()
{
  return &type metadata for CGImageCodable.CodingKeys;
}

unint64_t sub_20A137C14()
{
  unint64_t result;

  result = qword_2545D89F0;
  if (!qword_2545D89F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE830, &type metadata for CGImageCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D89F0);
  }
  return result;
}

unint64_t sub_20A137C5C()
{
  unint64_t result;

  result = qword_2545D89F8;
  if (!qword_2545D89F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE7A0, &type metadata for CGImageCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D89F8);
  }
  return result;
}

unint64_t sub_20A137CA4()
{
  unint64_t result;

  result = qword_2545D8A00;
  if (!qword_2545D8A00)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AE7C8, &type metadata for CGImageCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D8A00);
  }
  return result;
}

uint64_t sub_20A137CE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746144676E70 && a2 == 0xE700000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BCA80 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65746E69 && a2 == 0xE600000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x724165646F636564 && a2 == 0xEB00000000796172 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BCAA0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_20A137F08(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

void sub_20A137FC8(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_20A138018(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A138100 + 4 * byte_20A1AE8DB[a2]))(0xD00000000000001DLL);
}

uint64_t sub_20A138100(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD00000000000001DLL && v1 == 0x800000020A1BBAC0)
    v2 = 1;
  else
    v2 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_20A13821C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_20A138268(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A138308 + 4 * byte_20A1AE8ED[a2]))(0x61645F6575737369);
}

uint64_t sub_20A138308(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x61645F6575737369 && v1 == 0xEA00000000006574)
    v2 = 1;
  else
    v2 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_20A138400(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000016;
  else
    v3 = 0xD000000000000015;
  if (v2)
    v4 = 0x800000020A1BBA30;
  else
    v4 = 0x800000020A1BBA50;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000016;
  else
    v5 = 0xD000000000000015;
  if ((a2 & 1) != 0)
    v6 = 0x800000020A1BBA50;
  else
    v6 = 0x800000020A1BBA30;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_20A1384A4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_20A1384F0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A13859C + 4 * byte_20A1AE8FB[a2]))(0xD000000000000011);
}

uint64_t sub_20A13859C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000011 && v1 == 0x800000020A1BB9A0)
    v2 = 1;
  else
    v2 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_20A13868C(uint64_t a1, uint64_t a2)
{
  return sub_20A1386A4(a1, a2, ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_20A138698(uint64_t a1, uint64_t a2)
{
  return sub_20A1386A4(a1, a2, ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

uint64_t sub_20A1386A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_20A13873C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEC00000073726165;
  v3 = 0x795F6E695F656761;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x61645F6874726962;
    else
      v5 = 7890291;
    if (v4 == 1)
      v6 = 0xEA00000000006574;
    else
      v6 = 0xE300000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x795F6E695F656761;
  v6 = 0xEC00000073726165;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x61645F6874726962;
    else
      v3 = 7890291;
    if (v7 == 1)
      v2 = 0xEA00000000006574;
    else
      v2 = 0xE300000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A138854(uint64_t a1, char a2, uint64_t a3, char a4)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  if ((a2 & 1) != 0)
  {
    if (a1)
      v6 = 0x65726F745379616DLL;
    else
      v6 = 0x53746F4E6C6C6977;
    if (a1)
      v8 = 0xE800000000000000;
    else
      v8 = 0xEC00000065726F74;
    if ((a4 & 1) != 0)
    {
LABEL_3:
      if (a3)
        v9 = 0x65726F745379616DLL;
      else
        v9 = 0x53746F4E6C6C6977;
      if (a3)
        v10 = 0xE800000000000000;
      else
        v10 = 0xEC00000065726F74;
      if (v6 != v9)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v6 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
    v8 = v7;
    if ((a4 & 1) != 0)
      goto LABEL_3;
  }
  v11 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  v10 = v12;
  if (v6 != v11)
  {
LABEL_21:
    v13 = sub_20A1A9258();
    goto LABEL_22;
  }
LABEL_19:
  if (v8 != v10)
    goto LABEL_21;
  v13 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_20A138954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = IdentityElement.rawValue.getter();
  v2 = v1;
  if (v0 == IdentityElement.rawValue.getter() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_20A1389FC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_20A138A48(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A138AB0 + 4 * byte_20A1AE906[a2]))(a3 + 6);
}

uint64_t sub_20A138AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 6 && v3 == 0x800000020A1BB5A0)
    v4 = 1;
  else
    v4 = sub_20A1A9258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_20A138B4C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A30);
  __swift_allocate_value_buffer(v0, qword_2545D8A08);
  __swift_project_value_buffer(v0, (uint64_t)qword_2545D8A08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A38);
  return sub_20A1A8D0C();
}

uint64_t static IdentityIntentToStoreRawValueKeys.willNotStore.getter()
{
  return 0x53746F4E6C6C6977;
}

uint64_t static IdentityIntentToStoreRawValueKeys.mayStore.getter()
{
  return 0x65726F745379616DLL;
}

id IdentityIntentToStoreRawValueKeys.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IdentityIntentToStoreRawValueKeys.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IdentityIntentToStoreRawValueKeys();
  return objc_msgSendSuper2(&v2, sel_init);
}

id IdentityIntentToStoreRawValueKeys.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IdentityIntentToStoreRawValueKeys();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A138D54()
{
  sub_20A139C04();
  return sub_20A1A8E80();
}

uint64_t sub_20A138DB0()
{
  sub_20A139C04();
  return sub_20A1A8E74();
}

uint64_t sub_20A138DFC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_20A1A930C();
  if (v1 != 1)
    _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A138EA8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A138F34()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_20A1A930C();
  if (v1 != 1)
    _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A138FDC(uint64_t a1, uint64_t a2)
{
  return sub_20A138854(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

unint64_t IdentityIntentToStore.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    return _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  if (*(_QWORD *)v0)
    return 0x65726F745379616DLL;
  return 0x53746F4E6C6C6977;
}

unint64_t IdentityIntentToStore.rawValue.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    return _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  if (*(_QWORD *)v0)
    return 0x65726F745379616DLL;
  return 0x53746F4E6C6C6977;
}

unint64_t sub_20A1390C8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    return _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  if (*(_QWORD *)v0)
    return 0x65726F745379616DLL;
  return 0x53746F4E6C6C6977;
}

void IdentityIntentToStore.init(rawValue:)(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD v30[2];
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A20);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A28);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v30 - v14;
  if (a1 == 0x53746F4E6C6C6977 && a2 == 0xEC00000065726F74 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v16 = 0;
    v17 = 0;
    v18 = 1;
  }
  else
  {
    if ((a1 != 0x65726F745379616DLL || a2 != 0xE800000000000000) && (sub_20A1A9258() & 1) == 0)
    {
      if ((sub_20A1A8E44() & 1) != 0)
      {
        v32 = a1;
        v33 = a2;
        if (qword_2545D80C8 != -1)
          swift_once();
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A30);
        v31 = __swift_project_value_buffer(v19, (uint64_t)qword_2545D8A08);
        v30[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A38);
        sub_20A13194C();
        sub_20A139AD8();
        sub_20A1A8D6C();
        swift_bridgeObjectRelease();
        sub_20A139B24((uint64_t)v15, (uint64_t)v13);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
          swift_getKeyPath();
          sub_20A1A8D18();
          swift_release();
          v20 = v32;
          v21 = v33;
          if ((v33 ^ v32) >> 14)
          {
            v22 = v34;
            v31 = v35;
            v23 = sub_20A1324A8(v32, v33, v34, v35, 10);
            if ((v24 & 0x100) != 0)
              v16 = (uint64_t)sub_20A131C80(v20, v21, v22, v31, 10);
            else
              v16 = v23;
            v25 = v24;
            swift_bridgeObjectRelease();
            if ((v25 & 1) == 0)
            {
              (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
              sub_20A139B6C((uint64_t)v15);
              v18 = 0;
              v17 = 0;
              goto LABEL_28;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        sub_20A139B6C((uint64_t)v15);
        if (qword_253EB1CD0 != -1)
          swift_once();
        v26 = sub_20A1A8D3C();
        __swift_project_value_buffer(v26, (uint64_t)qword_253EB3268);
        v27 = sub_20A1A8D24();
        v28 = sub_20A1A8FAC();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v29 = 0;
          _os_log_impl(&dword_20A10F000, v27, v28, "Could not extract days from mayStoreForDays element", v29, 2u);
          MEMORY[0x20BD214DC](v29, -1, -1);
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v16 = 0;
      v18 = 0;
      v17 = 1;
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    v17 = 0;
    v16 = 1;
    v18 = 1;
  }
LABEL_28:
  *(_QWORD *)a3 = v16;
  *(_BYTE *)(a3 + 8) = v18;
  *(_BYTE *)(a3 + 9) = v17;
}

void sub_20A1395AC(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  IdentityIntentToStore.init(rawValue:)(*a1, a1[1], a2);
}

unint64_t sub_20A1395B8@<X0>(unint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  BOOL v4;
  unint64_t result;
  unint64_t v6;

  v3 = *v1;
  if (*((_BYTE *)v1 + 8) == 1)
  {
    v4 = v3 == 0;
    if (v3)
      result = 0x65726F745379616DLL;
    else
      result = 0x53746F4E6C6C6977;
    if (v4)
      v6 = 0xEC00000065726F74;
    else
      v6 = 0xE800000000000000;
  }
  else
  {
    result = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
  }
  *a1 = result;
  a1[1] = v6;
  return result;
}

uint64_t IdentityIntentToStore.merge(with:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;

  v4 = *(_QWORD *)v2;
  v5 = *(unsigned __int8 *)(v2 + 8);
  if ((*(_BYTE *)(result + 9) & 1) != 0)
  {
    v6 = *(_QWORD *)v2;
    v7 = v5;
    goto LABEL_30;
  }
  v6 = *(_QWORD *)result;
  v8 = *(unsigned __int8 *)(result + 8);
  if (v5)
  {
    if (v4)
      v9 = 0x65726F745379616DLL;
    else
      v9 = 0x53746F4E6C6C6977;
    if (v4)
      v10 = 0xE800000000000000;
    else
      v10 = 0xEC00000065726F74;
  }
  else
  {
    v9 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
    v10 = v11;
  }
  if (v9 == 0x65726F745379616DLL && v10 == 0xE800000000000000)
    goto LABEL_27;
  v13 = sub_20A1A9258();
  result = swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    goto LABEL_28;
  if ((v8 & 1) == 0)
  {
    v16 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
    v15 = v17;
    if (v16 != 0x65726F745379616DLL)
      goto LABEL_31;
LABEL_26:
    if (v15 != 0xE800000000000000)
      goto LABEL_31;
LABEL_27:
    result = swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  if (v6)
    v14 = 0x65726F745379616DLL;
  else
    v14 = 0x53746F4E6C6C6977;
  if (v6)
    v15 = 0xE800000000000000;
  else
    v15 = 0xEC00000065726F74;
  if (v14 == 0x65726F745379616DLL)
    goto LABEL_26;
LABEL_31:
  v18 = sub_20A1A9258();
  result = swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    goto LABEL_28;
  if (v5)
  {
    if (v4)
      v19 = 0x65726F745379616DLL;
    else
      v19 = 0x53746F4E6C6C6977;
    if (v4)
      v20 = 0xE800000000000000;
    else
      v20 = 0xEC00000065726F74;
  }
  else
  {
    v19 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
    v20 = v21;
  }
  if (v19 == 0x53746F4E6C6C6977 && v20 == 0xEC00000065726F74)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_57;
  }
  if ((v8 & 1) != 0)
  {
    if (v6)
      v23 = 0x65726F745379616DLL;
    else
      v23 = 0x53746F4E6C6C6977;
    if (v6)
      v24 = 0xE800000000000000;
    else
      v24 = 0xEC00000065726F74;
  }
  else
  {
    v23 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
    v24 = v25;
  }
  if (v23 == 0x53746F4E6C6C6977 && v24 == 0xEC00000065726F74)
  {
    result = swift_bridgeObjectRelease();
    v6 = 0;
    goto LABEL_29;
  }
  v26 = sub_20A1A9258();
  result = swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
    v6 = 0;
    goto LABEL_29;
  }
LABEL_57:
  if ((v5 & 1) == 0)
  {
    if ((v8 & 1) != 0)
    {
      if (v6)
        v29 = 0x65726F745379616DLL;
      else
        v29 = 0x53746F4E6C6C6977;
      if (v6)
        v30 = 0xE800000000000000;
      else
        v30 = 0xEC00000065726F74;
    }
    else
    {
      v29 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
      v30 = v32;
    }
    if (v29 == 0x53746F4E6C6C6977 && v30 == 0xEC00000065726F74)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v33 = sub_20A1A9258();
      result = swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
      {
        v27 = _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0();
        v28 = v34;
        goto LABEL_64;
      }
    }
    v7 = 0;
    v6 = v4;
    goto LABEL_30;
  }
  if (v4)
    v27 = 0x65726F745379616DLL;
  else
    v27 = 0x53746F4E6C6C6977;
  if (v4)
    v28 = 0xE800000000000000;
  else
    v28 = 0xEC00000065726F74;
LABEL_64:
  v7 = v8 & 1;
  if (v27 == 0x53746F4E6C6C6977 && v28 == 0xEC00000065726F74)
  {
    result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_30;
    goto LABEL_28;
  }
  v31 = sub_20A1A9258();
  result = swift_bridgeObjectRelease();
  if ((v31 & 1) == 0 || (v8 & 1) != 0)
  {
    if (((v5 | v8) & 1) == 0)
    {
      v7 = 0;
      if (v6 <= v4)
        v6 = v4;
      goto LABEL_30;
    }
LABEL_28:
    v6 = 1;
LABEL_29:
    v7 = 1;
  }
LABEL_30:
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

unint64_t _s7CoreIDV33IdentityIntentToStoreRawValueKeysC03mayF7ForDaysySSSiFZ_0()
{
  sub_20A1A9078();
  swift_bridgeObjectRelease();
  sub_20A1A9240();
  sub_20A1A8DF0();
  swift_bridgeObjectRelease();
  sub_20A1A8DF0();
  return 0xD000000000000010;
}

uint64_t type metadata accessor for IdentityIntentToStoreRawValueKeys()
{
  return objc_opt_self();
}

unint64_t sub_20A139AD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545D8A40;
  if (!qword_2545D8A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D8A30);
    result = MEMORY[0x20BD21434](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&qword_2545D8A40);
  }
  return result;
}

uint64_t sub_20A139B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A139B6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8A28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A139BB0()
{
  unint64_t result;

  result = qword_2545D8A48;
  if (!qword_2545D8A48)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityIntentToStore, &type metadata for IdentityIntentToStore);
    atomic_store(result, (unint64_t *)&qword_2545D8A48);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityIntentToStore()
{
  return &type metadata for IdentityIntentToStore;
}

unint64_t sub_20A139C04()
{
  unint64_t result;

  result = qword_2545D8A50;
  if (!qword_2545D8A50)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityIntentToStore, &type metadata for IdentityIntentToStore);
    atomic_store(result, (unint64_t *)&qword_2545D8A50);
  }
  return result;
}

unint64_t static MobileDocumentReaderStoreSession.machServiceName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t MobileDocumentReaderStoreSession.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  MobileDocumentReaderStoreSession.init()();
  return v0;
}

uint64_t MobileDocumentReaderStoreSession.init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  __int128 aBlock;
  __int128 v13;
  void (*v14)();
  uint64_t v15;

  v1 = v0;
  swift_defaultActor_initialize();
  v2 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2545FA990);
  aBlock = 0u;
  v13 = 0u;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D8A58);
  swift_allocObject();
  v3 = sub_20A145188(0xD00000000000002DLL, 0x800000020A1BCB70, (uint64_t)v2, 0, 0, 0, 0, 0, (uint64_t)&aBlock, (uint64_t)sub_20A139E60, 0, (uint64_t)&block_descriptor_443, (uint64_t)&block_descriptor_440);

  *(_QWORD *)(v1 + 112) = v3;
  v4 = (void *)v3[2];
  v14 = sub_20A139EAC;
  v15 = 0;
  v5 = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v13 = sub_20A139EB8;
  *((_QWORD *)&v13 + 1) = &block_descriptor;
  v6 = _Block_copy(&aBlock);
  v7 = v4;
  objc_msgSend(v7, sel_setInterruptionHandler_, v6);
  _Block_release(v6);

  v8 = *(void **)(*(_QWORD *)(v1 + 112) + 16);
  v14 = sub_20A139EE4;
  v15 = 0;
  *(_QWORD *)&aBlock = v5;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v13 = sub_20A139EB8;
  *((_QWORD *)&v13 + 1) = &block_descriptor_3;
  v9 = _Block_copy(&aBlock);
  v10 = v8;
  objc_msgSend(v10, sel_setInvalidationHandler_, v9);
  _Block_release(v9);

  return v1;
}

uint64_t sub_20A139E60(void *a1)
{
  uint64_t v2;
  _QWORD *v3;
  id v4;

  sub_20A12FF48();
  v2 = swift_allocError();
  *v3 = a1;
  v4 = a1;
  return v2;
}

void sub_20A139EAC()
{
  sub_20A139EF0("MobileDocumentReaderStoreSession connection interrupted");
}

uint64_t sub_20A139EB8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_20A139EE4()
{
  sub_20A139EF0("MobileDocumentReaderStoreSession connection invalidated");
}

void sub_20A139EF0(const char *a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v2 = sub_20A1A8D3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_253EB3268);
  oslog = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, oslog, v3, a1, v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }

}

uint64_t sub_20A139FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderIdentityKeyRequest() - 8);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 + 64);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13A028()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[3];
  v0[8] = *(_QWORD *)(v0[4] + 112);
  sub_20A127E8C(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  v0[9] = v5;
  sub_20A12063C(v1, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  return swift_task_switch();
}

uint64_t sub_20A13A0C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[8];
  v1 = v0[9];
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545D8A70;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[11] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = v5;
  *v5 = v0;
  v5[1] = sub_20A13A17C;
  return sub_20A1A9264();
}

uint64_t sub_20A13A17C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A13A220()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13A268(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[18] = a1;
  v3[19] = a3;
  type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  v5 = swift_task_alloc();
  v6 = *a2;
  v3[20] = v5;
  v3[21] = v6;
  return swift_task_switch();
}

uint64_t sub_20A13A2C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(void **)(v0 + 168);
  sub_20A127E8C(*(_QWORD *)(v0 + 152), v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  v3 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderIdentityKeyRequest(0);
  v4 = objc_allocWithZone(v3);
  sub_20A127E8C(v2, (uint64_t)v4 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 176) = v5;
  sub_20A124284(v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  *(_QWORD *)(v0 + 56) = v0 + 136;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A13A3EC;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_20A13A4C0;
  v7[3] = &block_descriptor_436;
  v7[4] = v6;
  objc_msgSend(v1, sel_identityKey_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_20A13A3EC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13A44C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 176);
  v3 = *(char **)(v0 + 136);
  v2 = *(_QWORD **)(v0 + 144);
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value];
  swift_bridgeObjectRetain();

  *v2 = v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13A4C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_20A13A4DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 112);
  return swift_task_switch();
}

uint64_t sub_20A13A4FC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_2545D8A90;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_20A13A5B8;
  return sub_20A1A9264();
}

uint64_t sub_20A13A5B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A13A638(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_20A13A654()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A13A6EC;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A13A4C0;
  v3[3] = &block_descriptor_409;
  v3[4] = v2;
  objc_msgSend(v1, sel_identityKey_completionHandler_, 0, v3);
  return swift_continuation_await();
}

uint64_t sub_20A13A6EC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13A74C()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v2 = *(char **)(v0 + 120);
  v1 = *(_QWORD **)(v0 + 128);
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value];
  swift_bridgeObjectRetain();

  *v1 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13A7A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderIdentityKeyRequest() - 8);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 + 64);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13A804()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[6];
  v2 = v0[4];
  v3 = v0[2];
  v0[7] = *(_QWORD *)(v0[3] + 112);
  sub_20A127E8C(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  v0[8] = v5;
  sub_20A12063C(v1, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  return swift_task_switch();
}

uint64_t sub_20A13A89C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[7];
  v1 = v0[8];
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545D8AB0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[10] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_20A13A954;
  return sub_20A1A9264();
}

uint64_t sub_20A13A954()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A13A9E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13AA2C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[17] = a3;
  type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  v5 = swift_task_alloc();
  v6 = *a2;
  v3[18] = v5;
  v3[19] = v6;
  return swift_task_switch();
}

uint64_t sub_20A13AA8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(void **)(v0 + 152);
  sub_20A127E8C(*(_QWORD *)(v0 + 136), v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  v3 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderIdentityKeyRequest(0);
  v4 = objc_allocWithZone(v3);
  sub_20A127E8C(v2, (uint64_t)v4 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 160) = v5;
  sub_20A124284(v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A13ABA0;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_20A18F990;
  v7[3] = &block_descriptor_407;
  v7[4] = v6;
  objc_msgSend(v1, sel_deleteIdentityKey_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_20A13ABA0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13AC00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderCertificateRequest() - 8);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 + 64);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13AC64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[3];
  v0[8] = *(_QWORD *)(v0[4] + 112);
  sub_20A127E8C(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  v0[9] = v5;
  sub_20A12063C(v1, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  return swift_task_switch();
}

uint64_t sub_20A13ACFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[8];
  v1 = v0[9];
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545D8AD8;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[11] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = v5;
  *v5 = v0;
  v5[1] = sub_20A13ADB8;
  return sub_20A1A9264();
}

uint64_t sub_20A13ADB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A13AE5C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13AEA4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13AEE4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[18] = a1;
  v3[19] = a3;
  type metadata accessor for MobileDocumentReaderCertificateRequest();
  v5 = swift_task_alloc();
  v6 = *a2;
  v3[20] = v5;
  v3[21] = v6;
  return swift_task_switch();
}

uint64_t sub_20A13AF44()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(void **)(v0 + 168);
  sub_20A127E8C(*(_QWORD *)(v0 + 152), v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v3 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderCertificateRequest(0);
  v4 = objc_allocWithZone(v3);
  sub_20A127E8C(v2, (uint64_t)v4 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 176) = v5;
  sub_20A124284(v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  *(_QWORD *)(v0 + 56) = v0 + 136;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A13B068;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_20A13A4C0;
  v7[3] = &block_descriptor_390;
  v7[4] = v6;
  objc_msgSend(v1, sel_certificate_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_20A13B068()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13B0C8()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 176);
  v3 = *(char **)(v0 + 136);
  v2 = *(_QWORD **)(v0 + 144);
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value];
  swift_bridgeObjectRetain();

  *v2 = v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13B13C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13B188(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A13B214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_20A13B22C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 112);
  return swift_task_switch();
}

uint64_t sub_20A13B24C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_2545D8AF8;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_20A13B308;
  return sub_20A1A9264();
}

uint64_t sub_20A13B308()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A13B388()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13B3C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_20A13B3E0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A13B478;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A13A4C0;
  v3[3] = &block_descriptor_363;
  v3[4] = v2;
  objc_msgSend(v1, sel_certificate_completionHandler_, 0, v3);
  return swift_continuation_await();
}

uint64_t sub_20A13B478()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13B4D8()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v2 = *(char **)(v0 + 120);
  v1 = *(_QWORD **)(v0 + 128);
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value];
  swift_bridgeObjectRetain();

  *v1 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13B530()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13B56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderCertificateRequest() - 8);
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 + 64);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13B5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v5 = v0[3];
  v4 = v0[4];
  v6 = v0[2];
  v0[9] = *(_QWORD *)(v0[5] + 112);
  sub_20A127E8C(v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  v0[10] = v9;
  sub_20A12063C(v1, v9 + v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v10 = (_QWORD *)(v9 + v8);
  *v10 = v5;
  v10[1] = v4;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_20A13B69C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[9];
  v1 = v0[10];
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545D8B18;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[12] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_20A13B754;
  return sub_20A1A9264();
}

uint64_t sub_20A13B754()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A13B7E4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13B818()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13B860()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13B8A0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;

  v5[18] = a4;
  v5[19] = a5;
  v5[17] = a3;
  type metadata accessor for MobileDocumentReaderCertificateRequest();
  v7 = swift_task_alloc();
  v8 = *a2;
  v5[20] = v7;
  v5[21] = v8;
  return swift_task_switch();
}

uint64_t sub_20A13B904()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(void **)(v0 + 168);
  sub_20A127E8C(*(_QWORD *)(v0 + 136), v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v3 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderCertificateRequest(0);
  v4 = objc_allocWithZone(v3);
  sub_20A127E8C(v2, (uint64_t)v4 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 176) = v5;
  sub_20A124284(v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v6 = sub_20A1A8D9C();
  *(_QWORD *)(v0 + 184) = v6;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A13BA3C;
  v7 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v8 = (_QWORD *)(v0 + 80);
  v8[1] = 0x40000000;
  v8[2] = sub_20A18F990;
  v8[3] = &block_descriptor_361;
  v8[4] = v7;
  objc_msgSend(v1, sel_storeCertificate_certificateDER_completionHandler_, v5, v6, v8);
  return swift_continuation_await();
}

uint64_t sub_20A13BA3C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13BA9C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13BAE0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13BB3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderCertificateRequest() - 8);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 + 64);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13BB9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[6];
  v2 = v0[4];
  v3 = v0[2];
  v0[7] = *(_QWORD *)(v0[3] + 112);
  sub_20A127E8C(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  v0[8] = v5;
  sub_20A12063C(v1, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  return swift_task_switch();
}

uint64_t sub_20A13BC34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[7];
  v1 = v0[8];
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545D8B38;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[10] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_20A13BCEC;
  return sub_20A1A9264();
}

uint64_t sub_20A13BCEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A13BD7C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13BDB0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13BDF8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13BE38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[17] = a3;
  type metadata accessor for MobileDocumentReaderCertificateRequest();
  v5 = swift_task_alloc();
  v6 = *a2;
  v3[18] = v5;
  v3[19] = v6;
  return swift_task_switch();
}

uint64_t sub_20A13BE98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(void **)(v0 + 152);
  sub_20A127E8C(*(_QWORD *)(v0 + 136), v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  v3 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderCertificateRequest(0);
  v4 = objc_allocWithZone(v3);
  sub_20A127E8C(v2, (uint64_t)v4 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 160) = v5;
  sub_20A124284(v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A13BFAC;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_20A18F990;
  v7[3] = &block_descriptor_359;
  v7[4] = v6;
  objc_msgSend(v1, sel_deleteCertificate_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_20A13BFAC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13C00C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13C04C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13C098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_20A13C0B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 112);
  return swift_task_switch();
}

uint64_t sub_20A13C0D0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_2545D8B50;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D8B68);
  *v4 = v0;
  v4[1] = sub_20A13A5B8;
  return sub_20A1A9264();
}

uint64_t sub_20A13C194(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_20A13C1B0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A13C244;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A13C308;
  v3[3] = &block_descriptor_357;
  v3[4] = v2;
  objc_msgSend(v1, sel_cachedIssuerRootsWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_20A13C244()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13C2A4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;

  v1 = *(char **)(v0 + 120);
  if (v1)
  {
    v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value];
    swift_bridgeObjectRetain();

  }
  else
  {
    v2 = 0;
  }
  **(_QWORD **)(v0 + 128) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13C308(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_20A145F08((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A13C3A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_20A13C3C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 112);
  return swift_task_switch();
}

uint64_t sub_20A13C3E0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_2545D8B78;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_20A13C498;
  return sub_20A1A9264();
}

uint64_t sub_20A13C498()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A13C514()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13C55C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = *a2;
  return swift_task_switch();
}

uint64_t sub_20A13C578()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_20A13C604;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A18F990;
  v3[3] = &block_descriptor_330;
  v3[4] = v2;
  objc_msgSend(v1, sel_clearCachedIssuerRootsWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_20A13C604()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 128) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13C664()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_20A13C67C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 112);
  return swift_task_switch();
}

uint64_t sub_20A13C69C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_2545D8B90;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_20A13C754;
  return sub_20A1A9264();
}

uint64_t sub_20A13C754()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A13C7D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13C7DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13C824()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13C830(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = *a2;
  return swift_task_switch();
}

uint64_t sub_20A13C84C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_20A13C8D8;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A18F990;
  v3[3] = &block_descriptor_328;
  v3[4] = v2;
  objc_msgSend(v1, sel_loadIssuerRootsWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_20A13C8D8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 128) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A13C938()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MobileDocumentReaderStoreSession.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MobileDocumentReaderStoreSession.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t MobileDocumentReaderStoreSession.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A13C9C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A13C9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13C9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

uint64_t sub_20A13CA94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A13CB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13CB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

uint64_t sub_20A13CBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13CBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

uint64_t sub_20A13CC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13CCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D8B68);
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

uint64_t sub_20A13CD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13CD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

uint64_t sub_20A13CE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13CE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_20A13CEDC;
  return sub_20A1A927C();
}

uint64_t sub_20A13CEDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A13CF50()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13CF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13CFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  type metadata accessor for MobileDocumentReaderConfigurationResponse();
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

uint64_t sub_20A13D048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13D064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C80);
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

uint64_t sub_20A13D110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A13D12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  type metadata accessor for MobileDocumentReaderResponse(0);
  *v3 = v0;
  v3[1] = sub_20A13CA94;
  return sub_20A1A927C();
}

void sub_20A13D1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D3F08, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8ED8);
}

void sub_20A13D1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D3BD0, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8E28);
}

void sub_20A13D20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D3B08, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8DF0);
}

void sub_20A13D228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D3A40, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8DB0);
}

void sub_20A13D244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D38B0, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8D60);
}

void sub_20A13D260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D37C0, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8D20);
}

void sub_20A13D27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D36F8, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8CE8);
}

void sub_20A13D298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D3658, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8CA8);
}

void sub_20A13D2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D3590, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8C60);
}

void sub_20A13D2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A13D2EC(a1, a2, a3, (uint64_t)&unk_24C2D3478, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8BF8);
}

void sub_20A13D2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = sub_20A1A8F1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = a3;
    v15[5] = a1;
    v15[6] = a2;
    a5(a1, a2);
    swift_retain();
    sub_20A1673EC((uint64_t)v13, a6, (uint64_t)v15);
    swift_release();
  }
  else
  {
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    v20 = sub_20A1A8D24();
    v17 = sub_20A1A8FA0();
    if (os_log_type_enabled(v20, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_20A10F000, v20, v17, "SendableXPCConnection onCancel is nil", v18, 2u);
      MEMORY[0x20BD214DC](v18, -1, -1);
    }

  }
}

uint64_t sub_20A13D4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13D4C8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8F08;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13D650()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A13D6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13D6E0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8EE8;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13D868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13D884()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8EB0;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13DA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13DA28()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8E70;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13DBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13DBCC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8E38;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13DD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13DD70()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8E00;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13DEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13DF14()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8DC0;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13E09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13E0B8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8D70;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13E240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13E25C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8D30;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13E3E4;
  return sub_20A1A927C();
}

uint64_t sub_20A13E3E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A13E458()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13E460()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 80);
  swift_task_dealloc();
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_20A1A8D24();
  v5 = sub_20A1A8FAC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 80);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_20A1A8FF4();
    *v8 = v10;

    _os_log_impl(&dword_20A10F000, v4, v5, "SendableXPCConnection error occurred when cancelling the task: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C10);
    swift_arrayDestroy();
    MEMORY[0x20BD214DC](v8, -1, -1);
    MEMORY[0x20BD214DC](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 80);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A13E5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13E610()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8CF8;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13E798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13E7B4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8CB8;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13E93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13E958()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8C70;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13EAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20A13EAFC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[6] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8F94();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "SendableXPCConnection executing cancellation handler", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = swift_allocObject();
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  v9[2] = v7;
  v9[3] = &unk_2545D8C08;
  v9[4] = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_20A13D650;
  return sub_20A1A927C();
}

uint64_t sub_20A13EC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A13ECF4(a1, a2, a3, a4, &qword_2545D8E40, (uint64_t)&unk_24C2D3C20, (uint64_t)&unk_2545D8E50);
}

uint64_t sub_20A13ECA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A13ECF4(a1, a2, a3, a4, &qword_2545D8E08, (uint64_t)&unk_24C2D3B58, (uint64_t)&unk_2545D8E18);
}

uint64_t sub_20A13ECBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A13ECF4(a1, a2, a3, a4, &qword_2545D8D90, (uint64_t)&unk_24C2D3978, (uint64_t)&unk_2545D8DA0);
}

uint64_t sub_20A13ECD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A13ECF4(a1, a2, a3, a4, &qword_2545D8D00, (uint64_t)&unk_24C2D3748, (uint64_t)&unk_2545D8D10);
}

uint64_t sub_20A13ECF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_20A1A8F1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  *((_QWORD *)v19 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v18], (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v20 = &v19[(v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v20 = a3;
  *((_QWORD *)v20 + 1) = a4;
  swift_retain();
  swift_retain();
  sub_20A1673EC((uint64_t)v16, v23, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_20A13EE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18);
  v7[34] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[35] = v9;
  v7[36] = *(_QWORD *)(v9 + 64);
  v7[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13EED4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;

  v2 = v0[36];
  v1 = v0[37];
  v3 = v0[34];
  v4 = v0[35];
  v5 = v0[30];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[31], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A14474C;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_91;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[32];
    v0[26] = *v9;
    v23 = (uint64_t (*)(void))((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[38] = v13;
    *v13 = v0;
    v13[1] = sub_20A13F2BC;
    return v23();
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[30] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A13F2BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13F320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F10);
  v7[36] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[37] = v9;
  v7[38] = *(_QWORD *)(v9 + 64);
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13F38C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[32];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[33], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A146574;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_434;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[34];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[40] = v13;
    *v13 = v0;
    v13[1] = sub_20A13F780;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 29, v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[32] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A13F780()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A13F7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8EB8);
  v7[36] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[37] = v9;
  v7[38] = *(_QWORD *)(v9 + 64);
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13F850()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[32];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[33], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A146148;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_388;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[34];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[40] = v13;
    *v13 = v0;
    v13[1] = sub_20A13F780;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 29, v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[32] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A13FC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8E78);
  v7[36] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[37] = v9;
  v7[38] = *(_QWORD *)(v9 + 64);
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A13FCB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[32];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[33], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A145EFC;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_355;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[34];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[40] = v13;
    *v13 = v0;
    v13[1] = sub_20A13F780;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 29, v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[32] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A1400A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18);
  v7[34] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[35] = v9;
  v7[36] = *(_QWORD *)(v9 + 64);
  v7[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A140110()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;

  v2 = v0[36];
  v1 = v0[37];
  v3 = v0[34];
  v4 = v0[35];
  v5 = v0[30];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[31], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A14474C;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_269;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8DD8);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[32];
    v0[26] = *v9;
    v23 = (uint64_t (*)(void))((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[38] = v13;
    *v13 = v0;
    v13[1] = sub_20A13F2BC;
    return v23();
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC90, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[30] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A1404F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8E40);
  v7[34] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[35] = v9;
  v7[36] = *(_QWORD *)(v9 + 64);
  v7[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A140564()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[36];
  v1 = v0[37];
  v3 = v0[34];
  v4 = v0[35];
  v5 = v0[30];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[31], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A145CF8;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_320;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8DD8);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[32];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[38] = v13;
    *v13 = v0;
    v13[1] = sub_20A140958;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 40, v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC90, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[30] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A140958()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A1409BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 321) = *(_BYTE *)(v0 + 320);
  sub_20A1A8EF8();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A140A18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 312);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  *(_QWORD *)(v0 + 232) = v1;
  sub_20A1A8EEC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A140A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8E08);
  v7[36] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[37] = v9;
  v7[38] = *(_QWORD *)(v9 + 64);
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A140AEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[32];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[33], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A145B28;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_297;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8DD8);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[34];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[40] = v13;
    *v13 = v0;
    v13[1] = sub_20A140EE0;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 29, v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC90, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[32] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A140EE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A140F44()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v0 + 232);
  sub_20A1A8EF8();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A140FA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 328);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  *(_QWORD *)(v0 + 240) = v1;
  sub_20A1A8EEC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A141008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18);
  v7[34] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[35] = v9;
  v7[36] = *(_QWORD *)(v9 + 64);
  v7[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A141074()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;

  v2 = v0[36];
  v1 = v0[37];
  v3 = v0[34];
  v4 = v0[35];
  v5 = v0[30];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[31], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A14474C;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_230;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8D88);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[32];
    v0[26] = *v9;
    v23 = (uint64_t (*)(void))((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[38] = v13;
    *v13 = v0;
    v13[1] = sub_20A13F2BC;
    return v23();
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001FLL, 0x800000020A1BCC70, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[30] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A14145C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8D90);
  v7[36] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[37] = v9;
  v7[38] = *(_QWORD *)(v9 + 64);
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A1414C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[32];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[33], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A145760;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_243;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8D88);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[34];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[40] = v13;
    *v13 = v0;
    v13[1] = sub_20A13F780;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 29, v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001FLL, 0x800000020A1BCC70, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[32] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A1418BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18);
  v7[34] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[35] = v9;
  v7[36] = *(_QWORD *)(v9 + 64);
  v7[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A141928()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;

  v2 = v0[36];
  v1 = v0[37];
  v3 = v0[34];
  v4 = v0[35];
  v5 = v0[30];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[31], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A14474C;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_199;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8D48);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[32];
    v0[26] = *v9;
    v23 = (uint64_t (*)(void))((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[38] = v13;
    *v13 = v0;
    v13[1] = sub_20A141D10;
    return v23();
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001BLL, 0x800000020A1BCC50, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[30] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A141D10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A141D74()
{
  uint64_t v0;

  sub_20A1A8EF8();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A141DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[36] = a6;
  v7[37] = a7;
  v7[34] = a4;
  v7[35] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8D00);
  v7[38] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[39] = v9;
  v7[40] = *(_QWORD *)(v9 + 64);
  v7[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A141E30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[40];
  v1 = v0[41];
  v3 = v0[38];
  v4 = v0[39];
  v5 = v0[34];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[35], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 31;
  v0[6] = sub_20A144EC4;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_179;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[36];
    v0[28] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[42] = v13;
    *v13 = v0;
    v13[1] = sub_20A142224;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 26, v0 + 28);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v24 = v22;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v20 = sub_20A1A8DCC();
      v0[29] = sub_20A146EE8(v20, v21, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[30] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v22, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[33] = (*(uint64_t (**)(_QWORD))(v0[34] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A142224()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A142288()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 200) = v1;
  sub_20A1A8EF8();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1422E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 344);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  *(_QWORD *)(v0 + 256) = v1;
  sub_20A1A8EEC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A14235C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  type metadata accessor for MobileDocumentReaderConfigurationResponse();
  v7[34] = swift_task_alloc();
  v7[35] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8CC8);
  v7[36] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[37] = v9;
  v7[38] = *(_QWORD *)(v9 + 64);
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A1423F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[30];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[31], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A144CF4;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_156;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[32];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[40] = v13;
    *v13 = v0;
    v13[1] = sub_20A1427FC;
    return ((uint64_t (*)(_QWORD, _QWORD *))v23)(v0[35], v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[30] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A1427FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A142860()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 280);
  sub_20A127E8C(v1, *(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
  sub_20A1A8EF8();
  sub_20A124284(v1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A142904()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 328);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  *(_QWORD *)(v0 + 232) = v1;
  sub_20A1A8EEC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A142980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C88);
  v7[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[47] = v9;
  v7[48] = *(_QWORD *)(v9 + 64);
  v7[49] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A1429EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[48];
  v1 = v0[49];
  v3 = v0[46];
  v4 = v0[47];
  v5 = v0[42];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[43], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[8] = MEMORY[0x24BDAC760];
  v9 = v0 + 36;
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[12] = sub_20A144AF0;
  v0[13] = v8;
  v0[9] = 1107296256;
  v0[10] = sub_20A1436C8;
  v0[11] = &block_descriptor_131;
  v10 = _Block_copy(v0 + 8);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 32), (uint64_t)(v0 + 20));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[44];
    v0[39] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[50] = v13;
    *v13 = v0;
    v13[1] = sub_20A142DE0;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v23)(v0 + 14, v0 + 39);
  }
  else
  {
    v15 = (uint64_t)(v0 + 28);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 32), (uint64_t)(v0 + 28));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v24 = v22;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 24));
      v20 = sub_20A1A8DCC();
      v0[37] = sub_20A146EE8(v20, v21, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[38] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v22, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 28));
    }

    v0[41] = (*(uint64_t (**)(_QWORD))(v0[42] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 32));
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A142DE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A142E44()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;

  v1 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 112);
  v2 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v0 + 48) = v2;
  sub_20A1A8EF8();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A142EA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 408);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  *(_QWORD *)(v0 + 320) = v1;
  sub_20A1A8EEC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A142F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[32] = a6;
  v7[33] = a7;
  v7[30] = a4;
  v7[31] = a5;
  type metadata accessor for MobileDocumentReaderResponse(0);
  v7[34] = swift_task_alloc();
  v7[35] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C40);
  v7[36] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[37] = v9;
  v7[38] = *(_QWORD *)(v9 + 64);
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A142FB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  uint64_t v24;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[30];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[31], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v9 = v0 + 24;
  v0[6] = sub_20A144864;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_20A1436C8;
  v0[5] = &block_descriptor_106;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_20A1A9018();
  swift_unknownObjectRelease();
  sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C30);
  if (swift_dynamicCast() && *v9)
  {
    v12 = (int *)v0[32];
    v0[26] = *v9;
    v23 = (int *)((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    v0[40] = v13;
    *v13 = v0;
    v13[1] = sub_20A1433BC;
    return ((uint64_t (*)(_QWORD, _QWORD *))v23)(v0[35], v0 + 26);
  }
  else
  {
    v15 = (uint64_t)(v0 + 20);
    if (qword_253EB1CD0 != -1)
      swift_once();
    v16 = sub_20A1A8D3C();
    __swift_project_value_buffer(v16, (uint64_t)qword_253EB3268);
    sub_20A12CE64((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v17 = sub_20A1A8D24();
    v18 = sub_20A1A8FAC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315394;
      sub_20A12CE64(v15, (uint64_t)(v0 + 12));
      v21 = sub_20A1A8DCC();
      v0[27] = sub_20A146EE8(v21, v22, &v24);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v15);
      *(_WORD *)(v19 + 12) = 2080;
      v0[28] = sub_20A146EE8(0xD00000000000001DLL, 0x800000020A1BCC30, &v24);
      sub_20A1A8FF4();
      _os_log_impl(&dword_20A10F000, v17, v18, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v20, -1, -1);
      MEMORY[0x20BD214DC](v19, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
    }

    v0[25] = (*(uint64_t (**)(_QWORD))(v0[30] + 24))(0);
    sub_20A1A8EEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_20A1433BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A143420()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 280);
  sub_20A127E8C(v1, *(_QWORD *)(v0 + 272), type metadata accessor for MobileDocumentReaderResponse);
  sub_20A1A8EF8();
  sub_20A124284(v1, type metadata accessor for MobileDocumentReaderResponse);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1434C4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v7 = sub_20A1A8D3C();
  __swift_project_value_buffer(v7, (uint64_t)qword_253EB3268);
  v8 = a1;
  v9 = a1;
  v10 = sub_20A1A8D24();
  v11 = sub_20A1A8FAC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_getErrorValue();
    v14 = sub_20A1A92C4();
    sub_20A146EE8(v14, v15, &v17);
    sub_20A1A8FF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A10F000, v10, v11, "XPC connection error: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD214DC](v13, -1, -1);
    MEMORY[0x20BD214DC](v12, -1, -1);
  }
  else
  {

  }
  v17 = (*(uint64_t (**)(void *))(a3 + 24))(a1);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_20A1A8EEC();
}

void sub_20A1436C8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_20A143718(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v3 + 16) = *a2;
  v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_20A146648;
  return v6(v3 + 16);
}

uint64_t sub_20A143780(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v3 + 16) = *a2;
  v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_20A1437E8;
  return v6(v3 + 16);
}

uint64_t sub_20A1437E8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *sub_20A143830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_20A145188(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&block_descriptor_443, (uint64_t)&block_descriptor_440);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_20A14388C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MobileDocumentReaderIdentityKeyRequest() - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A1465AC;
  return sub_20A13A268(a1, a2, v7);
}

uint64_t sub_20A14390C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_20A1465AC;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_20A143984()
{
  uint64_t *v0;

  sub_20A13D2EC(v0[2], v0[3], v0[4], (uint64_t)&unk_24C2D3F88, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8EF8);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_20A1A8C70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_20A143A48(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MobileDocumentReaderIdentityKeyRequest() - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A1465AC;
  return sub_20A13AA2C(a1, a2, v7);
}

uint64_t sub_20A143AC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_20A1465AC;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_20A143B40()
{
  uint64_t *v0;

  sub_20A13D2EC(v0[2], v0[3], v0[4], (uint64_t)&unk_24C2D3F08, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8ED8);
}

uint64_t sub_20A143B78(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MobileDocumentReaderCertificateRequest() - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A1465AC;
  return sub_20A13AEE4(a1, a2, v7);
}

uint64_t sub_20A143BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_20A1465AC;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_20A143C70()
{
  uint64_t *v0;

  sub_20A13D2EC(v0[2], v0[3], v0[4], (uint64_t)&unk_24C2D3E28, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8EA0);
}

uint64_t sub_20A143CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_20A143D1C;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_20A143D1C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A143D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;

  v1 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 24);
  v4 = sub_20A1A8C70();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = (uint64_t *)(v2 + *(int *)(v1 + 28));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_20A120E74(*v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A143E5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderCertificateRequest() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v2 + v7;
  v9 = (uint64_t *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_20A1465AC;
  return sub_20A13B8A0(a1, a2, v8, v10, v11);
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  v1 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_20A1A8C70();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = (uint64_t *)(v3 + *(int *)(v1 + 28));
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_20A120E74(*v7, v8);
  return swift_deallocObject();
}

uint64_t sub_20A143FE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MobileDocumentReaderCertificateRequest() - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A1465AC;
  return sub_20A13BE38(a1, a2, v7);
}

uint64_t sub_20A144060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_20A1465AC;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_20A1440D8()
{
  uint64_t *v0;

  sub_20A13D2EC(v0[2], v0[3], v0[4], (uint64_t)&unk_24C2D3D18, (void (*)(uint64_t, uint64_t))sub_20A1465A0, (uint64_t)&unk_2545D8E60);
}

uint64_t type metadata accessor for MobileDocumentReaderStoreSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for MobileDocumentReaderStoreSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.identityKey(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 104) + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A1465AC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.identityKeys()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 112) + *(_QWORD *)(*(_QWORD *)v1 + 112));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A1465AC;
  return v6(a1);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.deleteIdentityKey(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 120) + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A1465AC;
  return v6(a1);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.certificate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 128) + *(_QWORD *)(*(_QWORD *)v2 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A1465AC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.certificates()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A1465AC;
  return v6(a1);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.storeCertificate(_:certificateDER:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 144)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 144));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_20A1465AC;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.deleteCertificate(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 152) + *(_QWORD *)(*(_QWORD *)v1 + 152));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A1465AC;
  return v6(a1);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.cachedIssuerRoots()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 160) + *(_QWORD *)(*(_QWORD *)v1 + 160));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A1465AC;
  return v6(a1);
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.clearIssuerRootsCache()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 168) + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A1465AC;
  return v4();
}

uint64_t dispatch thunk of MobileDocumentReaderStoreSession.loadIssuerRoots()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 176) + *(_QWORD *)(*(_QWORD *)v0 + 176));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A1465AC;
  return v4();
}

uint64_t sub_20A144558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A1445C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8C00 + dword_2545D8C00))(a1, a2, v6);
}

uint64_t sub_20A144640(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8C18, (uint64_t)&unk_24C2D34C8, (uint64_t)&unk_2545D8C28);
}

uint64_t sub_20A144674()
{
  return objectdestroy_83Tm(&qword_2545D8C18);
}

uint64_t sub_20A144680(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A13EE68(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A144740()
{
  return objectdestroy_87Tm(&qword_2545D8C18);
}

uint64_t sub_20A14474C(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8C18);
}

uint64_t sub_20A144758(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8C40, (uint64_t)&unk_24C2D3540, (uint64_t)&unk_2545D8C50);
}

uint64_t sub_20A14478C()
{
  return objectdestroy_83Tm(&qword_2545D8C40);
}

uint64_t sub_20A144798(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C40) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A142F1C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A144858()
{
  return objectdestroy_87Tm(&qword_2545D8C40);
}

uint64_t sub_20A144864(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8C40);
}

uint64_t sub_20A144870(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_20A1434C4(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_20A1448D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A144940()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A144964(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8C68 + dword_2545D8C68))(a1, a2, v6);
}

uint64_t sub_20A1449E4(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8C88, (uint64_t)&unk_24C2D35E0, (uint64_t)&unk_2545D8C98);
}

uint64_t sub_20A144A18()
{
  return objectdestroy_83Tm(&qword_2545D8C88);
}

uint64_t sub_20A144A24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A142980(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A144AE4()
{
  return objectdestroy_87Tm(&qword_2545D8C88);
}

uint64_t sub_20A144AF0(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8C88);
}

uint64_t sub_20A144B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A144B68(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8CB0 + dword_2545D8CB0))(a1, a2, v6);
}

uint64_t sub_20A144BE8(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8CC8, (uint64_t)&unk_24C2D36A8, (uint64_t)&unk_2545D8CD8);
}

uint64_t sub_20A144C1C()
{
  return objectdestroy_83Tm(&qword_2545D8CC8);
}

uint64_t sub_20A144C28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8CC8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A14235C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A144CE8()
{
  return objectdestroy_87Tm(&qword_2545D8CC8);
}

uint64_t sub_20A144CF4(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8CC8);
}

uint64_t sub_20A144D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A144D6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8CF0 + dword_2545D8CF0))(a1, a2, v6);
}

uint64_t sub_20A144DEC()
{
  return objectdestroy_83Tm(&qword_2545D8D00);
}

uint64_t sub_20A144DF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8D00) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A141DC4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A144EB8()
{
  return objectdestroy_87Tm(&qword_2545D8D00);
}

uint64_t sub_20A144EC4(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8D00);
}

uint64_t sub_20A144ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A143D1C;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A144F3C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8D28 + dword_2545D8D28))(a1, a2, v6);
}

uint64_t sub_20A144FBC(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8C18, (uint64_t)&unk_24C2D3810, (uint64_t)&unk_2545D8D40);
}

uint64_t sub_20A144FF0()
{
  return objectdestroy_83Tm(&qword_2545D8C18);
}

uint64_t sub_20A144FFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A1418BC(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A1450BC()
{
  return objectdestroy_87Tm(&qword_2545D8C18);
}

_QWORD *sub_20A1450C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_20A145188(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&block_descriptor_327, (uint64_t)&block_descriptor_324);
}

_QWORD *sub_20A145108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_20A145188(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&block_descriptor_250, (uint64_t)&block_descriptor_247);
}

_QWORD *sub_20A145148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_20A145188(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&block_descriptor_211, (uint64_t)&block_descriptor_208);
}

_QWORD *sub_20A145188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v13;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a7;
  v39 = a6;
  v18 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v19 = (void *)sub_20A1A8D9C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_initWithMachServiceName_options_, v19, 4096);

  v13[2] = v20;
  objc_msgSend(v20, sel_setExportedInterface_, a8);
  v40 = a9;
  sub_20A145438(a9, (uint64_t)&aBlock);
  v21 = v44;
  if (v44)
  {
    v22 = __swift_project_boxed_opaque_existential_1(&aBlock, v44);
    v23 = *(_QWORD *)(v21 - 8);
    MEMORY[0x24BDAC7A8](v22);
    v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    v26 = v20;
    v27 = sub_20A1A924C();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  }
  else
  {
    v28 = v20;
    v27 = 0;
  }
  objc_msgSend(v20, sel_setExportedObject_, v27);

  swift_unknownObjectRelease();
  v29 = (void *)v13[2];
  objc_msgSend(v29, sel_setRemoteObjectInterface_, a3);
  objc_msgSend(v29, sel_activate);
  v30 = MEMORY[0x24BDAC760];
  if (a4)
  {
    v45 = a4;
    v46 = a5;
    aBlock = MEMORY[0x24BDAC760];
    v42 = 1107296256;
    v43 = sub_20A139EB8;
    v44 = a12;
    v31 = _Block_copy(&aBlock);
    v32 = v29;
    sub_20A145480(a4);
    swift_release();
  }
  else
  {
    v33 = v29;
    v31 = 0;
  }
  objc_msgSend(v29, sel_setInvalidationHandler_, v31);
  _Block_release(v31);

  v34 = (void *)v13[2];
  if (v39)
  {
    v45 = v39;
    v46 = v38;
    aBlock = v30;
    v42 = 1107296256;
    v43 = sub_20A139EB8;
    v44 = a13;
    v35 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    v35 = 0;
  }
  objc_msgSend(v34, sel_setInterruptionHandler_, v35);
  _Block_release(v35);
  sub_20A12FE34(v40);
  v13[3] = a10;
  v13[4] = a11;
  return v13;
}

uint64_t sub_20A145438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A145480(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_20A145494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A1454FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8D68 + dword_2545D8D68))(a1, a2, v6);
}

uint64_t sub_20A14557C(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8C18, (uint64_t)&unk_24C2D3900, (uint64_t)&unk_2545D8D80);
}

uint64_t sub_20A1455B0()
{
  return objectdestroy_83Tm(&qword_2545D8C18);
}

uint64_t sub_20A1455BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A141008(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A14567C()
{
  return objectdestroy_87Tm(&qword_2545D8C18);
}

uint64_t sub_20A145688()
{
  return objectdestroy_83Tm(&qword_2545D8D90);
}

uint64_t sub_20A145694(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8D90) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A14145C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A145754()
{
  return objectdestroy_87Tm(&qword_2545D8D90);
}

uint64_t sub_20A145760(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8D90);
}

uint64_t sub_20A145770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A1457D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8DB8 + dword_2545D8DB8))(a1, a2, v6);
}

uint64_t sub_20A145858(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8C18, (uint64_t)&unk_24C2D3A90, (uint64_t)&unk_2545D8DD0);
}

uint64_t sub_20A14588C()
{
  return objectdestroy_83Tm(&qword_2545D8C18);
}

uint64_t sub_20A145898(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C18) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A1400A4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A145958()
{
  return objectdestroy_87Tm(&qword_2545D8C18);
}

uint64_t sub_20A145968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A1459D0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8DF8 + dword_2545D8DF8))(a1, a2, v6);
}

uint64_t sub_20A145A50()
{
  return objectdestroy_83Tm(&qword_2545D8E08);
}

uint64_t sub_20A145A5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8E08) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A140A80(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A145B1C()
{
  return objectdestroy_87Tm(&qword_2545D8E08);
}

uint64_t sub_20A145B28(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8E08);
}

uint64_t sub_20A145B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A145BA0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8E30 + dword_2545D8E30))(a1, a2, v6);
}

uint64_t sub_20A145C20()
{
  return objectdestroy_83Tm(&qword_2545D8E40);
}

uint64_t sub_20A145C2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8E40) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A1404F8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A145CEC()
{
  return objectdestroy_87Tm(&qword_2545D8E40);
}

uint64_t sub_20A145CF8(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8E40);
}

uint64_t sub_20A145D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A145D70(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8E68 + dword_2545D8E68))(a1, a2, v6);
}

uint64_t sub_20A145DF0(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8E78, (uint64_t)&unk_24C2D3D68, (uint64_t)&unk_2545D8E88);
}

uint64_t sub_20A145E24()
{
  return objectdestroy_83Tm(&qword_2545D8E78);
}

uint64_t sub_20A145E30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8E78) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A13FC44(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A145EF0()
{
  return objectdestroy_87Tm(&qword_2545D8E78);
}

uint64_t sub_20A145EFC(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8E78);
}

uint64_t sub_20A145F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A145F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A145FBC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8EA8 + dword_2545D8EA8))(a1, a2, v6);
}

uint64_t sub_20A14603C(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8EB8, (uint64_t)&unk_24C2D3E78, (uint64_t)&unk_2545D8EC8);
}

uint64_t sub_20A146070()
{
  return objectdestroy_83Tm(&qword_2545D8EB8);
}

uint64_t sub_20A14607C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A13F7E4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A14613C()
{
  return objectdestroy_87Tm(&qword_2545D8EB8);
}

uint64_t sub_20A146148(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8EB8);
}

uint64_t sub_20A146158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A1461C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8EE0 + dword_2545D8EE0))(a1, a2, v6);
}

uint64_t objectdestroy_74Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A146278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A1465AC;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_20A1462E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_2545D8F00 + dword_2545D8F00))(a1, a2, v6);
}

uint64_t sub_20A146360(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECF4(a1, v1[2], v1[3], v1[4], &qword_2545D8F10, (uint64_t)&unk_24C2D3FD8, (uint64_t)&unk_2545D8F20);
}

uint64_t sub_20A146394()
{
  return objectdestroy_83Tm(&qword_2545D8F10);
}

uint64_t objectdestroy_83Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A146438(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F10) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20A1465AC;
  return sub_20A13F320(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_20A1464F8()
{
  return objectdestroy_87Tm(&qword_2545D8F10);
}

uint64_t objectdestroy_87Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A146574(void *a1)
{
  return sub_20A144870(a1, &qword_2545D8F10);
}

unint64_t static DigitalPresentmentClientSourceDictionaryHelper.createDictionary(displayConfiguration:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;

  sub_20A1A8A84();
  swift_allocObject();
  sub_20A1A8A78();
  sub_20A146868();
  v1 = sub_20A1A8A6C();
  v3 = v2;
  swift_release();
  if (v0)
  {
    sub_20A1468AC();
    swift_allocError();
    *(_BYTE *)v4 = 2;
    *(_QWORD *)(v4 + 8) = 0xD000000000000066;
    *(_QWORD *)(v4 + 16) = 0x800000020A1BCDB0;
    *(_QWORD *)(v4 + 24) = v0;
    return swift_willThrow();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F38);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A1AE8C0;
    sub_20A1A9048();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BDCDDE8];
    *(_QWORD *)(inited + 72) = v1;
    *(_QWORD *)(inited + 80) = v3;
    return sub_20A146A10(inited);
  }
}

unint64_t sub_20A146868()
{
  unint64_t result;

  result = qword_2545D8F28;
  if (!qword_2545D8F28)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration, &type metadata for DigitalPresentmentDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_2545D8F28);
  }
  return result;
}

unint64_t sub_20A1468AC()
{
  unint64_t result;

  result = qword_2545D8F30;
  if (!qword_2545D8F30)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7D40, &type metadata for DIPError);
    atomic_store(result, (unint64_t *)&qword_2545D8F30);
  }
  return result;
}

unint64_t sub_20A1468F0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F48);
  v2 = (_QWORD *)sub_20A1A912C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *(v4 - 16);
    v7 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    result = sub_20A12B8BC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = v2[6] + 16 * result;
    *(_QWORD *)v11 = v5;
    *(_BYTE *)(v11 + 8) = v6;
    v12 = v2[7] + 16 * result;
    *(_QWORD *)v12 = v7;
    *(_BYTE *)(v12 + 8) = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 32;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A146A10(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F50);
  v2 = sub_20A1A912C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A1475CC(v6, (uint64_t)v15);
    result = sub_20A12B9D4((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_20A12CF20(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static DigitalPresentmentClientSourceDictionaryHelper.getDisplayConfig(dict:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _BYTE v17[136];
  _QWORD v18[19];
  uint64_t v19[17];
  _BYTE v20[32];
  _BYTE v21[24];
  uint64_t v22;

  v19[0] = 0xD000000000000025;
  v19[1] = 0x800000020A1BCE20;
  v3 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_20A1A9288());
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_20A1A9018();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_20A136700((uint64_t)v20, (uint64_t)v21, &qword_2545D8558);
  if (v22)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v18[17];
      v5 = v18[18];
      static DigitalPresentmentDisplayConfiguration.decodeFromJSON(data:)((uint64_t)v17);
      sub_20A136700((uint64_t)v17, (uint64_t)v18, &qword_2545D8F40);
      sub_20A136700((uint64_t)v18, (uint64_t)v19, &qword_2545D8F40);
      if (sub_20A146FB8(v19) == 1)
      {
        if (qword_253EB1CD0 != -1)
          swift_once();
        v6 = sub_20A1A8D3C();
        __swift_project_value_buffer(v6, (uint64_t)qword_253EB3268);
        v7 = sub_20A1A8D24();
        v8 = sub_20A1A8FAC();
        if (os_log_type_enabled(v7, v8))
        {
          v9 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v9 = 0;
          _os_log_impl(&dword_20A10F000, v7, v8, "DigitalPresentmentClientSourceDictionaryHelper.getDisplayConfig: Couldn't decode data into config object.", v9, 2u);
          MEMORY[0x20BD214DC](v9, -1, -1);
        }
        sub_20A120E74(v4, v5);

        sub_20A146ECC((uint64_t)v17);
        v10 = (uint64_t *)v17;
      }
      else
      {
        sub_20A120E74(v4, v5);
        v10 = v18;
      }
      return sub_20A136700((uint64_t)v10, a2, &qword_2545D8F40);
    }
  }
  else
  {
    sub_20A12FE34((uint64_t)v21);
  }
  if (qword_253EB1CD0 != -1)
    swift_once();
  v11 = sub_20A1A8D3C();
  __swift_project_value_buffer(v11, (uint64_t)qword_253EB3268);
  v12 = sub_20A1A8D24();
  v13 = sub_20A1A8FAC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v19[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v18[0] = sub_20A146EE8(0xD000000000000025, 0x800000020A1BCE20, v19);
    sub_20A1A8FF4();
    _os_log_impl(&dword_20A10F000, v12, v13, "DigitalPresentmentClientSourceDictionaryHelper.getDisplayConfig: dictionary doesn't contain data for key %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD214DC](v15, -1, -1);
    MEMORY[0x20BD214DC](v14, -1, -1);
  }

  sub_20A146ECC((uint64_t)v19);
  v10 = v19;
  return sub_20A136700((uint64_t)v10, a2, &qword_2545D8F40);
}

double sub_20A146ECC(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_20A146EE8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_20A146FE0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_20A12CE64((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_20A12CE64((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_20A146FB8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

ValueMetadata *type metadata accessor for DigitalPresentmentClientSourceDictionaryHelper()
{
  return &type metadata for DigitalPresentmentClientSourceDictionaryHelper;
}

uint64_t sub_20A146FE0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_20A1A9000();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_20A147198(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_20A1A90E4();
  if (!v8)
  {
    sub_20A1A90F0();
    __break(1u);
LABEL_17:
    result = sub_20A1A9138();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_20A147198(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_20A14722C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_20A14747C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_20A14747C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_20A14722C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_20A1473A0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_20A1A9084();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_20A1A90F0();
      __break(1u);
LABEL_10:
      v2 = sub_20A1A8DFC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_20A1A9138();
    __break(1u);
LABEL_14:
    result = sub_20A1A90F0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_20A1473A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB1CD8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_20A147404(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_20A1A8E38();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x20BD208AC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_20A14747C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB1CD8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_20A1A9138();
  __break(1u);
  return result;
}

uint64_t sub_20A1475CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void IdentityDocumentElementCategory.storage.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t IdentityDocumentElementCategory.localizedName.getter()
{
  return sub_20A147660();
}

uint64_t sub_20A147660()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_20A1A8CDC();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_20A1A8D90();
  MEMORY[0x24BDAC7A8](v2);
  v3 = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
    __asm { BR              X9 }
  sub_20A1A8D84();
  if (qword_2545D80F0 != -1)
    swift_once();
  v4 = (id)qword_2545F54F0;
  sub_20A1A8CD0();
  sub_20A1A8DC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D93B8);
  v5 = swift_allocObject();
  v6 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v5 + 16) = xmmword_20A1AE8C0;
  v7 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = v3;
  v8 = sub_20A1A8DA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t IdentityDocumentElementCategory.systemImage.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A147C5C
                                                              + 4 * aI[*(_QWORD *)v0]))(0x662E6E6F73726570, 0xEB000000006C6C69);
  else
    return 0x7261646E656C6163;
}

uint64_t sub_20A147C5C()
{
  return 0x696C666F72617473;
}

uint64_t sub_20A147C98()
{
  return 0x69662E6573756F68;
}

uint64_t sub_20A147CB4()
{
  return 0x632E7265626D756ELL;
}

unint64_t sub_20A147CD8()
{
  return 0xD000000000000014;
}

uint64_t sub_20A147D10()
{
  return 0x7269632E72617473;
}

unint64_t sub_20A147D30()
{
  return 0xD000000000000012;
}

uint64_t sub_20A147D4C()
{
  return 0x6C6C69662E726163;
}

uint64_t sub_20A147D64()
{
  return 0x74732E6C6164656DLL;
}

uint64_t IdentityDocumentElementCategory.init(storage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_20A147D9C(uint64_t a1, void *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  Swift::String v10;

  v4 = sub_20A1A01A8();
  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = a1;
    v10._object = a2;
    ISO18013_5_1_ElementIdentifier.init(rawValue:)(v10);
    __asm { BR              X10 }
  }
  v6 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D93A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A1AE8C0;
  *(_QWORD *)(inited + 32) = v6;
  *(_BYTE *)(inited + 40) = 0;
  v8 = sub_20A14BEAC(inited);
  swift_setDeallocating();
  return v8;
}

void sub_20A147E4C()
{
  JUMPOUT(0x20A147E00);
}

uint64_t sub_20A147E58()
{
  return sub_20A14BEAC((uint64_t)&unk_24C2CE5F0);
}

void sub_20A147F58(uint64_t a1, void *a2)
{
  Swift::String v4;

  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  ISO18013_AAMVA_ElementIdentifier.init(rawValue:)(v4);
  __asm { BR              X10 }
}

uint64_t sub_20A147FA4()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_20A147FBC()
{
  return sub_20A14BEAC((uint64_t)&unk_24C2CF058);
}

void sub_20A147FD4()
{
  JUMPOUT(0x20A147FC4);
}

void sub_20A147FE0()
{
  JUMPOUT(0x20A147FC4);
}

void sub_20A147FEC()
{
  JUMPOUT(0x20A147FC4);
}

void sub_20A147FF8()
{
  JUMPOUT(0x20A147FC4);
}

uint64_t sub_20A148004(uint64_t a1, void *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  Swift::String v9;

  v4 = sub_20A1A01A8();
  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = a1;
    v9._object = a2;
    ISO23220_1_ElementIdentifier.init(rawValue:)(v9);
    __asm { BR              X10 }
  }
  v6 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D93A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A1AE8C0;
  *(_QWORD *)(inited + 32) = v6;
  *(_BYTE *)(inited + 40) = 0;
  v8 = sub_20A14BEAC(inited);
  swift_setDeallocating();
  return v8;
}

void sub_20A1480F4(uint64_t a1, void *a2)
{
  Swift::String v4;

  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  ISO23220_1_Japan_ElementIdentifier.init(rawValue:)(v4);
  __asm { BR              X10 }
}

uint64_t sub_20A148148()
{
  return sub_20A14BEAC((uint64_t)&unk_24C2CF570);
}

uint64_t sub_20A14819C()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A148204(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A148230 + 4 * byte_20A1AEC24[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_20A148230()
{
  return 0x6942664F65746164;
}

uint64_t sub_20A148250()
{
  return 0x6165596874726962;
}

uint64_t sub_20A148304()
{
  return 0x73736572646461;
}

uint64_t sub_20A14831C()
{
  return 2037672291;
}

uint64_t sub_20A148328()
{
  return 0x6574617473;
}

uint64_t sub_20A14833C()
{
  return 0x6F436C6174736F70;
}

uint64_t sub_20A148358()
{
  return 0x7972746E756F63;
}

uint64_t sub_20A148370()
{
  return 0x746E656D75636F64;
}

unint64_t sub_20A148394()
{
  return 0xD000000000000010;
}

uint64_t sub_20A14844C()
{
  return 0x536E617265746576;
}

uint64_t sub_20A148470()
{
  sub_20A14CD18();
  return sub_20A1A9360();
}

uint64_t sub_20A148498()
{
  sub_20A14CD18();
  return sub_20A1A936C();
}

uint64_t sub_20A1484C0()
{
  return 0x65756C6176;
}

uint64_t sub_20A1484D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A148560()
{
  sub_20A14CEB0();
  return sub_20A1A9360();
}

uint64_t sub_20A148588()
{
  sub_20A14CEB0();
  return sub_20A1A936C();
}

uint64_t sub_20A1485B0()
{
  sub_20A14CEF4();
  return sub_20A1A9360();
}

uint64_t sub_20A1485D8()
{
  sub_20A14CEF4();
  return sub_20A1A936C();
}

uint64_t sub_20A148600()
{
  sub_20A14CF38();
  return sub_20A1A9360();
}

uint64_t sub_20A148628()
{
  sub_20A14CF38();
  return sub_20A1A936C();
}

uint64_t sub_20A148650()
{
  sub_20A14CCD4();
  return sub_20A1A9360();
}

uint64_t sub_20A148678()
{
  sub_20A14CCD4();
  return sub_20A1A936C();
}

uint64_t sub_20A1486A0()
{
  unsigned __int8 *v0;

  return sub_20A148204(*v0);
}

uint64_t sub_20A1486A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A14E4A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A1486CC(_BYTE *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_20A1486D8()
{
  sub_20A14C960();
  return sub_20A1A9360();
}

uint64_t sub_20A148700()
{
  sub_20A14C960();
  return sub_20A1A936C();
}

uint64_t sub_20A148728()
{
  sub_20A14CC08();
  return sub_20A1A9360();
}

uint64_t sub_20A148750()
{
  sub_20A14CC08();
  return sub_20A1A936C();
}

uint64_t sub_20A148778()
{
  sub_20A14CF7C();
  return sub_20A1A9360();
}

uint64_t sub_20A1487A0()
{
  sub_20A14CF7C();
  return sub_20A1A936C();
}

uint64_t sub_20A1487C8()
{
  sub_20A14CAB4();
  return sub_20A1A9360();
}

uint64_t sub_20A1487F0()
{
  sub_20A14CAB4();
  return sub_20A1A936C();
}

uint64_t sub_20A148818()
{
  sub_20A14CB3C();
  return sub_20A1A9360();
}

uint64_t sub_20A148840()
{
  sub_20A14CB3C();
  return sub_20A1A936C();
}

uint64_t sub_20A148868()
{
  sub_20A14CBC4();
  return sub_20A1A9360();
}

uint64_t sub_20A148890()
{
  sub_20A14CBC4();
  return sub_20A1A936C();
}

uint64_t sub_20A1488B8()
{
  sub_20A14CA2C();
  return sub_20A1A9360();
}

uint64_t sub_20A1488E0()
{
  sub_20A14CA2C();
  return sub_20A1A936C();
}

uint64_t sub_20A148908()
{
  sub_20A14CAF8();
  return sub_20A1A9360();
}

uint64_t sub_20A148930()
{
  sub_20A14CAF8();
  return sub_20A1A936C();
}

uint64_t sub_20A148958()
{
  sub_20A14CDA0();
  return sub_20A1A9360();
}

uint64_t sub_20A148980()
{
  sub_20A14CDA0();
  return sub_20A1A936C();
}

uint64_t sub_20A1489A8()
{
  sub_20A14CD5C();
  return sub_20A1A9360();
}

uint64_t sub_20A1489D0()
{
  sub_20A14CD5C();
  return sub_20A1A936C();
}

uint64_t sub_20A1489F8()
{
  sub_20A14CE28();
  return sub_20A1A9360();
}

uint64_t sub_20A148A20()
{
  sub_20A14CE28();
  return sub_20A1A936C();
}

uint64_t sub_20A148A48()
{
  sub_20A14C9E8();
  return sub_20A1A9360();
}

uint64_t sub_20A148A70()
{
  sub_20A14C9E8();
  return sub_20A1A936C();
}

uint64_t sub_20A148A98()
{
  sub_20A14CB80();
  return sub_20A1A9360();
}

uint64_t sub_20A148AC0()
{
  sub_20A14CB80();
  return sub_20A1A936C();
}

uint64_t sub_20A148AE8()
{
  sub_20A14CFC0();
  return sub_20A1A9360();
}

uint64_t sub_20A148B10()
{
  sub_20A14CFC0();
  return sub_20A1A936C();
}

uint64_t sub_20A148B38()
{
  sub_20A14CA70();
  return sub_20A1A9360();
}

uint64_t sub_20A148B60()
{
  sub_20A14CA70();
  return sub_20A1A936C();
}

uint64_t sub_20A148B88()
{
  sub_20A14CC4C();
  return sub_20A1A9360();
}

uint64_t sub_20A148BB0()
{
  sub_20A14CC4C();
  return sub_20A1A936C();
}

uint64_t sub_20A148BD8()
{
  sub_20A14CE6C();
  return sub_20A1A9360();
}

uint64_t sub_20A148C00()
{
  sub_20A14CE6C();
  return sub_20A1A936C();
}

uint64_t sub_20A148C28()
{
  sub_20A14CC90();
  return sub_20A1A9360();
}

uint64_t sub_20A148C50()
{
  sub_20A14CC90();
  return sub_20A1A936C();
}

uint64_t sub_20A148C78()
{
  sub_20A14C9A4();
  return sub_20A1A9360();
}

uint64_t sub_20A148CA0()
{
  sub_20A14C9A4();
  return sub_20A1A936C();
}

uint64_t sub_20A148CC8()
{
  sub_20A14CDE4();
  return sub_20A1A9360();
}

uint64_t sub_20A148CF0()
{
  sub_20A14CDE4();
  return sub_20A1A936C();
}

uint64_t IdentityDocumentElementCategory.PresentmentElementGroup.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  _QWORD v44[3];
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F60);
  v110 = *(_QWORD *)(v3 - 8);
  v111 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v109 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F68);
  v107 = *(_QWORD *)(v5 - 8);
  v108 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v106 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F70);
  v104 = *(_QWORD *)(v7 - 8);
  v105 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v103 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F78);
  v101 = *(_QWORD *)(v9 - 8);
  v102 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v100 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F80);
  v98 = *(_QWORD *)(v11 - 8);
  v99 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v97 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F88);
  v95 = *(_QWORD *)(v13 - 8);
  v96 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v94 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F90);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v91 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F98);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FA0);
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FA8);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FB0);
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FB8);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FC0);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v73 = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FC8);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v70 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FD0);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v67 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FD8);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v64 = (char *)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FE0);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FE8);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v58 = (char *)v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FF0);
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v55 = (char *)v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8FF8);
  v29 = *(_QWORD *)(v28 - 8);
  v112 = v28;
  v113 = v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v44 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9000);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9008);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v49 = (char *)v44 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9010);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v46 = (char *)v44 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9018);
  v44[2] = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44[1] = (char *)v44 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9020);
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)v44 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *v1;
  v41 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A14C960();
  sub_20A1A9354();
  if (v41 == 1)
    __asm { BR              X9 }
  v114 = 4;
  sub_20A14CEB0();
  sub_20A1A91D4();
  v42 = v112;
  sub_20A1A921C();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v31, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v39, v36);
}

uint64_t IdentityDocumentElementCategory.PresentmentElementGroup.hashValue.getter()
{
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  return sub_20A1A933C();
}

uint64_t IdentityDocumentElementCategory.PresentmentElementGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[9];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;

  v103 = a2;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D90F0);
  v109 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v102 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D90F8);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v108 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9100);
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v101 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9108);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v100 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9110);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v99 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9118);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v98 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9120);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v97 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9128);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v96 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9130);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v95 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9138);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v94 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9140);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v93 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9148);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v92 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9150);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v91 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9158);
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v90 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9160);
  v50 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v107 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9168);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v106 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9170);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v89 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9178);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v105 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9180);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v87 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9188);
  v46 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v88 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9190);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v86 = (char *)v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9198);
  v42[8] = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v85 = (char *)v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D91A0);
  v42[7] = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v26 = (char *)v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D91A8);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D91B0);
  v31 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v33 = (char *)v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1[3];
  v111 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v34);
  sub_20A14C960();
  v35 = v112;
  sub_20A1A9348();
  if (!v35)
  {
    v42[4] = v30;
    v42[2] = v28;
    v42[3] = v27;
    v42[5] = v26;
    v42[6] = 0;
    v112 = v31;
    v36 = sub_20A1A91C8();
    if (*(_QWORD *)(v36 + 16) == 1)
    {
      v42[1] = v33;
      __asm { BR              X10 }
    }
    v37 = sub_20A1A90B4();
    swift_allocError();
    v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v39 = &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup;
    v40 = v110;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x24BEE26D0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v33, v40);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
}

void sub_20A14B2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v2 - 65) = 23;
  sub_20A14C9A4();
  v3 = *(_QWORD *)(v2 - 176);
  v4 = v0;
  v5 = *(_QWORD *)(v2 - 712);
  v6 = *(_QWORD *)(v2 - 672);
  sub_20A1A9150();
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v5, v4);
    JUMPOUT(0x20A14B2BCLL);
  }
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v3, *(_QWORD *)(v2 - 320));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v5, v4);
  JUMPOUT(0x20A14B4C0);
}

uint64_t sub_20A14B4CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityDocumentElementCategory.PresentmentElementGroup.init(from:)(a1, a2);
}

uint64_t sub_20A14B4E0(_QWORD *a1)
{
  return IdentityDocumentElementCategory.PresentmentElementGroup.encode(to:)(a1);
}

uint64_t sub_20A14B4F4()
{
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A14B548()
{
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  return sub_20A1A933C();
}

uint64_t IdentityDocumentElementCategory.hash(into:)()
{
  return IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
}

uint64_t static IdentityDocumentElementCategory.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = v2;
  v6 = v3;
  v7 = v4;
  return _s7CoreIDV31IdentityDocumentElementCategoryV011PresentmentE5GroupO2eeoiySbAE_AEtFZ_0(&v8, (uint64_t)&v6) & 1;
}

uint64_t sub_20A14B618()
{
  return 0x656761726F7473;
}

uint64_t sub_20A14B630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A14B6C4()
{
  sub_20A14D004();
  return sub_20A1A9360();
}

uint64_t sub_20A14B6EC()
{
  sub_20A14D004();
  return sub_20A1A936C();
}

uint64_t IdentityDocumentElementCategory.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D91B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A14D004();
  sub_20A1A9354();
  v10 = v7;
  v11 = v8;
  sub_20A14D048();
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdentityDocumentElementCategory.hashValue.getter()
{
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  return sub_20A1A933C();
}

uint64_t IdentityDocumentElementCategory.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D91D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A14D004();
  sub_20A1A9348();
  if (!v2)
  {
    sub_20A14D08C();
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A14B994@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityDocumentElementCategory.init(from:)(a1, a2);
}

uint64_t sub_20A14B9A8(_QWORD *a1)
{
  return IdentityDocumentElementCategory.encode(to:)(a1);
}

uint64_t sub_20A14B9BC()
{
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A14BA0C()
{
  return IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
}

uint64_t sub_20A14BA44()
{
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A14BA90(uint64_t a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = v2;
  v6 = v3;
  v7 = v4;
  return _s7CoreIDV31IdentityDocumentElementCategoryV011PresentmentE5GroupO2eeoiySbAE_AEtFZ_0(&v8, (uint64_t)&v6) & 1;
}

uint64_t IdentityDocumentElementCategory.PresentmentElementGroup.sortingWeight.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return qword_20A1B0328[*(_QWORD *)v0];
  else
    return 4;
}

uint64_t IdentityDocumentElementCategory.PresentmentElementGroup.secondarySortingWeight.getter()
{
  _BYTE *v0;

  if (v0[8])
    return -1;
  else
    return *(_QWORD *)v0;
}

uint64_t sub_20A14BB14(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_20A14BBB4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t _s7CoreIDV31IdentityDocumentElementCategoryV011PresentmentE5GroupO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_20A14BCC8 + 4 * byte_20A1AEC9A[v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(_QWORD *)a2;
}

uint64_t sub_20A14BCF4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 1)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD08@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD1C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD30@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD44@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD58@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD6C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD80@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BD94@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BDA8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BDBC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BDD0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 12)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BDE4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 13)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BDF8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 14)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE0C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 15)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE20@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 16)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE34@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 17)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE48@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 18)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE5C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 19)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE70@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 20)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE84@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 21)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BE98@<X0>(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0x15)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A14BCE0);
  return 1;
}

uint64_t sub_20A14BEAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B08];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D93B0);
  v3 = sub_20A1A906C();
  v4 = 0;
  v5 = v3 + 56;
  do
  {
    v6 = a1 + 32 + 16 * v4;
    v7 = *(_QWORD *)v6;
    v8 = *(_BYTE *)(v6 + 8);
    sub_20A1A930C();
    if ((v8 & 1) == 0)
      sub_20A1A9318();
    sub_20A1A9318();
    v9 = sub_20A1A933C();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = v9 & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    v15 = *(_QWORD *)(v3 + 48);
    if (((1 << v11) & v13) != 0)
    {
      v16 = ~v10;
      while (1)
      {
        v18 = (uint64_t *)(v15 + 16 * v11);
        v19 = *v18;
        if (*((_BYTE *)v18 + 8) == 1)
          __asm { BR              X16 }
        v17 = v19 == v7 ? v8 : 1;
        if ((v17 & 1) == 0)
          break;
        v11 = (v11 + 1) & v16;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
          goto LABEL_15;
      }
    }
    else
    {
LABEL_15:
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v20 = v15 + 16 * v11;
      *(_QWORD *)v20 = v7;
      *(_BYTE *)(v20 + 8) = v8;
      v21 = *(_QWORD *)(v3 + 16);
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
      {
        __break(1u);
        JUMPOUT(0x20A14C1FCLL);
      }
      *(_QWORD *)(v3 + 16) = v23;
    }
    ++v4;
  }
  while (v4 != v1);
  return v3;
}

uint64_t _s7CoreIDV31IdentityDocumentElementCategoryV6groups03forD4Type9namespace10identifierShyACGAA21ISO18013KnownDocTypesO_S2StFZ_0(unsigned __int8 *a1, uint64_t a2, unint64_t a3, unint64_t a4, _QWORD *a5)
{
  int64_t v9;
  Swift::String v10;
  int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  _QWORD *v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;

  LODWORD(v9) = *a1;
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = a2;
  v10._object = (void *)a3;
  ISO18013KnownNamespaces.init(rawValue:)(v10);
  v11 = v48;
  if (v48 == 4)
  {
    if (qword_253EB1CD0 == -1)
    {
LABEL_3:
      v12 = sub_20A1A8D3C();
      __swift_project_value_buffer(v12, (uint64_t)qword_253EB3268);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v13 = sub_20A1A8D24();
      v14 = sub_20A1A8FA0();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v45 = a4;
        v16 = swift_slowAlloc();
        v48 = (_QWORD *)v16;
        *(_DWORD *)v15 = 136315650;
        if ((_DWORD)v9)
          v17 = 0xD000000000000016;
        else
          v17 = 0xD000000000000015;
        if ((_DWORD)v9)
          v18 = 0x800000020A1BBA50;
        else
          v18 = 0x800000020A1BBA30;
        sub_20A146EE8(v17, v18, (uint64_t *)&v48);
        sub_20A1A8FF4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_20A146EE8(a2, a3, (uint64_t *)&v48);
        sub_20A1A8FF4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_20A146EE8(v45, (unint64_t)a5, (uint64_t *)&v48);
        sub_20A1A8FF4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_20A10F000, v13, v14, "Invalid document type/element combination:%s:%s:%s", (uint8_t *)v15, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x20BD214DC](v16, -1, -1);
        MEMORY[0x20BD214DC](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      return MEMORY[0x24BEE4B08];
    }
LABEL_53:
    swift_once();
    goto LABEL_3;
  }
  if ((v9 & 1) != 0 || v48 - 2 < 2)
  {
    a3 = MEMORY[0x24BEE4B08];
    a2 = *(_QWORD *)(MEMORY[0x24BEE4B08] + 16);
    if (a2)
      goto LABEL_37;
  }
  else
  {
    if ((_BYTE)v48)
      sub_20A147F58(a4, a5);
    else
      v20 = sub_20A147D9C(a4, a5);
LABEL_24:
    a3 = v20;
    a2 = *(_QWORD *)(v20 + 16);
    if (a2)
      goto LABEL_37;
  }
  if (qword_253EB1CD0 != -1)
    swift_once();
  v21 = sub_20A1A8D3C();
  __swift_project_value_buffer(v21, (uint64_t)qword_253EB3268);
  swift_bridgeObjectRetain_n();
  v22 = sub_20A1A8D24();
  v23 = sub_20A1A8FA0();
  if (!os_log_type_enabled(v22, v23))
  {

    swift_bridgeObjectRelease_n();
    a2 = *(_QWORD *)(a3 + 16);
    if (!a2)
      goto LABEL_49;
LABEL_37:
    v44 = a3;
    v48 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_20A17925C(0, a2, 0);
    v30 = a3;
    a5 = v48;
    v9 = sub_20A14BB14(a3);
    v32 = v31;
    v34 = v33 & 1;
    v47 = a3 + 56;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v30 + 32))
    {
      if (((*(_QWORD *)(v47 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_51;
      if (*(_DWORD *)(v30 + 36) != v32)
        goto LABEL_52;
      v35 = *(_QWORD *)(v30 + 48) + 16 * v9;
      v36 = *(_QWORD *)v35;
      v37 = *(_BYTE *)(v35 + 8);
      v48 = a5;
      a3 = a5[2];
      v38 = a5[3];
      a4 = a3 + 1;
      if (a3 >= v38 >> 1)
      {
        sub_20A17925C(v38 > 1, a3 + 1, 1);
        v30 = v44;
        a5 = v48;
      }
      a5[2] = a4;
      v39 = &a5[2 * a3];
      v39[4] = v36;
      *((_BYTE *)v39 + 40) = v37;
      v40 = sub_20A14BBB4(v9, v32, v34 & 1, v30);
      v9 = v40;
      v32 = v41;
      v34 = v42 & 1;
      if (!--a2)
      {
        sub_20A14EE24(v40, v41, v42 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v46 = a4;
  v24 = swift_slowAlloc();
  v25 = swift_slowAlloc();
  v48 = (_QWORD *)v25;
  *(_DWORD *)v24 = 136315650;
  if ((_DWORD)v9)
    v26 = 0xD000000000000016;
  else
    v26 = 0xD000000000000015;
  if ((_DWORD)v9)
    v27 = 0x800000020A1BBA50;
  else
    v27 = 0x800000020A1BBA30;
  sub_20A146EE8(v26, v27, (uint64_t *)&v48);
  sub_20A1A8FF4();
  swift_bridgeObjectRelease();
  *(_WORD *)(v24 + 12) = 2080;
  v29 = 0xD000000000000011;
  a4 = 0x800000020A1BB580;
  switch(v11)
  {
    case 0:
      break;
    case 1:
      v29 = 0xD000000000000017;
      a4 = 0x800000020A1BB5A0;
      break;
    default:
      if (v28)
        v20 = sub_20A148004(0x800000020A1BB580, a5);
      else
        sub_20A1480F4(0x800000020A1BB580, a5);
      goto LABEL_24;
  }
  sub_20A146EE8(v29, a4, (uint64_t *)&v48);
  sub_20A1A8FF4();
  swift_bridgeObjectRelease();
  *(_WORD *)(v24 + 22) = 2080;
  a4 = v24 + 24;
  swift_bridgeObjectRetain();
  sub_20A146EE8(v46, (unint64_t)a5, (uint64_t *)&v48);
  sub_20A1A8FF4();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_20A10F000, v22, v23, "Invalid document type/element combination:%s:%s:%s", (uint8_t *)v24, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x20BD214DC](v25, -1, -1);
  MEMORY[0x20BD214DC](v24, -1, -1);

  a2 = *(_QWORD *)(a3 + 16);
  if (a2)
    goto LABEL_37;
LABEL_49:
  swift_bridgeObjectRelease();
  a5 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_46:
  v19 = sub_20A17A484((uint64_t)a5);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_20A14C960()
{
  unint64_t result;

  result = qword_2545D9028;
  if (!qword_2545D9028)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B02D0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9028);
  }
  return result;
}

unint64_t sub_20A14C9A4()
{
  unint64_t result;

  result = qword_2545D9030;
  if (!qword_2545D9030)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B0280, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.VeteranStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9030);
  }
  return result;
}

unint64_t sub_20A14C9E8()
{
  unint64_t result;

  result = qword_2545D9038;
  if (!qword_2545D9038)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B0230, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IndividualNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9038);
  }
  return result;
}

unint64_t sub_20A14CA2C()
{
  unint64_t result;

  result = qword_2545D9040;
  if (!qword_2545D9040)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B01E0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9040);
  }
  return result;
}

unint64_t sub_20A14CA70()
{
  unint64_t result;

  result = qword_2545D9048;
  if (!qword_2545D9048)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B0190, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9048);
  }
  return result;
}

unint64_t sub_20A14CAB4()
{
  unint64_t result;

  result = qword_2545D9050;
  if (!qword_2545D9050)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B0140, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9050);
  }
  return result;
}

unint64_t sub_20A14CAF8()
{
  unint64_t result;

  result = qword_2545D9058;
  if (!qword_2545D9058)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B00F0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.ExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9058);
  }
  return result;
}

unint64_t sub_20A14CB3C()
{
  unint64_t result;

  result = qword_2545D9060;
  if (!qword_2545D9060)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B00A0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9060);
  }
  return result;
}

unint64_t sub_20A14CB80()
{
  unint64_t result;

  result = qword_2545D9068;
  if (!qword_2545D9068)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B0050, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9068);
  }
  return result;
}

unint64_t sub_20A14CBC4()
{
  unint64_t result;

  result = qword_2545D9070;
  if (!qword_2545D9070)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B0000, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9070);
  }
  return result;
}

unint64_t sub_20A14CC08()
{
  unint64_t result;

  result = qword_2545D9078;
  if (!qword_2545D9078)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFFB0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CountryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9078);
  }
  return result;
}

unint64_t sub_20A14CC4C()
{
  unint64_t result;

  result = qword_2545D9080;
  if (!qword_2545D9080)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFF60, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PostalCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9080);
  }
  return result;
}

unint64_t sub_20A14CC90()
{
  unint64_t result;

  result = qword_2545D9088;
  if (!qword_2545D9088)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFF10, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.StateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9088);
  }
  return result;
}

unint64_t sub_20A14CCD4()
{
  unint64_t result;

  result = qword_2545D9090;
  if (!qword_2545D9090)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFEC0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9090);
  }
  return result;
}

unint64_t sub_20A14CD18()
{
  unint64_t result;

  result = qword_2545D9098;
  if (!qword_2545D9098)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFE70, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9098);
  }
  return result;
}

unint64_t sub_20A14CD5C()
{
  unint64_t result;

  result = qword_2545D90A0;
  if (!qword_2545D90A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFE20, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HairColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90A0);
  }
  return result;
}

unint64_t sub_20A14CDA0()
{
  unint64_t result;

  result = qword_2545D90A8;
  if (!qword_2545D90A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFDD0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.EyeColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90A8);
  }
  return result;
}

unint64_t sub_20A14CDE4()
{
  unint64_t result;

  result = qword_2545D90B0;
  if (!qword_2545D90B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFD80, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.WeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90B0);
  }
  return result;
}

unint64_t sub_20A14CE28()
{
  unint64_t result;

  result = qword_2545D90B8;
  if (!qword_2545D90B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFD30, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90B8);
  }
  return result;
}

unint64_t sub_20A14CE6C()
{
  unint64_t result;

  result = qword_2545D90C0;
  if (!qword_2545D90C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFCE0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90C0);
  }
  return result;
}

unint64_t sub_20A14CEB0()
{
  unint64_t result;

  result = qword_2545D90C8;
  if (!qword_2545D90C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFC90, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90C8);
  }
  return result;
}

unint64_t sub_20A14CEF4()
{
  unint64_t result;

  result = qword_2545D90D0;
  if (!qword_2545D90D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFC40, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90D0);
  }
  return result;
}

unint64_t sub_20A14CF38()
{
  unint64_t result;

  result = qword_2545D90D8;
  if (!qword_2545D90D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFBF0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.BirthYearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90D8);
  }
  return result;
}

unint64_t sub_20A14CF7C()
{
  unint64_t result;

  result = qword_2545D90E0;
  if (!qword_2545D90E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFBA0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90E0);
  }
  return result;
}

unint64_t sub_20A14CFC0()
{
  unint64_t result;

  result = qword_2545D90E8;
  if (!qword_2545D90E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFB50, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D90E8);
  }
  return result;
}

unint64_t sub_20A14D004()
{
  unint64_t result;

  result = qword_2545D91C0;
  if (!qword_2545D91C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFB00, &type metadata for IdentityDocumentElementCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D91C0);
  }
  return result;
}

unint64_t sub_20A14D048()
{
  unint64_t result;

  result = qword_2545D91C8;
  if (!qword_2545D91C8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategory.PresentmentElementGroup, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup);
    atomic_store(result, (unint64_t *)&qword_2545D91C8);
  }
  return result;
}

unint64_t sub_20A14D08C()
{
  unint64_t result;

  result = qword_2545D91D8;
  if (!qword_2545D91D8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategory.PresentmentElementGroup, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup);
    atomic_store(result, (unint64_t *)&qword_2545D91D8);
  }
  return result;
}

unint64_t sub_20A14D0D4()
{
  unint64_t result;

  result = qword_2545D91E0;
  if (!qword_2545D91E0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategory.PresentmentElementGroup, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup);
    atomic_store(result, (unint64_t *)&qword_2545D91E0);
  }
  return result;
}

unint64_t sub_20A14D11C()
{
  unint64_t result;

  result = qword_2545D91E8;
  if (!qword_2545D91E8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategory, &type metadata for IdentityDocumentElementCategory);
    atomic_store(result, (unint64_t *)&qword_2545D91E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentElementCategory(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory()
{
  return &type metadata for IdentityDocumentElementCategory;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.CodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.CodingKeys;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_20A14D29C + 4 * byte_20A1AECB6[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_20A14D2D0 + 4 * byte_20A1AECB1[v4]))();
}

uint64_t sub_20A14D2D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A14D2D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A14D2E0);
  return result;
}

uint64_t sub_20A14D2EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A14D2F4);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_20A14D2F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A14D300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.NameCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.NameCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.DateOfBirthCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DateOfBirthCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.BirthYearCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.BirthYearCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.AgeCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeCodingKeys;
}

uint64_t _s7CoreIDV31IdentityDocumentElementCategoryV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A14D39C + 4 * byte_20A1AECBB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A14D3BC + 4 * byte_20A1AECC0[v4]))();
}

_BYTE *sub_20A14D39C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A14D3BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A14D3C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A14D3CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A14D3D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A14D3DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.AgeAtLeastCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeAtLeastCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.SexCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.SexCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.HeightCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HeightCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.WeightCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.WeightCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.EyeColorCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.EyeColorCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.HairColorCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HairColorCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.AddressCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AddressCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.CityCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CityCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.StateCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.StateCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.PostalCodeCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PostalCodeCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.CountryCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CountryCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentNumberCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentNumberCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.IssuingAuthorityCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IssuingAuthorityCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentIssueDateCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentIssueDateCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.ExpirationDateCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.ExpirationDateCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentDHSComplianceStatusCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentDHSComplianceStatusCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.PortraitCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PortraitCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.DrivingPrivilegesCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DrivingPrivilegesCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.IndividualNumberCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IndividualNumberCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup.VeteranStatusCodingKeys()
{
  return &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.VeteranStatusCodingKeys;
}

unint64_t sub_20A14D52C()
{
  unint64_t result;

  result = qword_2545D91F0;
  if (!qword_2545D91F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF828, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D91F0);
  }
  return result;
}

unint64_t sub_20A14D574()
{
  unint64_t result;

  result = qword_2545D91F8;
  if (!qword_2545D91F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFA20, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D91F8);
  }
  return result;
}

unint64_t sub_20A14D5BC()
{
  unint64_t result;

  result = qword_2545D9200;
  if (!qword_2545D9200)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFAD8, &type metadata for IdentityDocumentElementCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9200);
  }
  return result;
}

unint64_t sub_20A14D604()
{
  unint64_t result;

  result = qword_2545D9208;
  if (!qword_2545D9208)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFA48, &type metadata for IdentityDocumentElementCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9208);
  }
  return result;
}

unint64_t sub_20A14D64C()
{
  unint64_t result;

  result = qword_2545D9210;
  if (!qword_2545D9210)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AFA70, &type metadata for IdentityDocumentElementCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9210);
  }
  return result;
}

unint64_t sub_20A14D694()
{
  unint64_t result;

  result = qword_2545D9218;
  if (!qword_2545D9218)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF940, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9218);
  }
  return result;
}

unint64_t sub_20A14D6DC()
{
  unint64_t result;

  result = qword_2545D9220;
  if (!qword_2545D9220)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF968, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9220);
  }
  return result;
}

unint64_t sub_20A14D724()
{
  unint64_t result;

  result = qword_2545D9228;
  if (!qword_2545D9228)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF8F0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9228);
  }
  return result;
}

unint64_t sub_20A14D76C()
{
  unint64_t result;

  result = qword_2545D9230;
  if (!qword_2545D9230)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF918, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9230);
  }
  return result;
}

unint64_t sub_20A14D7B4()
{
  unint64_t result;

  result = qword_2545D9238;
  if (!qword_2545D9238)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF8A0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.BirthYearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9238);
  }
  return result;
}

unint64_t sub_20A14D7FC()
{
  unint64_t result;

  result = qword_2545D9240;
  if (!qword_2545D9240)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF8C8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.BirthYearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9240);
  }
  return result;
}

unint64_t sub_20A14D844()
{
  unint64_t result;

  result = qword_2545D9248;
  if (!qword_2545D9248)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF850, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9248);
  }
  return result;
}

unint64_t sub_20A14D88C()
{
  unint64_t result;

  result = qword_2545D9250;
  if (!qword_2545D9250)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF878, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9250);
  }
  return result;
}

unint64_t sub_20A14D8D4()
{
  unint64_t result;

  result = qword_2545D9258;
  if (!qword_2545D9258)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF798, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9258);
  }
  return result;
}

unint64_t sub_20A14D91C()
{
  unint64_t result;

  result = qword_2545D9260;
  if (!qword_2545D9260)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF7C0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9260);
  }
  return result;
}

unint64_t sub_20A14D964()
{
  unint64_t result;

  result = qword_2545D9268;
  if (!qword_2545D9268)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF748, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9268);
  }
  return result;
}

unint64_t sub_20A14D9AC()
{
  unint64_t result;

  result = qword_2545D9270;
  if (!qword_2545D9270)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF770, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9270);
  }
  return result;
}

unint64_t sub_20A14D9F4()
{
  unint64_t result;

  result = qword_2545D9278;
  if (!qword_2545D9278)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF6F8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9278);
  }
  return result;
}

unint64_t sub_20A14DA3C()
{
  unint64_t result;

  result = qword_2545D9280;
  if (!qword_2545D9280)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF720, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9280);
  }
  return result;
}

unint64_t sub_20A14DA84()
{
  unint64_t result;

  result = qword_2545D9288;
  if (!qword_2545D9288)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF6A8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.WeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9288);
  }
  return result;
}

unint64_t sub_20A14DACC()
{
  unint64_t result;

  result = qword_2545D9290;
  if (!qword_2545D9290)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF6D0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.WeightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9290);
  }
  return result;
}

unint64_t sub_20A14DB14()
{
  unint64_t result;

  result = qword_2545D9298;
  if (!qword_2545D9298)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF658, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.EyeColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9298);
  }
  return result;
}

unint64_t sub_20A14DB5C()
{
  unint64_t result;

  result = qword_2545D92A0;
  if (!qword_2545D92A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF680, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.EyeColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92A0);
  }
  return result;
}

unint64_t sub_20A14DBA4()
{
  unint64_t result;

  result = qword_2545D92A8;
  if (!qword_2545D92A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF608, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HairColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92A8);
  }
  return result;
}

unint64_t sub_20A14DBEC()
{
  unint64_t result;

  result = qword_2545D92B0;
  if (!qword_2545D92B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF630, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.HairColorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92B0);
  }
  return result;
}

unint64_t sub_20A14DC34()
{
  unint64_t result;

  result = qword_2545D92B8;
  if (!qword_2545D92B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF5B8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92B8);
  }
  return result;
}

unint64_t sub_20A14DC7C()
{
  unint64_t result;

  result = qword_2545D92C0;
  if (!qword_2545D92C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF5E0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92C0);
  }
  return result;
}

unint64_t sub_20A14DCC4()
{
  unint64_t result;

  result = qword_2545D92C8;
  if (!qword_2545D92C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF568, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92C8);
  }
  return result;
}

unint64_t sub_20A14DD0C()
{
  unint64_t result;

  result = qword_2545D92D0;
  if (!qword_2545D92D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF590, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92D0);
  }
  return result;
}

unint64_t sub_20A14DD54()
{
  unint64_t result;

  result = qword_2545D92D8;
  if (!qword_2545D92D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF518, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.StateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92D8);
  }
  return result;
}

unint64_t sub_20A14DD9C()
{
  unint64_t result;

  result = qword_2545D92E0;
  if (!qword_2545D92E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF540, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.StateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92E0);
  }
  return result;
}

unint64_t sub_20A14DDE4()
{
  unint64_t result;

  result = qword_2545D92E8;
  if (!qword_2545D92E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF4C8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PostalCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92E8);
  }
  return result;
}

unint64_t sub_20A14DE2C()
{
  unint64_t result;

  result = qword_2545D92F0;
  if (!qword_2545D92F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF4F0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PostalCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92F0);
  }
  return result;
}

unint64_t sub_20A14DE74()
{
  unint64_t result;

  result = qword_2545D92F8;
  if (!qword_2545D92F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF478, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CountryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D92F8);
  }
  return result;
}

unint64_t sub_20A14DEBC()
{
  unint64_t result;

  result = qword_2545D9300;
  if (!qword_2545D9300)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF4A0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CountryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9300);
  }
  return result;
}

unint64_t sub_20A14DF04()
{
  unint64_t result;

  result = qword_2545D9308;
  if (!qword_2545D9308)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF428, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9308);
  }
  return result;
}

unint64_t sub_20A14DF4C()
{
  unint64_t result;

  result = qword_2545D9310;
  if (!qword_2545D9310)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF450, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9310);
  }
  return result;
}

unint64_t sub_20A14DF94()
{
  unint64_t result;

  result = qword_2545D9318;
  if (!qword_2545D9318)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF3D8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9318);
  }
  return result;
}

unint64_t sub_20A14DFDC()
{
  unint64_t result;

  result = qword_2545D9320;
  if (!qword_2545D9320)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF400, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9320);
  }
  return result;
}

unint64_t sub_20A14E024()
{
  unint64_t result;

  result = qword_2545D9328;
  if (!qword_2545D9328)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF388, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9328);
  }
  return result;
}

unint64_t sub_20A14E06C()
{
  unint64_t result;

  result = qword_2545D9330;
  if (!qword_2545D9330)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF3B0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9330);
  }
  return result;
}

unint64_t sub_20A14E0B4()
{
  unint64_t result;

  result = qword_2545D9338;
  if (!qword_2545D9338)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF338, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.ExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9338);
  }
  return result;
}

unint64_t sub_20A14E0FC()
{
  unint64_t result;

  result = qword_2545D9340;
  if (!qword_2545D9340)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF360, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.ExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9340);
  }
  return result;
}

unint64_t sub_20A14E144()
{
  unint64_t result;

  result = qword_2545D9348;
  if (!qword_2545D9348)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF2E8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9348);
  }
  return result;
}

unint64_t sub_20A14E18C()
{
  unint64_t result;

  result = qword_2545D9350;
  if (!qword_2545D9350)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF310, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9350);
  }
  return result;
}

unint64_t sub_20A14E1D4()
{
  unint64_t result;

  result = qword_2545D9358;
  if (!qword_2545D9358)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF298, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9358);
  }
  return result;
}

unint64_t sub_20A14E21C()
{
  unint64_t result;

  result = qword_2545D9360;
  if (!qword_2545D9360)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF2C0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9360);
  }
  return result;
}

unint64_t sub_20A14E264()
{
  unint64_t result;

  result = qword_2545D9368;
  if (!qword_2545D9368)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF248, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9368);
  }
  return result;
}

unint64_t sub_20A14E2AC()
{
  unint64_t result;

  result = qword_2545D9370;
  if (!qword_2545D9370)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF270, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9370);
  }
  return result;
}

unint64_t sub_20A14E2F4()
{
  unint64_t result;

  result = qword_2545D9378;
  if (!qword_2545D9378)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF1F8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IndividualNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9378);
  }
  return result;
}

unint64_t sub_20A14E33C()
{
  unint64_t result;

  result = qword_2545D9380;
  if (!qword_2545D9380)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF220, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.IndividualNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9380);
  }
  return result;
}

unint64_t sub_20A14E384()
{
  unint64_t result;

  result = qword_2545D9388;
  if (!qword_2545D9388)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF1A8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.VeteranStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9388);
  }
  return result;
}

unint64_t sub_20A14E3CC()
{
  unint64_t result;

  result = qword_2545D9390;
  if (!qword_2545D9390)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF1D0, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.VeteranStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9390);
  }
  return result;
}

unint64_t sub_20A14E414()
{
  unint64_t result;

  result = qword_2545D9398;
  if (!qword_2545D9398)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF990, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9398);
  }
  return result;
}

unint64_t sub_20A14E45C()
{
  unint64_t result;

  result = qword_2545D93A0;
  if (!qword_2545D93A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1AF9B8, &type metadata for IdentityDocumentElementCategory.PresentmentElementGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D93A0);
  }
  return result;
}

uint64_t sub_20A14E4A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6165596874726962 && a2 == 0xE900000000000072 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61654C7441656761 && a2 == 0xEA00000000007473 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7890291 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F6C6F43657965 && a2 == 0xE800000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F6C6F4372696168 && a2 == 0xE900000000000072 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE007265626D754ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BC630 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5D0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A1BC610 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xE800000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BD100 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x536E617265746576 && a2 == 0xED00007375746174)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 23;
    else
      return 24;
  }
}

uint64_t sub_20A14EE24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t MobileDocumentReaderResponse.responseData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_20A127ED0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t MobileDocumentReaderResponse.sessionTranscript.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_20A127ED0(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t MobileDocumentReaderResponse.mobileIdentityDocumentElements.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A152068(type metadata accessor for MobileDocumentReaderResponse, &qword_2545D81B0, a1);
}

uint64_t MobileDocumentReaderResponse.issuer.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MobileDocumentReaderResponse(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderResponse.init(responseData:sessionTranscript:mobileIdentityDocumentElements:issuer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  v9 = *a6;
  v10 = a6[1];
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  v11 = type metadata accessor for MobileDocumentReaderResponse(0);
  result = sub_20A136700(a5, (uint64_t)a7 + *(int *)(v11 + 24), &qword_2545D81B0);
  v13 = (_QWORD *)((char *)a7 + *(int *)(v11 + 28));
  *v13 = v9;
  v13[1] = v10;
  return result;
}

uint64_t MobileDocumentReaderResponse.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1[1];
  if (v10 >> 60 == 15)
  {
    sub_20A1A9324();
  }
  else
  {
    v11 = *v1;
    sub_20A1A9324();
    sub_20A120BD8(v11, v10);
    sub_20A1A8C34();
    sub_20A127EE4(v11, v10);
  }
  v12 = v1[3];
  if (v12 >> 60 == 15)
  {
    sub_20A1A9324();
  }
  else
  {
    v13 = v1[2];
    sub_20A1A9324();
    sub_20A120BD8(v13, v12);
    sub_20A1A8C34();
    sub_20A127EE4(v13, v12);
  }
  v14 = type metadata accessor for MobileDocumentReaderResponse(0);
  sub_20A1353A0((uint64_t)v1 + *(int *)(v14 + 24), (uint64_t)v9, &qword_2545D81B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    sub_20A12063C((uint64_t)v9, (uint64_t)v6, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
    sub_20A1A9324();
    MobileDocumentReaderResponse.MobileIdentityDocumentElements.hash(into:)(a1);
    sub_20A124284((uint64_t)v6, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
  }
  if (!*(uint64_t *)((char *)v1 + *(int *)(v14 + 28) + 8))
    return sub_20A1A9324();
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A14F190()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A14F1C8 + 4 * byte_20A1B04A0[*v0]))(0x65736E6F70736572, 0xEC00000061746144);
}

unint64_t sub_20A14F1C8()
{
  return 0xD000000000000011;
}

unint64_t sub_20A14F1E4()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_20A14F204()
{
  return 0x726575737369;
}

uint64_t sub_20A14F218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A163B5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A14F23C()
{
  sub_20A15ACF4();
  return sub_20A1A9360();
}

uint64_t sub_20A14F264()
{
  sub_20A15ACF4();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D93C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15ACF4();
  sub_20A1A9354();
  v13 = *v3;
  v12 = 0;
  sub_20A1275D8();
  sub_20A1A91F8();
  if (!v2)
  {
    v13 = v3[1];
    v12 = 1;
    sub_20A1A91F8();
    v9 = type metadata accessor for MobileDocumentReaderResponse(0);
    LOBYTE(v13) = 2;
    type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
    sub_20A1205FC(&qword_2545D93D0, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
    sub_20A1A91F8();
    v13 = *(__int128 *)((char *)v3 + *(int *)(v9 + 28));
    v12 = 3;
    sub_20A15AD38();
    sub_20A1A91F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDocumentReaderResponse.hashValue.getter()
{
  return sub_20A156F24((void (*)(_BYTE *))MobileDocumentReaderResponse.hash(into:));
}

uint64_t MobileDocumentReaderResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _OWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;

  v20 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D93E0);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDocumentReaderResponse(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15ACF4();
  v21 = v8;
  v12 = v23;
  sub_20A1A9348();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = v5;
  v19 = a1;
  v23 = v6;
  v13 = v11;
  v25 = 0;
  sub_20A127940();
  v14 = v21;
  v15 = v22;
  sub_20A1A9180();
  *v13 = v24;
  v25 = 1;
  sub_20A1A9180();
  v13[1] = v24;
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  LOBYTE(v24) = 2;
  sub_20A1205FC(&qword_2545D93E8, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
  v16 = (uint64_t)v18;
  sub_20A1A9180();
  sub_20A136700(v16, (uint64_t)v13 + *(int *)(v9 + 24), &qword_2545D81B0);
  v25 = 3;
  sub_20A15AD7C();
  sub_20A1A9180();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v15);
  *(_OWORD *)((char *)v13 + *(int *)(v9 + 28)) = v24;
  sub_20A127E8C((uint64_t)v13, v20, type metadata accessor for MobileDocumentReaderResponse);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_20A124284((uint64_t)v13, type metadata accessor for MobileDocumentReaderResponse);
}

uint64_t sub_20A14F800@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderResponse.init(from:)(a1, a2);
}

uint64_t sub_20A14F814(_QWORD *a1)
{
  return MobileDocumentReaderResponse.encode(to:)(a1);
}

uint64_t sub_20A14F828(uint64_t a1, uint64_t a2)
{
  return sub_20A1579E4(a1, a2, (void (*)(_BYTE *))MobileDocumentReaderResponse.hash(into:));
}

uint64_t sub_20A14F838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A157A34(a1, a2, a3, (void (*)(_BYTE *))MobileDocumentReaderResponse.hash(into:));
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.street.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.city.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.postalCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.isoCountryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.init(street:city:state:postalCode:isoCountryCode:)(CoreIDV::MobileDocumentReaderResponse::MobileIdentityDocumentElements::Address_optional *__return_ptr retstr, Swift::String_optional street, Swift::String_optional city, Swift::String_optional state, Swift::String_optional postalCode, Swift::String_optional isoCountryCode)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;

  countAndFlagsBits = isoCountryCode.value._countAndFlagsBits;
  object = isoCountryCode.value._object;
  if (!street.value._object && !city.value._object && !state.value._object)
  {
    v8 = 1;
    if (isoCountryCode.value._object)
      v9 = street.value._countAndFlagsBits;
    else
      v9 = 0;
    if (isoCountryCode.value._object)
    {
      v8 = 0;
      v10 = city.value._countAndFlagsBits;
    }
    else
    {
      v10 = 0;
    }
    if (isoCountryCode.value._object)
      v11 = state.value._countAndFlagsBits;
    else
      v11 = 0;
    if (isoCountryCode.value._object)
      v12 = postalCode.value._countAndFlagsBits;
    else
      v12 = 0;
    if (isoCountryCode.value._object)
      v13 = postalCode.value._object;
    else
      v13 = 0;
    if (isoCountryCode.value._object)
      v14 = isoCountryCode.value._countAndFlagsBits;
    else
      v14 = 0;
    if (isoCountryCode.value._object)
      v15 = isoCountryCode.value._object;
    else
      v15 = 0;
    if (!postalCode.value._object)
    {
      street.value._countAndFlagsBits = v9;
      street.value._object = (void *)v8;
      city.value._countAndFlagsBits = v10;
      city.value._object = 0;
      state.value._countAndFlagsBits = v11;
      state.value._object = 0;
      postalCode.value._countAndFlagsBits = v12;
      postalCode.value._object = v13;
      countAndFlagsBits = v14;
      object = v15;
    }
  }
  retstr->value.street = street;
  retstr->value.city = city;
  retstr->value.state = state;
  retstr->value.postalCode = postalCode;
  retstr->value.isoCountryCode.value._countAndFlagsBits = countAndFlagsBits;
  retstr->value.isoCountryCode.value._object = object;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[3];
  v2 = v0[5];
  v3 = v0[7];
  v4 = v0[9];
  if (v0[1])
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
  }
  else
  {
    sub_20A1A9324();
    if (v1)
    {
LABEL_3:
      sub_20A1A9324();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      if (v2)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  sub_20A1A9324();
  if (v2)
  {
LABEL_4:
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_5;
LABEL_10:
    sub_20A1A9324();
    if (v4)
      goto LABEL_6;
    return sub_20A1A9324();
  }
LABEL_9:
  sub_20A1A9324();
  if (!v3)
    goto LABEL_10;
LABEL_5:
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_6:
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    return swift_bridgeObjectRelease();
  }
  return sub_20A1A9324();
}

uint64_t sub_20A14FB58()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A14FB84 + 4 * byte_20A1B04A4[*v0]))(0x746565727473, 0xE600000000000000);
}

uint64_t sub_20A14FB84()
{
  return 2037672291;
}

uint64_t sub_20A14FB94()
{
  return 0x6574617473;
}

uint64_t sub_20A14FBA8()
{
  return 0x6F436C6174736F70;
}

uint64_t sub_20A14FBC4()
{
  return 0x746E756F436F7369;
}

uint64_t sub_20A14FBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A163D18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A14FC0C()
{
  sub_20A15ADC0();
  return sub_20A1A9360();
}

uint64_t sub_20A14FC34()
{
  sub_20A15ADC0();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[10];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D93F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  v10 = v1[8];
  v13[1] = v1[9];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15ADC0();
  sub_20A1A9354();
  v18 = 0;
  v11 = v13[9];
  sub_20A1A91E0();
  if (!v11)
  {
    v17 = 1;
    sub_20A1A91E0();
    v16 = 2;
    sub_20A1A91E0();
    v15 = 3;
    sub_20A1A91E0();
    v14 = 4;
    sub_20A1A91E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9408);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15ADC0();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = 0;
  v9 = sub_20A1A9168();
  v11 = v10;
  v37 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_20A1A9168();
  v33 = v13;
  v29 = v12;
  v30 = v9;
  v36 = 2;
  swift_bridgeObjectRetain();
  v32 = 0;
  v28 = sub_20A1A9168();
  v35 = 3;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_20A1A9168();
  v31 = v15;
  v27 = v16;
  v34 = 4;
  v19 = v18;
  swift_bridgeObjectRetain();
  v20 = sub_20A1A9168();
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32 = v20;
  v23(v8, v5);
  swift_bridgeObjectRetain();
  v24 = v31;
  *a2 = v30;
  a2[1] = v11;
  v25 = v33;
  a2[2] = v29;
  a2[3] = v25;
  a2[4] = v28;
  a2[5] = v24;
  a2[6] = v27;
  a2[7] = v19;
  a2[8] = v32;
  a2[9] = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A1501F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.init(from:)(a1, a2);
}

uint64_t sub_20A15020C(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.encode(to:)(a1);
}

uint64_t sub_20A150220()
{
  sub_20A1A930C();
  MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A15027C()
{
  sub_20A1A930C();
  MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.hash(into:)();
  return sub_20A1A933C();
}

void MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.localizedName.getter()
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_20A1A8CDC();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_20A1A8D90();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_20A15036C()
{
  id v0;

  sub_20A1A8D84();
  if (qword_2545D80F0 != -1)
    swift_once();
  v0 = (id)qword_2545F54F0;
  sub_20A1A8CD0();
  return sub_20A1A8DC0();
}

BOOL static MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.hash(into:)()
{
  return sub_20A1A9318();
}

uint64_t sub_20A150650()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A15067C + 4 * byte_20A1B04AE[*v0]))(0x656C616D6566, 0xE600000000000000);
}

uint64_t sub_20A15067C()
{
  return 1701601645;
}

uint64_t sub_20A15068C()
{
  return 0x696C707041746F6ELL;
}

uint64_t sub_20A1506B0()
{
  return 0x6963657053746F6ELL;
}

uint64_t sub_20A1506D0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_20A1506E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A163F44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A15070C()
{
  sub_20A15AE04();
  return sub_20A1A9360();
}

uint64_t sub_20A150734()
{
  sub_20A15AE04();
  return sub_20A1A936C();
}

uint64_t sub_20A15075C()
{
  sub_20A15AF58();
  return sub_20A1A9360();
}

uint64_t sub_20A150784()
{
  sub_20A15AF58();
  return sub_20A1A936C();
}

uint64_t sub_20A1507AC()
{
  sub_20A15AF14();
  return sub_20A1A9360();
}

uint64_t sub_20A1507D4()
{
  sub_20A15AF14();
  return sub_20A1A936C();
}

uint64_t sub_20A1507FC()
{
  sub_20A15AED0();
  return sub_20A1A9360();
}

uint64_t sub_20A150824()
{
  sub_20A15AED0();
  return sub_20A1A936C();
}

uint64_t sub_20A15084C()
{
  sub_20A15AE8C();
  return sub_20A1A9360();
}

uint64_t sub_20A150874()
{
  sub_20A15AE8C();
  return sub_20A1A936C();
}

uint64_t sub_20A15089C()
{
  sub_20A15AE48();
  return sub_20A1A9360();
}

uint64_t sub_20A1508C4()
{
  sub_20A15AE48();
  return sub_20A1A936C();
}

void MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9410);
  v14[11] = *(_QWORD *)(v3 - 8);
  v14[12] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v14[10] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9418);
  v14[8] = *(_QWORD *)(v5 - 8);
  v14[9] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9420);
  v14[5] = *(_QWORD *)(v7 - 8);
  v14[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v14[4] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9428);
  v14[2] = *(_QWORD *)(v9 - 8);
  v14[3] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9430);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9438);
  v14[14] = *(_QWORD *)(v12 - 8);
  v14[15] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15AE04();
  sub_20A1A9354();
  __asm { BR              X9 }
}

uint64_t sub_20A150AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_20A15AF58();
  v5 = *(_QWORD *)(v4 - 88);
  sub_20A1A91D4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9470);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9478);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9480);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9488);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9490);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9498);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_20A15AE04();
  v19 = v44;
  sub_20A1A9348();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_20A1A91C8();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_20A1A90B4();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v23 = &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex;
    v24 = v28;
    v25 = v29;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_20A1511B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.init(from:)(a1, a2);
}

void sub_20A1511C4(_QWORD *a1)
{
  MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.encode(to:)(a1);
}

BOOL static MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.hash(into:)()
{
  return sub_20A1A9318();
}

BOOL sub_20A151218(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_20A151230()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C706D6F636E6F6ELL;
  else
    return 0x6E61696C706D6F63;
}

uint64_t sub_20A151278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A164184(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A15129C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_20A1512A8()
{
  sub_20A15AF9C();
  return sub_20A1A9360();
}

uint64_t sub_20A1512D0()
{
  sub_20A15AF9C();
  return sub_20A1A936C();
}

uint64_t sub_20A1512F8()
{
  sub_20A15B024();
  return sub_20A1A9360();
}

uint64_t sub_20A151320()
{
  sub_20A15B024();
  return sub_20A1A936C();
}

uint64_t sub_20A151348()
{
  sub_20A15AFE0();
  return sub_20A1A9360();
}

uint64_t sub_20A151370()
{
  sub_20A15AFE0();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D94A0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D94A8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D94B0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15AF9C();
  sub_20A1A9354();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_20A15AFE0();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_20A15B024();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D94D0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D94D8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D94E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15AF9C();
  v11 = v33;
  sub_20A1A9348();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_20A1A91C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_20A1A90B4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v21 = &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_20A15AFE0();
    sub_20A1A9150();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_20A15B024();
    v22 = v6;
    sub_20A1A9150();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_20A151908@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.init(from:)(a1, a2);
}

uint64_t sub_20A15191C(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.encode(to:)(a1);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.sign.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.init(code:sign:value:)(CoreIDV::MobileDocumentReaderResponse::MobileIdentityDocumentElements::DrivingPrivilege::Code *__return_ptr retstr, Swift::String code, Swift::String_optional sign, Swift::String_optional value)
{
  retstr->code = code;
  retstr->sign = sign;
  retstr->value = value;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_3:
      sub_20A1A9324();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_20A1A9324();
    if (v2)
      goto LABEL_3;
  }
  return sub_20A1A9324();
}

uint64_t sub_20A151AB8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1852270963;
  if (*v0 != 1)
    v1 = 0x65756C6176;
  if (*v0)
    return v1;
  else
    return 1701080931;
}

uint64_t sub_20A151B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A164298(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A151B24()
{
  sub_20A15B068();
  return sub_20A1A9360();
}

uint64_t sub_20A151B4C()
{
  sub_20A15B068();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.encode(to:)(_QWORD *a1)
{
  return sub_20A1557C0(a1, &qword_2545D94E8, (void (*)(void))sub_20A15B068, (uint64_t)&type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.CodingKeys, (void (*)(uint64_t, uint64_t, char *, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_20A1A9324();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_20A1A9324();
    return sub_20A1A933C();
  }
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D94F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B068();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_20A1A918C();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_20A1A9168();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_20A1A9168();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A151EC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.init(from:)(a1, a2);
}

uint64_t sub_20A151EDC(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.encode(to:)(a1);
}

uint64_t sub_20A151EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_20A1A9324();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_20A1A9324();
    return sub_20A1A933C();
  }
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.vehicleCategoryCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  return sub_20A1353A0(v1 + *(int *)(v3 + 20), a1, &qword_2545D81A8);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A152068(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege, &qword_2545D81A8, a1);
}

uint64_t sub_20A152068@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_20A1353A0(v3 + *(int *)(v6 + 24), a3, a2);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.codes.getter()
{
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.init(vehicleCategoryCode:issueDate:expirationDate:codes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int *v10;
  uint64_t result;

  *a6 = a1;
  a6[1] = a2;
  v10 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  sub_20A136700(a3, (uint64_t)a6 + v10[5], &qword_2545D81A8);
  result = sub_20A136700(a4, (uint64_t)a6 + v10[6], &qword_2545D81A8);
  *(_QWORD *)((char *)a6 + v10[7]) = a5;
  return result;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = sub_20A1A8AD8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  sub_20A1353A0(v2 + v14[5], (uint64_t)v13, &qword_2545D81A8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v15(v13, 1, v4) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_20A1353A0(v2 + v14[6], (uint64_t)v11, &qword_2545D81A8);
  if (v15(v11, 1, v4) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v16 = *(_QWORD *)(v2 + v14[7]);
  swift_bridgeObjectRetain();
  sub_20A1346C0(a1, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A1523BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A1523F0 + 4 * byte_20A1B04BD[*v0]))(0xD000000000000013, 0x800000020A1BD950);
}

uint64_t sub_20A1523F0()
{
  return 0x7461446575737369;
}

uint64_t sub_20A15240C()
{
  return 0x6974617269707865;
}

uint64_t sub_20A152430()
{
  return 0x7365646F63;
}

uint64_t sub_20A152444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A1643C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A152468()
{
  sub_20A15B0C0();
  return sub_20A1A9360();
}

uint64_t sub_20A152490()
{
  sub_20A15B0C0();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9500);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B0C0();
  sub_20A1A9354();
  v15 = 0;
  sub_20A1A9204();
  if (!v2)
  {
    v9 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
    v14 = 1;
    sub_20A1A8AD8();
    sub_20A1205FC(&qword_2545D9510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE00]);
    sub_20A1A91F8();
    v13 = 2;
    sub_20A1A91F8();
    v11[1] = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9518);
    sub_20A15B3C4(&qword_2545D9520, &qword_2545D9518, (uint64_t (*)(void))sub_20A15B104, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  _BYTE v16[72];

  v1 = v0;
  v2 = sub_20A1A8AD8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v16[-v10 - 8];
  sub_20A1A930C();
  sub_20A1A8DE4();
  v12 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  sub_20A1353A0(v1 + v12[5], (uint64_t)v11, &qword_2545D81A8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_20A1353A0(v1 + v12[6], (uint64_t)v9, &qword_2545D81A8);
  if (v13(v9, 1, v2) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_20A1346C0((uint64_t)v16, *(_QWORD *)(v1 + v12[7]));
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v21 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v20 = (char *)v18 - v6;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9530);
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_QWORD *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B0C0();
  v13 = (uint64_t)v23;
  sub_20A1A9348();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = a1;
  v14 = (uint64_t)v20;
  v15 = (uint64_t)v21;
  v28 = 0;
  *v12 = sub_20A1A918C();
  v12[1] = v16;
  sub_20A1A8AD8();
  v27 = 1;
  v18[1] = sub_20A1205FC(&qword_2545D9538, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
  sub_20A1A9180();
  sub_20A136700(v14, (uint64_t)v12 + v10[5], &qword_2545D81A8);
  v26 = 2;
  sub_20A1A9180();
  sub_20A136700(v15, (uint64_t)v12 + v10[6], &qword_2545D81A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9518);
  v25 = 3;
  sub_20A15B3C4(&qword_2545D9540, &qword_2545D9518, (uint64_t (*)(void))sub_20A15B148, MEMORY[0x24BEE12D0]);
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  *(uint64_t *)((char *)v12 + v10[7]) = v24;
  sub_20A127E8C((uint64_t)v12, v19, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_20A124284((uint64_t)v12, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
}

uint64_t sub_20A152CB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.init(from:)(a1, a2);
}

uint64_t sub_20A152CCC(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.encode(to:)(a1);
}

uint64_t sub_20A152CE4(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v4 = v2;
  v6 = sub_20A1A8AD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - v14;
  sub_20A1A8DE4();
  sub_20A1353A0(v4 + a2[5], (uint64_t)v15, &qword_2545D81A8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v16(v15, 1, v6) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_20A1353A0(v4 + a2[6], (uint64_t)v13, &qword_2545D81A8);
  if (v16(v13, 1, v6) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_20A1346C0(a1, *(_QWORD *)(v4 + a2[7]));
}

uint64_t sub_20A152F18(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  _BYTE v18[72];

  v4 = v2;
  v5 = sub_20A1A8AD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v18[-v13 - 8];
  sub_20A1A930C();
  sub_20A1A8DE4();
  sub_20A1353A0(v4 + a2[5], (uint64_t)v14, &qword_2545D81A8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_20A1353A0(v4 + a2[6], (uint64_t)v12, &qword_2545D81A8);
  if (v15(v12, 1, v5) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_20A1346C0((uint64_t)v18, *(_QWORD *)(v4 + a2[7]));
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A152068(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_2545D81A8, a1);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  return sub_20A1353A0(v1 + *(int *)(v3 + 28), a1, &qword_2545D81A8);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.init(code:description:issueDate:expirationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v10;

  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  v10 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_20A136700(a5, (uint64_t)a7 + *(int *)(v10 + 24), &qword_2545D81A8);
  return sub_20A136700(a6, (uint64_t)a7 + *(int *)(v10 + 28), &qword_2545D81A8);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v1 = sub_20A1A8AD8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - v9;
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_20A1353A0(v0 + *(int *)(v11 + 24), (uint64_t)v10, &qword_2545D81A8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v12(v10, 1, v1) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v10, v1);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_20A1353A0(v0 + *(int *)(v11 + 28), (uint64_t)v8, &qword_2545D81A8);
  if (v12(v8, 1, v1) == 1)
    return sub_20A1A9324();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  sub_20A1A9324();
  sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_20A1534C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A1534F0 + 4 * byte_20A1B04C1[*v0]))(1701080931, 0xE400000000000000);
}

uint64_t sub_20A1534F0()
{
  return 0x7470697263736564;
}

uint64_t sub_20A153510()
{
  return 0x7461446575737369;
}

uint64_t sub_20A15352C()
{
  return 0x6974617269707865;
}

uint64_t sub_20A153550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A1645A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A153574()
{
  sub_20A15B1A0();
  return sub_20A1A9360();
}

uint64_t sub_20A15359C()
{
  sub_20A15B1A0();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9550);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B1A0();
  sub_20A1A9354();
  v12 = 0;
  sub_20A1A9204();
  if (!v1)
  {
    v11 = 1;
    sub_20A1A9204();
    type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
    v10 = 2;
    sub_20A1A8AD8();
    sub_20A1205FC(&qword_2545D9510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE00]);
    sub_20A1A91F8();
    v9 = 3;
    sub_20A1A91F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v1 = v0;
  v2 = sub_20A1A8AD8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  sub_20A1A930C();
  sub_20A1A8DE4();
  sub_20A1A8DE4();
  v12 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_20A1353A0(v1 + *(int *)(v12 + 24), (uint64_t)v11, &qword_2545D81A8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_20A1353A0(v1 + *(int *)(v12 + 28), (uint64_t)v9, &qword_2545D81A8);
  if (v13(v9, 1, v2) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - v6;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9560);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B1A0();
  v13 = (uint64_t)v27;
  sub_20A1A9348();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = a1;
  v14 = v7;
  v31 = 0;
  v16 = (uint64_t)v25;
  v15 = v26;
  v17 = (uint64_t)v12;
  *v12 = sub_20A1A918C();
  v12[1] = v18;
  v30 = 1;
  v12[2] = sub_20A1A918C();
  v12[3] = v19;
  sub_20A1A8AD8();
  v29 = 2;
  v22 = sub_20A1205FC(&qword_2545D9538, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
  sub_20A1A9180();
  sub_20A136700(v16, (uint64_t)v12 + *(int *)(v10 + 24), &qword_2545D81A8);
  v28 = 3;
  v20 = (uint64_t)v24;
  sub_20A1A9180();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  sub_20A136700(v20, v17 + *(int *)(v10 + 28), &qword_2545D81A8);
  sub_20A127E8C(v17, v23, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_20A124284(v17, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
}

uint64_t sub_20A153D28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.init(from:)(a1, a2);
}

uint64_t sub_20A153D3C(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.encode(to:)(a1);
}

uint64_t sub_20A153D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v4 = v2;
  v5 = sub_20A1A8AD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  sub_20A1A8DE4();
  sub_20A1A8DE4();
  sub_20A1353A0(v4 + *(int *)(a2 + 24), (uint64_t)v14, &qword_2545D81A8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_20A1353A0(v4 + *(int *)(a2 + 28), (uint64_t)v12, &qword_2545D81A8);
  if (v15(v12, 1, v5) == 1)
    return sub_20A1A9324();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  sub_20A1A9324();
  sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_20A153F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v4 = v2;
  v5 = sub_20A1A8AD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  sub_20A1A930C();
  sub_20A1A8DE4();
  sub_20A1A8DE4();
  sub_20A1353A0(v4 + *(int *)(a2 + 24), (uint64_t)v14, &qword_2545D81A8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_20A1353A0(v4 + *(int *)(a2 + 28), (uint64_t)v12, &qword_2545D81A8);
  if (v15(v12, 1, v5) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return sub_20A1A933C();
}

uint64_t static MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_20A1585CC(a1, a2) & 1;
}

uint64_t sub_20A1541EC()
{
  sub_20A15B1E4();
  return sub_20A1A9360();
}

uint64_t sub_20A154214()
{
  sub_20A15B1E4();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.encode(to:)(_QWORD *a1)
{
  return sub_20A1544D4(a1, &qword_2545D9568, (void (*)(void))sub_20A15B1E4);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A1546D0(a1, &qword_2545D9578, (void (*)(void))sub_20A15B1E4, a2);
}

uint64_t sub_20A154298@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.init(from:)(a1, a2);
}

uint64_t sub_20A1542AC(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.encode(to:)(a1);
}

uint64_t sub_20A1542CC(_QWORD *a1, _QWORD *a2)
{
  return sub_20A1585CC(a1, a2) & 1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

CoreIDV::MobileDocumentReaderResponse::MobileIdentityDocumentElements::AAMVADrivingPrivilege::VehicleEndorsement __swiftcall MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(code:description:)(Swift::String_optional code, Swift::String description)
{
  Swift::String_optional *v2;
  CoreIDV::MobileDocumentReaderResponse::MobileIdentityDocumentElements::AAMVADrivingPrivilege::VehicleEndorsement result;

  *v2 = code;
  v2[1].value = description;
  result.description = description;
  result.code = code;
  return result;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionV4hash4intoys6HasherVz_tF_0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A1A9324();
  }
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t static MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_20A1585CC(a1, a2) & 1;
}

uint64_t sub_20A1543F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7470697263736564;
  else
    return 1701080931;
}

uint64_t sub_20A154434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A164790(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A154458()
{
  sub_20A15B228();
  return sub_20A1A9360();
}

uint64_t sub_20A154480()
{
  sub_20A15B228();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.encode(to:)(_QWORD *a1)
{
  return sub_20A1544D4(a1, &qword_2545D9580, (void (*)(void))sub_20A15B228);
}

uint64_t sub_20A1544D4(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v12 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 16);
  v11[1] = *(_QWORD *)(v3 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12();
  sub_20A1A9354();
  v16 = 0;
  v9 = v13;
  sub_20A1A91E0();
  if (!v9)
  {
    v15 = 1;
    sub_20A1A9204();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v5);
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionV9hashValueSivg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_20A1A930C();
  sub_20A1A9324();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  sub_20A1A8DE4();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A1546D0(a1, &qword_2545D9590, (void (*)(void))sub_20A15B228, a2);
}

uint64_t sub_20A1546D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  char v25;

  v22 = a4;
  v23 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_20A1A9348();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = v7;
  v11 = v22;
  v12 = v23;
  v25 = 0;
  v13 = sub_20A1A9168();
  v15 = v14;
  v24 = 1;
  swift_bridgeObjectRetain();
  v16 = sub_20A1A918C();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20 = v16;
  v19(v9, v12);
  *v11 = v13;
  v11[1] = v15;
  v11[2] = v20;
  v11[3] = v18;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A15487C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(from:)(a1, a2);
}

uint64_t sub_20A154890(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.encode(to:)(a1);
}

uint64_t sub_20A1548A4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A1A9324();
  }
  return sub_20A1A8DE4();
}

uint64_t sub_20A154928()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_20A1A930C();
  sub_20A1A9324();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  sub_20A1A8DE4();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.vehicleClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A1353A0(v1, a1, &qword_2545D8318);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.vehicleRestrictions.getter()
{
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.vehicleEndorsements.getter()
{
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.init(vehicleClass:vehicleRestrictions:vehicleEndorsements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a1, 1, v12) == 1
    && !*(_QWORD *)(a2 + 16))
  {
    sub_20A127E0C(a1, &qword_2545D8318);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a4, 1, 1, v8);
  }
  else
  {
    sub_20A136700(a1, (uint64_t)v11, &qword_2545D8318);
    *(_QWORD *)&v11[*(int *)(v8 + 20)] = a2;
    *(_QWORD *)&v11[*(int *)(v8 + 24)] = a3;
    sub_20A12063C((uint64_t)v11, a4, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a4, 0, 1, v8);
  }
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_20A157A74();
  v3 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  sub_20A1341B4(a1, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_20A1341B4(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A154BE8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x43656C6369686576;
}

uint64_t sub_20A154C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A164888(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A154C78()
{
  sub_20A15B2B4();
  return sub_20A1A9360();
}

uint64_t sub_20A154CA0()
{
  sub_20A15B2B4();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9598);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B2B4();
  sub_20A1A9354();
  LOBYTE(v12) = 0;
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_20A1205FC(&qword_2545D95A8, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_20A1A91F8();
  if (!v2)
  {
    v9 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 20));
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D95B0);
    sub_20A15B3C4(&qword_2545D95B8, &qword_2545D95B0, (uint64_t (*)(void))sub_20A15B2F8, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D95C8);
    sub_20A15B3C4(&qword_2545D95D0, &qword_2545D95C8, (uint64_t (*)(void))sub_20A15B33C, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_20A1A930C();
  sub_20A157A74();
  v1 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  sub_20A1341B4(v3, *(_QWORD *)(v0 + *(int *)(v1 + 20)));
  sub_20A1341B4(v3, *(_QWORD *)(v0 + *(int *)(v1 + 24)));
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;

  v15 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D95E0);
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v17 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20A15B2B4();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  LOBYTE(v19) = 0;
  sub_20A1205FC(&qword_2545D95E8, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_20A1A9180();
  sub_20A136700((uint64_t)v6, (uint64_t)v12, &qword_2545D8318);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D95B0);
  v18 = 1;
  sub_20A15B3C4(&qword_2545D95F0, &qword_2545D95B0, (uint64_t (*)(void))sub_20A15B380, MEMORY[0x24BEE12D0]);
  sub_20A1A91B0();
  *(_QWORD *)&v12[*(int *)(v10 + 20)] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D95C8);
  v18 = 2;
  sub_20A15B3C4(&qword_2545D9600, &qword_2545D95C8, (uint64_t (*)(void))sub_20A15B428, MEMORY[0x24BEE12D0]);
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  *(_QWORD *)&v12[*(int *)(v10 + 24)] = v19;
  sub_20A127E8C((uint64_t)v12, v15, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_20A124284((uint64_t)v12, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
}

uint64_t sub_20A15527C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.init(from:)(a1, a2);
}

uint64_t sub_20A155290(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.encode(to:)(a1);
}

uint64_t sub_20A1552A4(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[72];

  sub_20A1A930C();
  sub_20A157A74();
  sub_20A1341B4(v4, *(_QWORD *)(v1 + *(int *)(a1 + 20)));
  sub_20A1341B4(v4, *(_QWORD *)(v1 + *(int *)(a1 + 24)));
  return sub_20A1A933C();
}

uint64_t sub_20A155304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_20A157A74();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  v5 = *(_QWORD *)(v4 + 16);
  sub_20A1A9318();
  if (v5)
  {
    v6 = v4 + 56;
    do
    {
      if (*(_QWORD *)(v6 - 16))
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_20A1A8DE4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain();
      }
      v6 += 32;
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
  }
  v7 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  v8 = *(_QWORD *)(v7 + 16);
  result = sub_20A1A9318();
  if (v8)
  {
    v10 = v7 + 56;
    do
    {
      if (*(_QWORD *)(v10 - 16))
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_20A1A8DE4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_20A1A9324();
        swift_bridgeObjectRetain();
      }
      v10 += 32;
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_20A1554AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_20A1A930C();
  sub_20A157A74();
  sub_20A1341B4(v5, *(_QWORD *)(v2 + *(int *)(a2 + 20)));
  sub_20A1341B4(v5, *(_QWORD *)(v2 + *(int *)(a2 + 24)));
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.init(name:jurisdiction:isoCountryCode:)(CoreIDV::MobileDocumentReaderResponse::MobileIdentityDocumentElements::IssuingAuthority_optional *__return_ptr retstr, Swift::String_optional name, Swift::String_optional jurisdiction, Swift::String_optional isoCountryCode)
{
  uint64_t object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;

  object = 1;
  if (isoCountryCode.value._object)
    countAndFlagsBits = name.value._countAndFlagsBits;
  else
    countAndFlagsBits = 0;
  if (isoCountryCode.value._object)
  {
    object = (uint64_t)name.value._object;
    v6 = jurisdiction.value._countAndFlagsBits;
  }
  else
  {
    v6 = 0;
  }
  if (isoCountryCode.value._object)
    v7 = jurisdiction.value._object;
  else
    v7 = 0;
  if (isoCountryCode.value._object)
    v8 = isoCountryCode.value._countAndFlagsBits;
  else
    v8 = 0;
  if (isoCountryCode.value._object)
    v9 = isoCountryCode.value._object;
  else
    v9 = 0;
  if (jurisdiction.value._object)
  {
    countAndFlagsBits = name.value._countAndFlagsBits;
    object = (uint64_t)name.value._object;
    v6 = jurisdiction.value._countAndFlagsBits;
    v7 = jurisdiction.value._object;
    v8 = isoCountryCode.value._countAndFlagsBits;
    v9 = isoCountryCode.value._object;
  }
  if (name.value._object)
  {
    countAndFlagsBits = name.value._countAndFlagsBits;
    object = (uint64_t)name.value._object;
    v6 = jurisdiction.value._countAndFlagsBits;
    v7 = jurisdiction.value._object;
    v8 = isoCountryCode.value._countAndFlagsBits;
  }
  retstr->value.name.value._countAndFlagsBits = countAndFlagsBits;
  retstr->value.name.value._object = (void *)object;
  retstr->value.jurisdiction.value._countAndFlagsBits = v6;
  retstr->value.jurisdiction.value._object = v7;
  if (name.value._object)
    v10 = isoCountryCode.value._object;
  else
    v10 = v9;
  retstr->value.isoCountryCode.value._countAndFlagsBits = v8;
  retstr->value.isoCountryCode.value._object = v10;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[5];
  if (v0[1])
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_20A1A9324();
    if (v2)
      goto LABEL_4;
    return sub_20A1A9324();
  }
  sub_20A1A9324();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_4:
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    return swift_bridgeObjectRelease();
  }
  return sub_20A1A9324();
}

uint64_t sub_20A1556B0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636964736972756ALL;
  if (*v0 != 1)
    v1 = 0x746E756F436F7369;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_20A155718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A1649E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A15573C()
{
  sub_20A15B46C();
  return sub_20A1A9360();
}

uint64_t sub_20A155764()
{
  sub_20A15B46C();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.encode(to:)(_QWORD *a1)
{
  return sub_20A1557C0(a1, &qword_2545D9610, (void (*)(void))sub_20A15B46C, (uint64_t)&type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.CodingKeys, (void (*)(uint64_t, uint64_t, char *, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t sub_20A1557C0(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, char *, uint64_t);
  char v21;
  char v22;
  char v23;

  v20 = a5;
  v18 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v5;
  v12 = v5[1];
  v16[3] = v5[2];
  v17 = v11;
  v13 = v5[3];
  v16[1] = v5[4];
  v16[2] = v13;
  v16[0] = v5[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18();
  sub_20A1A9354();
  v23 = 0;
  v14 = v19;
  v20(v17, v12, &v23, v7);
  if (!v14)
  {
    v22 = 1;
    sub_20A1A91E0();
    v21 = 2;
    sub_20A1A91E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9620);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B46C();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_20A1A9168();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_20A1A9168();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_20A1A9168();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A155BAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.init(from:)(a1, a2);
}

uint64_t sub_20A155BC0(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.encode(to:)(a1);
}

uint64_t sub_20A155BD4()
{
  sub_20A1A930C();
  MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A155C28()
{
  sub_20A1A930C();
  MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.nameComponents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_20A1A8B5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.sex.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.portraitData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0) + 24);
  v2 = *(_QWORD *)v1;
  sub_20A127ED0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.age.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0)
                            + 28));
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.ageAtLeastElements.getter()
{
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  return sub_20A1353A0(v1 + *(int *)(v3 + 36), a1, &qword_2545D81A8);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.address.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1
                 + *(int *)(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0)
                          + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_20A15B4B0(v4, v5);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.nationality.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0)
                          + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.issuingAuthority.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1
                 + *(int *)(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0)
                          + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_20A15B510(v4, v5);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.drivingPrivileges.getter()
{
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.aamvaDrivingPrivileges.getter()
{
  type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.documentDHSComplianceStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.documentNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0)
                          + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.documentIssueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  return sub_20A1353A0(v1 + *(int *)(v3 + 68), a1, &qword_2545D81A8);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.documentExpirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  return sub_20A1353A0(v1 + *(int *)(v3 + 72), a1, &qword_2545D81A8);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.init(nameComponents:sex:portraitData:age:ageAtLeastElements:dateOfBirth:address:nationality:issuingAuthority:drivingPrivileges:aamvaDrivingPrivileges:documentDHSComplianceStatus:documentNumber:documentIssueDate:documentExpirationDate:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 *a10, uint64_t a11, uint64_t a12, __int128 *a13, uint64_t a14, uint64_t a15, char *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  char v47;

  v27 = *a2;
  v41 = a10[1];
  v42 = *a10;
  v39 = a10[3];
  v40 = a10[2];
  v28 = *((_QWORD *)a10 + 8);
  v29 = *((_QWORD *)a10 + 9);
  v45 = a13[1];
  v46 = *a13;
  v43 = *((_QWORD *)a13 + 5);
  v44 = *((_QWORD *)a13 + 4);
  v47 = *a16;
  v30 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(a9, a1, v30);
  v31 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  *(_BYTE *)(a9 + v31[5]) = v27;
  v32 = (_QWORD *)(a9 + v31[6]);
  *v32 = a3;
  v32[1] = a4;
  v33 = a9 + v31[7];
  *(_QWORD *)v33 = a5;
  *(_BYTE *)(v33 + 8) = a6 & 1;
  *(_QWORD *)(a9 + v31[8]) = a7;
  sub_20A136700(a8, a9 + v31[9], &qword_2545D81A8);
  v34 = a9 + v31[10];
  *(_OWORD *)v34 = v42;
  *(_OWORD *)(v34 + 16) = v41;
  *(_OWORD *)(v34 + 32) = v40;
  *(_OWORD *)(v34 + 48) = v39;
  *(_QWORD *)(v34 + 64) = v28;
  *(_QWORD *)(v34 + 72) = v29;
  v35 = (_QWORD *)(a9 + v31[11]);
  *v35 = a11;
  v35[1] = a12;
  v36 = a9 + v31[12];
  *(_OWORD *)v36 = v46;
  *(_OWORD *)(v36 + 16) = v45;
  *(_QWORD *)(v36 + 32) = v44;
  *(_QWORD *)(v36 + 40) = v43;
  *(_QWORD *)(a9 + v31[13]) = a14;
  *(_QWORD *)(a9 + v31[14]) = a15;
  *(_BYTE *)(a9 + v31[15]) = v47;
  v37 = (_QWORD *)(a9 + v31[16]);
  *v37 = a17;
  v37[1] = a18;
  sub_20A136700(a19, a9 + v31[17], &qword_2545D81A8);
  return sub_20A136700(a20, a9 + v31[18], &qword_2545D81A8);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v2 = v1;
  v4 = sub_20A1A8AD8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v34 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v34 - v14;
  sub_20A1A8B5C();
  sub_20A1205FC(&qword_2545D9628, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC28]);
  sub_20A1A8D60();
  v16 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  if (*(_BYTE *)(v1 + v16[5]) == 5)
  {
    sub_20A1A9324();
  }
  else
  {
    sub_20A1A9324();
    sub_20A1A9318();
  }
  v17 = (uint64_t *)(v1 + v16[6]);
  v18 = v17[1];
  v35 = v13;
  if (v18 >> 60 == 15)
  {
    sub_20A1A9324();
  }
  else
  {
    v19 = *v17;
    sub_20A1A9324();
    sub_20A120BD8(v19, v18);
    sub_20A1A8C34();
    sub_20A127EE4(v19, v18);
  }
  if (*(_BYTE *)(v1 + v16[7] + 8) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    sub_20A1A9324();
    sub_20A1A9318();
  }
  v20 = *(_QWORD *)(v1 + v16[8]);
  swift_bridgeObjectRetain();
  sub_20A157D94(a1, v20);
  swift_bridgeObjectRelease();
  sub_20A1353A0(v2 + v16[9], (uint64_t)v15, &qword_2545D81A8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v21(v15, 1, v4) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v22 = (uint64_t *)(v2 + v16[10]);
  v23 = v22[1];
  if (v23 == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    v36 = *v22;
    v37 = v23;
    v24 = *((_OWORD *)v22 + 2);
    v38 = *((_OWORD *)v22 + 1);
    v39 = v24;
    v25 = *((_OWORD *)v22 + 4);
    v40 = *((_OWORD *)v22 + 3);
    v41 = v25;
    sub_20A1A9324();
    MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.hash(into:)();
  }
  if (*(_QWORD *)(v2 + v16[11] + 8))
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A1A9324();
  }
  v26 = (uint64_t *)(v2 + v16[12]);
  v27 = v26[1];
  if (v27 == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    v36 = *v26;
    v37 = v27;
    v28 = *((_OWORD *)v26 + 2);
    v38 = *((_OWORD *)v26 + 1);
    v39 = v28;
    sub_20A1A9324();
    MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.hash(into:)();
  }
  v29 = *(_QWORD *)(v2 + v16[13]);
  swift_bridgeObjectRetain();
  sub_20A13428C(a1, v29);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v2 + v16[14]);
  swift_bridgeObjectRetain();
  sub_20A133C4C(a1, v30);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v2 + v16[15]) == 2)
  {
    sub_20A1A9324();
  }
  else
  {
    sub_20A1A9324();
    sub_20A1A9318();
  }
  if (*(_QWORD *)(v2 + v16[16] + 8))
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A1A9324();
  }
  v31 = (uint64_t)v35;
  sub_20A1353A0(v2 + v16[17], (uint64_t)v35, &qword_2545D81A8);
  if (v21((char *)v31, 1, v4) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v31, v4);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v32 = v34;
  sub_20A1353A0(v2 + v16[18], v34, &qword_2545D81A8);
  if (v21((char *)v32, 1, v4) == 1)
    return sub_20A1A9324();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v32, v4);
  sub_20A1A9324();
  sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A156794(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A1567D4 + 4 * byte_20A1B04C5[a1]))(0x706D6F43656D616ELL, 0xEE0073746E656E6FLL);
}

uint64_t sub_20A1567D4()
{
  return 7890291;
}

uint64_t sub_20A1567E4()
{
  return 0x7469617274726F70;
}

uint64_t sub_20A156804()
{
  return 6645601;
}

unint64_t sub_20A156814()
{
  return 0xD000000000000012;
}

uint64_t sub_20A15693C()
{
  unsigned __int8 *v0;

  return sub_20A156794(*v0);
}

uint64_t sub_20A156944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A164B68(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A156968(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_20A156974()
{
  sub_20A15B550();
  return sub_20A1A9360();
}

uint64_t sub_20A15699C()
{
  sub_20A15B550();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  __int128 v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9630);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A15B550();
  sub_20A1A9354();
  LOBYTE(v16) = 0;
  sub_20A1A8B5C();
  sub_20A1205FC(&qword_2545D9640, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC20]);
  sub_20A1A9228();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
    LOBYTE(v16) = *(_BYTE *)(v3 + v9[5]);
    v21 = 1;
    sub_20A15B594();
    sub_20A1A91F8();
    v16 = *(_OWORD *)(v3 + v9[6]);
    v21 = 2;
    sub_20A1275D8();
    sub_20A1A91F8();
    LOBYTE(v16) = 3;
    sub_20A1A91EC();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v9[8]);
    v21 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9650);
    sub_20A15B80C(&qword_2545D9658, MEMORY[0x24BEE1770], MEMORY[0x24BEE1330], MEMORY[0x24BEE04C0]);
    sub_20A1A9228();
    LOBYTE(v16) = 5;
    sub_20A1A8AD8();
    sub_20A1205FC(&qword_2545D9510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE00]);
    sub_20A1A91F8();
    v10 = (__int128 *)(v3 + v9[10]);
    v11 = v10[1];
    v16 = *v10;
    v17 = v11;
    v12 = v10[3];
    v18 = v10[2];
    v19 = v12;
    v20 = v10[4];
    v21 = 6;
    sub_20A15B5D8();
    sub_20A1A91F8();
    LOBYTE(v16) = 7;
    sub_20A1A91E0();
    v13 = (__int128 *)(v3 + v9[12]);
    v14 = v13[1];
    v16 = *v13;
    v17 = v14;
    v18 = v13[2];
    v21 = 8;
    sub_20A15B61C();
    sub_20A1A91F8();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v9[13]);
    v21 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9670);
    sub_20A15B8F8(&qword_2545D9678, &qword_2545D9680, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v9[14]);
    v21 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9688);
    sub_20A15B660(&qword_2545D9690, &qword_2545D9698, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
    LOBYTE(v16) = *(_BYTE *)(v3 + v9[15]);
    v21 = 11;
    sub_20A15B6E4();
    sub_20A1A91F8();
    LOBYTE(v16) = 12;
    sub_20A1A91E0();
    LOBYTE(v16) = 13;
    sub_20A1A91F8();
    LOBYTE(v16) = 14;
    sub_20A1A91F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.hashValue.getter()
{
  return sub_20A156F24((void (*)(_BYTE *))MobileDocumentReaderResponse.MobileIdentityDocumentElements.hash(into:));
}

uint64_t sub_20A156F24(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_20A1A930C();
  a1(v3);
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int *v26;
  uint64_t result;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  int *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  char v73;

  v59 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v61 = (uint64_t)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v57 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v57 - v10;
  v12 = sub_20A1A8B5C();
  v60 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v65 = (uint64_t)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D96A8);
  v14 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  MEMORY[0x24BDAC7A8](v67);
  v66 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_20A15B550();
  v62 = v16;
  sub_20A1A9348();
  if (v2)
  {
    v65 = v2;
    LODWORD(v61) = 0;
    v19 = 0;
    v20 = (uint64_t)v64;
    v21 = v12;
  }
  else
  {
    v22 = (uint64_t)v11;
    v58 = v9;
    v23 = v14;
    LOBYTE(v68) = 0;
    sub_20A1205FC(&qword_2545D96B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC38]);
    v24 = v65;
    sub_20A1A91B0();
    v21 = v12;
    v34 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v66, v24, v12);
    v73 = 1;
    sub_20A15B7C8();
    sub_20A1A9180();
    v35 = v67;
    v34[v67[5]] = v68;
    v73 = 2;
    sub_20A127940();
    sub_20A1A9180();
    *(_OWORD *)&v34[v35[6]] = v68;
    LOBYTE(v68) = 3;
    v36 = sub_20A1A9174();
    v37 = &v34[v35[7]];
    *(_QWORD *)v37 = v36;
    v37[8] = v38 & 1;
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9650);
    v73 = 4;
    sub_20A15B80C(&qword_2545D96C0, MEMORY[0x24BEE1798], MEMORY[0x24BEE1348], MEMORY[0x24BEE04E0]);
    sub_20A1A91B0();
    *(_QWORD *)&v34[v35[8]] = v68;
    v57[1] = sub_20A1A8AD8();
    LOBYTE(v68) = 5;
    v39 = sub_20A1205FC(&qword_2545D9538, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
    v65 = v22;
    v57[0] = v39;
    sub_20A1A9180();
    sub_20A136700(v65, (uint64_t)&v34[v35[9]], &qword_2545D81A8);
    v73 = 6;
    sub_20A15B870();
    sub_20A1A9180();
    v40 = &v34[v35[10]];
    v41 = v69;
    *(_OWORD *)v40 = v68;
    *((_OWORD *)v40 + 1) = v41;
    v42 = v71;
    *((_OWORD *)v40 + 2) = v70;
    *((_OWORD *)v40 + 3) = v42;
    *((_OWORD *)v40 + 4) = v72;
    LOBYTE(v68) = 7;
    v43 = sub_20A1A9168();
    v44 = (uint64_t *)&v34[v35[11]];
    *v44 = v43;
    v44[1] = v45;
    v73 = 8;
    sub_20A15B8B4();
    sub_20A1A9180();
    v46 = &v34[v35[12]];
    v47 = v69;
    *(_OWORD *)v46 = v68;
    *((_OWORD *)v46 + 1) = v47;
    *((_OWORD *)v46 + 2) = v70;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9670);
    v73 = 9;
    sub_20A15B8F8(&qword_2545D96D8, &qword_2545D96E0, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege, MEMORY[0x24BEE12D0]);
    sub_20A1A91B0();
    v65 = 0;
    *(_QWORD *)&v66[v67[13]] = v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9688);
    v73 = 10;
    sub_20A15B660(&qword_2545D96E8, &qword_2545D96F0, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege, MEMORY[0x24BEE12D0]);
    v48 = v65;
    sub_20A1A91B0();
    v65 = v48;
    if (!v48)
    {
      *(_QWORD *)&v66[v67[14]] = v68;
      v73 = 11;
      sub_20A15B97C();
      v49 = v65;
      sub_20A1A9180();
      v65 = v49;
      if (v49 || (v66[v67[15]] = v68, LOBYTE(v68) = 12, v50 = v65, v51 = sub_20A1A9168(), (v65 = v50) != 0))
      {
        (*(void (**)(char *, uint64_t))(v23 + 8))(v62, v63);
        LODWORD(v62) = 0;
        LODWORD(v63) = 0;
      }
      else
      {
        v53 = (uint64_t *)&v66[v67[16]];
        *v53 = v51;
        v53[1] = v52;
        LOBYTE(v68) = 13;
        v54 = v65;
        sub_20A1A9180();
        v65 = v54;
        if (v54)
        {
          (*(void (**)(char *, uint64_t))(v23 + 8))(v62, v63);
          LODWORD(v63) = 0;
          LODWORD(v62) = 1;
        }
        else
        {
          sub_20A136700((uint64_t)v58, (uint64_t)&v66[v67[17]], &qword_2545D81A8);
          LOBYTE(v68) = 14;
          v55 = v65;
          sub_20A1A9180();
          v65 = v55;
          if (!v55)
          {
            (*(void (**)(char *, uint64_t))(v23 + 8))(v62, v63);
            v56 = (uint64_t)v66;
            sub_20A136700(v61, (uint64_t)&v66[v67[18]], &qword_2545D81A8);
            sub_20A127E8C(v56, v59, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
            return sub_20A124284(v56, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v62, v63);
          LODWORD(v62) = 1;
          LODWORD(v63) = 1;
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
      v25 = v66;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v21);
      v33 = 1;
      LODWORD(v61) = 1;
      v32 = 1;
      v31 = 1;
      v30 = 1;
      v29 = 1;
      LOBYTE(v28) = 1;
      v26 = v67;
LABEL_7:
      result = sub_20A127EE4(*(_QWORD *)&v25[v26[6]], *(_QWORD *)&v25[v26[6] + 8]);
      if ((v28 & 1) != 0)
        goto LABEL_8;
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v62, v63);
    v19 = 1013;
    LODWORD(v61) = 1;
    v20 = (uint64_t)v64;
  }
  v25 = v66;
  v26 = v67;
  result = __swift_destroy_boxed_opaque_existential_1(v20);
  v28 = (v19 >> 4) & 1;
  v29 = (v19 >> 5) & 1;
  v30 = (v19 >> 6) & 1;
  v31 = (v19 >> 7) & 1;
  v32 = (v19 >> 8) & 1;
  if ((v19 & 1) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v25, v21);
    if ((v19 & 4) != 0)
      goto LABEL_6;
  }
  else if ((v19 & 4) != 0)
  {
LABEL_6:
    LODWORD(v63) = 0;
    LODWORD(v62) = 0;
    v33 = 0;
    goto LABEL_7;
  }
  v33 = 0;
  LODWORD(v62) = 0;
  LODWORD(v63) = 0;
  if ((v19 & 0x10) != 0)
  {
LABEL_8:
    result = swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  if (!v29)
  {
LABEL_9:
    if (v30)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  result = sub_20A127E0C((uint64_t)&v25[v26[9]], &qword_2545D81A8);
  if ((v30 & 1) != 0)
  {
LABEL_10:
    result = sub_20A15B768(*(_QWORD *)&v25[v26[10]], *(_QWORD *)&v25[v26[10] + 8]);
    if ((v31 & 1) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  if (!v31)
  {
LABEL_11:
    if (v32)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  result = swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
  {
LABEL_12:
    result = sub_20A15B728(*(_QWORD *)&v25[v26[12]], *(_QWORD *)&v25[v26[12] + 8]);
    if ((v61 & 1) == 0)
      goto LABEL_13;
    goto LABEL_24;
  }
LABEL_23:
  if (!(_DWORD)v61)
  {
LABEL_13:
    if (v33)
      goto LABEL_14;
    goto LABEL_25;
  }
LABEL_24:
  result = swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if ((v62 & 1) == 0)
      goto LABEL_15;
LABEL_26:
    result = swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
      return result;
    return sub_20A127E0C((uint64_t)&v25[v26[17]], &qword_2545D81A8);
  }
LABEL_25:
  if ((_DWORD)v62)
    goto LABEL_26;
LABEL_15:
  if (!(_DWORD)v63)
    return result;
  return sub_20A127E0C((uint64_t)&v25[v26[17]], &qword_2545D81A8);
}

uint64_t sub_20A1579B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.init(from:)(a1, a2);
}

uint64_t sub_20A1579C4(_QWORD *a1)
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.encode(to:)(a1);
}

uint64_t sub_20A1579D8(uint64_t a1, uint64_t a2)
{
  return sub_20A1579E4(a1, a2, (void (*)(_BYTE *))MobileDocumentReaderResponse.MobileIdentityDocumentElements.hash(into:));
}

uint64_t sub_20A1579E4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_20A1A930C();
  a3(v5);
  return sub_20A1A933C();
}

uint64_t sub_20A157A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A157A34(a1, a2, a3, (void (*)(_BYTE *))MobileDocumentReaderResponse.MobileIdentityDocumentElements.hash(into:));
}

uint64_t sub_20A157A34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_20A1A930C();
  a4(v6);
  return sub_20A1A933C();
}

uint64_t sub_20A157A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;

  v1 = sub_20A1A8AD8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v22 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v21 = (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1353A0(v0, (uint64_t)v15, &qword_2545D8318);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
    return sub_20A1A9324();
  sub_20A12063C((uint64_t)v15, (uint64_t)v12, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_20A1A9324();
  sub_20A1A8DE4();
  sub_20A1A8DE4();
  sub_20A1353A0((uint64_t)&v12[*(int *)(v9 + 24)], (uint64_t)v8, &qword_2545D81A8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v17(v8, 1, v1) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v22, v8, v1);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v18, v1);
  }
  v19 = v21;
  sub_20A1353A0((uint64_t)&v12[*(int *)(v9 + 28)], v21, &qword_2545D81A8);
  if (v17((char *)v19, 1, v1) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    v20 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v22, v19, v1);
    sub_20A1A9324();
    sub_20A1205FC((unint64_t *)&unk_2545D88A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v20, v1);
  }
  return sub_20A124284((uint64_t)v12, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
}

uint64_t sub_20A157D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = 0;
  v3 = 0;
  v4 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v8)
      return sub_20A1A9318();
    v11 = *(_QWORD *)(v4 + 8 * v10);
    ++v3;
    if (!v11)
    {
      v3 = v10 + 1;
      if (v10 + 1 >= v8)
        return sub_20A1A9318();
      v11 = *(_QWORD *)(v4 + 8 * v3);
      if (!v11)
        break;
    }
LABEL_18:
    v7 = (v11 - 1) & v11;
LABEL_5:
    sub_20A1A9318();
    sub_20A1A9324();
    result = sub_20A1A933C();
    v2 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v8)
    return sub_20A1A9318();
  v11 = *(_QWORD *)(v4 + 8 * v12);
  if (v11)
  {
    v3 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v3 >= v8)
      return sub_20A1A9318();
    v11 = *(_QWORD *)(v4 + 8 * v3);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_20A157F08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int v15;
  int64_t v17;

  v3 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v17 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_20;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v17)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v17)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
        break;
    }
LABEL_19:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_20:
    v14 = *(_QWORD *)(a2 + 48) + 16 * v10;
    v15 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + 16 * v10 + 8);
    if (*(_BYTE *)(v14 + 8) == 1)
      __asm { BR              X9 }
    sub_20A1A9240();
    sub_20A1A8DF0();
    swift_bridgeObjectRelease();
    sub_20A1A8DF0();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
    if (!v15)
    {
      sub_20A1A9078();
      swift_bridgeObjectRelease();
      sub_20A1A9240();
      sub_20A1A8DF0();
      swift_bridgeObjectRelease();
      sub_20A1A8DF0();
    }
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
    v7 ^= sub_20A1A933C();
  }
  v13 = v11 + 2;
  if (v13 < v17)
  {
    v12 = *(_QWORD *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v8 = v13 + 1;
        if (__OFADD__(v13, 1))
          break;
        if (v8 >= v17)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        ++v13;
        if (v12)
          goto LABEL_19;
      }
LABEL_26:
      __break(1u);
      JUMPOUT(0x20A158388);
    }
    v8 = v13;
    goto LABEL_19;
  }
LABEL_24:
  swift_release();
  return sub_20A1A9318();
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV16DrivingPrivilegeV4CodeV2eeoiySbAI_AItFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_20A1A9258(), result = 0, (v10 & 1) != 0))
  {
    if (v4)
    {
      if (!v6)
        return 0;
      if (v2 != v7 || v4 != v6)
      {
        v12 = sub_20A1A9258();
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
    }
    else if (v6)
    {
      return 0;
    }
    if (v5)
    {
      if (v8 && (v3 == v9 && v5 == v8 || (sub_20A1A9258() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV16IssuingAuthorityV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_20A1A9258(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11)
        return 0;
      if (v4 != v9 || v6 != v11)
      {
        v15 = sub_20A1A9258();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_20A1A9258() & 1) != 0))
        return 1;
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_20A1585CC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (!v6)
    {
LABEL_11:
      if (v4 == v7 && v5 == v8)
        return 1;
      else
        return sub_20A1A9258();
    }
    return 0;
  }
  if (!v6)
    return 0;
  if (*a1 == *a2 && v3 == v6)
    goto LABEL_11;
  v10 = sub_20A1A9258();
  result = 0;
  if ((v10 & 1) != 0)
    goto LABEL_11;
  return result;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV7AddressV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v10 = a1[7];
  v9 = a1[8];
  v11 = a1[9];
  v12 = a2[1];
  v13 = a2[2];
  v15 = a2[3];
  v14 = a2[4];
  v17 = a2[5];
  v16 = a2[6];
  v18 = a2[7];
  v19 = a2[8];
  v20 = a2[9];
  if (!v3)
  {
    if (v12)
      return 0;
    goto LABEL_8;
  }
  if (!v12)
    return 0;
  if (*a1 == *a2 && v3 == v12)
    goto LABEL_8;
  v49 = a1[7];
  v51 = a2[7];
  v47 = a2[8];
  v48 = a1[6];
  v45 = a1[9];
  v46 = a2[9];
  v21 = a1[8];
  v22 = a2[6];
  v23 = a1[4];
  v24 = a1[5];
  v25 = a2[5];
  v26 = a2[4];
  v27 = a2[2];
  v28 = sub_20A1A9258();
  v13 = v27;
  v14 = v26;
  v17 = v25;
  v7 = v24;
  v5 = v23;
  v16 = v22;
  v9 = v21;
  v11 = v45;
  v20 = v46;
  v19 = v47;
  v8 = v48;
  v10 = v49;
  v18 = v51;
  v29 = v28;
  result = 0;
  if ((v29 & 1) != 0)
  {
LABEL_8:
    if (v6)
    {
      if (!v15)
        return 0;
      if (v4 != v13 || v6 != v15)
      {
        v50 = v9;
        v52 = v17;
        v31 = v16;
        v32 = v5;
        v33 = v7;
        v34 = v14;
        v35 = sub_20A1A9258();
        v14 = v34;
        v9 = v50;
        v17 = v52;
        v7 = v33;
        v5 = v32;
        v16 = v31;
        v36 = v35;
        result = 0;
        if ((v36 & 1) == 0)
          return result;
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v7)
    {
      if (!v17)
        return 0;
      if (v5 != v14 || v7 != v17)
      {
        v37 = v18;
        v38 = v9;
        v39 = v16;
        v40 = sub_20A1A9258();
        v16 = v39;
        v9 = v38;
        v18 = v37;
        v41 = v40;
        result = 0;
        if ((v41 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v10)
    {
      if (!v18)
        return 0;
      if (v8 != v16 || v10 != v18)
      {
        v42 = v9;
        v43 = sub_20A1A9258();
        v9 = v42;
        v44 = v43;
        result = 0;
        if ((v44 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v11)
    {
      if (v20 && (v9 == v19 && v11 == v20 || (sub_20A1A9258() & 1) != 0))
        return 1;
    }
    else if (!v20)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV21AAMVADrivingPrivilegeV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8320);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v28 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v28 - v17;
  v30 = a1;
  sub_20A1353A0(a1, (uint64_t)&v28 - v17, &qword_2545D8318);
  v31 = a2;
  sub_20A1353A0(a2, (uint64_t)v16, &qword_2545D8318);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_20A1353A0((uint64_t)v18, (uint64_t)v9, &qword_2545D8318);
  sub_20A1353A0((uint64_t)v16, v19, &qword_2545D8318);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_20A127E0C((uint64_t)v16, &qword_2545D8318);
    sub_20A127E0C((uint64_t)v18, &qword_2545D8318);
    if (v20(v19, 1, v4) == 1)
    {
      sub_20A127E0C((uint64_t)v9, &qword_2545D8318);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_20A1353A0((uint64_t)v9, (uint64_t)v13, &qword_2545D8318);
  if (v20(v19, 1, v4) == 1)
  {
    sub_20A127E0C((uint64_t)v16, &qword_2545D8318);
    sub_20A127E0C((uint64_t)v18, &qword_2545D8318);
    sub_20A124284((uint64_t)v13, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
LABEL_6:
    sub_20A127E0C((uint64_t)v9, &qword_2545D8320);
LABEL_10:
    v26 = 0;
    return v26 & 1;
  }
  v21 = v29;
  sub_20A12063C(v19, (uint64_t)v29, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  v22 = _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAI_AItFZ_0(v13, v21);
  sub_20A124284((uint64_t)v21, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_20A127E0C((uint64_t)v16, &qword_2545D8318);
  sub_20A127E0C((uint64_t)v18, &qword_2545D8318);
  sub_20A124284((uint64_t)v13, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_20A127E0C((uint64_t)v9, &qword_2545D8318);
  if (!v22)
    goto LABEL_10;
LABEL_8:
  v23 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(0);
  v25 = v30;
  v24 = v31;
  if ((sub_20A126938(*(_QWORD *)(v30 + *(int *)(v23 + 20)), *(_QWORD *)(v31 + *(int *)(v23 + 20))) & 1) == 0)
    goto LABEL_10;
  v26 = sub_20A126938(*(_QWORD *)(v25 + *(int *)(v23 + 24)), *(_QWORD *)(v24 + *(int *)(v23 + 24)));
  return v26 & 1;
}

BOOL _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAI_AItFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  char v28;
  _BOOL8 result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  void (*v36)(_BYTE *, uint64_t);
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  char v46;
  void (*v47)(_BYTE *, uint64_t);
  _BYTE v48[12];
  int v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v4 = sub_20A1A8AD8();
  v57 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9958);
  v7 = MEMORY[0x24BDAC7A8](v56);
  v9 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v48[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v54 = &v48[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v55 = &v48[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = &v48[-v21];
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = &v48[-v24];
  MEMORY[0x24BDAC7A8](v23);
  v27 = &v48[-v26];
  if (*a1 == *a2 && a1[1] == a2[1] || (v28 = sub_20A1A9258(), result = 0, (v28 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v30 = sub_20A1A9258(), result = 0, (v30 & 1) != 0))
    {
      v51 = v15;
      v52 = v6;
      v53 = v9;
      v31 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
      sub_20A1353A0((uint64_t)a1 + *(int *)(v31 + 24), (uint64_t)v27, &qword_2545D81A8);
      sub_20A1353A0((uint64_t)a2 + *(int *)(v31 + 24), (uint64_t)v25, &qword_2545D81A8);
      v32 = (uint64_t)&v11[*(int *)(v56 + 48)];
      sub_20A1353A0((uint64_t)v27, (uint64_t)v11, &qword_2545D81A8);
      sub_20A1353A0((uint64_t)v25, v32, &qword_2545D81A8);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
      if (v33((uint64_t)v11, 1, v4) == 1)
      {
        sub_20A127E0C((uint64_t)v25, &qword_2545D81A8);
        sub_20A127E0C((uint64_t)v27, &qword_2545D81A8);
        if (v33(v32, 1, v4) == 1)
        {
          v50 = v33;
          sub_20A127E0C((uint64_t)v11, &qword_2545D81A8);
LABEL_14:
          v37 = (uint64_t)a1 + *(int *)(v31 + 28);
          v38 = v55;
          sub_20A1353A0(v37, (uint64_t)v55, &qword_2545D81A8);
          v39 = v54;
          sub_20A1353A0((uint64_t)a2 + *(int *)(v31 + 28), (uint64_t)v54, &qword_2545D81A8);
          v40 = (uint64_t)v53;
          v41 = (uint64_t)&v53[*(int *)(v56 + 48)];
          sub_20A1353A0((uint64_t)v38, (uint64_t)v53, &qword_2545D81A8);
          sub_20A1353A0((uint64_t)v39, v41, &qword_2545D81A8);
          v42 = v50;
          if (v50(v40, 1, v4) == 1)
          {
            sub_20A127E0C((uint64_t)v39, &qword_2545D81A8);
            sub_20A127E0C((uint64_t)v38, &qword_2545D81A8);
            if (v42(v41, 1, v4) == 1)
            {
              sub_20A127E0C(v40, &qword_2545D81A8);
              return 1;
            }
          }
          else
          {
            v43 = (uint64_t)v51;
            sub_20A1353A0(v40, (uint64_t)v51, &qword_2545D81A8);
            if (v42(v41, 1, v4) != 1)
            {
              v44 = v57;
              v45 = v52;
              (*(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 32))(v52, v41, v4);
              sub_20A1205FC(&qword_2545D9960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
              v46 = sub_20A1A8D78();
              v47 = *(void (**)(_BYTE *, uint64_t))(v44 + 8);
              v47(v45, v4);
              sub_20A127E0C((uint64_t)v39, &qword_2545D81A8);
              sub_20A127E0C((uint64_t)v38, &qword_2545D81A8);
              v47((_BYTE *)v43, v4);
              sub_20A127E0C(v40, &qword_2545D81A8);
              return (v46 & 1) != 0;
            }
            sub_20A127E0C((uint64_t)v39, &qword_2545D81A8);
            sub_20A127E0C((uint64_t)v38, &qword_2545D81A8);
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v43, v4);
          }
          v34 = v40;
          goto LABEL_20;
        }
      }
      else
      {
        sub_20A1353A0((uint64_t)v11, (uint64_t)v22, &qword_2545D81A8);
        if (v33(v32, 1, v4) != 1)
        {
          v50 = v33;
          v35 = v52;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 32))(v52, v32, v4);
          sub_20A1205FC(&qword_2545D9960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
          v49 = sub_20A1A8D78();
          v36 = *(void (**)(_BYTE *, uint64_t))(v57 + 8);
          v36(v35, v4);
          sub_20A127E0C((uint64_t)v25, &qword_2545D81A8);
          sub_20A127E0C((uint64_t)v27, &qword_2545D81A8);
          v36(v22, v4);
          sub_20A127E0C((uint64_t)v11, &qword_2545D81A8);
          if ((v49 & 1) == 0)
            return 0;
          goto LABEL_14;
        }
        sub_20A127E0C((uint64_t)v25, &qword_2545D81A8);
        sub_20A127E0C((uint64_t)v27, &qword_2545D81A8);
        (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v22, v4);
      }
      v34 = (uint64_t)v11;
LABEL_20:
      sub_20A127E0C(v34, &qword_2545D9958);
      return 0;
    }
  }
  return result;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV16DrivingPrivilegeV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  void (*v41)(_BYTE *, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  _QWORD *v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void (*v54)(_BYTE *, uint64_t);
  _BYTE v55[4];
  int v56;
  _BYTE *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _QWORD *v65;

  v4 = sub_20A1A8AD8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v61 = &v55[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9958);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v63 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v55[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v62 = &v55[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v64 = &v55[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = &v55[-v21];
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = &v55[-v24];
  MEMORY[0x24BDAC7A8](v23);
  v27 = &v55[-v26];
  v28 = *a1;
  v29 = a1[1];
  v65 = a1;
  if (v28 == *a2 && v29 == a2[1] || (v30 = sub_20A1A9258(), v31 = 0, (v30 & 1) != 0))
  {
    v57 = v15;
    v32 = v7;
    v33 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(0);
    sub_20A1353A0((uint64_t)v65 + *(int *)(v33 + 20), (uint64_t)v27, &qword_2545D81A8);
    v58 = a2;
    v59 = v33;
    v34 = *(int *)(v33 + 20);
    v35 = v32;
    sub_20A1353A0((uint64_t)a2 + v34, (uint64_t)v25, &qword_2545D81A8);
    v36 = (uint64_t)&v11[*(int *)(v32 + 48)];
    sub_20A1353A0((uint64_t)v27, (uint64_t)v11, &qword_2545D81A8);
    sub_20A1353A0((uint64_t)v25, v36, &qword_2545D81A8);
    v60 = v5;
    v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v37((uint64_t)v11, 1, v4) == 1)
    {
      sub_20A127E0C((uint64_t)v25, &qword_2545D81A8);
      sub_20A127E0C((uint64_t)v27, &qword_2545D81A8);
      if (v37(v36, 1, v4) == 1)
      {
        sub_20A127E0C((uint64_t)v11, &qword_2545D81A8);
LABEL_11:
        v42 = v59;
        v43 = v64;
        sub_20A1353A0((uint64_t)v65 + *(int *)(v59 + 24), (uint64_t)v64, &qword_2545D81A8);
        v44 = v58;
        v45 = v62;
        sub_20A1353A0((uint64_t)v58 + *(int *)(v42 + 24), (uint64_t)v62, &qword_2545D81A8);
        v46 = v63;
        v47 = (uint64_t)&v63[*(int *)(v35 + 48)];
        sub_20A1353A0((uint64_t)v43, (uint64_t)v63, &qword_2545D81A8);
        sub_20A1353A0((uint64_t)v45, v47, &qword_2545D81A8);
        if (v37((uint64_t)v46, 1, v4) == 1)
        {
          sub_20A127E0C((uint64_t)v45, &qword_2545D81A8);
          sub_20A127E0C((uint64_t)v43, &qword_2545D81A8);
          if (v37(v47, 1, v4) == 1)
          {
            sub_20A127E0C((uint64_t)v46, &qword_2545D81A8);
LABEL_21:
            v31 = sub_20A126A18(*(_QWORD *)((char *)v65 + *(int *)(v59 + 28)), *(_QWORD *)((char *)v44 + *(int *)(v59 + 28)));
            return v31 & 1;
          }
        }
        else
        {
          v48 = (uint64_t)v57;
          sub_20A1353A0((uint64_t)v46, (uint64_t)v57, &qword_2545D81A8);
          if (v37(v47, 1, v4) != 1)
          {
            v51 = v60;
            v50 = v61;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v61, v47, v4);
            sub_20A1205FC(&qword_2545D9960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
            v52 = v48;
            v53 = sub_20A1A8D78();
            v54 = *(void (**)(_BYTE *, uint64_t))(v51 + 8);
            v54(v50, v4);
            sub_20A127E0C((uint64_t)v45, &qword_2545D81A8);
            sub_20A127E0C((uint64_t)v64, &qword_2545D81A8);
            v54((_BYTE *)v52, v4);
            sub_20A127E0C((uint64_t)v46, &qword_2545D81A8);
            if ((v53 & 1) != 0)
              goto LABEL_21;
            goto LABEL_18;
          }
          sub_20A127E0C((uint64_t)v45, &qword_2545D81A8);
          sub_20A127E0C((uint64_t)v43, &qword_2545D81A8);
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v48, v4);
        }
        v38 = (uint64_t)v46;
        goto LABEL_17;
      }
    }
    else
    {
      sub_20A1353A0((uint64_t)v11, (uint64_t)v22, &qword_2545D81A8);
      if (v37(v36, 1, v4) != 1)
      {
        v39 = v60;
        v40 = v61;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v61, v36, v4);
        sub_20A1205FC(&qword_2545D9960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
        v56 = sub_20A1A8D78();
        v41 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
        v41(v40, v4);
        sub_20A127E0C((uint64_t)v25, &qword_2545D81A8);
        sub_20A127E0C((uint64_t)v27, &qword_2545D81A8);
        v41(v22, v4);
        sub_20A127E0C((uint64_t)v11, &qword_2545D81A8);
        if ((v56 & 1) == 0)
        {
LABEL_18:
          v31 = 0;
          return v31 & 1;
        }
        goto LABEL_11;
      }
      sub_20A127E0C((uint64_t)v25, &qword_2545D81A8);
      sub_20A127E0C((uint64_t)v27, &qword_2545D81A8);
      (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v22, v4);
    }
    v38 = (uint64_t)v11;
LABEL_17:
    sub_20A127E0C(v38, &qword_2545D9958);
    goto LABEL_18;
  }
  return v31 & 1;
}

BOOL _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  int v38;
  int v39;
  _BOOL8 result;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  int *v47;
  char v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  char *v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  int v120;
  int v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int *v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  void (*v147)(char *, uint64_t);
  int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  unsigned int (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  int *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD v198[9];
  uint64_t v199;

  v4 = sub_20A1A8AD8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v159 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9958);
  v8 = MEMORY[0x24BDAC7A8](v177);
  v10 = (char *)&v159 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v175 = (uint64_t)&v159 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v176 = (uint64_t)&v159 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v159 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v170 = (uint64_t)&v159 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v171 = (uint64_t)&v159 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v172 = (uint64_t)&v159 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v173 = (uint64_t)&v159 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v174 = (uint64_t)&v159 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v159 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v159 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v159 - v34;
  if ((sub_20A1A8B50() & 1) == 0)
    return 0;
  v36 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v37 = v36[5];
  v38 = *(unsigned __int8 *)(a1 + v37);
  v39 = *(unsigned __int8 *)(a2 + v37);
  if (v38 == 5)
  {
    if (v39 != 5)
      return 0;
  }
  else
  {
    result = 0;
    if (v39 == 5 || v38 != v39)
      return result;
  }
  v165 = v17;
  v168 = v7;
  v169 = v5;
  v166 = v10;
  v167 = v4;
  v41 = v36[6];
  v43 = *(_QWORD *)(a1 + v41);
  v42 = *(_QWORD *)(a1 + v41 + 8);
  v44 = (uint64_t *)(a2 + v41);
  v45 = *v44;
  v46 = v44[1];
  if (v42 >> 60 == 15)
  {
    if (v46 >> 60 == 15)
      goto LABEL_15;
LABEL_11:
    sub_20A127ED0(v43, v42);
    sub_20A127ED0(v45, v46);
    sub_20A127EE4(v43, v42);
    sub_20A127EE4(v45, v46);
    return 0;
  }
  if (v46 >> 60 == 15)
    goto LABEL_11;
  v164 = a2;
  v47 = v36;
  sub_20A127ED0(v43, v42);
  sub_20A127ED0(v45, v46);
  sub_20A1692C0(v43, v42);
  v49 = v48;
  sub_20A127EE4(v45, v46);
  sub_20A127EE4(v43, v42);
  v36 = v47;
  a2 = v164;
  if ((v49 & 1) == 0)
    return 0;
LABEL_15:
  v50 = v36[7];
  v51 = (_QWORD *)(a1 + v50);
  v52 = *(_BYTE *)(a1 + v50 + 8);
  v53 = (_QWORD *)(a2 + v50);
  v54 = *(unsigned __int8 *)(a2 + v50 + 8);
  if ((v52 & 1) != 0)
  {
    v55 = v169;
    v56 = v168;
    if (!v54)
      return 0;
  }
  else
  {
    if (*v51 != *v53)
      LOBYTE(v54) = 1;
    v55 = v169;
    v56 = v168;
    if ((v54 & 1) != 0)
      return 0;
  }
  v57 = v36;
  if ((sub_20A17DD3C(*(_QWORD *)(a1 + v36[8]), *(_QWORD *)(a2 + v36[8])) & 1) == 0)
    return 0;
  v58 = v57[9];
  v163 = a1;
  sub_20A1353A0(a1 + v58, (uint64_t)v35, &qword_2545D81A8);
  v162 = v57;
  v59 = v57[9];
  v164 = a2;
  sub_20A1353A0(a2 + v59, (uint64_t)v33, &qword_2545D81A8);
  v60 = v176;
  v61 = v176 + *(int *)(v177 + 48);
  sub_20A1353A0((uint64_t)v35, v176, &qword_2545D81A8);
  sub_20A1353A0((uint64_t)v33, v61, &qword_2545D81A8);
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  v63 = v167;
  if (v62(v60, 1, v167) == 1)
  {
    sub_20A127E0C((uint64_t)v33, &qword_2545D81A8);
    sub_20A127E0C((uint64_t)v35, &qword_2545D81A8);
    if (v62(v61, 1, v167) == 1)
    {
      sub_20A127E0C(v60, &qword_2545D81A8);
      goto LABEL_29;
    }
LABEL_27:
    sub_20A127E0C(v60, &qword_2545D9958);
    return 0;
  }
  sub_20A1353A0(v60, (uint64_t)v30, &qword_2545D81A8);
  if (v62(v61, 1, v63) == 1)
  {
    sub_20A127E0C((uint64_t)v33, &qword_2545D81A8);
    sub_20A127E0C((uint64_t)v35, &qword_2545D81A8);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v63);
    goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v56, v61, v63);
  sub_20A1205FC(&qword_2545D9960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
  v64 = sub_20A1A8D78();
  v65 = *(void (**)(char *, uint64_t))(v55 + 8);
  v65(v56, v63);
  sub_20A127E0C((uint64_t)v33, &qword_2545D81A8);
  sub_20A127E0C((uint64_t)v35, &qword_2545D81A8);
  v65(v30, v63);
  sub_20A127E0C(v60, &qword_2545D81A8);
  if ((v64 & 1) == 0)
    return 0;
LABEL_29:
  v160 = v62;
  v66 = v162;
  v67 = v162[10];
  v68 = v163;
  v69 = *(_QWORD *)(v163 + v67);
  v70 = *(_QWORD *)(v163 + v67 + 8);
  v72 = *(_QWORD *)(v163 + v67 + 16);
  v71 = *(_QWORD *)(v163 + v67 + 24);
  v74 = *(_QWORD *)(v163 + v67 + 32);
  v73 = *(_QWORD *)(v163 + v67 + 40);
  v76 = *(_QWORD *)(v163 + v67 + 48);
  v75 = *(_QWORD *)(v163 + v67 + 56);
  v77 = *(_QWORD *)(v163 + v67 + 64);
  v78 = *(_QWORD *)(v163 + v67 + 72);
  v79 = v164;
  v80 = (uint64_t *)(v164 + v67);
  v81 = *v80;
  v82 = v80[1];
  v83 = v80[2];
  v84 = v80[3];
  v85 = v80[4];
  v86 = v80[5];
  v87 = v80[6];
  v88 = v80[7];
  v89 = v80[8];
  v90 = v80[9];
  if (v70 == 1)
  {
    if (v82 == 1)
      goto LABEL_36;
LABEL_34:
    v188 = v69;
    v189 = v70;
    v190 = v72;
    v191 = v71;
    v192 = v74;
    v193 = v73;
    v194 = v76;
    v195 = v75;
    v196 = v77;
    v197 = v78;
    v198[0] = v81;
    v198[1] = v82;
    v198[2] = v83;
    v198[3] = v84;
    v198[4] = v85;
    v198[5] = v86;
    v198[6] = v87;
    v198[7] = v88;
    v198[8] = v89;
    v199 = v90;
    sub_20A15B4B0(v81, v82);
    sub_20A165190(&v188);
    return 0;
  }
  v188 = v69;
  v189 = v70;
  v190 = v72;
  v191 = v71;
  v192 = v74;
  v193 = v73;
  v194 = v76;
  v195 = v75;
  v196 = v77;
  v197 = v78;
  v159 = v75;
  v176 = v73;
  v161 = v71;
  if (v82 == 1)
  {
    v169 = v81;
    v175 = v88;
    v174 = v87;
    v173 = v86;
    v172 = v85;
    v171 = v84;
    v170 = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v177 = v78;
    v91 = v159;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81 = v169;
    v83 = v170;
    v84 = v171;
    v85 = v172;
    v86 = v173;
    v87 = v174;
    v88 = v175;
    v75 = v91;
    v78 = v177;
    v73 = v176;
    v71 = v161;
    goto LABEL_34;
  }
  v178 = v81;
  v179 = v82;
  v180 = v83;
  v181 = v84;
  v182 = v85;
  v183 = v86;
  v184 = v87;
  v185 = v88;
  v186 = v89;
  v187 = v90;
  v92 = _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV7AddressV2eeoiySbAG_AGtFZ_0(&v188, &v178);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v66 = v162;
  v68 = v163;
  v79 = v164;
  if ((v92 & 1) == 0)
    return 0;
LABEL_36:
  v93 = v66[11];
  v94 = (_QWORD *)(v68 + v93);
  v95 = *(_QWORD *)(v68 + v93 + 8);
  v96 = (_QWORD *)(v79 + v93);
  v97 = v96[1];
  if (v95)
  {
    if (!v97)
      return 0;
    if (*v94 != *v96 || v95 != v97)
    {
      v98 = sub_20A1A9258();
      v66 = v162;
      v68 = v163;
      v79 = v164;
      v99 = v98;
      result = 0;
      if ((v99 & 1) == 0)
        return result;
    }
  }
  else if (v97)
  {
    return 0;
  }
  v100 = v66[12];
  v101 = *(_QWORD *)(v68 + v100);
  v102 = *(_QWORD *)(v68 + v100 + 8);
  v104 = *(_QWORD *)(v68 + v100 + 16);
  v103 = *(_QWORD *)(v68 + v100 + 24);
  v105 = *(_QWORD *)(v68 + v100 + 32);
  v106 = *(_QWORD *)(v68 + v100 + 40);
  v107 = (uint64_t *)(v79 + v100);
  v109 = *v107;
  v108 = v107[1];
  v111 = v107[2];
  v110 = v107[3];
  v112 = v107[4];
  v113 = v107[5];
  if (v102 != 1)
  {
    v188 = v101;
    v189 = v102;
    v190 = v104;
    v191 = v103;
    v192 = v105;
    v193 = v106;
    v159 = v106;
    v114 = v103;
    if (v108 != 1)
    {
      v178 = v109;
      v179 = v108;
      v180 = v111;
      v181 = v110;
      v182 = v112;
      v183 = v113;
      v115 = _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV16IssuingAuthorityV2eeoiySbAG_AGtFZ_0(&v188, &v178);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = v162;
      v68 = v163;
      v79 = v164;
      if ((v115 & 1) == 0)
        return 0;
      goto LABEL_50;
    }
    v161 = v101;
    swift_bridgeObjectRetain();
    v176 = v114;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_48:
    sub_20A15B510(v109, v108);
    sub_20A15B728(v161, v102);
    sub_20A15B728(v109, v108);
    return 0;
  }
  v161 = v101;
  v176 = v103;
  if (v108 != 1)
    goto LABEL_48;
LABEL_50:
  v116 = v79;
  v117 = v68;
  v118 = v66;
  if ((sub_20A126D20(*(_QWORD *)(v68 + v66[13]), *(_QWORD *)(v79 + v66[13])) & 1) == 0
    || (sub_20A126E5C(*(_QWORD *)(v117 + v118[14]), *(_QWORD *)(v116 + v118[14])) & 1) == 0)
  {
    return 0;
  }
  v119 = v118[15];
  v120 = *(unsigned __int8 *)(v117 + v119);
  v121 = *(unsigned __int8 *)(v116 + v119);
  if (v120 == 2)
  {
    if (v121 != 2)
      return 0;
  }
  else
  {
    result = 0;
    if (v121 == 2)
      return result;
    v116 = v164;
    v117 = v163;
    v118 = v162;
    if (((v121 ^ v120) & 1) != 0)
      return result;
  }
  v122 = v118[16];
  v123 = (_QWORD *)(v117 + v122);
  v124 = *(_QWORD *)(v117 + v122 + 8);
  v125 = (_QWORD *)(v116 + v122);
  v126 = v125[1];
  if (!v124)
  {
    v128 = v167;
    v129 = v164;
    v130 = v163;
    v131 = v162;
    if (v126)
      return 0;
LABEL_65:
    v134 = v174;
    v135 = v129;
    v136 = v131;
    sub_20A1353A0(v130 + v131[17], v174, &qword_2545D81A8);
    v137 = v135 + v136[17];
    v138 = v173;
    sub_20A1353A0(v137, v173, &qword_2545D81A8);
    v139 = v175;
    v140 = v175 + *(int *)(v177 + 48);
    sub_20A1353A0(v134, v175, &qword_2545D81A8);
    sub_20A1353A0(v138, v140, &qword_2545D81A8);
    if (v160(v139, 1, v128) == 1)
    {
      sub_20A127E0C(v173, &qword_2545D81A8);
      sub_20A127E0C(v174, &qword_2545D81A8);
      if (v160(v140, 1, v167) == 1)
      {
        sub_20A127E0C(v175, &qword_2545D81A8);
LABEL_72:
        v148 = v162;
        v149 = v171;
        sub_20A1353A0(v163 + v162[18], v171, &qword_2545D81A8);
        v150 = v170;
        sub_20A1353A0(v164 + v148[18], v170, &qword_2545D81A8);
        v151 = (uint64_t)v166;
        v152 = (uint64_t)&v166[*(int *)(v177 + 48)];
        sub_20A1353A0(v149, (uint64_t)v166, &qword_2545D81A8);
        sub_20A1353A0(v150, v152, &qword_2545D81A8);
        if (v160(v151, 1, v167) == 1)
        {
          sub_20A127E0C(v170, &qword_2545D81A8);
          sub_20A127E0C(v171, &qword_2545D81A8);
          if (v160(v152, 1, v167) == 1)
          {
            sub_20A127E0C((uint64_t)v166, &qword_2545D81A8);
            return 1;
          }
        }
        else
        {
          sub_20A1353A0((uint64_t)v166, (uint64_t)v165, &qword_2545D81A8);
          if (v160(v152, 1, v167) != 1)
          {
            v153 = v169;
            v154 = v168;
            v155 = v167;
            (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v168, v152, v167);
            sub_20A1205FC(&qword_2545D9960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
            v156 = (uint64_t)v165;
            v157 = sub_20A1A8D78();
            v158 = *(void (**)(char *, uint64_t))(v153 + 8);
            v158(v154, v155);
            sub_20A127E0C(v170, &qword_2545D81A8);
            sub_20A127E0C(v171, &qword_2545D81A8);
            v158((char *)v156, v155);
            sub_20A127E0C((uint64_t)v166, &qword_2545D81A8);
            return (v157 & 1) != 0;
          }
          sub_20A127E0C(v170, &qword_2545D81A8);
          sub_20A127E0C(v171, &qword_2545D81A8);
          (*(void (**)(char *, uint64_t))(v169 + 8))(v165, v167);
        }
        v141 = v198;
        goto LABEL_78;
      }
LABEL_70:
      v141 = &v199;
LABEL_78:
      sub_20A127E0C(*(v141 - 32), &qword_2545D9958);
      return 0;
    }
    sub_20A1353A0(v175, v172, &qword_2545D81A8);
    if (v160(v140, 1, v167) == 1)
    {
      sub_20A127E0C(v173, &qword_2545D81A8);
      sub_20A127E0C(v174, &qword_2545D81A8);
      (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v172, v167);
      goto LABEL_70;
    }
    v142 = v169;
    v143 = v168;
    v144 = v167;
    (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v168, v140, v167);
    sub_20A1205FC(&qword_2545D9960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
    v145 = v172;
    v146 = sub_20A1A8D78();
    v147 = *(void (**)(char *, uint64_t))(v142 + 8);
    v147(v143, v144);
    sub_20A127E0C(v173, &qword_2545D81A8);
    sub_20A127E0C(v174, &qword_2545D81A8);
    v147((char *)v145, v144);
    sub_20A127E0C(v175, &qword_2545D81A8);
    if ((v146 & 1) != 0)
      goto LABEL_72;
    return 0;
  }
  if (!v126)
    return 0;
  v127 = *v123 == *v125;
  v128 = v167;
  v129 = v164;
  v130 = v163;
  v131 = v162;
  if (v127 && v124 == v126)
    goto LABEL_65;
  v132 = sub_20A1A9258();
  v131 = v162;
  v130 = v163;
  v129 = v164;
  v133 = v132;
  result = 0;
  if ((v133 & 1) != 0)
    goto LABEL_65;
  return result;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  uint64_t result;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v47 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9968);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v45 - v13;
  v17 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(a1 + 8);
  v19 = *a2;
  v18 = a2[1];
  if (v16 >> 60 == 15)
  {
    if (v18 >> 60 == 15)
      goto LABEL_7;
LABEL_5:
    sub_20A127ED0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    sub_20A127ED0(v19, v18);
    sub_20A127EE4(v17, v16);
    sub_20A127EE4(v19, v18);
    return 0;
  }
  if (v18 >> 60 == 15)
    goto LABEL_5;
  v46 = (char *)&v45 - v13;
  v20 = v14;
  sub_20A127ED0(v17, v16);
  sub_20A127ED0(v19, v18);
  sub_20A1692C0(v17, v16);
  v22 = v21;
  sub_20A127EE4(v19, v18);
  sub_20A127EE4(v17, v16);
  v14 = v20;
  v15 = v46;
  if ((v22 & 1) == 0)
    return 0;
LABEL_7:
  v23 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(a1 + 24);
  v25 = a2[2];
  v26 = a2[3];
  if (v24 >> 60 != 15)
  {
    if (v26 >> 60 == 15)
      goto LABEL_11;
    v46 = v15;
    v27 = v14;
    sub_20A127ED0(v23, v24);
    sub_20A127ED0(v25, v26);
    sub_20A1692C0(v23, v24);
    v29 = v28;
    sub_20A127EE4(v25, v26);
    sub_20A127EE4(v23, v24);
    v14 = v27;
    v15 = v46;
    if ((v29 & 1) != 0)
      goto LABEL_13;
    return 0;
  }
  if (v26 >> 60 != 15)
  {
LABEL_11:
    sub_20A127ED0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
    sub_20A127ED0(v25, v26);
    sub_20A127EE4(v23, v24);
    sub_20A127EE4(v25, v26);
    return 0;
  }
LABEL_13:
  v45 = v14;
  v30 = type metadata accessor for MobileDocumentReaderResponse(0);
  sub_20A1353A0(a1 + *(int *)(v30 + 24), (uint64_t)v15, &qword_2545D81B0);
  sub_20A1353A0((uint64_t)a2 + *(int *)(v30 + 24), (uint64_t)v12, &qword_2545D81B0);
  v31 = v50;
  v32 = v50 + *(int *)(v6 + 48);
  sub_20A1353A0((uint64_t)v15, v50, &qword_2545D81B0);
  sub_20A1353A0((uint64_t)v12, v32, &qword_2545D81B0);
  v33 = v49;
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v34(v31, 1, v49) == 1)
  {
    sub_20A127E0C((uint64_t)v12, &qword_2545D81B0);
    sub_20A127E0C((uint64_t)v15, &qword_2545D81B0);
    if (v34(v32, 1, v33) == 1)
    {
      sub_20A127E0C(v31, &qword_2545D81B0);
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  v35 = v45;
  sub_20A1353A0(v31, v45, &qword_2545D81B0);
  if (v34(v32, 1, v33) == 1)
  {
    sub_20A127E0C((uint64_t)v12, &qword_2545D81B0);
    sub_20A127E0C((uint64_t)v15, &qword_2545D81B0);
    sub_20A124284(v35, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
LABEL_18:
    sub_20A127E0C(v31, &qword_2545D9968);
    return 0;
  }
  v36 = v47;
  sub_20A12063C(v32, v47, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
  v37 = _s7CoreIDV28MobileDocumentReaderResponseV0c8IdentityD8ElementsV2eeoiySbAE_AEtFZ_0(v35, v36);
  sub_20A124284(v36, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
  sub_20A127E0C((uint64_t)v12, &qword_2545D81B0);
  sub_20A127E0C((uint64_t)v15, &qword_2545D81B0);
  sub_20A124284(v35, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
  sub_20A127E0C(v31, &qword_2545D81B0);
  if (!v37)
    return 0;
LABEL_20:
  v38 = *(int *)(v30 + 28);
  v39 = (_QWORD *)(a1 + v38);
  v40 = *(_QWORD *)(a1 + v38 + 8);
  v41 = (uint64_t *)((char *)a2 + v38);
  v42 = v41[1];
  if (!v40)
  {
    if (!v42)
      return 1;
    goto LABEL_29;
  }
  if (!v42)
  {
    swift_bridgeObjectRetain();
LABEL_29:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (*v39 == *v41 && v40 == v42)
    return 1;
  v43 = sub_20A1A9258();
  result = 0;
  if ((v43 & 1) != 0)
    return 1;
  return result;
}

uint64_t type metadata accessor for MobileDocumentReaderResponse(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545D9760);
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545D9778);
}

unint64_t sub_20A15ACF4()
{
  unint64_t result;

  result = qword_2545D93C8;
  if (!qword_2545D93C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B21F4, &type metadata for MobileDocumentReaderResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D93C8);
  }
  return result;
}

unint64_t sub_20A15AD38()
{
  unint64_t result;

  result = qword_2545D93D8;
  if (!qword_2545D93D8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentIssuer, &type metadata for MobileDocumentIssuer);
    atomic_store(result, (unint64_t *)&qword_2545D93D8);
  }
  return result;
}

unint64_t sub_20A15AD7C()
{
  unint64_t result;

  result = qword_2545D93F0;
  if (!qword_2545D93F0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentIssuer, &type metadata for MobileDocumentIssuer);
    atomic_store(result, (unint64_t *)&qword_2545D93F0);
  }
  return result;
}

unint64_t sub_20A15ADC0()
{
  unint64_t result;

  result = qword_2545D9400;
  if (!qword_2545D9400)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B21A4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9400);
  }
  return result;
}

unint64_t sub_20A15AE04()
{
  unint64_t result;

  result = qword_2545D9440;
  if (!qword_2545D9440)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2154, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9440);
  }
  return result;
}

unint64_t sub_20A15AE48()
{
  unint64_t result;

  result = qword_2545D9448;
  if (!qword_2545D9448)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2104, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9448);
  }
  return result;
}

unint64_t sub_20A15AE8C()
{
  unint64_t result;

  result = qword_2545D9450;
  if (!qword_2545D9450)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B20B4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotSpecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9450);
  }
  return result;
}

unint64_t sub_20A15AED0()
{
  unint64_t result;

  result = qword_2545D9458;
  if (!qword_2545D9458)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2064, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotApplicableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9458);
  }
  return result;
}

unint64_t sub_20A15AF14()
{
  unint64_t result;

  result = qword_2545D9460;
  if (!qword_2545D9460)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2014, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.MaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9460);
  }
  return result;
}

unint64_t sub_20A15AF58()
{
  unint64_t result;

  result = qword_2545D9468;
  if (!qword_2545D9468)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1FC4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.FemaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9468);
  }
  return result;
}

unint64_t sub_20A15AF9C()
{
  unint64_t result;

  result = qword_2545D94B8;
  if (!qword_2545D94B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1F74, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D94B8);
  }
  return result;
}

unint64_t sub_20A15AFE0()
{
  unint64_t result;

  result = qword_2545D94C0;
  if (!qword_2545D94C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1F24, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.NoncompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D94C0);
  }
  return result;
}

unint64_t sub_20A15B024()
{
  unint64_t result;

  result = qword_2545D94C8;
  if (!qword_2545D94C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1ED4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D94C8);
  }
  return result;
}

unint64_t sub_20A15B068()
{
  unint64_t result;

  result = qword_2545D94F0;
  if (!qword_2545D94F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1E84, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D94F0);
  }
  return result;
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545D9790);
}

unint64_t sub_20A15B0C0()
{
  unint64_t result;

  result = qword_2545D9508;
  if (!qword_2545D9508)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1E34, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9508);
  }
  return result;
}

unint64_t sub_20A15B104()
{
  unint64_t result;

  result = qword_2545D9528;
  if (!qword_2545D9528)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code);
    atomic_store(result, (unint64_t *)&qword_2545D9528);
  }
  return result;
}

unint64_t sub_20A15B148()
{
  unint64_t result;

  result = qword_2545D9548;
  if (!qword_2545D9548)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code);
    atomic_store(result, (unint64_t *)&qword_2545D9548);
  }
  return result;
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545D97B8);
}

unint64_t sub_20A15B1A0()
{
  unint64_t result;

  result = qword_2545D9558;
  if (!qword_2545D9558)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1DE4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9558);
  }
  return result;
}

unint64_t sub_20A15B1E4()
{
  unint64_t result;

  result = qword_2545D9570;
  if (!qword_2545D9570)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1D94, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9570);
  }
  return result;
}

unint64_t sub_20A15B228()
{
  unint64_t result;

  result = qword_2545D9588;
  if (!qword_2545D9588)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1D44, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9588);
  }
  return result;
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545D97A0);
}

uint64_t sub_20A15B280(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_20A15B2B4()
{
  unint64_t result;

  result = qword_2545D95A0;
  if (!qword_2545D95A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1CF4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D95A0);
  }
  return result;
}

unint64_t sub_20A15B2F8()
{
  unint64_t result;

  result = qword_2545D95C0;
  if (!qword_2545D95C0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction);
    atomic_store(result, (unint64_t *)&qword_2545D95C0);
  }
  return result;
}

unint64_t sub_20A15B33C()
{
  unint64_t result;

  result = qword_2545D95D8;
  if (!qword_2545D95D8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement);
    atomic_store(result, (unint64_t *)&qword_2545D95D8);
  }
  return result;
}

unint64_t sub_20A15B380()
{
  unint64_t result;

  result = qword_2545D95F8;
  if (!qword_2545D95F8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction);
    atomic_store(result, (unint64_t *)&qword_2545D95F8);
  }
  return result;
}

uint64_t sub_20A15B3C4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x20BD21434](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A15B428()
{
  unint64_t result;

  result = qword_2545D9608;
  if (!qword_2545D9608)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement);
    atomic_store(result, (unint64_t *)&qword_2545D9608);
  }
  return result;
}

unint64_t sub_20A15B46C()
{
  unint64_t result;

  result = qword_2545D9618;
  if (!qword_2545D9618)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1CA4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9618);
  }
  return result;
}

uint64_t sub_20A15B4B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A15B510(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_20A15B550()
{
  unint64_t result;

  result = qword_2545D9638;
  if (!qword_2545D9638)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1C54, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9638);
  }
  return result;
}

unint64_t sub_20A15B594()
{
  unint64_t result;

  result = qword_2545D9648;
  if (!qword_2545D9648)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_2545D9648);
  }
  return result;
}

unint64_t sub_20A15B5D8()
{
  unint64_t result;

  result = qword_2545D9660;
  if (!qword_2545D9660)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address);
    atomic_store(result, (unint64_t *)&qword_2545D9660);
  }
  return result;
}

unint64_t sub_20A15B61C()
{
  unint64_t result;

  result = qword_2545D9668;
  if (!qword_2545D9668)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority);
    atomic_store(result, (unint64_t *)&qword_2545D9668);
  }
  return result;
}

uint64_t sub_20A15B660(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D9688);
    v10 = sub_20A1205FC(a2, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege, a3);
    result = MEMORY[0x20BD21434](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A15B6E4()
{
  unint64_t result;

  result = qword_2545D96A0;
  if (!qword_2545D96A0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus);
    atomic_store(result, (unint64_t *)&qword_2545D96A0);
  }
  return result;
}

uint64_t sub_20A15B728(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A15B768(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_20A15B7C8()
{
  unint64_t result;

  result = qword_2545D96B8;
  if (!qword_2545D96B8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_2545D96B8);
  }
  return result;
}

uint64_t sub_20A15B80C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D9650);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x20BD21434](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A15B870()
{
  unint64_t result;

  result = qword_2545D96C8;
  if (!qword_2545D96C8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address);
    atomic_store(result, (unint64_t *)&qword_2545D96C8);
  }
  return result;
}

unint64_t sub_20A15B8B4()
{
  unint64_t result;

  result = qword_2545D96D0;
  if (!qword_2545D96D0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority);
    atomic_store(result, (unint64_t *)&qword_2545D96D0);
  }
  return result;
}

uint64_t sub_20A15B8F8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D9670);
    v10 = sub_20A1205FC(a2, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege, a3);
    result = MEMORY[0x20BD21434](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A15B97C()
{
  unint64_t result;

  result = qword_2545D96F8;
  if (!qword_2545D96F8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus);
    atomic_store(result, (unint64_t *)&qword_2545D96F8);
  }
  return result;
}

uint64_t sub_20A15B9C0()
{
  return sub_20A1205FC(&qword_2545D9700, type metadata accessor for MobileDocumentReaderResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse);
}

unint64_t sub_20A15B9F0()
{
  unint64_t result;

  result = qword_2545D9708;
  if (!qword_2545D9708)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address);
    atomic_store(result, (unint64_t *)&qword_2545D9708);
  }
  return result;
}

unint64_t sub_20A15BA38()
{
  unint64_t result;

  result = qword_2545D9710;
  if (!qword_2545D9710)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_2545D9710);
  }
  return result;
}

unint64_t sub_20A15BA80()
{
  unint64_t result;

  result = qword_2545D9718;
  if (!qword_2545D9718)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus);
    atomic_store(result, (unint64_t *)&qword_2545D9718);
  }
  return result;
}

unint64_t sub_20A15BAC8()
{
  unint64_t result;

  result = qword_2545D9720;
  if (!qword_2545D9720)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code);
    atomic_store(result, (unint64_t *)&qword_2545D9720);
  }
  return result;
}

uint64_t sub_20A15BB0C()
{
  return sub_20A1205FC(&qword_2545D9728, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege);
}

uint64_t sub_20A15BB38()
{
  return sub_20A1205FC(&qword_2545D9730, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
}

unint64_t sub_20A15BB68()
{
  unint64_t result;

  result = qword_2545D9738;
  if (!qword_2545D9738)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction);
    atomic_store(result, (unint64_t *)&qword_2545D9738);
  }
  return result;
}

unint64_t sub_20A15BBB0()
{
  unint64_t result;

  result = qword_2545D9740;
  if (!qword_2545D9740)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement);
    atomic_store(result, (unint64_t *)&qword_2545D9740);
  }
  return result;
}

uint64_t sub_20A15BBF4()
{
  return sub_20A1205FC(&qword_2545D9748, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege);
}

unint64_t sub_20A15BC24()
{
  unint64_t result;

  result = qword_2545D9750;
  if (!qword_2545D9750)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority);
    atomic_store(result, (unint64_t *)&qword_2545D9750);
  }
  return result;
}

uint64_t sub_20A15BC68()
{
  return sub_20A1205FC(&qword_2545D9758, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
}

_OWORD *initializeBufferWithCopyOfBuffer for MobileDocumentReaderResponse(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  char *__dst;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = *(_QWORD *)(a2 + 8);
    if (v7 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      v9 = *(_QWORD *)a2;
      sub_20A120BD8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      *(_QWORD *)v4 = v9;
      *((_QWORD *)v4 + 1) = v7;
    }
    v10 = (uint64_t *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    if (v11 >> 60 == 15)
    {
      v4[1] = *(_OWORD *)v10;
    }
    else
    {
      v12 = *v10;
      sub_20A120BD8(*v10, *(_QWORD *)(a2 + 24));
      *((_QWORD *)v4 + 2) = v12;
      *((_QWORD *)v4 + 3) = v11;
    }
    v13 = *(int *)(v6 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)(a2 + v13);
    v16 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
    v17 = *((_QWORD *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_20A1A8B5C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      v14[v16[5]] = v15[v16[5]];
      v20 = v16[6];
      v21 = &v14[v20];
      v22 = (uint64_t *)&v15[v20];
      v23 = v22[1];
      v78 = v17;
      v76 = v6;
      if (v23 >> 60 == 15)
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      else
      {
        v24 = *v22;
        sub_20A120BD8(*v22, v23);
        *(_QWORD *)v21 = v24;
        *((_QWORD *)v21 + 1) = v23;
      }
      v25 = v16[7];
      v26 = &v14[v25];
      v27 = &v15[v25];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      *(_QWORD *)&v14[v16[8]] = *(_QWORD *)&v15[v16[8]];
      v28 = v16[9];
      __dst = &v14[v28];
      v29 = &v15[v28];
      v30 = sub_20A1A8AD8();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_bridgeObjectRetain();
      v79 = v32;
      if (v32(v29, 1, v30))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
      }
      v34 = v16[10];
      v35 = &v14[v34];
      v36 = &v15[v34];
      v37 = *((_QWORD *)v36 + 1);
      v6 = v76;
      v77 = v30;
      v75 = v31;
      if (v37 == 1)
      {
        v38 = *((_OWORD *)v36 + 3);
        *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
        *((_OWORD *)v35 + 3) = v38;
        *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
        v39 = *((_OWORD *)v36 + 1);
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v39;
      }
      else
      {
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = v37;
        v40 = *((_QWORD *)v36 + 3);
        *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
        *((_QWORD *)v35 + 3) = v40;
        v41 = *((_QWORD *)v36 + 5);
        *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
        *((_QWORD *)v35 + 5) = v41;
        v42 = *((_QWORD *)v36 + 7);
        *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
        *((_QWORD *)v35 + 7) = v42;
        v43 = *((_QWORD *)v36 + 9);
        *((_QWORD *)v35 + 8) = *((_QWORD *)v36 + 8);
        *((_QWORD *)v35 + 9) = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v44 = v16[11];
      v45 = &v14[v44];
      v46 = &v15[v44];
      v47 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      v48 = v16[12];
      v49 = &v14[v48];
      v50 = &v15[v48];
      v51 = *(_QWORD *)&v15[v48 + 8];
      swift_bridgeObjectRetain();
      if (v51 == 1)
      {
        v52 = *((_OWORD *)v50 + 1);
        *(_OWORD *)v49 = *(_OWORD *)v50;
        *((_OWORD *)v49 + 1) = v52;
        *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
      }
      else
      {
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v51;
        v53 = *((_QWORD *)v50 + 3);
        *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
        *((_QWORD *)v49 + 3) = v53;
        v54 = *((_QWORD *)v50 + 4);
        v55 = *((_QWORD *)v50 + 5);
        *((_QWORD *)v49 + 4) = v54;
        *((_QWORD *)v49 + 5) = v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)&v14[v16[13]] = *(_QWORD *)&v15[v16[13]];
      *(_QWORD *)&v14[v16[14]] = *(_QWORD *)&v15[v16[14]];
      v14[v16[15]] = v15[v16[15]];
      v56 = v16[16];
      v57 = &v14[v56];
      v58 = &v15[v56];
      v59 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v59;
      v60 = v16[17];
      v61 = &v14[v60];
      v62 = &v15[v60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v79(v62, 1, v77))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        v64 = v75;
      }
      else
      {
        v64 = v75;
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v61, v62, v77);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v61, 0, 1, v77);
      }
      v65 = v16[18];
      v66 = &v14[v65];
      v67 = &v15[v65];
      if (v79(v67, 1, v77))
      {
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v66, v67, v77);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v66, 0, 1, v77);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56))(v14, 0, 1, v16);
    }
    v69 = *(int *)(v6 + 28);
    v70 = (_QWORD *)((char *)v4 + v69);
    v71 = (_QWORD *)(a2 + v69);
    v72 = v71[1];
    *v70 = *v71;
    v70[1] = v72;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MobileDocumentReaderResponse(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;

  v4 = a1[1];
  if (v4 >> 60 != 15)
    sub_20A120E74(*a1, v4);
  v5 = a1[3];
  if (v5 >> 60 != 15)
    sub_20A120E74(a1[2], v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  v7 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {
    v8 = sub_20A1A8B5C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = (uint64_t *)&v6[v7[6]];
    v10 = v9[1];
    if (v10 >> 60 != 15)
      sub_20A120E74(*v9, v10);
    swift_bridgeObjectRelease();
    v11 = &v6[v7[9]];
    v12 = sub_20A1A8AD8();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (!v14(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    if (*(_QWORD *)&v6[v7[10] + 8] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v6[v7[12] + 8] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = &v6[v7[17]];
    if (!v14(v15, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v16 = &v6[v7[18]];
    if (!v14(v16, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MobileDocumentReaderResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v73;
  char *__dst;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);

  v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v7 = *a2;
    sub_20A120BD8(*a2, a2[1]);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v6;
  }
  v8 = a2 + 2;
  v9 = a2[3];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  }
  else
  {
    v10 = *v8;
    sub_20A120BD8(*v8, a2[3]);
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v9;
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_20A1A8B5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v13, v17);
    v12[v14[5]] = v13[v14[5]];
    v18 = v14[6];
    v19 = &v12[v18];
    v20 = (uint64_t *)&v13[v18];
    v21 = v20[1];
    v75 = v15;
    v76 = a3;
    if (v21 >> 60 == 15)
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
    }
    else
    {
      v22 = *v20;
      sub_20A120BD8(*v20, v21);
      *(_QWORD *)v19 = v22;
      *((_QWORD *)v19 + 1) = v21;
    }
    v23 = v14[7];
    v24 = &v12[v23];
    v25 = &v13[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
    v26 = v14[9];
    __dst = &v12[v26];
    v27 = &v13[v26];
    v28 = sub_20A1A8AD8();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    v77 = v30;
    if (v30(v27, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    v32 = v28;
    v33 = v14[10];
    v34 = &v12[v33];
    v35 = &v13[v33];
    v36 = *((_QWORD *)v35 + 1);
    v73 = v29;
    if (v36 == 1)
    {
      v37 = *((_OWORD *)v35 + 3);
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *((_OWORD *)v34 + 3) = v37;
      *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
      v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
    }
    else
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v39 = *((_QWORD *)v35 + 3);
      *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
      *((_QWORD *)v34 + 3) = v39;
      v40 = *((_QWORD *)v35 + 5);
      *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
      *((_QWORD *)v34 + 5) = v40;
      v41 = *((_QWORD *)v35 + 7);
      *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
      *((_QWORD *)v34 + 7) = v41;
      v42 = *((_QWORD *)v35 + 9);
      *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
      *((_QWORD *)v34 + 9) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v43 = v14[11];
    v44 = &v12[v43];
    v45 = &v13[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = v14[12];
    v48 = &v12[v47];
    v49 = &v13[v47];
    v50 = *(_QWORD *)&v13[v47 + 8];
    swift_bridgeObjectRetain();
    if (v50 == 1)
    {
      v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
    }
    else
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v50;
      v52 = *((_QWORD *)v49 + 3);
      *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
      *((_QWORD *)v48 + 3) = v52;
      v53 = *((_QWORD *)v49 + 4);
      v54 = *((_QWORD *)v49 + 5);
      *((_QWORD *)v48 + 4) = v53;
      *((_QWORD *)v48 + 5) = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)&v12[v14[13]] = *(_QWORD *)&v13[v14[13]];
    *(_QWORD *)&v12[v14[14]] = *(_QWORD *)&v13[v14[14]];
    v12[v14[15]] = v13[v14[15]];
    v55 = v14[16];
    v56 = &v12[v55];
    v57 = &v13[v55];
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    v59 = v14[17];
    v60 = &v12[v59];
    v61 = &v13[v59];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62 = v77;
    if (v77(v61, 1, v32))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v60, v61, v32);
      v62 = v77;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v60, 0, 1, v32);
    }
    v64 = v14[18];
    v65 = &v12[v64];
    v66 = &v13[v64];
    if (v62(v66, 1, v32))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v65, v66, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v65, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v75 + 56))(v12, 0, 1, v14);
    a3 = v76;
  }
  v68 = *(int *)(a3 + 28);
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)((char *)a2 + v68);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for MobileDocumentReaderResponse(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  size_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  char *v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  void *v123;
  char *v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  char *v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v136)(char *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v4 = a2;
  v6 = *(_QWORD *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      v7 = *(_QWORD *)a2;
      sub_20A120BD8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_20A122530((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)a2;
  sub_20A120BD8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  v9 = *a1;
  v10 = a1[1];
  *a1 = v8;
  a1[1] = v6;
  sub_20A120E74(v9, v10);
LABEL_8:
  v11 = (uint64_t *)(v4 + 16);
  v12 = *(_QWORD *)(v4 + 24);
  if ((unint64_t)a1[3] >> 60 == 15)
  {
    if (v12 >> 60 != 15)
    {
      v13 = *v11;
      sub_20A120BD8(*v11, *(_QWORD *)(v4 + 24));
      a1[2] = v13;
      a1[3] = v12;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v12 >> 60 == 15)
  {
    sub_20A122530((uint64_t)(a1 + 2));
LABEL_13:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v11;
    goto LABEL_15;
  }
  v14 = *v11;
  sub_20A120BD8(*v11, *(_QWORD *)(v4 + 24));
  v15 = a1[2];
  v16 = a1[3];
  a1[2] = v14;
  a1[3] = v12;
  sub_20A120E74(v15, v16);
LABEL_15:
  v17 = *(int *)(a3 + 24);
  v18 = (uint64_t)a1 + v17;
  v19 = (char *)(v4 + v17);
  v20 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22((uint64_t)v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_20A124284(v18, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
      goto LABEL_21;
    }
    v139 = a3;
    v33 = sub_20A1A8B5C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v18, v19, v33);
    *(_BYTE *)(v18 + v20[5]) = v19[v20[5]];
    v34 = v20[6];
    v35 = (uint64_t *)(v18 + v34);
    v36 = (uint64_t *)&v19[v34];
    v37 = *(_QWORD *)&v19[v34 + 8];
    if (*(_QWORD *)(v18 + v34 + 8) >> 60 == 15)
    {
      if (v37 >> 60 != 15)
      {
        v38 = *v36;
        sub_20A120BD8(*v36, v37);
        *v35 = v38;
        v35[1] = v37;
        goto LABEL_48;
      }
    }
    else
    {
      if (v37 >> 60 != 15)
      {
        v81 = *v36;
        sub_20A120BD8(*v36, v37);
        v82 = *v35;
        v83 = v35[1];
        *v35 = v81;
        v35[1] = v37;
        sub_20A120E74(v82, v83);
LABEL_48:
        v84 = v20[7];
        v85 = v18 + v84;
        v86 = &v19[v84];
        v87 = *(_QWORD *)v86;
        *(_BYTE *)(v85 + 8) = v86[8];
        *(_QWORD *)v85 = v87;
        *(_QWORD *)(v18 + v20[8]) = *(_QWORD *)&v19[v20[8]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v88 = v20[9];
        v89 = (void *)(v18 + v88);
        v90 = &v19[v88];
        v91 = sub_20A1A8AD8();
        v137 = *(_QWORD *)(v91 - 8);
        v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v137 + 48);
        v93 = v92(v89, 1, v91);
        v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v92;
        v94 = v92(v90, 1, v91);
        if (v93)
        {
          if (!v94)
          {
            (*(void (**)(void *, char *, uint64_t))(v137 + 16))(v89, v90, v91);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v89, 0, 1, v91);
            goto LABEL_54;
          }
        }
        else
        {
          if (!v94)
          {
            (*(void (**)(void *, char *, uint64_t))(v137 + 24))(v89, v90, v91);
LABEL_54:
            v96 = v20[10];
            v97 = v18 + v96;
            v98 = &v19[v96];
            v99 = *(_QWORD *)(v18 + v96 + 8);
            v100 = *(_QWORD *)&v19[v96 + 8];
            if (v99 == 1)
            {
              if (v100 == 1)
              {
                *(_OWORD *)v97 = *(_OWORD *)v98;
                v101 = *((_OWORD *)v98 + 1);
                v102 = *((_OWORD *)v98 + 2);
                v103 = *((_OWORD *)v98 + 4);
                *(_OWORD *)(v97 + 48) = *((_OWORD *)v98 + 3);
                *(_OWORD *)(v97 + 64) = v103;
                *(_OWORD *)(v97 + 16) = v101;
                *(_OWORD *)(v97 + 32) = v102;
              }
              else
              {
                *(_QWORD *)v97 = *(_QWORD *)v98;
                *(_QWORD *)(v97 + 8) = *((_QWORD *)v98 + 1);
                *(_QWORD *)(v97 + 16) = *((_QWORD *)v98 + 2);
                *(_QWORD *)(v97 + 24) = *((_QWORD *)v98 + 3);
                *(_QWORD *)(v97 + 32) = *((_QWORD *)v98 + 4);
                *(_QWORD *)(v97 + 40) = *((_QWORD *)v98 + 5);
                *(_QWORD *)(v97 + 48) = *((_QWORD *)v98 + 6);
                *(_QWORD *)(v97 + 56) = *((_QWORD *)v98 + 7);
                *(_QWORD *)(v97 + 64) = *((_QWORD *)v98 + 8);
                *(_QWORD *)(v97 + 72) = *((_QWORD *)v98 + 9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
            }
            else if (v100 == 1)
            {
              sub_20A122564(v97);
              *(_OWORD *)v97 = *(_OWORD *)v98;
              v104 = *((_OWORD *)v98 + 4);
              v106 = *((_OWORD *)v98 + 1);
              v105 = *((_OWORD *)v98 + 2);
              *(_OWORD *)(v97 + 48) = *((_OWORD *)v98 + 3);
              *(_OWORD *)(v97 + 64) = v104;
              *(_OWORD *)(v97 + 16) = v106;
              *(_OWORD *)(v97 + 32) = v105;
            }
            else
            {
              *(_QWORD *)v97 = *(_QWORD *)v98;
              *(_QWORD *)(v97 + 8) = *((_QWORD *)v98 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v97 + 16) = *((_QWORD *)v98 + 2);
              *(_QWORD *)(v97 + 24) = *((_QWORD *)v98 + 3);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v97 + 32) = *((_QWORD *)v98 + 4);
              *(_QWORD *)(v97 + 40) = *((_QWORD *)v98 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v97 + 48) = *((_QWORD *)v98 + 6);
              *(_QWORD *)(v97 + 56) = *((_QWORD *)v98 + 7);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v97 + 64) = *((_QWORD *)v98 + 8);
              *(_QWORD *)(v97 + 72) = *((_QWORD *)v98 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
            }
            v107 = v20[11];
            v108 = (_QWORD *)(v18 + v107);
            v109 = &v19[v107];
            *v108 = *(_QWORD *)v109;
            v108[1] = *((_QWORD *)v109 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v110 = v20[12];
            v111 = v18 + v110;
            v112 = &v19[v110];
            v113 = *(_QWORD *)(v18 + v110 + 8);
            v114 = *(_QWORD *)&v19[v110 + 8];
            if (v113 == 1)
            {
              if (v114 == 1)
              {
                v115 = *(_OWORD *)v112;
                v116 = *((_OWORD *)v112 + 2);
                *(_OWORD *)(v111 + 16) = *((_OWORD *)v112 + 1);
                *(_OWORD *)(v111 + 32) = v116;
                *(_OWORD *)v111 = v115;
              }
              else
              {
                *(_QWORD *)v111 = *(_QWORD *)v112;
                *(_QWORD *)(v111 + 8) = *((_QWORD *)v112 + 1);
                *(_QWORD *)(v111 + 16) = *((_QWORD *)v112 + 2);
                *(_QWORD *)(v111 + 24) = *((_QWORD *)v112 + 3);
                *(_QWORD *)(v111 + 32) = *((_QWORD *)v112 + 4);
                *(_QWORD *)(v111 + 40) = *((_QWORD *)v112 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
            }
            else if (v114 == 1)
            {
              sub_20A122598(v111);
              v118 = *((_OWORD *)v112 + 1);
              v117 = *((_OWORD *)v112 + 2);
              *(_OWORD *)v111 = *(_OWORD *)v112;
              *(_OWORD *)(v111 + 16) = v118;
              *(_OWORD *)(v111 + 32) = v117;
            }
            else
            {
              *(_QWORD *)v111 = *(_QWORD *)v112;
              *(_QWORD *)(v111 + 8) = *((_QWORD *)v112 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v111 + 16) = *((_QWORD *)v112 + 2);
              *(_QWORD *)(v111 + 24) = *((_QWORD *)v112 + 3);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v111 + 32) = *((_QWORD *)v112 + 4);
              *(_QWORD *)(v111 + 40) = *((_QWORD *)v112 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
            }
            *(_QWORD *)(v18 + v20[13]) = *(_QWORD *)&v19[v20[13]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v18 + v20[14]) = *(_QWORD *)&v19[v20[14]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
            v119 = v20[16];
            v120 = (_QWORD *)(v18 + v119);
            v121 = &v19[v119];
            *v120 = *(_QWORD *)v121;
            v120[1] = *((_QWORD *)v121 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v122 = v20[17];
            v123 = (void *)(v18 + v122);
            v124 = &v19[v122];
            v125 = v135(v18 + v122, 1, v91);
            v126 = v135((uint64_t)v124, 1, v91);
            if (v125)
            {
              if (!v126)
              {
                (*(void (**)(void *, char *, uint64_t))(v137 + 16))(v123, v124, v91);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v123, 0, 1, v91);
LABEL_74:
                v128 = v20[18];
                v129 = (void *)(v18 + v128);
                v130 = &v19[v128];
                v131 = v135((uint64_t)v129, 1, v91);
                v132 = v135((uint64_t)v130, 1, v91);
                a3 = v139;
                if (v131)
                {
                  if (!v132)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v137 + 16))(v129, v130, v91);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v129, 0, 1, v91);
                    goto LABEL_43;
                  }
                }
                else
                {
                  if (!v132)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v137 + 24))(v129, v130, v91);
                    goto LABEL_43;
                  }
                  (*(void (**)(void *, uint64_t))(v137 + 8))(v129, v91);
                }
                v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8) - 8)
                                + 64);
                v31 = v129;
                v32 = v130;
                goto LABEL_22;
              }
            }
            else
            {
              if (!v126)
              {
                (*(void (**)(void *, char *, uint64_t))(v137 + 24))(v123, v124, v91);
                goto LABEL_74;
              }
              (*(void (**)(void *, uint64_t))(v137 + 8))(v123, v91);
            }
            v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
            goto LABEL_74;
          }
          (*(void (**)(void *, uint64_t))(v137 + 8))(v89, v91);
        }
        v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        goto LABEL_54;
      }
      sub_20A122530((uint64_t)v35);
    }
    *(_OWORD *)v35 = *(_OWORD *)v36;
    goto LABEL_48;
  }
  if (v24)
  {
LABEL_21:
    v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0) - 8) + 64);
    v31 = (void *)v18;
    v32 = v19;
LABEL_22:
    memcpy(v31, v32, v30);
    goto LABEL_43;
  }
  v138 = a3;
  v25 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v18, v19, v25);
  *(_BYTE *)(v18 + v20[5]) = v19[v20[5]];
  v26 = v20[6];
  v27 = v18 + v26;
  v28 = (uint64_t *)&v19[v26];
  v29 = v28[1];
  v134 = v21;
  v133 = v4;
  if (v29 >> 60 == 15)
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  else
  {
    v39 = *v28;
    sub_20A120BD8(*v28, v29);
    *(_QWORD *)v27 = v39;
    *(_QWORD *)(v27 + 8) = v29;
  }
  v40 = v20[7];
  v41 = v18 + v40;
  v42 = &v19[v40];
  v43 = *(_QWORD *)v42;
  *(_BYTE *)(v41 + 8) = v42[8];
  *(_QWORD *)v41 = v43;
  *(_QWORD *)(v18 + v20[8]) = *(_QWORD *)&v19[v20[8]];
  v44 = v20[9];
  v45 = (void *)(v18 + v44);
  v46 = &v19[v44];
  v47 = sub_20A1A8AD8();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  v136 = v49;
  if (v49(v46, 1, v47))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v51 = v20[10];
  v52 = v18 + v51;
  v53 = &v19[v51];
  v4 = v133;
  if (*((_QWORD *)v53 + 1) == 1)
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
    v54 = *((_OWORD *)v53 + 1);
    v55 = *((_OWORD *)v53 + 2);
    v56 = *((_OWORD *)v53 + 4);
    *(_OWORD *)(v52 + 48) = *((_OWORD *)v53 + 3);
    *(_OWORD *)(v52 + 64) = v56;
    *(_OWORD *)(v52 + 16) = v54;
    *(_OWORD *)(v52 + 32) = v55;
  }
  else
  {
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *(_QWORD *)(v52 + 8) = *((_QWORD *)v53 + 1);
    *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
    *(_QWORD *)(v52 + 24) = *((_QWORD *)v53 + 3);
    *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
    *(_QWORD *)(v52 + 40) = *((_QWORD *)v53 + 5);
    *(_QWORD *)(v52 + 48) = *((_QWORD *)v53 + 6);
    *(_QWORD *)(v52 + 56) = *((_QWORD *)v53 + 7);
    *(_QWORD *)(v52 + 64) = *((_QWORD *)v53 + 8);
    *(_QWORD *)(v52 + 72) = *((_QWORD *)v53 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v57 = v20[11];
  v58 = (_QWORD *)(v18 + v57);
  v59 = &v19[v57];
  *v58 = *(_QWORD *)v59;
  v58[1] = *((_QWORD *)v59 + 1);
  v60 = v20[12];
  v61 = v18 + v60;
  v62 = &v19[v60];
  v63 = *(_QWORD *)&v19[v60 + 8];
  swift_bridgeObjectRetain();
  if (v63 == 1)
  {
    v64 = *(_OWORD *)v62;
    v65 = *((_OWORD *)v62 + 2);
    *(_OWORD *)(v61 + 16) = *((_OWORD *)v62 + 1);
    *(_OWORD *)(v61 + 32) = v65;
    *(_OWORD *)v61 = v64;
  }
  else
  {
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *(_QWORD *)(v61 + 8) = *((_QWORD *)v62 + 1);
    *(_QWORD *)(v61 + 16) = *((_QWORD *)v62 + 2);
    *(_QWORD *)(v61 + 24) = *((_QWORD *)v62 + 3);
    *(_QWORD *)(v61 + 32) = *((_QWORD *)v62 + 4);
    *(_QWORD *)(v61 + 40) = *((_QWORD *)v62 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v18 + v20[13]) = *(_QWORD *)&v19[v20[13]];
  *(_QWORD *)(v18 + v20[14]) = *(_QWORD *)&v19[v20[14]];
  *(_BYTE *)(v18 + v20[15]) = v19[v20[15]];
  v66 = v20[16];
  v67 = (_QWORD *)(v18 + v66);
  v68 = &v19[v66];
  *v67 = *(_QWORD *)v68;
  v67[1] = *((_QWORD *)v68 + 1);
  v69 = v20[17];
  v70 = (void *)(v18 + v69);
  v71 = &v19[v69];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v136(v71, 1, v47))
  {
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v70, v71, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v70, 0, 1, v47);
  }
  v73 = v20[18];
  v74 = (void *)(v18 + v73);
  v75 = &v19[v73];
  if (v136(v75, 1, v47))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v74, v75, v47);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v74, 0, 1, v47);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v134 + 56))(v18, 0, 1, v20);
  a3 = v138;
LABEL_43:
  v77 = *(int *)(a3 + 28);
  v78 = (uint64_t *)((char *)a1 + v77);
  v79 = (_QWORD *)(v4 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderResponse(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v44 = v11;
    v13 = sub_20A1A8B5C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    v8[v10[5]] = v9[v10[5]];
    *(_OWORD *)&v8[v10[6]] = *(_OWORD *)&v9[v10[6]];
    v14 = v10[7];
    v15 = &v8[v14];
    v16 = &v9[v14];
    v15[8] = v16[8];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    v17 = v10[9];
    v18 = &v8[v17];
    v19 = &v9[v17];
    v20 = sub_20A1A8AD8();
    v21 = *(_QWORD *)(v20 - 8);
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v43(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v10[10];
    v24 = &v8[v23];
    v25 = &v9[v23];
    v26 = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = v26;
    *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
    v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v27;
    *(_OWORD *)&v8[v10[11]] = *(_OWORD *)&v9[v10[11]];
    v28 = v10[12];
    v29 = &v8[v28];
    v30 = &v9[v28];
    v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    *(_QWORD *)&v8[v10[13]] = *(_QWORD *)&v9[v10[13]];
    *(_QWORD *)&v8[v10[14]] = *(_QWORD *)&v9[v10[14]];
    v8[v10[15]] = v9[v10[15]];
    *(_OWORD *)&v8[v10[16]] = *(_OWORD *)&v9[v10[16]];
    v32 = v10[17];
    v33 = &v8[v32];
    v34 = &v9[v32];
    if (v43(&v9[v32], 1, v20))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      v36 = v21;
    }
    else
    {
      v37 = v34;
      v36 = v21;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v33, v37, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v33, 0, 1, v20);
    }
    v38 = v10[18];
    v39 = &v8[v38];
    v40 = &v9[v38];
    if (v43(v40, 1, v20))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v39, v40, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v44 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for MobileDocumentReaderResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _OWORD *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  const void *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void *, uint64_t, uint64_t);
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  char *v108;
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  char *v114;
  int v115;
  int v116;
  void *v117;
  uint64_t v118;
  unsigned int (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;

  v6 = *(_QWORD *)(a1 + 8);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_20A122530(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  sub_20A120E74(v8, v6);
LABEL_6:
  v9 = (_OWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_11;
  }
  v11 = *(_QWORD *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_20A122530(a1 + 16);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 24) = v11;
  sub_20A120E74(v12, v10);
LABEL_11:
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18((uint64_t)v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_20A124284(v14, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
      goto LABEL_17;
    }
    v34 = sub_20A1A8B5C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v14, v15, v34);
    *(_BYTE *)(v14 + v16[5]) = v15[v16[5]];
    v35 = v16[6];
    v36 = (uint64_t *)(v14 + v35);
    v37 = (uint64_t *)&v15[v35];
    v38 = *(_QWORD *)(v14 + v35 + 8);
    v123 = a3;
    if (v38 >> 60 != 15)
    {
      v39 = v37[1];
      if (v39 >> 60 != 15)
      {
        v65 = *v36;
        *v36 = *v37;
        v36[1] = v39;
        sub_20A120E74(v65, v38);
LABEL_33:
        v66 = v16[7];
        v67 = v14 + v66;
        v68 = &v15[v66];
        *(_QWORD *)v67 = *(_QWORD *)v68;
        *(_BYTE *)(v67 + 8) = v68[8];
        *(_QWORD *)(v14 + v16[8]) = *(_QWORD *)&v15[v16[8]];
        swift_bridgeObjectRelease();
        v69 = v16[9];
        v70 = (void *)(v14 + v69);
        v71 = &v15[v69];
        v72 = sub_20A1A8AD8();
        v73 = *(_QWORD *)(v72 - 8);
        v74 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
        v117 = v70;
        LODWORD(v70) = v74(v70, 1, v72);
        v120 = v72;
        v121 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74;
        v75 = v74(v71, 1, v72);
        v118 = v73;
        if ((_DWORD)v70)
        {
          if (v75)
          {
            v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
            memcpy(v117, v71, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
            v77 = v72;
          }
          else
          {
            v77 = v72;
            (*(void (**)(void *, char *, uint64_t))(v73 + 32))(v117, v71, v72);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v117, 0, 1, v72);
          }
        }
        else
        {
          v77 = v72;
          if (v75)
          {
            (*(void (**)(void *, uint64_t))(v73 + 8))(v117, v72);
            v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
            memcpy(v117, v71, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v73 + 40))(v117, v71, v72);
          }
        }
        v79 = v16[10];
        v80 = (_QWORD *)(v14 + v79);
        v81 = &v15[v79];
        if (*(_QWORD *)(v14 + v79 + 8) != 1)
        {
          v82 = *((_QWORD *)v81 + 1);
          if (v82 != 1)
          {
            *v80 = *(_QWORD *)v81;
            v80[1] = v82;
            swift_bridgeObjectRelease();
            v85 = *((_QWORD *)v81 + 3);
            v80[2] = *((_QWORD *)v81 + 2);
            v80[3] = v85;
            swift_bridgeObjectRelease();
            v86 = *((_QWORD *)v81 + 5);
            v80[4] = *((_QWORD *)v81 + 4);
            v80[5] = v86;
            swift_bridgeObjectRelease();
            v87 = *((_QWORD *)v81 + 7);
            v80[6] = *((_QWORD *)v81 + 6);
            v80[7] = v87;
            swift_bridgeObjectRelease();
            v88 = *((_QWORD *)v81 + 9);
            v80[8] = *((_QWORD *)v81 + 8);
            v80[9] = v88;
            swift_bridgeObjectRelease();
LABEL_45:
            v89 = v16[11];
            v90 = (_QWORD *)(v14 + v89);
            v91 = (uint64_t *)&v15[v89];
            v93 = *v91;
            v92 = v91[1];
            *v90 = v93;
            v90[1] = v92;
            swift_bridgeObjectRelease();
            v94 = v16[12];
            v95 = (_QWORD *)(v14 + v94);
            v96 = &v15[v94];
            if (*(_QWORD *)(v14 + v94 + 8) != 1)
            {
              v97 = *((_QWORD *)v96 + 1);
              if (v97 != 1)
              {
                *v95 = *(_QWORD *)v96;
                v95[1] = v97;
                swift_bridgeObjectRelease();
                v99 = *((_QWORD *)v96 + 3);
                v95[2] = *((_QWORD *)v96 + 2);
                v95[3] = v99;
                swift_bridgeObjectRelease();
                v100 = *((_QWORD *)v96 + 5);
                v95[4] = *((_QWORD *)v96 + 4);
                v95[5] = v100;
                swift_bridgeObjectRelease();
LABEL_50:
                *(_QWORD *)(v14 + v16[13]) = *(_QWORD *)&v15[v16[13]];
                swift_bridgeObjectRelease();
                *(_QWORD *)(v14 + v16[14]) = *(_QWORD *)&v15[v16[14]];
                swift_bridgeObjectRelease();
                *(_BYTE *)(v14 + v16[15]) = v15[v16[15]];
                v101 = v16[16];
                v102 = (_QWORD *)(v14 + v101);
                v103 = (uint64_t *)&v15[v101];
                v105 = *v103;
                v104 = v103[1];
                *v102 = v105;
                v102[1] = v104;
                swift_bridgeObjectRelease();
                v106 = v16[17];
                v107 = (void *)(v14 + v106);
                v108 = &v15[v106];
                v109 = v121(v14 + v106, 1, v77);
                v110 = v121((uint64_t)v108, 1, v77);
                if (v109)
                {
                  if (!v110)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v118 + 32))(v107, v108, v77);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v107, 0, 1, v77);
LABEL_56:
                    v112 = v16[18];
                    v113 = (void *)(v14 + v112);
                    v114 = &v15[v112];
                    v115 = v121((uint64_t)v113, 1, v77);
                    v116 = v121((uint64_t)v114, 1, v77);
                    a3 = v123;
                    if (v115)
                    {
                      if (!v116)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v118 + 32))(v113, v114, v120);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v113, 0, 1, v120);
                        goto LABEL_31;
                      }
                    }
                    else
                    {
                      if (!v116)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v118 + 40))(v113, v114, v120);
                        goto LABEL_31;
                      }
                      (*(void (**)(void *, uint64_t))(v118 + 8))(v113, v120);
                    }
                    v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8) - 8)
                                    + 64);
                    v32 = v113;
                    v33 = v114;
                    goto LABEL_18;
                  }
                }
                else
                {
                  if (!v110)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v118 + 40))(v107, v108, v77);
                    goto LABEL_56;
                  }
                  (*(void (**)(void *, uint64_t))(v118 + 8))(v107, v77);
                }
                v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
                memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
                goto LABEL_56;
              }
              sub_20A122598((uint64_t)v95);
            }
            v98 = *((_OWORD *)v96 + 1);
            *(_OWORD *)v95 = *(_OWORD *)v96;
            *((_OWORD *)v95 + 1) = v98;
            *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
            goto LABEL_50;
          }
          sub_20A122564((uint64_t)v80);
        }
        v83 = *((_OWORD *)v81 + 3);
        *((_OWORD *)v80 + 2) = *((_OWORD *)v81 + 2);
        *((_OWORD *)v80 + 3) = v83;
        *((_OWORD *)v80 + 4) = *((_OWORD *)v81 + 4);
        v84 = *((_OWORD *)v81 + 1);
        *(_OWORD *)v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v84;
        goto LABEL_45;
      }
      sub_20A122530((uint64_t)v36);
    }
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_33;
  }
  if (v20)
  {
LABEL_17:
    v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0) - 8) + 64);
    v32 = (void *)v14;
    v33 = v15;
LABEL_18:
    memcpy(v32, v33, v31);
    goto LABEL_31;
  }
  v122 = a3;
  v21 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v14, v15, v21);
  *(_BYTE *)(v14 + v16[5]) = v15[v16[5]];
  *(_OWORD *)(v14 + v16[6]) = *(_OWORD *)&v15[v16[6]];
  v22 = v16[7];
  v23 = v14 + v22;
  v24 = &v15[v22];
  *(_BYTE *)(v23 + 8) = v24[8];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v14 + v16[8]) = *(_QWORD *)&v15[v16[8]];
  v25 = v16[9];
  v26 = (void *)(v14 + v25);
  v27 = &v15[v25];
  v28 = sub_20A1A8AD8();
  v29 = *(_QWORD *)(v28 - 8);
  v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v119(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v40 = v16[10];
  v41 = (_OWORD *)(v14 + v40);
  v42 = &v15[v40];
  v43 = *((_OWORD *)v42 + 3);
  v41[2] = *((_OWORD *)v42 + 2);
  v41[3] = v43;
  v41[4] = *((_OWORD *)v42 + 4);
  v44 = *((_OWORD *)v42 + 1);
  *v41 = *(_OWORD *)v42;
  v41[1] = v44;
  *(_OWORD *)(v14 + v16[11]) = *(_OWORD *)&v15[v16[11]];
  v45 = v16[12];
  v46 = (_OWORD *)(v14 + v45);
  v47 = &v15[v45];
  v48 = *((_OWORD *)v47 + 1);
  *v46 = *(_OWORD *)v47;
  v46[1] = v48;
  v46[2] = *((_OWORD *)v47 + 2);
  *(_QWORD *)(v14 + v16[13]) = *(_QWORD *)&v15[v16[13]];
  *(_QWORD *)(v14 + v16[14]) = *(_QWORD *)&v15[v16[14]];
  *(_BYTE *)(v14 + v16[15]) = v15[v16[15]];
  *(_OWORD *)(v14 + v16[16]) = *(_OWORD *)&v15[v16[16]];
  v49 = v16[17];
  v50 = (void *)(v14 + v49);
  v51 = &v15[v49];
  if (v119(&v15[v49], 1, v28))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    v53 = v29;
  }
  else
  {
    v54 = v51;
    v53 = v29;
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v50, v54, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v50, 0, 1, v28);
  }
  v55 = v16[18];
  v56 = (void *)(v14 + v55);
  v57 = &v15[v55];
  if (v119(v57, 1, v28))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v53 + 32))(v56, v57, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v56, 0, 1, v28);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  a3 = v122;
LABEL_31:
  v59 = *(int *)(a3 + 28);
  v60 = (_QWORD *)(a1 + v59);
  v61 = (uint64_t *)(a2 + v59);
  v63 = *v61;
  v62 = v61[1];
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A15E038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A15E0D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81B0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

void sub_20A15E15C()
{
  unint64_t v0;

  sub_20A1362BC(319, &qword_2545D9770, (void (*)(uint64_t))type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for MobileDocumentReaderResponse.MobileIdentityDocumentElements(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20A1A8B5C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *v10;
      sub_20A120BD8(*v10, v11);
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v18 = *(_QWORD *)((char *)a2 + v15);
    v16[8] = v17[8];
    *(_QWORD *)((char *)a1 + v15) = v18;
    v19 = a3[9];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_20A1A8AD8();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v26 = a3[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 1);
    if (v29 == 1)
    {
      v30 = *((_OWORD *)v28 + 3);
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
      *((_OWORD *)v27 + 3) = v30;
      *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
      v31 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v31;
    }
    else
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      v32 = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
      *((_QWORD *)v27 + 3) = v32;
      v33 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 5) = v33;
      v34 = *((_QWORD *)v28 + 7);
      *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
      *((_QWORD *)v27 + 7) = v34;
      v35 = *((_QWORD *)v28 + 9);
      *((_QWORD *)v27 + 8) = *((_QWORD *)v28 + 8);
      *((_QWORD *)v27 + 9) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v36 = a3[11];
    v37 = a3[12];
    v38 = (_QWORD *)((char *)a1 + v36);
    v39 = (_QWORD *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (char *)a1 + v37;
    v42 = (char *)a2 + v37;
    v43 = *(_QWORD *)((char *)a2 + v37 + 8);
    swift_bridgeObjectRetain();
    if (v43 == 1)
    {
      v44 = *((_OWORD *)v42 + 1);
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v44;
      *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
    }
    else
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v43;
      v45 = *((_QWORD *)v42 + 3);
      *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
      *((_QWORD *)v41 + 3) = v45;
      v46 = *((_QWORD *)v42 + 4);
      v47 = *((_QWORD *)v42 + 5);
      *((_QWORD *)v41 + 4) = v46;
      *((_QWORD *)v41 + 5) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v48 = a3[14];
    *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    *(_QWORD *)((char *)a1 + v48) = *(_QWORD *)((char *)a2 + v48);
    v49 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    v50 = (_QWORD *)((char *)a1 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = a3[17];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v55, 1, v22))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v54, v55, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v54, 0, 1, v22);
    }
    v57 = a3[18];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    if (v24(v59, 1, v22))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v58, v59, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v58, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t destroy for MobileDocumentReaderResponse.MobileIdentityDocumentElements(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v4 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + a2[6]);
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_20A120E74(*v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[9];
  v8 = sub_20A1A8AD8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  if (*(_QWORD *)(a1 + a2[10] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1 + a2[17];
  if (!v10(v11, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  v12 = a1 + a2[18];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v12, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  return result;
}

uint64_t initializeWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;

  v6 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_20A120BD8(*v9, v10);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *(_QWORD *)(a2 + v13);
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)(a1 + v13) = v16;
  v17 = a3[9];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_20A1A8AD8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v24 = a3[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 8);
  if (v27 == 1)
  {
    v28 = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v25 + 48) = v28;
    *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
    v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
  }
  else
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_QWORD *)(v25 + 8) = v27;
    v30 = *(_QWORD *)(v26 + 24);
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
    *(_QWORD *)(v25 + 24) = v30;
    v31 = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    *(_QWORD *)(v25 + 40) = v31;
    v32 = *(_QWORD *)(v26 + 56);
    *(_QWORD *)(v25 + 48) = *(_QWORD *)(v26 + 48);
    *(_QWORD *)(v25 + 56) = v32;
    v33 = *(_QWORD *)(v26 + 72);
    *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
    *(_QWORD *)(v25 + 72) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v34 = a3[11];
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v34);
  v37 = (_QWORD *)(a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = a1 + v35;
  v40 = a2 + v35;
  v41 = *(_QWORD *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  if (v41 == 1)
  {
    v42 = *(_OWORD *)(v40 + 16);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *(_OWORD *)(v39 + 16) = v42;
    *(_OWORD *)(v39 + 32) = *(_OWORD *)(v40 + 32);
  }
  else
  {
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *(_QWORD *)(v39 + 8) = v41;
    v43 = *(_QWORD *)(v40 + 24);
    *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
    *(_QWORD *)(v39 + 24) = v43;
    v44 = *(_QWORD *)(v40 + 32);
    v45 = *(_QWORD *)(v40 + 40);
    *(_QWORD *)(v39 + 32) = v44;
    *(_QWORD *)(v39 + 40) = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v46 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);
  v47 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a3[17];
  v52 = (void *)(a1 + v51);
  v53 = (const void *)(a2 + v51);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v53, 1, v20))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v52, v53, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v52, 0, 1, v20);
  }
  v55 = a3[18];
  v56 = (void *)(a1 + v55);
  v57 = (const void *)(a2 + v55);
  if (v22(v57, 1, v20))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v56, v57, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v56, 0, 1, v20);
  }
  return a1;
}

uint64_t assignWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  int v63;
  int v64;
  uint64_t v65;

  v6 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_20A120BD8(v11, v10);
      *v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_20A122530((uint64_t)v8);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_20A120BD8(v12, v10);
  v13 = *v8;
  v14 = v8[1];
  *v8 = v12;
  v8[1] = v10;
  sub_20A120E74(v13, v14);
LABEL_8:
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 8) = *((_BYTE *)v17 + 8);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = sub_20A1A8AD8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
LABEL_13:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_14:
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)(a1 + v28 + 8);
  v32 = *(_QWORD *)(a2 + v28 + 8);
  if (v31 == 1)
  {
    if (v32 == 1)
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v33 = *(_OWORD *)(v30 + 16);
      v34 = *(_OWORD *)(v30 + 32);
      v35 = *(_OWORD *)(v30 + 64);
      *(_OWORD *)(v29 + 48) = *(_OWORD *)(v30 + 48);
      *(_OWORD *)(v29 + 64) = v35;
      *(_OWORD *)(v29 + 16) = v33;
      *(_OWORD *)(v29 + 32) = v34;
    }
    else
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
      *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
      *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
      *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
      *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
      *(_QWORD *)(v29 + 48) = *(_QWORD *)(v30 + 48);
      *(_QWORD *)(v29 + 56) = *(_QWORD *)(v30 + 56);
      *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
      *(_QWORD *)(v29 + 72) = *(_QWORD *)(v30 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v32 == 1)
  {
    sub_20A122564(v29);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v36 = *(_OWORD *)(v30 + 64);
    v38 = *(_OWORD *)(v30 + 16);
    v37 = *(_OWORD *)(v30 + 32);
    *(_OWORD *)(v29 + 48) = *(_OWORD *)(v30 + 48);
    *(_OWORD *)(v29 + 64) = v36;
    *(_OWORD *)(v29 + 16) = v38;
    *(_OWORD *)(v29 + 32) = v37;
  }
  else
  {
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
    *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v29 + 48) = *(_QWORD *)(v30 + 48);
    *(_QWORD *)(v29 + 56) = *(_QWORD *)(v30 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v29 + 64) = *(_QWORD *)(v30 + 64);
    *(_QWORD *)(v29 + 72) = *(_QWORD *)(v30 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v39 = a3[11];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[12];
  v43 = a1 + v42;
  v44 = (__int128 *)(a2 + v42);
  v45 = *(_QWORD *)(a1 + v42 + 8);
  v46 = *(_QWORD *)(a2 + v42 + 8);
  if (v45 == 1)
  {
    if (v46 == 1)
    {
      v47 = *v44;
      v48 = v44[2];
      *(_OWORD *)(v43 + 16) = v44[1];
      *(_OWORD *)(v43 + 32) = v48;
      *(_OWORD *)v43 = v47;
    }
    else
    {
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *(_QWORD *)(v43 + 8) = *((_QWORD *)v44 + 1);
      *(_QWORD *)(v43 + 16) = *((_QWORD *)v44 + 2);
      *(_QWORD *)(v43 + 24) = *((_QWORD *)v44 + 3);
      *(_QWORD *)(v43 + 32) = *((_QWORD *)v44 + 4);
      *(_QWORD *)(v43 + 40) = *((_QWORD *)v44 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v46 == 1)
  {
    sub_20A122598(v43);
    v50 = v44[1];
    v49 = v44[2];
    *(_OWORD *)v43 = *v44;
    *(_OWORD *)(v43 + 16) = v50;
    *(_OWORD *)(v43 + 32) = v49;
  }
  else
  {
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = *((_QWORD *)v44 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v43 + 16) = *((_QWORD *)v44 + 2);
    *(_QWORD *)(v43 + 24) = *((_QWORD *)v44 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v43 + 32) = *((_QWORD *)v44 + 4);
    *(_QWORD *)(v43 + 40) = *((_QWORD *)v44 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v51 = a3[16];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = a3[17];
  v55 = (void *)(a1 + v54);
  v56 = (void *)(a2 + v54);
  v57 = v24((void *)(a1 + v54), 1, v22);
  v58 = v24(v56, 1, v22);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v55, v56, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v55, 0, 1, v22);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v55, v22);
LABEL_33:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v55, v56, v22);
LABEL_34:
  v60 = a3[18];
  v61 = (void *)(a1 + v60);
  v62 = (void *)(a2 + v60);
  v63 = v24((void *)(a1 + v60), 1, v22);
  v64 = v24(v62, 1, v22);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v61, v62, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v61, v22);
    goto LABEL_39;
  }
  if (v64)
  {
LABEL_39:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v61, v62, v22);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v61, 0, 1, v22);
  return a1;
}

uint64_t initializeWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;

  v6 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(a1 + v9) = v12;
  v13 = a3[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_20A1A8AD8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = a3[10];
  v21 = a3[11];
  v22 = (_OWORD *)(a1 + v20);
  v23 = (_OWORD *)(a2 + v20);
  v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  v22[4] = v23[4];
  v25 = v23[1];
  *v22 = *v23;
  v22[1] = v25;
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v26 = a3[12];
  v27 = a3[13];
  v28 = (_OWORD *)(a1 + v26);
  v29 = (_OWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v28[2] = v29[2];
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  v31 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v18((const void *)(a2 + v32), 1, v16))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v33, v34, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v16);
  }
  v36 = a3[18];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v18(v38, 1, v16))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v37, v38, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v37, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  int v62;
  int v63;
  uint64_t v64;

  v6 = sub_20A1A8B5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = *(_QWORD *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_20A122530(v8);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v11;
  sub_20A120E74(v12, v10);
LABEL_6:
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_20A1A8AD8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_11:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_12:
  v26 = a3[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(_QWORD *)(a1 + v26 + 8) == 1)
  {
LABEL_15:
    v30 = *(_OWORD *)(v28 + 48);
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
    *(_OWORD *)(v27 + 48) = v30;
    *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
    v31 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v31;
    goto LABEL_17;
  }
  v29 = *(_QWORD *)(v28 + 8);
  if (v29 == 1)
  {
    sub_20A122564(v27);
    goto LABEL_15;
  }
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v28 + 24);
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 24) = v32;
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(v28 + 40);
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  *(_QWORD *)(v27 + 40) = v33;
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v28 + 56);
  *(_QWORD *)(v27 + 48) = *(_QWORD *)(v28 + 48);
  *(_QWORD *)(v27 + 56) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v28 + 72);
  *(_QWORD *)(v27 + 64) = *(_QWORD *)(v28 + 64);
  *(_QWORD *)(v27 + 72) = v35;
  swift_bridgeObjectRelease();
LABEL_17:
  v36 = a3[11];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[12];
  v42 = a1 + v41;
  v43 = a2 + v41;
  if (*(_QWORD *)(a1 + v41 + 8) == 1)
  {
LABEL_20:
    v45 = *(_OWORD *)(v43 + 16);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 16) = v45;
    *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
    goto LABEL_22;
  }
  v44 = *(_QWORD *)(v43 + 8);
  if (v44 == 1)
  {
    sub_20A122598(v42);
    goto LABEL_20;
  }
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_QWORD *)(v42 + 8) = v44;
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v43 + 24);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
  *(_QWORD *)(v42 + 24) = v46;
  swift_bridgeObjectRelease();
  v47 = *(_QWORD *)(v43 + 40);
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 40) = v47;
  swift_bridgeObjectRelease();
LABEL_22:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  v48 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v53 = a3[17];
  v54 = (void *)(a1 + v53);
  v55 = (void *)(a2 + v53);
  v56 = v22((void *)(a1 + v53), 1, v20);
  v57 = v22(v55, 1, v20);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v54, v55, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v54, 0, 1, v20);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v57)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v54, v20);
LABEL_27:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v54, v55, v20);
LABEL_28:
  v59 = a3[18];
  v60 = (void *)(a1 + v59);
  v61 = (void *)(a2 + v59);
  v62 = v22((void *)(a1 + v59), 1, v20);
  v63 = v22(v61, 1, v20);
  if (!v62)
  {
    if (!v63)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v60, v61, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v60, v20);
    goto LABEL_33;
  }
  if (v63)
  {
LABEL_33:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v60, v61, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v60, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A15F828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_20A1A8B5C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A15F8E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_20A1A8B5C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_20A15F988()
{
  unint64_t v0;
  unint64_t v1;

  sub_20A1A8B5C();
  if (v0 <= 0x3F)
  {
    sub_20A1362BC(319, &qword_2545D9788, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t destroy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_20A1A8AD8();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_20A1A8AD8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_20A1A8AD8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8AD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_20A1A8AD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8AD8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = (char *)a2 + v16;
  v19 = v12(&a1[v16], 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A160660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A1606EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_20A160764()
{
  unint64_t v0;

  sub_20A1362BC(319, &qword_2545D9788, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *__dst;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v13;
      v27 = v8;
      v14 = (char *)a2 + v13;
      v15 = sub_20A1A8AD8();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      v19 = v16;
      v20 = *(int *)(v7 + 28);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v17((char *)a2 + v20, 1, v15))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v22, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v7);
    }
    v24 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v2 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(v2 + 24);
    v4 = sub_20A1A8AD8();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v7 = a1 + *(int *)(v2 + 28);
    if (!v6(v7, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *__dst;
  uint64_t v25;

  v6 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = *(int *)(v6 + 24);
    __dst = (char *)a1 + v11;
    v25 = v7;
    v12 = (char *)a2 + v11;
    v13 = sub_20A1A8AD8();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v17 = v14;
    v18 = *(int *)(v6 + 28);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    if (v15((char *)a2 + v18, 1, v13))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  char *__dst;
  uint64_t v41;

  v6 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_20A124284((uint64_t)a1, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
      goto LABEL_7;
    }
    v18 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *(int *)(v6 + 24);
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = sub_20A1A8AD8();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v25 = v24(v20, 1, v22);
    v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_19:
        v33 = *(int *)(v6 + 28);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = v24(&a1[v33], 1, v22);
        v37 = v24(v35, 1, v22);
        if (v36)
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v34, v35, v22);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v34, 0, 1, v22);
LABEL_25:
            a3 = v18;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v34, v35, v22);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v22);
        }
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    }
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_26;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  v11 = *(int *)(v6 + 24);
  __dst = &a1[v11];
  v41 = a3;
  v12 = &a2[v11];
  v13 = sub_20A1A8AD8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  v27 = v14;
  v28 = *(int *)(v6 + 28);
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v15(&a2[v28], 1, v13))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v29, v30, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v13);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  a3 = v41;
LABEL_26:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_20A1A8AD8();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = *(int *)(v6 + 28);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if (v15((char *)a2 + v17, 1, v13))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  return a1;
}

char *assignWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  size_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;

  v6 = type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_20A124284((uint64_t)a1, type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
      goto LABEL_7;
    }
    v22 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v22;
    swift_bridgeObjectRelease();
    v23 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v23;
    swift_bridgeObjectRelease();
    v24 = *(int *)(v6 + 24);
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = sub_20A1A8AD8();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v25, 1, v27);
    v31 = v29(v26, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_21:
        v38 = *(int *)(v6 + 28);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = v29(&a1[v38], 1, v27);
        v42 = v29(v40, 1, v27);
        if (v41)
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v39, v40, v27);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v39, 0, 1, v27);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v39, v40, v27);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v28 + 8))(v39, v27);
        }
        v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8) - 8) + 64);
        v20 = v39;
        v21 = v40;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318) - 8) + 64);
    v20 = a1;
    v21 = a2;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_17;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = *(int *)(v6 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_20A1A8AD8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v32 = *(int *)(v6 + 28);
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v17(&a2[v32], 1, v15))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v34, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A16173C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A1617C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8318);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_20A161844()
{
  unint64_t v0;

  sub_20A1362BC(319, &qword_2545D97B0, (void (*)(uint64_t))type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_20A1A8AD8();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 28);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20A1A8AD8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_QWORD *initializeWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20A1A8AD8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  if (v13(v17, 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

char *assignWithCopy for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8AD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8AD8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 28);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

char *assignWithTake for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = sub_20A1A8AD8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = &a1[v17];
  v19 = (char *)a2 + v17;
  v20 = v13(&a1[v17], 1, v11);
  v21 = v13(v19, 1, v11);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v18, v19, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A16219C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A162228(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D81A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_20A1622A0()
{
  unint64_t v0;

  sub_20A1362BC(319, &qword_2545D9788, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction;
}

uint64_t destroy for IdentityDocumentElement()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20A1624B4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV16IssuingAuthorityVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV16IssuingAuthorityVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV16IssuingAuthorityVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV16IssuingAuthorityVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_20A162810 + 4 * byte_20A1B04D9[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_20A162844 + 4 * byte_20A1B04D4[v4]))();
}

uint64_t sub_20A162844(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A16284C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A162854);
  return result;
}

uint64_t sub_20A162860(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A162868);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_20A16286C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162874(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.CodingKeys;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV16IssuingAuthorityV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A16294C + 4 * byte_20A1B04E3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A162980 + 4 * byte_20A1B04DE[v4]))();
}

uint64_t sub_20A162980(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162988(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A162990);
  return result;
}

uint64_t sub_20A16299C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1629A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A1629A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1629B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderDeviceEngagementType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV19DHSComplianceStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A162AA8 + 4 * byte_20A1B04ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A162ADC + 4 * byte_20A1B04E8[v4]))();
}

uint64_t sub_20A162ADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162AE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A162AECLL);
  return result;
}

uint64_t sub_20A162AF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A162B00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A162B04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162B0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_20A162B18(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CompliantCodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CompliantCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.NoncompliantCodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.NoncompliantCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.FemaleCodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.FemaleCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.MaleCodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.MaleCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotApplicableCodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotApplicableCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotSpecifiedCodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotSpecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.UnknownCodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.UnknownCodingKeys;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV3SexOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_20A162C00 + 4 * byte_20A1B04F7[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_20A162C34 + 4 * byte_20A1B04F2[v4]))();
}

uint64_t sub_20A162C34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162C3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A162C44);
  return result;
}

uint64_t sub_20A162C50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A162C58);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_20A162C5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162C64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.CodingKeys;
}

uint64_t _s7CoreIDV28MobileDocumentReaderResponseV30MobileIdentityDocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A162CCC + 4 * byte_20A1B0501[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A162D00 + 4 * byte_20A1B04FC[v4]))();
}

uint64_t sub_20A162D00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162D08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A162D10);
  return result;
}

uint64_t sub_20A162D1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A162D24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A162D28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A162D30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderResponse.CodingKeys()
{
  return &type metadata for MobileDocumentReaderResponse.CodingKeys;
}

unint64_t sub_20A162D50()
{
  unint64_t result;

  result = qword_2545D97C8;
  if (!qword_2545D97C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1214, &type metadata for MobileDocumentReaderResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D97C8);
  }
  return result;
}

unint64_t sub_20A162D98()
{
  unint64_t result;

  result = qword_2545D97D0;
  if (!qword_2545D97D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B12CC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D97D0);
  }
  return result;
}

unint64_t sub_20A162DE0()
{
  unint64_t result;

  result = qword_2545D97D8;
  if (!qword_2545D97D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1514, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D97D8);
  }
  return result;
}

unint64_t sub_20A162E28()
{
  unint64_t result;

  result = qword_2545D97E0;
  if (!qword_2545D97E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B166C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D97E0);
  }
  return result;
}

unint64_t sub_20A162E70()
{
  unint64_t result;

  result = qword_2545D97E8;
  if (!qword_2545D97E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1724, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D97E8);
  }
  return result;
}

unint64_t sub_20A162EB8()
{
  unint64_t result;

  result = qword_2545D97F0;
  if (!qword_2545D97F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B17DC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D97F0);
  }
  return result;
}

unint64_t sub_20A162F00()
{
  unint64_t result;

  result = qword_2545D97F8;
  if (!qword_2545D97F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1894, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D97F8);
  }
  return result;
}

unint64_t sub_20A162F48()
{
  unint64_t result;

  result = qword_2545D9800;
  if (!qword_2545D9800)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B194C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9800);
  }
  return result;
}

unint64_t sub_20A162F90()
{
  unint64_t result;

  result = qword_2545D9808;
  if (!qword_2545D9808)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1A04, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9808);
  }
  return result;
}

unint64_t sub_20A162FD8()
{
  unint64_t result;

  result = qword_2545D9810;
  if (!qword_2545D9810)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1ABC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9810);
  }
  return result;
}

unint64_t sub_20A163020()
{
  unint64_t result;

  result = qword_2545D9818;
  if (!qword_2545D9818)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1B74, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9818);
  }
  return result;
}

unint64_t sub_20A163068()
{
  unint64_t result;

  result = qword_2545D9820;
  if (!qword_2545D9820)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1C2C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9820);
  }
  return result;
}

unint64_t sub_20A1630B0()
{
  unint64_t result;

  result = qword_2545D9828;
  if (!qword_2545D9828)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1B9C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9828);
  }
  return result;
}

unint64_t sub_20A1630F8()
{
  unint64_t result;

  result = qword_2545D9830;
  if (!qword_2545D9830)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1BC4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9830);
  }
  return result;
}

unint64_t sub_20A163140()
{
  unint64_t result;

  result = qword_2545D9838;
  if (!qword_2545D9838)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1AE4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9838);
  }
  return result;
}

unint64_t sub_20A163188()
{
  unint64_t result;

  result = qword_2545D9840;
  if (!qword_2545D9840)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1B0C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9840);
  }
  return result;
}

unint64_t sub_20A1631D0()
{
  unint64_t result;

  result = qword_2545D9848;
  if (!qword_2545D9848)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1A2C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9848);
  }
  return result;
}

unint64_t sub_20A163218()
{
  unint64_t result;

  result = qword_2545D9850;
  if (!qword_2545D9850)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1A54, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9850);
  }
  return result;
}

unint64_t sub_20A163260()
{
  unint64_t result;

  result = qword_2545D9858;
  if (!qword_2545D9858)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1974, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9858);
  }
  return result;
}

unint64_t sub_20A1632A8()
{
  unint64_t result;

  result = qword_2545D9860;
  if (!qword_2545D9860)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B199C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9860);
  }
  return result;
}

unint64_t sub_20A1632F0()
{
  unint64_t result;

  result = qword_2545D9868;
  if (!qword_2545D9868)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B18BC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9868);
  }
  return result;
}

unint64_t sub_20A163338()
{
  unint64_t result;

  result = qword_2545D9870;
  if (!qword_2545D9870)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B18E4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9870);
  }
  return result;
}

unint64_t sub_20A163380()
{
  unint64_t result;

  result = qword_2545D9878;
  if (!qword_2545D9878)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1804, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9878);
  }
  return result;
}

unint64_t sub_20A1633C8()
{
  unint64_t result;

  result = qword_2545D9880;
  if (!qword_2545D9880)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B182C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9880);
  }
  return result;
}

unint64_t sub_20A163410()
{
  unint64_t result;

  result = qword_2545D9888;
  if (!qword_2545D9888)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B174C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9888);
  }
  return result;
}

unint64_t sub_20A163458()
{
  unint64_t result;

  result = qword_2545D9890;
  if (!qword_2545D9890)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1774, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9890);
  }
  return result;
}

unint64_t sub_20A1634A0()
{
  unint64_t result;

  result = qword_2545D9898;
  if (!qword_2545D9898)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1694, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9898);
  }
  return result;
}

unint64_t sub_20A1634E8()
{
  unint64_t result;

  result = qword_2545D98A0;
  if (!qword_2545D98A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B16BC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98A0);
  }
  return result;
}

unint64_t sub_20A163530()
{
  unint64_t result;

  result = qword_2545D98A8;
  if (!qword_2545D98A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B158C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98A8);
  }
  return result;
}

unint64_t sub_20A163578()
{
  unint64_t result;

  result = qword_2545D98B0;
  if (!qword_2545D98B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B15B4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98B0);
  }
  return result;
}

unint64_t sub_20A1635C0()
{
  unint64_t result;

  result = qword_2545D98B8;
  if (!qword_2545D98B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B153C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.NoncompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98B8);
  }
  return result;
}

unint64_t sub_20A163608()
{
  unint64_t result;

  result = qword_2545D98C0;
  if (!qword_2545D98C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1564, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.NoncompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98C0);
  }
  return result;
}

unint64_t sub_20A163650()
{
  unint64_t result;

  result = qword_2545D98C8;
  if (!qword_2545D98C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B15DC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98C8);
  }
  return result;
}

unint64_t sub_20A163698()
{
  unint64_t result;

  result = qword_2545D98D0;
  if (!qword_2545D98D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1604, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98D0);
  }
  return result;
}

unint64_t sub_20A1636E0()
{
  unint64_t result;

  result = qword_2545D98D8;
  if (!qword_2545D98D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1434, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.FemaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98D8);
  }
  return result;
}

unint64_t sub_20A163728()
{
  unint64_t result;

  result = qword_2545D98E0;
  if (!qword_2545D98E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B145C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.FemaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98E0);
  }
  return result;
}

unint64_t sub_20A163770()
{
  unint64_t result;

  result = qword_2545D98E8;
  if (!qword_2545D98E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B13E4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.MaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98E8);
  }
  return result;
}

unint64_t sub_20A1637B8()
{
  unint64_t result;

  result = qword_2545D98F0;
  if (!qword_2545D98F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B140C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.MaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98F0);
  }
  return result;
}

unint64_t sub_20A163800()
{
  unint64_t result;

  result = qword_2545D98F8;
  if (!qword_2545D98F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1394, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotApplicableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D98F8);
  }
  return result;
}

unint64_t sub_20A163848()
{
  unint64_t result;

  result = qword_2545D9900;
  if (!qword_2545D9900)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B13BC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotApplicableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9900);
  }
  return result;
}

unint64_t sub_20A163890()
{
  unint64_t result;

  result = qword_2545D9908;
  if (!qword_2545D9908)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1344, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotSpecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9908);
  }
  return result;
}

unint64_t sub_20A1638D8()
{
  unint64_t result;

  result = qword_2545D9910;
  if (!qword_2545D9910)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B136C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.NotSpecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9910);
  }
  return result;
}

unint64_t sub_20A163920()
{
  unint64_t result;

  result = qword_2545D9918;
  if (!qword_2545D9918)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B12F4, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9918);
  }
  return result;
}

unint64_t sub_20A163968()
{
  unint64_t result;

  result = qword_2545D9920;
  if (!qword_2545D9920)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B131C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9920);
  }
  return result;
}

unint64_t sub_20A1639B0()
{
  unint64_t result;

  result = qword_2545D9928;
  if (!qword_2545D9928)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1484, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9928);
  }
  return result;
}

unint64_t sub_20A1639F8()
{
  unint64_t result;

  result = qword_2545D9930;
  if (!qword_2545D9930)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B14AC, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9930);
  }
  return result;
}

unint64_t sub_20A163A40()
{
  unint64_t result;

  result = qword_2545D9938;
  if (!qword_2545D9938)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B123C, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9938);
  }
  return result;
}

unint64_t sub_20A163A88()
{
  unint64_t result;

  result = qword_2545D9940;
  if (!qword_2545D9940)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1264, &type metadata for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9940);
  }
  return result;
}

unint64_t sub_20A163AD0()
{
  unint64_t result;

  result = qword_2545D9948;
  if (!qword_2545D9948)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B1184, &type metadata for MobileDocumentReaderResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9948);
  }
  return result;
}

unint64_t sub_20A163B18()
{
  unint64_t result;

  result = qword_2545D9950;
  if (!qword_2545D9950)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B11AC, &type metadata for MobileDocumentReaderResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9950);
  }
  return result;
}

uint64_t sub_20A163B5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65736E6F70736572 && a2 == 0xEC00000061746144;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BD910 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020A1BD930 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726575737369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A163D18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746565727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F436F7369 && a2 == 0xEE0065646F437972)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_20A163F44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C616D6566 && a2 == 0xE600000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701601645 && a2 == 0xE400000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696C707041746F6ELL && a2 == 0xED0000656C626163 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6963657053746F6ELL && a2 == 0xEC00000064656966 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_20A164184(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E61696C706D6F63 && a2 == 0xE900000000000074;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C706D6F636E6F6ELL && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A164298(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852270963 && a2 == 0xE400000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A1643C4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000020A1BD950 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000065 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365646F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A1645A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000065 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A164790(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A164888(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x43656C6369686576 && a2 == 0xEC0000007373616CLL;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A1BD970 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A1BD990)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A1649E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636964736972756ALL && a2 == 0xEC0000006E6F6974 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F436F7369 && a2 == 0xEE0065646F437972)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A164B68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x706D6F43656D616ELL && a2 == 0xEE0073746E656E6FLL;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7890291 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xEC00000061746144 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A1BD9B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C616E6F6974616ELL && a2 == 0xEB00000000797469 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BC630 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BD9D0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A1BC610 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE007265626D754ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5D0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BC5F0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t *sub_20A165190(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1[10];
  v2 = a1[11];
  sub_20A15B768(*a1, a1[1]);
  sub_20A15B768(v4, v2);
  return a1;
}

uint64_t sub_20A1652D4()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MobileDocumentReaderDelegateProxy()
{
  return objc_opt_self();
}

id DigitalPresentmentSession.__allocating_init()()
{
  swift_allocObject();
  return DigitalPresentmentSession.init()();
}

id DigitalPresentmentSession.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  objc_super v6;
  _OWORD v7[2];

  v1 = v0;
  swift_defaultActor_initialize();
  v2 = (void *)objc_opt_self();
  swift_retain();
  v3 = objc_msgSend(v2, sel_interfaceWithProtocol_, &unk_2545FA9F0);
  memset(v7, 0, sizeof(v7));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9970);
  swift_allocObject();
  v4 = sub_20A1450C8(0xD00000000000002ALL, 0x800000020A1BDAB0, (uint64_t)v3, (uint64_t)sub_20A16545C, 0, (uint64_t)sub_20A165468, 0, 0, (uint64_t)v7, (uint64_t)sub_20A165474, 0);

  v1[14] = v4;
  swift_release();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DigitalPresentmentSession();
  return objc_msgSendSuper2(&v6, sel_init);
}

void sub_20A16545C()
{
  sub_20A139EF0("DigitalPresentmentSession connection invalidated");
}

void sub_20A165468()
{
  sub_20A139EF0("DigitalPresentmentSession connection interrupted");
}

id sub_20A165474()
{
  id v0;
  void *v1;
  id v2;

  sub_20A1A8DB4();
  v0 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v1 = (void *)sub_20A1A8D9C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v1, 0, 0);

  return v2;
}

uint64_t sub_20A16551C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8970);
  v2[9] = swift_task_alloc();
  v3 = type metadata accessor for IdentityDocumentDescriptor(0);
  v2[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 + 64);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A1655B4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  *(_QWORD *)(v0 + 120) = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8FA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "DigitalPresentmentSession checkCanRequestDocument", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);

  v8 = swift_unknownObjectRetain();
  sub_20A17D198(v8, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    sub_20A127E0C(*(_QWORD *)(v0 + 72), &qword_2545D8970);
    v9 = sub_20A1A8D24();
    v10 = sub_20A1A8FAC();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_20A10F000, v9, v10, "DigitalPresentmentSession checkCanRequestDocument invalid document descriptor", v11, 2u);
      MEMORY[0x20BD214DC](v11, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 64);
    sub_20A135B44(*(_QWORD *)(v0 + 72), v14);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v16 + 112);
    sub_20A135B88(v14, v13);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    *(_QWORD *)(v0 + 136) = v18;
    sub_20A135B44(v13, v18 + v17);
    return swift_task_switch();
  }
}

uint64_t sub_20A1657F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[16];
  v1 = v0[17];
  v3 = (_QWORD *)swift_task_alloc();
  v0[18] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545D9990;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[19] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[20] = v5;
  *v5 = v0;
  v5[1] = sub_20A1658B0;
  return sub_20A1A9264();
}

uint64_t sub_20A1658B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_BYTE *)(v2 + 177) = *(_BYTE *)(v2 + 176);
  }
  return swift_task_switch();
}

uint64_t sub_20A165948()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_20A1A8D24();
  v2 = sub_20A1A8FA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_20A10F000, v1, v2, "DigitalPresentmentSession checkCanRequestDocument returned successfully", v3, 2u);
    MEMORY[0x20BD214DC](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 112);

  sub_20A135DF0(v4);
  v5 = *(unsigned __int8 *)(v0 + 177);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_20A165A18()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A165A74()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 168);
  sub_20A135DF0(*(_QWORD *)(v0 + 112));
  v2 = v1;
  v3 = v1;
  v4 = sub_20A1A8D24();
  v5 = sub_20A1A8FAC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 168);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_20A1A92C4();
    *(_QWORD *)(v0 + 48) = sub_20A146EE8(v9, v10, &v13);
    sub_20A1A8FF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A10F000, v4, v5, "DigitalPresentmentSession checkCanRequestDocument error from xpc: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD214DC](v8, -1, -1);
    MEMORY[0x20BD214DC](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 168);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_20A165C48(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[17] = a1;
  v3[18] = a3;
  type metadata accessor for IdentityDocumentDescriptor(0);
  v5 = swift_task_alloc();
  v6 = *a2;
  v3[19] = v5;
  v3[20] = v6;
  return swift_task_switch();
}

uint64_t sub_20A165CA8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(void **)(v0 + 160);
  sub_20A135B88(*(_QWORD *)(v0 + 144), v2);
  v3 = (objc_class *)type metadata accessor for XPCIdentityDocumentDescriptor(0);
  v4 = objc_allocWithZone(v3);
  sub_20A135B88(v2, (uint64_t)v4 + OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 168) = v5;
  sub_20A135DF0(v2);
  *(_QWORD *)(v0 + 56) = v0 + 184;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A165DB0;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_20A165EA8;
  v7[3] = &block_descriptor_69;
  v7[4] = v6;
  objc_msgSend(v1, sel_canRequestDocumentWithDescriptor_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_20A165DB0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A165E10()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);
  **(_BYTE **)(v0 + 136) = *(_BYTE *)(v0 + 184);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A165E5C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A165EA8(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A166060(uint64_t a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  v3[5] = v5;
  *v5 = v3;
  v5[1] = sub_20A1660DC;
  return sub_20A16551C(a1);
}

uint64_t sub_20A1660DC(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  uint64_t v5;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 32);
  v5 = *v1;
  swift_task_dealloc();
  swift_release();
  swift_unknownObjectRelease();
  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_20A16615C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = v1;
  return swift_task_switch();
}

uint64_t sub_20A166174()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[15] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8FA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "DigitalPresentmentSession requestDocument", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v5 = (void *)v0[13];
  v6 = v0[14];

  v7 = sub_20A136308(v5);
  v0[16] = v7;
  v0[17] = *(_QWORD *)(v6 + 112);
  v8 = swift_allocObject();
  v0[18] = v8;
  *(_QWORD *)(v8 + 16) = v7;
  v9 = v7;
  return swift_task_switch();
}

uint64_t sub_20A16629C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[17];
  v1 = v0[18];
  v3 = (_QWORD *)swift_task_alloc();
  v0[19] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545D99B8;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[20] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[21] = v5;
  type metadata accessor for DigitalPresentmentResponse();
  *v5 = v0;
  v5[1] = sub_20A166360;
  return sub_20A1A9264();
}

uint64_t sub_20A166360()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_QWORD *)(v2 + 184) = *(_QWORD *)(v2 + 64);
  }
  return swift_task_switch();
}

uint64_t sub_20A1663F8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  char *v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  v1 = sub_20A1A8D24();
  v2 = sub_20A1A8FA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_20A10F000, v1, v2, "DigitalPresentmentSession requestDocument returned successfully", v3, 2u);
    MEMORY[0x20BD214DC](v3, -1, -1);
  }
  v4 = *(char **)(v0 + 184);
  v5 = *(void **)(v0 + 128);

  v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC7CoreIDV26DigitalPresentmentResponse_encryptedData];
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC7CoreIDV26DigitalPresentmentResponse_encryptedData + 8];
  v8 = objc_allocWithZone((Class)DIIdentityDocument);
  sub_20A120BD8(v7, v6);
  v9 = (void *)sub_20A1A8C1C();
  v10 = objc_msgSend(v8, sel_initWithEncryptedData_, v9);
  sub_20A120E74(v7, v6);

  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_20A166520()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A166568()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  void *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22[2];

  v1 = *(void **)(v0 + 176);

  swift_release();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
  type metadata accessor for DIIdentityFatalError(0);
  if (swift_dynamicCast())
  {
    v3 = *(id *)(v0 + 48);
    v4 = sub_20A1A8D24();
    v5 = sub_20A1A8FAC();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v22[0] = v7;
      *(_DWORD *)v6 = 136315138;
      *(_QWORD *)(v0 + 88) = v3;
      sub_20A167E48();
      v8 = sub_20A1A92C4();
      *(_QWORD *)(v0 + 96) = sub_20A146EE8(v8, v9, v22);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A10F000, v4, v5, "DigitalPresentmentSession requestDocument fatal error from xpc: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v7, -1, -1);
      MEMORY[0x20BD214DC](v6, -1, -1);
    }
    else
    {

    }
    *(_QWORD *)(v0 + 80) = v3;
    sub_20A167E48();
    sub_20A1A92C4();
    return sub_20A1A90FC();
  }
  else
  {
    v10 = *(void **)(v0 + 176);

    v11 = v10;
    v12 = v10;
    v13 = sub_20A1A8D24();
    v14 = sub_20A1A8FAC();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(void **)(v0 + 176);
    if (v15)
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v22[0] = v18;
      *(_DWORD *)v17 = 136315138;
      swift_getErrorValue();
      v19 = sub_20A1A92C4();
      *(_QWORD *)(v0 + 72) = sub_20A146EE8(v19, v20, v22);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A10F000, v13, v14, "DigitalPresentmentSession requestDocument error from xpc: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v18, -1, -1);
      MEMORY[0x20BD214DC](v17, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A166918(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;

  v3[16] = a1;
  v3[17] = a3;
  v3[18] = *a2;
  return swift_task_switch();
}

uint64_t sub_20A166938()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[17];
  v1 = (void *)v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A1669D8;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_20A13B188;
  v4[3] = &block_descriptor_65;
  v4[4] = v3;
  objc_msgSend(v1, sel_requestDocument_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_20A1669D8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A166A38()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 128) = *(_QWORD *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A166A4C()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A166BBC(void *a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_20A166C4C;
  v7[13] = v6;
  v7[14] = a3;
  return swift_task_switch();
}

uint64_t sub_20A166C4C(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  swift_release();
  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 32);
  if (v3)
  {
    v8 = (void *)sub_20A1A8BB0();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](*(_QWORD *)(v6 + 32), a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_20A166D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A1A8F1C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_20A127E0C((uint64_t)v4, &qword_2545D99E0);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_20A1A8F10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_20A1A8EE0();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_2545D99F0;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_20A166EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a4;
  return swift_task_switch();
}

uint64_t sub_20A166F04()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8FA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "DigitalPresentmentSession cancelRequest", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v5 = v0[7];

  v6 = *(_QWORD *)(v5 + 112);
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  v7[2] = v6;
  v7[3] = &unk_2545D9A78;
  v7[4] = 0;
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  v9 = (_QWORD *)swift_task_alloc();
  v0[11] = v9;
  *v9 = v0;
  v9[1] = sub_20A167070;
  return sub_20A1A9264();
}

uint64_t sub_20A167070()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A1670E4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_20A1A8D24();
  v2 = sub_20A1A8FA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_20A10F000, v1, v2, "DigitalPresentmentSession cancelRequest returned successfully", v3, 2u);
    MEMORY[0x20BD214DC](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A167184()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  v2 = v1;
  v3 = v1;
  v4 = sub_20A1A8D24();
  v5 = sub_20A1A8FAC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 96);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_20A1A92C4();
    *(_QWORD *)(v0 + 48) = sub_20A146EE8(v9, v10, &v13);
    sub_20A1A8FF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A10F000, v4, v5, "DigitalPresentmentSession cancelRequest error from xpc: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD214DC](v8, -1, -1);
    MEMORY[0x20BD214DC](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 96);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A167344(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = *a2;
  return swift_task_switch();
}

uint64_t sub_20A167360()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_20A13C8D8;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A18F990;
  v3[3] = &block_descriptor_0;
  v3[4] = v2;
  objc_msgSend(v1, sel_cancelRequestWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_20A1673EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A1A8F1C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20A1A8F10();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20A127E0C(a1, &qword_2545D99E0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A1A8EE0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_20A167538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A1A8F1C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20A1A8F10();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20A127E0C(a1, &qword_2545D99E0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A1A8EE0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9A70);
  return swift_task_create();
}

uint64_t DigitalPresentmentSession.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DigitalPresentmentSession.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DigitalPresentmentSession.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A167708(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A16776C;
  return v6(a1);
}

uint64_t sub_20A16776C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A1677B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A1677D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_20A167884;
  return sub_20A1A927C();
}

uint64_t sub_20A167884()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_BYTE **)(v2 + 16);
  swift_task_dealloc();
  *v4 = *(_BYTE *)(v2 + 72);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A167908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_20A167924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  type metadata accessor for DigitalPresentmentResponse();
  *v3 = v0;
  v3[1] = sub_20A1679D8;
  return sub_20A1A927C();
}

uint64_t sub_20A1679D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD **)(v2 + 24);
  swift_task_dealloc();
  *v4 = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A167A5C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A167A90(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_20A167AF8;
  return v5(v2 + 32);
}

uint64_t sub_20A167AF8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t type metadata accessor for DigitalPresentmentSession()
{
  return objc_opt_self();
}

uint64_t sub_20A167B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityDocumentDescriptor(0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = sub_20A1A8CAC();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A167C14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityDocumentDescriptor(0) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A1465AC;
  return sub_20A165C48(a1, a2, v7);
}

uint64_t sub_20A167C94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2545D9998 + dword_2545D9998))(a1, v4, v5, v6);
}

void sub_20A167D14()
{
  uint64_t *v0;

  sub_20A13D1F0(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A167D20()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_20A167D44(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  v7[16] = a1;
  v7[17] = v6;
  v7[18] = *a2;
  return swift_task_switch();
}

uint64_t sub_20A167DBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A143D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2545D99C0 + dword_2545D99C0))(a1, v4, v5, v6);
}

void sub_20A167E3C()
{
  uint64_t *v0;

  sub_20A13D20C(v0[2], v0[3], v0[4]);
}

unint64_t sub_20A167E48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545D8208;
  if (!qword_2545D8208)
  {
    type metadata accessor for DIIdentityFatalError(255);
    result = MEMORY[0x20BD21434](&unk_20A1AC300, v1);
    atomic_store(result, (unint64_t *)&qword_2545D8208);
  }
  return result;
}

uint64_t sub_20A167E90()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A167EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A143D1C;
  v3[7] = v2;
  return swift_task_switch();
}

uint64_t sub_20A167F1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A167F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545D99F8 + dword_2545D99F8))(a1, v4);
}

uint64_t method lookup function for DigitalPresentmentSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DigitalPresentmentSession.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DigitalPresentmentSession.checkCanRequestDocument(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x68);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A168038;
  return v7(a1);
}

uint64_t sub_20A168038(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of DigitalPresentmentSession.requestDocument(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A1680FC;
  return v7(a1);
}

uint64_t sub_20A1680FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of DigitalPresentmentSession.cancelRequest()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t sub_20A168168()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A16819C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_20A1465AC;
  return ((uint64_t (*)(void *, void *, uint64_t))((char *)&dword_2545D9A20 + dword_2545D9A20))(v2, v3, v4);
}

uint64_t sub_20A16820C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2545D9F70 + dword_2545D9F70))(v2, v3, v4);
}

uint64_t sub_20A168288(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2545D9F78 + dword_2545D9F78))(a1, v4, v5, v6);
}

uint64_t sub_20A16830C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A168340()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, void *, uint64_t))((char *)&dword_2545D9A40 + dword_2545D9A40))(v2, v3, v4);
}

uint64_t objectdestroy_26Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A1683E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, int *))&a00[*(int *)a00])(a1, v4);
}

uint64_t sub_20A168450(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  return sub_20A13CD54(a1, v4, v5, v6);
}

void sub_20A1684BC()
{
  uint64_t *v0;

  sub_20A13D228(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A1684C8(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECA0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_20A1684D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13EC84(a1, v1[2], v1[3], v1[4]);
}

uint64_t MobileDocumentReaderDeviceEngagementType.hash(into:)()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 >> 60 == 15)
    return sub_20A1A9318();
  v3 = *v0;
  sub_20A1A9318();
  sub_20A120BD8(v3, v1);
  sub_20A1A8C34();
  return sub_20A127EE4(v3, v1);
}

uint64_t static MobileDocumentReaderDeviceEngagementType.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  if (v3 >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      sub_20A127ED0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      sub_20A127ED0(v2, v3);
      sub_20A1692C0(v2, v3);
      v6 = v7;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v5 >> 60 != 15)
  {
LABEL_5:
    sub_20A127ED0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
    sub_20A127ED0(v2, v3);
    v6 = 0;
    goto LABEL_7;
  }
  v6 = 1;
LABEL_7:
  sub_20A127EE4(v2, v3);
  sub_20A127EE4(v4, v5);
  return v6 & 1;
}

uint64_t sub_20A168634()
{
  _BYTE *v0;

  if (*v0)
    return 29297;
  else
    return 6514286;
}

uint64_t sub_20A16865C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A169C70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A168680()
{
  sub_20A169538();
  return sub_20A1A9360();
}

uint64_t sub_20A1686A8()
{
  sub_20A169538();
  return sub_20A1A936C();
}

uint64_t sub_20A1686D0()
{
  sub_20A1695C0();
  return sub_20A1A9360();
}

uint64_t sub_20A1686F8()
{
  sub_20A1695C0();
  return sub_20A1A936C();
}

uint64_t sub_20A168720()
{
  return 0x64616F6C796170;
}

uint64_t sub_20A168738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A1687CC()
{
  sub_20A16957C();
  return sub_20A1A9360();
}

uint64_t sub_20A1687F4()
{
  sub_20A16957C();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderDeviceEngagementType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9AF0);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9AF8);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B00);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A169538();
  sub_20A1A9354();
  if (v12 >> 60 == 15)
  {
    LOBYTE(v22) = 0;
    sub_20A1695C0();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  }
  else
  {
    LOBYTE(v22) = 1;
    v14 = v18;
    sub_20A120BD8(v18, v12);
    sub_20A16957C();
    sub_20A1A91D4();
    v22 = v14;
    v23 = v12;
    sub_20A1275D8();
    v15 = v20;
    sub_20A1A9228();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v15);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
    return sub_20A127EE4(v14, v12);
  }
}

uint64_t MobileDocumentReaderDeviceEngagementType.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_20A1A930C();
  sub_20A1A9318();
  if (v2 >> 60 != 15)
  {
    sub_20A120BD8(v1, v2);
    sub_20A1A8C34();
    sub_20A127EE4(v1, v2);
  }
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderDeviceEngagementType.init(from:)@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  char *v32;
  _QWORD *v33;
  __int128 v34;
  uint64_t v35;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B20);
  v4 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  v30 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B28);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B30);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20A169538();
  v15 = v35;
  sub_20A1A9348();
  if (v15)
    goto LABEL_7;
  v16 = v7;
  v28 = v6;
  v17 = v32;
  v35 = v11;
  v18 = sub_20A1A91C8();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v21 = sub_20A1A90B4();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v23 = &type metadata for MobileDocumentReaderDeviceEngagementType;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
LABEL_7:
    v24 = (uint64_t)v33;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v19 = v13;
  if ((*(_BYTE *)(v18 + 32) & 1) != 0)
  {
    LOBYTE(v34) = 1;
    sub_20A16957C();
    v20 = v10;
    sub_20A1A9150();
    sub_20A127940();
    v26 = v29;
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v20);
    v27 = v34;
  }
  else
  {
    LOBYTE(v34) = 0;
    sub_20A1695C0();
    sub_20A1A9150();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    v27 = xmmword_20A1B2310;
  }
  v24 = (uint64_t)v33;
  *v31 = v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_20A168EB0@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return MobileDocumentReaderDeviceEngagementType.init(from:)(a1, a2);
}

uint64_t sub_20A168EC4(_QWORD *a1)
{
  return MobileDocumentReaderDeviceEngagementType.encode(to:)(a1);
}

uint64_t sub_20A168ED8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_20A1A930C();
  sub_20A1A9318();
  if (v2 >> 60 != 15)
  {
    sub_20A120BD8(v1, v2);
    sub_20A1A8C34();
    sub_20A127EE4(v1, v2);
  }
  return sub_20A1A933C();
}

uint64_t sub_20A168F64()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 >> 60 == 15)
    return sub_20A1A9318();
  v3 = *v0;
  sub_20A1A9318();
  sub_20A120BD8(v3, v1);
  sub_20A1A8C34();
  return sub_20A127EE4(v3, v1);
}

uint64_t sub_20A168FE8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_20A1A930C();
  sub_20A1A9318();
  if (v2 >> 60 != 15)
  {
    sub_20A120BD8(v1, v2);
    sub_20A1A8C34();
    sub_20A127EE4(v1, v2);
  }
  return sub_20A1A933C();
}

uint64_t sub_20A169070(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  if (v3 >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      sub_20A127ED0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      sub_20A127ED0(v2, v3);
      sub_20A1692C0(v2, v3);
      v6 = v7;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v5 >> 60 != 15)
  {
LABEL_5:
    sub_20A127ED0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
    sub_20A127ED0(v2, v3);
    v6 = 0;
    goto LABEL_7;
  }
  v6 = 1;
LABEL_7:
  sub_20A127EE4(v2, v3);
  sub_20A127EE4(v4, v5);
  return v6 & 1;
}

uint64_t sub_20A169138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_20A127B5C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_20A16920C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_20A1A8AA8();
  v11 = result;
  if (result)
  {
    result = sub_20A1A8AC0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_20A1A8AB4();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_20A127B5C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_20A1692C0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_20A16930C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_20A169340 + *((int *)qword_20A169518 + (v0 >> 62))))();
}

uint64_t sub_20A169350@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_20A169538()
{
  unint64_t result;

  result = qword_2545D9B08;
  if (!qword_2545D9B08)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B26AC, &type metadata for MobileDocumentReaderDeviceEngagementType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B08);
  }
  return result;
}

unint64_t sub_20A16957C()
{
  unint64_t result;

  result = qword_2545D9B10;
  if (!qword_2545D9B10)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B265C, &type metadata for MobileDocumentReaderDeviceEngagementType.QrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B10);
  }
  return result;
}

unint64_t sub_20A1695C0()
{
  unint64_t result;

  result = qword_2545D9B18;
  if (!qword_2545D9B18)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B260C, &type metadata for MobileDocumentReaderDeviceEngagementType.NfcCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B18);
  }
  return result;
}

unint64_t sub_20A169608()
{
  unint64_t result;

  result = qword_2545D9B38;
  if (!qword_2545D9B38)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderDeviceEngagementType, &type metadata for MobileDocumentReaderDeviceEngagementType);
    atomic_store(result, (unint64_t *)&qword_2545D9B38);
  }
  return result;
}

uint64_t *destroy for MobileDocumentReaderDeviceEngagementType(uint64_t *result)
{
  unint64_t v1;

  v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0)
    return (uint64_t *)sub_20A120E74(*result, v1);
  return result;
}

uint64_t _s7CoreIDV40MobileDocumentReaderDeviceEngagementTypeOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  if ((v3 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *a2;
    sub_20A120BD8(*a2, a2[1]);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for MobileDocumentReaderDeviceEngagementType(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = a1[1];
  v5 = a2[1];
  v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) == 0)
  {
    if (!v6)
    {
      v9 = *a2;
      sub_20A120BD8(v9, v5);
      v10 = *a1;
      v11 = a1[1];
      *a1 = v9;
      a1[1] = v5;
      sub_20A120E74(v10, v11);
      return a1;
    }
    sub_20A120E74(*a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v7 = *a2;
  sub_20A120BD8(v7, v5);
  *a1 = v7;
  a1[1] = v5;
  return a1;
}

uint64_t *assignWithTake for MobileDocumentReaderDeviceEngagementType(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = a1[1];
  if ((v4 & 0x3000000000000000) == 0)
  {
    v5 = a2[1];
    if ((v5 & 0x3000000000000000) == 0)
    {
      v7 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_20A120E74(v7, v4);
      return a1;
    }
    sub_20A120E74(*a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderDeviceEngagementType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 12);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderDeviceEngagementType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 12;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_20A169850(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v1) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v1) & 0xC | (v1 >> 2));
  else
    return 0;
}

_QWORD *sub_20A169878(_QWORD *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *result = a2 - 13;
    result[1] = 0;
  }
  else if (a2)
  {
    *result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderDeviceEngagementType()
{
  return &type metadata for MobileDocumentReaderDeviceEngagementType;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderDeviceEngagementType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A169904 + 4 * byte_20A1B2325[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A169938 + 4 * byte_20A1B2320[v4]))();
}

uint64_t sub_20A169938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A169940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A169948);
  return result;
}

uint64_t sub_20A169954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A16995CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A169960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A169968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderDeviceEngagementType.CodingKeys()
{
  return &type metadata for MobileDocumentReaderDeviceEngagementType.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderDeviceEngagementType.NfcCodingKeys()
{
  return &type metadata for MobileDocumentReaderDeviceEngagementType.NfcCodingKeys;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderDeviceEngagementType.QrCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A1699D4 + 4 * byte_20A1B232A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A1699F4 + 4 * byte_20A1B232F[v4]))();
}

_BYTE *sub_20A1699D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A1699F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A1699FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A169A04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A169A0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A169A14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderDeviceEngagementType.QrCodingKeys()
{
  return &type metadata for MobileDocumentReaderDeviceEngagementType.QrCodingKeys;
}

unint64_t sub_20A169A34()
{
  unint64_t result;

  result = qword_2545D9B40;
  if (!qword_2545D9B40)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B24DC, &type metadata for MobileDocumentReaderDeviceEngagementType.QrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B40);
  }
  return result;
}

unint64_t sub_20A169A7C()
{
  unint64_t result;

  result = qword_2545D9B48;
  if (!qword_2545D9B48)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B25E4, &type metadata for MobileDocumentReaderDeviceEngagementType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B48);
  }
  return result;
}

unint64_t sub_20A169AC4()
{
  unint64_t result;

  result = qword_2545D9B50;
  if (!qword_2545D9B50)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2504, &type metadata for MobileDocumentReaderDeviceEngagementType.NfcCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B50);
  }
  return result;
}

unint64_t sub_20A169B0C()
{
  unint64_t result;

  result = qword_2545D9B58;
  if (!qword_2545D9B58)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B252C, &type metadata for MobileDocumentReaderDeviceEngagementType.NfcCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B58);
  }
  return result;
}

unint64_t sub_20A169B54()
{
  unint64_t result;

  result = qword_2545D9B60;
  if (!qword_2545D9B60)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B244C, &type metadata for MobileDocumentReaderDeviceEngagementType.QrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B60);
  }
  return result;
}

unint64_t sub_20A169B9C()
{
  unint64_t result;

  result = qword_2545D9B68;
  if (!qword_2545D9B68)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2474, &type metadata for MobileDocumentReaderDeviceEngagementType.QrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B68);
  }
  return result;
}

unint64_t sub_20A169BE4()
{
  unint64_t result;

  result = qword_2545D9B70;
  if (!qword_2545D9B70)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2554, &type metadata for MobileDocumentReaderDeviceEngagementType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B70);
  }
  return result;
}

unint64_t sub_20A169C2C()
{
  unint64_t result;

  result = qword_2545D9B78;
  if (!qword_2545D9B78)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B257C, &type metadata for MobileDocumentReaderDeviceEngagementType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9B78);
  }
  return result;
}

uint64_t sub_20A169C70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6514286 && a2 == 0xE300000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 29297 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void BundleRecordFetcher.currentRecord.getter(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (v2)
  {
    v5 = v2;
    BundleRecord.init(_:)(v5, a1);
    v3 = type metadata accessor for BundleRecord();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);

  }
  else
  {
    v4 = type metadata accessor for BundleRecord();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

uint64_t type metadata accessor for BundleRecord()
{
  uint64_t result;

  result = qword_2545D9BA8;
  if (!qword_2545D9BA8)
    return swift_getSingletonMetadata();
  return result;
}

void BundleRecord.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B80);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v49[-v11];
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  v55 = a2;
  if (v13)
  {
    v50 = 0;
  }
  else
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      v14 = 1;
    else
      v14 = 2;
    v50 = v14;
  }
  v15 = objc_msgSend(a1, sel_applicationIdentifier);
  if (v15)
  {
    v16 = v15;
    v17 = sub_20A1A8DB4();
    v53 = v18;
    v54 = v17;

  }
  else
  {
    v53 = 0;
    v54 = 0;
  }
  v19 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v19)
  {
    v20 = v19;
    v21 = sub_20A1A8DB4();
    v51 = v22;
    v52 = v21;

  }
  else
  {
    v51 = 0;
    v52 = 0;
  }
  objc_opt_self();
  v23 = (void *)swift_dynamicCastObjCClass();
  if (v23)
  {
    v24 = objc_msgSend(v23, sel_deviceIdentifierForVendor);
    if (v24)
    {
      v25 = v24;
      sub_20A1A8C64();

      v26 = sub_20A1A8C70();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 0, 1, v26);
    }
    else
    {
      v28 = sub_20A1A8C70();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
    }
    sub_20A136700((uint64_t)v10, (uint64_t)v12, &qword_2545D9B88);
  }
  else
  {
    v27 = sub_20A1A8C70();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 1, 1, v27);
  }
  v29 = objc_msgSend(a1, sel_teamIdentifier);
  if (v29)
  {
    v30 = v29;
    v31 = sub_20A1A8DB4();
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0;
  }
  v34 = objc_msgSend(a1, sel_localizedName);
  v35 = sub_20A1A8DB4();
  v37 = v36;

  v38 = objc_msgSend(a1, sel_localizedUsageDescriptionForFeature_, 1);
  if (v38)
  {
    v39 = v38;
    v40 = sub_20A1A8DB4();
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0;
  }
  v56 = v50;
  objc_opt_self();
  v43 = (void *)swift_dynamicCastObjCClass();
  if (v43 && (v44 = objc_msgSend(v43, sel_containingBundleRecord)) != 0)
  {
    v45 = v44;
    BundleRecord.init(_:)();
    v46 = type metadata accessor for BundleRecord();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v6, 0, 1, v46);

  }
  else
  {
    v47 = type metadata accessor for BundleRecord();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v6, 1, 1, v47);
  }
  v48 = objc_msgSend(a1, sel_entitlements);
  BundleRecord.init(applicationIdentifier:bundleIdentifier:installationIdentifier:teamIdentifier:localizedName:localizedIdentityUsageDescription:recordType:containingBundleRecord:entitlements:)(v54, v53, v52, v51, (uint64_t)v12, v31, v33, v35, v55, v37, v40, v42, &v56, (uint64_t)v6, (uint64_t)v48);

}

void BundleRecordFetcher.record(withAuditToken:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v10[4];
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v11[0] = 0;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForAuditToken_error_, v10, v11);
  if (v5)
  {
    v6 = v5;
    v7 = v11[0];
    BundleRecord.init(_:)(v6, a5);
  }
  else
  {
    v8 = v11[0];
    sub_20A1A8BBC();

    swift_willThrow();
  }
}

id sub_20A16A30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4;
  id v5;
  id v6;
  _QWORD v8[4];
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v9[0] = 0;
  v8[0] = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8[3] = a4;
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordForAuditToken_error_, v8, v9);
  if (v4)
  {
    v5 = v9[0];
  }
  else
  {
    v6 = v9[0];
    sub_20A1A8BBC();

    swift_willThrow();
  }
  return v4;
}

void BundleRecordFetcher.record(withApplicationIdentifier:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  sub_20A16B674();
  swift_bridgeObjectRetain();
  v3 = sub_20A16A47C();
  if (!v1)
    BundleRecord.init(_:)(v3, a1);
}

id sub_20A16A47C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = (void *)sub_20A1A8D9C();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithApplicationIdentifier_error_, v0, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_20A1A8BBC();

    swift_willThrow();
  }
  return v1;
}

void BundleRecordFetcher.record(withBundleIdentifier:allowPlaceholder:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  id v9;

  sub_20A16B674();
  swift_bridgeObjectRetain();
  v9 = sub_20A16A5CC(a1, a2, a3);
  if (!v4)
    BundleRecord.init(_:)(v9, a4);
}

id sub_20A16A5CC(uint64_t a1, uint64_t a2, char a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_20A1A8D9C();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithBundleIdentifier_allowPlaceholder_error_, v4, a3 & 1, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_20A1A8BBC();

    swift_willThrow();
  }
  return v5;
}

void sub_20A16A6B0(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (v2)
  {
    v5 = v2;
    BundleRecord.init(_:)(v5, a1);
    v3 = type metadata accessor for BundleRecord();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);

  }
  else
  {
    v4 = type metadata accessor for BundleRecord();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

void sub_20A16A75C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  id v11;

  sub_20A16B674();
  v11 = sub_20A16A30C(a1, a2, a3, a4);
  if (!v5)
    BundleRecord.init(_:)(v11, a5);
}

void sub_20A16A7D8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  sub_20A16B674();
  swift_bridgeObjectRetain();
  v3 = sub_20A16A47C();
  if (!v1)
    BundleRecord.init(_:)(v3, a1);
}

void sub_20A16A844(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  id v9;

  sub_20A16B674();
  swift_bridgeObjectRetain();
  v9 = sub_20A16A5CC(a1, a2, a3);
  if (!v4)
    BundleRecord.init(_:)(v9, a4);
}

BOOL static BundleRecord.RecordType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BundleRecord.RecordType.hash(into:)()
{
  return sub_20A1A9318();
}

uint64_t BundleRecord.RecordType.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t BundleRecord.applicationIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleRecord.applicationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BundleRecord.applicationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t BundleRecord.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleRecord.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BundleRecord.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t BundleRecord.installationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for BundleRecord();
  return sub_20A1353A0(v1 + *(int *)(v3 + 24), a1, &qword_2545D9B88);
}

uint64_t BundleRecord.installationIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for BundleRecord() + 24);
  return sub_20A16B6B0(a1, v3);
}

uint64_t (*BundleRecord.installationIdentifier.modify())(_QWORD)
{
  type metadata accessor for BundleRecord();
  return nullsub_1;
}

uint64_t BundleRecord.teamIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BundleRecord() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleRecord.teamIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BundleRecord() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BundleRecord.teamIdentifier.modify())(_QWORD)
{
  type metadata accessor for BundleRecord();
  return nullsub_1;
}

uint64_t BundleRecord.localizedName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BundleRecord() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleRecord.localizedName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BundleRecord() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BundleRecord.localizedName.modify())(_QWORD)
{
  type metadata accessor for BundleRecord();
  return nullsub_1;
}

uint64_t BundleRecord.localizedIdentityUsageDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BundleRecord() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleRecord.localizedIdentityUsageDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BundleRecord() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BundleRecord.localizedIdentityUsageDescription.modify())(_QWORD)
{
  type metadata accessor for BundleRecord();
  return nullsub_1;
}

uint64_t BundleRecord.recordType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BundleRecord();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t BundleRecord.recordType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for BundleRecord();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*BundleRecord.recordType.modify())(_QWORD)
{
  type metadata accessor for BundleRecord();
  return nullsub_1;
}

uint64_t BundleRecord.containingBundleRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = type metadata accessor for BundleRecord();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 44));
  v5 = *(_QWORD *)(v3 - 8);
  if (*(_QWORD *)(v4 + 16))
  {
    sub_20A16B6F8(v4 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1);
    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v6, 1, v3);
}

uint64_t sub_20A16ADA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for BundleRecord();
  v5 = *(_QWORD *)(a1 + *(int *)(v4 + 44));
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 16))
  {
    sub_20A16B6F8(v5 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v7, 1, v4);
}

uint64_t sub_20A16AE24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B80);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1353A0(a1, (uint64_t)v4, &qword_2545D9B80);
  return BundleRecord.containingBundleRecord.setter((uint64_t)v4);
}

uint64_t BundleRecord.containingBundleRecord.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = type metadata accessor for BundleRecord();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - v7;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B80);
  v9 = *(_QWORD *)(v25 - 8);
  v10 = MEMORY[0x24BDAC7A8](v25);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v24 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B98);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20A1AE8C0;
  v17 = v16 + v15;
  v26 = a1;
  sub_20A1353A0(a1, v17, &qword_2545D9B80);
  sub_20A1353A0(v17, (uint64_t)v14, &qword_2545D9B80);
  sub_20A136700((uint64_t)v14, (uint64_t)v12, &qword_2545D9B80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
  {
    sub_20A127E0C((uint64_t)v12, &qword_2545D9B80);
    v18 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_20A16B73C((uint64_t)v12, (uint64_t)v8);
    sub_20A16B73C((uint64_t)v8, (uint64_t)v6);
    v18 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_20A16B780(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
    v20 = *(_QWORD *)(v18 + 16);
    v19 = *(_QWORD *)(v18 + 24);
    if (v20 >= v19 >> 1)
      v18 = sub_20A16B780(v19 > 1, v20 + 1, 1, v18);
    *(_QWORD *)(v18 + 16) = v20 + 1;
    sub_20A16B73C((uint64_t)v6, v18+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v20);
  }
  sub_20A127E0C(v26, &qword_2545D9B80);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v21 = *(int *)(v2 + 44);
  v22 = v27;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + v21) = v18;
  return result;
}

void (*BundleRecord.containingBundleRecord.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B80) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  v5 = type metadata accessor for BundleRecord();
  v6 = *(_QWORD *)(v1 + *(int *)(v5 + 44));
  v7 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 16))
  {
    sub_20A16B6F8(v6 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v4);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, v8, 1, v5);
  return sub_20A16B1EC;
}

void sub_20A16B1EC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_20A1353A0(*(_QWORD *)(a1 + 16), (uint64_t)v2, &qword_2545D9B80);
    BundleRecord.containingBundleRecord.setter((uint64_t)v2);
    sub_20A127E0C((uint64_t)v3, &qword_2545D9B80);
  }
  else
  {
    BundleRecord.containingBundleRecord.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

id BundleRecord.entitlements.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for BundleRecord() + 48));
}

void BundleRecord.entitlements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for BundleRecord() + 48);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*BundleRecord.entitlements.modify())(_QWORD)
{
  type metadata accessor for BundleRecord();
  return nullsub_1;
}

uint64_t BundleRecord.init(applicationIdentifier:bundleIdentifier:installationIdentifier:teamIdentifier:localizedName:localizedIdentityUsageDescription:recordType:containingBundleRecord:entitlements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v63 = a7;
  v64 = a8;
  v54 = a1;
  v55 = a2;
  v66 = a4;
  v67 = a15;
  v56 = a14;
  v57 = a3;
  v61 = a11;
  v62 = a6;
  v59 = a10;
  v60 = a12;
  v17 = (int *)type metadata accessor for BundleRecord();
  v58 = *((_QWORD *)v17 - 1);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v53 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v52 = (uint64_t)&v51 - v20;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B80);
  v21 = *(_QWORD *)(v65 - 8);
  v22 = MEMORY[0x24BDAC7A8](v65);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v51 - v25;
  v27 = *a13;
  v28 = (char *)a9 + v17[6];
  v29 = sub_20A1A8C70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = (_QWORD *)((char *)a9 + v17[7]);
  *v30 = 0;
  v30[1] = 0;
  v31 = (_QWORD *)((char *)a9 + v17[9]);
  *v31 = 0;
  v31[1] = 0;
  v32 = v55;
  *a9 = v54;
  a9[1] = v32;
  v33 = v66;
  a9[2] = v57;
  a9[3] = v33;
  v66 = a5;
  v34 = (uint64_t)v28;
  v35 = v56;
  sub_20A16B988(a5, v34);
  swift_bridgeObjectRelease();
  v36 = v63;
  v37 = v64;
  *v30 = v62;
  v30[1] = v36;
  v38 = (_QWORD *)((char *)a9 + v17[8]);
  v39 = v59;
  *v38 = v37;
  v38[1] = v39;
  swift_bridgeObjectRelease();
  v40 = v60;
  *v31 = v61;
  v31[1] = v40;
  *((_BYTE *)a9 + v17[10]) = v27;
  v41 = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B98);
  v42 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_20A1AE8C0;
  v44 = v43 + v42;
  sub_20A1353A0(v35, v43 + v42, &qword_2545D9B80);
  sub_20A1353A0(v44, (uint64_t)v26, &qword_2545D9B80);
  sub_20A136700((uint64_t)v26, (uint64_t)v24, &qword_2545D9B80);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))(v24, 1, v17) == 1)
  {
    sub_20A127E0C((uint64_t)v24, &qword_2545D9B80);
    v45 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v46 = v52;
    sub_20A16B73C((uint64_t)v24, v52);
    v47 = v53;
    sub_20A16B73C(v46, v53);
    v45 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v45 = sub_20A16B780(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
    v49 = *(_QWORD *)(v45 + 16);
    v48 = *(_QWORD *)(v45 + 24);
    if (v49 >= v48 >> 1)
      v45 = sub_20A16B780(v48 > 1, v49 + 1, 1, v45);
    *(_QWORD *)(v45 + 16) = v49 + 1;
    sub_20A16B73C(v47, v45+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v49);
  }
  sub_20A127E0C(v35, &qword_2545D9B80);
  sub_20A127E0C(v66, &qword_2545D9B88);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  *(_QWORD *)((char *)a9 + v17[11]) = v45;
  *(_QWORD *)((char *)a9 + v17[12]) = v67;
  return result;
}

unint64_t sub_20A16B674()
{
  unint64_t result;

  result = qword_2545D9B90;
  if (!qword_2545D9B90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545D9B90);
  }
  return result;
}

uint64_t sub_20A16B6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A16B6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BundleRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A16B73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BundleRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A16B780(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9BD0);
  v10 = *(_QWORD *)(type metadata accessor for BundleRecord() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_20A1A90F0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for BundleRecord() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_20A16C70C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_20A16B988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A16B9D4()
{
  unint64_t result;

  result = qword_2545D9BA0;
  if (!qword_2545D9BA0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for BundleRecord.RecordType, &type metadata for BundleRecord.RecordType);
    atomic_store(result, (unint64_t *)&qword_2545D9BA0);
  }
  return result;
}

uint64_t dispatch thunk of BundleRecordFetching.currentRecord.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BundleRecordFetching.record(withAuditToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of BundleRecordFetching.record(withApplicationIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of BundleRecordFetching.record(withBundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

ValueMetadata *type metadata accessor for BundleRecordFetcher()
{
  return &type metadata for BundleRecordFetcher;
}

_QWORD *initializeBufferWithCopyOfBuffer for BundleRecord(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_20A1A8C70();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (_QWORD *)((char *)v4 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (_QWORD *)((char *)v4 + v18);
    v23 = (_QWORD *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[9];
    v26 = a3[10];
    v27 = (_QWORD *)((char *)v4 + v25);
    v28 = (_QWORD *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    *((_BYTE *)v4 + v26) = *((_BYTE *)a2 + v26);
    v30 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    v31 = *(void **)((char *)a2 + v30);
    *(_QWORD *)((char *)v4 + v30) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v31;
  }
  return v4;
}

void destroy for BundleRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20A1A8C70();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for BundleRecord(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20A1A8C70();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)((char *)a1 + v16);
  v21 = (_QWORD *)((char *)a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_QWORD *)((char *)a1 + v23);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  v28 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v29 = *(void **)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = v29;
  return a1;
}

_QWORD *assignWithCopy for BundleRecord(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8C70();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[12];
  v25 = *(void **)((char *)a2 + v24);
  v26 = *(void **)((char *)a1 + v24);
  *(_QWORD *)((char *)a1 + v24) = v25;
  v27 = v25;

  return a1;
}

_OWORD *initializeWithTake for BundleRecord(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8C70();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v15 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  return a1;
}

_QWORD *assignWithTake for BundleRecord(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20A1A8C70();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
  swift_bridgeObjectRelease();
  v33 = a3[12];
  v34 = *(void **)((char *)a1 + v33);
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);

  return a1;
}

uint64_t getEnumTagSinglePayload for BundleRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A16C30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A16C3A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

void sub_20A16C424()
{
  unint64_t v0;

  sub_20A16C4CC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_20A16C4CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545D9BB8)
  {
    sub_20A1A8C70();
    v0 = sub_20A1A8FE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545D9BB8);
  }
}

uint64_t storeEnumTagSinglePayload for BundleRecord.RecordType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A16C56C + 4 * byte_20A1B2705[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A16C5A0 + 4 * byte_20A1B2700[v4]))();
}

uint64_t sub_20A16C5A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A16C5A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A16C5B0);
  return result;
}

uint64_t sub_20A16C5BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A16C5C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A16C5C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A16C5D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BundleRecord.RecordType()
{
  return &type metadata for BundleRecord.RecordType;
}

_QWORD *sub_20A16C5EC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20A16C604(a1, a2, a3, a4, &qword_2545D9BC8);
}

_QWORD *sub_20A16C5F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20A16C604(a1, a2, a3, a4, &qword_2545D9BC0);
}

_QWORD *sub_20A16C604(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A16C824(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A16C70C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for BundleRecord() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_20A1A9138();
  __break(1u);
  return result;
}

char *sub_20A16C824(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_20A1A9138();
  __break(1u);
  return result;
}

uint64_t MobileDocumentType.iso18013Identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v12;
  void (*v13)(char *, uint64_t);
  id v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint8_t *v30;
  uint8_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v30 - v6;
  v8 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A16CE30(v0, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1)
    return 0xD000000000000015;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v10, v1);
  sub_20A1A8C94();
  sub_20A16CE74();
  v12 = sub_20A1A8D78();
  v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v5, v1);
  v13(v7, v1);
  if ((v12 & 1) != 0)
  {
    if (qword_2545D80E8 != -1)
      swift_once();
    if ((byte_2545F54E8 & 1) != 0
      || (v14 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
          v15 = (void *)sub_20A1A8D9C(),
          v16 = objc_msgSend(v14, sel_BOOLForKey_, v15),
          v14,
          v15,
          v16))
    {
      v13(v10, v1);
      return 0xD000000000000016;
    }
    if (qword_253EB1CD0 != -1)
      swift_once();
    v20 = sub_20A1A8D3C();
    __swift_project_value_buffer(v20, (uint64_t)qword_253EB3268);
    v21 = sub_20A1A8D24();
    v22 = sub_20A1A8FA0();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v33 = v23;
      v24 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v34 = v32;
      *(_DWORD *)v24 = 136315138;
      v30 = v24 + 4;
      v31 = v24;
      sub_20A1A8C94();
      v25 = sub_20A1A8C88();
      v27 = v26;
      v13(v5, v1);
      v36 = sub_20A146EE8(v25, v27, &v34);
      sub_20A1A8FF4();
      swift_bridgeObjectRelease();
      v28 = v31;
      _os_log_impl(&dword_20A10F000, v21, (os_log_type_t)v33, "National ID card requests for region '%s' are not supported", v31, 0xCu);
      v29 = v32;
      swift_arrayDestroy();
      MEMORY[0x20BD214DC](v29, -1, -1);
      MEMORY[0x20BD214DC](v28, -1, -1);
    }

    v34 = 0;
    v35 = 0xE000000000000000;
    sub_20A1A9078();
    sub_20A1A8DF0();
    sub_20A1A8C94();
    sub_20A1A8C88();
    v13(v5, v1);
    sub_20A1A8DF0();
    swift_bridgeObjectRelease();
    sub_20A1A8DF0();
    v17 = v34;
    v18 = v35;
    sub_20A1468AC();
    swift_allocError();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v10, v1);
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_20A1A9078();
    sub_20A1A8DF0();
    sub_20A1A8C88();
    sub_20A1A8DF0();
    swift_bridgeObjectRelease();
    sub_20A1A8DF0();
    v17 = v34;
    v18 = v35;
    sub_20A1468AC();
    swift_allocError();
    v10 = v5;
  }
  *(_BYTE *)v19 = 3;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = 0;
  swift_willThrow();
  return ((uint64_t (*)(char *, uint64_t))v13)(v10, v1);
}

uint64_t sub_20A16CE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentType.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A16CE74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545D9BD8;
  if (!qword_2545D9BD8)
  {
    v1 = sub_20A1A8CAC();
    result = MEMORY[0x20BD21434](MEMORY[0x24BDCED28], v1);
    atomic_store(result, (unint64_t *)&qword_2545D9BD8);
  }
  return result;
}

uint64_t MobileDocumentIssuer.jurisdictionCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

CoreIDV::MobileDocumentIssuer __swiftcall MobileDocumentIssuer.init(jurisdictionCode:)(CoreIDV::MobileDocumentIssuer jurisdictionCode)
{
  CoreIDV::MobileDocumentIssuer *v1;

  *v1 = jurisdictionCode;
  return jurisdictionCode;
}

uint64_t MobileDocumentIssuer.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t static MobileDocumentIssuer.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_20A1A9258();
}

unint64_t sub_20A16CF64()
{
  return 0xD000000000000010;
}

uint64_t sub_20A16CF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A16D744(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20A16CFA8()
{
  sub_20A16D0E4();
  return sub_20A1A9360();
}

uint64_t sub_20A16CFD0()
{
  sub_20A16D0E4();
  return sub_20A1A936C();
}

uint64_t MobileDocumentIssuer.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9BE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A16D0E4();
  sub_20A1A9354();
  sub_20A1A9204();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_20A16D0E4()
{
  unint64_t result;

  result = qword_2545D9BE8;
  if (!qword_2545D9BE8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2A18, &type metadata for MobileDocumentIssuer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9BE8);
  }
  return result;
}

uint64_t MobileDocumentIssuer.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  return sub_20A1A933C();
}

uint64_t MobileDocumentIssuer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9BF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A16D0E4();
  sub_20A1A9348();
  if (!v2)
  {
    v9 = sub_20A1A918C();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A16D28C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentIssuer.init(from:)(a1, a2);
}

uint64_t sub_20A16D2A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9BE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A16D0E4();
  sub_20A1A9354();
  sub_20A1A9204();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_20A16D38C()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  return sub_20A1A933C();
}

uint64_t sub_20A16D3D4()
{
  return sub_20A1A8DE4();
}

uint64_t sub_20A16D3DC()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  return sub_20A1A933C();
}

unint64_t sub_20A16D424()
{
  unint64_t result;

  result = qword_2545D9BF8;
  if (!qword_2545D9BF8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentIssuer, &type metadata for MobileDocumentIssuer);
    atomic_store(result, (unint64_t *)&qword_2545D9BF8);
  }
  return result;
}

uint64_t sub_20A16D468(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_20A1A9258();
}

_QWORD *initializeBufferWithCopyOfBuffer for MobileDocumentIssuer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MobileDocumentIssuer()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for MobileDocumentIssuer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MobileDocumentIssuer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentIssuer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentIssuer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentIssuer()
{
  return &type metadata for MobileDocumentIssuer;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentIssuer.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A16D610 + 4 * byte_20A1B2870[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A16D630 + 4 * byte_20A1B2875[v4]))();
}

_BYTE *sub_20A16D610(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A16D630(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A16D638(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A16D640(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A16D648(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A16D650(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentIssuer.CodingKeys()
{
  return &type metadata for MobileDocumentIssuer.CodingKeys;
}

unint64_t sub_20A16D670()
{
  unint64_t result;

  result = qword_2545D9C00;
  if (!qword_2545D9C00)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B29F0, &type metadata for MobileDocumentIssuer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C00);
  }
  return result;
}

unint64_t sub_20A16D6B8()
{
  unint64_t result;

  result = qword_2545D9C08;
  if (!qword_2545D9C08)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2960, &type metadata for MobileDocumentIssuer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C08);
  }
  return result;
}

unint64_t sub_20A16D700()
{
  unint64_t result;

  result = qword_2545D9C10;
  if (!qword_2545D9C10)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2988, &type metadata for MobileDocumentIssuer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C10);
  }
  return result;
}

uint64_t sub_20A16D744(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BDD60)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t MobileDocumentReaderIdentityKeyRequest.applicationIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderIdentityKeyRequest.installationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MobileDocumentReaderIdentityKeyRequest() + 20);
  v4 = sub_20A1A8C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MobileDocumentReaderIdentityKeyRequest()
{
  uint64_t result;

  result = qword_2545D9C48;
  if (!qword_2545D9C48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MobileDocumentReaderIdentityKeyRequest.init(applicationIdentifier:installationIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for MobileDocumentReaderIdentityKeyRequest() + 20);
  v6 = sub_20A1A8C70();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t MobileDocumentReaderIdentityKeyRequest.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_20A1A8D60();
}

uint64_t static MobileDocumentReaderIdentityKeyRequest.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_20A1A9258() & 1) == 0)
    return 0;
  type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  return sub_20A1A8C58();
}

unint64_t sub_20A16D9C4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0xD000000000000015;
}

uint64_t sub_20A16DA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A16E7D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A16DA24()
{
  sub_20A16DBC8();
  return sub_20A1A9360();
}

uint64_t sub_20A16DA4C()
{
  sub_20A16DBC8();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderIdentityKeyRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9C18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A16DBC8();
  sub_20A1A9354();
  v8[15] = 0;
  sub_20A1A9204();
  if (!v1)
  {
    type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
    v8[14] = 1;
    sub_20A1A8C70();
    sub_20A1205FC(&qword_2545D9C28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A16DBC8()
{
  unint64_t result;

  result = qword_2545D9C20;
  if (!qword_2545D9C20)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2C54, &type metadata for MobileDocumentReaderIdentityKeyRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C20);
  }
  return result;
}

uint64_t MobileDocumentReaderIdentityKeyRequest.hashValue.getter()
{
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderIdentityKeyRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v22 = a2;
  v4 = sub_20A1A8C70();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9C30);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A16DBC8();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v21 = v6;
  v12 = v11;
  v14 = v23;
  v13 = v24;
  v15 = v25;
  v16 = v26;
  v28 = 0;
  *v12 = sub_20A1A918C();
  v12[1] = v17;
  v27 = 1;
  sub_20A1205FC(&qword_2545D9C38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v16);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v12 + *(int *)(v9 + 20), v14, v15);
  sub_20A16E0FC((uint64_t)v12, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_20A16E140((uint64_t)v12);
}

uint64_t sub_20A16DEFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderIdentityKeyRequest.init(from:)(a1, a2);
}

uint64_t sub_20A16DF10(_QWORD *a1)
{
  return MobileDocumentReaderIdentityKeyRequest.encode(to:)(a1);
}

uint64_t sub_20A16DF24()
{
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  return sub_20A1A933C();
}

uint64_t sub_20A16DFC8()
{
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_20A1A8D60();
}

uint64_t sub_20A16E05C()
{
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  return sub_20A1A933C();
}

uint64_t sub_20A16E0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A16E140(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A16E17C()
{
  return sub_20A1205FC(&qword_2545D9C40, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyRequest);
}

uint64_t sub_20A16E1A8(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_20A1A9258() & 1) != 0)
    return sub_20A1A8C58();
  else
    return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderIdentityKeyRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_20A1A8C70();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for MobileDocumentReaderIdentityKeyRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_20A1A8C70();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for MobileDocumentReaderIdentityKeyRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20A1A8C70();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderIdentityKeyRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8C70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderIdentityKeyRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20A1A8C70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for MobileDocumentReaderIdentityKeyRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8C70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderIdentityKeyRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A16E4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20A1A8C70();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderIdentityKeyRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A16E544(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_20A1A8C70();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20A16E5B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A1A8C70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderIdentityKeyRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A16E678 + 4 * byte_20A1B2A75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A16E6AC + 4 * byte_20A1B2A70[v4]))();
}

uint64_t sub_20A16E6AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A16E6B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A16E6BCLL);
  return result;
}

uint64_t sub_20A16E6C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A16E6D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A16E6D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A16E6DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderIdentityKeyRequest.CodingKeys()
{
  return &type metadata for MobileDocumentReaderIdentityKeyRequest.CodingKeys;
}

unint64_t sub_20A16E6FC()
{
  unint64_t result;

  result = qword_2545D9C58;
  if (!qword_2545D9C58)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2C2C, &type metadata for MobileDocumentReaderIdentityKeyRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C58);
  }
  return result;
}

unint64_t sub_20A16E744()
{
  unint64_t result;

  result = qword_2545D9C60;
  if (!qword_2545D9C60)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2B9C, &type metadata for MobileDocumentReaderIdentityKeyRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C60);
  }
  return result;
}

unint64_t sub_20A16E78C()
{
  unint64_t result;

  result = qword_2545D9C68;
  if (!qword_2545D9C68)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2BC4, &type metadata for MobileDocumentReaderIdentityKeyRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C68);
  }
  return result;
}

uint64_t sub_20A16E7D0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000020A1BDD80 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BDDA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t machServiceIdentityProofingXPC.getter()
{
  return 0xD000000000000028;
}

id static DIIdentityProofingXPCInterface.interface()()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2545F9DE8);
}

uint64_t DIIdentityProofingXPCInterface.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DIIdentityProofingXPCInterface.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIIdentityProofingXPCInterface()
{
  return objc_opt_self();
}

uint64_t method lookup function for DIIdentityProofingXPCInterface()
{
  return swift_lookUpClassMethod();
}

uint64_t MobileDocumentReaderConfiguration.merchantServerAccessToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderConfiguration.userAcceptedTermsAndConditions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

CoreIDV::MobileDocumentReaderConfiguration __swiftcall MobileDocumentReaderConfiguration.init(merchantServerAccessToken:userAcceptedTermsAndConditions:)(Swift::String_optional merchantServerAccessToken, Swift::Bool userAcceptedTermsAndConditions)
{
  uint64_t v2;
  CoreIDV::MobileDocumentReaderConfiguration result;

  *(Swift::String_optional *)v2 = merchantServerAccessToken;
  *(_BYTE *)(v2 + 16) = userAcceptedTermsAndConditions;
  result.merchantServerAccessToken = merchantServerAccessToken;
  result.userAcceptedTermsAndConditions = userAcceptedTermsAndConditions;
  return result;
}

uint64_t MobileDocumentReaderConfiguration.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A1A9324();
  }
  return sub_20A1A9324();
}

unint64_t sub_20A16EA10()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ELL;
  else
    return 0xD000000000000019;
}

uint64_t sub_20A16EA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A16F364(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A16EA74()
{
  sub_20A16EF98();
  return sub_20A1A9360();
}

uint64_t sub_20A16EA9C()
{
  sub_20A16EF98();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9C70);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A16EF98();
  sub_20A1A9354();
  v12 = 0;
  sub_20A1A91E0();
  if (!v2)
  {
    v11 = 1;
    sub_20A1A9210();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t MobileDocumentReaderConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_20A1A930C();
  sub_20A1A9324();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  sub_20A1A9324();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9C80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A16EF98();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_20A1A9168();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_20A1A9198();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A16EDF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderConfiguration.init(from:)(a1, a2);
}

uint64_t sub_20A16EE0C(_QWORD *a1)
{
  return MobileDocumentReaderConfiguration.encode(to:)(a1);
}

uint64_t sub_20A16EE24()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A1A9324();
  }
  return sub_20A1A9324();
}

uint64_t sub_20A16EE98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_20A1A930C();
  sub_20A1A9324();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  sub_20A1A9324();
  return sub_20A1A933C();
}

uint64_t _s7CoreIDV33MobileDocumentReaderConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  char v8;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (!v3)
  {
    if (!v5)
      return v4 ^ v6 ^ 1u;
    return 0;
  }
  if (!v5)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v5)
    return v4 ^ v6 ^ 1u;
  v8 = sub_20A1A9258();
  result = 0;
  if ((v8 & 1) != 0)
    return v4 ^ v6 ^ 1u;
  return result;
}

unint64_t sub_20A16EF98()
{
  unint64_t result;

  result = qword_2545D9C78;
  if (!qword_2545D9C78)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2E98, &type metadata for MobileDocumentReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C78);
  }
  return result;
}

unint64_t sub_20A16EFE0()
{
  unint64_t result;

  result = qword_2545D9C88;
  if (!qword_2545D9C88)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderConfiguration, &type metadata for MobileDocumentReaderConfiguration);
    atomic_store(result, (unint64_t *)&qword_2545D9C88);
  }
  return result;
}

uint64_t sub_20A16F028(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileDocumentReaderConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MobileDocumentReaderConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderConfiguration()
{
  return &type metadata for MobileDocumentReaderConfiguration;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A16F20C + 4 * byte_20A1B2CE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A16F240 + 4 * byte_20A1B2CE0[v4]))();
}

uint64_t sub_20A16F240(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A16F248(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A16F250);
  return result;
}

uint64_t sub_20A16F25C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A16F264);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A16F268(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A16F270(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderConfiguration.CodingKeys()
{
  return &type metadata for MobileDocumentReaderConfiguration.CodingKeys;
}

unint64_t sub_20A16F290()
{
  unint64_t result;

  result = qword_2545D9C90;
  if (!qword_2545D9C90)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2E70, &type metadata for MobileDocumentReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C90);
  }
  return result;
}

unint64_t sub_20A16F2D8()
{
  unint64_t result;

  result = qword_2545D9C98;
  if (!qword_2545D9C98)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2DE0, &type metadata for MobileDocumentReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9C98);
  }
  return result;
}

unint64_t sub_20A16F320()
{
  unint64_t result;

  result = qword_2545D9CA0;
  if (!qword_2545D9CA0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B2E08, &type metadata for MobileDocumentReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9CA0);
  }
  return result;
}

uint64_t sub_20A16F364(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x800000020A1BDE20 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020A1BDE40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t DigitalPresentmentResponse.encryptedData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7CoreIDV26DigitalPresentmentResponse_encryptedData);
  sub_20A120BD8(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC7CoreIDV26DigitalPresentmentResponse_encryptedData + 8));
  return v1;
}

id DigitalPresentmentResponse.__allocating_init(encryptedData:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC7CoreIDV26DigitalPresentmentResponse_encryptedData];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id DigitalPresentmentResponse.init(encryptedData:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC7CoreIDV26DigitalPresentmentResponse_encryptedData];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t static DigitalPresentmentResponse.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall DigitalPresentmentResponse.encode(with:)(NSCoder with)
{
  void *v2;
  id v3;

  v2 = (void *)sub_20A1A8C1C();
  v3 = (id)sub_20A1A8D9C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

}

id DigitalPresentmentResponse.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DigitalPresentmentResponse.init(coder:)(a1);
}

id DigitalPresentmentResponse.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_20A16F850();
  v4 = v1;
  v5 = sub_20A1A8FD0();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = sub_20A1A8C28();
    v9 = v8;

    v10 = (uint64_t *)&v4[OBJC_IVAR____TtC7CoreIDV26DigitalPresentmentResponse_encryptedData];
    *v10 = v7;
    v10[1] = v9;

    v17.receiver = v4;
    v17.super_class = ObjectType;
    v11 = objc_msgSendSuper2(&v17, sel_init);

  }
  else
  {

    if (qword_253EB1CD0 != -1)
      swift_once();
    v12 = sub_20A1A8D3C();
    __swift_project_value_buffer(v12, (uint64_t)qword_253EB3268);
    v13 = sub_20A1A8D24();
    v14 = sub_20A1A8FA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_20A10F000, v13, v14, "DigitalPresentmentResponse initWithCoder could not decode encryptedData", v15, 2u);
      MEMORY[0x20BD214DC](v15, -1, -1);
    }

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

unint64_t sub_20A16F850()
{
  unint64_t result;

  result = qword_2545DB140;
  if (!qword_2545DB140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545DB140);
  }
  return result;
}

id DigitalPresentmentResponse.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DigitalPresentmentResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DigitalPresentmentResponse.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DigitalPresentmentResponse()
{
  return objc_opt_self();
}

uint64_t method lookup function for DigitalPresentmentResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DigitalPresentmentResponse.__allocating_init(encryptedData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DigitalPresentmentResponse.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.applicationIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.installationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem() + 20);
  v4 = sub_20A1A8C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem()
{
  uint64_t result;

  result = qword_2545D9D20;
  if (!qword_2545D9D20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.identityKeyBlob.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem() + 24);
  v2 = *(_QWORD *)v1;
  sub_20A120BD8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.init(applicationIdentifier:installationIdentifier:identityKeyBlob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  *a6 = a1;
  a6[1] = a2;
  v10 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  v11 = (char *)a6 + *(int *)(v10 + 20);
  v12 = sub_20A1A8C70();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
  v14 = (_QWORD *)((char *)a6 + *(int *)(v10 + 24));
  *v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;

  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  v1 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 24));
  v3 = *v2;
  v4 = v2[1];
  sub_20A120BD8(*v2, v4);
  sub_20A1A8C34();
  return sub_20A120E74(v3, v4);
}

unint64_t sub_20A16FBF0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x797469746E656469;
  if (*v0 == 1)
    v1 = 0xD000000000000016;
  if (*v0)
    return v1;
  else
    return 0xD000000000000015;
}

uint64_t sub_20A16FC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A1713DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A16FC7C()
{
  sub_20A1709B4();
  return sub_20A1A9360();
}

uint64_t sub_20A16FCA4()
{
  sub_20A1709B4();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9CB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1709B4();
  sub_20A1A9354();
  LOBYTE(v12) = 0;
  sub_20A1A9204();
  if (!v2)
  {
    v9 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
    LOBYTE(v12) = 1;
    sub_20A1A8C70();
    sub_20A1205FC(&qword_2545D9C28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_20A1A9228();
    v12 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    sub_20A1275D8();
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  sub_20A1A8C34();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;

  v17 = a2;
  v3 = sub_20A1A8C70();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9CC8);
  v6 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1709B4();
  v20 = v8;
  v12 = v22;
  sub_20A1A9348();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v19;
  LOBYTE(v23) = 0;
  *v11 = sub_20A1A918C();
  v11[1] = v15;
  LOBYTE(v23) = 1;
  sub_20A1205FC(&qword_2545D9C38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_20A1A91B0();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v11 + *(int *)(v9 + 20), v5, v14);
  v24 = 2;
  sub_20A127940();
  v22 = 0;
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v21);
  *(_OWORD *)((char *)v11 + *(int *)(v9 + 24)) = v23;
  sub_20A1709F8((uint64_t)v11, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A170A3C((uint64_t)v11);
}

uint64_t sub_20A1701D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderIdentityKeyResponse.StatusItem.init(from:)(a1, a2);
}

uint64_t sub_20A1701E8(_QWORD *a1)
{
  return MobileDocumentReaderIdentityKeyResponse.StatusItem.encode(to:)(a1);
}

uint64_t sub_20A1701FC()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  sub_20A1A8C34();
  return sub_20A1A933C();
}

uint64_t sub_20A1702A0()
{
  sub_20A1A8DE4();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  return sub_20A1A8C34();
}

uint64_t sub_20A17032C()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  sub_20A1A8C70();
  sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_20A1A8D60();
  sub_20A1A8C34();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.items.getter()
{
  return swift_bridgeObjectRetain();
}

CoreIDV::MobileDocumentReaderIdentityKeyResponse __swiftcall MobileDocumentReaderIdentityKeyResponse.init(items:)(CoreIDV::MobileDocumentReaderIdentityKeyResponse items)
{
  CoreIDV::MobileDocumentReaderIdentityKeyResponse *v1;

  v1->items._rawValue = items.items._rawValue;
  return items;
}

uint64_t MobileDocumentReaderIdentityKeyResponse.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  v1 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 16);
  result = sub_20A1A9318();
  if (v6)
  {
    v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    v11[1] = v5;
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x24BDCEA88];
    do
    {
      sub_20A1709F8(v8, (uint64_t)v4);
      sub_20A1A8DE4();
      sub_20A1A8C70();
      sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v10);
      sub_20A1A8D60();
      sub_20A1A8C34();
      sub_20A170A3C((uint64_t)v4);
      v8 += v9;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static MobileDocumentReaderIdentityKeyResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_20A1253B8(*a1, *a2);
}

uint64_t sub_20A170530()
{
  sub_20A170A78();
  return sub_20A1A9360();
}

uint64_t sub_20A170558()
{
  sub_20A170A78();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9CD0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A170A78();
  sub_20A1A9354();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9CE0);
  sub_20A170ABC(&qword_2545D9CE8, &qword_2545D9CF0, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyResponse.StatusItem, MEMORY[0x24BEE12A0]);
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentReaderIdentityKeyResponse.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A133888((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9CF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A170A78();
  sub_20A1A9348();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9CE0);
    sub_20A170ABC(&qword_2545D9D00, &qword_2545D9D08, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyResponse.StatusItem, MEMORY[0x24BEE12D0]);
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A170844@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MobileDocumentReaderIdentityKeyResponse.init(from:)(a1, a2);
}

uint64_t sub_20A170858(_QWORD *a1)
{
  return MobileDocumentReaderIdentityKeyResponse.encode(to:)(a1);
}

uint64_t sub_20A17086C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A133888((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A1708C4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A133888((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A170914(uint64_t *a1, uint64_t *a2)
{
  return sub_20A1253B8(*a1, *a2);
}

void _s7CoreIDV39MobileDocumentReaderIdentityKeyResponseV10StatusItemV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v3;
  uint64_t v4;

  v3 = *a1 == *a2 && a1[1] == a2[1];
  if (v3 || (sub_20A1A9258() & 1) != 0)
  {
    v4 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
    if ((sub_20A1A8C58() & 1) != 0)
      sub_20A1692C0(*(_QWORD *)((char *)a1 + *(int *)(v4 + 24)), *(_QWORD *)((char *)a1 + *(int *)(v4 + 24) + 8));
  }
}

unint64_t sub_20A1709B4()
{
  unint64_t result;

  result = qword_2545D9CC0;
  if (!qword_2545D9CC0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B32F4, &type metadata for MobileDocumentReaderIdentityKeyResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9CC0);
  }
  return result;
}

uint64_t sub_20A1709F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A170A3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A170A78()
{
  unint64_t result;

  result = qword_2545D9CD8;
  if (!qword_2545D9CD8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B32A4, &type metadata for MobileDocumentReaderIdentityKeyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9CD8);
  }
  return result;
}

uint64_t sub_20A170ABC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D9CE0);
    v10 = sub_20A1205FC(a2, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem, a3);
    result = MEMORY[0x20BD21434](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A170B40()
{
  return sub_20A1205FC(&qword_2545D9D10, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyResponse.StatusItem);
}

unint64_t sub_20A170B70()
{
  unint64_t result;

  result = qword_2545D9D18;
  if (!qword_2545D9D18)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderIdentityKeyResponse, &type metadata for MobileDocumentReaderIdentityKeyResponse);
    atomic_store(result, (unint64_t *)&qword_2545D9D18);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderIdentityKeyResponse()
{
  return &type metadata for MobileDocumentReaderIdentityKeyResponse;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderIdentityKeyResponse.StatusItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_20A1A8C70();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = *v15;
    v17 = v15[1];
    sub_20A120BD8(*v15, v17);
    *v14 = v16;
    v14[1] = v17;
  }
  return v4;
}

uint64_t destroy for MobileDocumentReaderIdentityKeyResponse.StatusItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_20A1A8C70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return sub_20A120E74(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

_QWORD *initializeWithCopy for MobileDocumentReaderIdentityKeyResponse.StatusItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8C70();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  sub_20A120BD8(*v14, v16);
  *v13 = v15;
  v13[1] = v16;
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderIdentityKeyResponse.StatusItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8C70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *v12;
  v14 = v12[1];
  sub_20A120BD8(*v12, v14);
  v15 = *v11;
  v16 = v11[1];
  *v11 = v13;
  v11[1] = v14;
  sub_20A120E74(v15, v16);
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderIdentityKeyResponse.StatusItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8C70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for MobileDocumentReaderIdentityKeyResponse.StatusItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8C70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = *(_QWORD *)((char *)a1 + v11);
  v13 = *(_QWORD *)((char *)a1 + v11 + 8);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  sub_20A120E74(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderIdentityKeyResponse.StatusItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A170F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20A1A8C70();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderIdentityKeyResponse.StatusItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A170FD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_20A1A8C70();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20A171048()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A1A8C70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderIdentityKeyResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A171104 + 4 * byte_20A1B2F20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A171124 + 4 * byte_20A1B2F25[v4]))();
}

_BYTE *sub_20A171104(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A171124(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A17112C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A171134(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A17113C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A171144(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderIdentityKeyResponse.CodingKeys()
{
  return &type metadata for MobileDocumentReaderIdentityKeyResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderIdentityKeyResponse.StatusItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A1711AC + 4 * byte_20A1B2F2F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A1711E0 + 4 * byte_20A1B2F2A[v4]))();
}

uint64_t sub_20A1711E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1711E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1711F0);
  return result;
}

uint64_t sub_20A1711FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A171204);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A171208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A171210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem.CodingKeys()
{
  return &type metadata for MobileDocumentReaderIdentityKeyResponse.StatusItem.CodingKeys;
}

unint64_t sub_20A171230()
{
  unint64_t result;

  result = qword_2545D9D30;
  if (!qword_2545D9D30)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B31C4, &type metadata for MobileDocumentReaderIdentityKeyResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9D30);
  }
  return result;
}

unint64_t sub_20A171278()
{
  unint64_t result;

  result = qword_2545D9D38;
  if (!qword_2545D9D38)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B327C, &type metadata for MobileDocumentReaderIdentityKeyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9D38);
  }
  return result;
}

unint64_t sub_20A1712C0()
{
  unint64_t result;

  result = qword_2545D9D40;
  if (!qword_2545D9D40)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B31EC, &type metadata for MobileDocumentReaderIdentityKeyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9D40);
  }
  return result;
}

unint64_t sub_20A171308()
{
  unint64_t result;

  result = qword_2545D9D48;
  if (!qword_2545D9D48)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3214, &type metadata for MobileDocumentReaderIdentityKeyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9D48);
  }
  return result;
}

unint64_t sub_20A171350()
{
  unint64_t result;

  result = qword_2545D9D50;
  if (!qword_2545D9D50)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3134, &type metadata for MobileDocumentReaderIdentityKeyResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9D50);
  }
  return result;
}

unint64_t sub_20A171398()
{
  unint64_t result;

  result = qword_2545D9D58;
  if (!qword_2545D9D58)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B315C, &type metadata for MobileDocumentReaderIdentityKeyResponse.StatusItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9D58);
  }
  return result;
}

uint64_t sub_20A1713DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000020A1BDD80 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BDDA0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xEF626F6C4279654BLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t MobileDocumentType.Identifier.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v0, (uint64_t)v7, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_20A1A9318();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_20A1A9318();
  sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t type metadata accessor for MobileDocumentType.Identifier(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545D9E20);
}

uint64_t sub_20A17169C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C616E6F6974616ELL;
  else
    return 0x4C73726576697264;
}

uint64_t sub_20A1716F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A174424(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A171714()
{
  sub_20A17313C();
  return sub_20A1A9360();
}

uint64_t sub_20A17173C()
{
  sub_20A17313C();
  return sub_20A1A936C();
}

uint64_t sub_20A171764()
{
  sub_20A1731C4();
  return sub_20A1A9360();
}

uint64_t sub_20A17178C()
{
  sub_20A1731C4();
  return sub_20A1A936C();
}

uint64_t sub_20A1717B4()
{
  sub_20A173180();
  return sub_20A1A9360();
}

uint64_t sub_20A1717DC()
{
  sub_20A173180();
  return sub_20A1A936C();
}

uint64_t MobileDocumentType.Identifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9D80);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9D88);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9D90);
  v13 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A17313C();
  sub_20A1A9354();
  sub_20A127E8C(v29, (uint64_t)v12, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v31 = 0;
    sub_20A1731C4();
    v16 = v30;
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
  else
  {
    v29 = v13;
    v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v12, v4);
    v32 = 1;
    sub_20A173180();
    v19 = v26;
    v20 = v30;
    sub_20A1A91D4();
    sub_20A1205FC(&qword_2545D9DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED18]);
    v21 = v28;
    sub_20A1A9228();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v20);
  }
}

uint64_t MobileDocumentType.Identifier.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_20A1A933C();
}

uint64_t MobileDocumentType.Identifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9DB8);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9DC0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9DC8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MobileDocumentType.Identifier(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A17313C();
  v18 = v41;
  sub_20A1A9348();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_20A1A91C8();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_20A173180();
        sub_20A1A9150();
        v27 = sub_20A1A8CAC();
        sub_20A1205FC(&qword_2545D9DD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED30]);
        v28 = v15;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_20A1A91B0();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_20A12063C(v31, (uint64_t)v17, type metadata accessor for MobileDocumentType.Identifier);
      }
      else
      {
        v43 = 0;
        sub_20A1731C4();
        sub_20A1A9150();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = sub_20A1A8CAC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_20A12063C((uint64_t)v17, v21, type metadata accessor for MobileDocumentType.Identifier);
    }
    else
    {
      v23 = sub_20A1A90B4();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
      *v25 = v33;
      sub_20A1A915C();
      sub_20A1A90A8();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_20A1720B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentType.Identifier.init(from:)(a1, a2);
}

uint64_t sub_20A1720CC(_QWORD *a1)
{
  return MobileDocumentType.Identifier.encode(to:)(a1);
}

uint64_t sub_20A1720E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v0, (uint64_t)v7, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_20A1A9318();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_20A1A9318();
  sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_20A172218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_20A1A933C();
}

uint64_t MobileDocumentType.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1, a1, type metadata accessor for MobileDocumentType.Identifier);
}

uint64_t MobileDocumentType.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v0, (uint64_t)v7, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_20A1A9318();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_20A1A9318();
  sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_20A1724D8()
{
  sub_20A173410();
  return sub_20A1A9360();
}

uint64_t sub_20A172500()
{
  sub_20A173410();
  return sub_20A1A936C();
}

uint64_t MobileDocumentType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9DD8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A173410();
  sub_20A1A9354();
  type metadata accessor for MobileDocumentType.Identifier(0);
  sub_20A1205FC(&qword_2545D9DE8, type metadata accessor for MobileDocumentType.Identifier, (uint64_t)&protocol conformance descriptor for MobileDocumentType.Identifier);
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t MobileDocumentType.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_20A1A933C();
}

uint64_t MobileDocumentType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9DF0);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDocumentType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A173410();
  sub_20A1A9348();
  if (!v2)
  {
    sub_20A1205FC(&qword_2545D9DF8, type metadata accessor for MobileDocumentType.Identifier, (uint64_t)&protocol conformance descriptor for MobileDocumentType.Identifier);
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_20A12063C(v15, (uint64_t)v11, type metadata accessor for MobileDocumentType.Identifier);
    sub_20A12063C((uint64_t)v11, v13, type metadata accessor for MobileDocumentType);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A17295C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentType.init(from:)(a1, a2);
}

uint64_t sub_20A172970(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9DD8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A173410();
  sub_20A1A9354();
  type metadata accessor for MobileDocumentType.Identifier(0);
  sub_20A1205FC(&qword_2545D9DE8, type metadata accessor for MobileDocumentType.Identifier, (uint64_t)&protocol conformance descriptor for MobileDocumentType.Identifier);
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_20A172A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v0, (uint64_t)v7, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_20A1A9318();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_20A1A9318();
  sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_20A172BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_20A1A933C();
}

uint64_t static MobileDocumentType.isSupportedNationalIDCardRegion(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for MobileDocumentType(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A1A8CAC();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MobileDocumentType.iso18013Identifier.getter();
  swift_bridgeObjectRelease();
  sub_20A124284((uint64_t)v4, type metadata accessor for MobileDocumentType);
  return 1;
}

uint64_t sub_20A172E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for MobileDocumentType(0);
  __swift_allocate_value_buffer(v0, qword_2545D9D60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2545D9D60);
  v2 = sub_20A1A8CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static MobileDocumentType.driversLicense.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2545D80D0 != -1)
    swift_once();
  v2 = type metadata accessor for MobileDocumentType(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2545D9D60);
  return sub_20A127E8C(v3, a1, type metadata accessor for MobileDocumentType);
}

uint64_t static MobileDocumentType.nationalIDCard(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t _s7CoreIDV18MobileDocumentTypeV10IdentifierO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9E88);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_20A127E8C(a1, (uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
  sub_20A127E8C(a2, v15, type metadata accessor for MobileDocumentType.Identifier);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_20A127E8C((uint64_t)v14, (uint64_t)v10, type metadata accessor for MobileDocumentType.Identifier);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_20A1A8CA0();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_20A124284((uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_20A17455C((uint64_t)v14);
    v17 = 0;
    return v17 & 1;
  }
  sub_20A124284((uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
  v17 = 1;
  return v17 & 1;
}

unint64_t sub_20A17313C()
{
  unint64_t result;

  result = qword_2545D9D98;
  if (!qword_2545D9D98)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B38C4, &type metadata for MobileDocumentType.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9D98);
  }
  return result;
}

unint64_t sub_20A173180()
{
  unint64_t result;

  result = qword_2545D9DA0;
  if (!qword_2545D9DA0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3874, &type metadata for MobileDocumentType.Identifier.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9DA0);
  }
  return result;
}

unint64_t sub_20A1731C4()
{
  unint64_t result;

  result = qword_2545D9DB0;
  if (!qword_2545D9DB0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3824, &type metadata for MobileDocumentType.Identifier.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9DB0);
  }
  return result;
}

uint64_t _s7CoreIDV18MobileDocumentTypeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9E88);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_20A127E8C(a1, (uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
  sub_20A127E8C(a2, v15, type metadata accessor for MobileDocumentType.Identifier);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
      goto LABEL_8;
    goto LABEL_6;
  }
  sub_20A127E8C((uint64_t)v14, (uint64_t)v10, type metadata accessor for MobileDocumentType.Identifier);
  if (v16(v15, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_6:
    sub_20A17455C((uint64_t)v14);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
  v17 = sub_20A1A8CA0();
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v18(v10, v4);
  if ((v17 & 1) != 0)
  {
LABEL_8:
    sub_20A124284((uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
    return 1;
  }
  sub_20A124284((uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
  return 0;
}

unint64_t sub_20A173410()
{
  unint64_t result;

  result = qword_2545D9DE0;
  if (!qword_2545D9DE0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B37D4, &type metadata for MobileDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9DE0);
  }
  return result;
}

uint64_t type metadata accessor for MobileDocumentType(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545D9E10);
}

uint64_t sub_20A173468()
{
  return sub_20A1205FC(&qword_2545D9E00, type metadata accessor for MobileDocumentType.Identifier, (uint64_t)&protocol conformance descriptor for MobileDocumentType.Identifier);
}

uint64_t sub_20A173494()
{
  return sub_20A1205FC(&qword_2545D9E08, type metadata accessor for MobileDocumentType, (uint64_t)&protocol conformance descriptor for MobileDocumentType);
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(type metadata accessor for MobileDocumentType.Identifier(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_20A1A8CAC();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

void *initializeWithCopy for MobileDocumentType(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for MobileDocumentType(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for MobileDocumentType(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for MobileDocumentType(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A1738B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentType.Identifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A173900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentType.Identifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_20A173940()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MobileDocumentType.Identifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DigitalPresentmentDocumentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_20A1A8CAC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for DigitalPresentmentDocumentType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for DigitalPresentmentDocumentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for DigitalPresentmentDocumentType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for DigitalPresentmentDocumentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for DigitalPresentmentDocumentType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentType.Identifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A173E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_20A1A8CAC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentType.Identifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A173E64(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_20A1A8CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_20A173EB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20A1A8CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_20A173EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20A1A8CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_20A173F2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A1A8CAC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentType.CodingKeys()
{
  return &type metadata for MobileDocumentType.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentType.Identifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A173FE0 + 4 * byte_20A1B3355[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A174014 + 4 * byte_20A1B3350[v4]))();
}

uint64_t sub_20A174014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A17401C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A174024);
  return result;
}

uint64_t sub_20A174030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A174038);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A17403C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A174044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentType.Identifier.CodingKeys()
{
  return &type metadata for MobileDocumentType.Identifier.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentType.Identifier.DriversLicenseCodingKeys()
{
  return &type metadata for MobileDocumentType.Identifier.DriversLicenseCodingKeys;
}

uint64_t _s7CoreIDV18MobileDocumentTypeV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A1740B0 + 4 * byte_20A1B335A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A1740D0 + 4 * byte_20A1B335F[v4]))();
}

_BYTE *sub_20A1740B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A1740D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A1740D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A1740E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A1740E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A1740F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentType.Identifier.NationalIDCardCodingKeys()
{
  return &type metadata for MobileDocumentType.Identifier.NationalIDCardCodingKeys;
}

unint64_t sub_20A174110()
{
  unint64_t result;

  result = qword_2545D9E30;
  if (!qword_2545D9E30)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B35EC, &type metadata for MobileDocumentType.Identifier.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E30);
  }
  return result;
}

unint64_t sub_20A174158()
{
  unint64_t result;

  result = qword_2545D9E38;
  if (!qword_2545D9E38)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B36F4, &type metadata for MobileDocumentType.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E38);
  }
  return result;
}

unint64_t sub_20A1741A0()
{
  unint64_t result;

  result = qword_2545D9E40;
  if (!qword_2545D9E40)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B37AC, &type metadata for MobileDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E40);
  }
  return result;
}

unint64_t sub_20A1741E8()
{
  unint64_t result;

  result = qword_2545D9E48;
  if (!qword_2545D9E48)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B371C, &type metadata for MobileDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E48);
  }
  return result;
}

unint64_t sub_20A174230()
{
  unint64_t result;

  result = qword_2545D9E50;
  if (!qword_2545D9E50)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3744, &type metadata for MobileDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E50);
  }
  return result;
}

unint64_t sub_20A174278()
{
  unint64_t result;

  result = qword_2545D9E58;
  if (!qword_2545D9E58)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3614, &type metadata for MobileDocumentType.Identifier.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E58);
  }
  return result;
}

unint64_t sub_20A1742C0()
{
  unint64_t result;

  result = qword_2545D9E60;
  if (!qword_2545D9E60)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B363C, &type metadata for MobileDocumentType.Identifier.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E60);
  }
  return result;
}

unint64_t sub_20A174308()
{
  unint64_t result;

  result = qword_2545D9E68;
  if (!qword_2545D9E68)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B355C, &type metadata for MobileDocumentType.Identifier.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E68);
  }
  return result;
}

unint64_t sub_20A174350()
{
  unint64_t result;

  result = qword_2545D9E70;
  if (!qword_2545D9E70)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3584, &type metadata for MobileDocumentType.Identifier.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E70);
  }
  return result;
}

unint64_t sub_20A174398()
{
  unint64_t result;

  result = qword_2545D9E78;
  if (!qword_2545D9E78)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3664, &type metadata for MobileDocumentType.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E78);
  }
  return result;
}

unint64_t sub_20A1743E0()
{
  unint64_t result;

  result = qword_2545D9E80;
  if (!qword_2545D9E80)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B368C, &type metadata for MobileDocumentType.Identifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9E80);
  }
  return result;
}

uint64_t sub_20A174424(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C73726576697264 && a2 == 0xEE0065736E656369;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E6F6974616ELL && a2 == 0xEE00647261434449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A17455C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9E88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A17459C()
{
  uint64_t v0;

  v0 = sub_20A1A8D3C();
  __swift_allocate_value_buffer(v0, qword_253EB3268);
  __swift_project_value_buffer(v0, (uint64_t)qword_253EB3268);
  return sub_20A1A8D30();
}

id IdentityProvisioningSession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IdentityProvisioningSession.init()()
{
  void *v0;
  void *v1;
  char *v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  objc_super v23;
  _OWORD v24[2];

  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_interfaceWithProtocol_, &unk_2545F9D48);
  memset(v24, 0, sizeof(v24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9E90);
  swift_allocObject();
  v4 = sub_20A145108(0xD00000000000002CLL, 0x800000020A1BC680, (uint64_t)v3, (uint64_t)sub_20A174A08, 0, (uint64_t)sub_20A174A14, 0, 0, (uint64_t)v24, (uint64_t)sub_20A165474, 0);

  v5 = OBJC_IVAR____TtC7CoreIDV27IdentityProvisioningSession_connection;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7CoreIDV27IdentityProvisioningSession_connection] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9EA0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20A1B3920;
  v7 = sub_20A1366C8(0, &qword_2545D9EA8);
  *(_QWORD *)(v6 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9EB0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = sub_20A1366C8(0, &qword_2545D89B0);
  *(_QWORD *)(v6 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9EB8);
  *(_QWORD *)(v6 + 64) = v8;
  v9 = sub_20A1366C8(0, (unint64_t *)&qword_2545DB140);
  *(_QWORD *)(v6 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9EC0);
  *(_QWORD *)(v6 + 96) = v9;
  v10 = sub_20A1366C8(0, &qword_2545D9EC8);
  *(_QWORD *)(v6 + 152) = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9ED0);
  *(_QWORD *)(v6 + 128) = v10;
  v11 = sub_20A1366C8(0, &qword_2545D9ED8);
  *(_QWORD *)(v6 + 184) = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9EE0);
  *(_QWORD *)(v6 + 160) = v11;
  v12 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v13 = (void *)sub_20A1A8E98();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithArray_, v13);

  *(_QWORD *)&v24[0] = 0;
  sub_20A1A8F7C();

  if (*(_QWORD *)&v24[0])
  {
    v15 = objc_msgSend(*(id *)(*(_QWORD *)&v2[v5] + 16), sel_remoteObjectInterface);
    if (v15)
    {
      v16 = v15;
      v17 = (void *)sub_20A1A8F70();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setClasses_forSelector_argumentIndex_ofReply_, v17, sel_generateIdentityProvisioningAttestationsWithCredentialIdentifier_pairingID_completionHandler_, 0, 1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {

    if (qword_253EB1CD0 != -1)
      swift_once();
    v18 = sub_20A1A8D3C();
    __swift_project_value_buffer(v18, (uint64_t)qword_253EB3268);
    v19 = sub_20A1A8D24();
    v20 = sub_20A1A8FA0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_20A10F000, v19, v20, "Failed to initialize IdentityProvisioning interface classes", v21, 2u);
      MEMORY[0x20BD214DC](v21, -1, -1);
    }

  }
  v23.receiver = v2;
  v23.super_class = (Class)type metadata accessor for IdentityProvisioningSession();
  return objc_msgSendSuper2(&v23, sel_init);
}

void sub_20A174A08()
{
  sub_20A139EF0("IdentityProvisioning connection invalidated");
}

void sub_20A174A14()
{
  sub_20A139EF0("IdentityProvisioning connection interrupted");
}

uint64_t sub_20A174A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_20A174A60()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8FA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "DIIdentityProvisioningAttestationsManager generateIdentityProvisioningAttestations", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v5 = v0[6];
  v6 = v0[7];
  v7 = v0[4];
  v8 = v0[5];
  v9 = v0[3];

  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtC7CoreIDV27IdentityProvisioningSession_connection);
  v11 = (_QWORD *)swift_allocObject();
  v0[9] = v11;
  v11[2] = v9;
  v11[3] = v7;
  v11[4] = v8;
  v11[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)swift_task_alloc();
  v0[10] = v12;
  v12[2] = v10;
  v12[3] = asc_2545D9EF8;
  v12[4] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v0[11] = v13;
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v10;
  v14 = (_QWORD *)swift_task_alloc();
  v0[12] = v14;
  sub_20A1366C8(0, &qword_2545D9EC8);
  *v14 = v0;
  v14[1] = sub_20A174C3C;
  return sub_20A1A9264();
}

uint64_t sub_20A174C3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_QWORD *)(v2 + 112) = *(_QWORD *)(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_20A174CCC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_20A1A8D24();
  v2 = sub_20A1A8FA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_20A10F000, v1, v2, "DIIdentityProvisioningAttestationsManager generateIdentityProvisioningAttestations returned successfully", v3, 2u);
    MEMORY[0x20BD214DC](v3, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 112));
}

uint64_t sub_20A174D74()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A174DBC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[18] = a4;
  v6[19] = a5;
  v6[16] = a1;
  v6[17] = a3;
  v7 = *a2;
  v6[20] = a6;
  v6[21] = v7;
  return swift_task_switch();
}

uint64_t sub_20A174DE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[20];
  v2 = sub_20A1A8D9C();
  v0[22] = v2;
  if (v1)
    v1 = sub_20A1A8D9C();
  v0[23] = v1;
  v3 = (void *)v0[21];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A174EB4;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_20A13B188;
  v5[3] = &block_descriptor_1;
  v5[4] = v4;
  objc_msgSend(v3, sel_generateIdentityProvisioningAttestationsWithCredentialIdentifier_pairingID_completionHandler_, v2, v1, v5);
  return swift_continuation_await();
}

uint64_t sub_20A174EB4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A174F14()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 176);
  v1 = *(void **)(v0 + 184);
  **(_QWORD **)(v0 + 128) = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A174F54()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1750D4(int a1, uint64_t a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v7 = sub_20A1A8DB4();
  v9 = v8;
  v4[4] = v8;
  if (a2)
  {
    a2 = sub_20A1A8DB4();
    v11 = v10;
  }
  else
  {
    v11 = 0;
  }
  v4[5] = v11;
  v12 = a4;
  v13 = (_QWORD *)swift_task_alloc();
  v4[6] = v13;
  *v13 = v4;
  v13[1] = sub_20A1751A4;
  v13[6] = v11;
  v13[7] = v12;
  v13[4] = v9;
  v13[5] = a2;
  v13[3] = v7;
  return swift_task_switch();
}

uint64_t sub_20A1751A4(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  swift_bridgeObjectRelease();
  if (v3)
  {
    v8 = (void *)sub_20A1A8BB0();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](v7, a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

id IdentityProvisioningSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IdentityProvisioningSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A1752BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_20A1752D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  sub_20A1366C8(0, &qword_2545D9EC8);
  *v3 = v0;
  v3[1] = sub_20A1679D8;
  return sub_20A1A927C();
}

uint64_t type metadata accessor for IdentityProvisioningSession()
{
  return objc_opt_self();
}

uint64_t sub_20A1753BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A1753E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v10 = *(_OWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v8 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *(_QWORD *)v8 = v3;
  *(_QWORD *)(v8 + 8) = sub_20A1465AC;
  *(_QWORD *)(v8 + 152) = v7;
  *(_QWORD *)(v8 + 160) = v6;
  *(_OWORD *)(v8 + 136) = v10;
  *(_QWORD *)(v8 + 128) = a1;
  *(_QWORD *)(v8 + 168) = *a2;
  return swift_task_switch();
}

uint64_t sub_20A17547C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A143D1C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2545D9F00 + dword_2545D9F00))(a1, v4, v5, v6);
}

void sub_20A1754FC()
{
  uint64_t *v0;

  sub_20A13D244(v0[2], v0[3], v0[4]);
}

uint64_t method lookup function for IdentityProvisioningSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityProvisioningSession.generateIdentityProvisioningAttestations(credentialIdentifier:pairingID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_20A1680FC;
  return v13(a1, a2, a3, a4);
}

uint64_t sub_20A1755AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_20A1755E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_20A143D1C;
  return ((uint64_t (*)(int, uint64_t, void *, void *))((char *)&dword_2545D9F18 + dword_2545D9F18))(v2, v3, v5, v4);
}

uint64_t sub_20A175668(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECBC(a1, v1[2], v1[3], v1[4]);
}

id IdentityProofingSession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IdentityProofingSession.init()()
{
  void *v0;
  void *v1;
  char *v2;
  id v3;
  _QWORD *v4;
  objc_super v6;
  _OWORD v7[2];

  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_interfaceWithProtocol_, &unk_2545F9DE8);
  memset(v7, 0, sizeof(v7));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9F28);
  swift_allocObject();
  v4 = sub_20A145148(0xD000000000000028, 0x800000020A1BDDC0, (uint64_t)v3, (uint64_t)sub_20A1757A0, 0, (uint64_t)sub_20A1757AC, 0, 0, (uint64_t)v7, (uint64_t)sub_20A165474, 0);

  *(_QWORD *)&v2[OBJC_IVAR____TtC7CoreIDV23IdentityProofingSession_connection] = v4;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for IdentityProofingSession();
  return objc_msgSendSuper2(&v6, sel_init);
}

void sub_20A1757A0()
{
  sub_20A139EF0("IdentityProofing connection invalidated");
}

void sub_20A1757AC()
{
  sub_20A139EF0("IdentityProofing connection interrupted");
}

uint64_t sub_20A1757D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20A1757F8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v1 = sub_20A1A8D3C();
  v0[7] = __swift_project_value_buffer(v1, (uint64_t)qword_253EB3268);
  v2 = sub_20A1A8D24();
  v3 = sub_20A1A8FA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A10F000, v2, v3, "IdentityProofingSession cancelProofing", v4, 2u);
    MEMORY[0x20BD214DC](v4, -1, -1);
  }
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[3];
  v8 = v0[4];
  v9 = v0[2];

  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtC7CoreIDV23IdentityProofingSession_connection);
  v11 = (_QWORD *)swift_allocObject();
  v0[8] = v11;
  v11[2] = v9;
  v11[3] = v7;
  v11[4] = v8;
  v11[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)swift_task_alloc();
  v0[9] = v12;
  v12[2] = v10;
  v12[3] = &unk_2545D9F48;
  v12[4] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v0[10] = v13;
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v10;
  v14 = (_QWORD *)swift_task_alloc();
  v0[11] = v14;
  *v14 = v0;
  v14[1] = sub_20A1759B0;
  return sub_20A1A9264();
}

uint64_t sub_20A1759B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A175A38()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_20A1A8D24();
  v2 = sub_20A1A8FA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_20A10F000, v1, v2, "IdentityProofingSession cancelProofing returned successfully", v3, 2u);
    MEMORY[0x20BD214DC](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A175ADC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A175B24(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a3;
  v6[16] = a4;
  v6[19] = *a2;
  return swift_task_switch();
}

uint64_t sub_20A175B48()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[19];
  v2 = sub_20A1A8D9C();
  v0[20] = v2;
  v3 = sub_20A1A8D9C();
  v0[21] = v3;
  v0[2] = v0;
  v0[3] = sub_20A175C14;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_20A18F990;
  v5[3] = &block_descriptor_2;
  v5[4] = v4;
  objc_msgSend(v1, sel_cancelProofingWithState_country_completionHandler_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_20A175C14()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A175C74()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A175CAC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A175E2C(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_20A1A8DB4();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_20A1A8DB4();
  v11 = v10;
  v4[5] = v10;
  v12 = a4;
  v13 = (_QWORD *)swift_task_alloc();
  v4[6] = v13;
  *v13 = v4;
  v13[1] = sub_20A175EF0;
  v13[5] = v11;
  v13[6] = v12;
  v13[3] = v8;
  v13[4] = v9;
  v13[2] = v6;
  return swift_task_switch();
}

uint64_t sub_20A175EF0()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_20A1A8BB0();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

id IdentityProofingSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IdentityProofingSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A175FEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_20A1465AC;
  return v6();
}

uint64_t sub_20A176040(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_20A1465AC;
  return v7();
}

uint64_t sub_20A176094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A1A8F1C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20A1A8F10();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20A176480(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A1A8EE0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t type metadata accessor for IdentityProofingSession()
{
  return objc_opt_self();
}

uint64_t sub_20A1761F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A176224(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 40);
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_20A1465AC;
  *(_QWORD *)(v7 + 136) = v6;
  *(_QWORD *)(v7 + 144) = v5;
  *(_OWORD *)(v7 + 120) = v9;
  *(_QWORD *)(v7 + 152) = *a2;
  return swift_task_switch();
}

uint64_t sub_20A1762A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A143D1C;
  return sub_20A13CE18(a1, v4, v5, v6);
}

void sub_20A176314()
{
  uint64_t *v0;

  sub_20A13D260(v0[2], v0[3], v0[4]);
}

uint64_t method lookup function for IdentityProofingSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityProofingSession.cancelProofing(state:country:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_20A1465AC;
  return v13(a1, a2, a3, a4);
}

uint64_t sub_20A1763C4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_20A176400()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_20A143D1C;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_2545D9F60 + dword_2545D9F60))(v2, v3, v5, v4);
}

uint64_t sub_20A176480(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A1764C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A1764E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545D9F80 + dword_2545D9F80))(a1, v4);
}

void sub_20A176554()
{
  qword_2545D9F90 = (uint64_t)&unk_24C2CF750;
}

void MobileDocumentReaderSupportChecker.init(suiteNameOverride:)(uint64_t *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v3 = (void *)sub_20A1A8D9C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_253EB1CF0);
    v5 = swift_allocObject();
    *(_DWORD *)(v5 + 24) = 0;
    *(_QWORD *)(v5 + 16) = v4;
    *a1 = v5;
  }
  else
  {
    __break(1u);
  }
}

uint64_t MobileDocumentReaderSupportChecker.isLocaleSupported(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  _QWORD *v18;
  id v19;
  void *v20;
  id v21;
  _QWORD *v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  char v26;
  uint64_t v28;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  sub_20A1A8CC4();
  v5 = sub_20A1A8CAC();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) != 1)
  {
    v12 = sub_20A1A8C88();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
    v15 = *(id *)(v4 + 16);
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
    swift_release();
    v16 = (void *)sub_20A1A8D9C();
    v17 = objc_msgSend(v15, sel_stringArrayForKey_, v16);

    if (v17)
    {
      v18 = (_QWORD *)sub_20A1A8EA4();

      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
      v19 = *(id *)(v4 + 16);
      os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
      swift_release();
      v20 = (void *)sub_20A1A8D9C();
      v21 = objc_msgSend(v19, sel_stringArrayForKey_, v20);

      if (v21)
      {
        v22 = (_QWORD *)sub_20A1A8EA4();

        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
        v23 = *(id *)(v4 + 16);
        os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
        swift_release();
        v24 = (void *)sub_20A1A8D9C();
        v25 = objc_msgSend(v23, sel_BOOLForKey_, v24);

        if ((v25 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v26 = sub_20A1769FC(v12, v14, v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = v26 ^ 1;
          return v11 & 1;
        }
        swift_bridgeObjectRelease();
        v11 = sub_20A1769FC(v12, v14, v18);
        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return v11 & 1;
      }
      swift_bridgeObjectRelease();
    }
    if (qword_2545D80D8 != -1)
      swift_once();
    v11 = sub_20A1769FC(v12, v14, (_QWORD *)qword_2545D9F90);
    goto LABEL_16;
  }
  sub_20A1245B8((uint64_t)v3);
  if (qword_253EB1CD0 != -1)
    swift_once();
  v7 = sub_20A1A8D3C();
  __swift_project_value_buffer(v7, (uint64_t)qword_253EB3268);
  v8 = sub_20A1A8D24();
  v9 = sub_20A1A8FA0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_20A10F000, v8, v9, "Mobile document reading not supported. Region is nil.", v10, 2u);
    MEMORY[0x20BD214DC](v10, -1, -1);
  }

  v11 = 0;
  return v11 & 1;
}

uint64_t sub_20A1769FC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_20A1A9258();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_20A1A9258() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MobileDocumentReaderSupportChecker.update(isGloballySupported:supportedRegions:unsupportedRegions:)(Swift::Bool isGloballySupported, Swift::OpaquePointer supportedRegions, Swift::OpaquePointer unsupportedRegions)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  Swift::Bool v27;
  uint64_t v28;

  v5 = *v3;
  if (qword_253EB1CD0 != -1)
    swift_once();
  v6 = sub_20A1A8D3C();
  __swift_project_value_buffer(v6, (uint64_t)qword_253EB3268);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_20A1A8D24();
  v8 = sub_20A1A8FA0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v28 = v26;
    *(_DWORD *)v9 = 67240706;
    v27 = isGloballySupported;
    sub_20A1A8FF4();
    *(_WORD *)(v9 + 8) = 2082;
    v10 = swift_bridgeObjectRetain();
    v11 = MEMORY[0x20BD20948](v10, MEMORY[0x24BEE0D00]);
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_20A146EE8(v11, v13, &v28);
    sub_20A1A8FF4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 18) = 2082;
    v14 = swift_bridgeObjectRetain();
    v15 = MEMORY[0x20BD20948](v14, MEMORY[0x24BEE0D00]);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_20A146EE8(v15, v17, &v28);
    sub_20A1A8FF4();
    swift_bridgeObjectRelease_n();
    isGloballySupported = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A10F000, v7, v8, "Updating mobile document reading supported regions. Is globally enabled: %{BOOL,public}d. Supported regions: %{public}s. Unsupported regions: %{public}s", (uint8_t *)v9, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x20BD214DC](v26, -1, -1);
    MEMORY[0x20BD214DC](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v18 = *(id *)(v5 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  v19 = (void *)sub_20A1A8D9C();
  objc_msgSend(v18, sel_setBool_forKey_, isGloballySupported, v19);

  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v20 = *(id *)(v5 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  v21 = (void *)sub_20A1A8E98();
  v22 = (void *)sub_20A1A8D9C();
  objc_msgSend(v20, sel_setObject_forKey_, v21, v22);

  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v23 = *(id *)(v5 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  v24 = (void *)sub_20A1A8E98();
  v25 = (void *)sub_20A1A8D9C();
  objc_msgSend(v23, sel_setObject_forKey_, v24, v25);

}

uint64_t dispatch thunk of MobileDocumentReaderSupportChecking.isLocaleSupported(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MobileDocumentReaderSupportChecking.update(isGloballySupported:supportedRegions:unsupportedRegions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

ValueMetadata *type metadata accessor for MobileDocumentReaderSupportChecker()
{
  return &type metadata for MobileDocumentReaderSupportChecker;
}

uint64_t IdentityDocumentElementCategoryGroups.recognizedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityDocumentElementCategoryGroups.retainingElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityDocumentElementCategoryGroups.notRetainingElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityDocumentElementCategoryGroups.displayOnlyElements.getter()
{
  return swift_bridgeObjectRetain();
}

void IdentityDocumentElementCategoryGroups.documentType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t IdentityDocumentElementCategoryGroups.maximumRetentionPeriod.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void __swiftcall IdentityDocumentElementCategoryGroups.init(documentType:documentElements:)(CoreIDV::IdentityDocumentElementCategoryGroups_optional *__return_ptr retstr, Swift::String documentType, Swift::OpaquePointer documentElements)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE *v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD **v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD **v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD **v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  CoreIDV::ISO18013KnownDocTypes v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  CoreIDV::IdentityDocumentElementCategoryGroups_optional *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v5 = sub_20A1A9144();
  swift_bridgeObjectRelease();
  if (v5)
  {
    if (v5 != 1)
    {
      swift_bridgeObjectRelease();
LABEL_49:
      retstr->value.maximumRetentionPeriod.is_nil = 0;
      *(_OWORD *)&retstr->value.notRetainingElements._rawValue = 0u;
      *(_OWORD *)&retstr->value.documentType = 0u;
      *(_OWORD *)&retstr->value.recognizedElements._rawValue = 0u;
      return;
    }
    v113 = 1;
  }
  else
  {
    v113 = 0;
  }
  v6 = *((_QWORD *)documentElements._rawValue + 2);
  v108 = retstr;
  if (v6)
  {
    v7 = (char *)documentElements._rawValue + 72;
    v8 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v10 = *((_QWORD *)v7 - 5);
      v9 = *((_QWORD *)v7 - 4);
      v12 = *((_QWORD *)v7 - 3);
      v11 = (_QWORD *)*((_QWORD *)v7 - 2);
      v13 = *((_QWORD *)v7 - 1);
      v14 = *v7;
      LOBYTE(v115) = v113;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = *(_QWORD *)(_s7CoreIDV31IdentityDocumentElementCategoryV6groups03forD4Type9namespace10identifierShyACGAA21ISO18013KnownDocTypesO_S2StFZ_0((unsigned __int8 *)&v115, v10, v9, v12, v11)+ 16);
      swift_bridgeObjectRelease();
      if (v15)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v116 = (uint64_t)v8;
        v110 = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_20A179278(0, *((_QWORD *)v8 + 2) + 1, 1);
          v8 = (char *)v116;
        }
        v18 = *((_QWORD *)v8 + 2);
        v17 = *((_QWORD *)v8 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_20A179278(v17 > 1, v18 + 1, 1);
          v8 = (char *)v116;
        }
        *((_QWORD *)v8 + 2) = v18 + 1;
        v19 = &v8[48 * v18];
        *((_QWORD *)v19 + 4) = v10;
        *((_QWORD *)v19 + 5) = v9;
        *((_QWORD *)v19 + 6) = v12;
        *((_QWORD *)v19 + 7) = v11;
        *((_QWORD *)v19 + 8) = v110;
        v19[72] = v14;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v7 += 48;
      --v6;
    }
    while (v6);
  }
  else
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v8 + 2);
  if (!v20)
  {
    swift_release();
    retstr = v108;
    goto LABEL_49;
  }
  swift_retain();
  v21 = v8 + 72;
  v22 = MEMORY[0x24BEE4AF8];
  v23 = v20;
  v109 = v8;
  do
  {
    if ((*v21 & 1) == 0)
    {
      v27 = *((_QWORD *)v21 - 4);
      v111 = *((_QWORD *)v21 - 5);
      v29 = *((_QWORD *)v21 - 3);
      v28 = *((_QWORD *)v21 - 2);
      v30 = *((_QWORD *)v21 - 1);
      v31 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = swift_isUniquelyReferenced_nonNull_native();
      v22 = v31;
      v116 = v31;
      if ((v32 & 1) == 0)
      {
        sub_20A179278(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v8 = v109;
        v22 = v116;
      }
      v25 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v22 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_20A179278(v24 > 1, v25 + 1, 1);
        v8 = v109;
        v22 = v116;
      }
      *(_QWORD *)(v22 + 16) = v25 + 1;
      v26 = v22 + 48 * v25;
      *(_QWORD *)(v26 + 32) = v111;
      *(_QWORD *)(v26 + 40) = v27;
      *(_QWORD *)(v26 + 48) = v29;
      *(_QWORD *)(v26 + 56) = v28;
      *(_QWORD *)(v26 + 64) = v30;
      *(_BYTE *)(v26 + 72) = 0;
    }
    v21 += 48;
    --v23;
  }
  while (v23);
  v112 = v22;
  swift_release();
  swift_retain();
  v33 = v8 + 72;
  v34 = MEMORY[0x24BEE4AF8];
  v35 = v20;
  do
  {
    if (*v33 == 1 && !*((_QWORD *)v33 - 1))
    {
      v41 = *((_QWORD *)v33 - 5);
      v40 = *((_QWORD *)v33 - 4);
      v43 = *((_QWORD *)v33 - 3);
      v42 = *((_QWORD *)v33 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = swift_isUniquelyReferenced_nonNull_native();
      v116 = v34;
      if ((v44 & 1) == 0)
      {
        sub_20A179278(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v8 = v109;
        v34 = v116;
      }
      v37 = *(_QWORD *)(v34 + 16);
      v36 = *(_QWORD *)(v34 + 24);
      v38 = v34;
      if (v37 >= v36 >> 1)
      {
        sub_20A179278(v36 > 1, v37 + 1, 1);
        v8 = v109;
        v38 = v116;
      }
      *(_QWORD *)(v38 + 16) = v37 + 1;
      v39 = v38 + 48 * v37;
      *(_QWORD *)(v39 + 32) = v41;
      *(_QWORD *)(v39 + 40) = v40;
      *(_QWORD *)(v39 + 48) = v43;
      *(_QWORD *)(v39 + 56) = v42;
      *(_QWORD *)(v39 + 64) = 0;
      *(_BYTE *)(v39 + 72) = 1;
      v34 = v38;
    }
    v33 += 48;
    --v35;
  }
  while (v35);
  v107 = v34;
  swift_release();
  swift_retain();
  v45 = v8 + 72;
  v46 = MEMORY[0x24BEE4AF8];
  v47 = v113;
  do
  {
    if (*v45 == 1 && *((_QWORD *)v45 - 1))
    {
      v52 = *((_QWORD *)v45 - 5);
      v51 = *((_QWORD *)v45 - 4);
      v54 = *((_QWORD *)v45 - 3);
      v53 = *((_QWORD *)v45 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55 = swift_isUniquelyReferenced_nonNull_native();
      v116 = v46;
      if ((v55 & 1) == 0)
      {
        sub_20A179278(0, *(_QWORD *)(v46 + 16) + 1, 1);
        v46 = v116;
      }
      v49 = *(_QWORD *)(v46 + 16);
      v48 = *(_QWORD *)(v46 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_20A179278(v48 > 1, v49 + 1, 1);
        v46 = v116;
      }
      *(_QWORD *)(v46 + 16) = v49 + 1;
      v50 = v46 + 48 * v49;
      *(_QWORD *)(v50 + 32) = v52;
      *(_QWORD *)(v50 + 40) = v51;
      *(_QWORD *)(v50 + 48) = v54;
      *(_QWORD *)(v50 + 56) = v53;
      *(_QWORD *)(v50 + 64) = 1;
      *(_BYTE *)(v50 + 72) = 1;
      v47 = v113;
    }
    v45 += 48;
    --v20;
  }
  while (v20);
  swift_release();
  v116 = MEMORY[0x24BEE4AF8];
  v56 = *(_QWORD *)(v112 + 16);
  v103 = v56;
  if (v56)
  {
    v57 = (_QWORD **)(swift_retain() + 56);
    do
    {
      v58 = (uint64_t)*(v57 - 3);
      v59 = (unint64_t)*(v57 - 2);
      v60 = (unint64_t)*(v57 - 1);
      v61 = *v57;
      LOBYTE(v115) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62 = _s7CoreIDV31IdentityDocumentElementCategoryV6groups03forD4Type9namespace10identifierShyACGAA21ISO18013KnownDocTypesO_S2StFZ_0((unsigned __int8 *)&v115, v58, v59, v60, v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A1796E8(v62, v63, v64, v65);
      v57 += 6;
      --v56;
    }
    while (v56);
    swift_release();
    v66 = v116;
    v67 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v66 = MEMORY[0x24BEE4AF8];
    v67 = MEMORY[0x24BEE4AF8];
  }
  v68 = sub_20A17A484(v66);
  swift_bridgeObjectRelease();
  v116 = v67;
  v69 = *(_QWORD *)(v107 + 16);
  v106 = v68;
  if (v69)
  {
    v70 = (_QWORD **)(swift_retain() + 56);
    do
    {
      v71 = (uint64_t)*(v70 - 3);
      v72 = (unint64_t)*(v70 - 2);
      v73 = (unint64_t)*(v70 - 1);
      v74 = *v70;
      LOBYTE(v115) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v75 = _s7CoreIDV31IdentityDocumentElementCategoryV6groups03forD4Type9namespace10identifierShyACGAA21ISO18013KnownDocTypesO_S2StFZ_0((unsigned __int8 *)&v115, v71, v72, v73, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A1796E8(v75, v76, v77, v78);
      v70 += 6;
      --v69;
    }
    while (v69);
    swift_release_n();
    v79 = v116;
    v67 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_release();
    v79 = MEMORY[0x24BEE4AF8];
  }
  v80 = sub_20A17A484(v79);
  swift_bridgeObjectRelease();
  v116 = v80;
  v115 = v67;
  v81 = *(_QWORD *)(v46 + 16);
  if (v81)
  {
    swift_retain();
    v82 = (_QWORD **)(v46 + 56);
    do
    {
      v83 = (uint64_t)*(v82 - 3);
      v84 = (unint64_t)*(v82 - 2);
      v85 = (unint64_t)*(v82 - 1);
      v86 = *v82;
      LOBYTE(v114) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v87 = _s7CoreIDV31IdentityDocumentElementCategoryV6groups03forD4Type9namespace10identifierShyACGAA21ISO18013KnownDocTypesO_S2StFZ_0((unsigned __int8 *)&v114, v83, v84, v85, v86);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A1796E8(v87, v88, v89, v90);
      v82 += 6;
      --v81;
    }
    while (v81);
    swift_release_n();
    v91 = v115;
  }
  else
  {
    swift_release();
    v91 = MEMORY[0x24BEE4AF8];
  }
  v92 = sub_20A17A484(v91);
  swift_bridgeObjectRelease();
  v115 = v92;
  sub_20A179AA8(v106);
  v93 = v116;
  v94 = swift_bridgeObjectRetain();
  sub_20A179AA8(v94);
  swift_bridgeObjectRelease();
  sub_20A179AA8(v106);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9F98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FA0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A1B3A10;
  swift_getKeyPath();
  sub_20A1A8AE4();
  swift_getKeyPath();
  sub_20A1A8AE4();
  v114 = v106;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FB0);
  sub_20A17A514(&qword_2545D9FB8, &qword_2545D9FA8, MEMORY[0x24BEE1718]);
  sub_20A17A514(&qword_2545D9FC0, &qword_2545D9FB0, MEMORY[0x24BEE12C8]);
  sub_20A17A514(&qword_2545D9FC8, &qword_2545D9FA0, MEMORY[0x24BDCC6C8]);
  v105 = sub_20A1A8E68();
  swift_bridgeObjectRelease();
  v114 = v93;
  v104 = sub_20A1A8E68();
  v114 = v115;
  v95 = sub_20A1A8E68();
  swift_bridgeObjectRelease();
  v96 = *(_QWORD *)(v112 + 16);
  if (v96)
    v97 = -1;
  else
    v97 = 0;
  if (v96)
  {
    v98 = v113;
    if (v103)
    {
      v99 = v112 + 64;
      v97 = -1;
      v100 = 1;
      while (1)
      {
        if ((*(_BYTE *)(v99 + 8) & 1) == 0 && v97)
        {
          if (!*(_QWORD *)v99)
          {
            v97 = 0;
            if (v103 == v100)
              break;
            goto LABEL_73;
          }
          if (*(_QWORD *)v99 > v97)
            v97 = *(_QWORD *)v99;
        }
        if (v103 == v100)
          break;
LABEL_73:
        v99 += 48;
        if (__OFADD__(v100++, 1))
        {
          __break(1u);
          return;
        }
      }
    }
  }
  else
  {
    v98 = v113;
  }
  v102 = v96 == 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v108->value.recognizedElements._rawValue = v109;
  v108->value.retainingElements._rawValue = (void *)v105;
  v108->value.notRetainingElements._rawValue = (void *)v104;
  v108->value.displayOnlyElements._rawValue = (void *)v95;
  v108->value.documentType = v98;
  v108->value.maximumRetentionPeriod.value = v97;
  v108->value.maximumRetentionPeriod.is_nil = v102;
}

uint64_t sub_20A177890@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_BYTE *)(result + 8) == 1)
    *a2 = qword_20A1B3CD0[*(_QWORD *)result];
  else
    *a2 = 4;
  return result;
}

uint64_t IdentityDocumentElementCategoryGroups.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;

  v2 = v1;
  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_20A133B54(a1, v4);
  swift_bridgeObjectRelease();
  sub_20A1A9318();
  v9 = *(_QWORD *)(v5 + 16);
  if (v9)
  {
    v10 = (_BYTE *)(v5 + 40);
    do
    {
      if ((*v10 & 1) == 0)
        sub_20A1A9318();
      v10 += 16;
      sub_20A1A9318();
      --v9;
    }
    while (v9);
  }
  sub_20A1A9318();
  v11 = *(_QWORD *)(v7 + 16);
  if (v11)
  {
    v12 = (_BYTE *)(v7 + 40);
    do
    {
      if ((*v12 & 1) == 0)
        sub_20A1A9318();
      v12 += 16;
      sub_20A1A9318();
      --v11;
    }
    while (v11);
  }
  sub_20A1A9318();
  v13 = *(_QWORD *)(v6 + 16);
  if (v13)
  {
    v14 = (_BYTE *)(v6 + 40);
    do
    {
      if ((*v14 & 1) == 0)
        sub_20A1A9318();
      v14 += 16;
      sub_20A1A9318();
      --v13;
    }
    while (v13);
  }
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return sub_20A1A9324();
  sub_20A1A9324();
  return sub_20A1A9318();
}

uint64_t sub_20A177A7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A177AB8 + 4 * byte_20A1B3A20[a1]))(0xD000000000000012, 0x800000020A1BE0B0);
}

unint64_t sub_20A177AB8()
{
  return 0xD000000000000011;
}

uint64_t sub_20A177AD4()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_20A177B2C()
{
  unsigned __int8 *v0;

  return sub_20A177A7C(*v0);
}

uint64_t sub_20A177B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A17AC24(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A177B58(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_20A177B64()
{
  sub_20A17A554();
  return sub_20A1A9360();
}

uint64_t sub_20A177B8C()
{
  sub_20A17A554();
  return sub_20A1A936C();
}

uint64_t IdentityDocumentElementCategoryGroups.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FD0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v16 = v1[2];
  v17 = v8;
  v15 = v1[3];
  LODWORD(v8) = *((unsigned __int8 *)v1 + 32);
  v12 = v1[5];
  v13 = *((unsigned __int8 *)v1 + 48);
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A17A554();
  sub_20A1A9354();
  v19 = v9;
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FE0);
  sub_20A15B3C4(&qword_2545D9FE8, &qword_2545D9FE0, (uint64_t (*)(void))sub_20A17A598, MEMORY[0x24BEE12A0]);
  sub_20A1A9228();
  if (!v2)
  {
    v10 = v16;
    v19 = v17;
    v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FF8);
    sub_20A15B3C4(&qword_2545DA000, &qword_2545D9FF8, (uint64_t (*)(void))sub_20A17A5DC, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
    v19 = v10;
    v18 = 2;
    sub_20A1A9228();
    v19 = v15;
    v18 = 3;
    sub_20A1A9228();
    LOBYTE(v19) = v14;
    v18 = 4;
    sub_20A17A620();
    sub_20A1A9228();
    LOBYTE(v19) = 5;
    sub_20A1A91EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t IdentityDocumentElementCategoryGroups.hashValue.getter()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  _BYTE v6[72];
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  char v11;

  v1 = *((_BYTE *)v0 + 32);
  v2 = *((_QWORD *)v0 + 5);
  v3 = *((_BYTE *)v0 + 48);
  v4 = v0[1];
  v7 = *v0;
  v8 = v4;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  sub_20A1A930C();
  IdentityDocumentElementCategoryGroups.hash(into:)((uint64_t)v6);
  return sub_20A1A933C();
}

uint64_t IdentityDocumentElementCategoryGroups.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA018);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A17A554();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FE0);
  v23 = 0;
  sub_20A15B3C4(&qword_2545DA020, &qword_2545D9FE0, (uint64_t (*)(void))sub_20A17A664, MEMORY[0x24BEE12D0]);
  sub_20A1A91B0();
  v22 = a2;
  v9 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FF8);
  v23 = 1;
  sub_20A15B3C4(&qword_2545DA030, &qword_2545D9FF8, (uint64_t (*)(void))sub_20A17A6A8, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_20A1A91B0();
  v21 = v9;
  v10 = v24;
  v23 = 2;
  swift_bridgeObjectRetain();
  sub_20A1A91B0();
  v23 = 3;
  v20 = v24;
  swift_bridgeObjectRetain();
  sub_20A1A91B0();
  v11 = v24;
  v23 = 4;
  sub_20A17A6EC();
  swift_bridgeObjectRetain();
  sub_20A1A91B0();
  v18 = v24;
  LOBYTE(v24) = 5;
  v12 = sub_20A1A9174();
  v19 = v13;
  v15 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v22;
  *v22 = v21;
  v16[1] = v10;
  v16[2] = v20;
  v16[3] = v11;
  *((_BYTE *)v16 + 32) = v18;
  v16[5] = v15;
  *((_BYTE *)v16 + 48) = v19 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A178308@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return IdentityDocumentElementCategoryGroups.init(from:)(a1, a2);
}

uint64_t sub_20A17831C(_QWORD *a1)
{
  return IdentityDocumentElementCategoryGroups.encode(to:)(a1);
}

uint64_t sub_20A178330()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  _BYTE v6[72];
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  char v11;

  v1 = *((_BYTE *)v0 + 32);
  v2 = *((_QWORD *)v0 + 5);
  v3 = *((_BYTE *)v0 + 48);
  v4 = v0[1];
  v7 = *v0;
  v8 = v4;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  sub_20A1A930C();
  IdentityDocumentElementCategoryGroups.hash(into:)((uint64_t)v6);
  return sub_20A1A933C();
}

uint64_t sub_20A178394()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  _BYTE v6[72];
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  char v11;

  v1 = *((_BYTE *)v0 + 32);
  v2 = *((_QWORD *)v0 + 5);
  v3 = *((_BYTE *)v0 + 48);
  v4 = v0[1];
  v7 = *v0;
  v8 = v4;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  sub_20A1A930C();
  IdentityDocumentElementCategoryGroups.hash(into:)((uint64_t)v6);
  return sub_20A1A933C();
}

uint64_t sub_20A1783F4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  char v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;

  v4 = a3;
  v7 = a3 & 1;
  v8 = *v3;
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  v9 = sub_20A1A933C();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    while (1)
    {
      v13 = *(_QWORD *)(v8 + 48) + 16 * v11;
      v14 = *(_QWORD *)v13;
      if (*(_BYTE *)(v13 + 8) == 1)
        __asm { BR              X17 }
      if (!v7 && v14 == a2)
        break;
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_9;
    }
    result = 0;
    v16 = *(_QWORD *)(*v3 + 48) + 16 * v11;
    a2 = *(_QWORD *)v16;
    v4 = *(_BYTE *)(v16 + 8);
  }
  else
  {
LABEL_9:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_20A178A18(a2, v7, v11, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return result;
}

uint64_t sub_20A178724()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA070);
  result = sub_20A1A9060();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v29 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v9)
          goto LABEL_35;
        v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v9)
            goto LABEL_35;
          v16 = v29[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v9)
              goto LABEL_35;
            v16 = v29[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_35:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_41;
                  if (v5 >= v9)
                    goto LABEL_35;
                  v16 = v29[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v8 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
      v19 = *(_QWORD *)v18;
      v20 = *(_BYTE *)(v18 + 8);
      sub_20A1A930C();
      if ((v20 & 1) == 0)
        sub_20A1A9318();
      sub_20A1A9318();
      result = sub_20A1A933C();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
      *(_QWORD *)v12 = v19;
      *(_BYTE *)(v12 + 8) = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_20A178A18(uint64_t result, unsigned __int8 a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_20A178724();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_20A178DF8();
        goto LABEL_16;
      }
      sub_20A178F9C();
    }
    v10 = *v4;
    sub_20A1A930C();
    IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
    result = sub_20A1A933C();
    v11 = -1 << *(_BYTE *)(v10 + 32);
    a3 = result & ~v11;
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v12 = ~v11;
      result = a2 & (v7 == 15);
      while (1)
      {
        v13 = *(_QWORD *)(v10 + 48) + 16 * a3;
        v14 = *(_QWORD *)v13;
        if (*(_BYTE *)(v13 + 8) == 1)
          __asm { BR              X14 }
        if ((a2 & 1) == 0 && v14 == v7)
          break;
        a3 = (a3 + 1) & v12;
        if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          goto LABEL_16;
      }
      result = sub_20A1A9294();
      __break(1u);
    }
  }
LABEL_16:
  v15 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v16 = *(_QWORD *)(v15 + 48) + 16 * a3;
  *(_QWORD *)v16 = v7;
  *(_BYTE *)(v16 + 8) = a2 & 1;
  v17 = *(_QWORD *)(v15 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
    JUMPOUT(0x20A178D9CLL);
  }
  *(_QWORD *)(v15 + 16) = v19;
  return result;
}

void *sub_20A178DF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA070);
  v2 = *v0;
  v3 = sub_20A1A9054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v19 = v18;
    *(_BYTE *)(v19 + 8) = v17;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_20A178F9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA070);
  result = sub_20A1A9060();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v28)
      goto LABEL_35;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_35;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_35;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_20A1A930C();
    if ((v20 & 1) == 0)
      sub_20A1A9318();
    sub_20A1A9318();
    result = sub_20A1A933C();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
    *(_QWORD *)v12 = v19;
    *(_BYTE *)(v12 + 8) = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_35:
    result = swift_release();
    v1 = v0;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_35;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_20A17925C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20A1792B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20A179278(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20A179408(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20A179294(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20A179580(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20A1792B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9BC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20A1A9138();
  __break(1u);
  return result;
}

uint64_t sub_20A179408(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA080);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 48 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_20A1A9138();
  __break(1u);
  return result;
}

uint64_t sub_20A179580(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA068);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20A1A9138();
  __break(1u);
  return result;
}

uint64_t sub_20A1796E8(uint64_t a1, uint64_t a2, uint64_t a3, int64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  _QWORD *v48;
  int64_t v49;
  int64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = a1;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v11 = v6[3] >> 1, v11 < v8))
  {
    if (v7 <= v8)
      v12 = v7 + v5;
    else
      v12 = v7;
    v6 = sub_20A16C5EC(isUniquelyReferenced_nonNull_native, v12, 1, v6);
    v11 = v6[3] >> 1;
  }
  v13 = v6[2];
  v14 = (_QWORD *)(v11 - v13);
  v15 = sub_20A17A17C(&v53, (uint64_t)&v6[2 * v13 + 4], v11 - v13, v9);
  if ((uint64_t)v15 < v5)
    goto LABEL_15;
  if (v15)
  {
    v16 = v6[2];
    v17 = __OFADD__(v16, v15);
    v18 = (char *)v15 + v16;
    if (v17)
    {
      __break(1u);
      goto LABEL_46;
    }
    v6[2] = v18;
  }
  if (v15 != v14)
  {
LABEL_13:
    result = sub_20A17AED4();
    *(_QWORD *)v4 = v6;
    return result;
  }
LABEL_16:
  v9 = v6[2];
  result = v53;
  v20 = v54;
  v21 = v55;
  v22 = v56;
  if (v57)
  {
    v23 = (v57 - 1) & v57;
    v24 = __clz(__rbit64(v57)) | (v56 << 6);
    goto LABEL_18;
  }
  a4 = v56 + 1;
  if (!__OFADD__(v56, 1))
  {
    v27 = (unint64_t)(v55 + 64) >> 6;
    if (a4 >= v27)
      goto LABEL_13;
    v31 = v54;
    v45 = v54[a4];
    if (v45)
      goto LABEL_50;
    v46 = v56 + 2;
    if (v56 + 2 >= v27)
      goto LABEL_13;
    v45 = v54[v46];
    if (!v45)
    {
      if (v56 + 3 >= v27)
        goto LABEL_13;
      v45 = v54[v56 + 3];
      if (v45)
      {
        a4 = v56 + 3;
        goto LABEL_50;
      }
LABEL_60:
      v46 = a4 + 3;
      if (a4 + 3 >= v27)
        goto LABEL_13;
      v45 = v31[v46];
      if (!v45)
      {
        a4 += 4;
        if (a4 >= v27)
          goto LABEL_13;
        v45 = v31[a4];
        if (!v45)
        {
          v47 = v22 + 6;
          while (v27 != v47)
          {
            v45 = v31[v47++];
            if (v45)
            {
              a4 = v47 - 1;
              goto LABEL_50;
            }
          }
          goto LABEL_13;
        }
        goto LABEL_50;
      }
    }
    a4 = v46;
LABEL_50:
    v23 = (v45 - 1) & v45;
    v24 = __clz(__rbit64(v45)) + (a4 << 6);
    v22 = a4;
    v20 = v31;
LABEL_18:
    v25 = *(_QWORD *)(result + 48) + 16 * v24;
    v26 = *(_QWORD *)v25;
    v52 = *(_BYTE *)(v25 + 8);
    v27 = (unint64_t)(v21 + 64) >> 6;
    v28 = v27 - 1;
LABEL_20:
    v29 = v6[3];
    v30 = v29 >> 1;
    if ((uint64_t)(v29 >> 1) < v9 + 1)
    {
      v49 = v27;
      v50 = v28;
      v51 = result;
      v48 = v20;
      v41 = v21;
      v42 = v6;
      v43 = v23;
      v44 = sub_20A16C5EC((_QWORD *)(v29 > 1), v9 + 1, 1, v42);
      v23 = v43;
      v27 = v49;
      v28 = v50;
      v21 = v41;
      v20 = v48;
      v6 = v44;
      result = v51;
      v30 = v6[3] >> 1;
    }
    v31 = v6 + 4;
    while (1)
    {
      if (v9 >= v30)
      {
        v6[2] = v9;
        goto LABEL_20;
      }
      v35 = &v31[2 * v9];
      *v35 = v26;
      *((_BYTE *)v35 + 8) = v52 & 1;
      ++v9;
      if (v23)
      {
        v32 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        v33 = v32 | (v22 << 6);
        goto LABEL_24;
      }
      v36 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v36 >= v27)
        goto LABEL_46;
      v37 = v20[v36];
      if (!v37)
      {
        v38 = v22 + 2;
        a4 = v22 + 1;
        if (v22 + 2 >= v27)
          goto LABEL_46;
        v37 = v20[v38];
        if (!v37)
        {
          a4 = v22 + 2;
          if (v22 + 3 >= v27)
            goto LABEL_46;
          v37 = v20[v22 + 3];
          if (v37)
          {
            v36 = v22 + 3;
            goto LABEL_36;
          }
          v38 = v22 + 4;
          a4 = v22 + 3;
          if (v22 + 4 >= v27)
            goto LABEL_46;
          v37 = v20[v38];
          if (!v37)
          {
            v36 = v22 + 5;
            a4 = v22 + 4;
            if (v22 + 5 >= v27)
              goto LABEL_46;
            v37 = v20[v36];
            if (!v37)
            {
              v40 = v22 + 6;
              while (v27 != v40)
              {
                v37 = v20[v40++];
                if (v37)
                {
                  v36 = v40 - 1;
                  goto LABEL_36;
                }
              }
LABEL_46:
              v6[2] = v9;
              goto LABEL_13;
            }
            goto LABEL_36;
          }
        }
        v36 = v38;
      }
LABEL_36:
      v39 = __clz(__rbit64(v37));
      v23 = (v37 - 1) & v37;
      v33 = v39 + (v36 << 6);
      v22 = v36;
LABEL_24:
      v34 = *(_QWORD *)(result + 48) + 16 * v33;
      v26 = *(_QWORD *)v34;
      v52 = *(_BYTE *)(v34 + 8);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A179AA8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    result = sub_20A179C20(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v10), *(_BYTE *)(*(_QWORD *)(v2 + 48) + 16 * v10 + 8), (uint64_t)&v14);
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_20A179C20@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v7 = *v3;
  sub_20A1A930C();
  IdentityDocumentElementCategory.PresentmentElementGroup.hash(into:)();
  result = sub_20A1A933C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = result & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    result = a2 & (a1 == 15);
    while (1)
    {
      v12 = *(_QWORD *)(v7 + 48) + 16 * v10;
      v13 = *(_QWORD *)v12;
      if (*(_BYTE *)(v12 + 8) == 1)
        __asm { BR              X16 }
      if ((a2 & 1) == 0 && v13 == a1)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_11;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_20A178DF8();
      v15 = v19;
    }
    v16 = *(_QWORD *)(v15 + 48) + 16 * v10;
    v17 = *(_QWORD *)v16;
    LOBYTE(v16) = *(_BYTE *)(v16 + 8);
    *(_QWORD *)a3 = v17;
    *(_BYTE *)(a3 + 8) = v16;
    sub_20A179F9C(v10);
    *v3 = v19;
    result = swift_bridgeObjectRelease();
    v18 = 0;
  }
  else
  {
LABEL_11:
    *(_QWORD *)a3 = 0;
    *(_BYTE *)(a3 + 8) = 0;
    v18 = 1;
  }
  *(_BYTE *)(a3 + 9) = v18;
  return result;
}

unint64_t sub_20A179F9C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_20A1A9024();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = 16 * v6;
        v11 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + 16 * v6 + 8);
        sub_20A1A930C();
        if ((v11 & 1) == 0)
          sub_20A1A9318();
        sub_20A1A9318();
        v12 = sub_20A1A933C() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9)
            goto LABEL_5;
        }
        else if (v12 >= v9)
        {
          goto LABEL_13;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_13:
          v13 = *(_QWORD *)(v3 + 48);
          v14 = (_OWORD *)(v13 + 16 * v2);
          v15 = (_OWORD *)(v13 + v10);
          if (16 * v2 != v10 || (v2 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

_QWORD *sub_20A17A17C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 48) + 16 * v12;
    v14 = *(_QWORD *)v13;
    LOBYTE(v13) = *(_BYTE *)(v13 + 8);
    *(_QWORD *)a2 = v14;
    *(_BYTE *)(a2 + 8) = v13;
    a2 += 16;
    if (v9 == a3)
      goto LABEL_35;
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v15);
  if (v16)
    goto LABEL_19;
  v8 += 2;
  if (v15 + 1 >= v10)
  {
    v7 = 0;
    v8 = v15;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
  {
LABEL_15:
    v15 = v8;
LABEL_19:
    v18 = __clz(__rbit64(v16));
    v7 = (v16 - 1) & v16;
    v12 = v18 + (v15 << 6);
    v8 = v15;
    goto LABEL_8;
  }
  v17 = v15 + 2;
  if (v15 + 2 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v15 = v17;
    goto LABEL_19;
  }
  v8 = v15 + 3;
  if (v15 + 3 >= v10)
  {
    v7 = 0;
    v8 = v15 + 2;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
    goto LABEL_15;
  v17 = v15 + 4;
  if (v15 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_18;
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

BOOL _s7CoreIDV37IdentityDocumentElementCategoryGroupsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  _BOOL8 result;
  char v18;
  uint64_t v19;
  char v20;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 48);
  if ((sub_20A126624(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || (sub_20A126744(v2, v6) & 1) == 0
    || (sub_20A126744(v4, v8) & 1) == 0
    || (sub_20A126744(v3, v7) & 1) == 0)
  {
    return 0;
  }
  if (v5)
    v12 = 0xD000000000000016;
  else
    v12 = 0xD000000000000015;
  if (v5)
    v13 = 0x800000020A1BBA50;
  else
    v13 = 0x800000020A1BBA30;
  if (v9)
    v14 = 0xD000000000000016;
  else
    v14 = 0xD000000000000015;
  if (v9)
    v15 = 0x800000020A1BBA50;
  else
    v15 = 0x800000020A1BBA30;
  if (v12 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v16 & 1) == 0)
      return result;
  }
  if ((v20 & 1) == 0)
  {
    if (v19 == v10)
      v18 = v11;
    else
      v18 = 1;
    return (v18 & 1) == 0;
  }
  return (v11 & 1) != 0;
}

uint64_t sub_20A17A484(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  char v6;
  _BYTE v7[16];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_20A17AE90();
  result = sub_20A1A8F88();
  v8 = result;
  if (v2)
  {
    v4 = (char *)(a1 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v4 += 16;
      sub_20A1783F4((uint64_t)v7, v5, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_20A17A4FC@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)result;
  if (*(_BYTE *)(result + 8))
    v2 = -1;
  *a2 = v2;
  return result;
}

uint64_t sub_20A17A514(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x20BD21434](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A17A554()
{
  unint64_t result;

  result = qword_2545D9FD8;
  if (!qword_2545D9FD8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3C7C, &type metadata for IdentityDocumentElementCategoryGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545D9FD8);
  }
  return result;
}

unint64_t sub_20A17A598()
{
  unint64_t result;

  result = qword_2545D9FF0;
  if (!qword_2545D9FF0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElement, &type metadata for IdentityDocumentElement);
    atomic_store(result, (unint64_t *)&qword_2545D9FF0);
  }
  return result;
}

unint64_t sub_20A17A5DC()
{
  unint64_t result;

  result = qword_2545DA008;
  if (!qword_2545DA008)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategory, &type metadata for IdentityDocumentElementCategory);
    atomic_store(result, (unint64_t *)&qword_2545DA008);
  }
  return result;
}

unint64_t sub_20A17A620()
{
  unint64_t result;

  result = qword_2545DA010;
  if (!qword_2545DA010)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013KnownDocTypes, &type metadata for ISO18013KnownDocTypes);
    atomic_store(result, (unint64_t *)&qword_2545DA010);
  }
  return result;
}

unint64_t sub_20A17A664()
{
  unint64_t result;

  result = qword_2545DA028;
  if (!qword_2545DA028)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElement, &type metadata for IdentityDocumentElement);
    atomic_store(result, (unint64_t *)&qword_2545DA028);
  }
  return result;
}

unint64_t sub_20A17A6A8()
{
  unint64_t result;

  result = qword_2545DA038;
  if (!qword_2545DA038)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategory, &type metadata for IdentityDocumentElementCategory);
    atomic_store(result, (unint64_t *)&qword_2545DA038);
  }
  return result;
}

unint64_t sub_20A17A6EC()
{
  unint64_t result;

  result = qword_2545DA040;
  if (!qword_2545DA040)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013KnownDocTypes, &type metadata for ISO18013KnownDocTypes);
    atomic_store(result, (unint64_t *)&qword_2545DA040);
  }
  return result;
}

unint64_t sub_20A17A734()
{
  unint64_t result;

  result = qword_2545DA048;
  if (!qword_2545DA048)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategoryGroups, &type metadata for IdentityDocumentElementCategoryGroups);
    atomic_store(result, (unint64_t *)&qword_2545DA048);
  }
  return result;
}

uint64_t destroy for IdentityDocumentElementCategoryGroups()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IdentityDocumentElementCategoryGroups(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IdentityDocumentElementCategoryGroups(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for IdentityDocumentElementCategoryGroups(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentElementCategoryGroups(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentElementCategoryGroups(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategoryGroups()
{
  return &type metadata for IdentityDocumentElementCategoryGroups;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentElementCategoryGroups.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentElementCategoryGroups.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_20A17AACC + 4 * byte_20A1B3A59[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_20A17AB00 + 4 * byte_20A1B3A54[v4]))();
}

uint64_t sub_20A17AB00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A17AB08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A17AB10);
  return result;
}

uint64_t sub_20A17AB1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A17AB24);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_20A17AB28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A17AB30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElementCategoryGroups.CodingKeys()
{
  return &type metadata for IdentityDocumentElementCategoryGroups.CodingKeys;
}

unint64_t sub_20A17AB50()
{
  unint64_t result;

  result = qword_2545DA050;
  if (!qword_2545DA050)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3C54, &type metadata for IdentityDocumentElementCategoryGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA050);
  }
  return result;
}

unint64_t sub_20A17AB98()
{
  unint64_t result;

  result = qword_2545DA058;
  if (!qword_2545DA058)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3BC4, &type metadata for IdentityDocumentElementCategoryGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA058);
  }
  return result;
}

unint64_t sub_20A17ABE0()
{
  unint64_t result;

  result = qword_2545DA060;
  if (!qword_2545DA060)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B3BEC, &type metadata for IdentityDocumentElementCategoryGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA060);
  }
  return result;
}

uint64_t sub_20A17AC24(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000020A1BE0B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BE0D0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A1BE0F0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A1BE110 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC00000065707954 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BE130)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_20A17AE90()
{
  unint64_t result;

  result = qword_2545DA078;
  if (!qword_2545DA078)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElementCategory, &type metadata for IdentityDocumentElementCategory);
    atomic_store(result, (unint64_t *)&qword_2545DA078);
  }
  return result;
}

uint64_t sub_20A17AED4()
{
  return swift_release();
}

uint64_t static IdentityDocumentElement.RetentionIntent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = 0;
  else
    v4 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v2;
  else
    v5 = v4;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

uint64_t IdentityDocumentElement.RetentionIntent.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A17AF68()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746552746F4E6F64;
  if (*v0 != 1)
    v1 = 0x4F79616C70736964;
  if (*v0)
    return v1;
  else
    return 0x6E6961746572;
}

uint64_t sub_20A17AFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A17CE8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A17AFF4()
{
  sub_20A17B4A8();
  return sub_20A1A9360();
}

uint64_t sub_20A17B01C()
{
  sub_20A17B4A8();
  return sub_20A1A936C();
}

uint64_t sub_20A17B044()
{
  sub_20A17B4EC();
  return sub_20A1A9360();
}

uint64_t sub_20A17B06C()
{
  sub_20A17B4EC();
  return sub_20A1A936C();
}

uint64_t sub_20A17B094()
{
  sub_20A17B530();
  return sub_20A1A9360();
}

uint64_t sub_20A17B0BC()
{
  sub_20A17B530();
  return sub_20A1A936C();
}

uint64_t sub_20A17B0E4()
{
  return 0x6F69746E65746572;
}

uint64_t sub_20A17B108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F69746E65746572 && a2 == 0xEF646F697265506ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A17B1C0()
{
  sub_20A17B574();
  return sub_20A1A9360();
}

uint64_t sub_20A17B1E8()
{
  sub_20A17B574();
  return sub_20A1A936C();
}

uint64_t IdentityDocumentElement.RetentionIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA088);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA090);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA098);
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA0A0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  v16 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A17B4A8();
  sub_20A1A9354();
  if (v16 == 1)
  {
    if (v15)
    {
      v33 = 2;
      sub_20A17B4EC();
      v17 = v26;
      sub_20A1A91D4();
      v19 = v27;
      v18 = v28;
    }
    else
    {
      v32 = 1;
      sub_20A17B530();
      v17 = v23;
      sub_20A1A91D4();
      v19 = v24;
      v18 = v25;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v31 = 0;
    sub_20A17B574();
    sub_20A1A91D4();
    v20 = v30;
    sub_20A1A921C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

unint64_t sub_20A17B4A8()
{
  unint64_t result;

  result = qword_2545DA0A8;
  if (!qword_2545DA0A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4480, &type metadata for IdentityDocumentElement.RetentionIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA0A8);
  }
  return result;
}

unint64_t sub_20A17B4EC()
{
  unint64_t result;

  result = qword_2545DA0B0;
  if (!qword_2545DA0B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4430, &type metadata for IdentityDocumentElement.RetentionIntent.DisplayOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA0B0);
  }
  return result;
}

unint64_t sub_20A17B530()
{
  unint64_t result;

  result = qword_2545DA0B8;
  if (!qword_2545DA0B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B43E0, &type metadata for IdentityDocumentElement.RetentionIntent.DoNotRetainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA0B8);
  }
  return result;
}

unint64_t sub_20A17B574()
{
  unint64_t result;

  result = qword_2545DA0C0;
  if (!qword_2545DA0C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4390, &type metadata for IdentityDocumentElement.RetentionIntent.RetainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA0C0);
  }
  return result;
}

uint64_t IdentityDocumentElement.RetentionIntent.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_20A1A930C();
  if (v1 != 1)
    sub_20A1A9318();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t IdentityDocumentElement.RetentionIntent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA0C8);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA0D0);
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA0D8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA0E0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20A17B4A8();
  v15 = v38;
  sub_20A1A9348();
  if (v15)
    goto LABEL_7;
  v29 = v7;
  v38 = v6;
  v17 = v35;
  v16 = v36;
  v18 = v11;
  v19 = sub_20A1A91C8();
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v20 = sub_20A1A90B4();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v22 = &type metadata for IdentityDocumentElement.RetentionIntent;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
LABEL_7:
    v23 = (uint64_t)v37;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      v40 = 1;
      sub_20A17B530();
      sub_20A1A9150();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v26 = 0;
    }
    else
    {
      v41 = 2;
      sub_20A17B4EC();
      sub_20A1A9150();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v26 = 1;
    }
    v28 = 1;
    v23 = (uint64_t)v37;
    v25 = v34;
  }
  else
  {
    v39 = 0;
    sub_20A17B574();
    sub_20A1A9150();
    v25 = v34;
    v27 = v38;
    v26 = sub_20A1A91A4();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v23 = (uint64_t)v37;
    v28 = 0;
  }
  *(_QWORD *)v25 = v26;
  *(_BYTE *)(v25 + 8) = v28;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_20A17BA98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityDocumentElement.RetentionIntent.init(from:)(a1, a2);
}

uint64_t sub_20A17BAAC(_QWORD *a1)
{
  return IdentityDocumentElement.RetentionIntent.encode(to:)(a1);
}

uint64_t sub_20A17BAC0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_20A1A930C();
  if (v1 != 1)
    sub_20A1A9318();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A17BB2C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A17BB7C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_20A1A930C();
  if (v1 != 1)
    sub_20A1A9318();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A17BBE4(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = 0;
  else
    v4 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v2;
  else
    v5 = v4;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

uint64_t IdentityDocumentElement.namespace.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityDocumentElement.namespace.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IdentityDocumentElement.namespace.modify())()
{
  return nullsub_1;
}

uint64_t IdentityDocumentElement.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityDocumentElement.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IdentityDocumentElement.identifier.modify())()
{
  return nullsub_1;
}

void IdentityDocumentElement.retentionIntent.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t IdentityDocumentElement.retentionIntent.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t (*IdentityDocumentElement.retentionIntent.modify())()
{
  return nullsub_1;
}

uint64_t IdentityDocumentElement.init(namespace:identifier:retentionIntent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  char v7;

  v6 = *a5;
  v7 = *((_BYTE *)a5 + 8);
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = v6;
  *(_BYTE *)(a6 + 40) = v7;
  return result;
}

uint64_t IdentityDocumentElement.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v1 != 1)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A17BE0C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x6F69746E65746572;
  if (*v0)
    return v1;
  else
    return 0x63617073656D616ELL;
}

uint64_t sub_20A17BE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A17D008(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A17BEA0()
{
  sub_20A17C608();
  return sub_20A1A9360();
}

uint64_t sub_20A17BEC8()
{
  sub_20A17C608();
  return sub_20A1A936C();
}

uint64_t IdentityDocumentElement.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v12[5];
  char v13;
  int v14;
  char v15;
  char v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA0E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v12[1] = *(_QWORD *)(v1 + 24);
  v12[2] = v7;
  v12[0] = *(_QWORD *)(v1 + 32);
  v14 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A17C608();
  sub_20A1A9354();
  v17 = 0;
  v8 = v12[3];
  sub_20A1A9204();
  if (!v8)
  {
    v9 = v14;
    v10 = v12[0];
    v16 = 1;
    sub_20A1A9204();
    v12[4] = v10;
    v13 = v9;
    v15 = 2;
    sub_20A17C64C();
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdentityDocumentElement.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v1 != 1)
    sub_20A1A9318();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t IdentityDocumentElement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA100);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A17C608();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_20A1A918C();
  v11 = v10;
  v22 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_20A1A918C();
  v14 = v13;
  v20 = v12;
  v25 = 2;
  sub_20A17C690();
  swift_bridgeObjectRetain();
  v21 = v14;
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v23;
  v16 = v24;
  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = v11;
  v17 = v21;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v15;
  *(_BYTE *)(a2 + 40) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A17C374@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityDocumentElement.init(from:)(a1, a2);
}

uint64_t sub_20A17C388(_QWORD *a1)
{
  return IdentityDocumentElement.encode(to:)(a1);
}

uint64_t sub_20A17C3A0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v1 != 1)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A17C454()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v1 != 1)
    sub_20A1A9318();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t _s7CoreIDV23IdentityDocumentElementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t result;
  char v12;
  char v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_20A1A9258(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7 || (v12 = sub_20A1A9258(), result = 0, (v12 & 1) != 0))
    {
      if (v5)
      {
        if (v4)
        {
          if (v9)
            return v8 != 0;
        }
        else if (v9)
        {
          return v8 == 0;
        }
      }
      else
      {
        if (v4 == v8)
          v13 = v9;
        else
          v13 = 1;
        if ((v13 & 1) == 0)
          return 1;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_20A17C608()
{
  unint64_t result;

  result = qword_2545DA0F0;
  if (!qword_2545DA0F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4340, &type metadata for IdentityDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA0F0);
  }
  return result;
}

unint64_t sub_20A17C64C()
{
  unint64_t result;

  result = qword_2545DA0F8;
  if (!qword_2545DA0F8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElement.RetentionIntent, &type metadata for IdentityDocumentElement.RetentionIntent);
    atomic_store(result, (unint64_t *)&qword_2545DA0F8);
  }
  return result;
}

unint64_t sub_20A17C690()
{
  unint64_t result;

  result = qword_2545DA108;
  if (!qword_2545DA108)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElement.RetentionIntent, &type metadata for IdentityDocumentElement.RetentionIntent);
    atomic_store(result, (unint64_t *)&qword_2545DA108);
  }
  return result;
}

unint64_t sub_20A17C6D8()
{
  unint64_t result;

  result = qword_2545DA110;
  if (!qword_2545DA110)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElement.RetentionIntent, &type metadata for IdentityDocumentElement.RetentionIntent);
    atomic_store(result, (unint64_t *)&qword_2545DA110);
  }
  return result;
}

unint64_t sub_20A17C720()
{
  unint64_t result;

  result = qword_2545DA118;
  if (!qword_2545DA118)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentElement, &type metadata for IdentityDocumentElement);
    atomic_store(result, (unint64_t *)&qword_2545DA118);
  }
  return result;
}

uint64_t initializeWithCopy for IdentityDocumentElement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IdentityDocumentElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IdentityDocumentElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentElement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElement()
{
  return &type metadata for IdentityDocumentElement;
}

ValueMetadata *type metadata accessor for IdentityDocumentElement.RetentionIntent()
{
  return &type metadata for IdentityDocumentElement.RetentionIntent;
}

ValueMetadata *type metadata accessor for IdentityDocumentElement.CodingKeys()
{
  return &type metadata for IdentityDocumentElement.CodingKeys;
}

uint64_t _s7CoreIDV23IdentityDocumentElementV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A17C9A8 + 4 * byte_20A1B3E45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A17C9DC + 4 * byte_20A1B3E40[v4]))();
}

uint64_t sub_20A17C9DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A17C9E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A17C9ECLL);
  return result;
}

uint64_t sub_20A17C9F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A17CA00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A17CA04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A17CA0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElement.RetentionIntent.CodingKeys()
{
  return &type metadata for IdentityDocumentElement.RetentionIntent.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentElement.RetentionIntent.RetainCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A17CA68 + 4 * byte_20A1B3E4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A17CA88 + 4 * byte_20A1B3E4F[v4]))();
}

_BYTE *sub_20A17CA68(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A17CA88(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A17CA90(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A17CA98(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A17CAA0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A17CAA8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentElement.RetentionIntent.RetainCodingKeys()
{
  return &type metadata for IdentityDocumentElement.RetentionIntent.RetainCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElement.RetentionIntent.DoNotRetainCodingKeys()
{
  return &type metadata for IdentityDocumentElement.RetentionIntent.DoNotRetainCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentElement.RetentionIntent.DisplayOnlyCodingKeys()
{
  return &type metadata for IdentityDocumentElement.RetentionIntent.DisplayOnlyCodingKeys;
}

unint64_t sub_20A17CAE8()
{
  unint64_t result;

  result = qword_2545DA120;
  if (!qword_2545DA120)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B41A8, &type metadata for IdentityDocumentElement.RetentionIntent.RetainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA120);
  }
  return result;
}

unint64_t sub_20A17CB30()
{
  unint64_t result;

  result = qword_2545DA128;
  if (!qword_2545DA128)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4260, &type metadata for IdentityDocumentElement.RetentionIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA128);
  }
  return result;
}

unint64_t sub_20A17CB78()
{
  unint64_t result;

  result = qword_2545DA130;
  if (!qword_2545DA130)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4318, &type metadata for IdentityDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA130);
  }
  return result;
}

unint64_t sub_20A17CBC0()
{
  unint64_t result;

  result = qword_2545DA138;
  if (!qword_2545DA138)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4288, &type metadata for IdentityDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA138);
  }
  return result;
}

unint64_t sub_20A17CC08()
{
  unint64_t result;

  result = qword_2545DA140;
  if (!qword_2545DA140)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B42B0, &type metadata for IdentityDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA140);
  }
  return result;
}

unint64_t sub_20A17CC50()
{
  unint64_t result;

  result = qword_2545DA148;
  if (!qword_2545DA148)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4118, &type metadata for IdentityDocumentElement.RetentionIntent.RetainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA148);
  }
  return result;
}

unint64_t sub_20A17CC98()
{
  unint64_t result;

  result = qword_2545DA150;
  if (!qword_2545DA150)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4140, &type metadata for IdentityDocumentElement.RetentionIntent.RetainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA150);
  }
  return result;
}

unint64_t sub_20A17CCE0()
{
  unint64_t result;

  result = qword_2545DA158;
  if (!qword_2545DA158)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B40C8, &type metadata for IdentityDocumentElement.RetentionIntent.DoNotRetainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA158);
  }
  return result;
}

unint64_t sub_20A17CD28()
{
  unint64_t result;

  result = qword_2545DA160;
  if (!qword_2545DA160)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B40F0, &type metadata for IdentityDocumentElement.RetentionIntent.DoNotRetainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA160);
  }
  return result;
}

unint64_t sub_20A17CD70()
{
  unint64_t result;

  result = qword_2545DA168;
  if (!qword_2545DA168)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4078, &type metadata for IdentityDocumentElement.RetentionIntent.DisplayOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA168);
  }
  return result;
}

unint64_t sub_20A17CDB8()
{
  unint64_t result;

  result = qword_2545DA170;
  if (!qword_2545DA170)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B40A0, &type metadata for IdentityDocumentElement.RetentionIntent.DisplayOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA170);
  }
  return result;
}

unint64_t sub_20A17CE00()
{
  unint64_t result;

  result = qword_2545DA178;
  if (!qword_2545DA178)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B41D0, &type metadata for IdentityDocumentElement.RetentionIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA178);
  }
  return result;
}

unint64_t sub_20A17CE48()
{
  unint64_t result;

  result = qword_2545DA180;
  if (!qword_2545DA180)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B41F8, &type metadata for IdentityDocumentElement.RetentionIntent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA180);
  }
  return result;
}

uint64_t sub_20A17CE8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6961746572 && a2 == 0xE600000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746552746F4E6F64 && a2 == 0xEB000000006E6961 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4F79616C70736964 && a2 == 0xEB00000000796C6ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A17D008(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x63617073656D616ELL && a2 == 0xE900000000000065;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F69746E65746572 && a2 == 0xEF746E65746E496ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A17D198@<X0>(uint64_t isUniquelyReferenced_nonNull_native@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __objc2_class_ro *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  __objc2_class_ro *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  const char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint8_t *v35;
  uint64_t v36;
  unsigned __int8 v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  BOOL v44;
  int v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  unsigned __int8 v91;
  char v92;

  v83 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v6);
  v79 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IdentityDocumentDescriptor(0);
  v81 = *(_QWORD *)(v8 - 8);
  v82 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v80 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_20A1468F0(MEMORY[0x24BEE4AF8]);
  v10 = objc_msgSend((id)isUniquelyReferenced_nonNull_native, sel_elements);
  sub_20A1818B0();
  v11 = sub_20A1A8EA4();

  if (v11 >> 62)
    goto LABEL_41;
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v78 = v5;
  if (v12)
  {
    while (1)
    {
      if (v12 < 1)
      {
        __break(1u);
LABEL_54:
        result = sub_20A1A92A0();
        __break(1u);
        return result;
      }
      v13 = 0;
      v88 = v12;
      v89 = v11 & 0xC000000000000001;
      v14 = &XPCMobileDocumentReaderConfiguration;
      v84 = isUniquelyReferenced_nonNull_native;
      v86 = v11;
      while (1)
      {
        if (v89)
          v15 = (id)MEMORY[0x20BD20B28](v13, v11);
        else
          v15 = *(id *)(v11 + 8 * v13 + 32);
        v16 = v15;
        v17 = objc_msgSend((id)isUniquelyReferenced_nonNull_native, sel_intentToStoreForElement_, v15, v78);
        if (!v17)
        {
          if (qword_253EB1CD0 != -1)
            swift_once();
          v31 = sub_20A1A8D3C();
          __swift_project_value_buffer(v31, (uint64_t)qword_253EB3268);
          v32 = sub_20A1A8D24();
          v33 = sub_20A1A8FAC();
          if (os_log_type_enabled(v32, v33))
          {
            v34 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v34 = 0;
            _os_log_impl(&dword_20A10F000, v32, v33, "makeIdentityDocumentDescriptor could not get diIntentToStore", v34, 2u);
            v35 = v34;
            v14 = &XPCMobileDocumentReaderConfiguration;
            MEMORY[0x20BD214DC](v35, -1, -1);
          }

          goto LABEL_6;
        }
        v18 = v17;
        v19 = objc_msgSend(v16, (SEL)v14[37].ivars);
        v20 = v14;
        v21 = sub_20A1A8DB4();
        v23 = v22;

        IdentityElement.init(rawValue:)(v21, v23, (uint64_t)&v90);
        if ((v92 & 1) == 0)
          break;
        if (qword_253EB1CD0 != -1)
          swift_once();
        v24 = sub_20A1A8D3C();
        __swift_project_value_buffer(v24, (uint64_t)qword_253EB3268);
        v25 = sub_20A1A8D24();
        v26 = sub_20A1A8FA0();
        if (!os_log_type_enabled(v25, v26))
          goto LABEL_26;
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        v28 = v25;
        v29 = v26;
        v30 = "makeIdentityDocumentDescriptor could not create element";
LABEL_25:
        _os_log_impl(&dword_20A10F000, v28, v29, v30, v27, 2u);
        MEMORY[0x20BD214DC](v27, -1, -1);
LABEL_26:

LABEL_38:
        v12 = v88;
        v14 = &XPCMobileDocumentReaderConfiguration;
LABEL_6:
        if (v12 == ++v13)
          goto LABEL_42;
      }
      v36 = (uint64_t)v90;
      v37 = v91;
      v38 = objc_msgSend(v18, (SEL)&v20[1]);
      v39 = sub_20A1A8DB4();
      v41 = v40;

      IdentityIntentToStore.init(rawValue:)(v39, v41, (uint64_t)&v90);
      if ((v92 & 1) != 0)
        break;
      v45 = v37 & 1;
      v11 = (unint64_t)v90;
      v85 = v91;
      v5 = (char *)v87;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v90 = v5;
      v46 = v36;
      v48 = sub_20A12B8BC(v36, v45);
      v49 = *((_QWORD *)v5 + 2);
      v50 = (v47 & 1) == 0;
      v51 = v49 + v50;
      if (!__OFADD__(v49, v50))
      {
        v52 = v47;
        if (*((_QWORD *)v5 + 3) >= v51)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v5 = (char *)&v90;
            sub_20A18031C();
          }
        }
        else
        {
          sub_20A17FBE0(v51, isUniquelyReferenced_nonNull_native);
          v5 = v90;
          v53 = sub_20A12B8BC(v46, v45);
          if ((v52 & 1) != (v54 & 1))
            goto LABEL_54;
          v48 = v53;
        }
        v55 = v90;
        v87 = (unint64_t)v90;
        if ((v52 & 1) != 0)
        {
          v56 = *((_QWORD *)v90 + 7) + 16 * v48;
          *(_QWORD *)v56 = v11;
          *(_BYTE *)(v56 + 8) = v85 & 1;
        }
        else
        {
          *(_QWORD *)&v90[8 * (v48 >> 6) + 64] |= 1 << v48;
          v57 = v55[6] + 16 * v48;
          *(_QWORD *)v57 = v46;
          *(_BYTE *)(v57 + 8) = v45 != 0;
          v58 = v55[7] + 16 * v48;
          *(_QWORD *)v58 = v11;
          *(_BYTE *)(v58 + 8) = v85 & 1;
          v59 = v55[2];
          v60 = __OFADD__(v59, 1);
          v61 = v59 + 1;
          if (v60)
            goto LABEL_40;
          v55[2] = v61;
        }

        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = v84;
        v11 = v86;
        goto LABEL_38;
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      swift_bridgeObjectRetain();
      v12 = sub_20A1A9108();
      swift_bridgeObjectRelease();
      v78 = v5;
      if (!v12)
        goto LABEL_42;
    }
    if (qword_253EB1CD0 != -1)
      swift_once();
    v42 = sub_20A1A8D3C();
    __swift_project_value_buffer(v42, (uint64_t)qword_253EB3268);
    v25 = sub_20A1A8D24();
    v43 = sub_20A1A8FA0();
    v44 = os_log_type_enabled(v25, v43);
    v11 = v86;
    if (!v44)
      goto LABEL_26;
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    v28 = v25;
    v29 = v43;
    v30 = "makeIdentityDocumentDescriptor could not create identity intent to store";
    goto LABEL_25;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRelease();
    v62 = sub_20A1A8CAC();
    v63 = v80;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v80, 1, 1, v62);
  }
  else
  {
    objc_opt_self();
    v64 = swift_dynamicCastObjCClass();
    if (!v64)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v83, 1, 1, v82);
    }
    v65 = (void *)v64;
    swift_unknownObjectRetain();
    v66 = objc_msgSend(v65, sel_regionCode);
    if (v66)
    {
      v67 = v66;
      sub_20A1A8DB4();

    }
    v69 = (uint64_t)v78;
    sub_20A1A8CB8();
    v70 = sub_20A1A8CAC();
    v71 = *(_QWORD *)(v70 - 8);
    v72 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56);
    v72(v69, 0, 1, v70);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70) == 1)
    {
      v73 = (uint64_t)v79;
      sub_20A1A8C94();
      swift_unknownObjectRelease_n();
      sub_20A127E0C(v69, &qword_2545D82B0);
    }
    else
    {
      swift_unknownObjectRelease_n();
      v74 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 32);
      v73 = (uint64_t)v79;
      v74(v79, v69, v70);
    }
    v72(v73, 0, 1, v70);
    v63 = v80;
    sub_20A12063C(v73, v80, type metadata accessor for DigitalPresentmentDocumentType);
  }
  v75 = v82;
  *(_QWORD *)(v63 + *(int *)(v82 + 20)) = v87;
  v76 = v63;
  v77 = v83;
  sub_20A12063C(v76, v83, type metadata accessor for IdentityDocumentDescriptor);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v81 + 56))(v77, 0, 1, v75);
}

uint64_t sub_20A17D9B0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v28 = (unint64_t)(v6 + 63) >> 6;
  if (v8)
    goto LABEL_9;
LABEL_10:
  v12 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v12 < v28)
    {
      v13 = *(_QWORD *)(v5 + 8 * v12);
      ++v4;
      if (v13)
        goto LABEL_23;
      v4 = v12 + 1;
      if (v12 + 1 >= v28)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (v13)
        goto LABEL_23;
      v4 = v12 + 2;
      if (v12 + 2 >= v28)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (v13)
      {
LABEL_23:
        v8 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v4 << 6); ; i = v10 | (v4 << 6))
        {
          v15 = 16 * i;
          v16 = *(_QWORD *)(v3 + 48) + v15;
          v17 = *(_QWORD *)(v3 + 56) + v15;
          v18 = *(_QWORD *)v17;
          v19 = *(unsigned __int8 *)(v17 + 8);
          v20 = sub_20A12B8BC(*(_QWORD *)v16, *(_BYTE *)(v16 + 8));
          if ((v21 & 1) == 0)
            return 0;
          v22 = *(_QWORD *)(a2 + 56) + 16 * v20;
          v23 = *(_QWORD *)v22;
          if (*(_BYTE *)(v22 + 8) == 1)
          {
            if (v23)
              v24 = 0x65726F745379616DLL;
            else
              v24 = 0x53746F4E6C6C6977;
            if (v23)
              v25 = 0xE800000000000000;
            else
              v25 = 0xEC00000065726F74;
            if (v19)
            {
LABEL_36:
              if (v18)
                v27 = 0x65726F745379616DLL;
              else
                v27 = 0x53746F4E6C6C6977;
              if (v18)
                v26 = 0xE800000000000000;
              else
                v26 = 0xEC00000065726F74;
              if (v24 != v27)
                goto LABEL_7;
              goto LABEL_43;
            }
          }
          else
          {
            sub_20A1A9078();
            swift_bridgeObjectRelease();
            sub_20A1A9240();
            sub_20A1A8DF0();
            swift_bridgeObjectRelease();
            sub_20A1A8DF0();
            v24 = 0xD000000000000010;
            v25 = 0x800000020A1BCAC0;
            if (v19)
              goto LABEL_36;
          }
          sub_20A1A9078();
          swift_bridgeObjectRelease();
          sub_20A1A9240();
          sub_20A1A8DF0();
          swift_bridgeObjectRelease();
          sub_20A1A8DF0();
          v26 = 0x800000020A1BCAC0;
          if (v24 != 0xD000000000000010)
            goto LABEL_7;
LABEL_43:
          if (v25 == v26)
          {
            result = swift_bridgeObjectRelease_n();
            if (!v8)
              goto LABEL_10;
            goto LABEL_9;
          }
LABEL_7:
          v9 = sub_20A1A9258();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v9 & 1) == 0)
            return 0;
          if (!v8)
            goto LABEL_10;
LABEL_9:
          v10 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      v14 = v12 + 3;
      if (v14 < v28)
      {
        v13 = *(_QWORD *)(v5 + 8 * v14);
        if (v13)
        {
          v4 = v14;
          goto LABEL_23;
        }
        while (1)
        {
          v4 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_49;
          if (v4 >= v28)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          ++v14;
          if (v13)
            goto LABEL_23;
        }
      }
    }
    return 1;
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

unint64_t sub_20A17DD3C(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  char v16;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v11);
    result = sub_20A12B940(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11));
    if ((v16 & 1) == 0 || v15 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + result))
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t IdentityDocumentDescriptor.documentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1, a1, type metadata accessor for DigitalPresentmentDocumentType);
}

uint64_t type metadata accessor for DigitalPresentmentDocumentType(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DA250);
}

uint64_t IdentityDocumentDescriptor.documentType.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_20A17DEF8(a1, v1);
}

uint64_t sub_20A17DEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DigitalPresentmentDocumentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*IdentityDocumentDescriptor.documentType.modify())()
{
  return nullsub_1;
}

uint64_t IdentityDocumentDescriptor.elementsToIntentToStore.getter()
{
  type metadata accessor for IdentityDocumentDescriptor(0);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for IdentityDocumentDescriptor(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DA240);
}

uint64_t IdentityDocumentDescriptor.elementsToIntentToStore.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for IdentityDocumentDescriptor(0) + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*IdentityDocumentDescriptor.elementsToIntentToStore.modify())(_QWORD)
{
  type metadata accessor for IdentityDocumentDescriptor(0);
  return nullsub_1;
}

uint64_t IdentityDocumentDescriptor.init(documentType:elementsToIntentToStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  sub_20A12063C(a1, a3, type metadata accessor for DigitalPresentmentDocumentType);
  result = type metadata accessor for IdentityDocumentDescriptor(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t IdentityDocumentDescriptor.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v2, (uint64_t)v10, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v12 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for IdentityDocumentDescriptor(0) + 20));
  swift_bridgeObjectRetain();
  sub_20A157F08(a1, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A17E198()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x746E656D75636F64;
}

uint64_t sub_20A17E1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A1817AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A17E204()
{
  sub_20A1808FC();
  return sub_20A1A9360();
}

uint64_t sub_20A17E22C()
{
  sub_20A1808FC();
  return sub_20A1A936C();
}

uint64_t IdentityDocumentDescriptor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA188);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1808FC();
  sub_20A1A9354();
  v12 = 0;
  type metadata accessor for DigitalPresentmentDocumentType(0);
  sub_20A1205FC(&qword_2545DA198, type metadata accessor for DigitalPresentmentDocumentType, (uint64_t)&protocol conformance descriptor for DigitalPresentmentDocumentType);
  sub_20A1A9228();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for IdentityDocumentDescriptor(0) + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA1A0);
    sub_20A1809C8(&qword_2545DA1A8, (uint64_t (*)(void))sub_20A180940, (uint64_t (*)(void))sub_20A180984, MEMORY[0x24BEE04C0]);
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IdentityDocumentDescriptor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE v12[72];

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for DigitalPresentmentDocumentType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for IdentityDocumentDescriptor(0) + 20));
  swift_bridgeObjectRetain();
  sub_20A157F08((uint64_t)v12, v9);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t IdentityDocumentDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v17 = a2;
  v18 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA1C0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IdentityDocumentDescriptor(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1808FC();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v8;
  v11 = (uint64_t)v10;
  v23 = 0;
  sub_20A1205FC(&qword_2545DA1C8, type metadata accessor for DigitalPresentmentDocumentType, (uint64_t)&protocol conformance descriptor for DigitalPresentmentDocumentType);
  v12 = (uint64_t)v19;
  v13 = v20;
  sub_20A1A91B0();
  sub_20A12063C(v12, v11, type metadata accessor for DigitalPresentmentDocumentType);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA1A0);
  v22 = 1;
  sub_20A1809C8(&qword_2545DA1D0, (uint64_t (*)(void))sub_20A180A44, (uint64_t (*)(void))sub_20A180A88, MEMORY[0x24BEE04E0]);
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  v14 = v17;
  *(_QWORD *)(v11 + *(int *)(v16 + 20)) = v21;
  sub_20A127E8C(v11, v14, type metadata accessor for IdentityDocumentDescriptor);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A124284(v11, type metadata accessor for IdentityDocumentDescriptor);
}

uint64_t sub_20A17E804@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityDocumentDescriptor.init(from:)(a1, a2);
}

uint64_t sub_20A17E818(_QWORD *a1)
{
  return IdentityDocumentDescriptor.encode(to:)(a1);
}

uint64_t sub_20A17E834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _BYTE v15[72];

  v4 = v2;
  v5 = sub_20A1A8CAC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_20A1A930C();
  sub_20A127E8C(v4, (uint64_t)v11, type metadata accessor for DigitalPresentmentDocumentType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v12 = *(_QWORD *)(v4 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_20A157F08((uint64_t)v15, v12);
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t DigitalPresentmentDocumentType.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v1, (uint64_t)v8, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return 0x4C73726576697264;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_20A1A9078();
  swift_bridgeObjectRelease();
  v12 = 0x6C616E6F6974616ELL;
  v13 = 0xEF2D647261434449;
  sub_20A1A8C88();
  sub_20A1A8DF0();
  swift_bridgeObjectRelease();
  v10 = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t DigitalPresentmentDocumentType.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v0, (uint64_t)v7, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_20A1A9318();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_20A1A9318();
  sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_20A17EC7C()
{
  sub_20A180ACC();
  return sub_20A1A9360();
}

uint64_t sub_20A17ECA4()
{
  sub_20A180ACC();
  return sub_20A1A936C();
}

uint64_t sub_20A17ECCC()
{
  sub_20A180B54();
  return sub_20A1A9360();
}

uint64_t sub_20A17ECF4()
{
  sub_20A180B54();
  return sub_20A1A936C();
}

uint64_t sub_20A17ED1C()
{
  sub_20A180B10();
  return sub_20A1A9360();
}

uint64_t sub_20A17ED44()
{
  sub_20A180B10();
  return sub_20A1A936C();
}

uint64_t DigitalPresentmentDocumentType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA1E8);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA1F0);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA1F8);
  v13 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A180ACC();
  sub_20A1A9354();
  sub_20A127E8C(v29, (uint64_t)v12, type metadata accessor for DigitalPresentmentDocumentType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v31 = 0;
    sub_20A180B54();
    v16 = v30;
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
  else
  {
    v29 = v13;
    v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v12, v4);
    v32 = 1;
    sub_20A180B10();
    v19 = v26;
    v20 = v30;
    sub_20A1A91D4();
    sub_20A1205FC(&qword_2545D9DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED18]);
    v21 = v28;
    sub_20A1A9228();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v20);
  }
}

uint64_t DigitalPresentmentDocumentType.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for DigitalPresentmentDocumentType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_20A1A933C();
}

uint64_t DigitalPresentmentDocumentType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA218);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA220);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA228);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DigitalPresentmentDocumentType(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A180ACC();
  v18 = v41;
  sub_20A1A9348();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_20A1A91C8();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_20A180B10();
        sub_20A1A9150();
        v27 = sub_20A1A8CAC();
        sub_20A1205FC(&qword_2545D9DD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED30]);
        v28 = v15;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_20A1A91B0();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_20A12063C(v31, (uint64_t)v17, type metadata accessor for DigitalPresentmentDocumentType);
      }
      else
      {
        v43 = 0;
        sub_20A180B54();
        sub_20A1A9150();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = sub_20A1A8CAC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_20A12063C((uint64_t)v17, v21, type metadata accessor for DigitalPresentmentDocumentType);
    }
    else
    {
      v23 = sub_20A1A90B4();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
      *v25 = v33;
      sub_20A1A915C();
      sub_20A1A90A8();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_20A17F620@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigitalPresentmentDocumentType.init(from:)(a1, a2);
}

uint64_t sub_20A17F634(_QWORD *a1)
{
  return DigitalPresentmentDocumentType.encode(to:)(a1);
}

uint64_t sub_20A17F64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v0, (uint64_t)v7, type metadata accessor for DigitalPresentmentDocumentType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_20A1A9318();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_20A1A9318();
  sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_20A1A8D60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_20A17F780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for DigitalPresentmentDocumentType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_20A1A933C();
}

uint64_t sub_20A17F8E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2C8);
  v6 = sub_20A1A9120();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_20A12CF20(v24, v35);
      }
      else
      {
        sub_20A12CE64((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_20A1A930C();
      sub_20A1A8DE4();
      result = sub_20A1A933C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_20A12CF20(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A17FBE0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  char v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F48);
  v6 = sub_20A1A9120();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v39 = a2;
  v40 = v2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v41 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  swift_retain();
  v12 = 0;
LABEL_8:
  if (v10)
  {
    v17 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v18 = v17 | (v12 << 6);
    goto LABEL_22;
  }
  v19 = v12 + 1;
  if (__OFADD__(v12, 1))
    goto LABEL_41;
  if (v19 >= v41)
  {
    swift_release();
    v3 = v40;
    v20 = (_QWORD *)(v5 + 64);
    if ((v39 & 1) != 0)
    {
LABEL_36:
      v37 = 1 << *(_BYTE *)(v5 + 32);
      if (v37 >= 64)
        bzero(v20, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      else
        *v20 = -1 << v37;
      *(_QWORD *)(v5 + 16) = 0;
    }
  }
  else
  {
    v20 = (_QWORD *)(v5 + 64);
    v21 = *(_QWORD *)(v42 + 8 * v19);
    ++v12;
    if (v21)
      goto LABEL_21;
    v12 = v19 + 1;
    if (v19 + 1 >= v41)
      goto LABEL_33;
    v21 = *(_QWORD *)(v42 + 8 * v12);
    if (v21)
    {
LABEL_21:
      v10 = (v21 - 1) & v21;
      v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_22:
      v23 = 16 * v18;
      v24 = *(_QWORD *)(v5 + 48) + v23;
      v25 = *(_QWORD *)(v5 + 56) + v23;
      v26 = *(unsigned __int8 *)(v24 + 8);
      v27 = *(_QWORD *)v24;
      v43 = *(_BYTE *)(v25 + 8);
      v28 = *(_QWORD *)v25;
      sub_20A1A930C();
      if (v26 == 1)
        __asm { BR              X8 }
      sub_20A1A9240();
      sub_20A1A8DF0();
      swift_bridgeObjectRelease();
      sub_20A1A8DF0();
      sub_20A1A8DE4();
      swift_bridgeObjectRelease();
      v29 = sub_20A1A933C();
      v30 = -1 << *(_BYTE *)(v7 + 32);
      v31 = v29 & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v11 + 8 * (v31 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v11 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      while (++v32 != v34 || (v33 & 1) == 0)
      {
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v11 + 8 * v32);
        if (v36 != -1)
        {
          v13 = __clz(__rbit64(~v36)) + (v32 << 6);
LABEL_7:
          *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          v14 = 16 * v13;
          v15 = *(_QWORD *)(v7 + 48) + v14;
          *(_QWORD *)v15 = v27;
          *(_BYTE *)(v15 + 8) = v26;
          v16 = *(_QWORD *)(v7 + 56) + v14;
          *(_QWORD *)v16 = v28;
          *(_BYTE *)(v16 + 8) = v43;
          ++*(_QWORD *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x20A180104);
    }
    v22 = v19 + 2;
    if (v22 < v41)
    {
      v21 = *(_QWORD *)(v42 + 8 * v22);
      if (!v21)
      {
        while (1)
        {
          v12 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_42;
          if (v12 >= v41)
            goto LABEL_33;
          v21 = *(_QWORD *)(v42 + 8 * v12);
          ++v22;
          if (v21)
            goto LABEL_21;
        }
      }
      v12 = v22;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    v3 = v40;
    if ((v39 & 1) != 0)
      goto LABEL_36;
  }
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_20A180138()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2C8);
  v2 = *v0;
  v3 = sub_20A1A9114();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_20A12CE64(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_20A12CF20(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20A18031C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F48);
  v2 = *v0;
  v3 = sub_20A1A9114();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = *(_QWORD *)(v2 + 56) + v16;
    v20 = *(_QWORD *)v19;
    LOBYTE(v19) = *(_BYTE *)(v19 + 8);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v22 = v20;
    *(_BYTE *)(v22 + 8) = v19;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s7CoreIDV26IdentityDocumentDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char v20;
  uint64_t v22;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2B8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_20A127E8C(a1, (uint64_t)v14, type metadata accessor for DigitalPresentmentDocumentType);
  sub_20A127E8C(a2, v15, type metadata accessor for DigitalPresentmentDocumentType);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
      goto LABEL_8;
    goto LABEL_6;
  }
  sub_20A127E8C((uint64_t)v14, (uint64_t)v10, type metadata accessor for DigitalPresentmentDocumentType);
  if (v16(v15, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_6:
    sub_20A127E0C((uint64_t)v14, &qword_2545DA2B8);
LABEL_10:
    v20 = 0;
    return v20 & 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
  v17 = sub_20A1A8CA0();
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v18(v10, v4);
  if ((v17 & 1) == 0)
  {
    sub_20A124284((uint64_t)v14, type metadata accessor for DigitalPresentmentDocumentType);
    goto LABEL_10;
  }
LABEL_8:
  sub_20A124284((uint64_t)v14, type metadata accessor for DigitalPresentmentDocumentType);
  v19 = type metadata accessor for IdentityDocumentDescriptor(0);
  v20 = sub_20A17D9B0(*(_QWORD *)(a1 + *(int *)(v19 + 20)), *(_QWORD *)(a2 + *(int *)(v19 + 20)));
  return v20 & 1;
}

uint64_t _s7CoreIDV30DigitalPresentmentDocumentTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DigitalPresentmentDocumentType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2B8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_20A127E8C(a1, (uint64_t)v14, type metadata accessor for DigitalPresentmentDocumentType);
  sub_20A127E8C(a2, v15, type metadata accessor for DigitalPresentmentDocumentType);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_20A127E8C((uint64_t)v14, (uint64_t)v10, type metadata accessor for DigitalPresentmentDocumentType);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_20A1A8CA0();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_20A124284((uint64_t)v14, type metadata accessor for DigitalPresentmentDocumentType);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_20A127E0C((uint64_t)v14, &qword_2545DA2B8);
    v17 = 0;
    return v17 & 1;
  }
  sub_20A124284((uint64_t)v14, type metadata accessor for DigitalPresentmentDocumentType);
  v17 = 1;
  return v17 & 1;
}

unint64_t sub_20A1808FC()
{
  unint64_t result;

  result = qword_2545DA190;
  if (!qword_2545DA190)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4A94, &type metadata for IdentityDocumentDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA190);
  }
  return result;
}

unint64_t sub_20A180940()
{
  unint64_t result;

  result = qword_2545DA1B0;
  if (!qword_2545DA1B0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityElement, &type metadata for IdentityElement);
    atomic_store(result, (unint64_t *)&qword_2545DA1B0);
  }
  return result;
}

unint64_t sub_20A180984()
{
  unint64_t result;

  result = qword_2545DA1B8;
  if (!qword_2545DA1B8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityIntentToStore, &type metadata for IdentityIntentToStore);
    atomic_store(result, (unint64_t *)&qword_2545DA1B8);
  }
  return result;
}

uint64_t sub_20A1809C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545DA1A0);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x20BD21434](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A180A44()
{
  unint64_t result;

  result = qword_2545DA1D8;
  if (!qword_2545DA1D8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityElement, &type metadata for IdentityElement);
    atomic_store(result, (unint64_t *)&qword_2545DA1D8);
  }
  return result;
}

unint64_t sub_20A180A88()
{
  unint64_t result;

  result = qword_2545DA1E0;
  if (!qword_2545DA1E0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityIntentToStore, &type metadata for IdentityIntentToStore);
    atomic_store(result, (unint64_t *)&qword_2545DA1E0);
  }
  return result;
}

unint64_t sub_20A180ACC()
{
  unint64_t result;

  result = qword_2545DA200;
  if (!qword_2545DA200)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4A44, &type metadata for DigitalPresentmentDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA200);
  }
  return result;
}

unint64_t sub_20A180B10()
{
  unint64_t result;

  result = qword_2545DA208;
  if (!qword_2545DA208)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B49F4, &type metadata for DigitalPresentmentDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA208);
  }
  return result;
}

unint64_t sub_20A180B54()
{
  unint64_t result;

  result = qword_2545DA210;
  if (!qword_2545DA210)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B49A4, &type metadata for DigitalPresentmentDocumentType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA210);
  }
  return result;
}

uint64_t sub_20A180B98()
{
  return sub_20A1205FC(&qword_2545DA230, type metadata accessor for IdentityDocumentDescriptor, (uint64_t)&protocol conformance descriptor for IdentityDocumentDescriptor);
}

uint64_t sub_20A180BC4()
{
  return sub_20A1205FC(&qword_2545DA238, type metadata accessor for DigitalPresentmentDocumentType, (uint64_t)&protocol conformance descriptor for DigitalPresentmentDocumentType);
}

uint64_t *initializeBufferWithCopyOfBuffer for IdentityDocumentDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20A1A8CAC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = type metadata accessor for DigitalPresentmentDocumentType(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for IdentityDocumentDescriptor(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for IdentityDocumentDescriptor(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for DigitalPresentmentDocumentType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for IdentityDocumentDescriptor(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for DigitalPresentmentDocumentType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for IdentityDocumentDescriptor(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for DigitalPresentmentDocumentType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for IdentityDocumentDescriptor(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for DigitalPresentmentDocumentType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A1810E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for DigitalPresentmentDocumentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A181168(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DigitalPresentmentDocumentType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_20A1811E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DigitalPresentmentDocumentType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentDocumentType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A181260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_20A1A8CAC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentDocumentType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A1812B8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_20A1A8CAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

ValueMetadata *type metadata accessor for DigitalPresentmentDocumentType.CodingKeys()
{
  return &type metadata for DigitalPresentmentDocumentType.CodingKeys;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDocumentType.DriversLicenseCodingKeys()
{
  return &type metadata for DigitalPresentmentDocumentType.DriversLicenseCodingKeys;
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentDocumentType.NationalIDCardCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A18136C + 4 * byte_20A1B44D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A18138C + 4 * byte_20A1B44D5[v4]))();
}

_BYTE *sub_20A18136C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A18138C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A181394(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A18139C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A1813A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A1813AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDocumentType.NationalIDCardCodingKeys()
{
  return &type metadata for DigitalPresentmentDocumentType.NationalIDCardCodingKeys;
}

uint64_t _s7CoreIDV30DigitalPresentmentDocumentTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A181414 + 4 * byte_20A1B44DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A181448 + 4 * byte_20A1B44DA[v4]))();
}

uint64_t sub_20A181448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A181450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A181458);
  return result;
}

uint64_t sub_20A181464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A18146CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A181470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A181478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentDescriptor.CodingKeys()
{
  return &type metadata for IdentityDocumentDescriptor.CodingKeys;
}

unint64_t sub_20A181498()
{
  unint64_t result;

  result = qword_2545DA260;
  if (!qword_2545DA260)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B47BC, &type metadata for IdentityDocumentDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA260);
  }
  return result;
}

unint64_t sub_20A1814E0()
{
  unint64_t result;

  result = qword_2545DA268;
  if (!qword_2545DA268)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4874, &type metadata for DigitalPresentmentDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA268);
  }
  return result;
}

unint64_t sub_20A181528()
{
  unint64_t result;

  result = qword_2545DA270;
  if (!qword_2545DA270)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B497C, &type metadata for DigitalPresentmentDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA270);
  }
  return result;
}

unint64_t sub_20A181570()
{
  unint64_t result;

  result = qword_2545DA278;
  if (!qword_2545DA278)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B489C, &type metadata for DigitalPresentmentDocumentType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA278);
  }
  return result;
}

unint64_t sub_20A1815B8()
{
  unint64_t result;

  result = qword_2545DA280;
  if (!qword_2545DA280)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B48C4, &type metadata for DigitalPresentmentDocumentType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA280);
  }
  return result;
}

unint64_t sub_20A181600()
{
  unint64_t result;

  result = qword_2545DA288;
  if (!qword_2545DA288)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B47E4, &type metadata for DigitalPresentmentDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA288);
  }
  return result;
}

unint64_t sub_20A181648()
{
  unint64_t result;

  result = qword_2545DA290;
  if (!qword_2545DA290)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B480C, &type metadata for DigitalPresentmentDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA290);
  }
  return result;
}

unint64_t sub_20A181690()
{
  unint64_t result;

  result = qword_2545DA298;
  if (!qword_2545DA298)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B48EC, &type metadata for DigitalPresentmentDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA298);
  }
  return result;
}

unint64_t sub_20A1816D8()
{
  unint64_t result;

  result = qword_2545DA2A0;
  if (!qword_2545DA2A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4914, &type metadata for DigitalPresentmentDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA2A0);
  }
  return result;
}

unint64_t sub_20A181720()
{
  unint64_t result;

  result = qword_2545DA2A8;
  if (!qword_2545DA2A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B472C, &type metadata for IdentityDocumentDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA2A8);
  }
  return result;
}

unint64_t sub_20A181768()
{
  unint64_t result;

  result = qword_2545DA2B0;
  if (!qword_2545DA2B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4754, &type metadata for IdentityDocumentDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA2B0);
  }
  return result;
}

uint64_t sub_20A1817AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656D75636F64 && a2 == 0xEC00000065707954;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020A1BE150)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_20A1818B0()
{
  unint64_t result;

  result = qword_2545DA2C0;
  if (!qword_2545DA2C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545DA2C0);
  }
  return result;
}

uint64_t MobileDocumentReaderRequest.Document.RequestType.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;

  v1 = *v0;
  v2 = (unint64_t)v0[2] >> 62;
  if ((_DWORD)v2)
  {
    v3 = v0[1];
    if ((_DWORD)v2 == 1)
    {
      sub_20A1A9318();
      sub_20A1A9318();
      v4 = *(_QWORD *)(v1 + 16);
      if (v4)
      {
        v5 = (_BYTE *)(v1 + 40);
        do
        {
          if ((*v5 & 1) == 0)
            sub_20A1A9318();
          v5 += 16;
          sub_20A1A9318();
          --v4;
        }
        while (v4);
      }
      result = sub_20A1A9318();
      v11 = *(_QWORD *)(v3 + 16);
      if (v11)
      {
        v12 = (_BYTE *)(v3 + 40);
        do
        {
          if ((*v12 & 1) == 0)
            sub_20A1A9318();
          v12 += 16;
          result = sub_20A1A9318();
          --v11;
        }
        while (v11);
      }
    }
    else
    {
      sub_20A1A9318();
      sub_20A1A9318();
      v9 = *(_QWORD *)(v1 + 16);
      if (v9)
      {
        v10 = (_BYTE *)(v1 + 40);
        do
        {
          if ((*v10 & 1) == 0)
            sub_20A1A9318();
          v10 += 16;
          sub_20A1A9318();
          --v9;
        }
        while (v9);
      }
      sub_20A1A9318();
      v13 = *(_QWORD *)(v3 + 16);
      if (v13)
      {
        v14 = (_BYTE *)(v3 + 40);
        do
        {
          if ((*v14 & 1) == 0)
            sub_20A1A9318();
          v14 += 16;
          sub_20A1A9318();
          --v13;
        }
        while (v13);
      }
      return MobileDocumentReaderRequest.Document.ValidationOptions.hash(into:)();
    }
  }
  else
  {
    sub_20A1A9318();
    result = sub_20A1A9318();
    v7 = *(_QWORD *)(v1 + 16);
    if (v7)
    {
      v8 = (_BYTE *)(v1 + 40);
      do
      {
        if ((*v8 & 1) == 0)
          sub_20A1A9318();
        v8 += 16;
        result = sub_20A1A9318();
        --v7;
      }
      while (v7);
    }
  }
  return result;
}

uint64_t static MobileDocumentReaderRequest.Document.ValidationOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_20A124AA4(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1));
  else
    return 0;
}

uint64_t sub_20A181B6C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6E61725461746164;
  if (*v0 != 1)
    v1 = 0xD000000000000015;
  if (*v0)
    return v1;
  else
    return 0x4F79616C70736964;
}

uint64_t sub_20A181BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A186F8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A181C00()
{
  sub_20A184BFC();
  return sub_20A1A9360();
}

uint64_t sub_20A181C28()
{
  sub_20A184BFC();
  return sub_20A1A936C();
}

uint64_t sub_20A181C50()
{
  _BYTE *v0;

  if (*v0)
    return 0x6961746552746F6ELL;
  else
    return 0x6E696E6961746572;
}

uint64_t sub_20A181C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A18710C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A181CBC()
{
  sub_20A184D0C();
  return sub_20A1A9360();
}

uint64_t sub_20A181CE4()
{
  sub_20A184D0C();
  return sub_20A1A936C();
}

uint64_t sub_20A181D0C()
{
  sub_20A184D50();
  return sub_20A1A9360();
}

uint64_t sub_20A181D34()
{
  sub_20A184D50();
  return sub_20A1A936C();
}

uint64_t sub_20A181D5C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6961746552746F6ELL;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x6E696E6961746572;
}

uint64_t sub_20A181DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A187220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A181DEC()
{
  sub_20A184C40();
  return sub_20A1A9360();
}

uint64_t sub_20A181E14()
{
  sub_20A184C40();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderRequest.Document.RequestType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2D0);
  v26 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2D8);
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2E0);
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA2E8);
  v31 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *v1;
  v11 = v1[1];
  v12 = v1[2];
  v23 = v1[3];
  v24 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A184BFC();
  sub_20A1A9354();
  if (v12 >> 62)
  {
    if (v12 >> 62 == 1)
    {
      LOBYTE(v35) = 1;
      sub_20A184D0C();
      v13 = v34;
      sub_20A1A91D4();
      v35 = v32;
      v37 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA300);
      sub_20A15B3C4(&qword_2545DA308, &qword_2545DA300, (uint64_t (*)(void))sub_20A184C84, MEMORY[0x24BEE12A0]);
      v14 = v28;
      v15 = v33;
      sub_20A1A9228();
      if (!v15)
      {
        v35 = v24;
        v37 = 1;
        sub_20A1A9228();
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v13);
    }
    else
    {
      v18 = v12;
      LOBYTE(v35) = 2;
      sub_20A184C40();
      v19 = v29;
      v20 = v34;
      sub_20A1A91D4();
      v35 = v32;
      v37 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA300);
      sub_20A15B3C4(&qword_2545DA308, &qword_2545DA300, (uint64_t (*)(void))sub_20A184C84, MEMORY[0x24BEE12A0]);
      v21 = v30;
      v22 = v33;
      sub_20A1A9228();
      if (!v22)
      {
        v35 = v24;
        v37 = 1;
        sub_20A1A9228();
        LOBYTE(v35) = v18 & 1;
        v36 = v23;
        v37 = 2;
        sub_20A184CC8();
        sub_20A1A9228();
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v21);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v20);
    }
  }
  else
  {
    LOBYTE(v35) = 0;
    sub_20A184D50();
    v17 = v34;
    sub_20A1A91D4();
    v35 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA300);
    sub_20A15B3C4(&qword_2545DA308, &qword_2545DA300, (uint64_t (*)(void))sub_20A184C84, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v17);
  }
}

uint64_t MobileDocumentReaderRequest.Document.RequestType.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderRequest.Document.RequestType.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA330);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA338);
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA340);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA348);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20A184BFC();
  v15 = v46;
  sub_20A1A9348();
  if (!v15)
  {
    v37 = v7;
    v16 = v6;
    v18 = v43;
    v17 = v44;
    v46 = v11;
    v19 = sub_20A1A91C8();
    v20 = v19;
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      if (*(_BYTE *)(v19 + 32))
      {
        if (*(_BYTE *)(v19 + 32) != 1)
        {
          LOBYTE(v48) = 2;
          sub_20A184C40();
          sub_20A1A9150();
          v37 = v20;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA300);
          v27 = v17;
          LOBYTE(v48) = 0;
          sub_20A15B3C4(&qword_2545DA350, &qword_2545DA300, (uint64_t (*)(void))sub_20A184D94, MEMORY[0x24BEE12D0]);
          v28 = v41;
          sub_20A1A91B0();
          v29 = v51;
          LOBYTE(v48) = 1;
          sub_20A1A91B0();
          v43 = v29;
          v32 = v50;
          v47 = 2;
          sub_20A184DD8();
          sub_20A1A91B0();
          v34 = v46;
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v28);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v10);
          v31 = v49;
          v33 = v48 | 0x8000000000000000;
          v35 = (uint64_t)v45;
          v36 = v38;
          v23 = v43;
LABEL_12:
          *v36 = v23;
          v36[1] = v32;
          v36[2] = v33;
          v36[3] = v31;
          return __swift_destroy_boxed_opaque_existential_1(v35);
        }
        LOBYTE(v48) = 1;
        sub_20A184D0C();
        sub_20A1A9150();
        v37 = v20;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA300);
        LOBYTE(v51) = 0;
        sub_20A15B3C4(&qword_2545DA350, &qword_2545DA300, (uint64_t (*)(void))sub_20A184D94, MEMORY[0x24BEE12D0]);
        v21 = v42;
        v22 = v18;
        sub_20A1A91B0();
        v23 = v48;
        LOBYTE(v50) = 1;
        sub_20A1A91B0();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v21);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v10);
        v31 = 0;
        v32 = v51;
        v33 = 0x4000000000000000;
      }
      else
      {
        LOBYTE(v48) = 0;
        sub_20A184D50();
        sub_20A1A9150();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA300);
        sub_20A15B3C4(&qword_2545DA350, &qword_2545DA300, (uint64_t (*)(void))sub_20A184D94, MEMORY[0x24BEE12D0]);
        sub_20A1A91B0();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v16);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v10);
        v32 = 0;
        v33 = 0;
        v31 = 0;
        v23 = v48;
      }
      v35 = (uint64_t)v45;
      v36 = v38;
      goto LABEL_12;
    }
    v24 = sub_20A1A90B4();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v26 = &type metadata for MobileDocumentReaderRequest.Document.RequestType;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v10);
  }
  v35 = (uint64_t)v45;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_20A1829E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MobileDocumentReaderRequest.Document.RequestType.init(from:)(a1, a2);
}

uint64_t sub_20A1829F8(_QWORD *a1)
{
  return MobileDocumentReaderRequest.Document.RequestType.encode(to:)(a1);
}

uint64_t sub_20A182A0C()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A182A58()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderRequest.Document.ValidationOptions.useSystemTrustedIssuerCertificates.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MobileDocumentReaderRequest.Document.ValidationOptions.additionalIssuerCertificates.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  const __CFData *v6;
  SecCertificateRef v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 8);
  v11 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    v3 = (unint64_t *)(v1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      sub_20A120BD8(v4, *v3);
      v6 = (const __CFData *)sub_20A1A8C1C();
      v7 = SecCertificateCreateWithData(0, v6);

      v8 = sub_20A120E74(v4, v5);
      if (v7)
      {
        MEMORY[0x20BD20924](v8);
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_20A1A8EC8();
        sub_20A1A8ED4();
        sub_20A1A8EBC();
      }
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v9 = v11;
  }
  else
  {
    swift_bridgeObjectRetain();
    v9 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MobileDocumentReaderRequest.Document.ValidationOptions.init(useSystemTrustedIssuerCertificates:additionalIssuerCertificates:)@<X0>(char a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  __SecCertificate *v10;
  CFDataRef v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __SecCertificate *v19;
  CFDataRef v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  if (!(a2 >> 62))
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_16:
    result = swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
LABEL_17:
    *(_BYTE *)a3 = a1 & 1;
    *(_QWORD *)(a3 + 8) = v8;
    return result;
  }
  v6 = sub_20A1A9108();
  if (!v6)
    goto LABEL_16;
LABEL_3:
  v28 = MEMORY[0x24BEE4AF8];
  result = sub_20A179294(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v27 = a1;
    v8 = v28;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v9 = 0;
      do
      {
        v10 = (__SecCertificate *)MEMORY[0x20BD20B28](v9, a2);
        v11 = SecCertificateCopyData(v10);
        v12 = sub_20A1A8C28();
        v14 = v13;
        swift_unknownObjectRelease();

        v16 = *(_QWORD *)(v28 + 16);
        v15 = *(_QWORD *)(v28 + 24);
        if (v16 >= v15 >> 1)
          sub_20A179294(v15 > 1, v16 + 1, 1);
        ++v9;
        *(_QWORD *)(v28 + 16) = v16 + 1;
        v17 = v28 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v12;
        *(_QWORD *)(v17 + 40) = v14;
      }
      while (v6 != v9);
    }
    else
    {
      v18 = 0;
      do
      {
        v19 = (__SecCertificate *)*(id *)(a2 + 8 * v18 + 32);
        v20 = SecCertificateCopyData(v19);
        v21 = sub_20A1A8C28();
        v23 = v22;

        v25 = *(_QWORD *)(v28 + 16);
        v24 = *(_QWORD *)(v28 + 24);
        if (v25 >= v24 >> 1)
          sub_20A179294(v24 > 1, v25 + 1, 1);
        ++v18;
        *(_QWORD *)(v28 + 16) = v25 + 1;
        v26 = v28 + 16 * v25;
        *(_QWORD *)(v26 + 32) = v21;
        *(_QWORD *)(v26 + 40) = v23;
      }
      while (v6 != v18);
    }
    result = swift_bridgeObjectRelease();
    a1 = v27;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t MobileDocumentReaderRequest.Document.ValidationOptions.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 8);
  sub_20A1A9324();
  result = sub_20A1A9318();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (unint64_t *)(v1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_20A120BD8(v5, *v4);
      sub_20A1A8C34();
      sub_20A120E74(v5, v6);
      v4 += 2;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_20A182E60()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000020;
  else
    return 0xD000000000000022;
}

uint64_t sub_20A182EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A187394(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A182EC4()
{
  sub_20A184E1C();
  return sub_20A1A9360();
}

uint64_t sub_20A182EEC()
{
  sub_20A184E1C();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderRequest.Document.ValidationOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA368);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A184E1C();
  sub_20A1A9354();
  v11 = 0;
  sub_20A1A9210();
  if (!v2)
  {
    v9[1] = v9[0];
    v10 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82C8);
    sub_20A15B3C4(&qword_2545D82D0, &qword_2545D82C8, (uint64_t (*)(void))sub_20A1275D8, MEMORY[0x24BEE12A0]);
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MobileDocumentReaderRequest.Document.ValidationOptions.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.Document.ValidationOptions.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderRequest.Document.ValidationOptions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA378);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A184E1C();
  sub_20A1A9348();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_20A1A9198();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D82C8);
    v13 = 1;
    sub_20A15B3C4(&qword_2545D82E8, &qword_2545D82C8, (uint64_t (*)(void))sub_20A127940, MEMORY[0x24BEE12D0]);
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A183264@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderRequest.Document.ValidationOptions.init(from:)(a1, a2);
}

uint64_t sub_20A183278(_QWORD *a1)
{
  return MobileDocumentReaderRequest.Document.ValidationOptions.encode(to:)(a1);
}

uint64_t sub_20A18328C()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.Document.ValidationOptions.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A1832E0()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.Document.ValidationOptions.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A18332C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_20A124AA4(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1));
  else
    return 0;
}

uint64_t MobileDocumentReaderRequest.Document.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1, a1, type metadata accessor for MobileDocumentType);
}

uint64_t MobileDocumentReaderRequest.Document.requestType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_20A184E74(v4, v5, v6);
}

double MobileDocumentReaderRequest.Document.init(type:retainedElements:nonRetainedElements:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  double result;

  sub_20A12063C(a1, a4, type metadata accessor for MobileDocumentType);
  v7 = a4 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20);
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  result = 2.0;
  *(_OWORD *)(v7 + 16) = xmmword_20A1B4AF0;
  return result;
}

uint64_t MobileDocumentReaderRequest.Document.init(type:retainedElements:nonRetainedElements:validationOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  v8 = *a4;
  v9 = *((_QWORD *)a4 + 1);
  sub_20A12063C(a1, a5, type metadata accessor for MobileDocumentType);
  result = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  v11 = (_QWORD *)(a5 + *(int *)(result + 20));
  *v11 = a2;
  v11[1] = a3;
  v11[2] = v8 | 0x8000000000000000;
  v11[3] = v9;
  return result;
}

uint64_t MobileDocumentReaderRequest.Document.init(type:displayOnlyElements:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t result;
  _QWORD *v15;

  sub_20A127E8C(a1, a3, type metadata accessor for MobileDocumentType);
  v6 = a2[2];
  if (v6)
  {
    v7 = a2 + 5;
    v8 = a2[2];
    while (*v7 != 1 || *((_QWORD *)v7 - 1) != 3)
    {
      v7 += 16;
      if (!--v8)
        goto LABEL_8;
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRetain();
    v10 = a2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_20A16C5F8(0, v6 + 1, 1, a2);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_20A16C5F8((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[2 * v12];
    v13[4] = 3;
    *((_BYTE *)v13 + 40) = 1;
    swift_bridgeObjectRelease();
    a2 = v10;
  }
  sub_20A124284(a1, type metadata accessor for MobileDocumentType);
  result = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  v15 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v15 = a2;
  v15[1] = 0;
  v15[2] = 0;
  v15[3] = 0;
  return result;
}

uint64_t MobileDocumentReaderRequest.Document.retainedElements.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20) + 16) >> 62)
    return swift_bridgeObjectRetain();
  else
    return MEMORY[0x24BEE4AF8];
}

uint64_t MobileDocumentReaderRequest.Document.nonRetainedElements.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20));
  v2 = *v1;
  v3 = (unint64_t)v1[2] >> 62;
  if ((_DWORD)v3)
  {
    v4 = v1[1];
    if ((_DWORD)v3 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  return v4;
}

BOOL MobileDocumentReaderRequest.Document.isDisplayOnly.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20) + 16) >> 62 == 0;
}

BOOL MobileDocumentReaderRequest.Document.isRawDataTransfer.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20) + 16) >> 62 == 1;
}

BOOL MobileDocumentReaderRequest.Document.requiresReaderToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20) + 16) >> 62 != 0;
}

uint64_t MobileDocumentReaderRequest.Document.usesSystemTrustedIssuerCertificates.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20) + 16);
  if (!(v1 >> 62))
    return 1;
  if (v1 >> 62 == 1)
    return 0;
  return v1 & 1;
}

uint64_t MobileDocumentReaderRequest.Document.additionalIssuerCertificates.getter()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(_QWORD *)(v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20) + 16) & 0x8000000000000000) == 0)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1 = MobileDocumentReaderRequest.Document.ValidationOptions.additionalIssuerCertificates.getter();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t MobileDocumentReaderRequest.Document.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  _OWORD *v10;
  __int128 v11;
  _OWORD v13[2];

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v1, (uint64_t)v8, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v10 = (_OWORD *)(v1 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20));
  v11 = v10[1];
  v13[0] = *v10;
  v13[1] = v11;
  return MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
}

uint64_t sub_20A183930()
{
  _BYTE *v0;

  if (*v0)
    return 0x5474736575716572;
  else
    return 1701869940;
}

uint64_t sub_20A18396C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A18747C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A183990()
{
  sub_20A185110();
  return sub_20A1A9360();
}

uint64_t sub_20A1839B8()
{
  sub_20A185110();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderRequest.Document.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;
  __int128 v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA380);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A185110();
  sub_20A1A9354();
  LOBYTE(v13) = 0;
  type metadata accessor for MobileDocumentType(0);
  sub_20A1205FC(&qword_2545DA390, type metadata accessor for MobileDocumentType, (uint64_t)&protocol conformance descriptor for MobileDocumentType);
  sub_20A1A9228();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20));
    v10 = v9[1];
    v13 = *v9;
    v14 = v10;
    v12[15] = 1;
    sub_20A185154();
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDocumentReaderRequest.Document.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _OWORD *v9;
  __int128 v10;
  _OWORD v12[2];

  v1 = v0;
  v2 = sub_20A1A8CAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v1, (uint64_t)v8, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v9 = (_OWORD *)(v1 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20));
  v10 = v9[1];
  v12[0] = *v9;
  v12[1] = v10;
  MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderRequest.Document.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;

  v20 = a2;
  v21 = type metadata accessor for MobileDocumentType(0);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA3A0);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A185110();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v8;
  v11 = (uint64_t)v10;
  LOBYTE(v24) = 0;
  sub_20A1205FC(&qword_2545DA3A8, type metadata accessor for MobileDocumentType, (uint64_t)&protocol conformance descriptor for MobileDocumentType);
  v12 = (uint64_t)v22;
  v13 = v23;
  sub_20A1A91B0();
  sub_20A12063C(v12, v11, type metadata accessor for MobileDocumentType);
  v26 = 1;
  sub_20A185198();
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  v14 = v20;
  v15 = (_OWORD *)(v11 + *(int *)(v19 + 20));
  v16 = v25;
  *v15 = v24;
  v15[1] = v16;
  sub_20A127E8C(v11, v14, type metadata accessor for MobileDocumentReaderRequest.Document);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A124284(v11, type metadata accessor for MobileDocumentReaderRequest.Document);
}

uint64_t sub_20A183F38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderRequest.Document.init(from:)(a1, a2);
}

uint64_t sub_20A183F4C(_QWORD *a1)
{
  return MobileDocumentReaderRequest.Document.encode(to:)(a1);
}

uint64_t sub_20A183F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  _OWORD *v13;
  __int128 v14;
  _OWORD v16[2];

  v4 = v2;
  v5 = sub_20A1A8CAC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(v4, (uint64_t)v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v13 = (_OWORD *)(v4 + *(int *)(a2 + 20));
  v14 = v13[1];
  v16[0] = *v13;
  v16[1] = v14;
  return MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
}

uint64_t sub_20A1840D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _OWORD *v12;
  __int128 v13;
  _OWORD v15[2];

  v4 = v2;
  v5 = sub_20A1A8CAC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A1A930C();
  sub_20A127E8C(v4, (uint64_t)v11, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v12 = (_OWORD *)(v4 + *(int *)(a2 + 20));
  v13 = v12[1];
  v15[0] = *v12;
  v15[1] = v13;
  MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderRequest.sessionIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderRequest.document.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDocumentReaderRequest(0);
  return sub_20A127E8C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for MobileDocumentReaderRequest.Document);
}

uint64_t MobileDocumentReaderRequest.init(sessionIdentifier:document:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for MobileDocumentReaderRequest(0);
  return sub_20A12063C(a3, (uint64_t)a4 + *(int *)(v6 + 20), type metadata accessor for MobileDocumentReaderRequest.Document);
}

uint64_t MobileDocumentReaderRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  _OWORD v12[2];

  v1 = sub_20A1A8CAC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  v8 = v0 + *(int *)(type metadata accessor for MobileDocumentReaderRequest(0) + 20);
  sub_20A127E8C(v8, (uint64_t)v7, type metadata accessor for MobileDocumentType.Identifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_20A1A9318();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_20A1A9318();
    sub_20A1205FC(&qword_2545D9D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v9 = (_OWORD *)(v8 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20));
  v10 = v9[1];
  v12[0] = *v9;
  v12[1] = v10;
  return MobileDocumentReaderRequest.Document.RequestType.hash(into:)();
}

uint64_t sub_20A1844B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E656D75636F64;
  else
    return 0xD000000000000011;
}

uint64_t sub_20A1844F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A187574(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A184518()
{
  sub_20A185478();
  return sub_20A1A9360();
}

uint64_t sub_20A184540()
{
  sub_20A185478();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA3B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A185478();
  sub_20A1A9354();
  v8[15] = 0;
  sub_20A1A9204();
  if (!v1)
  {
    type metadata accessor for MobileDocumentReaderRequest(0);
    v8[14] = 1;
    type metadata accessor for MobileDocumentReaderRequest.Document(0);
    sub_20A1205FC(&qword_2545DA3C8, type metadata accessor for MobileDocumentReaderRequest.Document, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest.Document);
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentReaderRequest.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  v17 = a2;
  v19 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  MEMORY[0x24BDAC7A8](v19);
  v18 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA3D0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MobileDocumentReaderRequest(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A185478();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = a1;
  v11 = (uint64_t)v18;
  v22 = 0;
  v12 = v20;
  *v10 = sub_20A1A918C();
  v10[1] = v13;
  v21 = 1;
  sub_20A1205FC(&qword_2545DA3D8, type metadata accessor for MobileDocumentReaderRequest.Document, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest.Document);
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  sub_20A12063C(v11, (uint64_t)v10 + *(int *)(v8 + 20), type metadata accessor for MobileDocumentReaderRequest.Document);
  sub_20A127E8C((uint64_t)v10, v17, type metadata accessor for MobileDocumentReaderRequest);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return sub_20A124284((uint64_t)v10, type metadata accessor for MobileDocumentReaderRequest);
}

uint64_t sub_20A184948@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderRequest.init(from:)(a1, a2);
}

uint64_t sub_20A18495C(_QWORD *a1)
{
  return MobileDocumentReaderRequest.encode(to:)(a1);
}

uint64_t sub_20A184970()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A1849B0()
{
  sub_20A1A930C();
  MobileDocumentReaderRequest.hash(into:)();
  return sub_20A1A933C();
}

BOOL _s7CoreIDV27MobileDocumentReaderRequestV0D0V0F4TypeO2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v14;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  if (!(v5 >> 62))
  {
    if (!(v9 >> 62))
    {
      v10 = *a1;
      v11 = *a2;
      goto LABEL_8;
    }
    goto LABEL_15;
  }
  if (v5 >> 62 == 1)
  {
    if (v9 >> 62 == 1 && (sub_20A126B48(*a1, *a2) & 1) != 0)
    {
      v10 = v2;
      v11 = v6;
LABEL_8:
      v12 = sub_20A126B48(v10, v11);
      sub_20A184E74(v7, v6, v9);
      sub_20A184E74(v3, v2, v5);
      sub_20A185758(v3, v2, v5);
      sub_20A185758(v7, v6, v9);
      return v12 & 1;
    }
    goto LABEL_15;
  }
  if (v9 >> 62 != 2 || (sub_20A126B48(*a1, *a2) & 1) == 0 || (sub_20A126B48(v2, v6) & 1) == 0)
  {
LABEL_15:
    sub_20A184E74(v7, v6, v9);
    sub_20A184E74(v3, v2, v5);
    goto LABEL_16;
  }
  sub_20A184E74(v7, v6, v9);
  sub_20A184E74(v3, v2, v5);
  if (((v5 & 1) == 0) == (v9 & 1))
  {
LABEL_16:
    sub_20A185758(v3, v2, v5);
    sub_20A185758(v7, v6, v9);
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_20A124AA4(v4, v8);
  sub_20A185758(v3, v2, v5);
  sub_20A185758(v7, v6, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v14 & 1) != 0;
}

unint64_t sub_20A184BFC()
{
  unint64_t result;

  result = qword_2545DA2F0;
  if (!qword_2545DA2F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5618, &type metadata for MobileDocumentReaderRequest.Document.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA2F0);
  }
  return result;
}

unint64_t sub_20A184C40()
{
  unint64_t result;

  result = qword_2545DA2F8;
  if (!qword_2545DA2F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B55C8, &type metadata for MobileDocumentReaderRequest.Document.RequestType.ValidatedDataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA2F8);
  }
  return result;
}

unint64_t sub_20A184C84()
{
  unint64_t result;

  result = qword_2545DA310;
  if (!qword_2545DA310)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentElement, &type metadata for MobileDocumentElement);
    atomic_store(result, (unint64_t *)&qword_2545DA310);
  }
  return result;
}

unint64_t sub_20A184CC8()
{
  unint64_t result;

  result = qword_2545DA318;
  if (!qword_2545DA318)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderRequest.Document.ValidationOptions, &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions);
    atomic_store(result, (unint64_t *)&qword_2545DA318);
  }
  return result;
}

unint64_t sub_20A184D0C()
{
  unint64_t result;

  result = qword_2545DA320;
  if (!qword_2545DA320)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5578, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA320);
  }
  return result;
}

unint64_t sub_20A184D50()
{
  unint64_t result;

  result = qword_2545DA328;
  if (!qword_2545DA328)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5528, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DisplayOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA328);
  }
  return result;
}

unint64_t sub_20A184D94()
{
  unint64_t result;

  result = qword_2545DA358;
  if (!qword_2545DA358)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentElement, &type metadata for MobileDocumentElement);
    atomic_store(result, (unint64_t *)&qword_2545DA358);
  }
  return result;
}

unint64_t sub_20A184DD8()
{
  unint64_t result;

  result = qword_2545DA360;
  if (!qword_2545DA360)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderRequest.Document.ValidationOptions, &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions);
    atomic_store(result, (unint64_t *)&qword_2545DA360);
  }
  return result;
}

unint64_t sub_20A184E1C()
{
  unint64_t result;

  result = qword_2545DA370;
  if (!qword_2545DA370)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B54D8, &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA370);
  }
  return result;
}

uint64_t type metadata accessor for MobileDocumentReaderRequest.Document(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DA410);
}

uint64_t sub_20A184E74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t result;

  v3 = a3 >> 62;
  if (a3 >> 62)
  {
    if ((_DWORD)v3 != 1)
    {
      if ((_DWORD)v3 != 2)
        return result;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

BOOL _s7CoreIDV27MobileDocumentReaderRequestV0D0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  _OWORD *v22;
  __int128 v23;
  _OWORD v26[2];
  _OWORD v27[2];

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9E88);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_20A127E8C(a1, (uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
  sub_20A127E8C(a2, v15, type metadata accessor for MobileDocumentType.Identifier);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
      goto LABEL_8;
    goto LABEL_6;
  }
  sub_20A127E8C((uint64_t)v14, (uint64_t)v10, type metadata accessor for MobileDocumentType.Identifier);
  if (v16(v15, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_6:
    sub_20A17455C((uint64_t)v14);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
  v17 = sub_20A1A8CA0();
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v18(v10, v4);
  if ((v17 & 1) == 0)
  {
    sub_20A124284((uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
    return 0;
  }
LABEL_8:
  sub_20A124284((uint64_t)v14, type metadata accessor for MobileDocumentType.Identifier);
  v19 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  v20 = (_OWORD *)(a1 + *(int *)(v19 + 20));
  v21 = v20[1];
  v27[0] = *v20;
  v27[1] = v21;
  v22 = (_OWORD *)(a2 + *(int *)(v19 + 20));
  v23 = v22[1];
  v26[0] = *v22;
  v26[1] = v23;
  return _s7CoreIDV27MobileDocumentReaderRequestV0D0V0F4TypeO2eeoiySbAG_AGtFZ_0((uint64_t *)v27, (uint64_t *)v26);
}

unint64_t sub_20A185110()
{
  unint64_t result;

  result = qword_2545DA388;
  if (!qword_2545DA388)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5488, &type metadata for MobileDocumentReaderRequest.Document.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA388);
  }
  return result;
}

unint64_t sub_20A185154()
{
  unint64_t result;

  result = qword_2545DA398;
  if (!qword_2545DA398)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderRequest.Document.RequestType, &type metadata for MobileDocumentReaderRequest.Document.RequestType);
    atomic_store(result, (unint64_t *)&qword_2545DA398);
  }
  return result;
}

unint64_t sub_20A185198()
{
  unint64_t result;

  result = qword_2545DA3B0;
  if (!qword_2545DA3B0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderRequest.Document.RequestType, &type metadata for MobileDocumentReaderRequest.Document.RequestType);
    atomic_store(result, (unint64_t *)&qword_2545DA3B0);
  }
  return result;
}

uint64_t type metadata accessor for MobileDocumentReaderRequest(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DA400);
}

BOOL _s7CoreIDV27MobileDocumentReaderRequestV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  _BOOL8 result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  _OWORD *v26;
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MobileDocumentType.Identifier(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9E88);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == *a2 && a1[1] == a2[1] || (v14 = sub_20A1A9258(), result = 0, (v14 & 1) != 0))
  {
    v16 = *(int *)(type metadata accessor for MobileDocumentReaderRequest(0) + 20);
    v17 = (uint64_t)a1 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_20A127E8C(v17, (uint64_t)v13, type metadata accessor for MobileDocumentType.Identifier);
    sub_20A127E8C(v18, v19, type metadata accessor for MobileDocumentType.Identifier);
    v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v20((uint64_t)v13, 1, v4) == 1)
    {
      if (v20(v19, 1, v4) == 1)
      {
LABEL_11:
        sub_20A124284((uint64_t)v13, type metadata accessor for MobileDocumentType.Identifier);
        v23 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
        v24 = (_OWORD *)(v17 + *(int *)(v23 + 20));
        v25 = v24[1];
        v29[0] = *v24;
        v29[1] = v25;
        v26 = (_OWORD *)(v18 + *(int *)(v23 + 20));
        v27 = v26[1];
        v28[0] = *v26;
        v28[1] = v27;
        return _s7CoreIDV27MobileDocumentReaderRequestV0D0V0F4TypeO2eeoiySbAG_AGtFZ_0((uint64_t *)v29, (uint64_t *)v28);
      }
    }
    else
    {
      sub_20A127E8C((uint64_t)v13, (uint64_t)v10, type metadata accessor for MobileDocumentType.Identifier);
      if (v20(v19, 1, v4) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v19, v4);
        v21 = sub_20A1A8CA0();
        v22 = *(void (**)(char *, uint64_t))(v5 + 8);
        v22(v7, v4);
        v22(v10, v4);
        if ((v21 & 1) != 0)
          goto LABEL_11;
        sub_20A124284((uint64_t)v13, type metadata accessor for MobileDocumentType.Identifier);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    sub_20A17455C((uint64_t)v13);
    return 0;
  }
  return result;
}

unint64_t sub_20A185478()
{
  unint64_t result;

  result = qword_2545DA3C0;
  if (!qword_2545DA3C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5438, &type metadata for MobileDocumentReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA3C0);
  }
  return result;
}

unint64_t sub_20A1854C0()
{
  unint64_t result;

  result = qword_2545DA3E0;
  if (!qword_2545DA3E0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderRequest.Document.RequestType, &type metadata for MobileDocumentReaderRequest.Document.RequestType);
    atomic_store(result, (unint64_t *)&qword_2545DA3E0);
  }
  return result;
}

unint64_t sub_20A185508()
{
  unint64_t result;

  result = qword_2545DA3E8;
  if (!qword_2545DA3E8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderRequest.Document.ValidationOptions, &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions);
    atomic_store(result, (unint64_t *)&qword_2545DA3E8);
  }
  return result;
}

uint64_t sub_20A18554C()
{
  return sub_20A1205FC(&qword_2545DA3F0, type metadata accessor for MobileDocumentReaderRequest.Document, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest.Document);
}

uint64_t sub_20A185578()
{
  return sub_20A1205FC(&qword_2545DA3F8, type metadata accessor for MobileDocumentReaderRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest);
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_20A1A8CAC();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = type metadata accessor for MobileDocumentType.Identifier(0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v14 = *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20);
    v15 = (uint64_t *)&v7[v14];
    v16 = (uint64_t *)&v8[v14];
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    v20 = v16[3];
    sub_20A184E74(*v16, v18, v19);
    *v15 = v17;
    v15[1] = v18;
    v15[2] = v19;
    v15[3] = v20;
  }
  return v3;
}

uint64_t destroy for MobileDocumentReaderRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_20A1A8CAC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20);
  return sub_20A185758(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16));
}

uint64_t sub_20A185758(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t result;

  v3 = a3 >> 62;
  if (a3 >> 62)
  {
    if ((_DWORD)v3 != 1)
    {
      if ((_DWORD)v3 != 2)
        return result;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MobileDocumentReaderRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20A1A8CAC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20);
  v13 = (uint64_t *)&v6[v12];
  v14 = (uint64_t *)&v7[v12];
  v15 = *v14;
  v16 = v14[1];
  v17 = v14[2];
  v18 = v14[3];
  sub_20A184E74(*v14, v16, v17);
  *v13 = v15;
  v13[1] = v16;
  v13[2] = v17;
  v13[3] = v18;
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8CAC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20);
  v16 = (uint64_t *)&v7[v15];
  v17 = (uint64_t *)&v8[v15];
  v18 = *v17;
  v19 = v17[1];
  v20 = v17[2];
  v21 = v17[3];
  sub_20A184E74(*v17, v19, v20);
  v22 = *v16;
  v23 = v16[1];
  v24 = v16[2];
  *v16 = v18;
  v16[1] = v19;
  v16[2] = v20;
  v16[3] = v21;
  sub_20A185758(v22, v23, v24);
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20A1A8CAC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v10 = *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20);
  v11 = &v5[v10];
  v12 = &v6[v10];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  return a1;
}

_QWORD *assignWithTake for MobileDocumentReaderRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8CAC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(type metadata accessor for MobileDocumentReaderRequest.Document(0) + 20);
  v17 = (uint64_t *)&v8[v16];
  v18 = &v9[v16];
  v19 = *v17;
  v20 = v17[1];
  v21 = v17[2];
  v22 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v22;
  sub_20A185758(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A185C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A185CC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20A185D34()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MobileDocumentReaderRequest.Document(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderRequest.Document(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20A1A8CAC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = type metadata accessor for MobileDocumentType.Identifier(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = *v13;
    v15 = v13[1];
    v16 = v13[2];
    v17 = v13[3];
    sub_20A184E74(*v13, v15, v16);
    *v12 = v14;
    v12[1] = v15;
    v12[2] = v16;
    v12[3] = v17;
  }
  return a1;
}

uint64_t destroy for MobileDocumentReaderRequest.Document(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return sub_20A185758(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 16));
}

char *initializeWithCopy for MobileDocumentReaderRequest.Document(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t *)&a1[v9];
  v11 = (uint64_t *)&a2[v9];
  v12 = *v11;
  v13 = v11[1];
  v14 = v11[2];
  v15 = v11[3];
  sub_20A184E74(*v11, v13, v14);
  *v10 = v12;
  v10[1] = v13;
  v10[2] = v14;
  v10[3] = v15;
  return a1;
}

char *assignWithCopy for MobileDocumentReaderRequest.Document(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)&a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v15 = *v14;
  v16 = v14[1];
  v17 = v14[2];
  v18 = v14[3];
  sub_20A184E74(*v14, v16, v17);
  v19 = *v13;
  v20 = v13[1];
  v21 = v13[2];
  *v13 = v15;
  v13[1] = v16;
  v13[2] = v17;
  v13[3] = v18;
  sub_20A185758(v19, v20, v21);
  return a1;
}

char *initializeWithTake for MobileDocumentReaderRequest.Document(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  return a1;
}

char *assignWithTake for MobileDocumentReaderRequest.Document(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;

  v6 = sub_20A1A8CAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for MobileDocumentType.Identifier(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = (uint64_t *)&a1[v12];
  v14 = &a2[v12];
  v15 = *v13;
  v16 = v13[1];
  v17 = v13[2];
  v18 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v18;
  sub_20A185758(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderRequest.Document()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A186314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for MobileDocumentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((*(_QWORD *)(a1 + *(int *)(a3 + 20) + 16) >> 1) > 0x80000000)
    return -(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 16) >> 1);
  return 0;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderRequest.Document()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A1863A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for MobileDocumentType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = 0;
  v10[2] = 2 * -(int)a2;
  v10[3] = 0;
  return result;
}

uint64_t sub_20A186424()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MobileDocumentType.Identifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for MobileDocumentReaderRequest.Document.RequestType(uint64_t a1)
{
  return sub_20A185758(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t *initializeWithCopy for MobileDocumentReaderRequest.Document.RequestType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_20A184E74(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for MobileDocumentReaderRequest.Document.RequestType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_20A184E74(*a2, v4, v5);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_20A185758(v7, v8, v9);
  return a1;
}

uint64_t *assignWithTake for MobileDocumentReaderRequest.Document.RequestType(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_20A185758(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderRequest.Document.RequestType(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderRequest.Document.RequestType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_20A18662C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 62;
}

uint64_t sub_20A186638(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_20A186648(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 1 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.RequestType()
{
  return &type metadata for MobileDocumentReaderRequest.Document.RequestType;
}

uint64_t initializeBufferWithCopyOfBuffer for MobileDocumentReaderRequest.Document.ValidationOptions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileDocumentReaderRequest.Document.ValidationOptions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MobileDocumentReaderRequest.Document.ValidationOptions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.ValidationOptions()
{
  return &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.CodingKeys()
{
  return &type metadata for MobileDocumentReaderRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.CodingKeys()
{
  return &type metadata for MobileDocumentReaderRequest.Document.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.ValidationOptions.CodingKeys()
{
  return &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.RequestType.CodingKeys()
{
  return &type metadata for MobileDocumentReaderRequest.Document.RequestType.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderRequest.Document.RequestType.DisplayOnlyCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A1867B0 + 4 * byte_20A1B4B00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A1867D0 + 4 * byte_20A1B4B05[v4]))();
}

_BYTE *sub_20A1867B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A1867D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A1867D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A1867E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A1867E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A1867F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.RequestType.DisplayOnlyCodingKeys()
{
  return &type metadata for MobileDocumentReaderRequest.Document.RequestType.DisplayOnlyCodingKeys;
}

uint64_t _s7CoreIDV27MobileDocumentReaderRequestV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A186858 + 4 * byte_20A1B4B0F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A18688C + 4 * byte_20A1B4B0A[v4]))();
}

uint64_t sub_20A18688C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A186894(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A18689CLL);
  return result;
}

uint64_t sub_20A1868A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1868B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A1868B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1868BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.RequestType.DataTransferCodingKeys()
{
  return &type metadata for MobileDocumentReaderRequest.Document.RequestType.DataTransferCodingKeys;
}

uint64_t _s7CoreIDV27MobileDocumentReaderRequestV8DocumentV11RequestTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A186924 + 4 * byte_20A1B4B19[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A186958 + 4 * byte_20A1B4B14[v4]))();
}

uint64_t sub_20A186958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A186960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A186968);
  return result;
}

uint64_t sub_20A186974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A18697CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A186980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A186988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderRequest.Document.RequestType.ValidatedDataTransferCodingKeys()
{
  return &type metadata for MobileDocumentReaderRequest.Document.RequestType.ValidatedDataTransferCodingKeys;
}

unint64_t sub_20A1869A8()
{
  unint64_t result;

  result = qword_2545DA420;
  if (!qword_2545DA420)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4FC0, &type metadata for MobileDocumentReaderRequest.Document.RequestType.ValidatedDataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA420);
  }
  return result;
}

unint64_t sub_20A1869F0()
{
  unint64_t result;

  result = qword_2545DA428;
  if (!qword_2545DA428)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5078, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA428);
  }
  return result;
}

unint64_t sub_20A186A38()
{
  unint64_t result;

  result = qword_2545DA430;
  if (!qword_2545DA430)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5130, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DisplayOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA430);
  }
  return result;
}

unint64_t sub_20A186A80()
{
  unint64_t result;

  result = qword_2545DA438;
  if (!qword_2545DA438)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B51E8, &type metadata for MobileDocumentReaderRequest.Document.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA438);
  }
  return result;
}

unint64_t sub_20A186AC8()
{
  unint64_t result;

  result = qword_2545DA440;
  if (!qword_2545DA440)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B52A0, &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA440);
  }
  return result;
}

unint64_t sub_20A186B10()
{
  unint64_t result;

  result = qword_2545DA448;
  if (!qword_2545DA448)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5358, &type metadata for MobileDocumentReaderRequest.Document.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA448);
  }
  return result;
}

unint64_t sub_20A186B58()
{
  unint64_t result;

  result = qword_2545DA450;
  if (!qword_2545DA450)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5410, &type metadata for MobileDocumentReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA450);
  }
  return result;
}

unint64_t sub_20A186BA0()
{
  unint64_t result;

  result = qword_2545DA458;
  if (!qword_2545DA458)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5380, &type metadata for MobileDocumentReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA458);
  }
  return result;
}

unint64_t sub_20A186BE8()
{
  unint64_t result;

  result = qword_2545DA460;
  if (!qword_2545DA460)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B53A8, &type metadata for MobileDocumentReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA460);
  }
  return result;
}

unint64_t sub_20A186C30()
{
  unint64_t result;

  result = qword_2545DA468;
  if (!qword_2545DA468)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B52C8, &type metadata for MobileDocumentReaderRequest.Document.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA468);
  }
  return result;
}

unint64_t sub_20A186C78()
{
  unint64_t result;

  result = qword_2545DA470;
  if (!qword_2545DA470)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B52F0, &type metadata for MobileDocumentReaderRequest.Document.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA470);
  }
  return result;
}

unint64_t sub_20A186CC0()
{
  unint64_t result;

  result = qword_2545DA478;
  if (!qword_2545DA478)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5210, &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA478);
  }
  return result;
}

unint64_t sub_20A186D08()
{
  unint64_t result;

  result = qword_2545DA480;
  if (!qword_2545DA480)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5238, &type metadata for MobileDocumentReaderRequest.Document.ValidationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA480);
  }
  return result;
}

unint64_t sub_20A186D50()
{
  unint64_t result;

  result = qword_2545DA488;
  if (!qword_2545DA488)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B50A0, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DisplayOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA488);
  }
  return result;
}

unint64_t sub_20A186D98()
{
  unint64_t result;

  result = qword_2545DA490;
  if (!qword_2545DA490)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B50C8, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DisplayOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA490);
  }
  return result;
}

unint64_t sub_20A186DE0()
{
  unint64_t result;

  result = qword_2545DA498;
  if (!qword_2545DA498)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4FE8, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA498);
  }
  return result;
}

unint64_t sub_20A186E28()
{
  unint64_t result;

  result = qword_2545DA4A0;
  if (!qword_2545DA4A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5010, &type metadata for MobileDocumentReaderRequest.Document.RequestType.DataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4A0);
  }
  return result;
}

unint64_t sub_20A186E70()
{
  unint64_t result;

  result = qword_2545DA4A8;
  if (!qword_2545DA4A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4F30, &type metadata for MobileDocumentReaderRequest.Document.RequestType.ValidatedDataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4A8);
  }
  return result;
}

unint64_t sub_20A186EB8()
{
  unint64_t result;

  result = qword_2545DA4B0;
  if (!qword_2545DA4B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B4F58, &type metadata for MobileDocumentReaderRequest.Document.RequestType.ValidatedDataTransferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4B0);
  }
  return result;
}

unint64_t sub_20A186F00()
{
  unint64_t result;

  result = qword_2545DA4B8;
  if (!qword_2545DA4B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5158, &type metadata for MobileDocumentReaderRequest.Document.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4B8);
  }
  return result;
}

unint64_t sub_20A186F48()
{
  unint64_t result;

  result = qword_2545DA4C0;
  if (!qword_2545DA4C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5180, &type metadata for MobileDocumentReaderRequest.Document.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4C0);
  }
  return result;
}

uint64_t sub_20A186F8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4F79616C70736964 && a2 == 0xEB00000000796C6ELL;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E61725461746164 && a2 == 0xEC00000072656673 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020A1BE170)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A18710C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E696E6961746572 && a2 == 0xE900000000000067;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6961746552746F6ELL && a2 == 0xEC000000676E696ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A187220(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E696E6961746572 && a2 == 0xE900000000000067;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6961746552746F6ELL && a2 == 0xEC000000676E696ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BE190)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A187394(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000022 && a2 == 0x800000020A1BE1B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000020A1BE1E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A18747C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A187574(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC850 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

BOOL static IdentityDocumentPresentmentSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IdentityDocumentPresentmentSource.hash(into:)()
{
  return sub_20A1A9318();
}

uint64_t sub_20A1876A4()
{
  sub_20A187A44();
  return sub_20A1A9360();
}

uint64_t sub_20A1876CC()
{
  sub_20A187A44();
  return sub_20A1A936C();
}

uint64_t sub_20A1876F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x726564616572;
  else
    return 7368801;
}

uint64_t sub_20A187724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A18818C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A187748()
{
  sub_20A1879BC();
  return sub_20A1A9360();
}

uint64_t sub_20A187770()
{
  sub_20A1879BC();
  return sub_20A1A936C();
}

uint64_t sub_20A187798()
{
  sub_20A187A00();
  return sub_20A1A9360();
}

uint64_t sub_20A1877C0()
{
  sub_20A187A00();
  return sub_20A1A936C();
}

uint64_t IdentityDocumentPresentmentSource.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA4C8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA4D0);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA4D8);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1879BC();
  sub_20A1A9354();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_20A187A00();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_20A187A44();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_20A1879BC()
{
  unint64_t result;

  result = qword_2545DA4E0;
  if (!qword_2545DA4E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5A0C, &type metadata for IdentityDocumentPresentmentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4E0);
  }
  return result;
}

unint64_t sub_20A187A00()
{
  unint64_t result;

  result = qword_2545DA4E8;
  if (!qword_2545DA4E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B59BC, &type metadata for IdentityDocumentPresentmentSource.ReaderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4E8);
  }
  return result;
}

unint64_t sub_20A187A44()
{
  unint64_t result;

  result = qword_2545DA4F0;
  if (!qword_2545DA4F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B596C, &type metadata for IdentityDocumentPresentmentSource.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA4F0);
  }
  return result;
}

uint64_t IdentityDocumentPresentmentSource.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t IdentityDocumentPresentmentSource.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA4F8);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA500);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA508);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1879BC();
  v11 = v33;
  sub_20A1A9348();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_20A1A91C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_20A1A90B4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v21 = &type metadata for IdentityDocumentPresentmentSource;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_20A187A00();
    sub_20A1A9150();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_20A187A44();
    v22 = v6;
    sub_20A1A9150();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_20A187E24@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return IdentityDocumentPresentmentSource.init(from:)(a1, a2);
}

uint64_t sub_20A187E38(_QWORD *a1)
{
  return IdentityDocumentPresentmentSource.encode(to:)(a1);
}

unint64_t sub_20A187E50()
{
  unint64_t result;

  result = qword_2545DA510;
  if (!qword_2545DA510)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentPresentmentSource, &type metadata for IdentityDocumentPresentmentSource);
    atomic_store(result, (unint64_t *)&qword_2545DA510);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentPresentmentSource()
{
  return &type metadata for IdentityDocumentPresentmentSource;
}

uint64_t _s7CoreIDV33IdentityDocumentPresentmentSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A187EF4 + 4 * byte_20A1B56E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A187F28 + 4 * byte_20A1B56E0[v4]))();
}

uint64_t sub_20A187F28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A187F30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A187F38);
  return result;
}

uint64_t sub_20A187F44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A187F4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A187F50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A187F58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentPresentmentSource.CodingKeys()
{
  return &type metadata for IdentityDocumentPresentmentSource.CodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentPresentmentSource.AppCodingKeys()
{
  return &type metadata for IdentityDocumentPresentmentSource.AppCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentPresentmentSource.ReaderCodingKeys()
{
  return &type metadata for IdentityDocumentPresentmentSource.ReaderCodingKeys;
}

unint64_t sub_20A187F98()
{
  unint64_t result;

  result = qword_2545DA518;
  if (!qword_2545DA518)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5944, &type metadata for IdentityDocumentPresentmentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA518);
  }
  return result;
}

unint64_t sub_20A187FE0()
{
  unint64_t result;

  result = qword_2545DA520;
  if (!qword_2545DA520)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5864, &type metadata for IdentityDocumentPresentmentSource.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA520);
  }
  return result;
}

unint64_t sub_20A188028()
{
  unint64_t result;

  result = qword_2545DA528;
  if (!qword_2545DA528)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B588C, &type metadata for IdentityDocumentPresentmentSource.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA528);
  }
  return result;
}

unint64_t sub_20A188070()
{
  unint64_t result;

  result = qword_2545DA530;
  if (!qword_2545DA530)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5814, &type metadata for IdentityDocumentPresentmentSource.ReaderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA530);
  }
  return result;
}

unint64_t sub_20A1880B8()
{
  unint64_t result;

  result = qword_2545DA538;
  if (!qword_2545DA538)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B583C, &type metadata for IdentityDocumentPresentmentSource.ReaderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA538);
  }
  return result;
}

unint64_t sub_20A188100()
{
  unint64_t result;

  result = qword_2545DA540;
  if (!qword_2545DA540)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B58B4, &type metadata for IdentityDocumentPresentmentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA540);
  }
  return result;
}

unint64_t sub_20A188148()
{
  unint64_t result;

  result = qword_2545DA548;
  if (!qword_2545DA548)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B58DC, &type metadata for IdentityDocumentPresentmentSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA548);
  }
  return result;
}

uint64_t sub_20A18818C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726564616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t AuditToken.wrapped.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v1 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v1 < 3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v1 == 3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v1 < 5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v1 == 5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v1 < 7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v1 != 7)
    return *(unsigned int *)(*(_QWORD *)v0 + 32) | ((unint64_t)*(unsigned int *)(*(_QWORD *)v0 + 36) << 32);
LABEL_17:
  __break(1u);
  return result;
}

double AuditToken.init(auditToken:)@<D0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double result;

  v5 = a4;
  v6 = a3;
  v7 = a2;
  v8 = a1;
  v10 = HIDWORD(a1);
  v11 = HIDWORD(a2);
  v12 = HIDWORD(a3);
  v13 = HIDWORD(a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB1CE0);
  v14 = swift_allocObject();
  *(_QWORD *)&result = 8;
  *(_OWORD *)(v14 + 16) = xmmword_20A1B5A60;
  *(_DWORD *)(v14 + 32) = v8;
  *(_DWORD *)(v14 + 36) = v10;
  *(_DWORD *)(v14 + 40) = v7;
  *(_DWORD *)(v14 + 44) = v11;
  *(_DWORD *)(v14 + 48) = v6;
  *(_DWORD *)(v14 + 52) = v12;
  *(_DWORD *)(v14 + 56) = v5;
  *(_DWORD *)(v14 + 60) = v13;
  *a5 = v14;
  return result;
}

uint64_t AuditToken.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v1 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v1 < 3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v1 == 3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v1 < 5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v1 == 5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v1 < 7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v1 != 7)
  {
    type metadata accessor for audit_token_t(0);
    return sub_20A1A8DCC();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t AuditToken.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  result = sub_20A1A9318();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = v1 + 32;
    do
    {
      v4 += 4;
      result = sub_20A1A9330();
      --v3;
    }
    while (v3);
  }
  return result;
}

BOOL static AuditToken.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_20A126CAC(*a1, *a2);
}

uint64_t sub_20A188470()
{
  return 0x6E656E6F706D6F63;
}

uint64_t sub_20A18848C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A18852C()
{
  sub_20A18869C();
  return sub_20A1A9360();
}

uint64_t sub_20A188554()
{
  sub_20A18869C();
  return sub_20A1A936C();
}

uint64_t AuditToken.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA550);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A18869C();
  sub_20A1A9354();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA560);
  sub_20A188924(&qword_2545DA568, MEMORY[0x24BEE44F8], MEMORY[0x24BEE12A0]);
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A18869C()
{
  unint64_t result;

  result = qword_2545DA558;
  if (!qword_2545DA558)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5C30, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA558);
  }
  return result;
}

uint64_t AuditToken.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_20A1A930C();
  sub_20A1A9318();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 4;
      sub_20A1A9330();
      --v2;
    }
    while (v2);
  }
  return sub_20A1A933C();
}

uint64_t AuditToken.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA570);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A18869C();
  sub_20A1A9348();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA560);
    sub_20A188924(&qword_2545DA578, MEMORY[0x24BEE4520], MEMORY[0x24BEE12D0]);
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A18888C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AuditToken.init(from:)(a1, a2);
}

uint64_t sub_20A1888A0(_QWORD *a1)
{
  return AuditToken.encode(to:)(a1);
}

uint64_t sub_20A1888BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_20A1A930C();
  v2 = *(_QWORD *)(v1 + 16);
  sub_20A1A9318();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 4;
      sub_20A1A9330();
      --v2;
    }
    while (v2);
  }
  return sub_20A1A933C();
}

uint64_t sub_20A188924(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545DA560);
    v8 = a2;
    result = MEMORY[0x20BD21434](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A188988()
{
  unint64_t result;

  result = qword_2545DA580;
  if (!qword_2545DA580)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_2545DA580);
  }
  return result;
}

BOOL sub_20A1889D0(uint64_t *a1, uint64_t *a2)
{
  return sub_20A126CAC(*a1, *a2);
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

uint64_t storeEnumTagSinglePayload for AuditToken.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A188A2C + 4 * byte_20A1B5A70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A188A4C + 4 * byte_20A1B5A75[v4]))();
}

_BYTE *sub_20A188A2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A188A4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A188A54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A188A5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A188A64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A188A6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AuditToken.CodingKeys()
{
  return &type metadata for AuditToken.CodingKeys;
}

unint64_t sub_20A188A8C()
{
  unint64_t result;

  result = qword_2545DA588;
  if (!qword_2545DA588)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5C08, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA588);
  }
  return result;
}

unint64_t sub_20A188AD4()
{
  unint64_t result;

  result = qword_2545DA590;
  if (!qword_2545DA590)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5B78, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA590);
  }
  return result;
}

unint64_t sub_20A188B1C()
{
  unint64_t result;

  result = qword_2545DA598;
  if (!qword_2545DA598)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5BA0, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA598);
  }
  return result;
}

uint64_t MobileDocumentReaderCertificateRequest.sessionIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderCertificateRequest.applicationIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderCertificateRequest.installationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MobileDocumentReaderCertificateRequest() + 24);
  return sub_20A188C24(v3, a1);
}

uint64_t type metadata accessor for MobileDocumentReaderCertificateRequest()
{
  uint64_t result;

  result = qword_2545DA5C0;
  if (!qword_2545DA5C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A188C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MobileDocumentReaderCertificateRequest.keyBlob.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MobileDocumentReaderCertificateRequest() + 28);
  v2 = *(_QWORD *)v1;
  sub_20A127ED0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MobileDocumentReaderCertificateRequest.init(sessionIdentifier:applicationIdentifier:installationIdentifier:keyBlob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  v12 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  result = sub_20A188D14(a5, (uint64_t)a8 + *(int *)(v12 + 24));
  v14 = (_QWORD *)((char *)a8 + *(int *)(v12 + 28));
  *v14 = a6;
  v14[1] = a7;
  return result;
}

uint64_t sub_20A188D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MobileDocumentReaderCertificateRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_20A1A8C70();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 24))
  {
    sub_20A1A9324();
    swift_bridgeObjectRetain();
    sub_20A1A8DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A1A9324();
  }
  v8 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  sub_20A188C24(v0 + *(int *)(v8 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_20A1A9324();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_20A1A9324();
    sub_20A1205FC(&qword_2545D8898, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_20A1A8D60();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v9 = (uint64_t *)(v0 + *(int *)(v8 + 28));
  v10 = v9[1];
  if (v10 >> 60 == 15)
    return sub_20A1A9324();
  v12 = *v9;
  sub_20A1A9324();
  sub_20A120BD8(v12, v10);
  sub_20A1A8C34();
  return sub_20A127EE4(v12, v10);
}

uint64_t sub_20A188F8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A188FC4 + 4 * byte_20A1B5C80[a1]))(0xD000000000000011, 0x800000020A1BC850);
}

uint64_t sub_20A188FC4(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_20A188FEC()
{
  return 0x626F6C4279656BLL;
}

uint64_t sub_20A189004()
{
  unsigned __int8 *v0;

  return sub_20A188F8C(*v0);
}

uint64_t sub_20A18900C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A18A5D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A189030()
{
  sub_20A189A5C();
  return sub_20A1A9360();
}

uint64_t sub_20A189058()
{
  sub_20A189A5C();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderCertificateRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA5A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A189A5C();
  sub_20A1A9354();
  LOBYTE(v12) = 0;
  sub_20A1A9204();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_20A1A91E0();
    v9 = type metadata accessor for MobileDocumentReaderCertificateRequest();
    LOBYTE(v12) = 2;
    sub_20A1A8C70();
    sub_20A1205FC(&qword_2545D9C28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_20A1A91F8();
    v12 = *(_OWORD *)(v3 + *(int *)(v9 + 28));
    v11[15] = 3;
    sub_20A1275D8();
    sub_20A1A91F8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDocumentReaderCertificateRequest.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentReaderCertificateRequest.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderCertificateRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v22;
  char v23;

  v18 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  MEMORY[0x24BDAC7A8](v3);
  v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA5B0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A189A5C();
  v11 = (uint64_t)v21;
  sub_20A1A9348();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = a1;
  v12 = v5;
  LOBYTE(v22) = 0;
  v13 = (uint64_t)v19;
  v14 = v20;
  *v10 = sub_20A1A918C();
  v10[1] = v15;
  LOBYTE(v22) = 1;
  v10[2] = sub_20A1A9168();
  v10[3] = v16;
  sub_20A1A8C70();
  LOBYTE(v22) = 2;
  sub_20A1205FC(&qword_2545D9C38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_20A1A9180();
  sub_20A188D14(v13, (uint64_t)v10 + *(int *)(v8 + 24));
  v23 = 3;
  sub_20A127940();
  sub_20A1A9180();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
  *(_OWORD *)((char *)v10 + *(int *)(v8 + 28)) = v22;
  sub_20A189AA0((uint64_t)v10, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_20A189AE4((uint64_t)v10);
}

uint64_t sub_20A189594@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderCertificateRequest.init(from:)(a1, a2);
}

uint64_t sub_20A1895A8(_QWORD *a1)
{
  return MobileDocumentReaderCertificateRequest.encode(to:)(a1);
}

uint64_t sub_20A1895BC()
{
  sub_20A1A930C();
  MobileDocumentReaderCertificateRequest.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A1895FC()
{
  sub_20A1A930C();
  MobileDocumentReaderCertificateRequest.hash(into:)();
  return sub_20A1A933C();
}

BOOL _s7CoreIDV38MobileDocumentReaderCertificateRequestV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  char *v39;
  uint64_t v40;

  v4 = sub_20A1A8C70();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA5E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v39 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - v18;
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_20A1A9258(), result = 0, (v20 & 1) != 0))
  {
    v22 = a1[3];
    v23 = a2[3];
    if (v22)
    {
      if (!v23)
        return 0;
      if (a1[2] != a2[2] || v22 != v23)
      {
        v24 = sub_20A1A9258();
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    v39 = v7;
    v25 = type metadata accessor for MobileDocumentReaderCertificateRequest();
    sub_20A188C24((uint64_t)a1 + *(int *)(v25 + 24), (uint64_t)v19);
    v40 = v25;
    sub_20A188C24((uint64_t)a2 + *(int *)(v25 + 24), (uint64_t)v17);
    v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_20A188C24((uint64_t)v19, (uint64_t)v10);
    sub_20A188C24((uint64_t)v17, v26);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v27((uint64_t)v10, 1, v4) == 1)
    {
      sub_20A127E0C((uint64_t)v17, &qword_2545D9B88);
      sub_20A127E0C((uint64_t)v19, &qword_2545D9B88);
      if (v27(v26, 1, v4) == 1)
      {
        sub_20A127E0C((uint64_t)v10, &qword_2545D9B88);
LABEL_18:
        v31 = *(int *)(v40 + 28);
        v32 = *(_QWORD *)((char *)a1 + v31);
        v33 = *(_QWORD *)((char *)a1 + v31 + 8);
        v34 = (_QWORD *)((char *)a2 + v31);
        v35 = *v34;
        v36 = v34[1];
        if (v33 >> 60 == 15)
        {
          if (v36 >> 60 == 15)
            return 1;
          goto LABEL_22;
        }
        if (v36 >> 60 == 15)
        {
LABEL_22:
          sub_20A127ED0(v32, v33);
          sub_20A127ED0(v35, v36);
          sub_20A127EE4(v32, v33);
          sub_20A127EE4(v35, v36);
          return 0;
        }
        sub_20A127ED0(v32, v33);
        sub_20A127ED0(v35, v36);
        sub_20A1692C0(v32, v33);
        v38 = v37;
        sub_20A127EE4(v35, v36);
        sub_20A127EE4(v32, v33);
        return (v38 & 1) != 0;
      }
    }
    else
    {
      sub_20A188C24((uint64_t)v10, (uint64_t)v14);
      if (v27(v26, 1, v4) != 1)
      {
        v28 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v39, v26, v4);
        sub_20A1205FC(&qword_2545DA5F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v29 = sub_20A1A8D78();
        v30 = *(void (**)(char *, uint64_t))(v5 + 8);
        v30(v28, v4);
        sub_20A127E0C((uint64_t)v17, &qword_2545D9B88);
        sub_20A127E0C((uint64_t)v19, &qword_2545D9B88);
        v30(v14, v4);
        sub_20A127E0C((uint64_t)v10, &qword_2545D9B88);
        if ((v29 & 1) == 0)
          return 0;
        goto LABEL_18;
      }
      sub_20A127E0C((uint64_t)v17, &qword_2545D9B88);
      sub_20A127E0C((uint64_t)v19, &qword_2545D9B88);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_20A127E0C((uint64_t)v10, &qword_2545DA5E8);
    return 0;
  }
  return result;
}

unint64_t sub_20A189A5C()
{
  unint64_t result;

  result = qword_2545DA5A8;
  if (!qword_2545DA5A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5EA4, &type metadata for MobileDocumentReaderCertificateRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA5A8);
  }
  return result;
}

uint64_t sub_20A189AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A189AE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A189B20()
{
  return sub_20A1205FC(&qword_2545DA5B8, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderCertificateRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderCertificateRequest);
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderCertificateRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_20A1A8C70();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 28);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 1);
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    else
    {
      v21 = *(_QWORD *)v19;
      sub_20A120BD8(*(_QWORD *)v19, *((_QWORD *)v19 + 1));
      *(_QWORD *)v18 = v21;
      *((_QWORD *)v18 + 1) = v20;
    }
  }
  return v4;
}

uint64_t destroy for MobileDocumentReaderCertificateRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  unint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20A1A8C70();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  v9 = v8[1];
  if (v9 >> 60 != 15)
    return sub_20A120E74(*v8, v9);
  return result;
}

_QWORD *initializeWithCopy for MobileDocumentReaderCertificateRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20A1A8C70();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_QWORD *)v17 + 1);
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  else
  {
    v19 = *(_QWORD *)v17;
    sub_20A120BD8(*(_QWORD *)v17, *((_QWORD *)v17 + 1));
    *(_QWORD *)v16 = v19;
    *((_QWORD *)v16 + 1) = v18;
  }
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderCertificateRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8C70();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = *(_QWORD *)((char *)a2 + v15 + 8);
  if (*(_QWORD *)((char *)a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      v20 = *v17;
      sub_20A120BD8(v20, v18);
      v21 = *v16;
      v22 = v16[1];
      *v16 = v20;
      v16[1] = v18;
      sub_20A120E74(v21, v22);
      return a1;
    }
    sub_20A122530((uint64_t)v16);
    goto LABEL_12;
  }
  if (v18 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    return a1;
  }
  v19 = *v17;
  sub_20A120BD8(v19, v18);
  *v16 = v19;
  v16[1] = v18;
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderCertificateRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8C70();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for MobileDocumentReaderCertificateRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20A1A8C70();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a1 + v17 + 8);
  if (v20 >> 60 != 15)
  {
    v21 = v19[1];
    if (v21 >> 60 != 15)
    {
      v22 = *v18;
      *v18 = *v19;
      v18[1] = v21;
      sub_20A120E74(v22, v20);
      return a1;
    }
    sub_20A122530((uint64_t)v18);
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderCertificateRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A18A2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderCertificateRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A18A338(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_20A18A3B0()
{
  unint64_t v0;

  sub_20A16C4CC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderCertificateRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A18A480 + 4 * byte_20A1B5C89[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A18A4B4 + 4 * byte_20A1B5C84[v4]))();
}

uint64_t sub_20A18A4B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A18A4BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A18A4C4);
  return result;
}

uint64_t sub_20A18A4D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A18A4D8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A18A4DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A18A4E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderCertificateRequest.CodingKeys()
{
  return &type metadata for MobileDocumentReaderCertificateRequest.CodingKeys;
}

unint64_t sub_20A18A504()
{
  unint64_t result;

  result = qword_2545DA5D0;
  if (!qword_2545DA5D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5E7C, &type metadata for MobileDocumentReaderCertificateRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA5D0);
  }
  return result;
}

unint64_t sub_20A18A54C()
{
  unint64_t result;

  result = qword_2545DA5D8;
  if (!qword_2545DA5D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5DEC, &type metadata for MobileDocumentReaderCertificateRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA5D8);
  }
  return result;
}

unint64_t sub_20A18A594()
{
  unint64_t result;

  result = qword_2545DA5E0;
  if (!qword_2545DA5E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B5E14, &type metadata for MobileDocumentReaderCertificateRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA5E0);
  }
  return result;
}

uint64_t sub_20A18A5D8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC850 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020A1BDD80 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BDDA0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x626F6C4279656BLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t MobileDocumentElement.Element.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A18A7CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A18A804 + 4 * byte_20A1B5F00[a1]))(0x6D614E6E65766967, 0xE900000000000065);
}

uint64_t sub_20A18A804()
{
  return 0x614E796C696D6166;
}

uint64_t sub_20A18A820()
{
  return 7890291;
}

uint64_t sub_20A18A830()
{
  return 0x7469617274726F70;
}

uint64_t sub_20A18A848()
{
  return 6645601;
}

uint64_t sub_20A18A858()
{
  return 0x61654C7441656761;
}

uint64_t sub_20A18A878()
{
  return 0x6942664F65746164;
}

uint64_t sub_20A18A898()
{
  return 0x73736572646461;
}

uint64_t sub_20A18A8B0()
{
  return 0x6C616E6F6974616ELL;
}

unint64_t sub_20A18A8D0()
{
  return 0xD000000000000010;
}

uint64_t sub_20A18A970()
{
  sub_20A18D100();
  return sub_20A1A9360();
}

uint64_t sub_20A18A998()
{
  sub_20A18D100();
  return sub_20A1A936C();
}

uint64_t sub_20A18A9C0()
{
  sub_20A18D188();
  return sub_20A1A9360();
}

uint64_t sub_20A18A9E8()
{
  sub_20A18D188();
  return sub_20A1A936C();
}

uint64_t sub_20A18AA10()
{
  sub_20A18D1CC();
  return sub_20A1A9360();
}

uint64_t sub_20A18AA38()
{
  sub_20A18D1CC();
  return sub_20A1A936C();
}

uint64_t sub_20A18AA60()
{
  unsigned __int8 *v0;

  return sub_20A18A7CC(*v0);
}

uint64_t sub_20A18AA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A18E288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A18AA8C()
{
  sub_20A18CEE0();
  return sub_20A1A9360();
}

uint64_t sub_20A18AAB4()
{
  sub_20A18CEE0();
  return sub_20A1A936C();
}

uint64_t sub_20A18AADC()
{
  sub_20A18D144();
  return sub_20A1A9360();
}

uint64_t sub_20A18AB04()
{
  sub_20A18D144();
  return sub_20A1A936C();
}

uint64_t sub_20A18AB2C()
{
  sub_20A18CFF0();
  return sub_20A1A9360();
}

uint64_t sub_20A18AB54()
{
  sub_20A18CFF0();
  return sub_20A1A936C();
}

uint64_t sub_20A18AB7C()
{
  sub_20A18CF24();
  return sub_20A1A9360();
}

uint64_t sub_20A18ABA4()
{
  sub_20A18CF24();
  return sub_20A1A936C();
}

uint64_t sub_20A18ABCC()
{
  sub_20A18CF68();
  return sub_20A1A9360();
}

uint64_t sub_20A18ABF4()
{
  sub_20A18CF68();
  return sub_20A1A936C();
}

uint64_t sub_20A18AC1C()
{
  sub_20A18CFAC();
  return sub_20A1A9360();
}

uint64_t sub_20A18AC44()
{
  sub_20A18CFAC();
  return sub_20A1A936C();
}

uint64_t sub_20A18AC6C()
{
  sub_20A18D034();
  return sub_20A1A9360();
}

uint64_t sub_20A18AC94()
{
  sub_20A18D034();
  return sub_20A1A936C();
}

uint64_t sub_20A18ACBC()
{
  sub_20A18D298();
  return sub_20A1A9360();
}

uint64_t sub_20A18ACE4()
{
  sub_20A18D298();
  return sub_20A1A936C();
}

uint64_t sub_20A18AD0C()
{
  sub_20A18D2DC();
  return sub_20A1A9360();
}

uint64_t sub_20A18AD34()
{
  sub_20A18D2DC();
  return sub_20A1A936C();
}

uint64_t sub_20A18AD5C()
{
  sub_20A18D078();
  return sub_20A1A9360();
}

uint64_t sub_20A18AD84()
{
  sub_20A18D078();
  return sub_20A1A936C();
}

uint64_t sub_20A18ADAC()
{
  sub_20A18D0BC();
  return sub_20A1A9360();
}

uint64_t sub_20A18ADD4()
{
  sub_20A18D0BC();
  return sub_20A1A936C();
}

uint64_t sub_20A18ADFC()
{
  sub_20A18D210();
  return sub_20A1A9360();
}

uint64_t sub_20A18AE24()
{
  sub_20A18D210();
  return sub_20A1A936C();
}

uint64_t sub_20A18AE4C()
{
  sub_20A18D254();
  return sub_20A1A9360();
}

uint64_t sub_20A18AE74()
{
  sub_20A18D254();
  return sub_20A1A936C();
}

uint64_t MobileDocumentElement.Element.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  _QWORD v34[3];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA5F8);
  v73 = *(_QWORD *)(v3 - 8);
  v74 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA600);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v69 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA608);
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA610);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA618);
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA620);
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA628);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA630);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA638);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA640);
  v75 = *(_QWORD *)(v18 - 8);
  v76 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA648);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA650);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA658);
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v39 = (char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA660);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v36 = (char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA668);
  v34[2] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34[1] = (char *)v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA670);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *v1;
  v31 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A18CEE0();
  sub_20A1A9354();
  if (v31 == 1)
    __asm { BR              X9 }
  v77 = 5;
  sub_20A18D188();
  sub_20A1A91D4();
  v32 = v76;
  sub_20A1A921C();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v20, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t MobileDocumentElement.Element.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentElement.Element.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentElement.Element.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD v34[6];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;

  v70 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA6F8);
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v75 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA700);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v74 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA708);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v69 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA710);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v68 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA718);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v67 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA720);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v66 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA728);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v62 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA730);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v73 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA738);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v64 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA740);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v65 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA748);
  v40 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v63 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA750);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v61 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA758);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v71 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA760);
  v34[5] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA768);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA770);
  v23 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v25 = (char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_20A18CEE0();
  v27 = v78;
  sub_20A1A9348();
  if (!v27)
  {
    v34[2] = v22;
    v34[1] = v20;
    v34[3] = v18;
    v34[4] = 0;
    v78 = v23;
    v28 = sub_20A1A91C8();
    if (*(_QWORD *)(v28 + 16) == 1)
      __asm { BR              X10 }
    v29 = sub_20A1A90B4();
    swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v31 = &type metadata for MobileDocumentElement.Element;
    v32 = v76;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26D0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v25, v32);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
}

void sub_20A18BF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 94) = 1;
  sub_20A18D298();
  v3 = *(_QWORD *)(v2 - 472);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 456) + 8))(v3, *(_QWORD *)(v2 - 448));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    JUMPOUT(0x20A18BFB8);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18BFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 93) = 2;
  sub_20A18D254();
  v4 = *(_QWORD *)(v3 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 440) + 8))(v1, *(_QWORD *)(v3 - 432));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v2, v0);
    v5 = *(_QWORD *)(v3 - 168);
    *(_QWORD *)v5 = 2;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 92) = 3;
  sub_20A18D210();
  v3 = *(_QWORD *)(v2 - 240);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 424) + 8))(v3, *(_QWORD *)(v2 - 416));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    v5 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)v5 = 3;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 - 91) = 4;
  sub_20A18D1CC();
  v4 = *(_QWORD *)(v3 - 224);
  v5 = *(_QWORD *)(v3 - 464);
  sub_20A1A9150();
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 408) + 8))(v4, v1);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v2, v0);
    v6 = *(_QWORD *)(v3 - 168);
    *(_QWORD *)v6 = 4;
    *(_BYTE *)(v6 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v2 - 90) = 5;
  sub_20A18D188();
  v3 = *(_QWORD *)(v2 - 208);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (v4)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x20A18BF00);
  }
  v5 = *(_QWORD *)(v2 - 376);
  sub_20A1A91A4();
  v6 = *(_QWORD *)(v2 - 104);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 392) + 8))(v3, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  JUMPOUT(0x20A18C73CLL);
}

void sub_20A18C1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 89) = 6;
  sub_20A18D144();
  v3 = *(_QWORD *)(v2 - 216);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 400) + 8))(v3, *(_QWORD *)(v2 - 384));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    v5 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)v5 = 5;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 72) = 7;
  sub_20A18D100();
  v4 = *(_QWORD *)(v3 - 464);
  sub_20A1A9150();
  if (v4)
    JUMPOUT(0x20A18C288);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 368) + 8))(v1, *(_QWORD *)(v3 - 360));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v2, v0);
  v5 = *(_QWORD *)(v3 - 168);
  *(_QWORD *)v5 = 6;
  *(_BYTE *)(v5 + 8) = 1;
  JUMPOUT(0x20A18BF08);
}

void sub_20A18C2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 71) = 8;
  sub_20A18D0BC();
  v3 = *(_QWORD *)(v2 - 232);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 352) + 8))(v3, *(_QWORD *)(v2 - 344));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    v5 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)v5 = 7;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 70) = 9;
  sub_20A18D078();
  v3 = *(_QWORD *)(v2 - 200);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 336) + 8))(v3, *(_QWORD *)(v2 - 328));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    v5 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)v5 = 8;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 69) = 10;
  sub_20A18D034();
  v3 = *(_QWORD *)(v2 - 192);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 320) + 8))(v3, *(_QWORD *)(v2 - 312));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    v5 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)v5 = 9;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 68) = 11;
  sub_20A18CFF0();
  v3 = *(_QWORD *)(v2 - 184);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 304) + 8))(v3, *(_QWORD *)(v2 - 296));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    v5 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)v5 = 10;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 67) = 12;
  sub_20A18CFAC();
  v3 = *(_QWORD *)(v2 - 176);
  v4 = *(_QWORD *)(v2 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 288) + 8))(v3, *(_QWORD *)(v2 - 280));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
    v5 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)v5 = 11;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 66) = 13;
  sub_20A18CF68();
  v4 = *(_QWORD *)(v3 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 272) + 8))(v1, *(_QWORD *)(v3 - 264));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v2, v0);
    v5 = *(_QWORD *)(v3 - 168);
    *(_QWORD *)v5 = 12;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

void sub_20A18C5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 14;
  sub_20A18CF24();
  v4 = *(_QWORD *)(v3 - 464);
  sub_20A1A9150();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 256) + 8))(v1, *(_QWORD *)(v3 - 248));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v2, v0);
    v5 = *(_QWORD *)(v3 - 168);
    *(_QWORD *)v5 = 13;
    *(_BYTE *)(v5 + 8) = 1;
    JUMPOUT(0x20A18BF08);
  }
  JUMPOUT(0x20A18BEE8);
}

uint64_t sub_20A18C750@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentElement.Element.init(from:)(a1, a2);
}

uint64_t sub_20A18C764(_QWORD *a1)
{
  return MobileDocumentElement.Element.encode(to:)(a1);
}

uint64_t sub_20A18C778()
{
  sub_20A1A930C();
  MobileDocumentElement.Element.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A18C7CC()
{
  sub_20A1A930C();
  MobileDocumentElement.Element.hash(into:)();
  return sub_20A1A933C();
}

void MobileDocumentElement.storage.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MobileDocumentElement.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A18C880()
{
  sub_20A18D448();
  return sub_20A1A9360();
}

uint64_t sub_20A18C8A8()
{
  sub_20A18D448();
  return sub_20A1A936C();
}

uint64_t MobileDocumentElement.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA778);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A18D448();
  sub_20A1A9354();
  v10 = v7;
  v11 = v8;
  sub_20A18D48C();
  sub_20A1A9228();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentElement.hashValue.getter()
{
  sub_20A1A930C();
  MobileDocumentElement.Element.hash(into:)();
  return sub_20A1A933C();
}

uint64_t MobileDocumentElement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA790);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A18D448();
  sub_20A1A9348();
  if (!v2)
  {
    sub_20A18D4D0();
    sub_20A1A91B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A18CB50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentElement.init(from:)(a1, a2);
}

uint64_t sub_20A18CB64(_QWORD *a1)
{
  return MobileDocumentElement.encode(to:)(a1);
}

uint64_t sub_20A18CB78()
{
  sub_20A1A930C();
  MobileDocumentElement.Element.hash(into:)();
  return sub_20A1A933C();
}

uint64_t sub_20A18CBC8()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_20A1A9318();
  return sub_20A1A9318();
}

uint64_t sub_20A18CC14()
{
  sub_20A1A930C();
  MobileDocumentElement.Element.hash(into:)();
  return sub_20A1A933C();
}

void static MobileDocumentElement.givenName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.familyName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.sex.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 2;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.portrait.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.age.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 4;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.dateOfBirth.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.address.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 6;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.nationality.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 7;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.issuingAuthority.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 8;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.drivingPrivileges.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 9;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.documentDHSComplianceStatus.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 10;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.documentNumber.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 11;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.documentIssueDate.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 12;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDocumentElement.documentExpirationDate.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 13;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static MobileDocumentElement.ageAtLeast(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t _s7CoreIDV21MobileDocumentElementV0E0O2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_20A18CDB0 + 4 * byte_20A1B5F3C[v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(_QWORD *)a2;
}

uint64_t sub_20A18CDDC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 1)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CDF0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE04@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE18@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE2C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE40@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE54@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE68@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE7C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CE90@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CEA4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CEB8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 12)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

uint64_t sub_20A18CECC@<X0>(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xC)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18CDC8);
  return 1;
}

unint64_t sub_20A18CEE0()
{
  unint64_t result;

  result = qword_2545DA678;
  if (!qword_2545DA678)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6EBC, &type metadata for MobileDocumentElement.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA678);
  }
  return result;
}

unint64_t sub_20A18CF24()
{
  unint64_t result;

  result = qword_2545DA680;
  if (!qword_2545DA680)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6E6C, &type metadata for MobileDocumentElement.Element.DocumentExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA680);
  }
  return result;
}

unint64_t sub_20A18CF68()
{
  unint64_t result;

  result = qword_2545DA688;
  if (!qword_2545DA688)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6E1C, &type metadata for MobileDocumentElement.Element.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA688);
  }
  return result;
}

unint64_t sub_20A18CFAC()
{
  unint64_t result;

  result = qword_2545DA690;
  if (!qword_2545DA690)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6DCC, &type metadata for MobileDocumentElement.Element.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA690);
  }
  return result;
}

unint64_t sub_20A18CFF0()
{
  unint64_t result;

  result = qword_2545DA698;
  if (!qword_2545DA698)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6D7C, &type metadata for MobileDocumentElement.Element.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA698);
  }
  return result;
}

unint64_t sub_20A18D034()
{
  unint64_t result;

  result = qword_2545DA6A0;
  if (!qword_2545DA6A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6D2C, &type metadata for MobileDocumentElement.Element.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6A0);
  }
  return result;
}

unint64_t sub_20A18D078()
{
  unint64_t result;

  result = qword_2545DA6A8;
  if (!qword_2545DA6A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6CDC, &type metadata for MobileDocumentElement.Element.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6A8);
  }
  return result;
}

unint64_t sub_20A18D0BC()
{
  unint64_t result;

  result = qword_2545DA6B0;
  if (!qword_2545DA6B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6C8C, &type metadata for MobileDocumentElement.Element.NationalityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6B0);
  }
  return result;
}

unint64_t sub_20A18D100()
{
  unint64_t result;

  result = qword_2545DA6B8;
  if (!qword_2545DA6B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6C3C, &type metadata for MobileDocumentElement.Element.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6B8);
  }
  return result;
}

unint64_t sub_20A18D144()
{
  unint64_t result;

  result = qword_2545DA6C0;
  if (!qword_2545DA6C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6BEC, &type metadata for MobileDocumentElement.Element.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6C0);
  }
  return result;
}

unint64_t sub_20A18D188()
{
  unint64_t result;

  result = qword_2545DA6C8;
  if (!qword_2545DA6C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6B9C, &type metadata for MobileDocumentElement.Element.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6C8);
  }
  return result;
}

unint64_t sub_20A18D1CC()
{
  unint64_t result;

  result = qword_2545DA6D0;
  if (!qword_2545DA6D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6B4C, &type metadata for MobileDocumentElement.Element.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6D0);
  }
  return result;
}

unint64_t sub_20A18D210()
{
  unint64_t result;

  result = qword_2545DA6D8;
  if (!qword_2545DA6D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6AFC, &type metadata for MobileDocumentElement.Element.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6D8);
  }
  return result;
}

unint64_t sub_20A18D254()
{
  unint64_t result;

  result = qword_2545DA6E0;
  if (!qword_2545DA6E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6AAC, &type metadata for MobileDocumentElement.Element.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6E0);
  }
  return result;
}

unint64_t sub_20A18D298()
{
  unint64_t result;

  result = qword_2545DA6E8;
  if (!qword_2545DA6E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6A5C, &type metadata for MobileDocumentElement.Element.FamilyNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6E8);
  }
  return result;
}

unint64_t sub_20A18D2DC()
{
  unint64_t result;

  result = qword_2545DA6F0;
  if (!qword_2545DA6F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6A0C, &type metadata for MobileDocumentElement.Element.GivenNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA6F0);
  }
  return result;
}

uint64_t _s7CoreIDV21MobileDocumentElementV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_20A18D350 + 4 * byte_20A1B5F4A[v2]))();
  if (v2 != *(_QWORD *)a2)
    v3 = 1;
  return (v3 & 1) == 0;
}

void sub_20A18D388(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D398(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D3A8(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D3B8(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D3C8(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D3D8(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D3E8(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D3F8(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D408(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D418(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D428(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 12)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

void sub_20A18D438(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xC)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A18D36CLL);
  JUMPOUT(0x20A18D380);
}

unint64_t sub_20A18D448()
{
  unint64_t result;

  result = qword_2545DA780;
  if (!qword_2545DA780)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B69BC, &type metadata for MobileDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA780);
  }
  return result;
}

unint64_t sub_20A18D48C()
{
  unint64_t result;

  result = qword_2545DA788;
  if (!qword_2545DA788)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentElement.Element, &type metadata for MobileDocumentElement.Element);
    atomic_store(result, (unint64_t *)&qword_2545DA788);
  }
  return result;
}

unint64_t sub_20A18D4D0()
{
  unint64_t result;

  result = qword_2545DA798;
  if (!qword_2545DA798)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentElement.Element, &type metadata for MobileDocumentElement.Element);
    atomic_store(result, (unint64_t *)&qword_2545DA798);
  }
  return result;
}

unint64_t sub_20A18D518()
{
  unint64_t result;

  result = qword_2545DA7A0;
  if (!qword_2545DA7A0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentElement.Element, &type metadata for MobileDocumentElement.Element);
    atomic_store(result, (unint64_t *)&qword_2545DA7A0);
  }
  return result;
}

unint64_t sub_20A18D560()
{
  unint64_t result;

  result = qword_2545DA7A8;
  if (!qword_2545DA7A8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentElement, &type metadata for MobileDocumentElement);
    atomic_store(result, (unint64_t *)&qword_2545DA7A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElement()
{
  return &type metadata for MobileDocumentElement;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element()
{
  return &type metadata for MobileDocumentElement.Element;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.CodingKeys()
{
  return &type metadata for MobileDocumentElement.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentElement.Element.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_20A18D624 + 4 * byte_20A1B5F5D[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_20A18D658 + 4 * byte_20A1B5F58[v4]))();
}

uint64_t sub_20A18D658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A18D660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A18D668);
  return result;
}

uint64_t sub_20A18D674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A18D67CLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_20A18D680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A18D688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.CodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.GivenNameCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.GivenNameCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.FamilyNameCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.FamilyNameCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.SexCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.SexCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.PortraitCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.PortraitCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.AgeCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.AgeCodingKeys;
}

uint64_t _s7CoreIDV21MobileDocumentElementV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A18D734 + 4 * byte_20A1B5F62[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A18D754 + 4 * byte_20A1B5F67[v4]))();
}

_BYTE *sub_20A18D734(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A18D754(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A18D75C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A18D764(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A18D76C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A18D774(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.AgeAtLeastCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.AgeAtLeastCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.DateOfBirthCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.DateOfBirthCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.AddressCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.AddressCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.NationalityCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.NationalityCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.IssuingAuthorityCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.IssuingAuthorityCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.DrivingPrivilegesCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.DrivingPrivilegesCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.DocumentDHSComplianceStatusCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.DocumentDHSComplianceStatusCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.DocumentNumberCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.DocumentNumberCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.DocumentIssueDateCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.DocumentIssueDateCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElement.Element.DocumentExpirationDateCodingKeys()
{
  return &type metadata for MobileDocumentElement.Element.DocumentExpirationDateCodingKeys;
}

unint64_t sub_20A18D824()
{
  unint64_t result;

  result = qword_2545DA7B0;
  if (!qword_2545DA7B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6694, &type metadata for MobileDocumentElement.Element.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7B0);
  }
  return result;
}

unint64_t sub_20A18D86C()
{
  unint64_t result;

  result = qword_2545DA7B8;
  if (!qword_2545DA7B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B68DC, &type metadata for MobileDocumentElement.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7B8);
  }
  return result;
}

unint64_t sub_20A18D8B4()
{
  unint64_t result;

  result = qword_2545DA7C0;
  if (!qword_2545DA7C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6994, &type metadata for MobileDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7C0);
  }
  return result;
}

unint64_t sub_20A18D8FC()
{
  unint64_t result;

  result = qword_2545DA7C8;
  if (!qword_2545DA7C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6904, &type metadata for MobileDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7C8);
  }
  return result;
}

unint64_t sub_20A18D944()
{
  unint64_t result;

  result = qword_2545DA7D0;
  if (!qword_2545DA7D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B692C, &type metadata for MobileDocumentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7D0);
  }
  return result;
}

unint64_t sub_20A18D98C()
{
  unint64_t result;

  result = qword_2545DA7D8;
  if (!qword_2545DA7D8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B67FC, &type metadata for MobileDocumentElement.Element.GivenNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7D8);
  }
  return result;
}

unint64_t sub_20A18D9D4()
{
  unint64_t result;

  result = qword_2545DA7E0;
  if (!qword_2545DA7E0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6824, &type metadata for MobileDocumentElement.Element.GivenNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7E0);
  }
  return result;
}

unint64_t sub_20A18DA1C()
{
  unint64_t result;

  result = qword_2545DA7E8;
  if (!qword_2545DA7E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B67AC, &type metadata for MobileDocumentElement.Element.FamilyNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7E8);
  }
  return result;
}

unint64_t sub_20A18DA64()
{
  unint64_t result;

  result = qword_2545DA7F0;
  if (!qword_2545DA7F0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B67D4, &type metadata for MobileDocumentElement.Element.FamilyNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7F0);
  }
  return result;
}

unint64_t sub_20A18DAAC()
{
  unint64_t result;

  result = qword_2545DA7F8;
  if (!qword_2545DA7F8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B675C, &type metadata for MobileDocumentElement.Element.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA7F8);
  }
  return result;
}

unint64_t sub_20A18DAF4()
{
  unint64_t result;

  result = qword_2545DA800;
  if (!qword_2545DA800)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6784, &type metadata for MobileDocumentElement.Element.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA800);
  }
  return result;
}

unint64_t sub_20A18DB3C()
{
  unint64_t result;

  result = qword_2545DA808;
  if (!qword_2545DA808)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B670C, &type metadata for MobileDocumentElement.Element.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA808);
  }
  return result;
}

unint64_t sub_20A18DB84()
{
  unint64_t result;

  result = qword_2545DA810;
  if (!qword_2545DA810)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6734, &type metadata for MobileDocumentElement.Element.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA810);
  }
  return result;
}

unint64_t sub_20A18DBCC()
{
  unint64_t result;

  result = qword_2545DA818;
  if (!qword_2545DA818)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B66BC, &type metadata for MobileDocumentElement.Element.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA818);
  }
  return result;
}

unint64_t sub_20A18DC14()
{
  unint64_t result;

  result = qword_2545DA820;
  if (!qword_2545DA820)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B66E4, &type metadata for MobileDocumentElement.Element.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA820);
  }
  return result;
}

unint64_t sub_20A18DC5C()
{
  unint64_t result;

  result = qword_2545DA828;
  if (!qword_2545DA828)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6604, &type metadata for MobileDocumentElement.Element.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA828);
  }
  return result;
}

unint64_t sub_20A18DCA4()
{
  unint64_t result;

  result = qword_2545DA830;
  if (!qword_2545DA830)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B662C, &type metadata for MobileDocumentElement.Element.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA830);
  }
  return result;
}

unint64_t sub_20A18DCEC()
{
  unint64_t result;

  result = qword_2545DA838;
  if (!qword_2545DA838)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B65B4, &type metadata for MobileDocumentElement.Element.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA838);
  }
  return result;
}

unint64_t sub_20A18DD34()
{
  unint64_t result;

  result = qword_2545DA840;
  if (!qword_2545DA840)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B65DC, &type metadata for MobileDocumentElement.Element.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA840);
  }
  return result;
}

unint64_t sub_20A18DD7C()
{
  unint64_t result;

  result = qword_2545DA848;
  if (!qword_2545DA848)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6564, &type metadata for MobileDocumentElement.Element.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA848);
  }
  return result;
}

unint64_t sub_20A18DDC4()
{
  unint64_t result;

  result = qword_2545DA850;
  if (!qword_2545DA850)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B658C, &type metadata for MobileDocumentElement.Element.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA850);
  }
  return result;
}

unint64_t sub_20A18DE0C()
{
  unint64_t result;

  result = qword_2545DA858;
  if (!qword_2545DA858)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6514, &type metadata for MobileDocumentElement.Element.NationalityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA858);
  }
  return result;
}

unint64_t sub_20A18DE54()
{
  unint64_t result;

  result = qword_2545DA860;
  if (!qword_2545DA860)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B653C, &type metadata for MobileDocumentElement.Element.NationalityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA860);
  }
  return result;
}

unint64_t sub_20A18DE9C()
{
  unint64_t result;

  result = qword_2545DA868;
  if (!qword_2545DA868)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B64C4, &type metadata for MobileDocumentElement.Element.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA868);
  }
  return result;
}

unint64_t sub_20A18DEE4()
{
  unint64_t result;

  result = qword_2545DA870;
  if (!qword_2545DA870)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B64EC, &type metadata for MobileDocumentElement.Element.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA870);
  }
  return result;
}

unint64_t sub_20A18DF2C()
{
  unint64_t result;

  result = qword_2545DA878;
  if (!qword_2545DA878)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6474, &type metadata for MobileDocumentElement.Element.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA878);
  }
  return result;
}

unint64_t sub_20A18DF74()
{
  unint64_t result;

  result = qword_2545DA880;
  if (!qword_2545DA880)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B649C, &type metadata for MobileDocumentElement.Element.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA880);
  }
  return result;
}

unint64_t sub_20A18DFBC()
{
  unint64_t result;

  result = qword_2545DA888;
  if (!qword_2545DA888)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6424, &type metadata for MobileDocumentElement.Element.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA888);
  }
  return result;
}

unint64_t sub_20A18E004()
{
  unint64_t result;

  result = qword_2545DA890;
  if (!qword_2545DA890)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B644C, &type metadata for MobileDocumentElement.Element.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA890);
  }
  return result;
}

unint64_t sub_20A18E04C()
{
  unint64_t result;

  result = qword_2545DA898;
  if (!qword_2545DA898)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B63D4, &type metadata for MobileDocumentElement.Element.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA898);
  }
  return result;
}

unint64_t sub_20A18E094()
{
  unint64_t result;

  result = qword_2545DA8A0;
  if (!qword_2545DA8A0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B63FC, &type metadata for MobileDocumentElement.Element.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8A0);
  }
  return result;
}

unint64_t sub_20A18E0DC()
{
  unint64_t result;

  result = qword_2545DA8A8;
  if (!qword_2545DA8A8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6384, &type metadata for MobileDocumentElement.Element.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8A8);
  }
  return result;
}

unint64_t sub_20A18E124()
{
  unint64_t result;

  result = qword_2545DA8B0;
  if (!qword_2545DA8B0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B63AC, &type metadata for MobileDocumentElement.Element.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8B0);
  }
  return result;
}

unint64_t sub_20A18E16C()
{
  unint64_t result;

  result = qword_2545DA8B8;
  if (!qword_2545DA8B8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6334, &type metadata for MobileDocumentElement.Element.DocumentExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8B8);
  }
  return result;
}

unint64_t sub_20A18E1B4()
{
  unint64_t result;

  result = qword_2545DA8C0;
  if (!qword_2545DA8C0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B635C, &type metadata for MobileDocumentElement.Element.DocumentExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8C0);
  }
  return result;
}

unint64_t sub_20A18E1FC()
{
  unint64_t result;

  result = qword_2545DA8C8;
  if (!qword_2545DA8C8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B684C, &type metadata for MobileDocumentElement.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8C8);
  }
  return result;
}

unint64_t sub_20A18E244()
{
  unint64_t result;

  result = qword_2545DA8D0;
  if (!qword_2545DA8D0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B6874, &type metadata for MobileDocumentElement.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8D0);
  }
  return result;
}

uint64_t sub_20A18E288(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7890291 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xE800000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61654C7441656761 && a2 == 0xEA00000000007473 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C616E6F6974616ELL && a2 == 0xEB00000000797469 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BC630 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A1BC610 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE007265626D754ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC5D0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A1BC5F0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t MobileDocumentReaderConfigurationResponse.sessionIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderConfigurationResponse.sessionExpirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MobileDocumentReaderConfigurationResponse() + 20);
  v4 = sub_20A1A8C4C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MobileDocumentReaderConfigurationResponse()
{
  uint64_t result;

  result = qword_2545DA910;
  if (!qword_2545DA910)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MobileDocumentReaderConfigurationResponse.init(sessionIdentifier:sessionExpirationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for MobileDocumentReaderConfigurationResponse() + 20);
  v6 = sub_20A1A8C4C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t MobileDocumentReaderConfigurationResponse.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  type metadata accessor for MobileDocumentReaderConfigurationResponse();
  sub_20A1A8C4C();
  sub_20A1205FC(&qword_2545DA8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_20A1A8D60();
}

uint64_t static MobileDocumentReaderConfigurationResponse.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_20A1A9258() & 1) == 0)
    return 0;
  type metadata accessor for MobileDocumentReaderConfigurationResponse();
  return sub_20A1A8C40();
}

unint64_t sub_20A18EA98()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000015;
  else
    return 0xD000000000000011;
}

uint64_t sub_20A18EAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A18F8A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A18EAFC()
{
  sub_20A18ECA0();
  return sub_20A1A9360();
}

uint64_t sub_20A18EB24()
{
  sub_20A18ECA0();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderConfigurationResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA8E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A18ECA0();
  sub_20A1A9354();
  v8[15] = 0;
  sub_20A1A9204();
  if (!v1)
  {
    type metadata accessor for MobileDocumentReaderConfigurationResponse();
    v8[14] = 1;
    sub_20A1A8C4C();
    sub_20A1205FC(&qword_2545DA8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_20A1A9228();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A18ECA0()
{
  unint64_t result;

  result = qword_2545DA8E8;
  if (!qword_2545DA8E8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B716C, &type metadata for MobileDocumentReaderConfigurationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA8E8);
  }
  return result;
}

uint64_t MobileDocumentReaderConfigurationResponse.hashValue.getter()
{
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  type metadata accessor for MobileDocumentReaderConfigurationResponse();
  sub_20A1A8C4C();
  sub_20A1205FC(&qword_2545DA8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_20A1A8D60();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderConfigurationResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v22 = a2;
  v4 = sub_20A1A8C4C();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA8F8);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDocumentReaderConfigurationResponse();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A18ECA0();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v21 = v6;
  v12 = v11;
  v14 = v23;
  v13 = v24;
  v15 = v25;
  v16 = v26;
  v28 = 0;
  *v12 = sub_20A1A918C();
  v12[1] = v17;
  v27 = 1;
  sub_20A1205FC(&qword_2545DA900, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_20A1A91B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v16);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v12 + *(int *)(v9 + 20), v14, v15);
  sub_20A18F1D4((uint64_t)v12, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_20A18F218((uint64_t)v12);
}

uint64_t sub_20A18EFD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentReaderConfigurationResponse.init(from:)(a1, a2);
}

uint64_t sub_20A18EFE8(_QWORD *a1)
{
  return MobileDocumentReaderConfigurationResponse.encode(to:)(a1);
}

uint64_t sub_20A18EFFC()
{
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  sub_20A1A8C4C();
  sub_20A1205FC(&qword_2545DA8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_20A1A8D60();
  return sub_20A1A933C();
}

uint64_t sub_20A18F0A0()
{
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  sub_20A1A8C4C();
  sub_20A1205FC(&qword_2545DA8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_20A1A8D60();
}

uint64_t sub_20A18F134()
{
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  sub_20A1A8C4C();
  sub_20A1205FC(&qword_2545DA8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_20A1A8D60();
  return sub_20A1A933C();
}

uint64_t sub_20A18F1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDocumentReaderConfigurationResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A18F218(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MobileDocumentReaderConfigurationResponse();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A18F254()
{
  return sub_20A1205FC(&qword_2545DA908, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderConfigurationResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderConfigurationResponse);
}

uint64_t sub_20A18F280(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_20A1A9258() & 1) != 0)
    return sub_20A1A8C40();
  else
    return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderConfigurationResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_20A1A8C4C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for MobileDocumentReaderConfigurationResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_20A1A8C4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for MobileDocumentReaderConfigurationResponse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20A1A8C4C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderConfigurationResponse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A1A8C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for MobileDocumentReaderConfigurationResponse(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20A1A8C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for MobileDocumentReaderConfigurationResponse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A1A8C4C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderConfigurationResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A18F594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20A1A8C4C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderConfigurationResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A18F61C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_20A1A8C4C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20A18F690()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A1A8C4C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderConfigurationResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A18F750 + 4 * byte_20A1B6F85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A18F784 + 4 * byte_20A1B6F80[v4]))();
}

uint64_t sub_20A18F784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A18F78C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A18F794);
  return result;
}

uint64_t sub_20A18F7A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A18F7A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A18F7AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A18F7B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderConfigurationResponse.CodingKeys()
{
  return &type metadata for MobileDocumentReaderConfigurationResponse.CodingKeys;
}

unint64_t sub_20A18F7D4()
{
  unint64_t result;

  result = qword_2545DA920;
  if (!qword_2545DA920)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7144, &type metadata for MobileDocumentReaderConfigurationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA920);
  }
  return result;
}

unint64_t sub_20A18F81C()
{
  unint64_t result;

  result = qword_2545DA928;
  if (!qword_2545DA928)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B70B4, &type metadata for MobileDocumentReaderConfigurationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA928);
  }
  return result;
}

unint64_t sub_20A18F864()
{
  unint64_t result;

  result = qword_2545DA930;
  if (!qword_2545DA930)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B70DC, &type metadata for MobileDocumentReaderConfigurationResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DA930);
  }
  return result;
}

uint64_t sub_20A18F8A8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BC850 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020A1BE210)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A18F990(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

unint64_t static MobileDocumentReaderSession.machServiceName.getter()
{
  return 0xD00000000000002DLL;
}

void _s7CoreIDV27MobileDocumentReaderSessionC16checkIsSupportedyyAC5ErrorVYKFZ(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  int deviceClassNumber;
  Swift::Bool v6;
  _UNKNOWN **v7;
  __int128 v8;
  const char *v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _UNKNOWN **v15;
  audit_token_t_optional auditToken;

  v3 = (id)MobileGestalt_get_current_device();
  if (!v3)
  {
    __break(1u);
    return;
  }
  v4 = v3;
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  if (deviceClassNumber != 1)
  {
    v11 = xmmword_20A1B71C0;
    v12 = xmmword_20A1B71D0;
    v13 = xmmword_20A1B71C0;
    v14 = xmmword_20A1B71D0;
    v9 = "The current device is not supported.";
LABEL_9:
    v10 = (unint64_t)(v9 - 32) | 0x8000000000000000;
    v15 = (_UNKNOWN **)v10;
    sub_20A12CF7C();
    swift_willThrowTypedImpl();
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 32) = v10;
    return;
  }
  *((_QWORD *)&v14 + 1) = &type metadata for BundleRecordFetcher;
  v15 = &protocol witness table for BundleRecordFetcher;
  memset(&auditToken, 0, 32);
  auditToken.is_nil = 1;
  v6 = MobileDocumentReaderEntitlementChecker.checkPublicEntitlements(auditToken:)(&auditToken);
  sub_20A195B00((uint64_t)&v13);
  if (!v6)
  {
    v11 = xmmword_20A1B71E0;
    v12 = xmmword_20A1B71F0;
    v13 = xmmword_20A1B71E0;
    v14 = xmmword_20A1B71F0;
    v9 = "The calling app is not entitled to use this API.";
    goto LABEL_9;
  }
  sub_20A18FC34(&auditToken, (uint64_t)&v13);
  if (v1)
  {
    v7 = v15;
    v8 = v14;
    *(_OWORD *)a1 = v13;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = v7;
  }
  else
  {
    sub_20A18FD18((uint64_t)&v13);
  }
}

void _s7CoreIDV27MobileDocumentReaderSessionC24checkDeviceTypeSupportedyyAC5ErrorVYKFZ(uint64_t a1)
{
  id v2;
  void *v3;
  int deviceClassNumber;

  v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    v3 = v2;
    deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if (deviceClassNumber != 1)
    {
      *(_OWORD *)a1 = xmmword_20A1B71C0;
      *(_OWORD *)(a1 + 16) = xmmword_20A1B71D0;
      *(_QWORD *)(a1 + 32) = 0x800000020A1BE230;
      sub_20A12CF7C();
      swift_willThrowTypedImpl();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A18FC34(audit_token_t_optional *a1, uint64_t a2)
{
  uint64_t result;
  int v4;
  __int128 v5;
  __int128 v6;
  _UNKNOWN **v7;
  unsigned __int8 v8;

  *((_QWORD *)&v6 + 1) = &type metadata for BundleRecordFetcher;
  v7 = &protocol witness table for BundleRecordFetcher;
  MobileDocumentReaderEntitlementChecker.checkBundleTypeSupported(auditToken:)(a1);
  result = sub_20A195B00((uint64_t)&v5);
  v4 = v8;
  if (v8)
  {
    *(_OWORD *)a2 = xmmword_20A1B71C0;
    if (v4 == 1)
    {
      *(_OWORD *)(a2 + 16) = xmmword_20A1B7200;
      *(_QWORD *)(a2 + 32) = 0x800000020A1BE4D0;
      v5 = xmmword_20A1B71C0;
      v6 = xmmword_20A1B7200;
      v7 = (_UNKNOWN **)0x800000020A1BE4D0;
      sub_20A12CF7C();
    }
    else
    {
      *(_QWORD *)(a2 + 24) = 0;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      v5 = xmmword_20A1B71C0;
      sub_20A12CF7C();
      v7 = 0;
      v6 = 0uLL;
    }
    return swift_willThrowTypedImpl();
  }
  return result;
}

void sub_20A18FD18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t inited;
  char v10;
  _OWORD v11[2];
  unint64_t v12;

  v2 = sub_20A1A8CDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v7 = (void *)sub_20A1A8D9C();
  v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_253EB1CF0);
    inited = swift_initStackObject();
    *(_DWORD *)(inited + 24) = 0;
    *(_QWORD *)(inited + 16) = v8;
    *(_QWORD *)&v11[0] = inited;
    sub_20A1A8CD0();
    v10 = MobileDocumentReaderSupportChecker.isLocaleSupported(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_release();
    if ((v10 & 1) == 0)
    {
      *(_OWORD *)a1 = xmmword_20A1B71C0;
      *(_OWORD *)(a1 + 16) = xmmword_20A1B7210;
      *(_QWORD *)(a1 + 32) = 0x800000020A1BE4A0;
      v11[0] = xmmword_20A1B71C0;
      v11[1] = xmmword_20A1B7210;
      v12 = 0x800000020A1BE4A0;
      sub_20A12CF7C();
      swift_willThrowTypedImpl();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t MobileDocumentReaderSession.__allocating_init(auditToken:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  MobileDocumentReaderSession.init(auditToken:)(a1, a2, a3, a4);
  return v8;
}

uint64_t MobileDocumentReaderSession.init(auditToken:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Swift::Bool v14;
  void *v15;
  id v16;
  id v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  __int128 aBlock;
  __int128 v33;
  void *v34;
  uint64_t v35;
  _BYTE v36[24];
  ValueMetadata *v37;
  _UNKNOWN **v38;
  audit_token_t_optional auditToken;
  NSXPCConnection_optional v40;

  v5 = v4;
  v10 = HIDWORD(a1);
  v11 = HIDWORD(a2);
  v12 = HIDWORD(a3);
  v13 = HIDWORD(a4);
  swift_defaultActor_initialize();
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_DWORD *)(v5 + 112) = a1;
  *(_DWORD *)(v5 + 116) = v10;
  *(_DWORD *)(v5 + 120) = a2;
  *(_DWORD *)(v5 + 124) = v11;
  *(_DWORD *)(v5 + 128) = a3;
  *(_DWORD *)(v5 + 132) = v12;
  *(_DWORD *)(v5 + 136) = a4;
  *(_DWORD *)(v5 + 140) = v13;
  v37 = &type metadata for BundleRecordFetcher;
  v38 = &protocol witness table for BundleRecordFetcher;
  v40.value.super.isa = 0;
  LOBYTE(v10) = MobileDocumentReaderEntitlementChecker.checkInternalEntitlement(connection:)(v40);
  sub_20A195B34((uint64_t)v36, (uint64_t)&aBlock);
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)auditToken.value.val = a1;
    *(_QWORD *)&auditToken.value.val[2] = a2;
    *(_QWORD *)&auditToken.value.val[4] = a3;
    *(_QWORD *)&auditToken.value.val[6] = a4;
    auditToken.is_nil = 0;
    v14 = MobileDocumentReaderEntitlementChecker.checkPublicEntitlements(auditToken:)(&auditToken);
  }
  else
  {
    v14 = 0;
  }
  sub_20A195B00((uint64_t)&aBlock);
  *(_BYTE *)(v5 + 152) = v14;
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_interfaceWithProtocol_, &unk_2545FA990);
  v17 = objc_msgSend(v15, sel_interfaceWithProtocol_, &unk_2545F99F8);
  aBlock = 0u;
  v33 = 0u;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D8A58);
  swift_allocObject();
  v18 = sub_20A143830(0xD00000000000002DLL, 0x800000020A1BCB70, (uint64_t)v16, 0, 0, 0, 0, (uint64_t)v17, (uint64_t)&aBlock, (uint64_t)sub_20A190228, 0);

  *(_QWORD *)(v5 + 144) = v18;
  v19 = (void *)v18[2];
  v20 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MobileDocumentReaderDelegateProxy();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_20A195E50;
  *(_QWORD *)(v21 + 24) = v20;
  v22 = v19;
  objc_msgSend(v22, sel_setExportedObject_, v21);
  swift_release();

  v23 = *(void **)(*(_QWORD *)(v5 + 144) + 16);
  v24 = swift_allocObject();
  swift_weakInit();
  v34 = sub_20A195E58;
  v35 = v24;
  v25 = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v33 = sub_20A139EB8;
  *((_QWORD *)&v33 + 1) = &block_descriptor_3;
  v26 = _Block_copy(&aBlock);
  v27 = v23;
  swift_release();
  objc_msgSend(v27, sel_setInterruptionHandler_, v26);
  _Block_release(v26);

  v28 = *(void **)(*(_QWORD *)(v5 + 144) + 16);
  v34 = sub_20A190680;
  v35 = 0;
  *(_QWORD *)&aBlock = v25;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v33 = sub_20A139EB8;
  *((_QWORD *)&v33 + 1) = &block_descriptor_4;
  v29 = _Block_copy(&aBlock);
  v30 = v28;
  objc_msgSend(v30, sel_setInvalidationHandler_, v29);
  _Block_release(v29);

  sub_20A195B00((uint64_t)v36);
  return v5;
}

uint64_t sub_20A190228(void *a1)
{
  uint64_t v2;
  _QWORD *v3;
  id v4;

  sub_20A12CF7C();
  v2 = swift_allocError();
  *v3 = 0;
  v3[1] = 0;
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = a1;
  v4 = a1;
  return v2;
}

uint64_t sub_20A19027C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v2 = type metadata accessor for MobileDocumentReaderSession.State();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    v11 = sub_20A1A8F1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    sub_20A127E8C(a1, (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
    v12 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v10;
    sub_20A12063C((uint64_t)v5, (uint64_t)v13 + v12, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
    sub_20A167538((uint64_t)v8, (uint64_t)&unk_2545DAB60, (uint64_t)v13);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A1903E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20A1903FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 + 168);
  v0[5] = v2;
  v0[6] = *(_QWORD *)(v1 + 176);
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A190448()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 40);
  if (v1)
  {
    v1(*(_QWORD *)(v0 + 32));
    sub_20A196120((uint64_t)v1);
  }
  **(_BYTE **)(v0 + 16) = v1 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1904A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_253EB1CD0 != -1)
    swift_once();
  v3 = sub_20A1A8D3C();
  __swift_project_value_buffer(v3, (uint64_t)qword_253EB3268);
  v4 = sub_20A1A8D24();
  v5 = sub_20A1A8F94();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_20A10F000, v4, v5, "MobileDocumentReaderSession connection interrupted", v6, 2u);
    MEMORY[0x20BD214DC](v6, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    v9 = sub_20A1A8F1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    sub_20A1673EC((uint64_t)v2, (uint64_t)&unk_2545DAB50, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A190638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_20A190650()
{
  uint64_t v0;

  sub_20A19589C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20A190680()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_253EB1CD0 != -1)
    swift_once();
  v0 = sub_20A1A8D3C();
  __swift_project_value_buffer(v0, (uint64_t)qword_253EB3268);
  oslog = sub_20A1A8D24();
  v1 = sub_20A1A8F94();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_20A10F000, oslog, v1, "MobileDocumentReaderSession connection invalidated", v2, 2u);
    MEMORY[0x20BD214DC](v2, -1, -1);
  }

}

uint64_t sub_20A19074C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20A1907A8;
  return sub_20A192700((uint64_t)&unk_2545DA940, 0, 0, 0);
}

uint64_t sub_20A1907A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_20A19080C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch();
}

uint64_t sub_20A190824()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A1908B8;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A190930;
  v3[3] = &block_descriptor_177;
  v3[4] = v2;
  objc_msgSend(v1, sel_readerInstanceIdentifierWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_20A1908B8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A190918()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD **)(v0 + 136);
  *v1 = *(_QWORD *)(v0 + 120);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A190930(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_20A1A8DB4();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A1909B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_BYTE *)(v3 + 72) = *(_BYTE *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_20A1909E0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 48) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_BYTE *)(v4 + 32) = v1;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_20A190A80;
  return sub_20A1930A0(*(_QWORD *)(v0 + 16), (uint64_t)&unk_2545DA960, v4, 0, 0);
}

uint64_t sub_20A190A80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A190AF4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A190B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 192) = a5;
  *(_QWORD *)(v5 + 160) = a3;
  *(_QWORD *)(v5 + 168) = a4;
  *(_QWORD *)(v5 + 144) = a1;
  *(_QWORD *)(v5 + 152) = a2;
  return swift_task_switch();
}

uint64_t sub_20A190B48()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  objc_class *v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_BYTE *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(void **)(v0 + 152);
  v5 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderConfiguration();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value];
  *(_QWORD *)v7 = v3;
  *((_QWORD *)v7 + 1) = v2;
  v7[16] = v1;
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = v5;
  swift_bridgeObjectRetain();
  v8 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 176) = v8;
  *(_QWORD *)(v0 + 56) = v0 + 136;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A190C58;
  v9 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v10 = (_QWORD *)(v0 + 80);
  v10[1] = 0x40000000;
  v10[2] = sub_20A13A4C0;
  v10[3] = &block_descriptor_152;
  v10[4] = v9;
  objc_msgSend(v4, sel_prepareWith_completionHandler_, v8, v10);
  return swift_continuation_await();
}

uint64_t sub_20A190C58()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A190CB8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 136);
  sub_20A127E8C((uint64_t)v2 + OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, *(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A190D10()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A190D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_20A190D6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[3];
  v1 = v0[4];
  v3 = swift_allocObject();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_20A190E08;
  return sub_20A193A28(v0[2], (uint64_t)&unk_2545DA980, v3, 0, 0);
}

uint64_t sub_20A190E08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A190E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return swift_task_switch();
}

uint64_t sub_20A190E98()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[17];
  v2 = sub_20A1A8D9C();
  v0[20] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A190F48;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_20A1910BC;
  v4[3] = &block_descriptor_129;
  v4[4] = v3;
  objc_msgSend(v1, sel_merchantFor_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_20A190F48()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A190FA8()
{
  uint64_t v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v10;

  v1 = *(char **)(v0 + 120);
  v2 = *(void **)(v0 + 160);
  if (v1)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value];
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 8];
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 16];
    v10 = *(_OWORD *)&v1[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 24];
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 40];
    swift_bridgeObjectRetain();
    sub_20A127ED0(v5, v10);
    swift_bridgeObjectRetain();

    v7 = v10;
  }
  else
  {

    v4 = 0;
    v3 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0uLL;
  }
  v8 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = v3;
  *(_QWORD *)(v8 + 16) = v5;
  *(_OWORD *)(v8 + 24) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A19107C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1910BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_20A1970A4((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A19115C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderRequest(0) - 8);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 + 64);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A1911BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[6];
  v2 = v0[4];
  sub_20A127E8C(v0[2], v1, type metadata accessor for MobileDocumentReaderRequest);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  v0[7] = v4;
  sub_20A12063C(v1, v4 + v3, type metadata accessor for MobileDocumentReaderRequest);
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_20A191278;
  return sub_20A1942F4((uint64_t)v5, (uint64_t)&unk_2545DA9A0, v4, 0, 0);
}

uint64_t sub_20A191278()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_20A1912EC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A191328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = a3;
  type metadata accessor for MobileDocumentReaderRequest(0);
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A191380()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void **)(v0 + 136);
  sub_20A127E8C(*(_QWORD *)(v0 + 144), v1, type metadata accessor for MobileDocumentReaderRequest);
  v3 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderRequest(0);
  v4 = objc_allocWithZone(v3);
  sub_20A127E8C(v1, (uint64_t)v4 + OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, type metadata accessor for MobileDocumentReaderRequest);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 160) = v5;
  sub_20A124284(v1, type metadata accessor for MobileDocumentReaderRequest);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A191494;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_20A18F990;
  v7[3] = &block_descriptor_106_0;
  v7[4] = v6;
  objc_msgSend(v2, sel_canRequestDocument_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_20A191494()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A1914F4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A191530()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A19157C(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v2;
  v12 = a1;
  v13 = *a2;
  type metadata accessor for MobileDocumentReaderSession.State();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE6CA0], v5);
  return sub_20A1A8F64();
}

uint64_t sub_20A191650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v30 = a4;
  v31 = a5;
  v28 = a1;
  v29 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  v7 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MobileDocumentReaderRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_20A1A8F1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_20A127E8C(a3, (uint64_t)v13, type metadata accessor for MobileDocumentReaderRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v28, v6);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (*(unsigned __int8 *)(v7 + 80) + v19 + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = 0;
  *((_QWORD *)v21 + 3) = 0;
  *((_QWORD *)v21 + 4) = v29;
  sub_20A12063C((uint64_t)v13, (uint64_t)&v21[v18], type metadata accessor for MobileDocumentReaderRequest);
  v22 = (uint64_t *)&v21[v19];
  v24 = v30;
  v23 = v31;
  *v22 = v30;
  v22[1] = v23;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v21[v20], v9, v27);
  swift_retain();
  sub_20A127ED0(v24, v23);
  sub_20A1673EC((uint64_t)v16, (uint64_t)&unk_2545DAA90, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_20A191848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a5;
  v8[6] = a8;
  v8[3] = a7;
  v8[4] = a4;
  v8[2] = a6;
  return swift_task_switch();
}

uint64_t sub_20A191868()
{
  uint64_t v0;

  sub_20A1918A0(*(_QWORD *)(v0 + 40), (uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1918A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a1;
  v6 = type metadata accessor for MobileDocumentReaderRequest(0);
  v50 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v50 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3[23])
  {
    sub_20A12CF7C();
    v16 = swift_allocError();
    *(_OWORD *)v17 = xmmword_20A1B7220;
    *(_QWORD *)(v17 + 24) = 0;
    *(_QWORD *)(v17 + 32) = 0;
    *(_QWORD *)(v17 + 16) = 0;
    v51 = v16;
    return sub_20A1A8F58();
  }
  else
  {
    v19 = a2[1];
    v42 = *a2;
    v43 = v19;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v48((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v12);
    v46 = a3;
    v20 = *(unsigned __int8 *)(v13 + 80);
    v39 = v11;
    v40 = v20 + 16;
    v44 = ((v20 + 16) & ~v20) + v14;
    v45 = (v20 + 16) & ~v20;
    v47 = v20 | 7;
    v21 = swift_allocObject();
    v41 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    v41(v21 + ((v20 + 16) & ~v20), (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    v22 = v3[21];
    v3[21] = sub_20A1965F8;
    v3[22] = v21;
    sub_20A196120(v22);
    v23 = sub_20A1A8F1C();
    v24 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v39, 1, 1, v23);
    sub_20A127E8C(v49, (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MobileDocumentReaderRequest);
    v48((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v12);
    v26 = sub_20A196874(&qword_2545DA9E8, v25, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession);
    v27 = (*(unsigned __int8 *)(v50 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v28 = (v7 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v28 + v40) & ~v20;
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = v3;
    v30[3] = v26;
    v30[4] = v3;
    sub_20A12063C((uint64_t)v8, (uint64_t)v30 + v27, type metadata accessor for MobileDocumentReaderRequest);
    v31 = (_QWORD *)((char *)v30 + v28);
    v33 = v42;
    v32 = v43;
    *v31 = v42;
    v31[1] = v32;
    v34 = v41;
    v41((uint64_t)v30 + v29, v15, v12);
    swift_retain_n();
    sub_20A127ED0(v33, v32);
    v35 = sub_20A1673EC(v24, (uint64_t)&unk_2545DA9F0, (uint64_t)v30);
    v3[23] = v35;
    swift_retain();
    swift_release();
    v48(v15, v46, v12);
    v36 = (v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    v34(v37 + v45, v15, v12);
    *(_QWORD *)(v37 + v36) = v35;
    *(_QWORD *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v3;
    swift_retain();
    return sub_20A1A8F40();
  }
}

uint64_t sub_20A191C24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = type metadata accessor for MobileDocumentReaderSession.State();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAA18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A127E8C(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  sub_20A1A8F4C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_20A191D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  type metadata accessor for MobileDocumentReaderSession.State();
  v8[9] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAA18);
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v10 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderRequest(0) - 8);
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 + 64);
  v8[15] = swift_task_alloc();
  v11 = type metadata accessor for MobileDocumentReaderResponse(0);
  v8[16] = v11;
  v8[17] = *(_QWORD *)(v11 - 8);
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A191DF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  v5 = v0[6];
  v4 = v0[7];
  sub_20A127E8C(v0[5], v1, type metadata accessor for MobileDocumentReaderRequest);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_allocObject();
  v0[19] = v8;
  sub_20A12063C(v1, v8 + v6, type metadata accessor for MobileDocumentReaderRequest);
  v9 = (uint64_t *)(v8 + v7);
  *v9 = v5;
  v9[1] = v4;
  sub_20A127ED0(v5, v4);
  v10 = (_QWORD *)swift_task_alloc();
  v0[20] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_20A191EF0;
  return sub_20A194AC4(v0[18], (uint64_t)&unk_2545DAA28, v8, (uint64_t)&unk_2545DAA30, 0);
}

uint64_t sub_20A191EF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_20A191F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  sub_20A127E8C(v1, v7, type metadata accessor for MobileDocumentReaderResponse);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 3, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  sub_20A1A8F4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  *(_QWORD *)(v0 + 24) = 0;
  sub_20A1A8F58();
  sub_20A124284(v1, type metadata accessor for MobileDocumentReaderResponse);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A192068()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  sub_20A1A8F58();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1920F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  type metadata accessor for MobileDocumentReaderRequest(0);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A192154()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  objc_class *v5;
  id v6;
  id v7;
  objc_class *v8;
  char *v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(void **)(v0 + 168);
  sub_20A127E8C(*(_QWORD *)(v0 + 176), v2, type metadata accessor for MobileDocumentReaderRequest);
  v5 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderRequest(0);
  v6 = objc_allocWithZone(v5);
  sub_20A127E8C(v2, (uint64_t)v6 + OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, type metadata accessor for MobileDocumentReaderRequest);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = v5;
  v7 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 208) = v7;
  sub_20A124284(v2, type metadata accessor for MobileDocumentReaderRequest);
  v8 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderDeviceEngagementType();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = (uint64_t *)&v9[OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value];
  *v10 = v3;
  v10[1] = v1;
  sub_20A127ED0(v3, v1);
  *(_QWORD *)(v0 + 136) = v9;
  *(_QWORD *)(v0 + 144) = v8;
  v11 = objc_msgSendSuper2((objc_super *)(v0 + 136), sel_init);
  *(_QWORD *)(v0 + 216) = v11;
  *(_QWORD *)(v0 + 56) = v0 + 152;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A1922D8;
  v12 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v13 = (_QWORD *)(v0 + 80);
  v13[1] = 0x40000000;
  v13[2] = sub_20A13A4C0;
  v13[3] = &block_descriptor_77;
  v13[4] = v12;
  objc_msgSend(v4, sel_readDocumentWith_engagementType_completionHandler_, v7, v11, v13);
  return swift_continuation_await();
}

uint64_t sub_20A1922D8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A192338()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v2 = *(void **)(v0 + 208);
  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 152);
  sub_20A127E8C((uint64_t)v3 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, *(_QWORD *)(v0 + 160), type metadata accessor for MobileDocumentReaderResponse);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1923A8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 208);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A192400(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return swift_task_switch();
}

uint64_t sub_20A192418()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_20A13C8D8;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A18F990;
  v3[3] = &block_descriptor_75;
  v3[4] = v2;
  objc_msgSend(v1, sel_cancelReadWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_20A1924A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9F8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  v13 = *MEMORY[0x24BEE6C58];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((_DWORD)a1 == v13)
  {
    sub_20A1A8F04();
    sub_20A196874(&qword_2545DAA10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v14 = swift_allocError();
    sub_20A1A8D48();
    v18[1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
    sub_20A1A8F58();
    sub_20A1A8F34();
  }
  v15 = sub_20A1A8F1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = a4;
  swift_retain();
  sub_20A1673EC((uint64_t)v8, (uint64_t)&unk_2545DAA08, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_20A1926A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_20A1926BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[21];
  v1[21] = 0;
  v1[22] = 0;
  sub_20A196120(v2);
  v1[23] = 0;
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A192700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[22] = a4;
  v5[23] = v4;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  v5[24] = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

id sub_20A19276C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id result;
  void *v9;
  int deviceClassNumber;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)();

  v1 = *(_QWORD *)(v0 + 184);
  if (*(_BYTE *)(v1 + 152) != 1)
  {
    if (qword_253EB1CD0 != -1)
      swift_once();
    v3 = sub_20A1A8D3C();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EB3268);
    v4 = sub_20A1A8D24();
    v5 = sub_20A1A8F94();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_20A10F000, v4, v5, "Calling application is not entitled to use the API", v6, 2u);
      MEMORY[0x20BD214DC](v6, -1, -1);
    }

    sub_20A12CF7C();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_20A1B71E0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 112) = v2;
  *(_BYTE *)(v0 + 128) = 0;
  sub_20A18FC34((audit_token_t_optional *)(v0 + 96), v0 + 16);
  result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    return result;
  }
  v9 = result;
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  if (deviceClassNumber != 1)
  {
    *(_OWORD *)(v0 + 56) = xmmword_20A1B71C0;
    *(_OWORD *)(v0 + 72) = xmmword_20A1B71D0;
    *(_QWORD *)(v0 + 88) = 0x800000020A1BE230;
    sub_20A12CF7C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_20A1B71C0;
    *(_OWORD *)(v20 + 16) = xmmword_20A1B71D0;
    *(_QWORD *)(v20 + 32) = 0x800000020A1BE230;
LABEL_8:
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v11 + 160);
  *(_QWORD *)(v0 + 208) = v12;
  if (!v12)
  {
    v21 = *(_QWORD *)(v0 + 200);
    v22 = sub_20A1A8F1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v24 = sub_20A196874(&qword_2545DA9E8, v23, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v11;
    v25[3] = v24;
    v25[4] = v11;
    swift_retain_n();
    v26 = sub_20A195710(v21, (uint64_t)&unk_2545DAB40, (uint64_t)v25);
    *(_QWORD *)(v0 + 232) = v26;
    v27 = *(_QWORD *)(v11 + 160);
    *(_QWORD *)(v11 + 160) = v26;
    swift_retain();
    sub_20A196110(v27);
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A192C20;
LABEL_18:
    *v28 = v0;
    v28[1] = v29;
    return (id)sub_20A1A8F28();
  }
  if (v12 != 1)
  {
    swift_retain();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A192BBC;
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v11 + 144);
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 264) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  v17 = *(_QWORD *)(v0 + 176);
  if (v13)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v13;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = &unk_2545DAB38;
  }
  else
  {
    v19 = 0;
    v18 = 0;
  }
  *(_QWORD *)(v0 + 272) = v19;
  *(_QWORD *)(v0 + 280) = v18;
  swift_retain();
  sub_20A145480(v13);
  return (id)swift_task_switch();
}

uint64_t sub_20A192BBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A192C20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A192C84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v0[34];
  v1 = v0[35];
  v4 = v0[32];
  v3 = v0[33];
  v5 = (_QWORD *)swift_task_alloc();
  v0[36] = v5;
  v5[2] = v4;
  v5[3] = &unk_2545DAB20;
  v5[4] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[37] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  v0[38] = v7;
  *v7 = v0;
  v7[1] = sub_20A192D50;
  return sub_20A1A9264();
}

uint64_t sub_20A192D50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 312) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_20A196120(*(_QWORD *)(v2 + 272));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  v5 = *(_QWORD *)(v2 + 136);
  v4 = *(_QWORD *)(v2 + 144);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
}

uint64_t sub_20A192E18()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A192E60()
{
  uint64_t v0;

  sub_20A196120(*(_QWORD *)(v0 + 272));
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A192EA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  swift_release();
  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[19];
  v0[32] = *(_QWORD *)(v0[23] + 144);
  v4 = swift_allocObject();
  v0[33] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[22];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAB38;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[34] = v7;
  v0[35] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A192F68()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A192FA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  sub_20A196110(v0[26]);
  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[19];
  v0[32] = *(_QWORD *)(v0[23] + 144);
  v4 = swift_allocObject();
  v0[33] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[22];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAB38;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[34] = v7;
  v0[35] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A193064()
{
  uint64_t v0;

  sub_20A196110(*(_QWORD *)(v0 + 208));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1930A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v6[21] = a5;
  v6[22] = v5;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  v6[23] = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

id sub_20A19310C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id result;
  void *v9;
  int deviceClassNumber;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)();

  v1 = *(_QWORD *)(v0 + 176);
  if (*(_BYTE *)(v1 + 152) != 1)
  {
    if (qword_253EB1CD0 != -1)
      swift_once();
    v3 = sub_20A1A8D3C();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EB3268);
    v4 = sub_20A1A8D24();
    v5 = sub_20A1A8F94();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_20A10F000, v4, v5, "Calling application is not entitled to use the API", v6, 2u);
      MEMORY[0x20BD214DC](v6, -1, -1);
    }

    sub_20A12CF7C();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_20A1B71E0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 112) = v2;
  *(_BYTE *)(v0 + 128) = 0;
  sub_20A18FC34((audit_token_t_optional *)(v0 + 96), v0 + 16);
  result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    return result;
  }
  v9 = result;
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  if (deviceClassNumber != 1)
  {
    *(_OWORD *)(v0 + 56) = xmmword_20A1B71C0;
    *(_OWORD *)(v0 + 72) = xmmword_20A1B71D0;
    *(_QWORD *)(v0 + 88) = 0x800000020A1BE230;
    sub_20A12CF7C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_20A1B71C0;
    *(_OWORD *)(v20 + 16) = xmmword_20A1B71D0;
    *(_QWORD *)(v20 + 32) = 0x800000020A1BE230;
LABEL_8:
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v11 + 160);
  *(_QWORD *)(v0 + 200) = v12;
  if (!v12)
  {
    v21 = *(_QWORD *)(v0 + 192);
    v22 = sub_20A1A8F1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v24 = sub_20A196874(&qword_2545DA9E8, v23, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v11;
    v25[3] = v24;
    v25[4] = v11;
    swift_retain_n();
    v26 = sub_20A195710(v21, (uint64_t)&unk_2545DAB10, (uint64_t)v25);
    *(_QWORD *)(v0 + 224) = v26;
    v27 = *(_QWORD *)(v11 + 160);
    *(_QWORD *)(v11 + 160) = v26;
    swift_retain();
    sub_20A196110(v27);
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A1935C0;
LABEL_18:
    *v28 = v0;
    v28[1] = v29;
    return (id)sub_20A1A8F28();
  }
  if (v12 != 1)
  {
    swift_retain();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A19355C;
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v11 + 144);
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 256) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  v17 = *(_QWORD *)(v0 + 168);
  if (v13)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v13;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = &unk_2545DAB08;
  }
  else
  {
    v19 = 0;
    v18 = 0;
  }
  *(_QWORD *)(v0 + 264) = v19;
  *(_QWORD *)(v0 + 272) = v18;
  swift_retain();
  sub_20A145480(v13);
  return (id)swift_task_switch();
}

uint64_t sub_20A19355C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A1935C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A193624()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v0[33];
  v1 = v0[34];
  v4 = v0[31];
  v3 = v0[32];
  v5 = (_QWORD *)swift_task_alloc();
  v0[35] = v5;
  v5[2] = v4;
  v5[3] = &unk_2545DAAF8;
  v5[4] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[36] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  v0[37] = v7;
  type metadata accessor for MobileDocumentReaderConfigurationResponse();
  *v7 = v0;
  v7[1] = sub_20A1936F0;
  return sub_20A1A9264();
}

uint64_t sub_20A1936F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 304) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_20A196120(*(_QWORD *)(v2 + 264));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A1937A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A1937E8()
{
  uint64_t v0;

  sub_20A196120(*(_QWORD *)(v0 + 264));
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A193830()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  swift_release();
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAB08;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A1938F0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A19392C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  sub_20A196110(v0[25]);
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAB08;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A1939EC()
{
  uint64_t v0;

  sub_20A196110(*(_QWORD *)(v0 + 200));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A193A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v6[21] = a5;
  v6[22] = v5;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  v6[23] = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

id sub_20A193A94()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id result;
  void *v9;
  int deviceClassNumber;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)();

  v1 = *(_QWORD *)(v0 + 176);
  if (*(_BYTE *)(v1 + 152) != 1)
  {
    if (qword_253EB1CD0 != -1)
      swift_once();
    v3 = sub_20A1A8D3C();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EB3268);
    v4 = sub_20A1A8D24();
    v5 = sub_20A1A8F94();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_20A10F000, v4, v5, "Calling application is not entitled to use the API", v6, 2u);
      MEMORY[0x20BD214DC](v6, -1, -1);
    }

    sub_20A12CF7C();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_20A1B71E0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 112) = v2;
  *(_BYTE *)(v0 + 128) = 0;
  sub_20A18FC34((audit_token_t_optional *)(v0 + 96), v0 + 16);
  result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    return result;
  }
  v9 = result;
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  if (deviceClassNumber != 1)
  {
    *(_OWORD *)(v0 + 56) = xmmword_20A1B71C0;
    *(_OWORD *)(v0 + 72) = xmmword_20A1B71D0;
    *(_QWORD *)(v0 + 88) = 0x800000020A1BE230;
    sub_20A12CF7C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_20A1B71C0;
    *(_OWORD *)(v20 + 16) = xmmword_20A1B71D0;
    *(_QWORD *)(v20 + 32) = 0x800000020A1BE230;
LABEL_8:
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v11 + 160);
  *(_QWORD *)(v0 + 200) = v12;
  if (!v12)
  {
    v21 = *(_QWORD *)(v0 + 192);
    v22 = sub_20A1A8F1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v24 = sub_20A196874(&qword_2545DA9E8, v23, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v11;
    v25[3] = v24;
    v25[4] = v11;
    swift_retain_n();
    v26 = sub_20A195710(v21, (uint64_t)&unk_2545DAAE0, (uint64_t)v25);
    *(_QWORD *)(v0 + 224) = v26;
    v27 = *(_QWORD *)(v11 + 160);
    *(_QWORD *)(v11 + 160) = v26;
    swift_retain();
    sub_20A196110(v27);
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A193F48;
LABEL_18:
    *v28 = v0;
    v28[1] = v29;
    return (id)sub_20A1A8F28();
  }
  if (v12 != 1)
  {
    swift_retain();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A193EE4;
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v11 + 144);
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 256) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  v17 = *(_QWORD *)(v0 + 168);
  if (v13)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v13;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = &unk_2545DAAD8;
  }
  else
  {
    v19 = 0;
    v18 = 0;
  }
  *(_QWORD *)(v0 + 264) = v19;
  *(_QWORD *)(v0 + 272) = v18;
  swift_retain();
  sub_20A145480(v13);
  return (id)swift_task_switch();
}

uint64_t sub_20A193EE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A193F48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A193FAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v0[33];
  v1 = v0[34];
  v4 = v0[31];
  v3 = v0[32];
  v5 = (_QWORD *)swift_task_alloc();
  v0[35] = v5;
  v5[2] = v4;
  v5[3] = &unk_2545DAAC8;
  v5[4] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[36] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  v0[37] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8C80);
  *v7 = v0;
  v7[1] = sub_20A19407C;
  return sub_20A1A9264();
}

uint64_t sub_20A19407C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 304) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_20A196120(*(_QWORD *)(v2 + 264));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A19412C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A194174()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  swift_release();
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAAD8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A194234()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  sub_20A196110(v0[25]);
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAAD8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A1942F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v6[21] = a5;
  v6[22] = v5;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  v6[23] = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

id sub_20A194360()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id result;
  void *v9;
  int deviceClassNumber;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)();

  v1 = *(_QWORD *)(v0 + 176);
  if (*(_BYTE *)(v1 + 152) != 1)
  {
    if (qword_253EB1CD0 != -1)
      swift_once();
    v3 = sub_20A1A8D3C();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EB3268);
    v4 = sub_20A1A8D24();
    v5 = sub_20A1A8F94();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_20A10F000, v4, v5, "Calling application is not entitled to use the API", v6, 2u);
      MEMORY[0x20BD214DC](v6, -1, -1);
    }

    sub_20A12CF7C();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_20A1B71E0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 112) = v2;
  *(_BYTE *)(v0 + 128) = 0;
  sub_20A18FC34((audit_token_t_optional *)(v0 + 96), v0 + 16);
  result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    return result;
  }
  v9 = result;
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  if (deviceClassNumber != 1)
  {
    *(_OWORD *)(v0 + 56) = xmmword_20A1B71C0;
    *(_OWORD *)(v0 + 72) = xmmword_20A1B71D0;
    *(_QWORD *)(v0 + 88) = 0x800000020A1BE230;
    sub_20A12CF7C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_20A1B71C0;
    *(_OWORD *)(v20 + 16) = xmmword_20A1B71D0;
    *(_QWORD *)(v20 + 32) = 0x800000020A1BE230;
LABEL_8:
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v11 + 160);
  *(_QWORD *)(v0 + 200) = v12;
  if (!v12)
  {
    v21 = *(_QWORD *)(v0 + 192);
    v22 = sub_20A1A8F1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v24 = sub_20A196874(&qword_2545DA9E8, v23, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v11;
    v25[3] = v24;
    v25[4] = v11;
    swift_retain_n();
    v26 = sub_20A195710(v21, (uint64_t)&unk_2545DAAB8, (uint64_t)v25);
    *(_QWORD *)(v0 + 224) = v26;
    v27 = *(_QWORD *)(v11 + 160);
    *(_QWORD *)(v11 + 160) = v26;
    swift_retain();
    sub_20A196110(v27);
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A194814;
LABEL_18:
    *v28 = v0;
    v28[1] = v29;
    return (id)sub_20A1A8F28();
  }
  if (v12 != 1)
  {
    swift_retain();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A1947B0;
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v11 + 144);
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 256) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  v17 = *(_QWORD *)(v0 + 168);
  if (v13)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v13;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = &unk_2545DAAB0;
  }
  else
  {
    v19 = 0;
    v18 = 0;
  }
  *(_QWORD *)(v0 + 264) = v19;
  *(_QWORD *)(v0 + 272) = v18;
  swift_retain();
  sub_20A145480(v13);
  return (id)swift_task_switch();
}

uint64_t sub_20A1947B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A194814()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A194878()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v0[33];
  v1 = v0[34];
  v4 = v0[31];
  v3 = v0[32];
  v5 = (_QWORD *)swift_task_alloc();
  v0[35] = v5;
  v5[2] = v4;
  v5[3] = &unk_2545DAAA0;
  v5[4] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[36] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  v0[37] = v7;
  *v7 = v0;
  v7[1] = sub_20A19407C;
  return sub_20A1A9264();
}

uint64_t sub_20A194944()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  swift_release();
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAAB0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A194A04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  sub_20A196110(v0[25]);
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAAB0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A194AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v6[21] = a5;
  v6[22] = v5;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  v6[23] = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D99E0);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

id sub_20A194B30()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id result;
  void *v9;
  int deviceClassNumber;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)();

  v1 = *(_QWORD *)(v0 + 176);
  if (*(_BYTE *)(v1 + 152) != 1)
  {
    if (qword_253EB1CD0 != -1)
      swift_once();
    v3 = sub_20A1A8D3C();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EB3268);
    v4 = sub_20A1A8D24();
    v5 = sub_20A1A8F94();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_20A10F000, v4, v5, "Calling application is not entitled to use the API", v6, 2u);
      MEMORY[0x20BD214DC](v6, -1, -1);
    }

    sub_20A12CF7C();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_20A1B71E0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 112) = v2;
  *(_BYTE *)(v0 + 128) = 0;
  sub_20A18FC34((audit_token_t_optional *)(v0 + 96), v0 + 16);
  result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    return result;
  }
  v9 = result;
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  if (deviceClassNumber != 1)
  {
    *(_OWORD *)(v0 + 56) = xmmword_20A1B71C0;
    *(_OWORD *)(v0 + 72) = xmmword_20A1B71D0;
    *(_QWORD *)(v0 + 88) = 0x800000020A1BE230;
    sub_20A12CF7C();
    swift_willThrowTypedImpl();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_20A1B71C0;
    *(_OWORD *)(v20 + 16) = xmmword_20A1B71D0;
    *(_QWORD *)(v20 + 32) = 0x800000020A1BE230;
LABEL_8:
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v11 + 160);
  *(_QWORD *)(v0 + 200) = v12;
  if (!v12)
  {
    v21 = *(_QWORD *)(v0 + 192);
    v22 = sub_20A1A8F1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v24 = sub_20A196874(&qword_2545DA9E8, v23, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v11;
    v25[3] = v24;
    v25[4] = v11;
    swift_retain_n();
    v26 = sub_20A195710(v21, (uint64_t)&unk_2545DAA70, (uint64_t)v25);
    *(_QWORD *)(v0 + 224) = v26;
    v27 = *(_QWORD *)(v11 + 160);
    *(_QWORD *)(v11 + 160) = v26;
    swift_retain();
    sub_20A196110(v27);
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A194FE4;
LABEL_18:
    *v28 = v0;
    v28[1] = v29;
    return (id)sub_20A1A8F28();
  }
  if (v12 != 1)
  {
    swift_retain();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545D99D0);
    v29 = sub_20A194F80;
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v11 + 144);
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 256) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  v17 = *(_QWORD *)(v0 + 168);
  if (v13)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v13;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = &unk_2545DAA60;
  }
  else
  {
    v19 = 0;
    v18 = 0;
  }
  *(_QWORD *)(v0 + 264) = v19;
  *(_QWORD *)(v0 + 272) = v18;
  swift_retain();
  sub_20A145480(v13);
  return (id)swift_task_switch();
}

uint64_t sub_20A194F80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A194FE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A195048()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v0[33];
  v1 = v0[34];
  v4 = v0[31];
  v3 = v0[32];
  v5 = (_QWORD *)swift_task_alloc();
  v0[35] = v5;
  v5[2] = v4;
  v5[3] = &unk_2545DAA48;
  v5[4] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[36] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  v0[37] = v7;
  type metadata accessor for MobileDocumentReaderResponse(0);
  *v7 = v0;
  v7[1] = sub_20A19407C;
  return sub_20A1A9264();
}

uint64_t sub_20A195114()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  swift_release();
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAA60;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A1951D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  sub_20A196110(v0[25]);
  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  v0[31] = *(_QWORD *)(v0[22] + 144);
  v4 = swift_allocObject();
  v0[32] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v0[21];
  if (v2)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_2545DAA60;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v0[33] = v7;
  v0[34] = v6;
  swift_retain();
  sub_20A145480(v2);
  return swift_task_switch();
}

uint64_t sub_20A195294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_20A1952AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 144);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A1952F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = v0[2];
  v2 = v0[3];
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  v3[2] = v2;
  v3[3] = &unk_2545DAA80;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_20A1953A8;
  return sub_20A1A9264();
}

uint64_t sub_20A1953A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A195438()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 1;
  sub_20A196110(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A195478()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A1954C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 0;
  sub_20A196110(v2);
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A195514(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 136) = a3;
  *(_QWORD *)(v3 + 144) = v4;
  return swift_task_switch();
}

uint64_t sub_20A195530()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  objc_class *v6;
  char *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(void **)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB1CE0);
  v3 = (_OWORD *)swift_allocObject();
  v4 = *(_OWORD *)(v2 + 112);
  v5 = *(_OWORD *)(v2 + 128);
  v3[1] = xmmword_20A1B5A60;
  v3[2] = v4;
  v3[3] = v5;
  v6 = (objc_class *)type metadata accessor for XPCAuditToken();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value] = v3;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 128) = v6;
  v8 = objc_msgSendSuper2((objc_super *)(v0 + 120), sel_init);
  *(_QWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A19563C;
  v9 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v10 = (_QWORD *)(v0 + 80);
  v10[1] = 0x40000000;
  v10[2] = sub_20A18F990;
  v10[3] = &block_descriptor_69_0;
  v10[4] = v9;
  objc_msgSend(v1, sel_registerAuditToken_completionHandler_, v8, v10);
  return swift_continuation_await();
}

uint64_t sub_20A19563C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A19569C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A1956D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A195710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_20A1A8F1C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_20A1A8F10();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_20A176480(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A1A8EE0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_20A19583C(uint64_t *a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = *a1;
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A143D1C;
  return v6(v3);
}

unint64_t sub_20A19589C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = v0;
  if (qword_253EB1CD0 != -1)
    swift_once();
  v2 = sub_20A1A8D3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_253EB3268);
  v3 = sub_20A1A8D24();
  v4 = sub_20A1A8F94();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v9 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_20A146EE8(0xD00000000000001FLL, 0x800000020A1BE360, &v9);
    sub_20A1A8FF4();
    _os_log_impl(&dword_20A10F000, v3, v4, "MobileDocumentReaderSession %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD214DC](v6, -1, -1);
    MEMORY[0x20BD214DC](v5, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 0;
  return sub_20A196110(v7);
}

uint64_t MobileDocumentReaderSession.deinit()
{
  uint64_t v0;

  swift_release();
  sub_20A196110(*(_QWORD *)(v0 + 160));
  sub_20A196120(*(_QWORD *)(v0 + 168));
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MobileDocumentReaderSession.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_20A196110(*(_QWORD *)(v0 + 160));
  sub_20A196120(*(_QWORD *)(v0 + 168));
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t MobileDocumentReaderSession.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t static MobileDocumentReaderSession.isSupported.getter()
{
  uint64_t v1;

  _s7CoreIDV27MobileDocumentReaderSessionC16checkIsSupportedyyAC5ErrorVYKFZ((uint64_t)&v1);
  return 1;
}

uint64_t sub_20A195B00(uint64_t a1)
{
  destroy for MobileDocumentReaderEntitlementChecker();
  return a1;
}

uint64_t sub_20A195B34(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MobileDocumentReaderEntitlementChecker(a2, a1);
  return a2;
}

uint64_t sub_20A195B70(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 32) = a1;
  v4 = *a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 40) = v5;
  *v5 = v3;
  v5[1] = sub_20A195BE4;
  return v7(v3 + 16, v4);
}

uint64_t sub_20A195BE4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (!v0)
  {
    v5 = v2[3];
    v4 = (_QWORD *)v2[4];
    *v4 = v2[2];
    v4[1] = v5;
  }
  return ((uint64_t (*)(void))v3[1])();
}

uint64_t sub_20A195C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_20A195C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_20A195D04;
  return sub_20A1A927C();
}

uint64_t sub_20A195D04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD **)(v2 + 32);
  swift_task_dealloc();
  v5 = *(_QWORD *)(v2 + 24);
  *v4 = *(_QWORD *)(v2 + 16);
  v4[1] = v5;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A195D88()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A195DBC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v5 = *a2;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A1465AC;
  return v8(a1, v5);
}

uint64_t sub_20A195E2C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20A195E50(uint64_t a1)
{
  return sub_20A19027C(a1);
}

uint64_t sub_20A195E58()
{
  return sub_20A1904A0();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_20A195E78()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A195E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 32);
  v9 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *(_QWORD *)v9 = v3;
  *(_QWORD *)(v9 + 8) = sub_20A1465AC;
  *(_BYTE *)(v9 + 192) = v8;
  *(_QWORD *)(v9 + 160) = v6;
  *(_QWORD *)(v9 + 168) = v7;
  *(_QWORD *)(v9 + 144) = a1;
  *(_QWORD *)(v9 + 152) = a2;
  return swift_task_switch();
}

uint64_t sub_20A195F20()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A195F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A1465AC;
  v8[18] = v7;
  v8[19] = v6;
  v8[16] = a1;
  v8[17] = a2;
  return swift_task_switch();
}

uint64_t sub_20A195FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MobileDocumentReaderRequest(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_20A1A8CAC();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  sub_20A185758(*(_QWORD *)(v3 + *(int *)(v6 + 20)), *(_QWORD *)(v3 + *(int *)(v6 + 20) + 8), *(_QWORD *)(v3 + *(int *)(v6 + 20) + 16));
  return swift_deallocObject();
}

uint64_t sub_20A196084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MobileDocumentReaderRequest(0) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A1465AC;
  return sub_20A191328(a1, a2, v7);
}

uint64_t sub_20A196104(uint64_t a1)
{
  uint64_t v1;

  return sub_20A191650(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_20A196110(unint64_t result)
{
  if (result >= 2)
    return swift_release();
  return result;
}

uint64_t sub_20A196120(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for MobileDocumentReaderSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for MobileDocumentReaderSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDocumentReaderSession.__allocating_init(auditToken:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of MobileDocumentReaderSession.readerIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 216) + *(_QWORD *)(*(_QWORD *)v0 + 216));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A1961BC;
  return v4();
}

uint64_t sub_20A1961BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of MobileDocumentReaderSession.prepare(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 224) + *(_QWORD *)(*(_QWORD *)v2 + 224));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A1465AC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of MobileDocumentReaderSession.merchant(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 232)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 232));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_20A1465AC;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MobileDocumentReaderSession.canRequestDocument(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 240) + *(_QWORD *)(*(_QWORD *)v1 + 240));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A1465AC;
  return v6(a1);
}

uint64_t dispatch thunk of MobileDocumentReaderSession.readDocument(_:engagementType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDocumentReaderSession.ConnectionConfigurationStatus(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_retain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for MobileDocumentReaderSession.ConnectionConfigurationStatus(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_release();
  return result;
}

unint64_t *assignWithCopy for MobileDocumentReaderSession.ConnectionConfigurationStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_retain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for MobileDocumentReaderSession.ConnectionConfigurationStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderSession.ConnectionConfigurationStatus(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderSession.ConnectionConfigurationStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

_QWORD *sub_20A196564(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderSession.ConnectionConfigurationStatus()
{
  return &type metadata for MobileDocumentReaderSession.ConnectionConfigurationStatus;
}

uint64_t sub_20A196594()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_20A1965F8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  return sub_20A191C24(a1);
}

uint64_t sub_20A19663C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderRequest(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (char *)v1 + v6;
  v14 = *(_QWORD *)((char *)v1 + v6);
  v15 = *((_QWORD *)v13 + 1);
  v16 = (uint64_t)v1 + v8;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_20A1465AC;
  return sub_20A191D14(a1, v9, v10, v11, v12, v14, v15, v16);
}

uint64_t sub_20A196720()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A1967B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A1924A4(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_20A196814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A1465AC;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20A196874(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x20BD21434](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A1968B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for MobileDocumentReaderRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(v1 + 20);
  v7 = sub_20A1A8CAC();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  sub_20A185758(*(_QWORD *)(v6 + *(int *)(v9 + 20)), *(_QWORD *)(v6 + *(int *)(v9 + 20) + 8), *(_QWORD *)(v6 + *(int *)(v9 + 20) + 16));
  v10 = *(_QWORD *)(v0 + v4 + 8);
  if (v10 >> 60 != 15)
    sub_20A120E74(*(_QWORD *)(v0 + v4), v10);
  return swift_deallocObject();
}

uint64_t sub_20A196998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderRequest(0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v2 + v7;
  v9 = (uint64_t *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_20A1465AC;
  return sub_20A1920F4(a1, a2, v8, v10, v11);
}

uint64_t sub_20A196A40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2545DAA40 + dword_2545DAA40))(a1, a2, v6);
}

uint64_t sub_20A196AC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  return sub_20A13D110(a1, v4, v5, v6);
}

void sub_20A196B2C()
{
  uint64_t *v0;

  sub_20A13D2D0(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A196B38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t *, int *))((char *)&dword_2545DAA58 + dword_2545DAA58))(a1, v4);
}

uint64_t sub_20A196BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A1465AC;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20A196C08(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_20A1465AC;
  v6 = *a2;
  v5[17] = v2;
  v5[18] = v6;
  return swift_task_switch();
}

void sub_20A196C6C()
{
  uint64_t *v0;

  sub_20A13D1D4(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v1 = type metadata accessor for MobileDocumentReaderRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 20);
  v9 = sub_20A1A8CAC();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = type metadata accessor for MobileDocumentReaderRequest.Document(0);
  sub_20A185758(*(_QWORD *)(v8 + *(int *)(v11 + 20)), *(_QWORD *)(v8 + *(int *)(v11 + 20) + 8), *(_QWORD *)(v8 + *(int *)(v11 + 20) + 16));
  v12 = *(_QWORD *)(v0 + v4 + 8);
  if (v12 >> 60 != 15)
    sub_20A120E74(*(_QWORD *)(v0 + v4), v12);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v4 + v7 + 16) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_20A196DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderRequest(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545DA9D8) - 8) + 80);
  v6 = (v4 + v5 + 16) & ~v5;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = v0 + v3;
  v9 = v0 + v4;
  v10 = *(_QWORD *)(v0 + v4);
  v11 = *(_QWORD *)(v9 + 8);
  v12 = v0 + v6;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_20A143D1C;
  v13[5] = v8;
  v13[6] = v12;
  v13[3] = v11;
  v13[4] = v7;
  v13[2] = v10;
  return swift_task_switch();
}

uint64_t sub_20A196E94(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2545DAA98 + dword_2545DAA98))(a1, a2, v6);
}

uint64_t sub_20A196F14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  return sub_20A13CB08(a1, v4, v5, v6);
}

uint64_t sub_20A196F84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A196FA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2545DAAC0 + dword_2545DAAC0))(a1, a2, v6);
}

uint64_t sub_20A197028(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  return sub_20A13D048(a1, v4, v5, v6);
}

void sub_20A197094()
{
  uint64_t *v0;

  sub_20A13D2B4(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A1970A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAAE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A1970EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2545DAAF0 + dword_2545DAAF0))(a1, a2, v6);
}

uint64_t sub_20A19716C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A143D1C;
  return sub_20A13CF84(a1, v4, v5, v6);
}

void sub_20A1971D8()
{
  uint64_t *v0;

  sub_20A13D298(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A1971E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2545DAB18 + dword_2545DAB18))(a1, a2, v6);
}

uint64_t sub_20A197268(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2545DAB28 + dword_2545DAB28))(a1, v4, v5, v6);
}

void sub_20A1972E8()
{
  uint64_t *v0;

  sub_20A13D27C(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A1972F8(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A13ECD8(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroy_40Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A197334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A1465AC;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20A197394()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v1 = *(_QWORD *)(type metadata accessor for MobileDocumentReaderSession.State() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  v3 = (uint64_t *)(v0 + v2);
  v4 = type metadata accessor for MobileDocumentReaderResponse(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v2, 3, v4))
  {
    v5 = v3[1];
    if (v5 >> 60 != 15)
      sub_20A120E74(*v3, v5);
    v6 = v3[3];
    if (v6 >> 60 != 15)
      sub_20A120E74(v3[2], v6);
    v7 = (char *)v3 + *(int *)(v4 + 24);
    v8 = (int *)type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
    {
      v9 = sub_20A1A8B5C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
      v10 = (uint64_t *)&v7[v8[6]];
      v11 = v10[1];
      if (v11 >> 60 != 15)
        sub_20A120E74(*v10, v11);
      swift_bridgeObjectRelease();
      v12 = &v7[v8[9]];
      v13 = sub_20A1A8AD8();
      v18 = *(_QWORD *)(v13 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (!v17(v12, 1, v13))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v13);
      if (*(_QWORD *)&v7[v8[10] + 8] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)&v7[v8[12] + 8] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = &v7[v8[17]];
      if (!v17(v14, 1, v13))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v13);
      v15 = &v7[v8[18]];
      if (!v17(v15, 1, v13))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v13);
    }
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_20A197640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MobileDocumentReaderSession.State() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 40) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A1465AC;
  v7[3] = v5;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

Swift::Bool __swiftcall LSPropertyList.BOOL(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  unsigned __int8 v4;
  id v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v2 = (void *)sub_20A1A8D9C();
  sub_20A197800();
  v3 = objc_msgSend(v1, sel_objectForKey_ofClass_, v2, swift_getObjCClassFromMetadata());

  if (v3)
  {
    sub_20A1A9018();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_20A19783C((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_20A12FE34((uint64_t)v8);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v4 = objc_msgSend(v6, sel_BOOLValue);

  return v4;
}

unint64_t sub_20A197800()
{
  unint64_t result;

  result = qword_2545DAB68;
  if (!qword_2545DAB68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545DAB68);
  }
  return result;
}

uint64_t sub_20A19783C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DigitalPresentmentDisplayConfiguration.encodeToJSON()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20A1A8A84();
  swift_allocObject();
  sub_20A1A8A78();
  sub_20A146868();
  v1 = sub_20A1A8A6C();
  swift_release();
  if (v0)
  {
    sub_20A1468AC();
    swift_allocError();
    *(_BYTE *)v2 = 2;
    *(_QWORD *)(v2 + 8) = 0xD000000000000066;
    *(_QWORD *)(v2 + 16) = 0x800000020A1BCDB0;
    *(_QWORD *)(v2 + 24) = v0;
    swift_willThrow();
  }
  return v1;
}

uint64_t static DigitalPresentmentDisplayConfiguration.decodeFromJSON(data:)@<X0>(uint64_t a1@<X8>)
{
  _OWORD v3[8];
  char v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;

  sub_20A1A8A60();
  swift_allocObject();
  sub_20A1A8A54();
  sub_20A197C1C();
  sub_20A1A8A48();
  swift_release();
  v3[6] = v11;
  v3[7] = v12;
  v4 = v13;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v9;
  v3[5] = v10;
  v3[0] = v5;
  v3[1] = v6;
  nullsub_1(v3);
  return sub_20A197C60((uint64_t)v3, a1);
}

unint64_t sub_20A197C1C()
{
  unint64_t result;

  result = qword_2545DAB70;
  if (!qword_2545DAB70)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration, &type metadata for DigitalPresentmentDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_2545DAB70);
  }
  return result;
}

uint64_t sub_20A197C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.description.getter()
{
  uint64_t v0;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0x696E696665646E69;
  v2 = sub_20A1A9240();
  sub_20A1A8DF0();
  return v2;
}

BOOL static DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2;
}

uint64_t sub_20A197D6C()
{
  _BYTE *v0;

  if (*v0)
    return 0x74696D696CLL;
  else
    return 0x696E696665646E69;
}

uint64_t sub_20A197DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A19CFA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A197DD0()
{
  sub_20A19B4D8();
  return sub_20A1A9360();
}

uint64_t sub_20A197DF8()
{
  sub_20A19B4D8();
  return sub_20A1A936C();
}

uint64_t sub_20A197E20()
{
  sub_20A19B560();
  return sub_20A1A9360();
}

uint64_t sub_20A197E48()
{
  sub_20A19B560();
  return sub_20A1A936C();
}

uint64_t sub_20A197E70()
{
  return 1937334628;
}

uint64_t sub_20A197E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A1A9258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A197F04()
{
  sub_20A19B51C();
  return sub_20A1A9360();
}

uint64_t sub_20A197F2C()
{
  sub_20A19B51C();
  return sub_20A1A936C();
}

uint64_t DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAB78);
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAB80);
  v7 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAB88);
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v2;
  v13 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A19B4D8();
  sub_20A1A9354();
  if (v13 == 1)
  {
    v21 = 0;
    sub_20A19B560();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  }
  else
  {
    v22 = 1;
    sub_20A19B51C();
    sub_20A1A91D4();
    v15 = v19;
    sub_20A1A921C();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v10);
}

uint64_t DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char *v31;
  _QWORD *v32;
  char v33;
  char v34;

  v30 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABA8);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABB0);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABB8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A19B4D8();
  v11 = v32;
  sub_20A1A9348();
  if (v11)
    goto LABEL_7;
  v12 = v31;
  v26 = v8;
  v32 = a1;
  v13 = sub_20A1A91C8();
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v18 = sub_20A1A90B4();
    swift_allocError();
    v19 = v10;
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v21 = &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v7);
    a1 = v32;
LABEL_7:
    v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  v14 = *(_BYTE *)(v13 + 32);
  if ((v14 & 1) != 0)
  {
    v15 = *(_BYTE *)(v13 + 32);
    v34 = 1;
    sub_20A19B51C();
    sub_20A1A9150();
    v16 = v27;
    v17 = sub_20A1A91A4();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v7);
    v14 = v15;
  }
  else
  {
    v33 = 0;
    sub_20A19B560();
    sub_20A1A9150();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v7);
    v17 = 0;
  }
  v24 = v30;
  *v30 = v17;
  *((_BYTE *)v24 + 8) = v14 ^ 1;
  v22 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_20A1984F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.init(from:)(a1, a2);
}

uint64_t sub_20A198508(_QWORD *a1)
{
  return DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.encode(to:)(a1);
}

BOOL sub_20A19851C(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2;
}

uint64_t sub_20A198558()
{
  uint64_t v0;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0x696E696665646E69;
  v2 = sub_20A1A9240();
  sub_20A1A8DF0();
  return v2;
}

BOOL static DigitalPresentmentDisplayConfiguration.PresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DigitalPresentmentDisplayConfiguration.PresentationStyle.hash(into:)()
{
  return sub_20A1A9318();
}

uint64_t sub_20A198628()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0x53746E65736E6F63;
}

uint64_t sub_20A198670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A19D0A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A198694()
{
  sub_20A19B9E8();
  return sub_20A1A9360();
}

uint64_t sub_20A1986BC()
{
  sub_20A19B9E8();
  return sub_20A1A936C();
}

uint64_t sub_20A1986E4()
{
  sub_20A19BA70();
  return sub_20A1A9360();
}

uint64_t sub_20A19870C()
{
  sub_20A19BA70();
  return sub_20A1A936C();
}

uint64_t sub_20A198734()
{
  sub_20A19BA2C();
  return sub_20A1A9360();
}

uint64_t sub_20A19875C()
{
  sub_20A19BA2C();
  return sub_20A1A936C();
}

uint64_t DigitalPresentmentDisplayConfiguration.PresentationStyle.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABC0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABC8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABD0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A19B9E8();
  sub_20A1A9354();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_20A19BA2C();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_20A19BA70();
    sub_20A1A91D4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t DigitalPresentmentDisplayConfiguration.PresentationStyle.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t DigitalPresentmentDisplayConfiguration.PresentationStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABF0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DABF8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAC00);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A19B9E8();
  v11 = v33;
  sub_20A1A9348();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_20A1A91C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_20A1A90B4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
    *v21 = &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle;
    sub_20A1A915C();
    sub_20A1A90A8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_20A19BA2C();
    sub_20A1A9150();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_20A19BA70();
    v22 = v6;
    sub_20A1A9150();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_20A198CF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A198D28 + 4 * a2[a1]))(0x73746E656D656C65, 0xE800000000000000);
}

unint64_t sub_20A198D28()
{
  return 0xD000000000000013;
}

uint64_t sub_20A198E14@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DigitalPresentmentDisplayConfiguration.PresentationStyle.init(from:)(a1, a2);
}

uint64_t sub_20A198E28(_QWORD *a1)
{
  return DigitalPresentmentDisplayConfiguration.PresentationStyle.encode(to:)(a1);
}

uint64_t sub_20A198E3C()
{
  unsigned __int8 *v0;

  return sub_20A198CF4(*v0);
}

uint64_t sub_20A198E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A19D1A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A198E68(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_20A198E74()
{
  sub_20A19BB54();
  return sub_20A1A9360();
}

uint64_t sub_20A198E9C()
{
  sub_20A19BB54();
  return sub_20A1A936C();
}

uint64_t DigitalPresentmentDisplayConfiguration.ephemeralElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigitalPresentmentDisplayConfiguration.ephemeralElements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.ephemeralElements.modify())()
{
  return nullsub_1;
}

uint64_t DigitalPresentmentDisplayConfiguration.displayOnlyElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigitalPresentmentDisplayConfiguration.displayOnlyElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.displayOnlyElements.modify())()
{
  return nullsub_1;
}

uint64_t DigitalPresentmentDisplayConfiguration.persistedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DigitalPresentmentDisplayConfiguration.persistedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.persistedElements.modify())()
{
  return nullsub_1;
}

void DigitalPresentmentDisplayConfiguration.presentmentSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_BYTE *DigitalPresentmentDisplayConfiguration.presentmentSource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.presentmentSource.modify())()
{
  return nullsub_1;
}

void DigitalPresentmentDisplayConfiguration.presentationStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

_BYTE *DigitalPresentmentDisplayConfiguration.presentationStyle.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = *result;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.presentationStyle.modify())()
{
  return nullsub_1;
}

void DigitalPresentmentDisplayConfiguration.persistedElementsStorageLifetimePeriod.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 41);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t DigitalPresentmentDisplayConfiguration.persistedElementsStorageLifetimePeriod.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_BYTE *)(result + 9);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 40) = v2;
  *(_BYTE *)(v1 + 41) = v3;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.persistedElementsStorageLifetimePeriod.modify())()
{
  return nullsub_1;
}

uint64_t DigitalPresentmentDisplayConfiguration.clientDisplayInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(void **)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 72);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_20A19BAB4(v2, v3, v4, v5);
}

__n128 DigitalPresentmentDisplayConfiguration.clientDisplayInfo.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  sub_20A19BAF4(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64), *(_BYTE *)(v1 + 72));
  result = v5;
  *(__n128 *)(v1 + 48) = v5;
  *(_QWORD *)(v1 + 64) = v2;
  *(_BYTE *)(v1 + 72) = v3;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.clientDisplayInfo.modify())()
{
  return nullsub_1;
}

uint64_t DigitalPresentmentDisplayConfiguration.passID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DigitalPresentmentDisplayConfiguration.passID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.passID.modify())()
{
  return nullsub_1;
}

uint64_t DigitalPresentmentDisplayConfiguration.usageDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DigitalPresentmentDisplayConfiguration.usageDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.usageDescription.modify())()
{
  return nullsub_1;
}

uint64_t DigitalPresentmentDisplayConfiguration.passName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DigitalPresentmentDisplayConfiguration.passName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.passName.modify())()
{
  return nullsub_1;
}

void DigitalPresentmentDisplayConfiguration.documentType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

_BYTE *DigitalPresentmentDisplayConfiguration.documentType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 128) = *result;
  return result;
}

uint64_t (*DigitalPresentmentDisplayConfiguration.documentType.modify())()
{
  return nullsub_1;
}

__n128 DigitalPresentmentDisplayConfiguration.init(elements:displayOnlyElements:persistedElements:presentmentSource:presentationStyle:persistedElementsStorageLifetimePeriod:clientDisplayInfo:passID:usageDescription:passName:documentType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, char *a13)
{
  __n128 result;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  result = a11;
  v14 = *a4;
  v15 = *a5;
  v16 = *a6;
  v17 = *((_BYTE *)a6 + 8);
  v19 = *(_QWORD *)(a7 + 16);
  v20 = *(_BYTE *)(a7 + 24);
  v21 = *a13;
  v18 = *((_BYTE *)a6 + 9);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = v14;
  *(_BYTE *)(a9 + 25) = v15;
  *(_QWORD *)(a9 + 32) = v16;
  *(_BYTE *)(a9 + 40) = v17;
  *(_BYTE *)(a9 + 41) = v18;
  *(_OWORD *)(a9 + 48) = *(_OWORD *)a7;
  *(_QWORD *)(a9 + 64) = v19;
  *(_BYTE *)(a9 + 72) = v20;
  *(_QWORD *)(a9 + 80) = a8;
  *(_OWORD *)(a9 + 88) = a10;
  *(__n128 *)(a9 + 104) = a11;
  *(_QWORD *)(a9 + 120) = a12;
  *(_BYTE *)(a9 + 128) = v21;
  return result;
}

uint64_t DigitalPresentmentDisplayConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  void *v55;
  void *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unsigned __int8 v80;
  char v81;
  int v82;
  __int16 v83;
  uint64_t v84;
  char v85;
  char v86;
  int v87;
  __int16 v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  unsigned __int8 v92;
  _BYTE v93[7];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  unsigned __int8 v102;
  _BYTE v103[11];
  __int16 v104;
  char v105;
  int v106;
  __int16 v107;
  uint64_t v108;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAC08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = 1;
  v9 = a1[3];
  v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_20A19BB54();
  v64 = v8;
  sub_20A1A9348();
  if (v2)
  {
    v108 = 0;
    v65 = 0;
    v67 = 0;
    v11 = 0;
    v12 = 0;
    v21 = 0;
    v13 = -1;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A19BAF4(v21, v12, v11, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v63 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FF8);
  LOBYTE(v68) = 0;
  sub_20A19BDA4(&qword_2545DA030, (uint64_t (*)(void))sub_20A17A6A8, MEMORY[0x24BEE12D0]);
  sub_20A1A91B0();
  v10 = v5;
  v15 = v77;
  LOBYTE(v68) = 1;
  swift_bridgeObjectRetain();
  sub_20A1A91B0();
  v61 = v15;
  v16 = v77;
  LOBYTE(v68) = 2;
  swift_bridgeObjectRetain();
  sub_20A1A91B0();
  v60 = v16;
  v17 = (void *)v77;
  LOBYTE(v68) = 3;
  sub_20A19BB98();
  swift_bridgeObjectRetain();
  sub_20A1A91B0();
  v18 = v77;
  LOBYTE(v68) = 4;
  sub_20A19BBDC();
  sub_20A1A91B0();
  v19 = v77;
  LOBYTE(v68) = 5;
  sub_20A19BC20();
  sub_20A1A9180();
  v59 = v77;
  v58 = v78;
  v20 = BYTE1(v78);
  v105 = BYTE1(v78);
  sub_20A199B70((uint64_t)&v77);
  v53 = v20;
  v54 = v19;
  v55 = v17;
  v21 = v77;
  v22 = v80;
  LOBYTE(v77) = 7;
  v56 = v79;
  v57 = v78;
  sub_20A19BAB4(v21, v78, v79, v80);
  v23 = sub_20A1A9168();
  v62 = 0;
  v52 = v23;
  v51 = v18;
  v25 = v22;
  LOBYTE(v77) = 8;
  v26 = v24;
  swift_bridgeObjectRetain();
  v27 = v62;
  v28 = sub_20A1A9168();
  v67 = v26;
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v10);
    swift_bridgeObjectRelease();
    v11 = v56;
    v12 = v57;
    v13 = v25;
    sub_20A19BAF4(v21, v57, v56, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v108 = 0;
    v65 = 0;
    goto LABEL_4;
  }
  v30 = v28;
  v50 = v21;
  LOBYTE(v77) = 9;
  v31 = v29;
  swift_bridgeObjectRetain();
  v32 = v10;
  v33 = sub_20A1A9168();
  v108 = v34;
  v62 = 0;
  v65 = v31;
  v35 = v33;
  v101 = 10;
  sub_20A17A6EC();
  swift_bridgeObjectRetain();
  v36 = v62;
  sub_20A1A91B0();
  v62 = v36;
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v50;
    v11 = v56;
    v12 = v57;
    v13 = v25;
    sub_20A19BAF4(v50, v57, v56, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v32);
  LODWORD(v64) = v102;
  v37 = v61;
  *(_QWORD *)&v68 = v61;
  *((_QWORD *)&v68 + 1) = v60;
  *(_QWORD *)&v69 = v55;
  BYTE8(v69) = v51;
  BYTE9(v69) = v54;
  *(_QWORD *)&v70 = v59;
  BYTE8(v70) = v58;
  BYTE9(v70) = v53;
  v38 = v50;
  *(_QWORD *)&v71 = v50;
  *((_QWORD *)&v71 + 1) = v57;
  *(_QWORD *)&v72 = v56;
  v39 = v25;
  BYTE8(v72) = v25;
  *(_QWORD *)&v73 = v52;
  *((_QWORD *)&v73 + 1) = v67;
  v48 = v35;
  v49 = v30;
  *(_QWORD *)&v74 = v30;
  *((_QWORD *)&v74 + 1) = v31;
  *(_QWORD *)&v75 = v35;
  *((_QWORD *)&v75 + 1) = v108;
  v76 = v102;
  sub_20A19BC64((uint64_t)&v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = v56;
  v41 = v57;
  sub_20A19BAF4(v38, v57, v56, v39);
  swift_bridgeObjectRelease();
  v42 = v60;
  swift_bridgeObjectRelease();
  v43 = v55;
  swift_bridgeObjectRelease();
  v44 = v75;
  *(_OWORD *)(a2 + 96) = v74;
  *(_OWORD *)(a2 + 112) = v44;
  *(_BYTE *)(a2 + 128) = v76;
  v45 = v71;
  *(_OWORD *)(a2 + 32) = v70;
  *(_OWORD *)(a2 + 48) = v45;
  v46 = v73;
  *(_OWORD *)(a2 + 64) = v72;
  *(_OWORD *)(a2 + 80) = v46;
  v47 = v69;
  *(_OWORD *)a2 = v68;
  *(_OWORD *)(a2 + 16) = v47;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  v77 = v37;
  v78 = v42;
  v79 = v43;
  v80 = v51;
  v81 = v54;
  v82 = v106;
  v83 = v107;
  v84 = v59;
  v85 = v58;
  v86 = v105;
  v87 = *(_DWORD *)&v103[7];
  v88 = v104;
  v89 = v38;
  v90 = v41;
  v91 = v40;
  v92 = v39;
  *(_DWORD *)&v93[3] = *(_DWORD *)&v103[3];
  *(_DWORD *)v93 = *(_DWORD *)v103;
  v94 = v52;
  v95 = v67;
  v96 = v49;
  v97 = v65;
  v98 = v48;
  v99 = v108;
  v100 = (char)v64;
  return sub_20A19BD04((uint64_t)&v77);
}

void sub_20A199B70(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned __int8 v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAC08);
  sub_20A19D638();
  sub_20A1A9180();
  if (!v1)
  {
    if (v10 == 255)
    {
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 24) = -1;
    }
    else if ((v10 & 1) != 0)
    {
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = v8;
      if (v9)
      {
        *(_QWORD *)(a1 + 16) = v9;
        *(_BYTE *)(a1 + 24) = 1;
        swift_bridgeObjectRetain();
        v3 = v9;
        v4 = v7;
        v5 = v8;
        v6 = v9;
      }
      else
      {
        *(_QWORD *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 24) = 1;
        swift_bridgeObjectRetain();
        v4 = v7;
        v5 = v8;
        v6 = 0;
      }
      sub_20A19BAF4(v4, v5, v6, v10);
    }
    else
    {
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 24) = 0;
    }
  }
}

void DigitalPresentmentDisplayConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unsigned __int8 v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  _QWORD v44[3];
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  __int16 v52;
  uint64_t v53;
  char v54;
  char v55;
  int v56;
  __int16 v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char v61;
  _BYTE v62[7];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAC30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v70 = v3[1];
  v43 = v3[2];
  v42 = *((unsigned __int8 *)v3 + 24);
  v41 = *((unsigned __int8 *)v3 + 25);
  v37 = v3[4];
  v36 = *((unsigned __int8 *)v3 + 40);
  v38 = *((unsigned __int8 *)v3 + 41);
  v27 = v3[6];
  v28 = v3[7];
  v29 = (void *)v3[8];
  v35 = *((unsigned __int8 *)v3 + 72);
  v40 = v3[10];
  v39 = v3[11];
  v33 = v3[12];
  v32 = v3[13];
  v31 = v3[14];
  v30 = v3[15];
  v34 = *((unsigned __int8 *)v3 + 128);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A19BB54();
  sub_20A1A9354();
  v46 = v9;
  LOBYTE(v44[0]) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9FF8);
  sub_20A19BDA4(&qword_2545DA000, (uint64_t (*)(void))sub_20A17A5DC, MEMORY[0x24BEE12A0]);
  sub_20A1A9228();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v25 = v9;
    v26 = v6;
    v10 = v70;
    v46 = v70;
    LOBYTE(v44[0]) = 1;
    sub_20A1A9228();
    v11 = v43;
    v46 = v43;
    LOBYTE(v44[0]) = 2;
    sub_20A1A9228();
    v12 = v42;
    LOBYTE(v46) = v42 & 1;
    LOBYTE(v44[0]) = 3;
    sub_20A19BE0C();
    sub_20A1A9228();
    LOBYTE(v46) = v41 & 1;
    LOBYTE(v44[0]) = 4;
    sub_20A19BE50();
    sub_20A1A9228();
    v13 = v35;
    if (v35 == 255)
    {
      v20 = v34;
      v19 = v26;
    }
    else
    {
      v14 = (_DWORD *)((char *)v3 + 73);
      v46 = v25;
      v47 = v10;
      v48 = v11;
      v49 = v12;
      v50 = v41;
      v51 = *(_DWORD *)((char *)v3 + 26);
      v52 = *((_WORD *)v3 + 15);
      v53 = v37;
      v54 = v36;
      v55 = v38;
      v56 = *(_DWORD *)((char *)v3 + 42);
      v57 = *((_WORD *)v3 + 23);
      v15 = v27;
      v16 = v28;
      v58 = v27;
      v59 = v28;
      v17 = v29;
      v60 = v29;
      v61 = v35;
      *(_DWORD *)v62 = *v14;
      *(_DWORD *)&v62[3] = *(_DWORD *)((char *)v14 + 3);
      v63 = v40;
      v64 = v39;
      v65 = v33;
      v66 = v32;
      v67 = v31;
      v68 = v30;
      v18 = v34;
      v69 = v34;
      v44[0] = v27;
      v44[1] = v28;
      v44[2] = v29;
      v45 = v35 & 1;
      sub_20A19BACC(v27, v28, v29, v35 & 1);
      sub_20A19A29C((uint64_t)v8, (uint64_t)v44);
      sub_20A19BAF4(v15, v16, v17, v13);
      v19 = v26;
      v20 = v18;
    }
    v21 = v38;
    v22 = v37;
    v23 = v36;
    LOBYTE(v46) = 7;
    sub_20A1A91E0();
    v46 = v22;
    LOBYTE(v47) = v23;
    BYTE1(v47) = v21 & 1;
    LOBYTE(v44[0]) = 5;
    sub_20A19BE94();
    sub_20A1A91F8();
    LOBYTE(v46) = 8;
    sub_20A1A91E0();
    LOBYTE(v46) = 9;
    sub_20A1A91E0();
    LOBYTE(v46) = v20 & 1;
    LOBYTE(v44[0]) = 10;
    sub_20A17A620();
    sub_20A1A9228();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
  }
}

void sub_20A19A29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int v11;
  id v12;
  _QWORD v13[3];
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAC30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(void **)(a2 + 16);
  v11 = *(unsigned __int8 *)(a2 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v11 == 1)
  {
    swift_bridgeObjectRetain();
    if (v10)
      v12 = v10;
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  v13[0] = v8;
  v13[1] = v9;
  v13[2] = v10;
  v14 = v11;
  v15 = 6;
  sub_20A19D5F4();
  sub_20A1A9228();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_20A19BB0C(v8, v9, v10, v11);
}

void sub_20A19A3D4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAD18);
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v21 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAD20);
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAD28);
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v25 = v1[1];
  v26 = v11;
  v24 = (id)v1[2];
  v12 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A19D9C8();
  sub_20A1A9354();
  if (v12 == 1)
  {
    v13 = v8;
    v33 = 1;
    sub_20A19DA0C();
    v14 = v24;
    v15 = v21;
    v16 = v28;
    sub_20A1A91D4();
    v32 = 0;
    v17 = v23;
    v18 = v27;
    sub_20A1A9204();
    if (v18)
    {

      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v17);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v16);
    }
    else
    {
      v29 = v24;
      v31 = 1;
      sub_20A19DA50();
      sub_20A1A91F8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v17);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v16);

    }
  }
  else
  {
    v30 = 0;
    sub_20A19DA94();
    v19 = v28;
    sub_20A1A91D4();
    sub_20A1A91E0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  }
}

uint64_t sub_20A19A69C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v40 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAD50);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAD58);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAD60);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_20A19D9C8();
  v13 = v45;
  sub_20A1A9348();
  if (!v13)
  {
    v39 = v5;
    v14 = v4;
    v15 = v42;
    v16 = v43;
    v45 = v9;
    v17 = sub_20A1A91C8();
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      v18 = *(_BYTE *)(v17 + 32);
      if ((v18 & 1) != 0)
      {
        v39 = v17;
        v50 = 1;
        sub_20A19DA0C();
        v19 = v15;
        sub_20A1A9150();
        v49 = 0;
        v20 = v16;
        v21 = sub_20A1A918C();
        v28 = v27;
        v29 = v21;
        v48 = 1;
        sub_20A19DAD8();
        v30 = v19;
        sub_20A1A9180();
        v31 = v45;
        v38 = v28;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
        v33 = v46;
        v34 = v29;
      }
      else
      {
        LODWORD(v43) = *(unsigned __int8 *)(v17 + 32);
        v47 = 0;
        sub_20A19DA94();
        v26 = v7;
        sub_20A1A9150();
        v34 = sub_20A1A9168();
        v38 = v32;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
        v33 = 0;
        v18 = v43;
      }
      v35 = v40;
      v36 = v38;
      *v40 = v34;
      v35[1] = v36;
      v35[2] = v33;
      *((_BYTE *)v35 + 24) = v18;
    }
    else
    {
      v22 = sub_20A1A90B4();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8190);
      *v24 = &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable;
      sub_20A1A915C();
      sub_20A1A90A8();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
}

uint64_t sub_20A19AAF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DigitalPresentmentDisplayConfiguration.init(from:)(a1, a2);
}

void sub_20A19AB04(_QWORD *a1)
{
  DigitalPresentmentDisplayConfiguration.encode(to:)(a1);
}

unint64_t sub_20A19AB18()
{
  return 0xD000000000000014;
}

uint64_t sub_20A19AB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A19DB1C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20A19AB5C()
{
  sub_20A19DA94();
  return sub_20A1A9360();
}

uint64_t sub_20A19AB84()
{
  sub_20A19DA94();
  return sub_20A1A936C();
}

uint64_t sub_20A19ABAC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D6F74737563;
  else
    return 0x617242656C707061;
}

uint64_t sub_20A19ABEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A19DBA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A19AC10()
{
  sub_20A19D9C8();
  return sub_20A1A9360();
}

uint64_t sub_20A19AC38()
{
  sub_20A19D9C8();
  return sub_20A1A936C();
}

uint64_t sub_20A19AC60()
{
  _BYTE *v0;

  if (*v0)
    return 0x49656C6261646F63;
  else
    return 1701667182;
}

uint64_t sub_20A19AC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A19DCA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A19ACC0()
{
  sub_20A19DA0C();
  return sub_20A1A9360();
}

uint64_t sub_20A19ACE8()
{
  sub_20A19DA0C();
  return sub_20A1A936C();
}

uint64_t sub_20A19AD10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A19A69C(a1, a2);
}

void sub_20A19AD24(_QWORD *a1)
{
  sub_20A19A3D4(a1);
}

BOOL static DigitalPresentmentDisplayConfiguration.StringID.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DigitalPresentmentDisplayConfiguration.StringID.hash(into:)()
{
  return sub_20A1A9318();
}

uint64_t DigitalPresentmentDisplayConfiguration.StringID.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t DigitalPresentmentDisplayConfiguration.clientDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  id v5;
  void *v6;

  v1 = sub_20A1A8CDC();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_20A1A8D90();
  MEMORY[0x24BDAC7A8](v2);
  v3 = 0;
  v4 = *(unsigned __int8 *)(v0 + 72);
  if (v4 != 255)
  {
    if ((v4 & 1) != 0)
    {
      v3 = *(_QWORD *)(v0 + 48);
      v6 = *(void **)(v0 + 64);
      sub_20A19BACC(v3, *(_QWORD *)(v0 + 56), v6, 1);

    }
    else
    {
      sub_20A1A8D84();
      if (qword_2545D80F0 != -1)
        swift_once();
      v5 = (id)qword_2545F54F0;
      sub_20A1A8CD0();
      return sub_20A1A8DC0();
    }
  }
  return v3;
}

void static DigitalPresentmentDisplayConfiguration.getString(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_20A1A8CDC();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_20A1A8D90();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

uint64_t sub_20A19AFBC()
{
  id v0;

  sub_20A1A8D84();
  if (qword_2545D80F0 != -1)
    swift_once();
  v0 = (id)qword_2545F54F0;
  sub_20A1A8CD0();
  return sub_20A1A8DC0();
}

BOOL sub_20A19B18C(char *a1, char *a2)
{
  return qword_20A1B81E0[*a1] == qword_20A1B81E0[*a2];
}

uint64_t sub_20A19B1B0()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A19B1FC()
{
  return sub_20A1A9318();
}

uint64_t sub_20A19B230()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

uint64_t sub_20A19B278@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_20A19DD98(*a1);
  *a2 = result;
  return result;
}

void sub_20A19B2A0(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_20A1B81E0[*v1];
}

unint64_t sub_20A19B2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v17;
  char v18;
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;
  uint64_t v23;
  unint64_t v24;

  v7 = sub_20A1A8DB4();
  v9 = v8;
  v23 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v22 = a2;
  *((_QWORD *)&v22 + 1) = a3;
  sub_20A12CF20(&v22, v21);
  swift_bridgeObjectRetain();
  v10 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = 0x8000000000000000;
  sub_20A12C39C(v21, v7, v9, isUniquelyReferenced_nonNull_native);
  v24 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_20A1A8DB4();
  v14 = v12;
  v15 = v13;
  if (a4)
  {
    swift_getErrorValue();
    v23 = v20;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v22);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_0);
    sub_20A12CF20(&v22, v21);
    v17 = v24;
    v18 = swift_isUniquelyReferenced_nonNull_native();
    v24 = 0x8000000000000000;
    sub_20A12C39C(v21, v14, v15, v18);
    v24 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A12C0D8(v12, v13, &v22);
    swift_bridgeObjectRelease();
    sub_20A12FE34((uint64_t)&v22);
  }
  return v24;
}

uint64_t sub_20A19B450()
{
  return 0x726F727245504944;
}

uint64_t sub_20A19B468()
{
  char *v0;

  return qword_20A1B81E0[*v0];
}

unint64_t sub_20A19B47C(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A19B2B8(a1, v1[1], v1[2], v1[3]);
}

uint64_t sub_20A19B488()
{
  sub_20A19CF60();
  return sub_20A1A92B8();
}

uint64_t sub_20A19B4B0()
{
  sub_20A19CF60();
  return sub_20A1A92AC();
}

unint64_t sub_20A19B4D8()
{
  unint64_t result;

  result = qword_2545DAB90;
  if (!qword_2545DAB90)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7CF0, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAB90);
  }
  return result;
}

unint64_t sub_20A19B51C()
{
  unint64_t result;

  result = qword_2545DAB98;
  if (!qword_2545DAB98)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7CA0, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.LimitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAB98);
  }
  return result;
}

unint64_t sub_20A19B560()
{
  unint64_t result;

  result = qword_2545DABA0;
  if (!qword_2545DABA0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7C50, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.IndefinitelyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DABA0);
  }
  return result;
}

BOOL _s7CoreIDV38DigitalPresentmentDisplayConfigurationV06ClientE4InfoO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  BOOL v10;
  id v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  id v20;
  char v21;
  id v22;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(void **)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  if (v5 == 1)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v10 = v2 == v6 && v3 == v7;
      if (v10 || (sub_20A1A9258() & 1) != 0)
      {
        if (!v4)
        {
          v12 = 1;
          sub_20A19BACC(v6, v7, v8, 1);
          sub_20A19BACC(v2, v3, 0, 1);
          v20 = v8;
          sub_20A19BB0C(v2, v3, 0, 1);
          sub_20A19BB0C(v6, v7, v8, 1);
          if (!v8)
            return v12;

          return 0;
        }
        if (v8)
        {
          type metadata accessor for CGImage(0);
          v11 = v4;
          v12 = 1;
          sub_20A19BACC(v6, v7, v8, 1);
          sub_20A19BACC(v2, v3, v4, 1);
          sub_20A19D67C();
          v22 = v8;
          v13 = v11;
          v14 = sub_20A1A8CE8();
          sub_20A19BB0C(v2, v3, v4, 1);
          sub_20A19BB0C(v6, v7, v8, 1);

          if ((v14 & 1) != 0)
            return v12;
          return 0;
        }
        sub_20A19BACC(v6, v7, 0, 1);
        sub_20A19BACC(v2, v3, v4, 1);
        sub_20A19BB0C(v2, v3, v4, 1);
        v15 = v6;
        v16 = v7;
        v17 = 0;
        v18 = 1;
      }
      else
      {
        sub_20A19BACC(v6, v7, v8, 1);
        sub_20A19BACC(v2, v3, v4, 1);
        sub_20A19BB0C(v2, v3, v4, 1);
        v15 = v6;
        v16 = v7;
        v17 = v8;
        v18 = 1;
      }
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
  {
LABEL_13:
    sub_20A19BACC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, v9);
    sub_20A19BACC(v2, v3, v4, v5);
    sub_20A19BB0C(v2, v3, v4, v5);
    v15 = v6;
    v16 = v7;
    v17 = v8;
    v18 = v9;
LABEL_14:
    sub_20A19BB0C(v15, v16, v17, v18);
    return 0;
  }
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_20A19BACC(v6, v7, v8, 0);
    sub_20A19BACC(v2, 0, v4, 0);
    sub_20A19BB0C(v2, 0, v4, 0);
    sub_20A19BB0C(v6, v7, v8, 0);
    if (!v7)
      return 1;
LABEL_28:
    sub_20A19BB0C(v2, v3, v4, 0);
    v15 = v6;
    v16 = v7;
    v17 = v8;
    v18 = 0;
    goto LABEL_14;
  }
  if (!v7)
  {
    sub_20A19BACC(*(_QWORD *)a2, 0, v8, 0);
    sub_20A19BACC(v2, v3, v4, 0);
    goto LABEL_28;
  }
  if (v2 == v6 && v3 == v7)
  {
    sub_20A19BACC(*(_QWORD *)a1, v3, v8, 0);
    sub_20A19BACC(v2, v3, v4, 0);
    sub_20A19BB0C(v2, v3, v4, 0);
    sub_20A19BB0C(v2, v3, v8, 0);
    return 1;
  }
  v21 = sub_20A1A9258();
  sub_20A19BACC(v6, v7, v8, 0);
  sub_20A19BACC(v2, v3, v4, 0);
  sub_20A19BB0C(v2, v3, v4, 0);
  sub_20A19BB0C(v6, v7, v8, 0);
  return (v21 & 1) != 0;
}

unint64_t sub_20A19B9E8()
{
  unint64_t result;

  result = qword_2545DABD8;
  if (!qword_2545DABD8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7C00, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DABD8);
  }
  return result;
}

unint64_t sub_20A19BA2C()
{
  unint64_t result;

  result = qword_2545DABE0;
  if (!qword_2545DABE0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7BB0, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.TransactionElementDetailsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DABE0);
  }
  return result;
}

unint64_t sub_20A19BA70()
{
  unint64_t result;

  result = qword_2545DABE8;
  if (!qword_2545DABE8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7B60, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.ConsentSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DABE8);
  }
  return result;
}

uint64_t sub_20A19BAB4(uint64_t result, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_20A19BACC(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_20A19BACC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v4;

  if ((a4 & 1) != 0)
    v4 = a3;
  return swift_bridgeObjectRetain();
}

void sub_20A19BAF4(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255)
    sub_20A19BB0C(a1, a2, a3, a4 & 1);
}

void sub_20A19BB0C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)

}

unint64_t sub_20A19BB54()
{
  unint64_t result;

  result = qword_2545DAC10;
  if (!qword_2545DAC10)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7B10, &type metadata for DigitalPresentmentDisplayConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC10);
  }
  return result;
}

unint64_t sub_20A19BB98()
{
  unint64_t result;

  result = qword_2545DAC18;
  if (!qword_2545DAC18)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentPresentmentSource, &type metadata for IdentityDocumentPresentmentSource);
    atomic_store(result, (unint64_t *)&qword_2545DAC18);
  }
  return result;
}

unint64_t sub_20A19BBDC()
{
  unint64_t result;

  result = qword_2545DAC20;
  if (!qword_2545DAC20)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration.PresentationStyle, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_2545DAC20);
  }
  return result;
}

unint64_t sub_20A19BC20()
{
  unint64_t result;

  result = qword_2545DAC28;
  if (!qword_2545DAC28)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime);
    atomic_store(result, (unint64_t *)&qword_2545DAC28);
  }
  return result;
}

uint64_t sub_20A19BC64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(void **)(a1 + 64);
  v5 = *(_BYTE *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A19BAB4(v2, v3, v4, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A19BD04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(void **)(a1 + 64);
  v5 = *(_BYTE *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A19BAF4(v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A19BDA4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545D9FF8);
    v8 = a2();
    result = MEMORY[0x20BD21434](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A19BE0C()
{
  unint64_t result;

  result = qword_2545DAC38;
  if (!qword_2545DAC38)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for IdentityDocumentPresentmentSource, &type metadata for IdentityDocumentPresentmentSource);
    atomic_store(result, (unint64_t *)&qword_2545DAC38);
  }
  return result;
}

unint64_t sub_20A19BE50()
{
  unint64_t result;

  result = qword_2545DAC40;
  if (!qword_2545DAC40)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration.PresentationStyle, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_2545DAC40);
  }
  return result;
}

unint64_t sub_20A19BE94()
{
  unint64_t result;

  result = qword_2545DAC48;
  if (!qword_2545DAC48)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime);
    atomic_store(result, (unint64_t *)&qword_2545DAC48);
  }
  return result;
}

unint64_t sub_20A19BEDC()
{
  unint64_t result;

  result = qword_2545DAC50;
  if (!qword_2545DAC50)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration.PresentationStyle, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_2545DAC50);
  }
  return result;
}

unint64_t sub_20A19BF24()
{
  unint64_t result;

  result = qword_2545DAC58;
  if (!qword_2545DAC58)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for DigitalPresentmentDisplayConfiguration.StringID, &type metadata for DigitalPresentmentDisplayConfiguration.StringID);
    atomic_store(result, (unint64_t *)&qword_2545DAC58);
  }
  return result;
}

uint64_t destroy for DigitalPresentmentDisplayConfiguration(uint64_t a1)
{
  int v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 72);
  if (v2 != 255)
    sub_20A19BB0C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64), v2 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DigitalPresentmentDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v5 = *(unsigned __int8 *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  else
  {
    v6 = v5 & 1;
    v7 = *(_QWORD *)(a2 + 48);
    v8 = *(_QWORD *)(a2 + 56);
    v9 = *(void **)(a2 + 64);
    sub_20A19BACC(v7, v8, v9, v6);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v9;
    *(_BYTE *)(a1 + 72) = v6;
  }
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DigitalPresentmentDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v4 = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = (__int128 *)(a1 + 48);
  v6 = (__int128 *)(a2 + 48);
  v7 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v7 == 255)
    {
      v9 = *v6;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *v5 = v9;
    }
    else
    {
      v18 = v7 & 1;
      v19 = *(_QWORD *)(a2 + 48);
      v20 = *(_QWORD *)(a2 + 56);
      v21 = *(void **)(a2 + 64);
      sub_20A19BACC(v19, v20, v21, v7 & 1);
      *(_QWORD *)(a1 + 48) = v19;
      *(_QWORD *)(a1 + 56) = v20;
      *(_QWORD *)(a1 + 64) = v21;
      *(_BYTE *)(a1 + 72) = v18;
    }
  }
  else if (v7 == 255)
  {
    sub_20A19C294(a1 + 48);
    v8 = *(_OWORD *)(a2 + 57);
    *v5 = *v6;
    *(_OWORD *)(a1 + 57) = v8;
  }
  else
  {
    v10 = v7 & 1;
    v11 = *(_QWORD *)(a2 + 48);
    v12 = *(_QWORD *)(a2 + 56);
    v13 = *(void **)(a2 + 64);
    sub_20A19BACC(v11, v12, v13, v7 & 1);
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56);
    v16 = *(void **)(a1 + 64);
    v17 = *(_BYTE *)(a1 + 72);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v13;
    *(_BYTE *)(a1 + 72) = v10;
    sub_20A19BB0C(v14, v15, v16, v17);
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t sub_20A19C294(uint64_t a1)
{
  sub_20A19BB0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for DigitalPresentmentDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(unsigned __int8 *)(a1 + 72);
  if (v4 != 255)
  {
    v5 = *(unsigned __int8 *)(a2 + 72);
    if (v5 != 255)
    {
      v6 = v4 & 1;
      v7 = *(_QWORD *)(a2 + 64);
      v8 = *(_QWORD *)(a1 + 48);
      v9 = *(_QWORD *)(a1 + 56);
      v10 = *(void **)(a1 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = v7;
      *(_BYTE *)(a1 + 72) = v5 & 1;
      sub_20A19BB0C(v8, v9, v10, v6);
      goto LABEL_6;
    }
    sub_20A19C294(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
LABEL_6:
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentDisplayConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentDisplayConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime;
}

void destroy for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo(uint64_t a1)
{
  sub_20A19BB0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_20A19D6D0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_20A19BACC);
}

uint64_t *assignWithCopy for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_20A19D744(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_20A19BACC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_20A19BB0C);
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A19D7C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_20A19BB0C);
}

uint64_t sub_20A19C538(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_20A19C540(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PresentationStyle()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentDisplayConfiguration.StringID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentDisplayConfiguration.StringID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_20A19C64C + 4 * byte_20A1B7309[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_20A19C680 + 4 * byte_20A1B7304[v4]))();
}

uint64_t sub_20A19C680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19C688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A19C690);
  return result;
}

uint64_t sub_20A19C69C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A19C6A4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_20A19C6A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19C6B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.StringID()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.StringID;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentDisplayConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentDisplayConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_20A19C7A8 + 4 * byte_20A1B7313[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_20A19C7DC + 4 * byte_20A1B730E[v4]))();
}

uint64_t sub_20A19C7DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19C7E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A19C7ECLL);
  return result;
}

uint64_t sub_20A19C7F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A19C800);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_20A19C804(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19C80C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.CodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PresentationStyle.CodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PresentationStyle.ConsentSheetCodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.ConsentSheetCodingKeys;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PresentationStyle.TransactionElementDetailsCodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.TransactionElementDetailsCodingKeys;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.CodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.CodingKeys;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.IndefinitelyCodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.IndefinitelyCodingKeys;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.LimitCodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.LimitCodingKeys;
}

void destroy for DIPError(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for DIPError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 24);
  swift_bridgeObjectRetain();
  v5 = v4;
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for DIPError(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a2 + 24);
  v6 = v5;
  *(_QWORD *)(a1 + 24) = v5;

  return a1;
}

uint64_t assignWithTake for DIPError(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for DIPError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPError()
{
  return &type metadata for DIPError;
}

unint64_t sub_20A19CA54()
{
  unint64_t result;

  result = qword_2545DAC60;
  if (!qword_2545DAC60)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B77D0, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.LimitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC60);
  }
  return result;
}

unint64_t sub_20A19CA9C()
{
  unint64_t result;

  result = qword_2545DAC68;
  if (!qword_2545DAC68)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B78D8, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC68);
  }
  return result;
}

unint64_t sub_20A19CAE4()
{
  unint64_t result;

  result = qword_2545DAC70;
  if (!qword_2545DAC70)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7A30, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC70);
  }
  return result;
}

unint64_t sub_20A19CB2C()
{
  unint64_t result;

  result = qword_2545DAC78;
  if (!qword_2545DAC78)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7AE8, &type metadata for DigitalPresentmentDisplayConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC78);
  }
  return result;
}

unint64_t sub_20A19CB74()
{
  unint64_t result;

  result = qword_2545DAC80;
  if (!qword_2545DAC80)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7A58, &type metadata for DigitalPresentmentDisplayConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC80);
  }
  return result;
}

unint64_t sub_20A19CBBC()
{
  unint64_t result;

  result = qword_2545DAC88;
  if (!qword_2545DAC88)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7A80, &type metadata for DigitalPresentmentDisplayConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC88);
  }
  return result;
}

unint64_t sub_20A19CC04()
{
  unint64_t result;

  result = qword_2545DAC90;
  if (!qword_2545DAC90)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7950, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.ConsentSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC90);
  }
  return result;
}

unint64_t sub_20A19CC4C()
{
  unint64_t result;

  result = qword_2545DAC98;
  if (!qword_2545DAC98)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7978, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.ConsentSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAC98);
  }
  return result;
}

unint64_t sub_20A19CC94()
{
  unint64_t result;

  result = qword_2545DACA0;
  if (!qword_2545DACA0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7900, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.TransactionElementDetailsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACA0);
  }
  return result;
}

unint64_t sub_20A19CCDC()
{
  unint64_t result;

  result = qword_2545DACA8;
  if (!qword_2545DACA8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7928, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.TransactionElementDetailsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACA8);
  }
  return result;
}

unint64_t sub_20A19CD24()
{
  unint64_t result;

  result = qword_2545DACB0;
  if (!qword_2545DACB0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B79A0, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACB0);
  }
  return result;
}

unint64_t sub_20A19CD6C()
{
  unint64_t result;

  result = qword_2545DACB8;
  if (!qword_2545DACB8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B79C8, &type metadata for DigitalPresentmentDisplayConfiguration.PresentationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACB8);
  }
  return result;
}

unint64_t sub_20A19CDB4()
{
  unint64_t result;

  result = qword_2545DACC0;
  if (!qword_2545DACC0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B77F8, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.IndefinitelyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACC0);
  }
  return result;
}

unint64_t sub_20A19CDFC()
{
  unint64_t result;

  result = qword_2545DACC8;
  if (!qword_2545DACC8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7820, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.IndefinitelyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACC8);
  }
  return result;
}

unint64_t sub_20A19CE44()
{
  unint64_t result;

  result = qword_2545DACD0;
  if (!qword_2545DACD0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7740, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.LimitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACD0);
  }
  return result;
}

unint64_t sub_20A19CE8C()
{
  unint64_t result;

  result = qword_2545DACD8;
  if (!qword_2545DACD8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7768, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.LimitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACD8);
  }
  return result;
}

unint64_t sub_20A19CED4()
{
  unint64_t result;

  result = qword_2545DACE0;
  if (!qword_2545DACE0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7848, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACE0);
  }
  return result;
}

unint64_t sub_20A19CF1C()
{
  unint64_t result;

  result = qword_2545DACE8;
  if (!qword_2545DACE8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7870, &type metadata for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DACE8);
  }
  return result;
}

unint64_t sub_20A19CF60()
{
  unint64_t result;

  result = qword_2545DACF0;
  if (!qword_2545DACF0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7700, &type metadata for DIPError);
    atomic_store(result, (unint64_t *)&qword_2545DACF0);
  }
  return result;
}

uint64_t sub_20A19CFA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696E696665646E69 && a2 == 0xEC000000796C6574;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A19D0A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53746E65736E6F63 && a2 == 0xEC00000074656568;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000020A1BE750)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A19D1A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A1BE110 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BE770 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BE790 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A1BE7B0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A1BE7D0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4979616C70736964 && a2 == 0xEB000000006F666ELL || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x444973736170 && a2 == 0xE600000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A1BE7F0 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x656D614E73736170 && a2 == 0xE800000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

unint64_t sub_20A19D5F4()
{
  unint64_t result;

  result = qword_2545DACF8;
  if (!qword_2545DACF8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7E60, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable);
    atomic_store(result, (unint64_t *)&qword_2545DACF8);
  }
  return result;
}

unint64_t sub_20A19D638()
{
  unint64_t result;

  result = qword_2545DAD00;
  if (!qword_2545DAD00)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7E38, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable);
    atomic_store(result, (unint64_t *)&qword_2545DAD00);
  }
  return result;
}

unint64_t sub_20A19D67C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545DAD08;
  if (!qword_2545DAD08)
  {
    type metadata accessor for CGImage(255);
    result = MEMORY[0x20BD21434](&unk_20A1AC0D4, v1);
    atomic_store(result, (unint64_t *)&qword_2545DAD08);
  }
  return result;
}

uint64_t initializeWithCopy for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_20A19D6D0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_20A19E200);
}

uint64_t sub_20A19D6D0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  return a1;
}

uint64_t *assignWithCopy for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_20A19D744(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_20A19E200, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_20A19E1FC);
}

uint64_t *sub_20A19D744(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = *((unsigned __int8 *)a1 + 24);
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  *((_BYTE *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A19D7C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_20A19E1FC);
}

uint64_t *sub_20A19D7C4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *a1;
  v10 = a1[1];
  v9 = a1[2];
  v11 = *((unsigned __int8 *)a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  *((_BYTE *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

uint64_t _s7CoreIDV38DigitalPresentmentDisplayConfigurationV17ClientDisplayInfoOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s7CoreIDV38DigitalPresentmentDisplayConfigurationV17ClientDisplayInfoOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable;
}

uint64_t storeEnumTagSinglePayload for DIPError.Code(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A19D900 + 4 * byte_20A1B731D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A19D934 + 4 * byte_20A1B7318[v4]))();
}

uint64_t sub_20A19D934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19D93C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A19D944);
  return result;
}

uint64_t sub_20A19D950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A19D958);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A19D95C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19D964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DIPError.Code()
{
  return &type metadata for DIPError.Code;
}

unint64_t sub_20A19D984()
{
  unint64_t result;

  result = qword_2545DAD10;
  if (!qword_2545DAD10)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7E10, &type metadata for DIPError.Code);
    atomic_store(result, (unint64_t *)&qword_2545DAD10);
  }
  return result;
}

unint64_t sub_20A19D9C8()
{
  unint64_t result;

  result = qword_2545DAD30;
  if (!qword_2545DAD30)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B818C, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD30);
  }
  return result;
}

unint64_t sub_20A19DA0C()
{
  unint64_t result;

  result = qword_2545DAD38;
  if (!qword_2545DAD38)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B813C, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD38);
  }
  return result;
}

unint64_t sub_20A19DA50()
{
  unint64_t result;

  result = qword_2545DAD40;
  if (!qword_2545DAD40)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for CGImageCodable, &type metadata for CGImageCodable);
    atomic_store(result, (unint64_t *)&qword_2545DAD40);
  }
  return result;
}

unint64_t sub_20A19DA94()
{
  unint64_t result;

  result = qword_2545DAD48;
  if (!qword_2545DAD48)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B80EC, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.AppleBrandedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD48);
  }
  return result;
}

unint64_t sub_20A19DAD8()
{
  unint64_t result;

  result = qword_2545DAD68;
  if (!qword_2545DAD68)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for CGImageCodable, &type metadata for CGImageCodable);
    atomic_store(result, (unint64_t *)&qword_2545DAD68);
  }
  return result;
}

uint64_t sub_20A19DB1C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x800000020A1BC8B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20A19DBA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617242656C707061 && a2 == 0xEC0000006465646ELL;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6F74737563 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A19DCA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C6261646F63 && a2 == 0xEC0000006567616DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A19DD98(uint64_t a1)
{
  if (a1 > -15010)
  {
    if (a1 != -15009)
    {
      if (a1 == -1302)
        return 2;
      return 4;
    }
    return 0;
  }
  else
  {
    if (a1 != -18084)
    {
      if (a1 == -15032)
        return 1;
      return 4;
    }
    return 3;
  }
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CodingKeys;
}

uint64_t _s7CoreIDV38DigitalPresentmentDisplayConfigurationV32PersistedElementsStorageLifetimeO15LimitCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A19DE48 + 4 * byte_20A1B7322[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A19DE68 + 4 * byte_20A1B7327[v4]))();
}

_BYTE *sub_20A19DE48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A19DE68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A19DE70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A19DE78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A19DE80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A19DE88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.AppleBrandedCodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.AppleBrandedCodingKeys;
}

uint64_t _s7CoreIDV38DigitalPresentmentDisplayConfigurationV17PresentationStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A19DEF0 + 4 * byte_20A1B7331[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A19DF24 + 4 * byte_20A1B732C[v4]))();
}

uint64_t sub_20A19DF24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19DF2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A19DF34);
  return result;
}

uint64_t sub_20A19DF40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A19DF48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A19DF4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A19DF54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CustomCodingKeys()
{
  return &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CustomCodingKeys;
}

unint64_t sub_20A19DF74()
{
  unint64_t result;

  result = qword_2545DAD70;
  if (!qword_2545DAD70)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7F54, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD70);
  }
  return result;
}

unint64_t sub_20A19DFBC()
{
  unint64_t result;

  result = qword_2545DAD78;
  if (!qword_2545DAD78)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B800C, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.AppleBrandedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD78);
  }
  return result;
}

unint64_t sub_20A19E004()
{
  unint64_t result;

  result = qword_2545DAD80;
  if (!qword_2545DAD80)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B80C4, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD80);
  }
  return result;
}

unint64_t sub_20A19E04C()
{
  unint64_t result;

  result = qword_2545DAD88;
  if (!qword_2545DAD88)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7F7C, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.AppleBrandedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD88);
  }
  return result;
}

unint64_t sub_20A19E094()
{
  unint64_t result;

  result = qword_2545DAD90;
  if (!qword_2545DAD90)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7FA4, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.AppleBrandedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD90);
  }
  return result;
}

unint64_t sub_20A19E0DC()
{
  unint64_t result;

  result = qword_2545DAD98;
  if (!qword_2545DAD98)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7EC4, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAD98);
  }
  return result;
}

unint64_t sub_20A19E124()
{
  unint64_t result;

  result = qword_2545DADA0;
  if (!qword_2545DADA0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B7EEC, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DADA0);
  }
  return result;
}

unint64_t sub_20A19E16C()
{
  unint64_t result;

  result = qword_2545DADA8;
  if (!qword_2545DADA8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B8034, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DADA8);
  }
  return result;
}

unint64_t sub_20A19E1B4()
{
  unint64_t result;

  result = qword_2545DADB0;
  if (!qword_2545DADB0)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B805C, &type metadata for DigitalPresentmentDisplayConfiguration.DisplayInfoCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DADB0);
  }
  return result;
}

uint64_t sub_20A19E20C()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

void sub_20A19E28C(char a1)
{
  sub_20A1A930C();
  __asm { BR              X10 }
}

uint64_t sub_20A19E2E4()
{
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

void sub_20A19E360(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_20A19E3A8()
{
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

void sub_20A19E488(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20A19E4CC()
{
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

void sub_20A19E564(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_20A19E5AC()
{
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

void sub_20A19E64C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20A19E690()
{
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A19E6F0()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

void sub_20A19E76C(uint64_t a1, char a2)
{
  sub_20A1A930C();
  __asm { BR              X10 }
}

uint64_t sub_20A19E7C0()
{
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

void sub_20A19E83C(uint64_t a1, char a2)
{
  sub_20A1A930C();
  __asm { BR              X10 }
}

uint64_t sub_20A19E894()
{
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

void sub_20A19E94C(uint64_t a1, char a2)
{
  sub_20A1A930C();
  __asm { BR              X10 }
}

uint64_t sub_20A19E99C()
{
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

unint64_t ISO18013KnownDocTypes.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0xD000000000000015;
}

CoreIDV::ISO18013KnownNamespaces_optional __swiftcall ISO18013KnownNamespaces.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDV::ISO18013KnownNamespaces_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A1A9144();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ISO18013KnownNamespaces.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A19EB10 + 4 * byte_20A1B8233[*v0]))(0xD000000000000011, 0x800000020A1BB580);
}

uint64_t sub_20A19EB10(uint64_t a1)
{
  return a1 + 6;
}

CoreIDV::ISO18013_5_1_ElementIdentifier_optional __swiftcall ISO18013_5_1_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CoreIDV::ISO18013_5_1_ElementIdentifier_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_20A1A9270();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 13;
  switch(v3)
  {
    case 0:
      goto LABEL_15;
    case 1:
      v5 = 1;
      goto LABEL_15;
    case 2:
      v5 = 2;
      goto LABEL_15;
    case 3:
      v5 = 3;
      goto LABEL_15;
    case 4:
      v5 = 4;
      goto LABEL_15;
    case 5:
      v5 = 5;
      goto LABEL_15;
    case 6:
      v5 = 6;
      goto LABEL_15;
    case 7:
      v5 = 7;
      goto LABEL_15;
    case 8:
      v5 = 8;
      goto LABEL_15;
    case 9:
      v5 = 9;
      goto LABEL_15;
    case 10:
      v5 = 10;
      goto LABEL_15;
    case 11:
      v5 = 11;
      goto LABEL_15;
    case 12:
      v5 = 12;
LABEL_15:
      v6 = v5;
      break;
    case 13:
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    default:
      v6 = 31;
      break;
  }
  *v2 = v6;
  return result;
}

CoreIDV::ISO18013_AAMVA_ElementIdentifier_optional __swiftcall ISO18013_AAMVA_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDV::ISO18013_AAMVA_ElementIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A1A9270();
  result.value = swift_bridgeObjectRelease();
  v5 = 18;
  if (v3 < 0x12)
    v5 = v3;
  *v2 = v5;
  return result;
}

unsigned __int8 *static ISO23220_1_ElementIdentifier.parseAgeOverElement(_:)(unint64_t a1, unint64_t a2)
{
  return sub_20A1A01AC(a1, a2);
}

CoreIDV::ISO23220_1_ElementIdentifier_optional __swiftcall ISO23220_1_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDV::ISO23220_1_ElementIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A1A9144();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

CoreIDV::ISO23220_1_Japan_ElementIdentifier_optional __swiftcall ISO23220_1_Japan_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (CoreIDV::ISO23220_1_Japan_ElementIdentifier_optional)sub_20A19F430(v1);
}

CoreIDV::ISO18013KnownDocTypes_optional __swiftcall ISO18013KnownDocTypes.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CoreIDV::ISO18013KnownDocTypes_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A1A9144();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_20A19EE04(char *a1, char *a2)
{
  return sub_20A138400(*a1, *a2);
}

uint64_t sub_20A19EE10()
{
  return sub_20A19E20C();
}

uint64_t sub_20A19EE18()
{
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A19EE74()
{
  return sub_20A19E6F0();
}

CoreIDV::ISO18013KnownDocTypes_optional sub_20A19EE7C(Swift::String *a1)
{
  return ISO18013KnownDocTypes.init(rawValue:)(*a1);
}

void sub_20A19EE88(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000015;
  if (*v1)
    v2 = 0xD000000000000016;
  v3 = 0x800000020A1BBA50;
  if (!*v1)
    v3 = 0x800000020A1BBA30;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A19EEC8()
{
  sub_20A1A11D4();
  return sub_20A1A8E80();
}

uint64_t sub_20A19EF24()
{
  sub_20A1A11D4();
  return sub_20A1A8E74();
}

void sub_20A19EF70(char *a1)
{
  sub_20A1389FC(*a1);
}

void sub_20A19EF7C()
{
  char *v0;

  sub_20A19E28C(*v0);
}

void sub_20A19EF84(uint64_t a1)
{
  char *v1;

  sub_20A19E64C(a1, *v1);
}

void sub_20A19EF8C(uint64_t a1)
{
  char *v1;

  sub_20A19E76C(a1, *v1);
}

CoreIDV::ISO18013KnownNamespaces_optional sub_20A19EF94(Swift::String *a1)
{
  return ISO18013KnownNamespaces.init(rawValue:)(*a1);
}

uint64_t sub_20A19EFA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ISO18013KnownNamespaces.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A19EFC4()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B0);
  __swift_allocate_value_buffer(v0, qword_2545DADB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2545DADB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B8);
  return sub_20A1A8D0C();
}

void static ISO18013_5_1_ElementIdentifier.namespaceIdentifier.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void *static ISO18013_5_1_ElementIdentifier.allCases.getter()
{
  return &unk_24C2CE620;
}

uint64_t ISO18013_5_1_ElementIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A19F090 + 4 * byte_20A1B8256[*v0]))(0x616E5F6E65766967, 0xEA0000000000656DLL);
}

uint64_t sub_20A19F090()
{
  return 0x6E5F796C696D6166;
}

uint64_t sub_20A19F0B4()
{
  return 0x61645F6874726962;
}

uint64_t sub_20A19F0E0()
{
  return 0x645F797269707865;
}

uint64_t sub_20A19F100()
{
  return 0x5F676E6975737369;
}

unint64_t sub_20A19F124()
{
  return 0xD000000000000011;
}

unint64_t sub_20A19F384()
{
  return 0xD000000000000014;
}

uint64_t sub_20A19F3AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A138698(*a1, *a2);
}

uint64_t sub_20A19F3B8(uint64_t a1, uint64_t a2)
{
  return sub_20A19F7B4(a1, a2, (void (*)(uint64_t))ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

uint64_t sub_20A19F3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A19F828(a1, a2, a3, (void (*)(void))ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

uint64_t sub_20A19F3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A19F884(a1, a2, a3, (void (*)(uint64_t))ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

CoreIDV::ISO18013_5_1_ElementIdentifier_optional sub_20A19F3DC(Swift::String *a1)
{
  return ISO18013_5_1_ElementIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_20A19F3E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ISO18013_5_1_ElementIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_20A19F40C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_20A19F414(_QWORD *a1@<X8>)
{
  *a1 = &unk_24C2CE620;
}

CoreIDV::ISO18013_5_1_DrivingPrivilegeIdentifier_optional __swiftcall ISO18013_5_1_DrivingPrivilegeIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (CoreIDV::ISO18013_5_1_DrivingPrivilegeIdentifier_optional)sub_20A19F430(v1);
}

uint64_t sub_20A19F430@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A1A9144();
  result = swift_bridgeObjectRelease();
  v4 = 7;
  if (v2 < 7)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t ISO18013_5_1_DrivingPrivilegeIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A19F4B8 + 4 * byte_20A1B8275[*v0]))(0xD000000000000015, 0x800000020A1BBA70);
}

uint64_t sub_20A19F4B8()
{
  return 0x61645F6575737369;
}

uint64_t sub_20A19F4D4()
{
  return 0x645F797269707865;
}

uint64_t sub_20A19F4F4()
{
  return 0x7365646F63;
}

uint64_t sub_20A19F508()
{
  return 1701080931;
}

uint64_t sub_20A19F518()
{
  return 1852270963;
}

uint64_t sub_20A19F528()
{
  return 0x65756C6176;
}

void sub_20A19F53C(char *a1)
{
  sub_20A13821C(*a1);
}

void sub_20A19F548()
{
  char *v0;

  sub_20A19E94C(0, *v0);
}

void sub_20A19F554(uint64_t a1)
{
  char *v1;

  sub_20A19E488(a1, *v1);
}

void sub_20A19F55C(uint64_t a1)
{
  char *v1;

  sub_20A19E94C(a1, *v1);
}

CoreIDV::ISO18013_5_1_DrivingPrivilegeIdentifier_optional sub_20A19F564(Swift::String *a1)
{
  return ISO18013_5_1_DrivingPrivilegeIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_20A19F570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ISO18013_5_1_DrivingPrivilegeIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void static ISO18013_AAMVA_ElementIdentifier.namespaceIdentifier.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void *static ISO18013_AAMVA_ElementIdentifier.allCases.getter()
{
  return &unk_24C2CF088;
}

uint64_t ISO18013_AAMVA_ElementIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A19F5E0 + 4 * byte_20A1B827C[*v0]))(0xD00000000000001BLL, 0x800000020A1BB830);
}

uint64_t sub_20A19F5E0()
{
  return 0x6675735F656D616ELL;
}

uint64_t sub_20A19F600(uint64_t a1)
{
  return a1 - 10;
}

uint64_t sub_20A19F78C()
{
  return 7890291;
}

uint64_t sub_20A19F79C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A13868C(*a1, *a2);
}

uint64_t sub_20A19F7A8(uint64_t a1, uint64_t a2)
{
  return sub_20A19F7B4(a1, a2, (void (*)(uint64_t))ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_20A19F7B4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_20A1A930C();
  a3(v4);
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A19F81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A19F828(a1, a2, a3, (void (*)(void))ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_20A19F828(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A19F878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A19F884(a1, a2, a3, (void (*)(uint64_t))ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_20A19F884(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_20A1A930C();
  a4(v5);
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

CoreIDV::ISO18013_AAMVA_ElementIdentifier_optional sub_20A19F8E8(Swift::String *a1)
{
  return ISO18013_AAMVA_ElementIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_20A19F8F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ISO18013_AAMVA_ElementIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_20A19F918(_QWORD *a1@<X8>)
{
  *a1 = &unk_24C2CF088;
}

CoreIDV::ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier_optional __swiftcall ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDV::ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A1A9144();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A19F9B8 + 4 * byte_20A1B828E[*v0]))(0xD000000000000016, 0x800000020A1BBAA0);
}

unint64_t sub_20A19F9B8()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_20A19F9E0@<X0>(uint64_t a1@<X8>)
{
  return a1 - 2;
}

void sub_20A19FA84(char *a1)
{
  sub_20A137FC8(*a1);
}

uint64_t sub_20A19FA90()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  sub_20A19E360((uint64_t)v3, v1);
  return sub_20A1A933C();
}

void sub_20A19FAD4(uint64_t a1)
{
  char *v1;

  sub_20A19E360(a1, *v1);
}

uint64_t sub_20A19FADC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_20A1A930C();
  sub_20A19E360((uint64_t)v3, v1);
  return sub_20A1A933C();
}

CoreIDV::ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier_optional sub_20A19FB1C(Swift::String *a1)
{
  return ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_20A19FB28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s7CoreIDV30ISO18013_5_1_ElementIdentifierO7ageOver2nnSSSi_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[3];
  uint64_t v17;
  unint64_t v18;

  v2 = sub_20A1A8BD4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20A1A8CDC();
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DADD0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  v17 = 0x7265766F5F656761;
  v18 = 0xE90000000000005FLL;
  v16[1] = a1;
  sub_20A1A8C7C();
  sub_20A1A0454();
  sub_20A1A8AF0();
  v16[2] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DADE0);
  sub_20A17A514(&qword_2545DADE8, &qword_2545DADE0, MEMORY[0x24BEE2C50]);
  sub_20A1A8BC8();
  MEMORY[0x20BD20594](v5, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  sub_20A17A514(&qword_2545DADF0, &qword_2545DADD0, MEMORY[0x24BDCC928]);
  sub_20A1A900C();
  v14(v13, v7);
  sub_20A1A8DF0();
  swift_bridgeObjectRelease();
  return v17;
}

BOOL static ISO23220_1_ElementIdentifier.isAgeOverElement(_:)(unint64_t a1, unint64_t a2)
{
  char v2;

  sub_20A1A01AC(a1, a2);
  return (v2 & 1) == 0;
}

void static ISO23220_1_ElementIdentifier.namespaceIdentifier.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void *static ISO23220_1_ElementIdentifier.allCases.getter()
{
  return &unk_24C2CD370;
}

uint64_t ISO23220_1_ElementIdentifier.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61645F6874726962;
  if (*v0 != 1)
    v1 = 7890291;
  if (*v0)
    return v1;
  else
    return 0x795F6E695F656761;
}

uint64_t sub_20A19FE14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A13873C(*a1, *a2);
}

uint64_t sub_20A19FE20()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t sub_20A19FEC4()
{
  sub_20A1A8DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A19FF44()
{
  sub_20A1A930C();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

CoreIDV::ISO23220_1_ElementIdentifier_optional sub_20A19FFE4(Swift::String *a1)
{
  return ISO23220_1_ElementIdentifier.init(rawValue:)(*a1);
}

void sub_20A19FFF0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEC00000073726165;
  v4 = 0xEA00000000006574;
  v5 = 0x61645F6874726962;
  if (v2 != 1)
  {
    v5 = 7890291;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x795F6E695F656761;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_20A1A0054(_QWORD *a1@<X8>)
{
  *a1 = &unk_24C2CD490;
}

void static ISO23220_1_Japan_ElementIdentifier.namespaceIdentifier.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

void *static ISO23220_1_Japan_ElementIdentifier.allCases.getter()
{
  return &unk_24C2CF5D0;
}

uint64_t ISO23220_1_Japan_ElementIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A1A00B4 + 4 * byte_20A1B8299[*v0]))(0xD000000000000016, 0x800000020A1BB980);
}

unint64_t sub_20A1A00B4()
{
  return 0xD000000000000011;
}

uint64_t sub_20A1A00D0@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_20A1A0128()
{
  return 0x7469617274726F70;
}

void sub_20A1A0140(char *a1)
{
  sub_20A1384A4(*a1);
}

void sub_20A1A014C()
{
  char *v0;

  sub_20A19E83C(0, *v0);
}

void sub_20A1A0158(uint64_t a1)
{
  char *v1;

  sub_20A19E564(a1, *v1);
}

void sub_20A1A0160(uint64_t a1)
{
  char *v1;

  sub_20A19E83C(a1, *v1);
}

CoreIDV::ISO23220_1_Japan_ElementIdentifier_optional sub_20A1A0168(Swift::String *a1)
{
  return ISO23220_1_Japan_ElementIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_20A1A0174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ISO23220_1_Japan_ElementIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_20A1A0198(_QWORD *a1@<X8>)
{
  *a1 = &unk_24C2CF5D0;
}

unsigned __int8 *sub_20A1A01AC(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  char v22;
  int v23;
  char v24;
  char v25;
  _BYTE v27[16];
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87A8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v27[-v12];
  v28 = a1;
  v29 = a2;
  if (qword_2545D80E0 != -1)
    swift_once();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B0);
  __swift_project_value_buffer(v14, (uint64_t)qword_2545DADB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545D87B8);
  sub_20A13194C();
  sub_20A17A514((unint64_t *)&qword_2545D87C8, &qword_2545D87B0, MEMORY[0x24BEE7460]);
  sub_20A1A8D6C();
  sub_20A1319DC((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v15 = 0;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v11, v4);
    swift_getKeyPath();
    sub_20A1A8D18();
    swift_release();
    v16 = v28;
    v17 = v29;
    v18 = v31;
    if ((v29 ^ v28) >> 14)
    {
      v19 = v30;
      v20 = sub_20A1324A8(v28, v29, v30, v31, 10);
      if ((v21 & 0x100) != 0)
      {
        v15 = sub_20A131C80(v16, v17, v19, v18, 10);
        v25 = v24;
        swift_bridgeObjectRelease();
        v23 = v25 & 1;
      }
      else
      {
        v15 = (unsigned __int8 *)v20;
        v22 = v21;
        swift_bridgeObjectRelease();
        v23 = v22 & 1;
      }
      if (v23)
        v15 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = 0;
    }
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_20A131A24((uint64_t)v13);
  return v15;
}

unint64_t sub_20A1A0454()
{
  unint64_t result;

  result = qword_2545DADD8;
  if (!qword_2545DADD8)
  {
    result = MEMORY[0x20BD21434](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2545DADD8);
  }
  return result;
}

unint64_t sub_20A1A049C()
{
  unint64_t result;

  result = qword_2545DADF8;
  if (!qword_2545DADF8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013KnownDocTypes, &type metadata for ISO18013KnownDocTypes);
    atomic_store(result, (unint64_t *)&qword_2545DADF8);
  }
  return result;
}

unint64_t sub_20A1A04E4()
{
  unint64_t result;

  result = qword_2545DAE00;
  if (!qword_2545DAE00)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013KnownNamespaces, &type metadata for ISO18013KnownNamespaces);
    atomic_store(result, (unint64_t *)&qword_2545DAE00);
  }
  return result;
}

unint64_t sub_20A1A052C()
{
  unint64_t result;

  result = qword_2545DAE08;
  if (!qword_2545DAE08)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_5_1_ElementIdentifier, &type metadata for ISO18013_5_1_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE08);
  }
  return result;
}

unint64_t sub_20A1A0574()
{
  unint64_t result;

  result = qword_2545DAE10;
  if (!qword_2545DAE10)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013KnownNamespaces, &type metadata for ISO18013KnownNamespaces);
    atomic_store(result, (unint64_t *)&qword_2545DAE10);
  }
  return result;
}

uint64_t sub_20A1A05B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A098C(a1, a2, a3, (uint64_t (*)(void))sub_20A1A05CC, (uint64_t (*)(void))sub_20A1A0610);
}

unint64_t sub_20A1A05CC()
{
  unint64_t result;

  result = qword_2545DAE18;
  if (!qword_2545DAE18)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_5_1_ElementIdentifier, &type metadata for ISO18013_5_1_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE18);
  }
  return result;
}

unint64_t sub_20A1A0610()
{
  unint64_t result;

  result = qword_2545DAE20;
  if (!qword_2545DAE20)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_5_1_ElementIdentifier, &type metadata for ISO18013_5_1_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE20);
  }
  return result;
}

uint64_t sub_20A1A0654()
{
  return sub_20A17A514(&qword_2545DAE28, &qword_2545DAE30, MEMORY[0x24BEE12E0]);
}

unint64_t sub_20A1A0684()
{
  unint64_t result;

  result = qword_2545DAE38;
  if (!qword_2545DAE38)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_5_1_DrivingPrivilegeIdentifier, &type metadata for ISO18013_5_1_DrivingPrivilegeIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE38);
  }
  return result;
}

unint64_t sub_20A1A06CC()
{
  unint64_t result;

  result = qword_2545DAE40;
  if (!qword_2545DAE40)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_AAMVA_ElementIdentifier, &type metadata for ISO18013_AAMVA_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE40);
  }
  return result;
}

uint64_t sub_20A1A0710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A098C(a1, a2, a3, (uint64_t (*)(void))sub_20A1A0724, (uint64_t (*)(void))sub_20A1A0768);
}

unint64_t sub_20A1A0724()
{
  unint64_t result;

  result = qword_2545DAE48;
  if (!qword_2545DAE48)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_AAMVA_ElementIdentifier, &type metadata for ISO18013_AAMVA_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE48);
  }
  return result;
}

unint64_t sub_20A1A0768()
{
  unint64_t result;

  result = qword_2545DAE50;
  if (!qword_2545DAE50)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_AAMVA_ElementIdentifier, &type metadata for ISO18013_AAMVA_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE50);
  }
  return result;
}

uint64_t sub_20A1A07AC()
{
  return sub_20A17A514(&qword_2545DAE58, &qword_2545DAE60, MEMORY[0x24BEE12E0]);
}

unint64_t sub_20A1A07DC()
{
  unint64_t result;

  result = qword_2545DAE68;
  if (!qword_2545DAE68)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier, &type metadata for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE68);
  }
  return result;
}

unint64_t sub_20A1A0824()
{
  unint64_t result;

  result = qword_2545DAE70;
  if (!qword_2545DAE70)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO23220_1_ElementIdentifier, &type metadata for ISO23220_1_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE70);
  }
  return result;
}

uint64_t sub_20A1A0868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A098C(a1, a2, a3, (uint64_t (*)(void))sub_20A1A087C, (uint64_t (*)(void))sub_20A1A08C0);
}

unint64_t sub_20A1A087C()
{
  unint64_t result;

  result = qword_2545DAE78;
  if (!qword_2545DAE78)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO23220_1_ElementIdentifier, &type metadata for ISO23220_1_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE78);
  }
  return result;
}

unint64_t sub_20A1A08C0()
{
  unint64_t result;

  result = qword_2545DAE80;
  if (!qword_2545DAE80)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO23220_1_ElementIdentifier, &type metadata for ISO23220_1_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE80);
  }
  return result;
}

uint64_t sub_20A1A0904()
{
  return sub_20A17A514(&qword_2545DAE88, &qword_2545DAE90, MEMORY[0x24BEE12E0]);
}

unint64_t sub_20A1A0934()
{
  unint64_t result;

  result = qword_2545DAE98;
  if (!qword_2545DAE98)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO23220_1_Japan_ElementIdentifier, &type metadata for ISO23220_1_Japan_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAE98);
  }
  return result;
}

uint64_t sub_20A1A0978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A098C(a1, a2, a3, (uint64_t (*)(void))sub_20A1A09BC, (uint64_t (*)(void))sub_20A1A0A00);
}

uint64_t sub_20A1A098C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_20A1A09BC()
{
  unint64_t result;

  result = qword_2545DAEA0;
  if (!qword_2545DAEA0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO23220_1_Japan_ElementIdentifier, &type metadata for ISO23220_1_Japan_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAEA0);
  }
  return result;
}

unint64_t sub_20A1A0A00()
{
  unint64_t result;

  result = qword_2545DAEA8;
  if (!qword_2545DAEA8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO23220_1_Japan_ElementIdentifier, &type metadata for ISO23220_1_Japan_ElementIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545DAEA8);
  }
  return result;
}

uint64_t sub_20A1A0A44()
{
  return sub_20A17A514(&qword_2545DAEB0, &qword_2545DAEB8, MEMORY[0x24BEE12E0]);
}

uint64_t storeEnumTagSinglePayload for ISO18013KnownDocTypes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A1A0ABC + 4 * byte_20A1B82A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A1A0AF0 + 4 * byte_20A1B82A0[v4]))();
}

uint64_t sub_20A1A0AF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0AF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A0B00);
  return result;
}

uint64_t sub_20A1A0B0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A0B14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A1A0B18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0B20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013KnownDocTypes()
{
  return &type metadata for ISO18013KnownDocTypes;
}

uint64_t storeEnumTagSinglePayload for ISO18013KnownNamespaces(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A1A0B88 + 4 * byte_20A1B82AF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A1A0BBC + 4 * byte_20A1B82AA[v4]))();
}

uint64_t sub_20A1A0BBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0BC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A0BCCLL);
  return result;
}

uint64_t sub_20A1A0BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A0BE0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A1A0BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013KnownNamespaces()
{
  return &type metadata for ISO18013KnownNamespaces;
}

uint64_t dispatch thunk of static MobileDocumentElementIdentifier.namespaceIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t getEnumTagSinglePayload for ISO18013_5_1_ElementIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE2)
    goto LABEL_17;
  if (a2 + 30 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 30) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 30;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 30;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 30;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1F;
  v8 = v6 - 31;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013_5_1_ElementIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_20A1A0CEC + 4 * byte_20A1B82B9[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_20A1A0D20 + 4 * byte_20A1B82B4[v4]))();
}

uint64_t sub_20A1A0D20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0D28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A0D30);
  return result;
}

uint64_t sub_20A1A0D3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A0D44);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_20A1A0D48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0D50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013_5_1_ElementIdentifier()
{
  return &type metadata for ISO18013_5_1_ElementIdentifier;
}

ValueMetadata *type metadata accessor for ISO18013_5_1_DrivingPrivilegeIdentifier()
{
  return &type metadata for ISO18013_5_1_DrivingPrivilegeIdentifier;
}

uint64_t getEnumTagSinglePayload for ISO18013_AAMVA_ElementIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013_AAMVA_ElementIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_20A1A0E60 + 4 * byte_20A1B82C3[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_20A1A0E94 + 4 * byte_20A1B82BE[v4]))();
}

uint64_t sub_20A1A0E94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0E9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A0EA4);
  return result;
}

uint64_t sub_20A1A0EB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A0EB8);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_20A1A0EBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0EC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013_AAMVA_ElementIdentifier()
{
  return &type metadata for ISO18013_AAMVA_ElementIdentifier;
}

uint64_t storeEnumTagSinglePayload for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_20A1A0F2C + 4 * byte_20A1B82CD[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_20A1A0F60 + 4 * byte_20A1B82C8[v4]))();
}

uint64_t sub_20A1A0F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A0F70);
  return result;
}

uint64_t sub_20A1A0F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A0F84);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_20A1A0F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A0F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier()
{
  return &type metadata for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier;
}

uint64_t storeEnumTagSinglePayload for ISO23220_1_ElementIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A1A0FF8 + 4 * byte_20A1B82D7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A1A102C + 4 * byte_20A1B82D2[v4]))();
}

uint64_t sub_20A1A102C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A1034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A103CLL);
  return result;
}

uint64_t sub_20A1A1048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A1050);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A1A1054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A105C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO23220_1_ElementIdentifier()
{
  return &type metadata for ISO23220_1_ElementIdentifier;
}

uint64_t _s7CoreIDV39ISO18013_5_1_DrivingPrivilegeIdentifierOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7CoreIDV39ISO18013_5_1_DrivingPrivilegeIdentifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_20A1A1154 + 4 * byte_20A1B82E1[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_20A1A1188 + 4 * byte_20A1B82DC[v4]))();
}

uint64_t sub_20A1A1188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A1190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A1198);
  return result;
}

uint64_t sub_20A1A11A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A11ACLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_20A1A11B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A11B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO23220_1_Japan_ElementIdentifier()
{
  return &type metadata for ISO23220_1_Japan_ElementIdentifier;
}

unint64_t sub_20A1A11D4()
{
  unint64_t result;

  result = qword_2545DAEC0;
  if (!qword_2545DAEC0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for ISO18013KnownDocTypes, &type metadata for ISO18013KnownDocTypes);
    atomic_store(result, (unint64_t *)&qword_2545DAEC0);
  }
  return result;
}

uint64_t MobileDocumentReaderEntitlementChecker.init(bundleRecordFetcher:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A1A1228(a1, a2);
}

uint64_t sub_20A1A1228(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

Swift::Bool __swiftcall MobileDocumentReaderEntitlementChecker.checkInternalEntitlement(connection:)(NSXPCConnection_optional connection)
{
  objc_class *v1;
  void *v2;
  id v3;
  SecTaskRef v4;
  __SecTask *v5;
  __CFString *v6;
  CFTypeRef v7;
  int v8;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  if (connection.value.super.isa)
  {
    v1 = connection.value.super.isa;
    v2 = (void *)sub_20A1A8D9C();
    v3 = -[objc_class valueForEntitlement:](v1, sel_valueForEntitlement_, v2);

    if (v3)
    {
      sub_20A1A9018();

      swift_unknownObjectRelease();
    }
    else
    {

      v11 = 0u;
      v12 = 0u;
    }
    sub_20A136700((uint64_t)&v11, (uint64_t)&v13, &qword_2545D8558);
    if (*((_QWORD *)&v14 + 1))
    {
      v8 = swift_dynamicCast();
      if (v8)
        LOBYTE(v8) = v10;
      return v8;
    }
LABEL_16:
    sub_20A127E0C((uint64_t)&v13, &qword_2545D8558);
    LOBYTE(v8) = 0;
    return v8;
  }
  v4 = SecTaskCreateFromSelf(0);
  if (!v4)
  {
    v13 = 0u;
    v14 = 0u;
    goto LABEL_16;
  }
  v5 = v4;
  v6 = (__CFString *)sub_20A1A8D9C();
  v7 = SecTaskCopyValueForEntitlement(v5, v6, 0);

  if (v7)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = v7;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  sub_20A136700((uint64_t)&v11, (uint64_t)&v13, &qword_2545D8558);

  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_16;
  v8 = swift_dynamicCast();
  if (v8)
    LOBYTE(v8) = v11;
  return v8;
}

Swift::Bool __swiftcall MobileDocumentReaderEntitlementChecker.checkPublicEntitlements(auditToken:)(audit_token_t_optional *auditToken)
{
  char v2;
  SecTaskRef v3;
  __SecTask *v4;
  __CFString *v5;
  CFTypeRef v6;
  SecTaskRef v7;
  __SecTask *v8;
  __CFString *v9;
  CFTypeRef v10;
  char v11;
  __int128 v13;
  __int128 v14;
  audit_token_t token;
  __int128 v16;
  __int128 v17;
  _OWORD v18[2];
  char v19;

  sub_20A136700((uint64_t)auditToken, (uint64_t)v18, &qword_2545DAEC8);
  if ((v19 & 1) != 0)
  {
    sub_20A1A1B74((uint64_t)auditToken, &v16);
    if (*((_QWORD *)&v17 + 1))
    {
      if (swift_dynamicCast())
      {
        v2 = token.val[0];
        goto LABEL_10;
      }
    }
    else
    {
      sub_20A127E0C((uint64_t)&v16, &qword_2545D8558);
    }
    v2 = 0;
LABEL_10:
    v3 = SecTaskCreateFromSelf(0);
    if (v3)
    {
      v4 = v3;
      v5 = (__CFString *)sub_20A1A8D9C();
      v6 = SecTaskCopyValueForEntitlement(v4, v5, 0);

      if (v6)
      {
        *(_QWORD *)&token.val[6] = swift_getObjectType();
        *(_QWORD *)token.val = v6;
      }
      else
      {
        memset(&token, 0, sizeof(token));
      }
      sub_20A136700((uint64_t)&token, (uint64_t)&v16, &qword_2545D8558);

      if (*((_QWORD *)&v17 + 1))
        goto LABEL_24;
LABEL_26:
      sub_20A127E0C((uint64_t)&v16, &qword_2545D8558);
      goto LABEL_27;
    }
LABEL_18:
    v16 = 0u;
    v17 = 0u;
    goto LABEL_26;
  }
  v13 = v18[1];
  v14 = v18[0];
  sub_20A1A1B74((uint64_t)auditToken, &v16);
  if (*((_QWORD *)&v17 + 1))
  {
    if (swift_dynamicCast())
    {
      v2 = token.val[0];
      goto LABEL_15;
    }
  }
  else
  {
    sub_20A127E0C((uint64_t)&v16, &qword_2545D8558);
  }
  v2 = 0;
LABEL_15:
  *(_OWORD *)token.val = v14;
  *(_OWORD *)&token.val[4] = v13;
  v7 = SecTaskCreateWithAuditToken(0, &token);
  if (!v7)
    goto LABEL_18;
  v8 = v7;
  v9 = (__CFString *)sub_20A1A8D9C();
  v10 = SecTaskCopyValueForEntitlement(v8, v9, 0);

  if (v10)
  {
    *(_QWORD *)&token.val[6] = swift_getObjectType();
    *(_QWORD *)token.val = v10;
  }
  else
  {
    memset(&token, 0, sizeof(token));
  }
  sub_20A136700((uint64_t)&token, (uint64_t)&v16, &qword_2545D8558);

  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_26;
LABEL_24:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAED0);
  if (!swift_dynamicCast())
  {
LABEL_27:
    v11 = 0;
    return v11 | v2;
  }
  swift_bridgeObjectRelease();
  v11 = 1;
  return v11 | v2;
}

CoreIDV::MobileDocumentReaderBundleTypeCheckOutcome __swiftcall MobileDocumentReaderEntitlementChecker.checkBundleTypeSupported(auditToken:)(audit_token_t_optional *auditToken)
{
  char *v1;
  _QWORD *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  CoreIDV::MobileDocumentReaderBundleTypeCheckOutcome result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Swift::String v31;
  Swift::Bool v32;
  char v33;
  char *v34;
  _QWORD v35[4];
  char v36;

  v4 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D9B80);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v8 = type metadata accessor for BundleRecord();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v35 - v14 + 8;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v35 - v16 + 8;
  sub_20A136700((uint64_t)auditToken, (uint64_t)v35, &qword_2545DAEC8);
  if ((v36 & 1) != 0)
  {
    v18 = v2[3];
    v19 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      result = sub_20A127E0C((uint64_t)v7, &qword_2545D9B80);
LABEL_11:
      v33 = 2;
      goto LABEL_12;
    }
    sub_20A16B73C((uint64_t)v7, (uint64_t)v12);
    v15 = v12;
  }
  else
  {
    v21 = v35[0];
    v22 = v35[1];
    v23 = v35[2];
    v24 = v35[3];
    v34 = v17;
    v25 = v8;
    v26 = v4;
    v28 = v2[3];
    v27 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v28);
    v29 = v28;
    v4 = v26;
    v8 = v25;
    v17 = v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 16))(v21, v22, v23, v24, v29, v27);
  }
  sub_20A16B73C((uint64_t)v15, (uint64_t)v17);
  if (v17[*(int *)(v8 + 40)])
  {
    if (v17[*(int *)(v8 + 40)] != 1)
    {
      result = sub_20A1A1C5C((uint64_t)v17);
      goto LABEL_11;
    }
    v30 = *(id *)&v17[*(int *)(v8 + 48)];
    v31._object = (void *)0x800000020A1BE8F0;
    v31._countAndFlagsBits = 0xD000000000000040;
    v32 = LSPropertyList.BOOL(forKey:)(v31);

    result = sub_20A1A1C5C((uint64_t)v17);
    v33 = !v32;
  }
  else
  {
    result = sub_20A1A1C5C((uint64_t)v17);
    v33 = 0;
  }
LABEL_12:
  *v4 = v33;
  return result;
}

BOOL static MobileDocumentReaderBundleTypeCheckOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDocumentReaderBundleTypeCheckOutcome.hash(into:)()
{
  return sub_20A1A9318();
}

uint64_t MobileDocumentReaderBundleTypeCheckOutcome.hashValue.getter()
{
  sub_20A1A930C();
  sub_20A1A9318();
  return sub_20A1A933C();
}

unint64_t static MobileDocumentReaderEntitlementChecker.Constant.displayOnlyEntitlementKey.getter()
{
  return 0xD000000000000035;
}

unint64_t static MobileDocumentReaderEntitlementChecker.Constant.dataTransferEntitlementKey.getter()
{
  return 0xD000000000000032;
}

void sub_20A1A1B74(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  SecTaskRef v3;
  __SecTask *v4;
  __CFString *v5;
  CFTypeRef v6;
  audit_token_t v7;
  audit_token_t v8;
  char v9;

  sub_20A136700(a1, (uint64_t)&v8, &qword_2545DAEC8);
  if ((v9 & 1) != 0)
  {
    v3 = SecTaskCreateFromSelf(0);
    if (!v3)
    {
LABEL_3:
      *a2 = 0u;
      a2[1] = 0u;
      return;
    }
  }
  else
  {
    v7 = v8;
    v3 = SecTaskCreateWithAuditToken(0, &v7);
    if (!v3)
      goto LABEL_3;
  }
  v4 = v3;
  v5 = (__CFString *)sub_20A1A8D9C();
  v6 = SecTaskCopyValueForEntitlement(v4, v5, 0);

  if (v6)
  {
    *(_QWORD *)&v7.val[6] = swift_getObjectType();
    *(_QWORD *)v7.val = v6;
  }
  else
  {
    memset(&v7, 0, sizeof(v7));
  }
  sub_20A136700((uint64_t)&v7, (uint64_t)a2, &qword_2545D8558);

}

uint64_t sub_20A1A1C5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BundleRecord();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Bool __swiftcall MobileDocumentReaderEntitlementChecker.checkDevelopmentFlagEntitlements(auditToken:)(audit_token_t *auditToken)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  SecTaskRef v4;
  __SecTask *v5;
  __CFString *v6;
  CFTypeRef v7;
  int v8;
  __int128 v10;
  __int128 v11;
  audit_token_t token;

  *(_QWORD *)token.val = auditToken;
  *(_QWORD *)&token.val[2] = v1;
  *(_QWORD *)&token.val[4] = v2;
  *(_QWORD *)&token.val[6] = v3;
  v4 = SecTaskCreateWithAuditToken(0, &token);
  if (!v4)
  {
    memset(&token, 0, sizeof(token));
LABEL_9:
    sub_20A127E0C((uint64_t)&token, &qword_2545D8558);
    LOBYTE(v8) = 0;
    return v8;
  }
  v5 = v4;
  v6 = (__CFString *)sub_20A1A8D9C();
  v7 = SecTaskCopyValueForEntitlement(v5, v6, 0);

  if (v7)
  {
    *((_QWORD *)&v11 + 1) = swift_getObjectType();
    *(_QWORD *)&v10 = v7;
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_20A136700((uint64_t)&v10, (uint64_t)&token, &qword_2545D8558);

  if (!*(_QWORD *)&token.val[6])
    goto LABEL_9;
  v8 = swift_dynamicCast();
  if (v8)
    LOBYTE(v8) = v10;
  return v8;
}

BOOL sub_20A1A1DC4(NSXPCConnection_optional a1)
{
  return MobileDocumentReaderEntitlementChecker.checkInternalEntitlement(connection:)(a1);
}

BOOL sub_20A1A1DE0(audit_token_t *a1)
{
  return MobileDocumentReaderEntitlementChecker.checkDevelopmentFlagEntitlements(auditToken:)(a1);
}

unint64_t sub_20A1A1E00()
{
  unint64_t result;

  result = qword_2545DAED8;
  if (!qword_2545DAED8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderBundleTypeCheckOutcome, &type metadata for MobileDocumentReaderBundleTypeCheckOutcome);
    atomic_store(result, (unint64_t *)&qword_2545DAED8);
  }
  return result;
}

uint64_t dispatch thunk of MobileDocumentReaderEntitlementChecking.checkInternalEntitlement(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MobileDocumentReaderEntitlementChecking.checkPublicEntitlements(auditToken:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[2];
  char v8;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(uint64_t (**)(_OWORD *))(a3 + 16);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v8 = v3;
  return v4(v7) & 1;
}

uint64_t dispatch thunk of MobileDocumentReaderEntitlementChecking.checkDevelopmentFlagEntitlements(auditToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of MobileDocumentReaderEntitlementChecking.checkBundleTypeSupported(auditToken:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[2];
  char v8;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(uint64_t (**)(_OWORD *))(a3 + 32);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v8 = v3;
  return v4(v7);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderBundleTypeCheckOutcome(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A1A1F0C + 4 * byte_20A1B8C75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A1A1F40 + 4 * byte_20A1B8C70[v4]))();
}

uint64_t sub_20A1A1F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A1F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A1F50);
  return result;
}

uint64_t sub_20A1A1F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A1F64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A1A1F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A1F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderBundleTypeCheckOutcome()
{
  return &type metadata for MobileDocumentReaderBundleTypeCheckOutcome;
}

uint64_t initializeWithCopy for MobileDocumentReaderEntitlementChecker(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for MobileDocumentReaderEntitlementChecker(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for MobileDocumentReaderEntitlementChecker(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderEntitlementChecker(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderEntitlementChecker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderEntitlementChecker()
{
  return &type metadata for MobileDocumentReaderEntitlementChecker;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderEntitlementChecker.Constant()
{
  return &type metadata for MobileDocumentReaderEntitlementChecker.Constant;
}

uint64_t sub_20A1A223C()
{
  uint64_t result;

  result = os_variant_allows_internal_security_policies();
  byte_2545F54E8 = result;
  return result;
}

id static related decl 'e' for DIIdentityError.make(_:)(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  sub_20A1A8DB4();
  v2 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v3 = (void *)sub_20A1A8D9C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, a1, 0);

  return v4;
}

id static DigitalPresentmentXPCInterface.interface()()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2545FA9F0);
}

unint64_t machServiceDigitalPresentmentXPC.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t DigitalPresentmentXPCInterface.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DigitalPresentmentXPCInterface.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DigitalPresentmentXPCInterface()
{
  return objc_opt_self();
}

uint64_t method lookup function for DigitalPresentmentXPCInterface()
{
  return swift_lookUpClassMethod();
}

id sub_20A1A238C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for BundleToken();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_2545F54F0 = (uint64_t)result;
  return result;
}

uint64_t sub_20A1A23E0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BundleToken()
{
  return objc_opt_self();
}

uint64_t MobileDocumentReaderMerchant.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderMerchant.logoData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_20A127ED0(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t MobileDocumentReaderMerchant.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReaderMerchant.init(name:logoData:identifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t MobileDocumentReaderMerchant.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v2 >> 60 == 15)
  {
    sub_20A1A9324();
    if (v3)
    {
LABEL_3:
      sub_20A1A9324();
      swift_bridgeObjectRetain();
      sub_20A1A8DE4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_20A1A9324();
    sub_20A120BD8(v1, v2);
    sub_20A1A8C34();
    sub_20A127EE4(v1, v2);
    if (v3)
      goto LABEL_3;
  }
  return sub_20A1A9324();
}

uint64_t sub_20A1A25AC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x617461446F676F6CLL;
  if (*v0 != 1)
    v1 = 0x696669746E656469;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_20A1A2604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A1A32A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A1A2628()
{
  sub_20A1A2E1C();
  return sub_20A1A9360();
}

uint64_t sub_20A1A2650()
{
  sub_20A1A2E1C();
  return sub_20A1A936C();
}

uint64_t MobileDocumentReaderMerchant.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAEE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v12 = v1[3];
  v13 = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1A2E1C();
  sub_20A1A9354();
  LOBYTE(v15) = 0;
  v9 = v14;
  sub_20A1A9204();
  if (!v9)
  {
    v15 = v13;
    v16 = v12;
    v17 = 1;
    sub_20A1275D8();
    sub_20A1A91F8();
    LOBYTE(v15) = 2;
    sub_20A1A91E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDocumentReaderMerchant.hashValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v2 >> 60 != 15)
  {
    sub_20A1A9324();
    sub_20A120BD8(v1, v2);
    sub_20A1A8C34();
    sub_20A127EE4(v1, v2);
    if (v3)
      goto LABEL_3;
LABEL_5:
    sub_20A1A9324();
    return sub_20A1A933C();
  }
  sub_20A1A9324();
  if (!v3)
    goto LABEL_5;
LABEL_3:
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t MobileDocumentReaderMerchant.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DAEF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A1A2E1C();
  sub_20A1A9348();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v24) = 0;
  v9 = sub_20A1A918C();
  v11 = v10;
  v23 = v9;
  v26 = 1;
  sub_20A127940();
  swift_bridgeObjectRetain();
  sub_20A1A9180();
  v12 = v24;
  LOBYTE(v24) = 2;
  v21 = v25;
  v22 = v12;
  sub_20A127ED0(v12, v25);
  v13 = sub_20A1A9168();
  v15 = v14;
  v16 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v18 = v21;
  v17 = v22;
  sub_20A127ED0(v22, v21);
  swift_bridgeObjectRetain();
  sub_20A127EE4(v17, v18);
  swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v17;
  a2[3] = v18;
  a2[4] = v16;
  a2[5] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_20A127EE4(v17, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A1A2B7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDocumentReaderMerchant.init(from:)(a1, a2);
}

uint64_t sub_20A1A2B90(_QWORD *a1)
{
  return MobileDocumentReaderMerchant.encode(to:)(a1);
}

uint64_t sub_20A1A2BAC()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  sub_20A1A930C();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  if (v2 >> 60 != 15)
  {
    sub_20A1A9324();
    sub_20A120BD8(v1, v2);
    sub_20A1A8C34();
    sub_20A127EE4(v1, v2);
    if (v3)
      goto LABEL_3;
LABEL_5:
    sub_20A1A9324();
    return sub_20A1A933C();
  }
  sub_20A1A9324();
  if (!v3)
    goto LABEL_5;
LABEL_3:
  sub_20A1A9324();
  swift_bridgeObjectRetain();
  sub_20A1A8DE4();
  swift_bridgeObjectRelease();
  return sub_20A1A933C();
}

uint64_t _s7CoreIDV28MobileDocumentReaderMerchantV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;
  char v13;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_20A1A9258(), result = 0, (v10 & 1) != 0))
  {
    if (v4 >> 60 == 15)
    {
      if (v6 >> 60 == 15)
      {
LABEL_10:
        if (v5)
        {
          if (v8 && (v3 == v9 && v5 == v8 || (sub_20A1A9258() & 1) != 0))
            return 1;
        }
        else if (!v8)
        {
          return 1;
        }
        return 0;
      }
    }
    else if (v6 >> 60 != 15)
    {
      sub_20A127ED0(v2, v4);
      sub_20A127ED0(v7, v6);
      sub_20A1692C0(v2, v4);
      v13 = v12;
      sub_20A127EE4(v7, v6);
      sub_20A127EE4(v2, v4);
      if ((v13 & 1) != 0)
        goto LABEL_10;
      return 0;
    }
    sub_20A127ED0(v2, v4);
    sub_20A127ED0(v7, v6);
    sub_20A127EE4(v2, v4);
    sub_20A127EE4(v7, v6);
    return 0;
  }
  return result;
}

unint64_t sub_20A1A2E1C()
{
  unint64_t result;

  result = qword_2545DAEE8;
  if (!qword_2545DAEE8)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B8FE0, &type metadata for MobileDocumentReaderMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAEE8);
  }
  return result;
}

unint64_t sub_20A1A2E64()
{
  unint64_t result;

  result = qword_2545DAEF8;
  if (!qword_2545DAEF8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderMerchant, &type metadata for MobileDocumentReaderMerchant);
    atomic_store(result, (unint64_t *)&qword_2545DAEF8);
  }
  return result;
}

uint64_t destroy for MobileDocumentReaderMerchant(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_20A120E74(*(_QWORD *)(a1 + 16), v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MobileDocumentReaderMerchant(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_20A120BD8(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MobileDocumentReaderMerchant(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_20A120BD8(*v4, a2[3]);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_20A120E74(v8, v9);
      goto LABEL_8;
    }
    sub_20A122530((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_20A120BD8(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MobileDocumentReaderMerchant(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_20A120E74(v8, v6);
      goto LABEL_6;
    }
    sub_20A122530((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderMerchant()
{
  return &type metadata for MobileDocumentReaderMerchant;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderMerchant.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A1A3148 + 4 * byte_20A1B8E25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A1A317C + 4 * asc_20A1B8E20[v4]))();
}

uint64_t sub_20A1A317C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A3184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A1A318CLL);
  return result;
}

uint64_t sub_20A1A3198(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A1A31A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A1A31A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A1A31AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderMerchant.CodingKeys()
{
  return &type metadata for MobileDocumentReaderMerchant.CodingKeys;
}

unint64_t sub_20A1A31CC()
{
  unint64_t result;

  result = qword_2545DAF00;
  if (!qword_2545DAF00)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B8FB8, &type metadata for MobileDocumentReaderMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAF00);
  }
  return result;
}

unint64_t sub_20A1A3214()
{
  unint64_t result;

  result = qword_2545DAF08;
  if (!qword_2545DAF08)
  {
    result = MEMORY[0x20BD21434](&unk_20A1B8F28, &type metadata for MobileDocumentReaderMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545DAF08);
  }
  return result;
}

unint64_t sub_20A1A325C()
{
  unint64_t result;

  result = qword_2545DAF10[0];
  if (!qword_2545DAF10[0])
  {
    result = MEMORY[0x20BD21434](&unk_20A1B8F50, &type metadata for MobileDocumentReaderMerchant.CodingKeys);
    atomic_store(result, qword_2545DAF10);
  }
  return result;
}

uint64_t sub_20A1A32A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446F676F6CLL && a2 == 0xE800000000000000 || (sub_20A1A9258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A1A9258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A1A33F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A1A3444()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_invalidate);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SendableXPCConnection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SendableXPCConnection);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x20BD213D4](a1, v6, a5);
}

void _s7CoreIDV36XPCMobileDocumentReaderConfigurationC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_20A1A7A64();
  swift_bridgeObjectRetain();
  sub_20A1A8FB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_20A1A8D9C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_20A1A3620(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  id v9;
  id v10;
  void *v11;
  id v12;

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  a3(0);
  sub_20A1205FC(a4, a3, a5);
  sub_20A1A8FB8();
  objc_msgSend(v9, sel_finishEncoding);
  v10 = objc_msgSend(v9, sel_encodedData);
  if (v10)
  {
    v11 = v10;
    v12 = (id)sub_20A1A8D9C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  }
  else
  {
    __break(1u);
  }
}

void _s7CoreIDV31XPCMobileDocumentReaderMerchantC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  __int128 v8;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 16);
  v8 = *(_OWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 24);
  swift_bridgeObjectRetain();
  sub_20A127ED0(v4, v8);
  sub_20A1A7B4C();
  swift_bridgeObjectRetain();
  sub_20A1A8FB8();
  swift_bridgeObjectRelease();
  sub_20A127EE4(v4, v8);
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_finishEncoding);
  v5 = objc_msgSend(v3, sel_encodedData);
  if (v5)
  {
    v6 = v5;
    v7 = (void *)sub_20A1A8D9C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  }
  else
  {
    __break(1u);
  }
}

void _s7CoreIDV43XPCMobileDocumentReaderDeviceEngagementTypeC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value + 8);
  sub_20A127ED0(v7, v8);
  sub_20A1A7C34();
  sub_20A1A8FB8();
  sub_20A127EE4(v7, v8);
  objc_msgSend(v3, sel_finishEncoding);
  v4 = objc_msgSend(v3, sel_encodedData);
  if (v4)
  {
    v5 = v4;
    v6 = (void *)sub_20A1A8D9C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  }
  else
  {
    __break(1u);
  }
}

void sub_20A1A3A90(void *a1, uint64_t a2, void (*a3)(void))
{
  id v5;
  id v6;
  void *v7;
  void *v8;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  a3();
  swift_bridgeObjectRetain();
  sub_20A1A8FB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_finishEncoding);
  v6 = objc_msgSend(v5, sel_encodedData);
  if (v6)
  {
    v7 = v6;
    v8 = (void *)sub_20A1A8D9C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  }
  else
  {
    __break(1u);
  }
}

id XPCIdentityDocumentDescriptor.__allocating_init(value:)(uint64_t a1)
{
  return sub_20A1A3C10(a1, &OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, type metadata accessor for IdentityDocumentDescriptor);
}

id XPCMobileDocumentReaderIdentityKeyRequest.__allocating_init(value:)(uint64_t a1)
{
  return sub_20A1A3C10(a1, &OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
}

id sub_20A1A3C10(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  objc_class *v3;
  id v7;
  id v8;
  objc_super v10;

  v7 = objc_allocWithZone(v3);
  sub_20A127E8C(a1, (uint64_t)v7 + *a2, a3);
  v10.receiver = v7;
  v10.super_class = v3;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_20A124284(a1, a3);
  return v8;
}

id XPCMobileDocumentReaderCertificateRequest.__allocating_init(value:)(uint64_t a1)
{
  return sub_20A1A3C10(a1, &OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
}

id XPCMobileDocumentReaderConfiguration.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char v4;
  char *v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = &v3[OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value];
  *(_OWORD *)v5 = *(_OWORD *)a1;
  v5[16] = v4;
  v7.receiver = v3;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id XPCMobileDocumentReaderRequest.__allocating_init(value:)(uint64_t a1)
{
  return sub_20A1A3C10(a1, &OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, type metadata accessor for MobileDocumentReaderRequest);
}

id XPCMobileDocumentReaderDeviceEngagementType.__allocating_init(value:)(_OWORD *a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_OWORD *)&v3[OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id XPCAuditToken.__allocating_init(value:)(_QWORD *a1)
{
  return sub_20A1A5AB0(a1, &OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value);
}

uint64_t static XPCMobileDocumentReaderSessionState.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderSessionState.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV35XPCMobileDocumentReaderSessionState_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
}

id XPCMobileDocumentReaderSessionState.__allocating_init(value:)(uint64_t a1)
{
  return sub_20A1A3C10(a1, &OBJC_IVAR____TtC7CoreIDV35XPCMobileDocumentReaderSessionState_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
}

id XPCMobileDocumentReaderSessionState.init(value:)(uint64_t a1)
{
  return sub_20A1A41CC(a1, &OBJC_IVAR____TtC7CoreIDV35XPCMobileDocumentReaderSessionState_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
}

uint64_t XPCMobileDocumentReaderSessionState.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A425C(a1, (uint64_t (*)(uint64_t))sub_20A1A6024);
}

uint64_t XPCMobileDocumentReaderSessionState.init(coder:)(uint64_t a1)
{
  return sub_20A1A42DC(a1, (uint64_t (*)(uint64_t))sub_20A1A6024);
}

Swift::Void __swiftcall XPCMobileDocumentReaderSessionState.encode(with:)(NSCoder with)
{
  sub_20A1A3620(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV35XPCMobileDocumentReaderSessionState_value, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession.State, &qword_2545DAFE0, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession.State);
}

void XPCMobileDocumentReaderSessionState.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A3F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV35XPCMobileDocumentReaderSessionState_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
}

id sub_20A1A3F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A452C(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV35XPCMobileDocumentReaderSessionState_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
}

uint64_t static XPCMobileDocumentReaderConfiguration.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderConfiguration.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value + 8);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

id XPCMobileDocumentReaderConfiguration.init(value:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char v4;
  char *v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *(_BYTE *)(a1 + 16);
  v5 = &v1[OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value];
  *(_OWORD *)v5 = *(_OWORD *)a1;
  v5[16] = v4;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t XPCMobileDocumentReaderConfiguration.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A46F0(a1, (uint64_t (*)(uint64_t))sub_20A1A62D8);
}

uint64_t XPCMobileDocumentReaderConfiguration.init(coder:)(uint64_t a1)
{
  return sub_20A1A476C(a1, (uint64_t (*)(uint64_t))sub_20A1A62D8);
}

void XPCMobileDocumentReaderConfiguration.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A40EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value + 8);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

id sub_20A1A410C(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char v4;
  char *v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = &v3[OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value];
  *(_OWORD *)v5 = *(_OWORD *)a1;
  v5[16] = v4;
  v7.receiver = v3;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t static XPCMobileDocumentReaderConfigurationResponse.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderConfigurationResponse.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
}

id XPCMobileDocumentReaderConfigurationResponse.__allocating_init(value:)(uint64_t a1)
{
  return sub_20A1A3C10(a1, &OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
}

id XPCMobileDocumentReaderConfigurationResponse.init(value:)(uint64_t a1)
{
  return sub_20A1A41CC(a1, &OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
}

id sub_20A1A41CC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  void *v3;
  objc_class *ObjectType;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_20A127E8C(a1, (uint64_t)v3 + *a2, a3);
  v10.receiver = v3;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_20A124284(a1, a3);
  return v8;
}

uint64_t XPCMobileDocumentReaderConfigurationResponse.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A425C(a1, (uint64_t (*)(uint64_t))sub_20A1A6484);
}

uint64_t sub_20A1A425C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  objc_class *v2;
  id v5;
  uint64_t v6;

  v5 = objc_allocWithZone(v2);
  swift_getObjectType();
  v6 = a2(a1);
  swift_deallocPartialClassInstance();
  return v6;
}

uint64_t XPCMobileDocumentReaderConfigurationResponse.init(coder:)(uint64_t a1)
{
  return sub_20A1A42DC(a1, (uint64_t (*)(uint64_t))sub_20A1A6484);
}

uint64_t sub_20A1A42DC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;

  swift_getObjectType();
  v4 = a2(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t sub_20A1A4354(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void *))
{
  uint64_t v6;

  swift_getObjectType();
  v6 = a4(a3);
  swift_deallocPartialClassInstance();
  return v6;
}

Swift::Void __swiftcall XPCMobileDocumentReaderConfigurationResponse.encode(with:)(NSCoder with)
{
  sub_20A1A3620(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderConfigurationResponse, &qword_2545DB000, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderConfigurationResponse);
}

void XPCMobileDocumentReaderConfigurationResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A44EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
}

id sub_20A1A4518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A452C(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
}

id sub_20A1A452C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  objc_class *v5;
  id v9;
  id v10;
  objc_super v12;

  v9 = objc_allocWithZone(v5);
  sub_20A127E8C(a1, (uint64_t)v9 + *a4, a5);
  v12.receiver = v9;
  v12.super_class = v5;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_20A124284(a1, a5);
  return v10;
}

uint64_t static XPCMobileDocumentReaderMerchant.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderMerchant.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v2 = v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 16);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  v8 = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_20A127ED0(v5, v8);
  return swift_bridgeObjectRetain();
}

id XPCMobileDocumentReaderMerchant.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  objc_super v8;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = &v3[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value];
  *(_QWORD *)v5 = *(_QWORD *)a1;
  *((_QWORD *)v5 + 1) = v4;
  v6 = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v5 + 2) = v6;
  v8.receiver = v3;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id XPCMobileDocumentReaderMerchant.init(value:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  char *v5;
  __int128 v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = &v1[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value];
  *(_QWORD *)v5 = *(_QWORD *)a1;
  *((_QWORD *)v5 + 1) = v4;
  v6 = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v5 + 2) = v6;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t XPCMobileDocumentReaderMerchant.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A46F0(a1, (uint64_t (*)(uint64_t))sub_20A1A6738);
}

uint64_t sub_20A1A46F0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  objc_class *v2;
  id v5;
  uint64_t v6;

  v5 = objc_allocWithZone(v2);
  swift_getObjectType();
  v6 = a2(a1);
  swift_deallocPartialClassInstance();
  return v6;
}

uint64_t XPCMobileDocumentReaderMerchant.init(coder:)(uint64_t a1)
{
  return sub_20A1A476C(a1, (uint64_t (*)(uint64_t))sub_20A1A6738);
}

uint64_t sub_20A1A476C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;

  swift_getObjectType();
  v4 = a2(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t sub_20A1A47E0(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void *))
{
  uint64_t v6;

  swift_getObjectType();
  v6 = a4(a3);
  swift_deallocPartialClassInstance();
  return v6;
}

void XPCMobileDocumentReaderMerchant.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A4944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v2 = v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 16);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  v8 = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_20A127ED0(v5, v8);
  return swift_bridgeObjectRetain();
}

id sub_20A1A49AC(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  objc_super v8;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = &v3[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value];
  *(_QWORD *)v5 = *(_QWORD *)a1;
  *((_QWORD *)v5 + 1) = v4;
  v6 = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v5 + 2) = v6;
  v8.receiver = v3;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t static XPCMobileDocumentReaderRequest.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderRequest.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, a1, type metadata accessor for MobileDocumentReaderRequest);
}

id XPCMobileDocumentReaderRequest.init(value:)(uint64_t a1)
{
  return sub_20A1A41CC(a1, &OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, type metadata accessor for MobileDocumentReaderRequest);
}

uint64_t XPCMobileDocumentReaderRequest.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A425C(a1, (uint64_t (*)(uint64_t))sub_20A1A68F4);
}

uint64_t XPCMobileDocumentReaderRequest.init(coder:)(uint64_t a1)
{
  return sub_20A1A42DC(a1, (uint64_t (*)(uint64_t))sub_20A1A68F4);
}

Swift::Void __swiftcall XPCMobileDocumentReaderRequest.encode(with:)(NSCoder with)
{
  sub_20A1A3620(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, type metadata accessor for MobileDocumentReaderRequest, &qword_2545DB020, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest);
}

void XPCMobileDocumentReaderRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A4BA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, a1, type metadata accessor for MobileDocumentReaderRequest);
}

id sub_20A1A4BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A452C(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, type metadata accessor for MobileDocumentReaderRequest);
}

uint64_t static XPCMobileDocumentReaderDeviceEngagementType.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderDeviceEngagementType.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_20A127ED0(v2, v3);
}

id XPCMobileDocumentReaderDeviceEngagementType.init(value:)(_OWORD *a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_OWORD *)&v1[OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t XPCMobileDocumentReaderDeviceEngagementType.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A46F0(a1, (uint64_t (*)(uint64_t))sub_20A1A6BA8);
}

uint64_t XPCMobileDocumentReaderDeviceEngagementType.init(coder:)(uint64_t a1)
{
  return sub_20A1A476C(a1, (uint64_t (*)(uint64_t))sub_20A1A6BA8);
}

void XPCMobileDocumentReaderDeviceEngagementType.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A4D58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_20A127ED0(v2, v3);
}

id sub_20A1A4D70(_OWORD *a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_OWORD *)&v3[OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static XPCMobileDocumentReaderResponse.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderResponse.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, a1, type metadata accessor for MobileDocumentReaderResponse);
}

id XPCMobileDocumentReaderResponse.__allocating_init(value:)(uint64_t a1)
{
  return sub_20A1A3C10(a1, &OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, type metadata accessor for MobileDocumentReaderResponse);
}

id XPCMobileDocumentReaderResponse.init(value:)(uint64_t a1)
{
  return sub_20A1A41CC(a1, &OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, type metadata accessor for MobileDocumentReaderResponse);
}

uint64_t XPCMobileDocumentReaderResponse.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A425C(a1, (uint64_t (*)(uint64_t))sub_20A1A6D4C);
}

uint64_t XPCMobileDocumentReaderResponse.init(coder:)(uint64_t a1)
{
  return sub_20A1A42DC(a1, (uint64_t (*)(uint64_t))sub_20A1A6D4C);
}

Swift::Void __swiftcall XPCMobileDocumentReaderResponse.encode(with:)(NSCoder with)
{
  sub_20A1A3620(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, type metadata accessor for MobileDocumentReaderResponse, &qword_2545DB040, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse);
}

void XPCMobileDocumentReaderResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A4F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, a1, type metadata accessor for MobileDocumentReaderResponse);
}

id sub_20A1A4FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A452C(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, type metadata accessor for MobileDocumentReaderResponse);
}

uint64_t static XPCAuditToken.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCAuditToken.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value);
  return swift_bridgeObjectRetain();
}

id XPCAuditToken.init(value:)(_QWORD *a1)
{
  return sub_20A1A5B14(a1, &OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value);
}

id XPCAuditToken.__allocating_init(coder:)(void *a1)
{
  return sub_20A1A5008(a1, (void (*)(uint64_t))sub_20A1A7CD4, (uint64_t)&type metadata for AuditToken, (uint64_t (*)(uint64_t))type metadata accessor for XPCAuditToken, &OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value);
}

id sub_20A1A5008(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  objc_class *v5;
  id v11;
  id v12;

  v11 = objc_allocWithZone(v5);
  swift_getObjectType();
  v12 = sub_20A1A7568(a1, a2, a3, a4, a5);
  swift_deallocPartialClassInstance();
  return v12;
}

id XPCAuditToken.init(coder:)(void *a1)
{
  return sub_20A1A50B8(a1, (void (*)(uint64_t))sub_20A1A7CD4, (uint64_t)&type metadata for AuditToken, (uint64_t (*)(uint64_t))type metadata accessor for XPCAuditToken, &OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value);
}

id sub_20A1A50B8(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  id v10;

  swift_getObjectType();
  v10 = sub_20A1A7568(a1, a2, a3, a4, a5);
  swift_deallocPartialClassInstance();
  return v10;
}

id sub_20A1A5160(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t), _QWORD *a7)
{
  id v12;

  swift_getObjectType();
  v12 = sub_20A1A7568(a3, a4, a5, a6, a7);
  swift_deallocPartialClassInstance();
  return v12;
}

Swift::Void __swiftcall XPCAuditToken.encode(with:)(NSCoder with)
{
  sub_20A1A3A90(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value, (void (*)(void))sub_20A1A7D1C);
}

id XPCAuditToken.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void XPCAuditToken.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A5308@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value);
  return swift_bridgeObjectRetain();
}

id sub_20A1A531C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A5CFC(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV13XPCAuditToken_value);
}

uint64_t static XPCMobileDocumentReaderIdentityKeyRequest.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderIdentityKeyRequest.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
}

id XPCMobileDocumentReaderIdentityKeyRequest.init(value:)(uint64_t a1)
{
  return sub_20A1A41CC(a1, &OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
}

uint64_t XPCMobileDocumentReaderIdentityKeyRequest.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A425C(a1, (uint64_t (*)(uint64_t))sub_20A1A7000);
}

uint64_t XPCMobileDocumentReaderIdentityKeyRequest.init(coder:)(uint64_t a1)
{
  return sub_20A1A42DC(a1, (uint64_t (*)(uint64_t))sub_20A1A7000);
}

Swift::Void __swiftcall XPCMobileDocumentReaderIdentityKeyRequest.encode(with:)(NSCoder with)
{
  sub_20A1A3620(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyRequest, &qword_2545DB060, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyRequest);
}

void XPCMobileDocumentReaderIdentityKeyRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A54C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
}

id sub_20A1A54F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A452C(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
}

uint64_t static XPCMobileDocumentReaderCertificateRequest.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderCertificateRequest.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
}

id XPCMobileDocumentReaderCertificateRequest.init(value:)(uint64_t a1)
{
  return sub_20A1A41CC(a1, &OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
}

uint64_t XPCMobileDocumentReaderCertificateRequest.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A425C(a1, (uint64_t (*)(uint64_t))sub_20A1A72B4);
}

uint64_t XPCMobileDocumentReaderCertificateRequest.init(coder:)(uint64_t a1)
{
  return sub_20A1A42DC(a1, (uint64_t (*)(uint64_t))sub_20A1A72B4);
}

Swift::Void __swiftcall XPCMobileDocumentReaderCertificateRequest.encode(with:)(NSCoder with)
{
  sub_20A1A3620(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderCertificateRequest, &qword_2545DB070, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderCertificateRequest);
}

void XPCMobileDocumentReaderCertificateRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A56A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
}

id sub_20A1A56D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A452C(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
}

uint64_t static XPCMobileDocumentReaderIdentityKeyResponse.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderIdentityKeyResponse.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value);
  return swift_bridgeObjectRetain();
}

id XPCMobileDocumentReaderIdentityKeyResponse.__allocating_init(value:)(_QWORD *a1)
{
  return sub_20A1A5AB0(a1, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value);
}

id XPCMobileDocumentReaderIdentityKeyResponse.init(value:)(_QWORD *a1)
{
  return sub_20A1A5B14(a1, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value);
}

id XPCMobileDocumentReaderIdentityKeyResponse.__allocating_init(coder:)(void *a1)
{
  return sub_20A1A5008(a1, (void (*)(uint64_t))sub_20A1A7E14, (uint64_t)&type metadata for MobileDocumentReaderIdentityKeyResponse, (uint64_t (*)(uint64_t))type metadata accessor for XPCMobileDocumentReaderIdentityKeyResponse, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value);
}

id XPCMobileDocumentReaderIdentityKeyResponse.init(coder:)(void *a1)
{
  return sub_20A1A50B8(a1, (void (*)(uint64_t))sub_20A1A7E14, (uint64_t)&type metadata for MobileDocumentReaderIdentityKeyResponse, (uint64_t (*)(uint64_t))type metadata accessor for XPCMobileDocumentReaderIdentityKeyResponse, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value);
}

Swift::Void __swiftcall XPCMobileDocumentReaderIdentityKeyResponse.encode(with:)(NSCoder with)
{
  sub_20A1A3A90(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value, (void (*)(void))sub_20A1A7E5C);
}

void XPCMobileDocumentReaderIdentityKeyResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A5894@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value);
  return swift_bridgeObjectRetain();
}

id sub_20A1A58A8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A5CFC(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderIdentityKeyResponse_value);
}

uint64_t static XPCMobileDocumentReaderCertificateResponse.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderCertificateResponse.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value);
  return swift_bridgeObjectRetain();
}

id XPCMobileDocumentReaderCertificateResponse.__allocating_init(value:)(_QWORD *a1)
{
  return sub_20A1A5AB0(a1, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value);
}

id XPCMobileDocumentReaderCertificateResponse.init(value:)(_QWORD *a1)
{
  return sub_20A1A5B14(a1, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value);
}

id XPCMobileDocumentReaderCertificateResponse.__allocating_init(coder:)(void *a1)
{
  return sub_20A1A5008(a1, (void (*)(uint64_t))sub_20A1A7EA4, (uint64_t)&type metadata for MobileDocumentReaderCertificateResponse, (uint64_t (*)(uint64_t))type metadata accessor for XPCMobileDocumentReaderCertificateResponse, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value);
}

id XPCMobileDocumentReaderCertificateResponse.init(coder:)(void *a1)
{
  return sub_20A1A50B8(a1, (void (*)(uint64_t))sub_20A1A7EA4, (uint64_t)&type metadata for MobileDocumentReaderCertificateResponse, (uint64_t (*)(uint64_t))type metadata accessor for XPCMobileDocumentReaderCertificateResponse, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value);
}

Swift::Void __swiftcall XPCMobileDocumentReaderCertificateResponse.encode(with:)(NSCoder with)
{
  sub_20A1A3A90(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value, (void (*)(void))sub_20A1A7EEC);
}

void XPCMobileDocumentReaderCertificateResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A5A60@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value);
  return swift_bridgeObjectRetain();
}

id sub_20A1A5A74(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A5CFC(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV42XPCMobileDocumentReaderCertificateResponse_value);
}

uint64_t static XPCMobileDocumentReaderIssuerRootCertificateList.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCMobileDocumentReaderIssuerRootCertificateList.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value);
  return swift_bridgeObjectRetain();
}

id XPCMobileDocumentReaderIssuerRootCertificateList.__allocating_init(value:)(_QWORD *a1)
{
  return sub_20A1A5AB0(a1, &OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value);
}

id sub_20A1A5AB0(_QWORD *a1, _QWORD *a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[*a2] = *a1;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id XPCMobileDocumentReaderIssuerRootCertificateList.init(value:)(_QWORD *a1)
{
  return sub_20A1A5B14(a1, &OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value);
}

id sub_20A1A5B14(_QWORD *a1, _QWORD *a2)
{
  char *v2;
  objc_class *ObjectType;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[*a2] = *a1;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id XPCMobileDocumentReaderIssuerRootCertificateList.__allocating_init(coder:)(void *a1)
{
  return sub_20A1A5008(a1, (void (*)(uint64_t))sub_20A1A7F34, (uint64_t)&type metadata for MobileDocumentReaderIssuerRootCertificateList, (uint64_t (*)(uint64_t))type metadata accessor for XPCMobileDocumentReaderIssuerRootCertificateList, &OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value);
}

id XPCMobileDocumentReaderIssuerRootCertificateList.init(coder:)(void *a1)
{
  return sub_20A1A50B8(a1, (void (*)(uint64_t))sub_20A1A7F34, (uint64_t)&type metadata for MobileDocumentReaderIssuerRootCertificateList, (uint64_t (*)(uint64_t))type metadata accessor for XPCMobileDocumentReaderIssuerRootCertificateList, &OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value);
}

Swift::Void __swiftcall XPCMobileDocumentReaderIssuerRootCertificateList.encode(with:)(NSCoder with)
{
  sub_20A1A3A90(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value, (void (*)(void))sub_20A1A7F7C);
}

void XPCMobileDocumentReaderIssuerRootCertificateList.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_20A1A5CDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value);
  return swift_bridgeObjectRetain();
}

id sub_20A1A5CF0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A5CFC(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV48XPCMobileDocumentReaderIssuerRootCertificateList_value);
}

id sub_20A1A5CFC(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  objc_class *v4;
  char *v7;
  objc_super v9;

  v7 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v7[*a4] = *a1;
  v9.receiver = v7;
  v9.super_class = v4;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t static XPCIdentityDocumentDescriptor.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t XPCIdentityDocumentDescriptor.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, a1, type metadata accessor for IdentityDocumentDescriptor);
}

id XPCIdentityDocumentDescriptor.init(value:)(uint64_t a1)
{
  return sub_20A1A41CC(a1, &OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, type metadata accessor for IdentityDocumentDescriptor);
}

uint64_t XPCIdentityDocumentDescriptor.__allocating_init(coder:)(uint64_t a1)
{
  return sub_20A1A425C(a1, (uint64_t (*)(uint64_t))sub_20A1A770C);
}

uint64_t XPCIdentityDocumentDescriptor.init(coder:)(uint64_t a1)
{
  return sub_20A1A42DC(a1, (uint64_t (*)(uint64_t))sub_20A1A770C);
}

Swift::Void __swiftcall XPCIdentityDocumentDescriptor.encode(with:)(NSCoder with)
{
  sub_20A1A3620(with.super.isa, (uint64_t)&OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, type metadata accessor for IdentityDocumentDescriptor, (unint64_t *)&unk_2545DB0B0, (uint64_t)&protocol conformance descriptor for IdentityDocumentDescriptor);
}

void XPCIdentityDocumentDescriptor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _s7CoreIDV35XPCMobileDocumentReaderSessionStateCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A1A5F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20A127E8C(v1 + OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, a1, type metadata accessor for IdentityDocumentDescriptor);
}

id sub_20A1A5F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A452C(a1, a2, a3, &OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, type metadata accessor for IdentityDocumentDescriptor);
}

id sub_20A1A5F68()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_20A1A8C1C();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_20A1A8BBC();

    swift_willThrow();
  }
  return v2;
}

id sub_20A1A6024(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_class *v21;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545DB170);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentReaderSession.State();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_20A16F850();
  v12 = sub_20A1A8FD0();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_20A1A8C28();
    v16 = v15;

    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v14, v16);
    v18 = sub_20A1A5F68();
    sub_20A120E74(v14, v16);
    if (v18)
    {
      sub_20A1205FC(&qword_2545DAFD8, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession.State, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession.State);
      sub_20A1A8FC4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_20A12063C((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
        sub_20A127E8C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
        v21 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderSessionState(0);
        v22 = objc_allocWithZone(v21);
        sub_20A127E8C((uint64_t)v9, (uint64_t)v22 + OBJC_IVAR____TtC7CoreIDV35XPCMobileDocumentReaderSessionState_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
        v24.receiver = v22;
        v24.super_class = v21;
        v19 = objc_msgSendSuper2(&v24, sel_init);
        sub_20A124284((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
        sub_20A124284((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderSession.State);
        objc_msgSend(v18, sel_finishDecoding);

        sub_20A120E74(v14, v16);
        return v19;
      }
      sub_20A127E0C((uint64_t)v4, (uint64_t *)&unk_2545DB170);
      objc_msgSend(v18, sel_finishDecoding);

    }
    sub_20A120E74(v14, v16);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A62D8(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  char v12;
  objc_class *v13;
  char *v14;
  char *v15;
  objc_super v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  sub_20A16F850();
  v2 = sub_20A1A8FD0();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_20A1A8C28();
    v6 = v5;

    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v4, v6);
    v8 = sub_20A1A5F68();
    sub_20A120E74(v4, v6);
    if (v8)
    {
      sub_20A1A7A1C();
      sub_20A1A8FC4();
      v9 = v18;
      if (v18 != 1)
      {
        v12 = v19 & 1;
        v13 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderConfiguration();
        v14 = (char *)objc_allocWithZone(v13);
        v15 = &v14[OBJC_IVAR____TtC7CoreIDV36XPCMobileDocumentReaderConfiguration_value];
        *(_QWORD *)v15 = v17;
        *((_QWORD *)v15 + 1) = v9;
        v15[16] = v12;
        v16.receiver = v14;
        v16.super_class = v13;
        v10 = objc_msgSendSuper2(&v16, sel_init);
        objc_msgSend(v8, sel_finishDecoding);

        sub_20A120E74(v4, v6);
        return v10;
      }
      objc_msgSend(v8, sel_finishDecoding);

    }
    sub_20A120E74(v4, v6);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A6484(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_class *v21;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DB168);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentReaderConfigurationResponse();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_20A16F850();
  v12 = sub_20A1A8FD0();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_20A1A8C28();
    v16 = v15;

    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v14, v16);
    v18 = sub_20A1A5F68();
    sub_20A120E74(v14, v16);
    if (v18)
    {
      sub_20A1205FC(&qword_2545DAFF8, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderConfigurationResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderConfigurationResponse);
      sub_20A1A8FC4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_20A12063C((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
        sub_20A127E8C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
        v21 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderConfigurationResponse(0);
        v22 = objc_allocWithZone(v21);
        sub_20A127E8C((uint64_t)v9, (uint64_t)v22 + OBJC_IVAR____TtC7CoreIDV44XPCMobileDocumentReaderConfigurationResponse_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
        v24.receiver = v22;
        v24.super_class = v21;
        v19 = objc_msgSendSuper2(&v24, sel_init);
        sub_20A124284((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
        sub_20A124284((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderConfigurationResponse);
        objc_msgSend(v18, sel_finishDecoding);

        sub_20A120E74(v14, v16);
        return v19;
      }
      sub_20A127E0C((uint64_t)v4, &qword_2545DB168);
      objc_msgSend(v18, sel_finishDecoding);

    }
    sub_20A120E74(v14, v16);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A6738(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  id v15;
  __int128 v17;
  objc_super v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  sub_20A16F850();
  v2 = sub_20A1A8FD0();
  if (!v2)
  {

    return 0;
  }
  v3 = (void *)v2;
  v4 = sub_20A1A8C28();
  v6 = v5;

  v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_20A120BD8(v4, v6);
  v8 = sub_20A1A5F68();
  sub_20A120E74(v4, v6);
  if (!v8)
  {
LABEL_8:

    sub_20A120E74(v4, v6);
    return 0;
  }
  sub_20A1A7B04();
  sub_20A1A8FC4();
  v9 = v20;
  if (!v20)
  {
    objc_msgSend(v8, sel_finishDecoding);

    goto LABEL_8;
  }
  v11 = v22;
  v10 = v23;
  v17 = v21;
  v12 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderMerchant();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderMerchant_value];
  *(_QWORD *)v14 = v19;
  *((_QWORD *)v14 + 1) = v9;
  *((_OWORD *)v14 + 1) = v17;
  *((_QWORD *)v14 + 4) = v11;
  *((_QWORD *)v14 + 5) = v10;
  v18.receiver = v13;
  v18.super_class = v12;
  v15 = objc_msgSendSuper2(&v18, sel_init);
  objc_msgSend(v8, sel_finishDecoding);

  sub_20A120E74(v4, v6);
  return v15;
}

id sub_20A1A68F4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_class *v21;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DB160);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentReaderRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_20A16F850();
  v12 = sub_20A1A8FD0();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_20A1A8C28();
    v16 = v15;

    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v14, v16);
    v18 = sub_20A1A5F68();
    sub_20A120E74(v14, v16);
    if (v18)
    {
      sub_20A1205FC(&qword_2545DB018, type metadata accessor for MobileDocumentReaderRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest);
      sub_20A1A8FC4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_20A12063C((uint64_t)v4, (uint64_t)v11, type metadata accessor for MobileDocumentReaderRequest);
        sub_20A127E8C((uint64_t)v11, (uint64_t)v9, type metadata accessor for MobileDocumentReaderRequest);
        v21 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderRequest(0);
        v22 = objc_allocWithZone(v21);
        sub_20A127E8C((uint64_t)v9, (uint64_t)v22 + OBJC_IVAR____TtC7CoreIDV30XPCMobileDocumentReaderRequest_value, type metadata accessor for MobileDocumentReaderRequest);
        v24.receiver = v22;
        v24.super_class = v21;
        v19 = objc_msgSendSuper2(&v24, sel_init);
        sub_20A124284((uint64_t)v9, type metadata accessor for MobileDocumentReaderRequest);
        sub_20A124284((uint64_t)v11, type metadata accessor for MobileDocumentReaderRequest);
        objc_msgSend(v18, sel_finishDecoding);

        sub_20A120E74(v14, v16);
        return v19;
      }
      sub_20A127E0C((uint64_t)v4, &qword_2545DB160);
      objc_msgSend(v18, sel_finishDecoding);

    }
    sub_20A120E74(v14, v16);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A6BA8(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  objc_class *v12;
  char *v13;
  char *v14;
  objc_super v15;
  uint64_t v16;
  unint64_t v17;

  sub_20A16F850();
  v2 = sub_20A1A8FD0();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_20A1A8C28();
    v6 = v5;

    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v4, v6);
    v8 = sub_20A1A5F68();
    sub_20A120E74(v4, v6);
    if (v8)
    {
      sub_20A1A7BEC();
      sub_20A1A8FC4();
      v9 = v17;
      if (v17 >> 60 != 11)
      {
        v12 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderDeviceEngagementType();
        v13 = (char *)objc_allocWithZone(v12);
        v14 = &v13[OBJC_IVAR____TtC7CoreIDV43XPCMobileDocumentReaderDeviceEngagementType_value];
        *(_QWORD *)v14 = v16;
        *((_QWORD *)v14 + 1) = v9;
        v15.receiver = v13;
        v15.super_class = v12;
        v10 = objc_msgSendSuper2(&v15, sel_init);
        objc_msgSend(v8, sel_finishDecoding);

        sub_20A120E74(v4, v6);
        return v10;
      }
      objc_msgSend(v8, sel_finishDecoding);

    }
    sub_20A120E74(v4, v6);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A6D4C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_class *v21;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DB158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentReaderResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_20A16F850();
  v12 = sub_20A1A8FD0();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_20A1A8C28();
    v16 = v15;

    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v14, v16);
    v18 = sub_20A1A5F68();
    sub_20A120E74(v14, v16);
    if (v18)
    {
      sub_20A1205FC(&qword_2545D8198, type metadata accessor for MobileDocumentReaderResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse);
      sub_20A1A8FC4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_20A12063C((uint64_t)v4, (uint64_t)v11, type metadata accessor for MobileDocumentReaderResponse);
        sub_20A127E8C((uint64_t)v11, (uint64_t)v9, type metadata accessor for MobileDocumentReaderResponse);
        v21 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderResponse(0);
        v22 = objc_allocWithZone(v21);
        sub_20A127E8C((uint64_t)v9, (uint64_t)v22 + OBJC_IVAR____TtC7CoreIDV31XPCMobileDocumentReaderResponse_value, type metadata accessor for MobileDocumentReaderResponse);
        v24.receiver = v22;
        v24.super_class = v21;
        v19 = objc_msgSendSuper2(&v24, sel_init);
        sub_20A124284((uint64_t)v9, type metadata accessor for MobileDocumentReaderResponse);
        sub_20A124284((uint64_t)v11, type metadata accessor for MobileDocumentReaderResponse);
        objc_msgSend(v18, sel_finishDecoding);

        sub_20A120E74(v14, v16);
        return v19;
      }
      sub_20A127E0C((uint64_t)v4, &qword_2545DB158);
      objc_msgSend(v18, sel_finishDecoding);

    }
    sub_20A120E74(v14, v16);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A7000(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_class *v21;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DB150);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_20A16F850();
  v12 = sub_20A1A8FD0();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_20A1A8C28();
    v16 = v15;

    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v14, v16);
    v18 = sub_20A1A5F68();
    sub_20A120E74(v14, v16);
    if (v18)
    {
      sub_20A1205FC(&qword_2545DB058, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyRequest);
      sub_20A1A8FC4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_20A12063C((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
        sub_20A127E8C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
        v21 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderIdentityKeyRequest(0);
        v22 = objc_allocWithZone(v21);
        sub_20A127E8C((uint64_t)v9, (uint64_t)v22 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderIdentityKeyRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
        v24.receiver = v22;
        v24.super_class = v21;
        v19 = objc_msgSendSuper2(&v24, sel_init);
        sub_20A124284((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
        sub_20A124284((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
        objc_msgSend(v18, sel_finishDecoding);

        sub_20A120E74(v14, v16);
        return v19;
      }
      sub_20A127E0C((uint64_t)v4, &qword_2545DB150);
      objc_msgSend(v18, sel_finishDecoding);

    }
    sub_20A120E74(v14, v16);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A72B4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_class *v21;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545DB148);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_20A16F850();
  v12 = sub_20A1A8FD0();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_20A1A8C28();
    v16 = v15;

    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v14, v16);
    v18 = sub_20A1A5F68();
    sub_20A120E74(v14, v16);
    if (v18)
    {
      sub_20A1205FC(&qword_2545DB068, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderCertificateRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderCertificateRequest);
      sub_20A1A8FC4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_20A12063C((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
        sub_20A127E8C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
        v21 = (objc_class *)type metadata accessor for XPCMobileDocumentReaderCertificateRequest(0);
        v22 = objc_allocWithZone(v21);
        sub_20A127E8C((uint64_t)v9, (uint64_t)v22 + OBJC_IVAR____TtC7CoreIDV41XPCMobileDocumentReaderCertificateRequest_value, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
        v24.receiver = v22;
        v24.super_class = v21;
        v19 = objc_msgSendSuper2(&v24, sel_init);
        sub_20A124284((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
        sub_20A124284((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileDocumentReaderCertificateRequest);
        objc_msgSend(v18, sel_finishDecoding);

        sub_20A120E74(v14, v16);
        return v19;
      }
      sub_20A127E0C((uint64_t)v4, &qword_2545DB148);
      objc_msgSend(v18, sel_finishDecoding);

    }
    sub_20A120E74(v14, v16);
  }
  else
  {

  }
  return 0;
}

id sub_20A1A7568(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  id v20;
  objc_super v22;
  uint64_t v23;

  sub_20A16F850();
  v9 = sub_20A1A8FD0();
  if (!v9)
  {

    return 0;
  }
  v10 = (void *)v9;
  v11 = sub_20A1A8C28();
  v13 = v12;

  v14 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_20A120BD8(v11, v13);
  v15 = sub_20A1A5F68();
  v16 = sub_20A120E74(v11, v13);
  if (!v15)
  {
LABEL_8:

    sub_20A120E74(v11, v13);
    return 0;
  }
  a2(v16);
  v17 = sub_20A1A8FC4();
  if (!v23)
  {
    objc_msgSend(v15, sel_finishDecoding);

    goto LABEL_8;
  }
  v18 = (objc_class *)a4(v17);
  v19 = (char *)objc_allocWithZone(v18);
  *(_QWORD *)&v19[*a5] = v23;
  v22.receiver = v19;
  v22.super_class = v18;
  v20 = objc_msgSendSuper2(&v22, sel_init);
  objc_msgSend(v15, sel_finishDecoding);

  sub_20A120E74(v11, v13);
  return v20;
}

id sub_20A1A770C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_class *v21;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545D8970);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IdentityDocumentDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_20A16F850();
  v12 = sub_20A1A8FD0();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = sub_20A1A8C28();
    v16 = v15;

    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_20A120BD8(v14, v16);
    v18 = sub_20A1A5F68();
    sub_20A120E74(v14, v16);
    if (v18)
    {
      sub_20A1205FC(&qword_2545DB0A8, type metadata accessor for IdentityDocumentDescriptor, (uint64_t)&protocol conformance descriptor for IdentityDocumentDescriptor);
      sub_20A1A8FC4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_20A12063C((uint64_t)v4, (uint64_t)v11, type metadata accessor for IdentityDocumentDescriptor);
        sub_20A127E8C((uint64_t)v11, (uint64_t)v9, type metadata accessor for IdentityDocumentDescriptor);
        v21 = (objc_class *)type metadata accessor for XPCIdentityDocumentDescriptor(0);
        v22 = objc_allocWithZone(v21);
        sub_20A127E8C((uint64_t)v9, (uint64_t)v22 + OBJC_IVAR____TtC7CoreIDV29XPCIdentityDocumentDescriptor_value, type metadata accessor for IdentityDocumentDescriptor);
        v24.receiver = v22;
        v24.super_class = v21;
        v19 = objc_msgSendSuper2(&v24, sel_init);
        sub_20A124284((uint64_t)v9, type metadata accessor for IdentityDocumentDescriptor);
        sub_20A124284((uint64_t)v11, type metadata accessor for IdentityDocumentDescriptor);
        objc_msgSend(v18, sel_finishDecoding);

        sub_20A120E74(v14, v16);
        return v19;
      }
      sub_20A127E0C((uint64_t)v4, &qword_2545D8970);
      objc_msgSend(v18, sel_finishDecoding);

    }
    sub_20A120E74(v14, v16);
  }
  else
  {

  }
  return 0;
}

uint64_t sub_20A1A79C0()
{
  return sub_20A1205FC(&qword_2545DAFD8, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession.State, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession.State);
}

uint64_t sub_20A1A79EC()
{
  return sub_20A1205FC(&qword_2545DAFE0, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession.State, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderSession.State);
}

unint64_t sub_20A1A7A1C()
{
  unint64_t result;

  result = qword_2545DAFE8;
  if (!qword_2545DAFE8)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderConfiguration, &type metadata for MobileDocumentReaderConfiguration);
    atomic_store(result, (unint64_t *)&qword_2545DAFE8);
  }
  return result;
}

unint64_t sub_20A1A7A64()
{
  unint64_t result;

  result = qword_2545DAFF0;
  if (!qword_2545DAFF0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderConfiguration, &type metadata for MobileDocumentReaderConfiguration);
    atomic_store(result, (unint64_t *)&qword_2545DAFF0);
  }
  return result;
}

uint64_t sub_20A1A7AA8()
{
  return sub_20A1205FC(&qword_2545DAFF8, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderConfigurationResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderConfigurationResponse);
}

uint64_t sub_20A1A7AD4()
{
  return sub_20A1205FC(&qword_2545DB000, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderConfigurationResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderConfigurationResponse);
}

unint64_t sub_20A1A7B04()
{
  unint64_t result;

  result = qword_2545DB008;
  if (!qword_2545DB008)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderMerchant, &type metadata for MobileDocumentReaderMerchant);
    atomic_store(result, (unint64_t *)&qword_2545DB008);
  }
  return result;
}

unint64_t sub_20A1A7B4C()
{
  unint64_t result;

  result = qword_2545DB010;
  if (!qword_2545DB010)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderMerchant, &type metadata for MobileDocumentReaderMerchant);
    atomic_store(result, (unint64_t *)&qword_2545DB010);
  }
  return result;
}

uint64_t sub_20A1A7B90()
{
  return sub_20A1205FC(&qword_2545DB018, type metadata accessor for MobileDocumentReaderRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest);
}

uint64_t sub_20A1A7BBC()
{
  return sub_20A1205FC(&qword_2545DB020, type metadata accessor for MobileDocumentReaderRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderRequest);
}

unint64_t sub_20A1A7BEC()
{
  unint64_t result;

  result = qword_2545DB028;
  if (!qword_2545DB028)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderDeviceEngagementType, &type metadata for MobileDocumentReaderDeviceEngagementType);
    atomic_store(result, (unint64_t *)&qword_2545DB028);
  }
  return result;
}

unint64_t sub_20A1A7C34()
{
  unint64_t result;

  result = qword_2545DB030;
  if (!qword_2545DB030)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderDeviceEngagementType, &type metadata for MobileDocumentReaderDeviceEngagementType);
    atomic_store(result, (unint64_t *)&qword_2545DB030);
  }
  return result;
}

uint64_t sub_20A1A7C78()
{
  return sub_20A1205FC(&qword_2545D8198, type metadata accessor for MobileDocumentReaderResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse);
}

uint64_t sub_20A1A7CA4()
{
  return sub_20A1205FC(&qword_2545DB040, type metadata accessor for MobileDocumentReaderResponse, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderResponse);
}

unint64_t sub_20A1A7CD4()
{
  unint64_t result;

  result = qword_2545DB048;
  if (!qword_2545DB048)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_2545DB048);
  }
  return result;
}

unint64_t sub_20A1A7D1C()
{
  unint64_t result;

  result = qword_2545DB050;
  if (!qword_2545DB050)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_2545DB050);
  }
  return result;
}

uint64_t sub_20A1A7D60()
{
  return sub_20A1205FC(&qword_2545DB058, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyRequest);
}

uint64_t sub_20A1A7D8C()
{
  return sub_20A1205FC(&qword_2545DB060, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderIdentityKeyRequest);
}

uint64_t sub_20A1A7DB8()
{
  return sub_20A1205FC(&qword_2545DB068, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderCertificateRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderCertificateRequest);
}

uint64_t sub_20A1A7DE4()
{
  return sub_20A1205FC(&qword_2545DB070, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderCertificateRequest, (uint64_t)&protocol conformance descriptor for MobileDocumentReaderCertificateRequest);
}

unint64_t sub_20A1A7E14()
{
  unint64_t result;

  result = qword_2545DB078;
  if (!qword_2545DB078)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderIdentityKeyResponse, &type metadata for MobileDocumentReaderIdentityKeyResponse);
    atomic_store(result, (unint64_t *)&qword_2545DB078);
  }
  return result;
}

unint64_t sub_20A1A7E5C()
{
  unint64_t result;

  result = qword_2545DB080;
  if (!qword_2545DB080)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderIdentityKeyResponse, &type metadata for MobileDocumentReaderIdentityKeyResponse);
    atomic_store(result, (unint64_t *)&qword_2545DB080);
  }
  return result;
}

unint64_t sub_20A1A7EA4()
{
  unint64_t result;

  result = qword_2545DB088;
  if (!qword_2545DB088)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderCertificateResponse, &type metadata for MobileDocumentReaderCertificateResponse);
    atomic_store(result, (unint64_t *)&qword_2545DB088);
  }
  return result;
}

unint64_t sub_20A1A7EEC()
{
  unint64_t result;

  result = qword_2545DB090;
  if (!qword_2545DB090)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderCertificateResponse, &type metadata for MobileDocumentReaderCertificateResponse);
    atomic_store(result, (unint64_t *)&qword_2545DB090);
  }
  return result;
}

unint64_t sub_20A1A7F34()
{
  unint64_t result;

  result = qword_2545DB098;
  if (!qword_2545DB098)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderIssuerRootCertificateList, &type metadata for MobileDocumentReaderIssuerRootCertificateList);
    atomic_store(result, (unint64_t *)&qword_2545DB098);
  }
  return result;
}

unint64_t sub_20A1A7F7C()
{
  unint64_t result;

  result = qword_2545DB0A0;
  if (!qword_2545DB0A0)
  {
    result = MEMORY[0x20BD21434](&protocol conformance descriptor for MobileDocumentReaderIssuerRootCertificateList, &type metadata for MobileDocumentReaderIssuerRootCertificateList);
    atomic_store(result, (unint64_t *)&qword_2545DB0A0);
  }
  return result;
}

uint64_t sub_20A1A7FC0()
{
  return sub_20A1205FC(&qword_2545DB0A8, type metadata accessor for IdentityDocumentDescriptor, (uint64_t)&protocol conformance descriptor for IdentityDocumentDescriptor);
}

uint64_t sub_20A1A7FEC()
{
  return sub_20A1205FC((unint64_t *)&unk_2545DB0B0, type metadata accessor for IdentityDocumentDescriptor, (uint64_t)&protocol conformance descriptor for IdentityDocumentDescriptor);
}

uint64_t sub_20A1A8018()
{
  return type metadata accessor for XPCMobileDocumentReaderSessionState(0);
}

uint64_t type metadata accessor for XPCMobileDocumentReaderSessionState(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DB0C0);
}

uint64_t sub_20A1A8034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A82CC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderSession.State);
}

uint64_t method lookup function for XPCMobileDocumentReaderSessionState()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCMobileDocumentReaderConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCMobileDocumentReaderConfiguration.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A1A8080()
{
  return type metadata accessor for XPCMobileDocumentReaderConfigurationResponse(0);
}

uint64_t type metadata accessor for XPCMobileDocumentReaderConfigurationResponse(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DB0D0);
}

uint64_t sub_20A1A809C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A82CC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderConfigurationResponse);
}

uint64_t method lookup function for XPCMobileDocumentReaderConfigurationResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderMerchant()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCMobileDocumentReaderMerchant()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCMobileDocumentReaderMerchant.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A1A80E8()
{
  return type metadata accessor for XPCMobileDocumentReaderRequest(0);
}

uint64_t type metadata accessor for XPCMobileDocumentReaderRequest(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DB0E0);
}

uint64_t sub_20A1A8104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A82CC(a1, a2, a3, type metadata accessor for MobileDocumentReaderRequest);
}

uint64_t method lookup function for XPCMobileDocumentReaderRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderDeviceEngagementType()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCMobileDocumentReaderDeviceEngagementType()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCMobileDocumentReaderDeviceEngagementType.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A1A8150()
{
  return type metadata accessor for XPCMobileDocumentReaderResponse(0);
}

uint64_t type metadata accessor for XPCMobileDocumentReaderResponse(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DB0F0);
}

uint64_t sub_20A1A816C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A82CC(a1, a2, a3, type metadata accessor for MobileDocumentReaderResponse);
}

uint64_t method lookup function for XPCMobileDocumentReaderResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for XPCAuditToken()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCAuditToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCAuditToken.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A1A81B8()
{
  return type metadata accessor for XPCMobileDocumentReaderIdentityKeyRequest(0);
}

uint64_t type metadata accessor for XPCMobileDocumentReaderIdentityKeyRequest(uint64_t a1)
{
  return sub_20A15B280(a1, qword_2545DB100);
}

uint64_t sub_20A1A81D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A82CC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderIdentityKeyRequest);
}

uint64_t method lookup function for XPCMobileDocumentReaderIdentityKeyRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_20A1A81EC()
{
  return type metadata accessor for XPCMobileDocumentReaderCertificateRequest(0);
}

uint64_t type metadata accessor for XPCMobileDocumentReaderCertificateRequest(uint64_t a1)
{
  return sub_20A15B280(a1, (uint64_t *)&unk_2545DB118);
}

uint64_t sub_20A1A8208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A82CC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for MobileDocumentReaderCertificateRequest);
}

uint64_t method lookup function for XPCMobileDocumentReaderCertificateRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderIdentityKeyResponse()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCMobileDocumentReaderIdentityKeyResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderCertificateResponse()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCMobileDocumentReaderCertificateResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderIssuerRootCertificateList()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCMobileDocumentReaderIssuerRootCertificateList()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_20A1A82A4()
{
  return type metadata accessor for XPCIdentityDocumentDescriptor(0);
}

uint64_t type metadata accessor for XPCIdentityDocumentDescriptor(uint64_t a1)
{
  return sub_20A15B280(a1, qword_2545DB128);
}

uint64_t sub_20A1A82C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A1A82CC(a1, a2, a3, type metadata accessor for IdentityDocumentDescriptor);
}

uint64_t sub_20A1A82CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for XPCIdentityDocumentDescriptor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCIdentityDocumentDescriptor.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A1A8A48()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_20A1A8A54()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_20A1A8A60()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_20A1A8A6C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_20A1A8A78()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_20A1A8A84()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_20A1A8A90()
{
  return MEMORY[0x24BDCB9D8]();
}

uint64_t sub_20A1A8A9C()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_20A1A8AA8()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_20A1A8AB4()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_20A1A8AC0()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_20A1A8ACC()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_20A1A8AD8()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_20A1A8AE4()
{
  return MEMORY[0x24BDCC6B8]();
}

uint64_t sub_20A1A8AF0()
{
  return MEMORY[0x24BDCC8D0]();
}

uint64_t sub_20A1A8AFC()
{
  return MEMORY[0x24BDCC900]();
}

uint64_t sub_20A1A8B08()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_20A1A8B14()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_20A1A8B20()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_20A1A8B2C()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_20A1A8B38()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_20A1A8B44()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_20A1A8B50()
{
  return MEMORY[0x24BDCCBC8]();
}

uint64_t sub_20A1A8B5C()
{
  return MEMORY[0x24BDCCC10]();
}

uint64_t sub_20A1A8B68()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_20A1A8B74()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_20A1A8B80()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_20A1A8B8C()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_20A1A8B98()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_20A1A8BA4()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_20A1A8BB0()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_20A1A8BBC()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_20A1A8BC8()
{
  return MEMORY[0x24BDCD648]();
}

uint64_t sub_20A1A8BD4()
{
  return MEMORY[0x24BDCD678]();
}

uint64_t sub_20A1A8BE0()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_20A1A8BEC()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_20A1A8BF8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_20A1A8C04()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_20A1A8C10()
{
  return MEMORY[0x24BDCDC88]();
}

uint64_t sub_20A1A8C1C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_20A1A8C28()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_20A1A8C34()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_20A1A8C40()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_20A1A8C4C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_20A1A8C58()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_20A1A8C64()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_20A1A8C70()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_20A1A8C7C()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_20A1A8C88()
{
  return MEMORY[0x24BDCECF0]();
}

uint64_t sub_20A1A8C94()
{
  return MEMORY[0x24BDCECF8]();
}

uint64_t sub_20A1A8CA0()
{
  return MEMORY[0x24BDCED00]();
}

uint64_t sub_20A1A8CAC()
{
  return MEMORY[0x24BDCED08]();
}

uint64_t sub_20A1A8CB8()
{
  return MEMORY[0x24BDCED38]();
}

uint64_t sub_20A1A8CC4()
{
  return MEMORY[0x24BDCED50]();
}

uint64_t sub_20A1A8CD0()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_20A1A8CDC()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_20A1A8CE8()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_20A1A8CF4()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_20A1A8D00()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_20A1A8D0C()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_20A1A8D18()
{
  return MEMORY[0x24BEE7408]();
}

uint64_t sub_20A1A8D24()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_20A1A8D30()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_20A1A8D3C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_20A1A8D48()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_20A1A8D54()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_20A1A8D60()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_20A1A8D6C()
{
  return MEMORY[0x24BEE75B8]();
}

uint64_t sub_20A1A8D78()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_20A1A8D84()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_20A1A8D90()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_20A1A8D9C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_20A1A8DA8()
{
  return MEMORY[0x24BDCF9F0]();
}

uint64_t sub_20A1A8DB4()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_20A1A8DC0()
{
  return MEMORY[0x24BDCFB20]();
}

uint64_t sub_20A1A8DCC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_20A1A8DD8()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_20A1A8DE4()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_20A1A8DF0()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_20A1A8DFC()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_20A1A8E08()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_20A1A8E14()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_20A1A8E20()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_20A1A8E2C()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_20A1A8E38()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_20A1A8E44()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_20A1A8E50()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_20A1A8E5C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_20A1A8E68()
{
  return MEMORY[0x24BDCFB70]();
}

uint64_t sub_20A1A8E74()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_20A1A8E80()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_20A1A8E8C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_20A1A8E98()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_20A1A8EA4()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_20A1A8EB0()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_20A1A8EBC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_20A1A8EC8()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_20A1A8ED4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_20A1A8EE0()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_20A1A8EEC()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_20A1A8EF8()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_20A1A8F04()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_20A1A8F10()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_20A1A8F1C()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_20A1A8F28()
{
  return MEMORY[0x24BEE6AC0]();
}

uint64_t sub_20A1A8F34()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_20A1A8F40()
{
  return MEMORY[0x24BEE6C90]();
}

uint64_t sub_20A1A8F4C()
{
  return MEMORY[0x24BEE6CC0]();
}

uint64_t sub_20A1A8F58()
{
  return MEMORY[0x24BEE6CC8]();
}

uint64_t sub_20A1A8F64()
{
  return MEMORY[0x24BEE6D30]();
}

uint64_t sub_20A1A8F70()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_20A1A8F7C()
{
  return MEMORY[0x24BDCFCD0]();
}

uint64_t sub_20A1A8F88()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_20A1A8F94()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_20A1A8FA0()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_20A1A8FAC()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_20A1A8FB8()
{
  return MEMORY[0x24BDCFF70]();
}

uint64_t sub_20A1A8FC4()
{
  return MEMORY[0x24BDCFFA0]();
}

uint64_t sub_20A1A8FD0()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_20A1A8FDC()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_20A1A8FE8()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_20A1A8FF4()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_20A1A9000()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_20A1A900C()
{
  return MEMORY[0x24BDD0668]();
}

uint64_t sub_20A1A9018()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_20A1A9024()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_20A1A9030()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_20A1A903C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_20A1A9048()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_20A1A9054()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_20A1A9060()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_20A1A906C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_20A1A9078()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_20A1A9084()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_20A1A9090()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_20A1A909C()
{
  return MEMORY[0x24BEE26C0]();
}

uint64_t sub_20A1A90A8()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_20A1A90B4()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_20A1A90C0()
{
  return MEMORY[0x24BEE2730]();
}

uint64_t sub_20A1A90CC()
{
  return MEMORY[0x24BEE2740]();
}

uint64_t sub_20A1A90D8()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_20A1A90E4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_20A1A90F0()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_20A1A90FC()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_20A1A9108()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_20A1A9114()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_20A1A9120()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_20A1A912C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_20A1A9138()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_20A1A9144()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_20A1A9150()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_20A1A915C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_20A1A9168()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_20A1A9174()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_20A1A9180()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_20A1A918C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_20A1A9198()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_20A1A91A4()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_20A1A91B0()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_20A1A91BC()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_20A1A91C8()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_20A1A91D4()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_20A1A91E0()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_20A1A91EC()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_20A1A91F8()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_20A1A9204()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_20A1A9210()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_20A1A921C()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_20A1A9228()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_20A1A9234()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_20A1A9240()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_20A1A924C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_20A1A9258()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_20A1A9264()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_20A1A9270()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_20A1A927C()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_20A1A9288()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_20A1A9294()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_20A1A92A0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_20A1A92AC()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_20A1A92B8()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_20A1A92C4()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_20A1A92D0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_20A1A92DC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_20A1A92E8()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_20A1A92F4()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_20A1A9300()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_20A1A930C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_20A1A9318()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_20A1A9324()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_20A1A9330()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_20A1A933C()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_20A1A9348()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_20A1A9354()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_20A1A9360()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_20A1A936C()
{
  return MEMORY[0x24BEE4A10]();
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableDataRef)MEMORY[0x24BDBBCB0](allocator, capacity);
}

size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef space)
{
  return MEMORY[0x24BDBDC20](space);
}

CGDataProviderRef CGDataProviderCreateWithCFData(CFDataRef data)
{
  return (CGDataProviderRef)MEMORY[0x24BDBE180](data);
}

CGImageRef CGImageCreateWithPNGDataProvider(CGDataProviderRef source, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x24BDBE618](source, decode, shouldInterpolate, *(_QWORD *)&intent);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x24BDD9048](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x24BDD9078](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x24BDD9090](idst);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBE658](image);
}

const CGFloat *__cdecl CGImageGetDecode(CGImageRef image)
{
  return (const CGFloat *)MEMORY[0x24BDBE670](image);
}

CGColorRenderingIntent CGImageGetRenderingIntent(CGImageRef image)
{
  return MEMORY[0x24BDBE6C0](image);
}

BOOL CGImageGetShouldInterpolate(CGImageRef image)
{
  return MEMORY[0x24BDBE6C8](image);
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

uint64_t MobileGestalt_get_deviceClassNumber()
{
  return MEMORY[0x24BED8588]();
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return (CFDataRef)MEMORY[0x24BDE8850](certificate);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x24BDE8918](allocator, data);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x24BDE8D48](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x24BDE8D70](allocator);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return (SecTaskRef)MEMORY[0x24BDE8D78](allocator, token);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB68](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x24BEDD030](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x24BEDD0C0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x24BEDD2C0](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD408](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x24BDAF400](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x24BDAF410](log, ptr);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x24BDAF4B0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

