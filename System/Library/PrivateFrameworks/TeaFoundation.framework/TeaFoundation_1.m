uint64_t sub_190B179B0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B179DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_35_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_27_0(v1);
  *v2 = v0;
  v2[1] = sub_190B17F08;
  OUTLINED_FUNCTION_36_1();
  return sub_190B167F4(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_190B17A5C()
{
  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_18_6();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_37_0();
  return OUTLINED_FUNCTION_13_1();
}

uint64_t sub_190B17AD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_35_0();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_49_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  OUTLINED_FUNCTION_11_0(v1);
  OUTLINED_FUNCTION_36_1();
  return sub_190B168D0(v2, v3, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_190B17B70()
{
  unint64_t result;

  result = qword_1EE1FF370[0];
  if (!qword_1EE1FF370[0])
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for TaskDeadlineError, &type metadata for TaskDeadlineError);
    atomic_store(result, qword_1EE1FF370);
  }
  return result;
}

uint64_t sub_190B17BAC()
{
  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_37_0();
  return OUTLINED_FUNCTION_13_1();
}

uint64_t sub_190B17C18()
{
  OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_49_0();
  return sub_190B15348();
}

uint64_t sub_190B17C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(OUTLINED_FUNCTION_24_1() - 8);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + *(_QWORD *)(v2 + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  OUTLINED_FUNCTION_31_1(v2);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  return swift_deallocObject();
}

uint64_t (*sub_190B17D3C(uint64_t a1))()
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *(_QWORD *)(OUTLINED_FUNCTION_33_2() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  return sub_190B1543C(a1, (uint64_t)v1 + v7, (uint64_t)v1 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8), v3, v4, v5);
}

ValueMetadata *type metadata accessor for TaskDeadline()
{
  return &type metadata for TaskDeadline;
}

uint64_t _s13TeaFoundation12TaskDeadlineVwxx_0()
{
  swift_release();
  return swift_release();
}

uint64_t _s13TeaFoundation12TaskDeadlineVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s13TeaFoundation12TaskDeadlineVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s13TeaFoundation12TaskDeadlineVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AnyInstant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyInstant);
}

void static StartupTaskGroup.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x746C7561666564;
  a1[1] = 0xE700000000000000;
}

uint64_t StartupTaskGroup.hash(into:)()
{
  OUTLINED_FUNCTION_2_2();
  sub_190BE50B4();
  return swift_bridgeObjectRelease();
}

void StartupTaskGroup.hashValue.getter()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_0_8();
  swift_bridgeObjectRelease();
  sub_190BE6314();
  OUTLINED_FUNCTION_1_3();
}

uint64_t Signpost.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_1();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Signpost.comment.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v2;
}

double Signpost.timeInterval.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_190B18028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t result;

  v11 = type metadata accessor for Signpost(0, a5, a3, a4);
  v12 = (uint64_t *)(a6 + *(int *)(v11 + 28));
  *v12 = a3;
  v12[1] = a4;
  v13 = OUTLINED_FUNCTION_0_1();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a6, a1, v13);
  sub_190BE4754();
  v16 = v15;
  v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v17(a2, v13);
  result = ((uint64_t (*)(uint64_t, uint64_t))v17)(a1, v13);
  *(_QWORD *)(a6 + *(int *)(v11 + 32)) = v16;
  return result;
}

uint64_t Signpost.shortDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_190B1820C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BE8430;
  *(_QWORD *)(inited + 32) = 0x746E656D6D6F63;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v6 = (_QWORD *)(v2 + *(int *)(a1 + 28));
  v7 = v6[1];
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = *v6;
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 72) = v8;
  strcpy((char *)(inited + 80), "timeInterval");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  v9 = *(_QWORD *)(v2 + *(int *)(a1 + 32));
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 96) = v9;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v10 = sub_190BE4DFC();
  a2[3] = type metadata accessor for ShortDescription(0, a1, v11, v12);
  a2[4] = (uint64_t)&protocol witness table for ShortDescription<A>;
  return ShortDescription.init(name:_:)(0x74736F706E676953, 0xE800000000000000, v10, a2);
}

void sub_190B1820C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02F3F0)
  {
    sub_190B18260();
    v0 = sub_190BE5FCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02F3F0);
  }
}

void sub_190B18260()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED02F350)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED02F350);
  }
}

uint64_t sub_190B182C0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x194016EF8](&protocol conformance descriptor for Signpost<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190B182EC(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x194016EF8](&protocol conformance descriptor for Signpost<A>, a1);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_190B18320()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE47E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190B183A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190BE47E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 28);
    v9 = *(int *)(a3 + 32);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_190B1843C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B18484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = *(int *)(a3 + 32);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_190B184F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_190B1857C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_190B185E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_190B18658()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B18664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190B186DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B186E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for Signpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Signpost);
}

uint64_t XPCClass.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t XPCClass.hash(into:)()
{
  return sub_190BE6308();
}

void XPCClass.hashValue.getter()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_1_1();
  sub_190BE6314();
  OUTLINED_FUNCTION_1_3();
}

void sub_190B187D4()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_1_1();
  sub_190BE6314();
  OUTLINED_FUNCTION_1_3();
}

BOOL static XPCClass.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

unint64_t sub_190B1881C()
{
  unint64_t result;

  result = qword_1ED033D80;
  if (!qword_1ED033D80)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for XPCClass, &type metadata for XPCClass);
    atomic_store(result, (unint64_t *)&qword_1ED033D80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for XPCClass(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCClass(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCClass()
{
  return &type metadata for XPCClass;
}

uint64_t Encodable.dictionary.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _BYTE v11[32];
  _OWORD v12[2];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  sub_190BE42EC();
  swift_allocObject();
  _s13TeaFoundation16ReferenceEncoderCACycfc_0();
  v0 = sub_190BE42C8();
  v2 = v1;
  swift_release();
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_190BE46DC();
  *(_QWORD *)&v16[0] = 0;
  v5 = objc_msgSend(v3, sel_JSONObjectWithData_options_error_, v4, 4, v16);

  v6 = *(id *)&v16[0];
  if (v5)
  {
    sub_190BE5AF8();
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = v6;
    v8 = (void *)sub_190BE4544();

    swift_willThrow();
    memset(v16, 0, sizeof(v16));
  }
  sub_190B18ADC((uint64_t)v16, (uint64_t)&v13);
  if (v14)
  {
    sub_190ACEE08(&v13, v12);
    sub_190ACF624((uint64_t)v12, (uint64_t)v11);
    sub_190B18B20();
    if ((swift_dynamicCast() & 1) == 0)
      v15 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v9 = v15;
  }
  else
  {
    v9 = 0;
    v15 = 0;
  }
  sub_190AEF3F4(v0, v2);
  sub_190AD9BB8((uint64_t)v16);
  return v9;
}

uint64_t sub_190B18ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190AD9BF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_190B18B20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02EB78)
  {
    v0 = sub_190BE4E98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02EB78);
  }
}

TeaFoundation::ManagerOptions __swiftcall ManagerOptions.init(rawValue:)(TeaFoundation::ManagerOptions rawValue)
{
  TeaFoundation::ManagerOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static ManagerOptions.ignorePartialFailure.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static ManagerOptions.fallbackToStale.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t ManagerOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_190B18BB0()
{
  unint64_t result;

  result = qword_1EE1FF3F8;
  if (!qword_1EE1FF3F8)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ManagerOptions, &type metadata for ManagerOptions);
    atomic_store(result, (unint64_t *)&qword_1EE1FF3F8);
  }
  return result;
}

unint64_t sub_190B18BF0()
{
  unint64_t result;

  result = qword_1EE1FF400;
  if (!qword_1EE1FF400)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ManagerOptions, &type metadata for ManagerOptions);
    atomic_store(result, (unint64_t *)&qword_1EE1FF400);
  }
  return result;
}

TeaFoundation::ManagerOptions sub_190B18C2C(Swift::Int *a1)
{
  return ManagerOptions.init(rawValue:)(*a1);
}

uint64_t sub_190B18C34(_QWORD *a1)
{
  _QWORD *v1;

  return sub_190B568EC(*a1, *v1);
}

uint64_t sub_190B18C40(_QWORD *a1)
{
  _QWORD *v1;

  return sub_190BDEF6C(*a1, *v1);
}

uint64_t sub_190B18C4C(_QWORD *a1)
{
  _QWORD *v1;

  return sub_190B568F8(*a1, *v1);
}

uint64_t sub_190B18C58(_QWORD *a1)
{
  _QWORD *v1;

  return sub_190BDEF70(*a1, *v1);
}

uint64_t sub_190B18C64(_QWORD *a1)
{
  return sub_190BDE120(*a1);
}

uint64_t sub_190B18C6C(_QWORD *a1)
{
  return sub_190BDE168(*a1);
}

uint64_t sub_190B18C74(_QWORD *a1)
{
  return j_j__OUTLINED_FUNCTION_39_11(*a1);
}

uint64_t sub_190B18C7C(_QWORD *a1)
{
  return j_j__OUTLINED_FUNCTION_11_17(*a1);
}

uint64_t sub_190B18C84(_QWORD *a1)
{
  return sub_190BDEF64(*a1);
}

uint64_t sub_190B18C8C(_QWORD *a1)
{
  _QWORD *v1;

  return sub_190BDEF74(*a1, *v1);
}

uint64_t sub_190B18C98(_QWORD *a1)
{
  _QWORD *v1;

  return sub_190B568F0(*a1, *v1);
}

uint64_t sub_190B18CA4(_QWORD *a1)
{
  _QWORD *v1;

  return sub_190BDEF68(*a1, *v1);
}

BOOL sub_190B18CB0()
{
  uint64_t *v0;

  return sub_190BDE1C8(*v0);
}

uint64_t sub_190B18CB8(_QWORD *a1)
{
  return sub_190BDEF5C(*a1);
}

TeaFoundation::ManagerOptions sub_190B18CC0@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaFoundation::ManagerOptions result;

  result.rawValue = ManagerOptions.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_190B18CE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ManagerOptions.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_190B18D0C(uint64_t *a1, uint64_t *a2)
{
  return sub_190B565B0(*a1, *a2);
}

uint64_t dispatch thunk of AsyncURLHandlerType.patterns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AsyncURLHandlerType.handleURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void sub_190B18D2C(uint64_t a1, void *a2)
{
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  _QWORD *v10;
  void (*v11)(void *, _QWORD, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  _QWORD v18[5];
  uint64_t v19;

  sub_190AC9FA0(a1, v18);
  v19 = v18[0];
  v2 = v18[3];
  v3 = v18[4];
  v15 = v18[1];
  v16 = (unint64_t)(v18[2] + 64) >> 6;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  while (1)
  {
    if (v3)
    {
      v4 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v5 = v4 | (v2 << 6);
      goto LABEL_20;
    }
    v6 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    if (v6 >= v16)
      goto LABEL_22;
    v7 = *(_QWORD *)(v15 + 8 * v6);
    v8 = v2 + 1;
    if (!v7)
    {
      v8 = v2 + 2;
      if (v2 + 2 >= v16)
        goto LABEL_22;
      v7 = *(_QWORD *)(v15 + 8 * v8);
      if (!v7)
      {
        v8 = v2 + 3;
        if (v2 + 3 >= v16)
          goto LABEL_22;
        v7 = *(_QWORD *)(v15 + 8 * v8);
        if (!v7)
        {
          v8 = v2 + 4;
          if (v2 + 4 >= v16)
            goto LABEL_22;
          v7 = *(_QWORD *)(v15 + 8 * v8);
          if (!v7)
          {
            v8 = v2 + 5;
            if (v2 + 5 >= v16)
              goto LABEL_22;
            v7 = *(_QWORD *)(v15 + 8 * v8);
            if (!v7)
            {
              v9 = v2 + 6;
              while (v9 < v16)
              {
                v7 = *(_QWORD *)(v15 + 8 * v9++);
                if (v7)
                {
                  v8 = v9 - 1;
                  goto LABEL_19;
                }
              }
LABEL_22:
              swift_release();

              return;
            }
          }
        }
      }
    }
LABEL_19:
    v3 = (v7 - 1) & v7;
    v5 = __clz(__rbit64(v7)) + (v8 << 6);
    v2 = v8;
LABEL_20:
    v10 = (_QWORD *)(*(_QWORD *)(v19 + 56) + (v5 << 6));
    v11 = (void (*)(void *, _QWORD, uint64_t))v10[4];
    if (v11)
    {
      v12 = v10[6];
      v14 = v10[2];
      v13 = v10[3];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AFCA4C(v14, v13);
      sub_190AFCCE8((uint64_t)v11);
      sub_190AFCCE8(v12);
      v11(a2, 0, 1);
      swift_bridgeObjectRelease();
      sub_190AEF3F4(v14, v13);
      sub_190AB9930((uint64_t)v11);
      sub_190AB9930(v12);
    }
  }
  __break(1u);
}

void sub_190B18F40(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[5];

  v3[3] = MEMORY[0x1E0CB0338];
  v3[4] = MEMORY[0x1E0CB0318];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_190B18F94
     + *((int *)qword_190B190D0 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x1E0CB0338])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_190B18FA4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_190AFCA4C(v1, v0);
  sub_190B1D0D4();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
}

void NetworkOperationURLSessionDelegate.addObserver(keepAliveObject:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_100_0();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_observerLock);
  UnfairLock.lock()();
  type metadata accessor for DisposableObserver();
  swift_allocObject();
  swift_retain();
  swift_unknownObjectRetain();
  v3 = OUTLINED_FUNCTION_95_0();
  sub_190B1D000(v3, v4);
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_sessionDidFinishObservers);
  v6 = OUTLINED_FUNCTION_6_0();
  MEMORY[0x194015590](v6);
  sub_190AAE55C(*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_190BE53A8();
  sub_190BE5330();
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
}

uint64_t type metadata accessor for DisposableObserver()
{
  return objc_opt_self();
}

void sub_190B191CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_50_1(a1, a2, a3, a4, a5, a6, a7, a8, v17, v19, v20);
  swift_retain();
  OUTLINED_FUNCTION_27_2(v25);
  OUTLINED_FUNCTION_79_0();
  v8 = v21;
  OUTLINED_FUNCTION_6_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_74();
  sub_190AFCA4C(v23, v24);
  sub_190AFCCE8(v21);
  OUTLINED_FUNCTION_48_0(v26);
  OUTLINED_FUNCTION_56_0();
  swift_endAccess();
  v9 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_71_1(v9, v10, v11, v12, v13, v14, v15, v16, v18, v27, v26, v21, v22);
  OUTLINED_FUNCTION_20();
  sub_190AEF3F4(v23, v24);
  sub_190AB9930(v8);
  OUTLINED_FUNCTION_27_2(v26);
  OUTLINED_FUNCTION_28_3();
}

void sub_190B192C8(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_taskLock);
  UnfairLock.lock()();
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_runningTasks);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
    goto LABEL_5;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v9 = sub_190AEABD0();
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    v14 = 0xC000000000000000;
    sub_190AFCA4C(0, 0xC000000000000000);
    sub_190AFCCE8(0);
    sub_190AFCCE8(0);
    sub_190B1D5BC();
    swift_endAccess();
    v13 = 0;
    v15 = 0;
    v16 = 0;
    v18 = 0;
    v17 = 0;
    v12 = a2;
    goto LABEL_6;
  }
  v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + (v9 << 6));
  a1 = *v11;
  v12 = v11[1];
  v13 = v11[2];
  v14 = v11[3];
  v15 = v11[4];
  v16 = v11[5];
  v18 = v11[6];
  v17 = v11[7];
  swift_endAccess();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AFCA4C(v13, v14);
  sub_190AFCCE8(v15);
  sub_190AFCCE8(v18);
LABEL_6:
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
  *a3 = a1;
  a3[1] = v12;
  a3[2] = v13;
  a3[3] = v14;
  a3[4] = v15;
  a3[5] = v16;
  a3[6] = v18;
  a3[7] = v17;
}

void sub_190B19488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_50_1(a1, a2, a3, a4, a5, a6, a7, a8, v17, v19, v20);
  swift_retain();
  OUTLINED_FUNCTION_27_2(v27);
  OUTLINED_FUNCTION_79_0();
  v8 = v21;
  OUTLINED_FUNCTION_6_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AFCA4C(v23, v24);
  OUTLINED_FUNCTION_48_0(v25);
  sub_190AFCCE8(v21);
  OUTLINED_FUNCTION_56_0();
  swift_endAccess();
  v9 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_71_1(v9, v10, v11, v12, v13, v14, v15, v16, v18, v24, v26, v21, v22);
  swift_bridgeObjectRelease();
  sub_190AEF3F4(v23, v24);
  OUTLINED_FUNCTION_27_2(v25);
  sub_190AB9930(v8);
  OUTLINED_FUNCTION_28_3();
}

uint64_t NetworkOperationURLSessionDelegate.urlSession(_:didBecomeInvalidWithError:)(void *a1, id a2)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  id v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v40;
  uint64_t v41;

  v5 = v2;
  if (a2)
  {
    v7 = a2;
    v8 = a2;
    if (qword_1ED034658 != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_96();
    v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED039A58);
    OUTLINED_FUNCTION_99();
    v11 = a1;
    OUTLINED_FUNCTION_99();
    v12 = v11;
    OUTLINED_FUNCTION_90_0();
    v13 = OUTLINED_FUNCTION_94_0();
    if (OUTLINED_FUNCTION_89_0(v10))
    {
      v14 = OUTLINED_FUNCTION_20_1();
      v15 = (_QWORD *)OUTLINED_FUNCTION_20_1();
      v41 = OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v14 = 136446466;
      v16 = sub_190B19964();
      OUTLINED_FUNCTION_84_0(v16, v17, v18, v19, v20, v21, v22, v41);
      sub_190BE5A2C();

      OUTLINED_FUNCTION_62();
      *(_WORD *)(v14 + 12) = 2114;
      OUTLINED_FUNCTION_99();
      v40 = _swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_82_0();
      *v15 = v40;
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_13_5(&dword_190AA0000, v10, v13, "URL Session %{public}s became invalid with error: %{public}@");
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_12_0();
    }

    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_58_0();

  }
  else
  {
    if (qword_1ED034658 != -1)
      swift_once();
    v23 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED039A58);
    v24 = OUTLINED_FUNCTION_78_0();
    sub_190BE4A0C();
    v25 = OUTLINED_FUNCTION_94_0();
    if (OUTLINED_FUNCTION_30_5(v25))
    {
      v26 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v26 = 136446210;
      v27 = sub_190B19964();
      OUTLINED_FUNCTION_84_0(v27, v28, v29, v30, v31, v32, v33);
      sub_190BE5A2C();

      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_50(&dword_190AA0000, v3, v4, "Network operation %{public}s became invalid with unknown error", v26);
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_12_0();
    }

    sub_190B1D1A4();
    v7 = (id)OUTLINED_FUNCTION_38();
    *v34 = 0;
  }
  v35 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_taskLock);
  UnfairLock.lock()();
  v36 = (uint64_t *)(v5 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_runningTasks);
  OUTLINED_FUNCTION_20_0();
  v37 = *v36;
  v38 = *(os_unfair_lock_s **)(v35 + 16);
  OUTLINED_FUNCTION_74();
  os_unfair_lock_unlock(v38);
  OUTLINED_FUNCTION_99();
  sub_190B18D2C(v37, v7);
  UnfairLock.lock()();
  OUTLINED_FUNCTION_20_0();
  sub_190B1DF08(0, &qword_1EE1FF438, (uint64_t)&type metadata for NetworkOperationTask, MEMORY[0x1E0DEA000]);
  sub_190BE4E74();
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v35 + 16));
  OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_20();
}

uint64_t sub_190B19964()
{
  void *v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190B1D7B4(objc_msgSend(v0, sel_configuration));
  if (!v2)
    return 0x6E776F6E6B6E75;
  return result;
}

void NetworkOperationURLSessionDelegate.urlSession(_:task:didCompleteWithError:)(uint64_t a1, void *a2, void *a3)
{
  NSObject *v3;
  NSObject *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  os_unfair_lock_s **v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  os_unfair_lock_s **v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_unfair_lock_s *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  os_unfair_lock_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  NSObject *v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  NSObject *v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  _DWORD *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  os_log_type_t v83;
  _DWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  NSObject *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  id v99;
  void *v100;
  _QWORD *v101;
  NSObject *v102;
  id v103;
  NSObject *v104;
  id v105;
  os_log_type_t v106;
  _DWORD *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  uint64_t v113;
  void (*v114)(uint64_t, unint64_t, _QWORD);
  os_unfair_lock_s **v115;
  uint64_t v116[7];
  uint64_t v117[5];

  v4 = v3;
  sub_190B1D6C0(0);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_0();
  v10 = v9 - v8;
  v12 = OUTLINED_FUNCTION_92_1(v11, sel_originalRequest);
  if (v12)
  {
    v13 = v12;
    sub_190BE4250();

    v14 = sub_190BE428C();
    v15 = 0;
  }
  else
  {
    v14 = sub_190BE428C();
    v15 = 1;
  }
  v16 = __swift_storeEnumTagSinglePayload(v10, v15, 1, v14);
  v17 = OUTLINED_FUNCTION_92_1(v16, sel_response);
  sub_190B1A7D0(a2, v10, v17, 0, (uint64_t)a3);

  sub_190B1E0A4(v10, (uint64_t (*)(_QWORD))sub_190B1D6C0);
  v18 = *(os_unfair_lock_s ***)((char *)&v4->isa
                              + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_taskLock);
  UnfairLock.lock()();
  sub_190B1D820(a2);
  if (v19)
  {
    v20 = (char *)v4 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_runningTasks;
    OUTLINED_FUNCTION_20_0();
    v21 = *(_QWORD *)v20;
    if (*(_QWORD *)(*(_QWORD *)v20 + 16))
    {
      v22 = sub_190AEABD0();
      if ((v23 & 1) != 0)
      {
        v112 = v4;
        v24 = (_QWORD *)(*(_QWORD *)(v21 + 56) + (v22 << 6));
        v25 = v24[2];
        v26 = v18;
        v27 = v24[3];
        v28 = v24[4];
        v30 = v24[5];
        v29 = v24[6];
        swift_endAccess();
        v115 = v26;
        v31 = v26[2];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AFCA4C(v25, v27);
        sub_190AFCCE8(v28);
        v113 = v29;
        sub_190AFCCE8(v29);
        os_unfair_lock_unlock(v31);
        v114 = (void (*)(uint64_t, unint64_t, _QWORD))v28;
        if (a3)
        {
          OUTLINED_FUNCTION_47_2();
          if (qword_1ED034658 != -1)
            swift_once();
          v33 = OUTLINED_FUNCTION_96();
          __swift_project_value_buffer(v33, (uint64_t)qword_1ED039A58);
          OUTLINED_FUNCTION_47_2();
          v34 = a2;
          OUTLINED_FUNCTION_47_2();
          v35 = v34;
          v36 = sub_190BE4A0C();
          v37 = sub_190BE5894();
          v38 = v115;
          if (OUTLINED_FUNCTION_31_2(v37))
          {
            v39 = OUTLINED_FUNCTION_20_1();
            v40 = (_QWORD *)OUTLINED_FUNCTION_20_1();
            v116[0] = OUTLINED_FUNCTION_20_1();
            *(_DWORD *)v39 = 136446466;
            v41 = sub_190B1AD7C();
            OUTLINED_FUNCTION_18_7(v41, v42);
            OUTLINED_FUNCTION_11_1();

            OUTLINED_FUNCTION_62();
            *(_WORD *)(v39 + 12) = 2114;
            OUTLINED_FUNCTION_47_2();
            v117[0] = _swift_stdlib_bridgeErrorToNSError();
            OUTLINED_FUNCTION_11_1();
            *v40 = v117[0];
            OUTLINED_FUNCTION_26_3();
            OUTLINED_FUNCTION_26_3();
            OUTLINED_FUNCTION_13_5(&dword_190AA0000, v36, (os_log_type_t)v30, "Network operation %{public}s failed with error: %{public}@");
            OUTLINED_FUNCTION_94();
            OUTLINED_FUNCTION_82();
            OUTLINED_FUNCTION_12_0();
          }

          OUTLINED_FUNCTION_26_3();
          OUTLINED_FUNCTION_26_3();

          v58 = (uint64_t)v114;
          if (v114)
          {
            OUTLINED_FUNCTION_47_2();
            OUTLINED_FUNCTION_48_0((uint64_t)v114);
            OUTLINED_FUNCTION_63_0((uint64_t)a3);
            OUTLINED_FUNCTION_26_3();
            OUTLINED_FUNCTION_26_3();
            OUTLINED_FUNCTION_27_2((uint64_t)v114);
LABEL_33:
            v81 = v113;
LABEL_43:
            UnfairLock.lock()();
            OUTLINED_FUNCTION_6_0();
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            sub_190B1D29C((uint64_t)v116);
            OUTLINED_FUNCTION_16();
            sub_190B1D878(v116[0], v116[1], v116[2], v116[3], v116[4], v116[5], v116[6]);
            swift_endAccess();
            os_unfair_lock_unlock(v38[2]);
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_96_1();
            OUTLINED_FUNCTION_27_2(v58);
            sub_190AB9930(v81);
            OUTLINED_FUNCTION_16();
            goto LABEL_18;
          }
          v71 = v35;
          v72 = v112;
          v73 = v71;
          v74 = v72;
          sub_190BE4A0C();
          v75 = OUTLINED_FUNCTION_91_1();
          if (os_log_type_enabled(v112, v75))
          {
            v76 = (_DWORD *)OUTLINED_FUNCTION_20_1();
            v116[0] = OUTLINED_FUNCTION_20_1();
            *v76 = 136446466;
            v77 = OUTLINED_FUNCTION_46_2();
            OUTLINED_FUNCTION_18_7(v77, v78);
            OUTLINED_FUNCTION_9_6(v79);

            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_14_2();
            sub_190BE4E08();
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_29_3();
            v117[0] = v80;
            OUTLINED_FUNCTION_11_1();

            OUTLINED_FUNCTION_99_0();
            OUTLINED_FUNCTION_13_5(&dword_190AA0000, v112, v75, "Network operation %{public}s failed to find completion.  Tasks: %{public}s");
            OUTLINED_FUNCTION_17_5();
            OUTLINED_FUNCTION_12_0();
          }
          OUTLINED_FUNCTION_26_3();

          v38 = v115;
          v81 = v29;
        }
        else
        {
          v57 = OUTLINED_FUNCTION_92_1(v32, sel_response);
          v58 = v28;
          v38 = v115;
          if (v57)
          {
            v59 = v57;
            objc_opt_self();
            v60 = swift_dynamicCastObjCClass();
            if (v60)
            {
              a3 = (void *)v60;
              v61 = (void *)v60;
              if (!sub_190B1CFA0())
              {
                if (qword_1ED034658 != -1)
                  swift_once();
                v89 = OUTLINED_FUNCTION_96();
                __swift_project_value_buffer(v89, (uint64_t)qword_1ED039A58);
                v90 = a2;
                v91 = v59;
                v92 = OUTLINED_FUNCTION_98_1();
                v93 = v61;
                v94 = OUTLINED_FUNCTION_90_0();
                v95 = sub_190BE5894();
                if (OUTLINED_FUNCTION_89_0(v94))
                {
                  v96 = OUTLINED_FUNCTION_20_1();
                  v116[0] = OUTLINED_FUNCTION_20_1();
                  *(_DWORD *)v96 = 136446466;
                  v97 = sub_190B1AD7C();
                  OUTLINED_FUNCTION_18_7(v97, v98);
                  OUTLINED_FUNCTION_11_1();

                  OUTLINED_FUNCTION_62();
                  *(_WORD *)(v96 + 12) = 2050;
                  v99 = objc_msgSend(a3, sel_statusCode);

                  v117[0] = (uint64_t)v99;
                  OUTLINED_FUNCTION_11_1();

                  OUTLINED_FUNCTION_13_5(&dword_190AA0000, v94, v95, "Network operation %{public}s failed with HTTP status code: %{public}ld");
                  OUTLINED_FUNCTION_82();
                  OUTLINED_FUNCTION_12_0();
                }

                v38 = v115;
                if (v58)
                {
                  sub_190B1D1A4();
                  v100 = (void *)OUTLINED_FUNCTION_38();
                  *v101 = a3;
                  v102 = v93;
                  OUTLINED_FUNCTION_48_0(v58);
                  OUTLINED_FUNCTION_63_0((uint64_t)v100);

                  OUTLINED_FUNCTION_27_2(v58);
                }
                else
                {
                  v103 = v92;
                  v104 = v112;
                  OUTLINED_FUNCTION_98_1();
                  v105 = OUTLINED_FUNCTION_76_0();
                  sub_190BE4A0C();
                  v106 = OUTLINED_FUNCTION_91_1();
                  if (os_log_type_enabled(v93, v106))
                  {
                    v107 = (_DWORD *)OUTLINED_FUNCTION_20_1();
                    v116[0] = OUTLINED_FUNCTION_20_1();
                    *v107 = 136446466;
                    v108 = OUTLINED_FUNCTION_46_2();
                    OUTLINED_FUNCTION_18_7(v108, v109);
                    OUTLINED_FUNCTION_9_6(v110);

                    OUTLINED_FUNCTION_62();
                    OUTLINED_FUNCTION_14_2();
                    sub_190BE4E08();
                    OUTLINED_FUNCTION_62();
                    OUTLINED_FUNCTION_29_3();
                    v117[0] = v111;
                    OUTLINED_FUNCTION_11_1();

                    swift_bridgeObjectRelease();
                    OUTLINED_FUNCTION_13_5(&dword_190AA0000, v93, v106, "Network operation %{public}s failed to find completion.  Tasks: %{public}s");
                    OUTLINED_FUNCTION_17_5();
                    OUTLINED_FUNCTION_12_0();
                  }

                  OUTLINED_FUNCTION_83_1();
                  v38 = v115;
                }
                v81 = v113;
                OUTLINED_FUNCTION_80_0();
                goto LABEL_43;
              }
            }

          }
          if (qword_1ED034658 != -1)
            swift_once();
          v62 = OUTLINED_FUNCTION_96();
          v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1ED039A58);
          v64 = a2;
          v65 = OUTLINED_FUNCTION_87_0();
          v66 = sub_190BE58AC();
          if (os_log_type_enabled(v65, v66))
          {
            v67 = (uint8_t *)OUTLINED_FUNCTION_20_1();
            v116[0] = OUTLINED_FUNCTION_20_1();
            *(_DWORD *)v67 = 136446210;
            v68 = OUTLINED_FUNCTION_70_0();
            OUTLINED_FUNCTION_18_7(v68, v69);
            v117[0] = v70;
            sub_190BE5A2C();

            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_50(&dword_190AA0000, v65, v66, "Network operation %{public}s did succeed", v67);
            OUTLINED_FUNCTION_82();
            OUTLINED_FUNCTION_12_0();
          }

          v58 = (uint64_t)v114;
          if (v114)
          {
            OUTLINED_FUNCTION_48_0((uint64_t)v114);
            sub_190AFCA4C(v25, v27);
            v114(v25, v27, 0);
            OUTLINED_FUNCTION_96_1();
            OUTLINED_FUNCTION_27_2((uint64_t)v114);
            goto LABEL_33;
          }
          v82 = a3;
          OUTLINED_FUNCTION_78_0();
          OUTLINED_FUNCTION_98_1();
          OUTLINED_FUNCTION_76_0();
          OUTLINED_FUNCTION_87_0();
          v83 = OUTLINED_FUNCTION_91_1();
          if (os_log_type_enabled(v63, v83))
          {
            v84 = (_DWORD *)OUTLINED_FUNCTION_20_1();
            v116[0] = OUTLINED_FUNCTION_20_1();
            *v84 = 136446466;
            v85 = OUTLINED_FUNCTION_46_2();
            OUTLINED_FUNCTION_18_7(v85, v86);
            OUTLINED_FUNCTION_9_6(v87);

            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_14_2();
            sub_190BE4E08();
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_29_3();
            v117[0] = v88;
            OUTLINED_FUNCTION_11_1();

            OUTLINED_FUNCTION_99_0();
            OUTLINED_FUNCTION_13_5(&dword_190AA0000, v63, v83, "Network operation %{public}s failed to find completion.  Tasks: %{public}s");
            OUTLINED_FUNCTION_37_2();
            OUTLINED_FUNCTION_12_0();
          }

          v38 = v115;
          v81 = v113;
        }
        OUTLINED_FUNCTION_80_0();
        goto LABEL_43;
      }
    }
    swift_endAccess();
    OUTLINED_FUNCTION_16();
  }
  if (qword_1ED034658 != -1)
    swift_once();
  v43 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v43, (uint64_t)qword_1ED039A58);
  v44 = a2;
  v45 = v4;
  v46 = v44;
  v47 = v45;
  sub_190BE4A0C();
  v48 = OUTLINED_FUNCTION_94_0();
  if (OUTLINED_FUNCTION_30_5(v48))
  {
    v49 = OUTLINED_FUNCTION_20_1();
    v117[0] = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v49 = 136446466;
    v50 = OUTLINED_FUNCTION_70_0();
    sub_190ACE890(v50, v51, v117);
    v116[0] = v52;
    OUTLINED_FUNCTION_11_1();

    OUTLINED_FUNCTION_62();
    *(_WORD *)(v49 + 12) = 2082;
    OUTLINED_FUNCTION_20_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v53 = sub_190BE4E08();
    v55 = v54;
    OUTLINED_FUNCTION_62();
    sub_190ACE890(v53, v55, v117);
    v117[3] = v56;
    OUTLINED_FUNCTION_11_1();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_5(&dword_190AA0000, v45, (os_log_type_t)v4, "Network operation request: %{public}s failed to find existing task.  Tasks: %{public}s");
    OUTLINED_FUNCTION_37_2();
    OUTLINED_FUNCTION_12_0();
  }

  os_unfair_lock_unlock(v18[2]);
LABEL_18:
  OUTLINED_FUNCTION_0_0();
}

void sub_190B1A7D0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];
  uint64_t v62;
  unint64_t v63;
  void (*v64)(uint64_t, void *, uint64_t);

  sub_190B1D6C0(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v55 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v55 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v55 - v20;
  sub_190B1D820(a1);
  if (v23)
  {
    sub_190B192C8(v22, v23, v61);
    swift_bridgeObjectRelease();
    v24 = v62;
    v25 = v63;
    sub_190AFCA4C(v62, v63);
    v26 = a4;
    v27 = a4;
    v28 = a3;
    v29 = (uint64_t)a3;
    v30 = v28;
    v57 = v29;
    v58 = v26;
    v31 = sub_190B1C0DC(v24, v25, v29, v26);
    v33 = v32;
    sub_190AEF3F4(v24, v25);

    if (qword_1ED034658 != -1)
      swift_once();
    v34 = sub_190BE4A30();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED039A58);
    sub_190B1E078(a2, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_190B1D6C0);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v35 = sub_190BE4A0C();
    v36 = sub_190BE58AC();
    if (os_log_type_enabled(v35, v36))
    {
      v55 = v31;
      v56 = a5;
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v60 = v38;
      *(_DWORD *)v37 = 136446466;
      sub_190B1E078((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_190B1D6C0);
      v39 = sub_190BE428C();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v39) == 1)
      {
        v40 = 0x6E776F6E6B6E75;
        sub_190B1E0A4((uint64_t)v19, (uint64_t (*)(_QWORD))sub_190B1D6C0);
        v41 = 0xE700000000000000;
      }
      else
      {
        v40 = sub_190BE422C();
        v41 = v50;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v19, v39);
      }
      sub_190ACE890(v40, v41, &v60);
      v59 = v51;
      sub_190BE5A2C();
      swift_bridgeObjectRelease();
      sub_190B1E0A4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_190B1D6C0);
      *(_WORD *)(v37 + 12) = 2082;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v55, v33, &v60);
      v59 = v52;
      sub_190BE5A2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_190AA0000, v35, v36, "Network operation request %{public}s received response (%{public}s)", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194017000](v38, -1, -1);
      MEMORY[0x194017000](v37, -1, -1);

      a5 = v56;
    }
    else
    {
      sub_190B1E0A4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_190B1D6C0);

      swift_bridgeObjectRelease_n();
    }
    if (v64)
      v64(v57, v58, a5);
    sub_190B1D958(v61);
  }
  else
  {
    if (qword_1ED034658 != -1)
      swift_once();
    v42 = sub_190BE4A30();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED039A58);
    sub_190B1E078(a2, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_190B1D6C0);
    v43 = sub_190BE4A0C();
    v44 = sub_190BE5894();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v61[0] = v46;
      *(_DWORD *)v45 = 136446210;
      sub_190B1E078((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_190B1D6C0);
      v47 = sub_190BE428C();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v47) == 1)
      {
        v48 = 0x6E776F6E6B6E75;
        sub_190B1E0A4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_190B1D6C0);
        v49 = 0xE700000000000000;
      }
      else
      {
        v48 = sub_190BE422C();
        v49 = v53;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v13, v47);
      }
      sub_190ACE890(v48, v49, v61);
      v60 = v54;
      sub_190BE5A2C();
      swift_bridgeObjectRelease();
      sub_190B1E0A4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_190B1D6C0);
      _os_log_impl(&dword_190AA0000, v43, v44, "Network operation request %{public}s missing task description", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194017000](v46, -1, -1);
      MEMORY[0x194017000](v45, -1, -1);
    }
    else
    {
      sub_190B1E0A4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_190B1D6C0);
    }

  }
}

uint64_t sub_190B1AD7C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  sub_190B1D6C0(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = objc_msgSend(v1, sel_originalRequest);
  if (v8)
  {
    v9 = v8;
    sub_190BE4250();

    v10 = sub_190BE428C();
    v11 = (uint64_t)v5;
    v12 = 0;
  }
  else
  {
    v10 = sub_190BE428C();
    v11 = (uint64_t)v5;
    v12 = 1;
  }
  __swift_storeEnumTagSinglePayload(v11, v12, 1, v10);
  sub_190B1E0DC((uint64_t)v5, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_190B1D6C0);
  sub_190BE428C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10) == 1)
  {
    sub_190B1E0A4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_190B1D6C0);
    return 0x6E776F6E6B6E75;
  }
  else
  {
    v13 = sub_190BE422C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
  }
  return v13;
}

Swift::Void __swiftcall NetworkOperationURLSessionDelegate.urlSession(_:task:didFinishCollecting:)(NSURLSession _, NSURLSessionTask task, NSURLSessionTaskMetrics didFinishCollecting)
{
  os_log_type_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  objc_class *v12;
  objc_class *v13;
  objc_class *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  objc_class *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;

  sub_190B1D6C0(0);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_0();
  v9 = v8 - v7;
  if (qword_1ED034658 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED039A58);
  v11 = task.super.isa;
  v12 = didFinishCollecting.super.isa;
  v13 = v11;
  v14 = v12;
  v15 = sub_190BE4A0C();
  v16 = sub_190BE58AC();
  if (OUTLINED_FUNCTION_31_2(v16))
  {
    v17 = OUTLINED_FUNCTION_20_1();
    v26 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v27 = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v17 = 136446466;
    v18 = sub_190B1AD7C();
    sub_190ACE890(v18, v19, &v27);
    OUTLINED_FUNCTION_11_1();

    OUTLINED_FUNCTION_62();
    *(_WORD *)(v17 + 12) = 2114;
    v20 = v14;
    sub_190BE5A2C();
    *v26 = v14;

    OUTLINED_FUNCTION_15_6(&dword_190AA0000, v15, v3, "Network operation %{public}s did finish collecting metrics: %{public}@", (uint8_t *)v17);
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_12_0();
  }

  v21 = -[objc_class originalRequest](v13, sel_originalRequest);
  if (v21)
  {
    v22 = v21;
    sub_190BE4250();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  v24 = sub_190BE428C();
  __swift_storeEnumTagSinglePayload(v9, v23, 1, v24);
  v25 = -[objc_class response](v13, sel_response);
  sub_190B1A7D0(v13, v9, v25, v14, 0);

  sub_190B1E0A4(v9, (uint64_t (*)(_QWORD))sub_190B1D6C0);
  OUTLINED_FUNCTION_0_0();
}

void NetworkOperationURLSessionDelegate.urlSession(_:dataTask:didReceive:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD v84[4];
  _OWORD v85[5];

  v6 = v5;
  sub_190B1D820(a2);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    if (qword_1ED034658 != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED039A58);
    v14 = OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_54_1();
    v15 = v14;
    OUTLINED_FUNCTION_54_1();
    v16 = sub_190BE4A0C();
    v17 = sub_190BE58AC();
    if (os_log_type_enabled(v16, v17))
    {
      v73 = v6;
      v18 = OUTLINED_FUNCTION_20_1();
      v69 = OUTLINED_FUNCTION_20_1();
      *(_QWORD *)&v85[0] = v69;
      *(_DWORD *)v18 = 136446466;
      v19 = sub_190B1AD7C();
      OUTLINED_FUNCTION_85_2(v19, v20, v21, v22, v23, v24, v25, v26, v69, v73, (uint64_t)v76, v81, v82, v83, *(uint64_t *)&v84[0], *((uint64_t *)&v84[0] + 1));
      sub_190BE5A2C();

      OUTLINED_FUNCTION_62();
      *(_WORD *)(v18 + 12) = 2082;
      OUTLINED_FUNCTION_54_1();
      v27 = sub_190BE4670();
      v29 = v28;
      OUTLINED_FUNCTION_25_5();
      sub_190ACE890(v27, v29, (uint64_t *)v85);
      *(_QWORD *)&v84[0] = v30;
      OUTLINED_FUNCTION_82_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_25_5();
      OUTLINED_FUNCTION_25_5();
      OUTLINED_FUNCTION_15_6(&dword_190AA0000, v16, v17, "Network operation with request %{public}s received data (%{public}s)", (uint8_t *)v18);
      OUTLINED_FUNCTION_37_2();
      OUTLINED_FUNCTION_12_0();
    }

    OUTLINED_FUNCTION_25_5();
    OUTLINED_FUNCTION_25_5();

    sub_190B192C8(v11, v12, v84);
    sub_190B18F40(a3, a4);
    v59 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_taskLock);
    UnfairLock.lock()();
    v85[0] = v84[0];
    v85[1] = v84[1];
    v85[2] = v84[2];
    v85[3] = v84[3];
    OUTLINED_FUNCTION_6_0();
    sub_190B1D8E8(v85);
    sub_190B1D5BC();
    swift_endAccess();
    OUTLINED_FUNCTION_20();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v59 + 16));
    sub_190B1D958(v85);
  }
  else
  {
    if (qword_1ED034658 != -1)
      swift_once();
    v31 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED039A58);
    v77 = OUTLINED_FUNCTION_78_0();
    sub_190BE4A0C();
    v32 = OUTLINED_FUNCTION_77_0();
    if (os_log_type_enabled(v4, v32))
    {
      v33 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      *(_QWORD *)&v85[0] = OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v33 = 136446210;
      v34 = sub_190B1AD7C();
      OUTLINED_FUNCTION_85_2(v34, v35, v36, v37, v38, v39, v40, v41, v68, v72, (uint64_t)v77, v81, v82, v83, *(uint64_t *)&v84[0], *((uint64_t *)&v84[0] + 1));
      *(_QWORD *)&v84[0] = v42;
      v43 = sub_190BE5A2C();
      OUTLINED_FUNCTION_93_1(v43, v44, v45, v46, v47, v48, v49, v50, v70, v74, v78);
      OUTLINED_FUNCTION_93_1(v51, v52, v53, v54, v55, v56, v57, v58, v71, v75, v79);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_50(&dword_190AA0000, v4, v32, "Error: Missing task identifier for request %{public}s", v33);
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_12_0();
    }

    OUTLINED_FUNCTION_93_1(v60, v61, v62, v63, v64, v65, v66, v67, v68, v72, v77);
  }
}

void NetworkOperationURLSessionDelegate.urlSession(_:downloadTask:didFinishDownloadingTo:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[4];
  _OWORD v48[5];

  v5 = sub_190BE4628();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_0();
  v9 = v8 - v7;
  if (qword_1ED034658 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED039A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a3, v5);
  v11 = a2;
  v12 = sub_190BE4A0C();
  v13 = sub_190BE58AC();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = OUTLINED_FUNCTION_20_1();
    *(_QWORD *)&v48[0] = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v15 = 136446466;
    v16 = OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_24_2(v16, v17);
    sub_190BE5A2C();

    OUTLINED_FUNCTION_62();
    *(_WORD *)(v15 + 12) = 2082;
    v18 = sub_190BE4574();
    OUTLINED_FUNCTION_24_2(v18, v19);
    *(_QWORD *)&v47[0] = v20;
    sub_190BE5A2C();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_15_6(&dword_190AA0000, v12, (os_log_type_t)v14, "Network operation with request %{public}s finished downloading data to location (%{public}s", (uint8_t *)v15);
    OUTLINED_FUNCTION_37_2();
    OUTLINED_FUNCTION_12_0();
  }

  OUTLINED_FUNCTION_58_1();
  sub_190BE4658();
  sub_190B1D820(v11);
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    v25 = v11;
    OUTLINED_FUNCTION_53_2();
    v26 = v25;
    OUTLINED_FUNCTION_53_2();
    v27 = sub_190BE4A0C();
    v28 = sub_190BE58AC();
    if (OUTLINED_FUNCTION_31_2(v28))
    {
      v29 = OUTLINED_FUNCTION_20_1();
      *(_QWORD *)&v48[0] = OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v29 = 136446466;
      v30 = sub_190B1AD7C();
      OUTLINED_FUNCTION_24_2(v30, v31);
      OUTLINED_FUNCTION_59_0(v32);
      sub_190BE5A2C();

      OUTLINED_FUNCTION_62();
      *(_WORD *)(v29 + 12) = 2082;
      OUTLINED_FUNCTION_53_2();
      OUTLINED_FUNCTION_95_0();
      v33 = sub_190BE4670();
      v35 = v34;
      OUTLINED_FUNCTION_10_4();
      sub_190ACE890(v33, v35, (uint64_t *)v48);
      *(_QWORD *)&v47[0] = v36;
      OUTLINED_FUNCTION_11_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_10_4();
      OUTLINED_FUNCTION_10_4();
      OUTLINED_FUNCTION_15_6(&dword_190AA0000, v27, (os_log_type_t)a3, "Network operation with request %{public}s downloaded data (%{public}s)", (uint8_t *)v29);
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_12_0();
    }

    OUTLINED_FUNCTION_10_4();
    OUTLINED_FUNCTION_10_4();

    sub_190B192C8(v23, v24, v47);
    v43 = OUTLINED_FUNCTION_95_0();
    sub_190B18F40(v43, v44);
    v45 = *(_QWORD *)(v46 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_taskLock);
    UnfairLock.lock()();
    v48[0] = v47[0];
    v48[1] = v47[1];
    v48[2] = v47[2];
    v48[3] = v47[3];
    OUTLINED_FUNCTION_6_0();
    sub_190B1D8E8(v48);
    sub_190B1D5BC();
    swift_endAccess();
    OUTLINED_FUNCTION_16();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 16));
    OUTLINED_FUNCTION_10_4();
    sub_190B1D958(v48);
  }
  else
  {
    v37 = v11;
    sub_190BE4A0C();
    v38 = OUTLINED_FUNCTION_77_0();
    if (OUTLINED_FUNCTION_89_0(v14))
    {
      v39 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      *(_QWORD *)&v48[0] = OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v39 = 136446210;
      v40 = sub_190B1AD7C();
      OUTLINED_FUNCTION_24_2(v40, v41);
      *(_QWORD *)&v47[0] = v42;
      sub_190BE5A2C();

      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_50(&dword_190AA0000, v14, v38, "Error: Missing task identifier for request %{public}s", v39);
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_12_0();
    }
    OUTLINED_FUNCTION_10_4();

  }
  OUTLINED_FUNCTION_0_0();
}

Swift::Void __swiftcall NetworkOperationURLSessionDelegate.urlSessionDidFinishEvents(forBackgroundURLSession:)(NSURLSession forBackgroundURLSession)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v5;
  objc_class *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21[3];

  v3 = v1;
  if (qword_1ED034658 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED039A58);
  v6 = forBackgroundURLSession.super.isa;
  v7 = OUTLINED_FUNCTION_90_0();
  v8 = sub_190BE58AC();
  if (OUTLINED_FUNCTION_30_5(v8))
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_20_1();
    v21[0] = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v9 = 136446210;
    v10 = sub_190B19964();
    sub_190ACE890(v10, v11, v21);
    sub_190BE5A2C();

    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_50(&dword_190AA0000, v7, v2, "Background URL session did finish for identifier: %{public}s", v9);
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_12_0();
  }

  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_observerLock);
  UnfairLock.lock()();
  v13 = (unint64_t *)(v3
                           + OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_sessionDidFinishObservers);
  OUTLINED_FUNCTION_20_0();
  v14 = *v13;
  *v13 = MEMORY[0x1E0DEE9D8];
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  if (!(v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_7;
LABEL_15:
    OUTLINED_FUNCTION_20();
    return;
  }
  OUTLINED_FUNCTION_74();
  v15 = sub_190BE5EAC();
  OUTLINED_FUNCTION_20();
  if (!v15)
    goto LABEL_15;
LABEL_7:
  if (v15 >= 1)
  {
    for (i = 0; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        v17 = MEMORY[0x194015F20](i, v14);
      }
      else
      {
        v17 = *(_QWORD *)(v14 + 8 * i + 32);
        swift_retain();
      }
      v18 = MEMORY[0x1940170E4](v17 + 32);
      swift_unknownObjectRelease();
      if (v18)
      {
        v19 = *(void (**)(uint64_t))(v17 + 16);
        v20 = swift_retain();
        v19(v20);
        swift_release();
      }
      swift_release();
    }
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_190B1C0DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  unint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t inited;
  void *v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v76 = a3;
  v77 = a1;
  v78 = a2;
  v5 = sub_190BE4370();
  v74 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v73 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B1DF58(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v79 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v82 = (uint64_t)&v72 - v10;
  sub_190B1DF74(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v72 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v72 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v72 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v72 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v72 - v27;
  v80 = v23;
  v81 = v5;
  if (a4)
  {
    v29 = objc_msgSend(a4, sel_transactionMetrics);
    sub_190ADCB44(0, &qword_1ED033D38);
    v30 = sub_190BE530C();

    if (v30 >> 62)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v47 = sub_190BE5EAC();
      swift_bridgeObjectRelease();
      if (v47)
      {
LABEL_4:
        sub_190B72EF0(0, (v30 & 0xC000000000000001) == 0, v30);
        if ((v30 & 0xC000000000000001) != 0)
          v31 = (id)MEMORY[0x194015F20](0, v30);
        else
          v31 = *(id *)(v30 + 32);
        v32 = v31;
        v5 = v81;
        swift_bridgeObjectRelease();
        if (v32)
        {
          v33 = objc_msgSend(v32, sel_fetchStartDate);
          if (v33)
          {
            v34 = v33;
            sub_190BE47B4();

            v35 = sub_190BE47E4();
            v36 = 0;
          }
          else
          {
            v35 = sub_190BE47E4();
            v36 = 1;
          }
          v40 = 1;
          __swift_storeEnumTagSinglePayload((uint64_t)v20, v36, 1, v35);
          sub_190B1E0DC((uint64_t)v20, (uint64_t)v28, (uint64_t (*)(_QWORD))sub_190B1DF74);
          v41 = objc_msgSend(v32, sel_responseStartDate);
          if (v41)
          {
            v42 = v41;
            sub_190BE47B4();

            v40 = 0;
          }
          v43 = sub_190BE47E4();
          v44 = 1;
          __swift_storeEnumTagSinglePayload((uint64_t)v17, v40, 1, v43);
          sub_190B1E0DC((uint64_t)v17, (uint64_t)v26, (uint64_t (*)(_QWORD))sub_190B1DF74);
          v45 = objc_msgSend(v32, sel_requestStartDate);
          if (v45)
          {
            v46 = v45;
            sub_190BE47B4();

            v44 = 0;
          }
          v5 = v81;
          v75 = v32;
          __swift_storeEnumTagSinglePayload((uint64_t)v14, v44, 1, v43);
          sub_190B1E0DC((uint64_t)v14, (uint64_t)v80, (uint64_t (*)(_QWORD))sub_190B1DF74);
          goto LABEL_19;
        }
LABEL_18:
        v48 = sub_190BE47E4();
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v48);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v48);
        __swift_storeEnumTagSinglePayload((uint64_t)v80, 1, 1, v48);
        v75 = 0;
LABEL_19:
        v49 = objc_msgSend(a4, sel_taskInterval);
        v39 = v82;
        sub_190BE4334();

        v38 = 0;
        goto LABEL_20;
      }
    }
    else if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    v5 = v81;
    goto LABEL_18;
  }
  v37 = sub_190BE47E4();
  v38 = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v37);
  __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v37);
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 1, 1, v37);
  v75 = 0;
  v39 = v82;
LABEL_20:
  __swift_storeEnumTagSinglePayload(v39, v38, 1, v5);
  sub_190B1D6DC(0, qword_1ED033D40, (uint64_t (*)(uint64_t))sub_190B1DF90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BE87D0;
  *(_QWORD *)(inited + 32) = 0x6F43737574617473;
  *(_QWORD *)(inited + 40) = 0xEA00000000006564;
  if (v76 && (objc_opt_self(), (v51 = (void *)swift_dynamicCastObjCClass()) != 0))
  {
    v52 = objc_msgSend(v51, sel_statusCode);
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 48) = v52;
  }
  else
  {
    *(_OWORD *)(inited + 48) = 0u;
    *(_OWORD *)(inited + 64) = 0u;
  }
  *(_QWORD *)(inited + 80) = 1702521203;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v53 = (void *)objc_opt_self();
  v54 = objc_msgSend(v53, sel_stringFromByteCount_countStyle_, sub_190BE470C(), 2);
  v55 = sub_190BE5000();
  v57 = v56;

  v58 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 96) = v55;
  *(_QWORD *)(inited + 104) = v57;
  *(_QWORD *)(inited + 120) = v58;
  *(_QWORD *)(inited + 128) = 0x646575657571;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  MEMORY[0x1E0C80A78](v59);
  *(&v72 - 2) = v39;
  v60 = (uint64_t)v28;
  sub_190B915C4((void (*)(uint64_t))sub_190B1E010, (uint64_t)(&v72 - 4), v61);
  *(_QWORD *)(inited + 176) = 1650881652;
  *(_QWORD *)(inited + 184) = 0xE400000000000000;
  MEMORY[0x1E0C80A78](v62);
  v63 = (uint64_t)v80;
  *(&v72 - 2) = (uint64_t)v80;
  sub_190B915C4((void (*)(uint64_t))sub_190B1E044, (uint64_t)(&v72 - 4), v64);
  *(_QWORD *)(inited + 224) = 0x6C61746F74;
  *(_QWORD *)(inited + 232) = 0xE500000000000000;
  v65 = v79;
  sub_190B1E078(v39, v79, (uint64_t (*)(_QWORD))sub_190B1DF58);
  v66 = v81;
  if (__swift_getEnumTagSinglePayload(v65, 1, v81) == 1)
  {
    *(_OWORD *)(inited + 240) = 0u;
    *(_OWORD *)(inited + 256) = 0u;
  }
  else
  {
    v67 = v74;
    v68 = v65;
    v69 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v73, v68, v66);
    sub_190B1CD94((uint64_t *)(inited + 240));
    (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v66);
  }
  v83 = sub_190B1CE18(inited);
  sub_190ACF6F0(0, (unint64_t *)&qword_1ED034520, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190AD1E54();
  v70 = sub_190BE4F28();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_190B4BE38();

  sub_190B1E0A4((uint64_t)v26, (uint64_t (*)(_QWORD))sub_190B1DF74);
  sub_190B1E0A4(v60, (uint64_t (*)(_QWORD))sub_190B1DF74);
  sub_190B1E0A4(v82, (uint64_t (*)(_QWORD))sub_190B1DF58);
  sub_190B1E0A4(v63, (uint64_t (*)(_QWORD))sub_190B1DF74);
  return v70;
}

id NetworkOperationURLSessionDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id NetworkOperationURLSessionDelegate.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;
  uint64_t v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_taskLock;
  v11 = 1;
  type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_81_1();
  v3 = v0;
  UnfairLock.init(options:)((int *)&v11);
  *(_QWORD *)&v0[v2] = v4;
  v5 = OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_runningTasks;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[v5] = sub_190BE4DFC();
  v7 = OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_observerLock;
  v11 = 1;
  OUTLINED_FUNCTION_81_1();
  UnfairLock.init(options:)((int *)&v11);
  *(_QWORD *)&v3[v7] = v8;
  *(_QWORD *)&v3[OBJC_IVAR____TtC13TeaFoundation34NetworkOperationURLSessionDelegate_sessionDidFinishObservers] = v6;

  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id NetworkOperationURLSessionDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B1CA74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  unint64_t v16;

  v2 = sub_190BE47E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_190BE4358();
  sub_190BE4754();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14[1] = sub_190B1CB8C(v7);
  v8 = sub_190BE5FC0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v15 = v8;
  v16 = v10;
  result = sub_190BE5114();
  v12 = v15;
  v13 = v16;
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v12;
  a1[1] = v13;
  return result;
}

uint64_t sub_190B1CB8C(double a1)
{
  double v1;
  uint64_t result;

  v1 = floor(a1 * 1000.0);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18)
    return (uint64_t)v1;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_190B1CBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t (*a4)(_QWORD)@<X4>, void (*a5)(char *, uint64_t)@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(char *, uint64_t);

  v20 = a5;
  v11 = a3(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - v13;
  v15 = a4(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v19 - v16;
  sub_190B1E078(a2, (uint64_t)&v19 - v16, a4);
  result = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v11);
  if ((_DWORD)result == 1)
  {
    *a6 = 0u;
    a6[1] = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    v20(v14, a1);
    result = OUTLINED_FUNCTION_67_0();
    if (v6)
      __break(1u);
  }
  return result;
}

uint64_t sub_190B1CD10@<X0>(uint64_t *a1@<X8>)
{
  double v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  sub_190BE4754();
  sub_190B1CB8C(v2);
  v5 = sub_190BE5FC0();
  v6 = v3;
  result = sub_190BE5114();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v5;
  a1[1] = v6;
  return result;
}

uint64_t sub_190B1CD94@<X0>(uint64_t *a1@<X8>)
{
  double v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  sub_190BE4364();
  sub_190B1CB8C(v2);
  v5 = sub_190BE5FC0();
  v6 = v3;
  result = sub_190BE5114();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v5;
  a1[1] = v6;
  return result;
}

uint64_t sub_190B1CE18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0() + 48;
  v3 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_190B18ADC(v2, (uint64_t)&v9);
    if (v10)
    {
      sub_190ACEE08(&v9, v11);
      *(_QWORD *)&v9 = 0;
      *((_QWORD *)&v9 + 1) = 0xE000000000000000;
      sub_190BE5114();
      sub_190BE5114();
      sub_190BE5DE0();
      v4 = v9;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190AFE0AC();
        v3 = v6;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_190AFE0AC();
        v3 = v7;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      *(_OWORD *)(v3 + 16 * v5 + 32) = v4;
    }
    else
    {
      sub_190AD9BB8((uint64_t)&v9);
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

BOOL sub_190B1CFA0()
{
  void *v0;

  return (uint64_t)objc_msgSend(v0, sel_statusCode) >= 200 && (uint64_t)objc_msgSend(v0, sel_statusCode) < 300
      || objc_msgSend(v0, sel_statusCode) == (id)304;
}

uint64_t sub_190B1D000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_190B1D050()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_190B1D05C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_190B1D068()
{
  uint64_t v0;

  swift_release();
  sub_190AA2860(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_190B1D094()
{
  return sub_190B1D050();
}

uint64_t sub_190B1D0B4()
{
  return sub_190B1D05C();
}

uint64_t sub_190B1D0D4()
{
  return sub_190BE46AC();
}

unint64_t sub_190B1D1A4()
{
  unint64_t result;

  result = qword_1EE1FE2F0;
  if (!qword_1EE1FE2F0)
  {
    result = MEMORY[0x194016EF8](&unk_190BEE670, &type metadata for NetworkOperationInternalError);
    atomic_store(result, (unint64_t *)&qword_1EE1FE2F0);
  }
  return result;
}

void sub_190B1D1E0()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  _OWORD *v3;

  OUTLINED_FUNCTION_43_4();
  v3 = v2;
  OUTLINED_FUNCTION_34_4();
  sub_190AEABD0();
  OUTLINED_FUNCTION_33_3();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_42_1();
    OUTLINED_FUNCTION_22_3();
    sub_190B1DF08(0, &qword_1ED02F3A8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECB20]);
    OUTLINED_FUNCTION_23_7();
    OUTLINED_FUNCTION_52_3();
    OUTLINED_FUNCTION_60_1();
    sub_190BE5E1C();
    *v0 = v1;
    OUTLINED_FUNCTION_5_6();
  }
  else
  {
    *v3 = 0u;
    v3[1] = 0u;
    OUTLINED_FUNCTION_39();
  }
}

double sub_190B1D29C@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  double result;
  uint64_t v11;

  v2 = v1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v4 = sub_190AEABD0();
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v11 = *v2;
    *v2 = 0x8000000000000000;
    sub_190B1DF08(0, &qword_1EE1FF5C8, (uint64_t)&type metadata for NetworkOperationTask, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECB20]);
    sub_190BE5E04();
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(v11 + 56) + (v4 << 6);
    v8 = *(_QWORD *)(v7 + 8);
    *(_QWORD *)a1 = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(v7 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(v7 + 48);
    sub_190BE5E1C();
    *v2 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void sub_190B1D3F0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_43_4();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_34_4();
  sub_190ACBC04(v6, v4);
  OUTLINED_FUNCTION_33_3();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_42_1();
    OUTLINED_FUNCTION_22_3();
    sub_190AE7F5C(0, &qword_1ED02F380, (uint64_t (*)(uint64_t))sub_190B1DEB4, (void (*)(void))sub_190B089F4);
    OUTLINED_FUNCTION_23_7();
    OUTLINED_FUNCTION_52_3();
    sub_190AAB5A4((__int128 *)(*(_QWORD *)(v1 + 56) + 40 * v6), v8);
    sub_190B1DEB4();
    sub_190B089F4();
    sub_190BE5E1C();
    *v2 = v1;
    OUTLINED_FUNCTION_5_6();
  }
  else
  {
    *(_QWORD *)(v8 + 32) = 0;
    *(_OWORD *)v8 = 0u;
    *(_OWORD *)(v8 + 16) = 0u;
    OUTLINED_FUNCTION_39();
  }
}

void sub_190B1D4CC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_43_4();
  v1 = v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B13714(v1);
  LOBYTE(v1) = v2;
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_42_1();
    OUTLINED_FUNCTION_38_3();
    sub_190B1DD74();
    OUTLINED_FUNCTION_49_1();
    swift_bridgeObjectRelease();
    sub_190AA510C();
    sub_190B1D6DC(0, &qword_1ED02F2E8, (uint64_t (*)(uint64_t))sub_190B1DE20, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    sub_190ADCAB4(&qword_1ED0332B8, (uint64_t (*)(uint64_t))sub_190AA510C, MEMORY[0x1E0DEB3C0]);
    sub_190BE5E1C();
    OUTLINED_FUNCTION_97_0();
  }
  OUTLINED_FUNCTION_39();
}

uint64_t sub_190B1D5BC()
{
  uint64_t *v0;
  uint64_t v2;

  swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  *v0 = 0x8000000000000000;
  sub_190B478B0();
  *v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B1D638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_35_2();
  sub_190B47994();
  OUTLINED_FUNCTION_7_6(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_3_4();
}

uint64_t sub_190B1D670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190ACB590(a1, a2, a3, sub_190B47A38);
}

uint64_t sub_190B1D67C(uint64_t a1, uint64_t a2)
{
  return sub_190AE104C(a1, a2, sub_190B47AB8);
}

uint64_t sub_190B1D688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_35_2();
  sub_190B47B5C();
  OUTLINED_FUNCTION_7_6(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_3_4();
}

void sub_190B1D6C0(uint64_t a1)
{
  sub_190B1D6DC(a1, &qword_1ED033E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_190B1D6DC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = OUTLINED_FUNCTION_101(0, (uint64_t)a2, a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, v4);
  }
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B1D724(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_190BE446C();
  if (!result || (result = sub_190BE4484(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_190BE4478();
      return sub_190BE46AC();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190B1D7B4(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_identifier);

  if (!v2)
    return 0;
  v3 = sub_190BE5000();

  return v3;
}

void sub_190B1D820(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_taskDescription);
  if (v1)
  {
    v2 = v1;
    sub_190BE5000();

  }
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B1D878(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_190AEF3F4(a3, a4);
    sub_190AB9930(a5);
    return sub_190AB9930(a7);
  }
  return result;
}

_QWORD *sub_190B1D8E8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[6];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AFCA4C(v2, v3);
  sub_190AFCCE8(v4);
  sub_190AFCCE8(v5);
  return a1;
}

_QWORD *sub_190B1D958(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[6];
  swift_bridgeObjectRelease();
  sub_190AEF3F4(v2, v3);
  sub_190AB9930(v4);
  sub_190AB9930(v5);
  return a1;
}

uint64_t type metadata accessor for NetworkOperationURLSessionDelegate()
{
  return objc_opt_self();
}

uint64_t destroy for NetworkOperationTask(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = sub_190AEF3F4(a1[2], a1[3]);
  if (a1[4])
    result = swift_release();
  if (a1[6])
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for NetworkOperationTask(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AFCA4C(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  if (v7)
  {
    v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v9 = a2[6];
  if (v9)
  {
    v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  return a1;
}

_QWORD *assignWithCopy for NetworkOperationTask(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  v5 = a2[3];
  sub_190AFCA4C(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_190AEF3F4(v6, v7);
  v8 = a2[4];
  if (a1[4])
  {
    if (v8)
    {
      v9 = a2[5];
      a1[4] = v8;
      a1[5] = v9;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = a2[5];
    a1[4] = v8;
    a1[5] = v10;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_8:
  v11 = a2[6];
  if (!a1[6])
  {
    if (v11)
    {
      v13 = a2[7];
      a1[6] = v11;
      a1[7] = v13;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_14;
  }
  v12 = a2[7];
  a1[6] = v11;
  a1[7] = v12;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for NetworkOperationTask(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_190AEF3F4(v5, v6);
  v7 = *(_QWORD *)(a2 + 32);
  if (a1[4])
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 40);
      a1[4] = v7;
      a1[5] = v8;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 40);
    a1[4] = v7;
    a1[5] = v9;
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
LABEL_8:
  v10 = *(_QWORD *)(a2 + 48);
  if (!a1[6])
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 56);
      a1[6] = v10;
      a1[7] = v12;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_14;
  }
  v11 = *(_QWORD *)(a2 + 56);
  a1[6] = v10;
  a1[7] = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkOperationTask(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkOperationTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkOperationTask()
{
  return &type metadata for NetworkOperationTask;
}

void sub_190B1DD74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02F3B0)
  {
    sub_190AA510C();
    sub_190B1D6DC(255, &qword_1ED02F2E8, (uint64_t (*)(uint64_t))sub_190B1DE20, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    sub_190ADCAB4(&qword_1ED0332B8, (uint64_t (*)(uint64_t))sub_190AA510C, MEMORY[0x1E0DEB3C0]);
    v0 = sub_190BE5E28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02F3B0);
  }
}

void sub_190B1DE20()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED033270)
  {
    sub_190BE4628();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for AuthToken();
    sub_190ADCAB4((unint64_t *)&qword_1ED032FE0, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_190BE4E98();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED033270);
  }
}

unint64_t sub_190B1DEB4()
{
  unint64_t result;

  result = qword_1ED02E980;
  if (!qword_1ED02E980)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED02E980);
  }
  return result;
}

void sub_190B1DF08(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(a1, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_0();
}

void sub_190B1DF58(uint64_t a1)
{
  sub_190B1D6DC(a1, &qword_1ED033B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_190B1DF74(uint64_t a1)
{
  sub_190B1D6DC(a1, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_190B1DF90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED033CE8)
  {
    sub_190ACF6F0(255, (unint64_t *)&qword_1ED034E00, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED033CE8);
  }
}

uint64_t sub_190B1E010@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_190B1CBE0(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0], (uint64_t (*)(_QWORD))sub_190B1DF58, (void (*)(char *, uint64_t))sub_190B1CA74, a2);
}

uint64_t sub_190B1E044@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_190B1CBE0(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD))sub_190B1DF74, (void (*)(char *, uint64_t))sub_190B1CD10, a2);
}

void sub_190B1E078(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_68_1(a1, a2, a3);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0();
}

void sub_190B1E0A4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_0();
}

void sub_190B1E0DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_68_1(a1, a2, a3);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0();
}

id OUTLINED_FUNCTION_88_0()
{
  void *v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_89_0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_91_1()
{
  return sub_190BE5894();
}

id OUTLINED_FUNCTION_92_1(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_98_1()
{
  void *v0;

  return v0;
}

BOOL sub_190B1E150(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_190B1E160()
{
  return sub_190BE6308();
}

uint64_t sub_190B1E184()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

BOOL sub_190B1E1C8(char *a1, char *a2)
{
  return sub_190B1E150(*a1, *a2);
}

uint64_t sub_190B1E1D4()
{
  return sub_190B1E184();
}

uint64_t sub_190B1E1DC()
{
  return sub_190B1E160();
}

uint64_t sub_190B1E1E4()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190B1E234()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  sub_190AB9930(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t sub_190B1E268()
{
  sub_190B1E234();
  return swift_deallocClassInstance();
}

uint64_t getEnumTagSinglePayload for HandlerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HandlerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B1E35C + 4 * byte_190BE88A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B1E390 + 4 * byte_190BE88A0[v4]))();
}

uint64_t sub_190B1E390(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B1E398(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B1E3A0);
  return result;
}

uint64_t sub_190B1E3AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B1E3B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B1E3B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B1E3C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HandlerError()
{
  return &type metadata for HandlerError;
}

unint64_t sub_190B1E3E0()
{
  unint64_t result;

  result = qword_1EE1FF5D0;
  if (!qword_1EE1FF5D0)
  {
    result = MEMORY[0x194016EF8](&unk_190BE8980, &type metadata for HandlerError);
    atomic_store(result, (unint64_t *)&qword_1EE1FF5D0);
  }
  return result;
}

uint64_t sub_190B1E41C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190B1E440(uint64_t a1)
{
  uint64_t v2;

  sub_190AAC38C(0, &qword_1ED032100, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCEB10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190B1E494()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_190AAC38C(0, &qword_1ED032100, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCEB10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = sub_190BE4C28();
  if (!__swift_getEnumTagSinglePayload(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B1E560()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_190B1E58C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return v0;
}

uint64_t sub_190B1E5E0()
{
  sub_190B1E58C();
  return swift_deallocClassInstance();
}

uint64_t LRUCache.__allocating_init(maxSize:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  LRUCache.init(maxSize:)(a1, v3, v4, v5);
  return v2;
}

uint64_t LRUCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LRUCache.__deallocating_deinit()
{
  LRUCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for LRUCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LRUCache.__allocating_init(maxSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t static String.from<A>(string:)@<X0>(uint64_t a1@<X8>)
{
  int v2;

  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v2 = OUTLINED_FUNCTION_1_17();
  return OUTLINED_FUNCTION_0_3(a1, v2 ^ 1u);
}

uint64_t static Int.from<A>(string:)@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  int v20;
  unsigned __int8 v21;
  uint64_t v22;

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
    goto LABEL_45;
  v8 = BYTE2(result);
  if ((a2 & 0x1000000000000000) != 0)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B0E0AC();
    result = swift_bridgeObjectRelease();
LABEL_45:
    OUTLINED_FUNCTION_7_7(result, &qword_1EE1FF5D8);
    v20 = OUTLINED_FUNCTION_1_17();
    return OUTLINED_FUNCTION_0_3(a3, v20 ^ 1u);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v9 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v9 = (unsigned __int8 *)sub_190BE5CFC();
    result = (uint64_t)sub_190ABC798(v9, v6);
    goto LABEL_45;
  }
  if (result == 43)
  {
    if (v5)
    {
      if (v5 != 1)
      {
        OUTLINED_FUNCTION_12();
        if (!(!v12 & v11) && v13 != 2)
        {
          OUTLINED_FUNCTION_12();
          if (!(!v12 & v11) && v14 != 3)
          {
            do
            {
              OUTLINED_FUNCTION_37();
              if (!v12 & v11)
                break;
              OUTLINED_FUNCTION_5_8();
              if (!v12)
                break;
              if (__OFADD__(v16, v15))
                break;
              OUTLINED_FUNCTION_8_7();
            }
            while (!v12);
          }
        }
      }
      goto LABEL_45;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        if ((result - 48) <= 9u && v5 != 1)
        {
          OUTLINED_FUNCTION_12();
          if (!(!v12 & v11) && v17 != 2)
          {
            do
            {
              OUTLINED_FUNCTION_37();
              if (!v12 & v11)
                break;
              OUTLINED_FUNCTION_5_8();
              if (!v12)
                break;
              if (__OFADD__(v19, v18))
                break;
              OUTLINED_FUNCTION_8_7();
            }
            while (!v12);
          }
        }
      }
      goto LABEL_45;
    }
    if (v5)
    {
      if (v5 != 1)
      {
        OUTLINED_FUNCTION_12();
        if (!(!v12 & v11) && v10 != 2 && (v8 - 48) <= 9u && v10 != 3)
        {
          do
          {
            OUTLINED_FUNCTION_37();
            if (!v12 & v11)
              break;
            OUTLINED_FUNCTION_5_8();
            if (!v12)
              break;
            if (__OFSUB__(v22, v21))
              break;
            OUTLINED_FUNCTION_8_7();
          }
          while (!v12);
        }
      }
      goto LABEL_45;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void static Float.from<A>(string:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  OUTLINED_FUNCTION_4_9();
  v3 = sub_190AB08A4(v1, v0);
  OUTLINED_FUNCTION_7_7(v3, &qword_1EE1FF5E0);
  v4 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0_3(v2, v4 ^ 1u);
  OUTLINED_FUNCTION_2_4();
}

void static Double.from<A>(string:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_9();
  v4 = sub_190AC5A10(v1, v0);
  OUTLINED_FUNCTION_7_7(v4, &qword_1EE1FF5E8);
  v3 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0_3(v2, v3 ^ 1u);
  OUTLINED_FUNCTION_2_4();
}

void static Bool.from<A>(string:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  int v7;

  if (a1 != 1702195828 || a2 != 0xE400000000000000)
  {
    v6 = a1;
    a1 = sub_190BE60BC();
    if ((a1 & 1) == 0 && (v6 != 0x65736C6166 || a2 != 0xE500000000000000))
      a1 = sub_190BE60BC();
  }
  OUTLINED_FUNCTION_7_7(a1, &qword_1EE1FF5F0);
  v7 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0_3(a3, v7 ^ 1u);
  OUTLINED_FUNCTION_2_4();
}

uint64_t dispatch thunk of static ProcessInfoValueType.from<A>(string:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

_BYTE *sub_190B1EB68@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_190B1EBD0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

void sub_190B1EC24(void (*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  a1(&v4);
  if (!v2)
    *a2 = v4;
  OUTLINED_FUNCTION_10_6();
}

_BYTE *sub_190B1EC58@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_190B1EB68(a1, a2);
}

void sub_190B1EC70(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  if (!v2)
    *a1 = v4;
  OUTLINED_FUNCTION_10_6();
}

BOOL DisposableBag.isDisposed.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_9();
  v1 = MEMORY[0x1940170E4](v0);
  if (v1)
    swift_unknownObjectRelease();
  return v1 == 0;
}

uint64_t sub_190B1ECE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1940170E4](v3);
  *a2 = result;
  return result;
}

uint64_t sub_190B1ED34()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t DisposableBag.__allocating_init(disposeOn:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DisposableBag.init(disposeOn:)();
  return v0;
}

Swift::Void __swiftcall DisposableBag.dispose()()
{
  OUTLINED_FUNCTION_20_0();
  swift_unknownObjectWeakAssign();
}

uint64_t DisposableBag.deinit()
{
  uint64_t v0;

  sub_190AA2860(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t dispatch thunk of Disposable.dispose()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for DisposableBag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DisposableBag.__allocating_init(disposeOn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t CacheControlHeader.maxAge.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void CacheControlHeader.init(response:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = sub_190B1EEA0(a1);
  v6 = v5;
  v8 = v7;

  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v8 & 1;
}

uint64_t sub_190B1EEA0(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t aBlock;
  uint64_t v40;
  void (*v41)(uint64_t, void *, uint64_t, uint64_t);
  void *v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v2 = (void *)sub_190BE4FDC();
  v3 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v2);

  if (!v3)
    return 0;
  v4 = sub_190BE5000();
  v6 = v5;
  v7 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  v8 = sub_190B1F5DC(0x3D6567612D78616DLL, 0xED0000292B645C28, 0);
  sub_190B1F6B4();
  sub_190B1F704();
  sub_190AD8E3C();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v9 = sub_190BE5984();
  v11 = v10;
  v45 = 0;
  v46 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v4;
  v12[3] = v6;
  v12[4] = &v45;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_190B1F768;
  *(_QWORD *)(v13 + 24) = v12;
  v43 = sub_190B05B88;
  v44 = v13;
  aBlock = MEMORY[0x1E0C809B0];
  v40 = 1107296256;
  v41 = sub_190B1F550;
  v42 = &block_descriptor_0;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_enumerateMatchesInString_options_range_usingBlock_, v3, 0, v9, v11, v14);

  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  if (!v46
    || ((v17 = HIBYTE(v46) & 0xF, v18 = v45 & 0xFFFFFFFFFFFFLL, (v46 & 0x2000000000000000) != 0)
      ? (v19 = HIBYTE(v46) & 0xF)
      : (v19 = v45 & 0xFFFFFFFFFFFFLL),
        !v19))
  {

LABEL_58:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v46 & 0x1000000000000000) != 0)
  {
LABEL_57:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v21 = sub_190B0E0AC();
    v38 = v37;

    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
      goto LABEL_49;
    goto LABEL_58;
  }
  if ((v46 & 0x2000000000000000) == 0)
  {
    if ((v45 & 0x1000000000000000) != 0)
      v20 = (unsigned __int8 *)((v46 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v20 = (unsigned __int8 *)sub_190BE5CFC();
    v21 = (uint64_t)sub_190ABC798(v20, v18);
    v23 = v22 & 1;
LABEL_48:

    if ((v23 & 1) == 0)
    {
LABEL_49:
      v33 = sub_190B1F5AC(v21);
      swift_release();
      swift_bridgeObjectRelease();
      return v33;
    }
    goto LABEL_58;
  }
  aBlock = v45;
  v40 = v46 & 0xFFFFFFFFFFFFFFLL;
  if (v45 == 43)
  {
    if (!v17)
      goto LABEL_63;
    if (v17 == 1 || (BYTE1(v45) - 48) > 9u)
      goto LABEL_35;
    v21 = (BYTE1(v45) - 48);
    if (v17 != 2)
    {
      if ((BYTE2(v45) - 48) > 9u)
        goto LABEL_35;
      v21 = 10 * (BYTE1(v45) - 48) + (BYTE2(v45) - 48);
      v24 = v17 - 3;
      if (v24)
      {
        v25 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          v26 = *v25 - 48;
          if (v26 > 9)
            goto LABEL_35;
          v27 = 10 * v21;
          if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
            goto LABEL_35;
          v21 = v27 + v26;
          if (__OFADD__(v27, v26))
            goto LABEL_35;
          v23 = 0;
          ++v25;
          if (!--v24)
            goto LABEL_48;
        }
      }
    }
LABEL_47:
    v23 = 0;
    goto LABEL_48;
  }
  if (v45 != 45)
  {
    if (!v17 || (v45 - 48) > 9u)
      goto LABEL_35;
    v21 = (v45 - 48);
    if (v17 != 1)
    {
      if ((BYTE1(v45) - 48) > 9u)
        goto LABEL_35;
      v21 = 10 * (v45 - 48) + (BYTE1(v45) - 48);
      v28 = v17 - 2;
      if (v28)
      {
        v29 = (unsigned __int8 *)&aBlock + 2;
        while (1)
        {
          v30 = *v29 - 48;
          if (v30 > 9)
            goto LABEL_35;
          v31 = 10 * v21;
          if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
            goto LABEL_35;
          v21 = v31 + v30;
          if (__OFADD__(v31, v30))
            goto LABEL_35;
          v23 = 0;
          ++v29;
          if (!--v28)
            goto LABEL_48;
        }
      }
    }
    goto LABEL_47;
  }
  if (v17)
  {
    if (v17 != 1 && (BYTE1(v45) - 48) <= 9u)
    {
      if (v17 == 2)
      {
        v23 = 0;
        v21 = -(uint64_t)(BYTE1(v45) - 48);
        goto LABEL_48;
      }
      if ((BYTE2(v45) - 48) <= 9u)
      {
        v21 = -10 * (BYTE1(v45) - 48) - (BYTE2(v45) - 48);
        v32 = v17 - 3;
        if (!v32)
          goto LABEL_47;
        v34 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          v35 = *v34 - 48;
          if (v35 > 9)
            break;
          v36 = 10 * v21;
          if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
            break;
          v21 = v36 - v35;
          if (__OFSUB__(v36, v35))
            break;
          v23 = 0;
          ++v34;
          if (!--v32)
            goto LABEL_48;
        }
      }
    }
LABEL_35:
    v21 = 0;
    v23 = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for CacheControlHeader(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CacheControlHeader(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CacheControlHeader()
{
  return &type metadata for CacheControlHeader;
}

void sub_190B1F48C(void *a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  if (a1)
  {
    v13 = a1;
    if (objc_msgSend(v13, sel_numberOfRanges) == (id)2)
    {
      objc_msgSend(v13, sel_rangeAtIndex_, 1);
      sub_190BE5858();
      if ((v8 & 1) == 0)
      {
        v9 = sub_190BE51BC();
        v10 = MEMORY[0x19401532C](v9);
        v12 = v11;
        swift_bridgeObjectRelease();
        *a6 = v10;
        a6[1] = v12;
        swift_bridgeObjectRelease();
        *a3 = 1;
      }
    }

  }
}

void sub_190B1F550(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(void *, uint64_t, uint64_t);
  id v8;

  v7 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  v8 = a2;
  v7(a2, a3, a4);

}

uint64_t sub_190B1F5AC(uint64_t a1)
{
  return 1000000000000000000 * a1;
}

id sub_190B1F5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_190BE4FDC();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_190BE4544();

    swift_willThrow();
  }
  return v6;
}

void sub_190B1F6B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED032330)
  {
    v0 = sub_190BE5870();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED032330);
  }
}

unint64_t sub_190B1F704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED032338;
  if (!qword_1ED032338)
  {
    sub_190B1F6B4();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEB8A8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED032338);
  }
  return result;
}

uint64_t sub_190B1F744()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_190B1F768(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_190B1F48C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(uint64_t **)(v3 + 32));
}

uint64_t sub_190B1F774()
{
  return swift_deallocObject();
}

uint64_t FixedSizeTypeBinaryCodable.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_190B1FD80(v8, (uint64_t)sub_190B1F80C, 0, a2, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0CB0338], MEMORY[0x1E0DEDD18], a8);
  sub_190BE4724();
  return OUTLINED_FUNCTION_3_6();
}

uint64_t sub_190B1F80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_190B1F838(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_190B1F838(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x1E0DEAC20];
  v8[4] = MEMORY[0x1E0CB1AA8];
  v8[0] = a1;
  v8[1] = a2;
  v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x1E0DEAC20]);
  v3 = *v2;
  if (*v2 && (v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_190BE4634();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = MEMORY[0x1940148E8]();
    }
    else
    {
      v6 = MEMORY[0x194014900]();
    }
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_190B1F8F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  sub_190B202F4();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_190B20348((uint64_t)v14);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_190BE5CFC();
      }
      if (v2)
        v4 = (char *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_QWORD *)v2;
    }
    v6 = MEMORY[0x194014960](v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      OUTLINED_FUNCTION_4_10();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_190BE512C();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = MEMORY[0x19401493C](v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v14[0]);
    sub_190B203D8();
    __asm { BR              X12 }
  }
  sub_190AAB5A4(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_190BE44E4();
  OUTLINED_FUNCTION_4_10();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_190B1FD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, char *);
  uint64_t result;
  uint64_t v18;

  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v16(v12, v12 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64), v14);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  return result;
}

uint64_t static FixedSizeTypeBinaryCodable.read(from:)(uint64_t *a1, uint64_t a2)
{
  sub_190BE46D0();
  return sub_190B1FE80(a1, a2);
}

uint64_t sub_190B1FE80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v9;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(_QWORD *)(*(_QWORD *)(a2 - 8) + 64);
  sub_190AFCA4C(*a1, v4);
  sub_190B431C0(v5, v3, v4);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = v9;
  return sub_190AEF3F4(v6, v7);
}

void sub_190B1FEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_190B1FF1C(0, *(_QWORD *)(v2 + 16), a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_190B1FF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  void *v8;
  size_t v9;

  v7 = *(_QWORD *)(a5 - 8);
  v8 = (void *)swift_slowAlloc();
  if (a3)
  {
    v9 = *(_QWORD *)(v7 + 64);
    if ((v9 & 0x8000000000000000) == 0)
    {
      memmove(v8, (const void *)(a3 + a1), v9);
      sub_190BE5A20();
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  sub_190BE5EDC();
  __break(1u);
LABEL_6:
  JUMPOUT(0x194017000);
}

void sub_190B20000()
{
  sub_190B62BB4();
}

void sub_190B20018(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_190B631DC();
  if (!v1)
    *a1 = v3 & 1;
}

void sub_190B20044()
{
  sub_190B62AD0();
}

void sub_190B2005C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_190B631C8();
  if (!v1)
    *a1 = v3;
}

void sub_190B20084()
{
  sub_190B62B10();
}

void sub_190B2009C(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_190B632CC();
  if (!v1)
    *a1 = v3;
}

void sub_190B200C4()
{
  sub_190B62C0C();
}

void sub_190B200DC(_WORD *a1@<X8>)
{
  uint64_t v1;
  __int16 v3;

  sub_190B633C8();
  if (!v1)
    *a1 = v3;
}

void sub_190B20104()
{
  sub_190B62CBC();
}

void sub_190B2011C(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v3;

  sub_190B634C4();
  if (!v1)
    *a1 = v3;
}

void sub_190B20144()
{
  sub_190B62B54();
}

void sub_190B2015C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_190B630B4();
  if (!v1)
    *a1 = v3;
}

void sub_190B20184()
{
  sub_190B62DC0();
}

void sub_190B2019C(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v3;

  sub_190B636C8();
  if (!v1)
    *a1 = v3;
}

uint64_t UUID.write(to:)()
{
  char v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v9 = sub_190BE4808();
  v10 = v0;
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  sub_190B1F838((uint64_t)&v9, (uint64_t)&v18);
  sub_190BE4724();
  return OUTLINED_FUNCTION_3_6();
}

uint64_t sub_190B202CC()
{
  return UUID.write(to:)();
}

void sub_190B202E0(uint64_t a1)
{
  sub_190B62F6C(a1);
}

unint64_t sub_190B202F4()
{
  unint64_t result;

  result = qword_1EE1FF5F8;
  if (!qword_1EE1FF5F8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE1FF5F8);
  }
  return result;
}

uint64_t sub_190B20348(uint64_t a1)
{
  uint64_t v2;

  sub_190B20384();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_190B20384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1FF600)
  {
    sub_190B202F4();
    v0 = sub_190BE59A8();
    if (!v1)
      atomic_store(v0, &qword_1EE1FF600);
  }
}

void sub_190B203D8()
{
  __asm { BR              X11 }
}

_QWORD *sub_190B20438@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_190B20784((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

_QWORD *sub_190B20678(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

char *sub_190B206D8(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_190BE446C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_190BE4484();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_190BE4478();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

_QWORD *sub_190B20784(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

_QWORD *sub_190B207C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_190B20678((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_190B2091C, (uint64_t)v5, a1, a2);
}

uint64_t sub_190B20810(uint64_t result)
{
  char v1;

  if (result)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5C60();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_190B20890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_190B207C8(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

_QWORD *sub_190B208C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_190B20890(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_190B208DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_190B20810(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_190B2091C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_190B208DC(a1, a2);
}

void sub_190B20938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190ACBAD4(a1, a2, a3, (void (*)(void))sub_190AEABD0);
}

uint64_t sub_190B20944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_190AEABD0();
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v6;
}

void sub_190B20998(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_190B13714(a1);
    if ((v2 & 1) != 0)
      OUTLINED_FUNCTION_2_13();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t SingletonPool.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t SingletonPool.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for SingletonPool()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingletonPool.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void **initializeBufferWithCopyOfBuffer for ContainerLock(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for ContainerLock(id *a1)
{

}

void **assignWithCopy for ContainerLock(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for ContainerLock(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerLock(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContainerLock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_190B20B64(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_190B20B7C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ContainerLock()
{
  return &type metadata for ContainerLock;
}

uint64_t sub_190B20BB0@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *);

  v25 = a5;
  v26 = a4;
  v27 = a2;
  v28 = a1;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v14) == 1)
    return __swift_storeEnumTagSinglePayload(a6, 1, 1, v26);
  v26 = a3;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v26);
  return result;
}

uint64_t static PromiseError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 != 1)
      __asm { BR              X9 }
    if (v7 == 1)
    {
      if (v3 == v6 && v2 == v5)
        v9 = 1;
      else
        v9 = OUTLINED_FUNCTION_59_1();
      sub_190B20F30(v6, v5, 1u);
      sub_190B20F30(v3, v2, 1u);
      sub_190B20F48(v3, v2, 1u);
      v11 = v6;
      v12 = v5;
      v13 = 1;
LABEL_21:
      sub_190B20F48(v11, v12, v13);
      return v9 & 1;
    }
  }
  else if (!*(_BYTE *)(a2 + 16))
  {
    if (v3 == v6 && v2 == v5)
      v9 = 1;
    else
      v9 = OUTLINED_FUNCTION_59_1();
    sub_190B20F30(v6, v5, 0);
    sub_190B20F30(v3, v2, 0);
    sub_190B20F48(v3, v2, 0);
    v11 = v6;
    v12 = v5;
    v13 = 0;
    goto LABEL_21;
  }
  sub_190B20F30(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
  sub_190B20F30(v3, v2, v4);
  sub_190B20F48(v3, v2, v4);
  sub_190B20F48(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

uint64_t sub_190B20F30(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return result;
}

uint64_t sub_190B20F48(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

void Promise.__allocating_init(error:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_24();
  v0 = OUTLINED_FUNCTION_117();
  Promise.init(error:)(v0, v1, v2, v3);
  OUTLINED_FUNCTION_0();
}

void sub_190B20F94(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  sub_190B21094(a1, a2, &qword_1ED032C20, MEMORY[0x1E0DEE9C0] + 8, (uint64_t)j__OUTLINED_FUNCTION_71_2, (uint64_t)sub_190B285AC);
}

void sub_190B20FBC(void (*a1)(uint64_t (*)(uint64_t *a1), uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  OUTLINED_FUNCTION_15_7();
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v4);
  v6 = v5;
  sub_190ACF6F0(0, &qword_1EE1FE290, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  v7 = OUTLINED_FUNCTION_24();
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + 40) = 0;
  *(_QWORD *)(v7 + 48) = 0;
  *(_QWORD *)(v7 + 32) = v8;
  *(_BYTE *)(v7 + 56) = -1;
  *(_QWORD *)(v7 + 16) = v6;
  *(_BYTE *)(v7 + 24) = 0;
  OUTLINED_FUNCTION_49_2(v7);
  a1(sub_190B28A80, v2, sub_190B28A88, v2);
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_2_4();
}

void sub_190B21070(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  sub_190B21094(a1, a2, &qword_1ED031E00, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t)sub_190B289C0, (uint64_t)sub_190B289C8);
}

void sub_190B21094(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v11 = v6;
  OUTLINED_FUNCTION_15_7();
  v13 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v13);
  v15 = v14;
  sub_190ACF6F0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  v16 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v16 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v16 + 40) = 0;
  *(_BYTE *)(v16 + 48) = -1;
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = 0;
  OUTLINED_FUNCTION_49_2(v16);
  a1(a5, v11, a6, v11);
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_97_1();
}

uint64_t sub_190B2115C(uint64_t a1, uint64_t a2)
{
  return sub_190B2118C(a1, a2, (uint64_t (*)(void))sub_190B2B89C);
}

uint64_t sub_190B21168(uint64_t a1, uint64_t a2)
{
  return sub_190B2118C(a1, a2, (uint64_t (*)(void))sub_190B2B8E8);
}

uint64_t sub_190B21174(uint64_t a1, uint64_t a2)
{
  return sub_190B2118C(a1, a2, (uint64_t (*)(void))sub_190B2B8C0);
}

uint64_t sub_190B21180(uint64_t a1, uint64_t a2)
{
  return sub_190B2118C(a1, a2, (uint64_t (*)(void))sub_190B2B91C);
}

uint64_t sub_190B2118C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))a3();
  OUTLINED_FUNCTION_35_1(v3);
  return OUTLINED_FUNCTION_69();
}

uint64_t sub_190B211B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(void);

  v4 = (void (*)(void))sub_190AB2B28(a1, a2, a3, a4);
  v4();
  return swift_release();
}

uint64_t Promise.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  return sub_190B21650(a1, a2, (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B27FF8);
}

{
  return sub_190B21650(a1, a2, (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B2800C);
}

uint64_t sub_190B211E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void (*)(uint64_t a1), _QWORD *), uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a7;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = a4;
  swift_retain();
  swift_retain();
  a5(sub_190B290DC, v13);
  return swift_release();
}

void sub_190B2127C(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  v10 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Result(0, v15, v13, v14);
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v21 - v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v21 - v17, a1, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = (void *)*v18;
    a4(*v18);

  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v12, v18, a6);
    a2(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a6);
  }
}

void Promise.__allocating_init(_:scheduleOn:)()
{
  void (*v0)(void *);
  void *v1;
  uint64_t v2;
  _QWORD v3[4];

  OUTLINED_FUNCTION_52_0();
  v3[2] = v2;
  Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))sub_190B28004, (uint64_t)v3);
  v0(v1);

  OUTLINED_FUNCTION_97_1();
}

void sub_190B21400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v13;
  _QWORD *v14;

  v13 = *MEMORY[0x1E0DEEDD8] & *a7;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = *(_QWORD *)(v13 + 80);
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a5;
  v14[6] = a6;
  v14[7] = a3;
  v14[8] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BDF7D0(sub_190B290C4, (uint64_t)v14);
}

void sub_190B214BC(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void), uint64_t a5, void (*a6)(id), uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  _QWORD v25[2];
  void (*v26)(char *);
  id v27;

  v25[1] = a3;
  v26 = a2;
  v12 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Result(0, v17, v15, v16);
  MEMORY[0x1E0C80A78](v18);
  v20 = (id *)((char *)v25 - v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)v25 - v19, a1, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = *v20;
    v22 = v27;
    v23 = v27;
    sub_190ABC730();
    if (swift_dynamicCast())
    {

      a4();
      v24 = v27;
    }
    else
    {

      a6(v22);
      v24 = v22;
    }

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v12 + 32))(v14, v20, a8);
    v26(v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a8);
  }
}

uint64_t sub_190B21650(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[6];

  v7[2] = *(_QWORD *)(v3 + 80);
  v7[3] = a1;
  v7[4] = a2;
  Promise.__allocating_init(resolver:)(a3, (uint64_t)v7);
  v5 = v4;
  OUTLINED_FUNCTION_5_0();
  return v5;
}

uint64_t sub_190B21698(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v15;

  v9 = *(_QWORD *)(a7 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  a1(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a7);
}

uint64_t sub_190B21760(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t *a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v6[3] = a6;
  v8 = *a6;
  v9 = sub_190BE54A4();
  v6[4] = v9;
  v6[5] = *(_QWORD *)(v9 - 8);
  v6[6] = swift_task_alloc();
  v10 = *(_QWORD *)(v8 + 80);
  v6[7] = v10;
  v6[8] = *(_QWORD *)(v10 - 8);
  v11 = swift_task_alloc();
  v6[9] = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v6[10] = v12;
  *v12 = v6;
  v12[1] = sub_190B21820;
  return v14(v11);
}

uint64_t sub_190B21820()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190B21884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v6 = *(_QWORD *)(v4 + 64);
  v5 = *(_QWORD *)(v4 + 72);
  v7 = *(_QWORD *)(v4 + 56);
  sub_190ADA10C(v5, a2, a3, a4);
  OUTLINED_FUNCTION_35_1(v8);
  OUTLINED_FUNCTION_2();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  OUTLINED_FUNCTION_131_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_190B218F0()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v1 = *(void **)(v0 + 88);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_89();
  v3 = OUTLINED_FUNCTION_123();
  v4 = *(void **)(v0 + 88);
  if ((v3 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 32);

    v12 = (uint64_t (*)(void))sub_190AB2B28(v8, v9, v10, v11);
    OUTLINED_FUNCTION_35_1(v12);
    OUTLINED_FUNCTION_2();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v13 = *(void **)(v0 + 16);
  }
  else
  {

    sub_190ADF6CC(v4, v14, v15, v16);
    OUTLINED_FUNCTION_35_1(v17);
    OUTLINED_FUNCTION_2();
    v13 = v4;
  }

  OUTLINED_FUNCTION_131_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B219C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_116();
  if (__swift_getEnumTagSinglePayload(v3, 1, v6) == 1)
  {
    sub_190AB4BC4(v3);
  }
  else
  {
    sub_190BE5504();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_190BE5474();
    swift_unknownObjectRelease();
  }
  v7 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_190B21AF4(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;

  a2();
  v2 = qword_1ED035648;
  swift_retain();
  if (v2 != -1)
    swift_once();
  sub_190B21CA8();
  sub_190B21CD8();
  sub_190B21D08();
  sub_190ADA1C8();
  v4 = v3;
  swift_release();
  swift_release();
  swift_release();
  v5 = swift_release();
  v4(v5);
  swift_release();
  return swift_release();
}

Swift::Void (__swiftcall *sub_190B21CA8())()
{
  swift_retain();
  return j___s13TeaFoundation15DeferredPromiseC6cancelyyF;
}

uint64_t (*sub_190B21CD8())()
{
  swift_retain();
  return j___s13TeaFoundation15DeferredPromiseC6rejectyys5Error_pF;
}

uint64_t (*sub_190B21D08())()
{
  swift_retain();
  return j___s13TeaFoundation15DeferredPromiseC7resolveyyxF;
}

void sub_190B21D38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  void (*v16)(uint64_t);
  uint64_t v17;

  v10 = a2 + 16;
  swift_beginAccess();
  v11 = MEMORY[0x1940170E4](v10);
  if (v11)
  {
    a4(a1, v11);
    v14 = qword_1ED035648;
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_190B21F84(a3, a6);
    sub_190B21FE0(a3, a6);
    sub_190B2203C(a3, a6);
    sub_190ADA1C8();
    v16 = v15;
    swift_release();
    swift_release();
    swift_release();
    v17 = swift_release();
    v16(v17);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_190B2850C();
    v12 = (void *)swift_allocError();
    *(_OWORD *)v13 = xmmword_190BE8F70;
    *(_BYTE *)(v13 + 16) = 2;
    DeferredPromise.reject(_:)();

  }
}

uint64_t (*sub_190B21F84(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  return sub_190B291E0;
}

uint64_t (*sub_190B21FE0(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  return sub_190AE0440;
}

void (*sub_190B2203C(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  return sub_190ADF7D0;
}

void sub_190B22098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190ADCCB8(a1, a2, a3, (uint64_t)sub_190B28994, (uint64_t (*)(uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_190B2DA78);
}

void sub_190B220AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190ADCCB8(a1, a2, a3, (uint64_t)nullsub_1, (uint64_t (*)(uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_190B2E55C);
}

void sub_190B220C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190ADCCB8(a1, a2, a3, (uint64_t)sub_190B289E8, (uint64_t (*)(uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_190B2EAD4);
}

uint64_t sub_190B220D4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t result;

  v5 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1940170E4](v5);
  if (result)
  {
    a3(a1, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_190B22144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190AE3884(a1, a2, a3, (uint64_t (*)(void))sub_190B2215C);
}

void sub_190B22150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190AE3884(a1, a2, a3, (uint64_t (*)(void))sub_190B22264);
}

void (*sub_190B2215C(void *a1, void (*a2)(), uint64_t a3))()
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  void *v11;
  char v12;
  char v13;
  int v14;
  void (*v15)();

  v7 = *(_QWORD *)(v3 + 16);
  UnfairLock.lock()();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v9 = a1;
  swift_retain();
  sub_190ADCEB8();
  v11 = v10;
  v13 = v12;
  v14 = ~v12;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  if (!v14)
    return (void (*)())nullsub_1;
  sub_190ADCF0C(v11, v13);
  v15 = sub_190ADADE0(v9, a2, a3);
  sub_190AB7D2C(v11, v13);
  sub_190AB7D2C(v11, v13);
  return v15;
}

void (*sub_190B22264(void *a1, void (*a2)(), uint64_t a3))()
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  void *v11;
  char v12;
  char v13;
  int v14;
  void (*v15)();

  v7 = *(_QWORD *)(v3 + 16);
  UnfairLock.lock()();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v9 = a1;
  swift_retain();
  sub_190BCB298();
  v11 = v10;
  v13 = v12;
  v14 = ~v12;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  if (!v14)
    return (void (*)())nullsub_1;
  sub_190ACACF0(v11, v13);
  v15 = sub_190ADADE0(v9, a2, a3);
  sub_190B28A08(v11, v13);
  sub_190B28A08(v11, v13);
  return v15;
}

void Promise.cancelled(on:closure:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190AE3884(a1, a2, a3, (uint64_t (*)(void))sub_190B6D39C);
}

uint64_t sub_190B22378(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v8 = *a2;
  v11[2] = a5;
  v12 = *(_QWORD *)(*(_QWORD *)(v8 + 80) + 16);
  v13 = a6;
  v14 = a3;
  v15 = a4;
  v9 = sub_190ABC730();
  *(_QWORD *)&v16 = sub_190B421A4((uint64_t)sub_190B28FE0, (uint64_t)v11, a5, v12, v9, a6, MEMORY[0x1E0DEDB38], (uint64_t)&v16);
  DeferredPromise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

#error "190B224E8: call analysis failed (funcsize=13)"

uint64_t (*sub_190B224F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290FC;
}

uint64_t (*sub_190B22564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290F0;
}

void sub_190B225D4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v14 = *a3;
  v15 = a2 + 16;
  swift_beginAccess();
  v16 = MEMORY[0x1940170E4](v15);
  if (v16)
  {
    v28 = a3;
    v17 = MEMORY[0x1E0C80A78](v16);
    v21[2] = a6;
    v22 = *(_QWORD *)(*(_QWORD *)(v14 + 80) + 16);
    v23 = a7;
    v24 = a8;
    v25 = a4;
    v26 = a5;
    v27 = v17;
    v18 = sub_190ABC730();
    v29 = sub_190B421A4((uint64_t)sub_190B28FB4, (uint64_t)v21, a6, v22, v18, a8, MEMORY[0x1E0DEDB38], (uint64_t)&v29);
    DeferredPromise.resolve(_:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_190B2850C();
    v19 = (void *)swift_allocError();
    *(_OWORD *)v20 = xmmword_190BE8F70;
    *(_BYTE *)(v20 + 16) = 2;
    DeferredPromise.reject(_:)();

  }
}

void Promise<A>.flatMap<A>(on:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(uint64_t);
  void (*v37)(uint64_t);
  uint64_t v38;

  OUTLINED_FUNCTION_48_1();
  OUTLINED_FUNCTION_87_1();
  v16 = *v12;
  swift_getAssociatedTypeWitness();
  v17 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_12_4(v17, v18, v19, v20);
  v21 = swift_retain();
  OUTLINED_FUNCTION_13_6(v21);
  v23 = v22;
  v24 = *(_QWORD *)(v16 + 80);
  OUTLINED_FUNCTION_55();
  sub_190B228F8(v25, v26, v27, v28, v29);
  OUTLINED_FUNCTION_55();
  sub_190B22970(v30, v31, v32, v33, v34);
  v35 = (_QWORD *)OUTLINED_FUNCTION_24();
  v35[2] = v24;
  v35[3] = v15;
  v35[4] = v14;
  v35[5] = v13;
  v35[6] = v23;
  v35[7] = a11;
  v35[8] = a12;
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_128();
  sub_190ADA1C8();
  v37 = v36;
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_19();
  v38 = OUTLINED_FUNCTION_51();
  v37(v38);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v23 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_6_7();
  }
  else
  {
    __break(1u);
  }
}

void (*sub_190B228F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_retain();
  return sub_190B29100;
}

void (*sub_190B22970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_retain();
  return sub_190B290F4;
}

void Promise<A>.flatMap<A, B>(on:disposeOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(uint64_t);
  void (*v43)(uint64_t);
  uint64_t v44;

  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_80_1();
  v19 = *v14;
  OUTLINED_FUNCTION_114();
  v20 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_12_4(v20, v21, v22, v23);
  v24 = OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_13_6(v24);
  v26 = v25;
  v27 = *(_QWORD *)(v19 + 80);
  OUTLINED_FUNCTION_28_4();
  sub_190B22B40(v28, v29, v30, v31, v32, v33);
  OUTLINED_FUNCTION_28_4();
  sub_190B22BC4(v34, v35, v36, v37, v38, v39);
  v40 = OUTLINED_FUNCTION_24();
  swift_unknownObjectWeakInit();
  v41 = (_QWORD *)OUTLINED_FUNCTION_24();
  v41[2] = v27;
  v41[3] = v18;
  v41[4] = v17;
  v41[5] = v16;
  v41[6] = v15;
  v41[7] = v40;
  v41[8] = v26;
  v41[9] = a13;
  v41[10] = a14;
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1();
  sub_190ADA1C8();
  v43 = v42;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_19();
  v44 = OUTLINED_FUNCTION_51();
  v43(v44);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v26 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_18_1();
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_190B22B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v12[7] = a1;
  swift_retain();
  return sub_190B29220;
}

uint64_t (*sub_190B22BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v12[7] = a1;
  swift_retain();
  return sub_190B290EC;
}

void Promise<A>.compactMap<A>(on:closure:)()
{
  sub_190AB3894();
  OUTLINED_FUNCTION_40_0();
}

void (*sub_190B22C84(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_190B28F74;
}

void (*sub_190B22CE8(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_190B06E60;
}

uint64_t sub_190B22D4C()
{
  sub_190BE5210();
  DeferredPromise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

#error "190B22E80: call analysis failed (funcsize=13)"

void sub_190B22E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void (*a31)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v31;
  void (*v32)(void);
  void (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(uint64_t);
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_82_1();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v54 = v38;
  v55 = v39;
  v40 = *v31;
  v41 = sub_190BE5438();
  OUTLINED_FUNCTION_12_4(v41, v42, v43, v44);
  v45 = OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_13_6(v45);
  v47 = v46;
  v48 = *(_QWORD *)(v40 + 80);
  v33();
  a31(v47, v48, v37, v35);
  v49 = OUTLINED_FUNCTION_24();
  swift_unknownObjectWeakInit();
  v50 = (_QWORD *)OUTLINED_FUNCTION_24();
  v50[2] = v48;
  v50[3] = v37;
  v50[4] = v35;
  v50[5] = v49;
  v50[6] = v47;
  v50[7] = v54;
  v50[8] = v55;
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_102_0();
  v52 = v51;
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_16_4();
  v53 = OUTLINED_FUNCTION_19();
  v52(v53);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v47 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_18_1();
  }
  else
  {
    __break(1u);
  }
}

void (*sub_190B22FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B28F58;
}

void (*sub_190B2304C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B28F3C;
}

void sub_190B230BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1940170E4](v2);
  if (v3)
  {
    MEMORY[0x1E0C80A78](v3);
    sub_190BE5210();
    DeferredPromise.resolve(_:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_190B2850C();
    v4 = (void *)swift_allocError();
    *(_OWORD *)v5 = xmmword_190BE8F70;
    *(_BYTE *)(v5 + 16) = 2;
    DeferredPromise.reject(_:)();

  }
}

#error "190B232D0: call analysis failed (funcsize=11)"

uint64_t (*sub_190B232DC(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_190B29104;
}

uint64_t (*sub_190B23340(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_190B290F8;
}

uint64_t sub_190B233A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190BE5264();
  DeferredPromise.resolve(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

#error "190B23508: call analysis failed (funcsize=10)"

uint64_t (*sub_190B23514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290FC;
}

uint64_t (*sub_190B23584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290F0;
}

void sub_190B235F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v24[4];

  v24[3] = a1;
  v13 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v17 + 16;
  swift_beginAccess();
  v19 = MEMORY[0x1940170E4](v18);
  if (v19)
  {
    v24[1] = v24;
    v24[2] = a3;
    v20 = MEMORY[0x1E0C80A78](v19);
    v24[-8] = a7;
    v24[-7] = v13;
    v24[-6] = a8;
    v24[-5] = v21;
    v24[-4] = a5;
    v24[-3] = a6;
    v24[-2] = v20;
    sub_190BE5264();
    DeferredPromise.resolve(_:)();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    sub_190B2850C();
    v22 = (void *)swift_allocError();
    *(_OWORD *)v23 = xmmword_190BE8F70;
    *(_BYTE *)(v23 + 16) = 2;
    DeferredPromise.reject(_:)();

  }
}

#error "190B23838: call analysis failed (funcsize=10)"

void sub_190B23844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(void),uint64_t (*a22)(uint64_t),uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  void (*v57)(uint64_t);
  uint64_t v58;
  _QWORD v59[3];
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_72();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v66 = v31;
  v67 = v32;
  v59[1] = v33;
  v68 = v34;
  v69 = a24;
  v64 = a23;
  v60 = a22;
  v61 = v35;
  v36 = *(_QWORD *)(v29 - 8);
  v37 = *(_QWORD *)(v36 + 64);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)v59 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for DeferredPromise(0, v41, v39, v40);
  v65 = *(_QWORD *)(v24 + 16);
  v43 = OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_13_6(v43);
  OUTLINED_FUNCTION_95_1();
  v59[0] = v26;
  v44 = a21();
  v62 = v45;
  v63 = v44;
  v46 = OUTLINED_FUNCTION_89();
  v47 = v60(v46);
  v59[2] = v48;
  v60 = (uint64_t (*)(uint64_t))v47;
  v49 = OUTLINED_FUNCTION_24();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_91((uint64_t)v38, v61, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
  v50 = (*(unsigned __int8 *)(v36 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v51 = (v37 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v24;
  v52[3] = v30;
  v53 = v59[0];
  v52[4] = v28;
  v52[5] = v53;
  v52[6] = v49;
  v52[7] = v42;
  OUTLINED_FUNCTION_91((uint64_t)v52 + v50, (uint64_t)v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32));
  v54 = (_QWORD *)((char *)v52 + v51);
  v55 = v67;
  *v54 = v66;
  v54[1] = v55;
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_104();
  v57 = v56;
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_9_2();
  v58 = OUTLINED_FUNCTION_19();
  v57(v58);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v42 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_0_0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_190B23A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290FC;
}

uint64_t (*sub_190B23A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290F0;
}

void sub_190B23AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v30 = a6;
  v31 = a1;
  v14 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](a1);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v29 - v19;
  v22 = v21 + 16;
  swift_beginAccess();
  v23 = MEMORY[0x1940170E4](v22);
  if (v23)
  {
    v24 = v23;
    v29[1] = a3;
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a4, v14);
    MEMORY[0x1E0C80A78](v25);
    v29[-8] = a7;
    v29[-7] = v14;
    v29[-6] = a8;
    v29[-5] = a9;
    v26 = v30;
    v29[-4] = a5;
    v29[-3] = v26;
    v29[-2] = v24;
    sub_190BE5258();
    DeferredPromise.resolve(_:)();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  else
  {
    sub_190B2850C();
    v27 = (void *)swift_allocError();
    *(_OWORD *)v28 = xmmword_190BE8F70;
    *(_BYTE *)(v28 + 16) = 2;
    DeferredPromise.reject(_:)();

  }
}

void Promise<A>.unique<A>(on:uniqueBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(uint64_t);
  void (*v36)(uint64_t);
  uint64_t v37;

  OUTLINED_FUNCTION_48_1();
  OUTLINED_FUNCTION_87_1();
  v16 = *(_QWORD *)(*(_QWORD *)v12 + 80);
  OUTLINED_FUNCTION_114();
  v17 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_12_4(v17, v18, v19, v20);
  v21 = OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_13_6(v21);
  v23 = v22;
  OUTLINED_FUNCTION_55();
  sub_190B23E4C(v24, v25, v26, v27, v28);
  OUTLINED_FUNCTION_55();
  sub_190B23EC4(v29, v30, v31, v32, v33);
  v34 = (_QWORD *)OUTLINED_FUNCTION_24();
  v34[2] = v16;
  v34[3] = v15;
  v34[4] = v14;
  v34[5] = v13;
  v34[6] = v23;
  v34[7] = a11;
  v34[8] = a12;
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_128();
  sub_190ADA1C8();
  v36 = v35;
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_19();
  v37 = OUTLINED_FUNCTION_51();
  v36(v37);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v23 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_6_7();
  }
  else
  {
    __break(1u);
  }
}

void (*sub_190B23E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_retain();
  return sub_190B28EC0;
}

void (*sub_190B23EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_retain();
  return sub_190B28EA4;
}

uint64_t sub_190B23F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  a9(a3, a4, a5, a6, a7, a8);
  DeferredPromise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

void Promise<A>.unique<A, B>(on:disposeOn:uniqueBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(uint64_t);
  void (*v42)(uint64_t);
  uint64_t v43;

  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_80_1();
  v19 = *(_QWORD *)(*(_QWORD *)v14 + 80);
  swift_getAssociatedTypeWitness();
  v20 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_12_4(v20, v21, v22, v23);
  v24 = OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_13_6(v24);
  v26 = v25;
  OUTLINED_FUNCTION_28_4();
  sub_190B24188(v27, v28, v29, v30, v31, v32);
  OUTLINED_FUNCTION_28_4();
  sub_190B2420C(v33, v34, v35, v36, v37, v38);
  v39 = OUTLINED_FUNCTION_24();
  swift_unknownObjectWeakInit();
  v40 = (_QWORD *)OUTLINED_FUNCTION_24();
  v40[2] = v19;
  v40[3] = v18;
  v40[4] = v17;
  v40[5] = v16;
  v40[6] = v15;
  v40[7] = v39;
  v40[8] = v26;
  v40[9] = a13;
  v40[10] = a14;
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_8();
  sub_190ADA1C8();
  v42 = v41;
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_51();
  v43 = OUTLINED_FUNCTION_38_0();
  v42(v43);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v26 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_18_1();
  }
  else
  {
    __break(1u);
  }
}

void (*sub_190B24188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v12[7] = a1;
  swift_retain();
  return sub_190B28E70;
}

void (*sub_190B2420C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v12[7] = a1;
  swift_retain();
  return sub_190B28E54;
}

void sub_190B24290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  void *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_72();
  v24 = v23 + 16;
  OUTLINED_FUNCTION_7();
  if (MEMORY[0x1940170E4](v24))
  {
    v25 = MEMORY[0x1E0C80A78](a23);
    v26(v25);
    DeferredPromise.resolve(_:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_130();
  }
  else
  {
    sub_190B2850C();
    v27 = (void *)swift_allocError();
    *(_OWORD *)v28 = xmmword_190BE8F70;
    *(_BYTE *)(v28 + 16) = 2;
    OUTLINED_FUNCTION_110_0();

  }
  OUTLINED_FUNCTION_0_0();
}

void Promise<A>.filter(on:closure:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t);
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_42_2();
  v2 = v1;
  v4 = v3;
  v18 = v5;
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_getAssociatedTypeWitness();
  v7 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_12_4(v7, v8, v9, v10);
  v11 = OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_13_6(v11);
  v13 = v12;
  sub_190B24548(v12, v6, v2);
  sub_190B245AC(v13, v6, v2);
  v14 = (_QWORD *)OUTLINED_FUNCTION_24();
  v14[2] = v6;
  v14[3] = v2;
  v14[4] = v13;
  v14[5] = v18;
  v14[6] = v4;
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_102_0();
  v16 = v15;
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_9_2();
  v17 = OUTLINED_FUNCTION_16_4();
  v16(v17);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v13 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_9_7();
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_190B24548(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_190B29104;
}

uint64_t (*sub_190B245AC(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_190B290F8;
}

uint64_t sub_190B24610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4[1] = sub_190BE524C();
  DeferredPromise.resolve(_:)();
  return swift_bridgeObjectRelease();
}

void Promise<A>.filter<A>(on:disposeOn:closure:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t);
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_48_1();
  v2 = v1;
  v4 = v3;
  v20 = v5;
  v21 = v6;
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  OUTLINED_FUNCTION_114();
  v8 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_12_4(v8, v9, v10, v11);
  v12 = OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_13_6(v12);
  v14 = v13;
  sub_190B248A8(v13, v7, v4, v2);
  sub_190B24918(v14, v7, v4, v2);
  v15 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_70_1();
  v16 = (_QWORD *)OUTLINED_FUNCTION_24();
  v16[2] = v7;
  v16[3] = v4;
  v16[4] = v2;
  v16[5] = v15;
  v16[6] = v14;
  v16[7] = v20;
  v16[8] = v21;
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_102_0();
  v18 = v17;
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_51();
  v19 = OUTLINED_FUNCTION_19();
  v18(v19);
  OUTLINED_FUNCTION_7();
  if (*(_QWORD *)(v14 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_6_7();
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_190B248A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290FC;
}

uint64_t (*sub_190B24918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  return sub_190B290F0;
}

void sub_190B24988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;

  v14 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v17 + 16;
  swift_beginAccess();
  v19 = MEMORY[0x1940170E4](v18);
  if (v19)
  {
    v20 = v19;
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a6);
    MEMORY[0x1E0C80A78](v21);
    *(&v24 - 6) = a6;
    *(&v24 - 5) = a7;
    *(&v24 - 4) = a8;
    *(&v24 - 3) = a4;
    *(&v24 - 2) = a5;
    *(&v24 - 1) = v20;
    v24 = sub_190BE524C();
    DeferredPromise.resolve(_:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_190B2850C();
    v22 = (void *)swift_allocError();
    *(_OWORD *)v23 = xmmword_190BE8F70;
    *(_BYTE *)(v23 + 16) = 2;
    DeferredPromise.reject(_:)();

  }
}

void Promise<A>.flatten(on:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_52_0();
  v4 = *v1;
  v5 = (_QWORD *)OUTLINED_FUNCTION_24();
  v5[2] = *(_QWORD *)(v4 + 80);
  v5[3] = v2;
  v5[4] = v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Promise<A>.flatMap<A>(on:closure:)(v3, (uint64_t)sub_190B28404, (uint64_t)v5, AssociatedTypeWitness, v2, v0, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_190B24C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t Promise.dictionaryOfPromises<A, B, C>(keys:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_52_0();
  v0 = sub_190BE59A8();
  type metadata accessor for Promise(0, v0, v1, v2);
  sub_190BE4D6C();
  sub_190BE4E98();
  sub_190BE5258();
  return v4;
}

uint64_t sub_190B24D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *);
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[6];

  v25[2] = a1;
  v25[0] = a5;
  v25[1] = a3;
  v7 = *(_QWORD **)(*(_QWORD *)a3 + 80);
  v8 = v7[2];
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = *(void (**)(char *))(v9 + 16);
  v13((char *)v25 - v14);
  ((void (*)(char *, uint64_t, uint64_t))v13)(v12, a2, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a4;
  *((_QWORD *)v16 + 3) = v8;
  v17 = v25[0];
  *((_QWORD *)v16 + 4) = v7[3];
  *((_QWORD *)v16 + 5) = v17;
  *((_QWORD *)v16 + 6) = v7[4];
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], v12, v8);
  v18 = sub_190BE59A8();
  v19 = sub_190ABD678();
  Promise.then<A>(on:closure:)();
  v21 = v20;
  swift_release();

  v25[5] = v21;
  type metadata accessor for Promise(255, v18, v22, v23);
  sub_190BE4E98();
  return sub_190BE4EB0();
}

void delay(until:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD v2[4];

  v2[2] = a1;
  v1 = MEMORY[0x1E0DEE9C0] + 8;
  sub_190ACF6F0(0, (unint64_t *)&qword_1ED032C30, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  OUTLINED_FUNCTION_24();
  sub_190B21094((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190B2843C, (uint64_t)v2, &qword_1ED032C20, v1, (uint64_t)j__OUTLINED_FUNCTION_71_2, (uint64_t)sub_190B285AC);
}

void sub_190B24F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[6];

  OUTLINED_FUNCTION_72();
  v21 = v1;
  v3 = v2;
  v5 = v4;
  v6 = sub_190BE4C40();
  v22 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_0();
  v9 = v8 - v7;
  v20 = sub_190BE4C88();
  v10 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_85();
  v11 = sub_190BE4C4C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_4_0();
  v15 = v14 - v13;
  v16 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v16 + 16) = v5;
  *(_QWORD *)(v16 + 24) = v3;
  sub_190ADCB44(0, (unint64_t *)&qword_1ED035670);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E0DEF540], v11);
  OUTLINED_FUNCTION_1();
  v17 = (void *)sub_190BE5948();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  v18 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v18 + 16) = sub_190AF6F04;
  *(_QWORD *)(v18 + 24) = v16;
  v23[4] = sub_190AF6F0C;
  v23[5] = v18;
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 1107296256;
  v23[2] = sub_190AB3224;
  v23[3] = &block_descriptor_222;
  v19 = _Block_copy(v23);
  sub_190BE4C64();
  sub_190B28BFC();
  sub_190AB4C00(0, &qword_1ED034E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190B14CC4();
  sub_190BE5B70();
  MEMORY[0x194015B84](v21, v0, v9, v19);
  _Block_release(v19);

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v20);
  swift_release();
  OUTLINED_FUNCTION_0_0();
}

void delay<A>(until:queue:value:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_56_1();
  v2 = type metadata accessor for Promise(0, v1, v0, v1);
  OUTLINED_FUNCTION_44_2((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B28444, v3, v2, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_97_1();
}

uint64_t sub_190B2520C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v30 = a6;
  v31 = a5;
  v26 = a1;
  v11 = sub_190BE4C40();
  v29 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190BE4C88();
  v27 = *(_QWORD *)(v14 - 8);
  v28 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a8 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a7, a8);
  v20 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v21 = (char *)swift_allocObject();
  v22 = v26;
  *((_QWORD *)v21 + 2) = a8;
  *((_QWORD *)v21 + 3) = v22;
  *((_QWORD *)v21 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v21[v20], (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a8);
  aBlock[4] = sub_190ADB3DC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_211;
  v23 = _Block_copy(aBlock);
  swift_retain();
  sub_190BE4C64();
  v32 = MEMORY[0x1E0DEE9D8];
  sub_190B28BFC();
  sub_190AB4C00(0, &qword_1ED034E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190B14CC4();
  sub_190BE5B70();
  MEMORY[0x194015B84](v30, v17, v13, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v28);
  return swift_release();
}

void Promise.wait(until:with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  dispatch_semaphore_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_72();
  v32 = v1;
  v30 = v2;
  v35 = v3;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_0();
  v31 = v6 - v5;
  v7 = sub_190BE59A8();
  v28 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_81_0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  v11 = swift_allocBox();
  v29 = v12;
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v4);
  v13 = dispatch_semaphore_create(0);
  v36 = 1;
  v14 = type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_24();
  UnfairLock.init(options:)((int *)&v36);
  v16 = v15;
  v17 = (_QWORD *)OUTLINED_FUNCTION_24();
  v17[2] = v4;
  v17[3] = v16;
  v17[4] = v11;
  OUTLINED_FUNCTION_105_0();
  v33 = v11;
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_89();
  v18 = sub_190ABD678();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_16_4();

  v19 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v19 + 16) = v13;
  v20 = qword_1ED035648;
  v21 = v13;
  if (v20 != -1)
    swift_once();
  v22 = (id)qword_1ED035618;
  sub_190AE3884((uint64_t)v22, (uint64_t)sub_190B2848C, v19, (uint64_t (*)(void))sub_190B2215C);
  swift_release();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_67_1();

  v23 = sub_190BE5954();
  v36 = v16;
  MEMORY[0x1E0C80A78](v23);
  v24 = v29;
  *(&v27 - 2) = v4;
  *(&v27 - 1) = v24;
  Lock.sync<A>(_:)((void (*)(uint64_t))sub_190B284A8, (uint64_t)(&v27 - 4), v14, v7, (uint64_t)&protocol witness table for UnfairLock);
  OUTLINED_FUNCTION_60();

  v25 = v34;
  v26 = v31;
  OUTLINED_FUNCTION_65(v31, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
  {
    OUTLINED_FUNCTION_65(v35, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v4);
    OUTLINED_FUNCTION_65(v35, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
  }
  swift_release();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B2570C()
{
  sub_190BE59A8();
  swift_projectBox();
  sub_190ADBEE0((void (*)(void))sub_190B28D00);
}

uint64_t sub_190B2578C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_190BE59A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v11 - v8, a2, a3);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(a1, v9, v6);
}

uint64_t sub_190B25854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  swift_beginAccess();
  v4 = sub_190BE59A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void Promise.await()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  dispatch_semaphore_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v6 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v7 = sub_190BE59A8();
  v39 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_81_0();
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v31 - v9;
  v10 = sub_190BE4CAC();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_66_0();
  v11 = sub_190BE4D00();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_85();
  sub_190ADCB44(0, (unint64_t *)&qword_1ED035670);
  v4->isa = (Class)sub_190BE590C();
  (*(void (**)(dispatch_semaphore_t, _QWORD, uint64_t))(v12 + 104))(v4, *MEMORY[0x1E0DEF738], v11);
  v13 = sub_190BE4D24();
  (*(void (**)(dispatch_semaphore_t, uint64_t))(v12 + 8))(v4, v11);
  if ((v13 & 1) != 0)
  {
    v33 = a1;
    v34 = v2;
    v14 = swift_allocBox();
    v36 = v7;
    v7 = v15;
    __swift_storeEnumTagSinglePayload(v15, 1, 1, v6);
    a1 = OUTLINED_FUNCTION_24();
    *(_QWORD *)(a1 + 16) = 0;
    v32 = (void **)(a1 + 16);
    v4 = dispatch_semaphore_create(0);
    v16 = OUTLINED_FUNCTION_24();
    *(_QWORD *)(v16 + 16) = v6;
    *(_QWORD *)(v16 + 24) = v14;
    v35 = v14;
    OUTLINED_FUNCTION_4_2();
    v17 = sub_190ABD678();
    Promise.then<A>(on:closure:)();
    swift_release();

    v18 = qword_1ED035648;
    swift_retain();
    if (v18 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v19 = (id)qword_1ED035618;
  sub_190ADCCB8((uint64_t)v19, (uint64_t)sub_190B28504, a1, (uint64_t)j_nullsub_1, (uint64_t (*)(uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_190ADCD08);
  swift_release();
  OUTLINED_FUNCTION_67_1();

  v20 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v20 + 16) = v4;
  v21 = (void *)qword_1ED035618;
  v22 = v4;
  v23 = v21;
  sub_190AE3884((uint64_t)v23, (uint64_t)sub_190B2910C, v20, (uint64_t (*)(void))sub_190B2215C);
  swift_release();
  swift_release();
  swift_release();

  sub_190BE4C94();
  sub_190BE5954();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v3, v38);
  OUTLINED_FUNCTION_7();
  v24 = v39;
  v25 = (uint64_t)v40;
  v26 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v40, v7, v36);
  if (__swift_getEnumTagSinglePayload(v25, 1, v6) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
    v27 = v32;
    OUTLINED_FUNCTION_7();
    v28 = *v27;
    if (!*v27)
    {
      sub_190B2850C();
      swift_allocError();
      v28 = 0;
      *(_OWORD *)v29 = xmmword_190BE8F80;
      *(_BYTE *)(v29 + 16) = 2;
    }
    v30 = v28;
    swift_willThrow();
    swift_release();
    OUTLINED_FUNCTION_67_1();

  }
  else
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v33, v25, v6);
    swift_release();
    OUTLINED_FUNCTION_67_1();
  }
}

uint64_t sub_190B25CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_190BE59A8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  v9 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v8, a1, a3);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

id sub_190B25D90(void *a1, uint64_t a2)
{
  void *v4;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  return a1;
}

void static Promise.wait<A>(interval:queue:valueProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Promise(0, a4, a3, a4);
  OUTLINED_FUNCTION_44_2((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B28548, v5, v4, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_190B25E5C(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v14 = sub_190BE4C40();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v26 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_190BE4C88();
  v18 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a6;
  *(_QWORD *)(v21 + 24) = a7;
  *(_QWORD *)(v21 + 32) = a8;
  *(double *)(v21 + 40) = a3;
  *(_QWORD *)(v21 + 48) = a1;
  *(_QWORD *)(v21 + 56) = a2;
  aBlock[4] = sub_190B28BF8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_1;
  v22 = _Block_copy(aBlock);
  swift_retain();
  a8;
  swift_retain();
  sub_190BE4C64();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_190B28BFC();
  sub_190AB4C00(0, &qword_1ED034E20, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190B14CC4();
  sub_190BE5B70();
  MEMORY[0x194015BC0](0, v20, v17, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v25);
  return swift_release();
}

uint64_t sub_190B26064(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v17 = sub_190BE4C40();
  v28 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_190BE4C88();
  v26 = *(_QWORD *)(v20 - 8);
  v27 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a9;
  *(_QWORD *)(v23 + 24) = a10;
  *(_QWORD *)(v23 + 32) = a6;
  *(_QWORD *)(v23 + 40) = a7;
  *(_QWORD *)(v23 + 48) = a8;
  *(double *)(v23 + 56) = a3;
  *(_QWORD *)(v23 + 64) = a1;
  *(_QWORD *)(v23 + 72) = a2;
  aBlock[4] = sub_190B28C7C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_198;
  v24 = _Block_copy(aBlock);
  swift_retain();
  a8;
  swift_retain();
  sub_190BE4C64();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_190B28BFC();
  sub_190AB4C00(0, &qword_1ED034E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190B14CC4();
  sub_190BE5B70();
  MEMORY[0x194015BC0](0, v22, v19, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v17);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v27);
  return swift_release();
}

uint64_t sub_190B26274(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t), uint64_t a2, void *a3, uint64_t (*a4)(_QWORD *), uint64_t a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void *v27;
  void *v28;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD *);
  uint64_t v35;
  _QWORD aBlock[6];

  v34 = a4;
  v30 = a3;
  v10 = sub_190BE4C40();
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190BE4C88();
  v31 = *(_QWORD *)(v13 - 8);
  v32 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190BE4CAC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v30 - v22;
  v24 = a1(aBlock, v21);
  if ((aBlock[0] & 1) == 0)
    return v34(v24);
  sub_190BE4CA0();
  MEMORY[0x194014FA8](v20, a6);
  v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v25(v20, v16);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a2;
  v27 = v30;
  *(_QWORD *)(v26 + 32) = v30;
  *(double *)(v26 + 40) = a6;
  *(_QWORD *)(v26 + 48) = v34;
  *(_QWORD *)(v26 + 56) = a5;
  aBlock[4] = sub_190B28BF8;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_186;
  v28 = _Block_copy(aBlock);
  swift_retain();
  v27;
  swift_retain();
  sub_190BE4C64();
  v35 = MEMORY[0x1E0DEE9D8];
  sub_190B28BFC();
  sub_190AB4C00(0, &qword_1ED034E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190B14CC4();
  sub_190BE5B70();
  MEMORY[0x194015B84](v23, v15, v12, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  v25(v23, v16);
  return swift_release();
}

uint64_t sub_190B26528(void (*a1)(_QWORD), uint64_t a2, void *a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v40)(char *, uint64_t);
  char *v41;
  void (*v42)(_QWORD);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *);
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[7];

  v43 = a6;
  v44 = a3;
  v52 = a4;
  v53 = a5;
  v12 = sub_190BE4C40();
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  MEMORY[0x1E0C80A78](v12);
  v49 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190BE4C88();
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x1E0C80A78](v14);
  v46 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_190BE4CAC();
  v16 = *(_QWORD *)(v45 - 8);
  v17 = MEMORY[0x1E0C80A78](v45);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v41 = (char *)&v40 - v20;
  v21 = sub_190BE59A8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v40 - v24;
  v26 = *(_QWORD *)(a7 - 8);
  v27 = MEMORY[0x1E0C80A78](v23);
  v29 = (char *)&v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1;
  a1(v27);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, a7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    sub_190BE4CA0();
    v30 = v41;
    MEMORY[0x194014FA8](v19, a8);
    v40 = *(void (**)(char *, uint64_t))(v16 + 8);
    v31 = v45;
    v40(v19, v45);
    v32 = swift_allocObject();
    v33 = v44;
    *(_QWORD *)(v32 + 16) = v43;
    *(_QWORD *)(v32 + 24) = a7;
    *(_QWORD *)(v32 + 32) = v42;
    *(_QWORD *)(v32 + 40) = a2;
    *(_QWORD *)(v32 + 48) = v33;
    *(double *)(v32 + 56) = a8;
    v34 = v53;
    *(_QWORD *)(v32 + 64) = v52;
    *(_QWORD *)(v32 + 72) = v34;
    aBlock[4] = sub_190B28C7C;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190AB3224;
    aBlock[3] = &block_descriptor_192;
    v35 = _Block_copy(aBlock);
    swift_retain();
    v33;
    swift_retain();
    v36 = v46;
    sub_190BE4C64();
    v54 = MEMORY[0x1E0DEE9D8];
    sub_190B28BFC();
    sub_190AB4C00(0, &qword_1ED034E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_190B14CC4();
    v37 = v49;
    v38 = v51;
    sub_190BE5B70();
    MEMORY[0x194015B84](v30, v36, v37, v35);
    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
    v40(v30, v31);
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v25, a7);
    v52(v29);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, a7);
  }
}

uint64_t static Promise.wait<A>(timeout:interval:queue:valueProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  OUTLINED_FUNCTION_56_1();
  type metadata accessor for Promise(0, v9, v8, v9);
  static Promise.wait<A>(interval:queue:valueProvider:)(v5, v4, a3, a4);
  OUTLINED_FUNCTION_117();
  v10 = sub_190ABD678();
  v11 = Promise.timeout(after:on:message:)();
  OUTLINED_FUNCTION_2();

  return v11;
}

void static Promise.wait(interval:queue:condition:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  OUTLINED_FUNCTION_56_1();
  v7 = v6;
  v8 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = a3;
  OUTLINED_FUNCTION_126(v8, (unint64_t *)&qword_1ED032C30, v9, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  v10 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_24();
  v11 = v4;
  OUTLINED_FUNCTION_1();
  UnfairLock.init(options:)(&v15);
  OUTLINED_FUNCTION_126(v12, &qword_1ED032C20, v13, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  v14 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_31_3(v14, MEMORY[0x1E0DEE9D8]);
  sub_190B25E5C((uint64_t)j__OUTLINED_FUNCTION_71_2, v10, v7, (uint64_t)sub_190B285AC, v10, (uint64_t)sub_190B28574, v8, v11);

  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_97_1();
}

uint64_t sub_190B26A74()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED035648 != -1)
    swift_once();
  v0 = (id)qword_1ED035618;
  sub_190B2BC4C();
  v2 = v1;

  return v2;
}

void Promise.asOptionalWithRecovery()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;

  v1 = *v0;
  v2 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_58_2(v2);
  v3 = OUTLINED_FUNCTION_76_1();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_5_0();

  v4 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v4 + 16) = v1;
  v5 = sub_190ABD678();
  Promise.recover(on:closure:)((uint64_t)v5, (uint64_t)sub_190B28668, v4);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_5_0();

  OUTLINED_FUNCTION_9();
}

void static Promise.wait<A>(for:ignoreInitialValue:satisfying:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_99_1();
  OUTLINED_FUNCTION_73(v1, *(_QWORD *)(v0 + 80), v2, v3);
  OUTLINED_FUNCTION_44_2((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B28698, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_62_0();
}

void sub_190B26BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  v9 = sub_190BE4D00();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190ADCB44(0, (unint64_t *)&qword_1ED035670);
  *v12 = sub_190BE590C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = sub_190BE4D24();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    v14 = swift_allocObject();
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
    *(_QWORD *)(v14 + 16) = v15;
    *(_BYTE *)(swift_allocObject() + 16) = (a5 & 1) == 0;
    if (v15)
    {
      swift_retain();
      sub_190AFCCE8(a7);
      swift_retain();
      swift_retain();
      v16 = v15;
      sub_190BC6B08();
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_190B26D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v13 = *a6;
  v14 = sub_190BE4D00();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190ADCB44(0, (unint64_t *)&qword_1ED035670);
  *v17 = sub_190BE590C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v18 = sub_190BE4D24();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = swift_allocObject();
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
    *(_QWORD *)(v20 + 16) = v21;
    result = swift_allocObject();
    *(_BYTE *)(result + 16) = (a5 & 1) == 0;
    if (v21)
    {
      v22 = result;
      v23 = (_QWORD *)swift_allocObject();
      v23[2] = a9;
      v23[3] = *(_QWORD *)(v13 + 80);
      v23[4] = v22;
      v23[5] = a7;
      v23[6] = a8;
      v24 = v27;
      v23[7] = v20;
      v23[8] = v24;
      v23[9] = a2;
      v25 = v21;
      swift_retain();
      sub_190AFCCE8(a7);
      sub_190ADCB44(0, (unint64_t *)&qword_1ED034910);
      swift_retain();
      swift_retain();
      ObservableProperty.eagerObserve<A>(disposeOn:block:)();
      swift_release();
      swift_release();

      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190B26F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t a9, uint64_t a10)
{
  _BYTE *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[7];
  char v24;
  uint64_t (*v25)();
  _QWORD *v26;

  v16 = (_BYTE *)(a3 + 16);
  swift_beginAccess();
  if (*(_BYTE *)(a3 + 16) == 1)
  {
    if (a4)
    {
      v17 = (_QWORD *)swift_allocObject();
      v17[2] = a9;
      v17[3] = a10;
      v17[4] = a4;
      v17[5] = a5;
      v18 = sub_190B29224;
    }
    else
    {
      v18 = 0;
      v17 = 0;
    }
    v25 = v18;
    v26 = v17;
    MEMORY[0x1E0C80A78](v17);
    v23[2] = a9;
    v23[3] = a10;
    v23[4] = a2;
    sub_190AFCCE8(a4);
    v20 = MEMORY[0x1E0DEAFA0];
    swift_getFunctionTypeMetadata1();
    sub_190BE59A8();
    sub_190B20BB0((void (*)(char *, char *))sub_190B28AD0, (uint64_t)v23, MEMORY[0x1E0DEDCE8], v20, v21, (uint64_t)&v24);
    result = sub_190AB9930((uint64_t)v25);
    if (v24 == 2 || (v24 & 1) != 0)
    {
      swift_beginAccess();
      v22 = *(void **)(a6 + 16);
      *(_QWORD *)(a6 + 16) = 0;

      return a7(a2);
    }
  }
  else
  {
    result = swift_beginAccess();
    *v16 = 1;
  }
  return result;
}

void static Promise.wait(for:ignoreInitialValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  OUTLINED_FUNCTION_124_0(a1, &qword_1EE1FF618, a3, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_2();
  UnfairLock.init(options:)(&v8);
  OUTLINED_FUNCTION_124_0(v5, &qword_1EE1FF620, v6, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  v7 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_31_3(v7, MEMORY[0x1E0DEE9D8]);
  sub_190B26BBC((uint64_t)sub_190B286C8, v4, (uint64_t)sub_190B286D0, v4, 0, a1, (uint64_t)sub_190B05760);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_39_3();
  sub_190B26A74();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_2_4();
}

void static Promise.waitUnwrapped<A>(for:ignoreInitialValue:satisfying:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_99_1();
  OUTLINED_FUNCTION_73(v1, *(_QWORD *)(*(_QWORD *)(v0 + 80) + 16), v2, v3);
  OUTLINED_FUNCTION_44_2((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B286F0, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_62_0();
}

uint64_t sub_190B27254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v13 = *a6;
  v14 = sub_190BE4D00();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190ADCB44(0, (unint64_t *)&qword_1ED035670);
  *v17 = sub_190BE590C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v18 = sub_190BE4D24();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = swift_allocObject();
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
    *(_QWORD *)(v20 + 16) = v21;
    result = swift_allocObject();
    *(_BYTE *)(result + 16) = (a5 & 1) == 0;
    if (v21)
    {
      v22 = result;
      v23 = (_QWORD *)swift_allocObject();
      v23[2] = a9;
      v23[3] = *(_QWORD *)(*(_QWORD *)(v13 + 80) + 16);
      v23[4] = v22;
      v23[5] = a7;
      v23[6] = a8;
      v24 = v27;
      v23[7] = v20;
      v23[8] = v24;
      v23[9] = a2;
      v25 = v21;
      swift_retain();
      sub_190AFCCE8(a7);
      sub_190ADCB44(0, (unint64_t *)&qword_1ED034910);
      swift_retain();
      swift_retain();
      ObservableProperty.eagerObserve<A>(disposeOn:block:)();
      swift_release();
      swift_release();

      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190B2746C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *);
  uint64_t result;
  _QWORD *v24;
  void (*v25)(_BYTE *@<X8>);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *);
  uint64_t v34;
  char v35;
  void (*v36)(_BYTE *@<X8>);
  _QWORD *v37;

  v31 = a8;
  v32 = a6;
  v33 = a7;
  v34 = a2;
  v13 = sub_190BE59A8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  v18 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(_BYTE *)(a3 + 16) == 1)
  {
    v21 = v18;
    v22 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v34, v13);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, a10) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
    else
    {
      v34 = v21;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v20, v17, a10);
      if (a4)
      {
        v24 = (_QWORD *)swift_allocObject();
        v24[2] = a9;
        v24[3] = a10;
        v24[4] = a4;
        v24[5] = a5;
        v25 = sub_190B28AFC;
      }
      else
      {
        v25 = 0;
        v24 = 0;
      }
      v36 = v25;
      v37 = v24;
      MEMORY[0x1E0C80A78](v24);
      *(&v31 - 4) = a9;
      *(&v31 - 3) = a10;
      *(&v31 - 2) = (uint64_t)v20;
      sub_190AFCCE8(v26);
      v27 = MEMORY[0x1E0DEAFA0];
      swift_getFunctionTypeMetadata1();
      sub_190BE59A8();
      sub_190B20BB0((void (*)(char *, char *))sub_190B28AD0, (uint64_t)(&v31 - 6), MEMORY[0x1E0DEDCE8], v27, v28, (uint64_t)&v35);
      sub_190AB9930((uint64_t)v36);
      if (v35 == 2 || (v35 & 1) != 0)
      {
        v29 = (void **)(v32 + 16);
        swift_beginAccess();
        v30 = *v29;
        *v29 = 0;

        v22(v20);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v20, a10);
    }
  }
  else
  {
    result = swift_beginAccess();
    *(_BYTE *)(a3 + 16) = 1;
  }
  return result;
}

void Promise.wait<A>(for:ignoreInitialValue:satisfying:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_72_0();
  v4 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = v2;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_122();
  v5 = OUTLINED_FUNCTION_103_1();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_38_0();

  OUTLINED_FUNCTION_26();
}

uint64_t sub_190B27794(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Promise(0, *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a2 + 8) + 80), a3, a4);
  swift_getAtKeyPath();
  static Promise.wait<A>(for:ignoreInitialValue:satisfying:)();
  v5 = v4;
  swift_release();
  return v5;
}

void Promise.waitUnwrapped<A>(for:ignoreInitialValue:satisfying:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_72_0();
  v4 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = v2;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_122();
  v5 = OUTLINED_FUNCTION_103_1();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_38_0();

  OUTLINED_FUNCTION_26();
}

uint64_t sub_190B278D8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Promise(0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a2 + 8) + 80) + 16), a3, a4);
  swift_getAtKeyPath();
  static Promise.waitUnwrapped<A>(for:ignoreInitialValue:satisfying:)();
  v5 = v4;
  swift_release();
  return v5;
}

void Promise.as<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v4 = *v2;
  v5 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v4 + 80);
  *(_QWORD *)(v5 + 24) = a2;
  v6 = OUTLINED_FUNCTION_103_1();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_9_2();

  OUTLINED_FUNCTION_4();
}

void sub_190B279F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v7[6];

  type metadata accessor for Promise(0, a3, a3, a4);
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B28AA8, (uint64_t)v7);
}

void sub_190B27A5C(void (*a1)(char *), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *);
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  unint64_t v31;

  v28 = a4;
  v29 = a3;
  v27 = a1;
  v10 = sub_190BE59A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v26 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v17, a5, a6);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, a7);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v14, a7);
    v27(v20);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, a7);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, a7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_190BE5C54();
    sub_190BE5114();
    sub_190BE6080();
    sub_190BE5114();
    swift_getMetatypeMetadata();
    sub_190BE644C();
    sub_190BE5114();
    swift_bridgeObjectRelease();
    v22 = v30;
    v23 = v31;
    sub_190B2850C();
    v24 = (void *)swift_allocError();
    *(_QWORD *)v25 = v22;
    *(_QWORD *)(v25 + 8) = v23;
    *(_BYTE *)(v25 + 16) = 1;
    v29();

  }
}

void sub_190B27C9C(uint64_t a1)
{
  sub_190B27CE0(a1, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
}

uint64_t sub_190B27CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 32) = v2;
  *(_BYTE *)(v1 + 56) = -1;
  return OUTLINED_FUNCTION_100_1(a1);
}

void sub_190B27CCC(uint64_t a1)
{
  sub_190B27CE0(a1, &qword_1EE1FEE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
}

void sub_190B27CE0(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 32) = MEMORY[0x1E0DEE9D8];
  v5 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 112);
  sub_190B28A3C(0, a2, a3);
  OUTLINED_FUNCTION_108(v5, v7, v8, v6);
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = 0;
  OUTLINED_FUNCTION_4();
}

void sub_190B27D34(uint64_t a1)
{
  sub_190B27CE0(a1, &qword_1EE1FF628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_190B27D48(uint64_t a1, uint64_t a2, void *a3, void (*a4)(), uint64_t a5)
{
  _QWORD *v8;
  id v9;
  uint64_t v10;

  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v8 = (_QWORD *)swift_allocObject();
        v8[2] = a3;
        v8[3] = a4;
        v8[4] = a5;
        v9 = a3;
        a4 = sub_190ADBA24;
      }
    }
  }
  v10 = swift_retain();
  ((void (*)(uint64_t))a4)(v10);
  return swift_release();
}

uint64_t sub_190B27E9C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(), uint64_t a5)
{
  _QWORD *v8;
  id v9;
  uint64_t v10;

  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v8 = (_QWORD *)swift_allocObject();
        v8[2] = a3;
        v8[3] = a4;
        v8[4] = a5;
        v9 = a3;
        a4 = sub_190ADBA24;
      }
    }
  }
  v10 = swift_retain();
  ((void (*)(uint64_t))a4)(v10);
  return swift_release();
}

uint64_t sub_190B27FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_190B211B0(v4, a2, a3, a4);
}

uint64_t sub_190B27FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_190B211E8(a1, a2, a3, a4, *(void (**)(void (*)(uint64_t), _QWORD *))(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 16));
}

void sub_190B28004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_190B21400(a1, a2, a3, a4, a5, a6, *(_QWORD **)(v6 + 16));
}

uint64_t sub_190B2800C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_190B21698(a1, a2, a3, a4, v4[3], v4[4], v4[2]);
}

uint64_t sub_190B28018()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_57();
  return swift_deallocObject();
}

uint64_t sub_190B2803C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = (uint64_t *)v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_190B280BC;
  return sub_190B21760(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_190B280BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_32();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B28100(uint64_t a1)
{
  return sub_190B2812C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190ADC7B8);
}

uint64_t sub_190B28110(uint64_t a1)
{
  uint64_t v1;

  return sub_190B21AF4(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_190B28120(uint64_t a1)
{
  return sub_190B2812C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B21D38);
}

uint64_t sub_190B2812C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_190B28140()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B28150(uint64_t a1)
{
  uint64_t v1;

  return sub_190B220D4(a1, *(_QWORD *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40));
}

uint64_t sub_190B28160()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B28178(uint64_t a1)
{
  return sub_190B283E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B225D4);
}

void sub_190B28188(uint64_t a1)
{
  sub_190B282D0(a1, MEMORY[0x1E0DEAB38]);
}

uint64_t sub_190B28198(uint64_t a1)
{
  return sub_190B28344(a1, sub_190B28E28, MEMORY[0x1E0DEAB38]);
}

uint64_t sub_190B281B0(uint64_t a1)
{
  return sub_190AE1834(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B22D4C);
}

uint64_t sub_190B281C0(uint64_t a1)
{
  return sub_190B283E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B230BC);
}

uint64_t sub_190B281D0(uint64_t a1)
{
  return sub_190AE36B0(a1, (uint64_t (*)(uint64_t, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B233A4);
}

void sub_190B281E0(uint64_t a1)
{
  sub_190B2824C(a1, (void (*)(uint64_t, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B235F4);
}

uint64_t objectdestroy_78Tm()
{
  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_106();
  return OUTLINED_FUNCTION_33();
}

void sub_190B28240(uint64_t a1)
{
  sub_190B2824C(a1, (void (*)(uint64_t, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B23AE0);
}

void sub_190B2824C(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  char *v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;

  v3 = *(_QWORD *)(*((_QWORD *)v2 + 3) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = &v2[(*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8];
  a2(a1, *((_QWORD *)v2 + 6), *((_QWORD *)v2 + 7), &v2[v4], *(_QWORD *)v5, *((_QWORD *)v5 + 1), *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 4), *((_QWORD *)v2 + 5));
  OUTLINED_FUNCTION_40_0();
}

uint64_t objectdestroy_58Tm()
{
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_90_1();
  return swift_deallocObject();
}

void sub_190B282C4(uint64_t a1)
{
  sub_190B282D0(a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))Sequence.unique<A>(by:));
}

void sub_190B282D0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v2;

  sub_190B23F3C(a1, v2[6], v2[7], v2[8], v2[2], v2[3], v2[4], v2[5], a2);
  OUTLINED_FUNCTION_40_0();
}

uint64_t objectdestroy_64Tm()
{
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B28330(uint64_t a1)
{
  return sub_190B28344(a1, sub_190B28E28, Sequence.unique<A>(by:));
}

#error "190B28374: call analysis failed (funcsize=16)"

uint64_t sub_190B28388(uint64_t a1)
{
  return sub_190AE1834(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B24610);
}

uint64_t sub_190B28394()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

uint64_t objectdestroy_55Tm()
{
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_90_1();
  return swift_deallocObject();
}

uint64_t sub_190B283D4(uint64_t a1)
{
  return sub_190B283E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B24988);
}

uint64_t sub_190B283E0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[5], v2[6], v2[7], v2[8], v2[2], v2[3], v2[4]);
}

uint64_t sub_190B283F8()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B28404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190B24C28(a1, a2);
}

uint64_t sub_190B28420(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_190B24D58(a1, a2, v2[4], v2[2], v2[3]);
}

void sub_190B2843C()
{
  sub_190B24F74();
}

uint64_t sub_190B28444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_190B2520C(a1, a2, a3, a4, v4[3], v4[4], v4[5], v4[2]);
}

void sub_190B28454()
{
  sub_190B2570C();
}

uint64_t sub_190B28470()
{
  uint64_t v0;

  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

void sub_190B2848C()
{
  sub_190BE596C();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B284A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190B25854(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_190B284B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

uint64_t sub_190B284CC()
{
  OUTLINED_FUNCTION_83();
  return swift_deallocObject();
}

uint64_t sub_190B284EC(uint64_t a1)
{
  uint64_t v1;

  return sub_190B25CAC(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

id sub_190B28504(void *a1)
{
  uint64_t v1;

  return sub_190B25D90(a1, v1);
}

unint64_t sub_190B2850C()
{
  unint64_t result;

  result = qword_1ED033980[0];
  if (!qword_1ED033980[0])
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for PromiseError, &type metadata for PromiseError);
    atomic_store(result, qword_1ED033980);
  }
  return result;
}

void sub_190B28548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190B26064(a1, a2, *(double *)(v4 + 56), a3, a4, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(void **)(v4 + 48), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
  OUTLINED_FUNCTION_40_0();
}

void sub_190B28574(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = ((*(uint64_t (**)(void))(v1 + 16))() & 1) == 0;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B285A0()
{
  return sub_190B752F0();
}

uint64_t sub_190B285AC(uint64_t a1)
{
  uint64_t v1;

  return sub_190B2118C(a1, v1, (uint64_t (*)(void))sub_190B2B89C);
}

uint64_t sub_190B285CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_5(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8));
  return OUTLINED_FUNCTION_61_0();
}

void sub_190B28604(uint64_t a1@<X8>)
{
  uint64_t v1;

  (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80)));
  OUTLINED_FUNCTION_109();
}

uint64_t sub_190B28644()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B28650()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B2865C()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B28668(uint64_t a1@<X8>)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(a1, 1, 1, *(_QWORD *)(v1 + 16));
  OUTLINED_FUNCTION_109();
}

void sub_190B28698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_190B286FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B26D6C);
}

uint64_t sub_190B286A4(uint64_t a1, void *a2, void (*a3)(), uint64_t a4)
{
  return sub_190B27D48(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), a2, a3, a4);
}

uint64_t sub_190B286C0()
{
  return sub_190B75314();
}

uint64_t sub_190B286C8()
{
  return sub_190B286C0();
}

uint64_t sub_190B286D0(uint64_t a1)
{
  uint64_t v1;

  return sub_190B2118C(a1, v1, (uint64_t (*)(void))sub_190B2B8A8);
}

void sub_190B286F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_190B286FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B27254);
}

void sub_190B286FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v5;

  a5(a1, a2, a3, a4, *(unsigned __int8 *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 16));
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190B28730(uint64_t a1)
{
  uint64_t v1;

  return sub_190B27794(a1, *(_QWORD **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t objectdestroy_139Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32))
    OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

uint64_t sub_190B2877C(uint64_t a1)
{
  uint64_t v1;

  return sub_190B278D8(a1, *(_QWORD **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190B2879C()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B287A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190B279F4(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t destroy for PromiseError(uint64_t a1)
{
  return sub_190B20F48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s13TeaFoundation12PromiseErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B20F30(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_4();
}

uint64_t assignWithCopy for PromiseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B20F30(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_190B20F48(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PromiseError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_190B20F48(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromiseError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromiseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_190B28930(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

ValueMetadata *type metadata accessor for PromiseError()
{
  return &type metadata for PromiseError;
}

uint64_t method lookup function for Promise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Promise.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Promise.__allocating_init(error:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Promise.__allocating_init(resolver:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_190B28984(uint64_t *a1, uint64_t a2)
{
  return sub_190B75338(*a1, a1[1], a2);
}

uint64_t sub_190B28994(_QWORD *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_190B2899C(uint64_t a1, void *a2, void (*a3)(), uint64_t a4)
{
  return sub_190B27E9C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), a2, a3, a4);
}

uint64_t sub_190B289B8()
{
  return sub_190B75380();
}

uint64_t sub_190B289C0()
{
  return sub_190B289B8();
}

uint64_t sub_190B289C8(uint64_t a1)
{
  uint64_t v1;

  return sub_190B2118C(a1, v1, (uint64_t (*)(void))sub_190B2BA7C);
}

uint64_t sub_190B289E8(unsigned __int8 *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_190B289FC(uint64_t a1)
{
  uint64_t v1;

  return sub_190B2899C(a1, *(void **)(v1 + 16), *(void (**)())(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_190B28A08(void *a1, char a2)
{
  if (a2 != -1)
    sub_190B28A1C(a1, a2);
}

void sub_190B28A1C(void *a1, char a2)
{
  if (a2 == 1)
  {

  }
  else if (!a2)
  {
    swift_bridgeObjectRelease();
  }
}

void sub_190B28A3C(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v5 = OUTLINED_FUNCTION_101(0, (uint64_t)a2, a3);
    v7 = type metadata accessor for Seal.Resolution(a1, v5, v5, v6);
    if (!v8)
      atomic_store(v7, v3);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B28A80(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B28984(a1, v1);
}

uint64_t sub_190B28A88(uint64_t a1)
{
  uint64_t v1;

  return sub_190B2118C(a1, v1, (uint64_t (*)(void))sub_190B2B8B4);
}

void sub_190B28AA8(void (*a1)(char *), uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  sub_190B27A5C(a1, a2, a3, a4, v4[4], v4[2], v4[3]);
}

uint64_t sub_190B28AB4()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B28AC4(uint64_t a1, uint64_t a2)
{
  sub_190B28B84(a1, a2, (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B2746C);
}

void sub_190B28AD0(void (**a1)(uint64_t *__return_ptr, _QWORD)@<X0>, _BYTE *a2@<X8>)
{
  sub_190B28BB4(a1, a2);
}

uint64_t sub_190B28AE4()
{
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

void sub_190B28AFC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(uint64_t (**)(void))(v1 + 32))() & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B28B24(unsigned __int8 *a1)
{
  return nullsub_1(*a1);
}

uint64_t objectdestroy_161Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22();
  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  swift_release();
  return swift_deallocObject();
}

void sub_190B28B78(uint64_t a1, uint64_t a2)
{
  sub_190B28B84(a1, a2, (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B26F80);
}

void sub_190B28B84(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  a3(a1, a2, v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[2], v3[3]);
  OUTLINED_FUNCTION_40_0();
}

void sub_190B28BB4(void (**a1)(uint64_t *__return_ptr, _QWORD)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  (*a1)(&v4, *(_QWORD *)(v2 + 32));
  *a2 = v4;
  OUTLINED_FUNCTION_132();
}

unint64_t sub_190B28BFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED034E18;
  if (!qword_1ED034E18)
  {
    v1 = sub_190BE4C40();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED034E18);
  }
  return result;
}

uint64_t objectdestroy_179Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83();

  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_91_0();
  return swift_deallocObject();
}

uint64_t sub_190B28C64()
{
  uint64_t v0;

  return sub_190B26274(*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(_QWORD *))(v0 + 48), *(_QWORD *)(v0 + 56), *(double *)(v0 + 40));
}

uint64_t objectdestroy_188Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_3();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B28CB4()
{
  uint64_t v0;

  return sub_190B26528(*(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(void (**)(char *))(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 56));
}

uint64_t sub_190B28CD0(uint64_t a1)
{
  uint64_t v1;

  return sub_190B286A4(a1, *(void **)(v1 + 16), *(void (**)())(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t objectdestroy_149Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_92();
  return swift_deallocObject();
}

uint64_t sub_190B28D00()
{
  uint64_t *v0;

  return sub_190B2578C(v0[3], v0[4], v0[2]);
}

uint64_t sub_190B28D0C()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_41();
  return swift_deallocObject();
}

uint64_t sub_190B28D68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_5(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8));
  return OUTLINED_FUNCTION_61_0();
}

void sub_190B28DA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80);
  MEMORY[0x194015140](v1 + ((v2 + 56) & ~v2), *a1);
  OUTLINED_FUNCTION_109();
}

uint64_t sub_190B28DE4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 40))(a1, *(_QWORD *)(v1 + 56)) & 1;
}

uint64_t sub_190B28E10()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_92();
  return swift_deallocObject();
}

void sub_190B28E28(uint64_t a1)
{
  sub_190B28F90(a1);
}

uint64_t sub_190B28E3C()
{
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_91_0();
  return swift_deallocObject();
}

void sub_190B28E54()
{
  DeferredPromise.reject(_:)();
  OUTLINED_FUNCTION_0();
}

void sub_190B28E70()
{
  DeferredPromise.cancel()();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B28E8C()
{
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_57();
  return swift_deallocObject();
}

void sub_190B28EA4()
{
  DeferredPromise.reject(_:)();
  OUTLINED_FUNCTION_0();
}

void sub_190B28EC0()
{
  DeferredPromise.cancel()();
  OUTLINED_FUNCTION_0();
}

void sub_190B28EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(v2 + 48))(a1, a2, *(_QWORD *)(v2 + 64));
  OUTLINED_FUNCTION_79_1();
}

void sub_190B28F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(v2 + 48))(a1, a2, *(_QWORD *)(v2 + 64));
  OUTLINED_FUNCTION_79_1();
}

void sub_190B28F24(uint64_t a1)
{
  OUTLINED_FUNCTION_78_1(a1);
  OUTLINED_FUNCTION_79_1();
}

void sub_190B28F3C()
{
  DeferredPromise.reject(_:)();
  OUTLINED_FUNCTION_0();
}

void sub_190B28F58()
{
  DeferredPromise.cancel()();
  OUTLINED_FUNCTION_0();
}

void sub_190B28F74()
{
  DeferredPromise.cancel()();
  OUTLINED_FUNCTION_0();
}

void sub_190B28F90(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(v1 + 56))(a1, *(_QWORD *)(v1 + 72));
  OUTLINED_FUNCTION_79_1();
}

uint64_t sub_190B28FB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;

  result = OUTLINED_FUNCTION_78_1(a1);
  if (v2)
    *a2 = v2;
  return result;
}

uint64_t sub_190B28FE0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v2 + 40))();
  if (v3)
    *a2 = v3;
  return result;
}

void sub_190B29018()
{
  DeferredPromise.cancel()();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B29034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190B280BC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE2004C0 + dword_1EE2004C0))(a1, v4);
}

uint64_t sub_190B290A4()
{
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_90_1();
  return swift_deallocObject();
}

void sub_190B290C4(uint64_t a1)
{
  uint64_t v1;

  sub_190B214BC(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(void))(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(id))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16));
}

void sub_190B290DC(uint64_t a1)
{
  uint64_t v1;

  sub_190B2127C(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16));
}

void sub_190B2922C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_190ADDD48(a1, a2);
}

uint64_t OUTLINED_FUNCTION_86_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for DeferredPromise(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
}

uint64_t OUTLINED_FUNCTION_100_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_BYTE *)(v1 + 24) = 0;
  return v1;
}

id OUTLINED_FUNCTION_103_1()
{
  return sub_190ABD678();
}

void OUTLINED_FUNCTION_104()
{
  sub_190ADA1C8();
}

uint64_t OUTLINED_FUNCTION_106()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  return DeferredPromise.reject(_:)();
}

uint64_t OUTLINED_FUNCTION_114()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_124_0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;

  sub_190ACF6F0(0, a2, v4, a4);
}

uint64_t OUTLINED_FUNCTION_130()
{
  return swift_unknownObjectRelease();
}

uint64_t static CodableResult.Error.== infix(_:_:)()
{
  return 1;
}

void CodableResult.Error.hash(into:)()
{
  sub_190BE6308();
  OUTLINED_FUNCTION_0();
}

uint64_t CodableResult.Error.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190B29360()
{
  return 1;
}

uint64_t sub_190B29368()
{
  return CodableResult.Error.hashValue.getter();
}

void sub_190B2937C()
{
  CodableResult.Error.hash(into:)();
}

uint64_t sub_190B29390()
{
  sub_190BE62FC();
  CodableResult.Error.hash(into:)();
  return sub_190BE6314();
}

uint64_t CodableResult.valueOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  v7 = v6 - v5;
  (*(void (**)(uint64_t))(v4 + 16))(v6 - v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, a1);
    v8 = *(_QWORD *)(a1 + 16);
    v9 = a2;
    v10 = 1;
  }
  else
  {
    v11 = *(_QWORD *)(a1 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a2, v7, v11);
    v9 = a2;
    v10 = 0;
    v8 = v11;
  }
  return __swift_storeEnumTagSinglePayload(v9, v10, 1, v8);
}

uint64_t CodableResult.init(value:error:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v30 = a2;
  v27 = a4;
  v28 = a5;
  v9 = type metadata accessor for CodableResult(0, a3, a4, a5);
  v29 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_81_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v27 - v11);
  v13 = sub_190BE59A8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v27 - v16;
  v18 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_4_0();
  v21 = (char *)(v20 - v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, a3) != 1)
  {

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
    v23 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v23(v21, v17, a3);
    v23(a6, v21, a3);
    return swift_storeEnumTagMultiPayload();
  }
  OUTLINED_FUNCTION_7_8((uint64_t)v17);
  v22 = v30;
  if (v30)
  {
    OUTLINED_FUNCTION_7_8(a1);
    *(_QWORD *)a6 = v22;
    return swift_storeEnumTagMultiPayload();
  }
  v25 = type metadata accessor for CodableResult.Error(0, a3, v27, v28);
  MEMORY[0x194016EF8](&protocol conformance descriptor for CodableResult<A>.Error, v25);
  v26 = swift_allocError();
  OUTLINED_FUNCTION_7_8(a1);
  *v12 = v26;
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v29 + 32))(a6, v12, v9);
}

uint64_t type metadata accessor for CodableResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableResult);
}

uint64_t type metadata accessor for CodableResult.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableResult.Error);
}

void CodableResult.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v42 = a5;
  v41 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_10();
  v43 = v9;
  v13 = type metadata accessor for CodableResult.CodingKeys(255, v10, v11, v12);
  MEMORY[0x194016EF8](&unk_190BE9350, v13);
  v47 = sub_190BE5F54();
  v45 = *(_QWORD *)(v47 - 8);
  OUTLINED_FUNCTION_81_0();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - v15;
  v49 = a3;
  *(_QWORD *)&v50 = a2;
  v48 = a4;
  v44 = type metadata accessor for CodableResult(0, a2, a3, a4);
  v17 = *(_QWORD *)(v44 - 8);
  v18 = MEMORY[0x1E0C80A78](v44);
  v20 = (uint64_t *)((char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v38 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v46 = v16;
  v23 = v51;
  sub_190BE6344();
  if (!v23)
  {
    v39 = v20;
    v40 = v22;
    v51 = v17;
    v24 = v44;
    v25 = v45;
    v26 = type metadata accessor for CodableResult.ResultType(0, v50, v49, v48);
    v55 = 0;
    MEMORY[0x194016EF8](&unk_190BE9328, v26);
    OUTLINED_FUNCTION_3_8();
    v27 = v50;
    v28 = v25;
    if ((v52 & 1) != 0)
    {
      v55 = 1;
      sub_190B299FC();
      OUTLINED_FUNCTION_3_8();
      v50 = v52;
      v29 = v53;
      v30 = v54;
      sub_190B29A38();
      v31 = swift_allocError();
      *(_OWORD *)v32 = v50;
      *(_QWORD *)(v32 + 16) = v29;
      *(_QWORD *)(v32 + 24) = v30;
      OUTLINED_FUNCTION_2_14(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
      v33 = v39;
      *v39 = v31;
      v34 = v24;
      swift_storeEnumTagMultiPayload();
      v35 = *(void (**)(char *, uint64_t *, uint64_t))(v51 + 32);
      v36 = v40;
      v35(v40, v33, v24);
    }
    else
    {
      LOBYTE(v52) = 1;
      v37 = v43;
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_2_14(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
      v36 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v40, v37, v27);
      v34 = v24;
      swift_storeEnumTagMultiPayload();
      v35 = *(void (**)(char *, uint64_t *, uint64_t))(v51 + 32);
    }
    v35(v42, (uint64_t *)v36, v34);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1_5();
}

uint64_t type metadata accessor for CodableResult.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableResult.CodingKeys);
}

uint64_t type metadata accessor for CodableResult.ResultType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableResult.ResultType);
}

unint64_t sub_190B299FC()
{
  unint64_t result;

  result = qword_1EE1FF638;
  if (!qword_1EE1FF638)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1EE1FF638);
  }
  return result;
}

unint64_t sub_190B29A38()
{
  unint64_t result;

  result = qword_1EE1FF640;
  if (!qword_1EE1FF640)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1EE1FF640);
  }
  return result;
}

void CodableResult.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char v43;

  v32 = *(_QWORD *)(a2[2] - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_10();
  v33 = v5;
  v6 = *(a2 - 1);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_0();
  v10 = (id *)(v9 - v8);
  v11 = a2[3];
  v12 = a2[4];
  v34 = v13;
  v31[1] = v12;
  v14 = type metadata accessor for CodableResult.CodingKeys(255, v13, v11, v12);
  MEMORY[0x194016EF8](&unk_190BE9350, v14);
  v15 = sub_190BE5F9C();
  v16 = *(_QWORD *)(v15 - 8);
  v36 = v15;
  v37 = v16;
  OUTLINED_FUNCTION_81_0();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v31 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v35 = v19;
  sub_190BE6374();
  (*(void (**)(id *, uint64_t, _QWORD *))(v6 + 16))(v10, v38, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *v10;
    v21 = (void *)sub_190BE4538();
    v22 = objc_msgSend(v21, sel_domain);
    v23 = sub_190BE5000();
    v25 = v24;

    v26 = objc_msgSend(v21, sel_code);
    v27 = sub_190B63A90();

    OUTLINED_FUNCTION_39_0();
    LOBYTE(v39) = 0;
    OUTLINED_FUNCTION_4_11();
    if (v2)
    {
      OUTLINED_FUNCTION_0_11();
      OUTLINED_FUNCTION_39_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v39 = v23;
      v40 = v25;
      v41 = v26;
      v42 = v27;
      v43 = 1;
      sub_190B2A300();
      sub_190BE5F90();
      OUTLINED_FUNCTION_0_11();
      OUTLINED_FUNCTION_39_0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = v32;
    v30 = v33;
    v29 = v34;
    (*(void (**)(uint64_t, id *, uint64_t))(v32 + 32))(v33, v10, v34);
    LOBYTE(v39) = 0;
    OUTLINED_FUNCTION_4_11();
    swift_bridgeObjectRelease();
    if (!v2)
    {
      LOBYTE(v39) = 1;
      sub_190BE5F90();
    }
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
    OUTLINED_FUNCTION_0_11();
  }
  OUTLINED_FUNCTION_1_5();
}

uint64_t sub_190B29D58(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64656C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_190B29D8C()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_190BE5EF4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_190B29DD8()
{
  return sub_190B29D8C();
}

uint64_t sub_190B29DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x194016EF8](&unk_190BE9288, a3);
  return sub_190BE6194();
}

uint64_t sub_190B29E48(uint64_t a1)
{
  MEMORY[0x194016EF8](&unk_190BE9288, a1);
  return sub_190BE52C4();
}

uint64_t sub_190B29E94()
{
  MEMORY[0x194016EF8](&unk_190BE9288);
  return sub_190BE52DC();
}

uint64_t sub_190B29EE4()
{
  MEMORY[0x194016EF8](&unk_190BE9288);
  return sub_190BE52D0();
}

void sub_190B29F34(_BYTE *a1@<X8>)
{
  sub_190B2A150(a1);
}

void sub_190B29F40(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_190B2A194(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_190B29D58, a2);
}

uint64_t sub_190B29F4C()
{
  MEMORY[0x194016EF8](&unk_190BE9288);
  return sub_190BE52E8();
}

uint64_t sub_190B29FB0()
{
  MEMORY[0x194016EF8](&unk_190BE9288);
  return sub_190BE52B8();
}

uint64_t sub_190B2A004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x194016EF8](&unk_190BE91C0, a3);
  return sub_190BE6194();
}

uint64_t sub_190B2A058(uint64_t a1)
{
  MEMORY[0x194016EF8](&unk_190BE91C0, a1);
  return sub_190BE52C4();
}

uint64_t sub_190B2A0A4()
{
  MEMORY[0x194016EF8](&unk_190BE91C0);
  return sub_190BE52DC();
}

uint64_t sub_190B2A0F4()
{
  MEMORY[0x194016EF8](&unk_190BE91C0);
  return sub_190BE52D0();
}

void sub_190B2A144(_BYTE *a1@<X8>)
{
  sub_190B2A150(a1);
}

void sub_190B2A150(_BYTE *a1@<X8>)
{
  *a1 = sub_190B29D8C();
  OUTLINED_FUNCTION_0();
}

void sub_190B2A188(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_190B2A194(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_190AF8734, a2);
}

void sub_190B2A194(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;

  *a3 = a2(*v3, a1[2], a1[3], a1[4]);
  a3[1] = v5;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B2A1C8()
{
  char *v0;

  return sub_190AF8734(*v0);
}

uint64_t sub_190B2A1DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190B29DD8();
  *a1 = result;
  return result;
}

uint64_t sub_190B2A20C()
{
  return sub_190B0F980();
}

uint64_t sub_190B2A234@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190B05794();
  *a1 = result;
  return result;
}

uint64_t sub_190B2A264(uint64_t a1)
{
  MEMORY[0x194016EF8](&unk_190BE9350, a1);
  return sub_190BE6404();
}

uint64_t sub_190B2A298(uint64_t a1)
{
  MEMORY[0x194016EF8](&unk_190BE9350, a1);
  return sub_190BE6410();
}

void sub_190B2A2CC(_QWORD *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  CodableResult.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

void sub_190B2A2EC(_QWORD *a1, _QWORD *a2)
{
  CodableResult.encode(to:)(a1, a2);
}

unint64_t sub_190B2A300()
{
  unint64_t result;

  result = qword_1EE1FF648[0];
  if (!qword_1EE1FF648[0])
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, qword_1EE1FF648);
  }
  return result;
}

void sub_190B2A33C()
{
  JUMPOUT(0x194016EF8);
}

uint64_t sub_190B2A34C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_190B2A3BC(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_190B2A4E0(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_190B2A528 + 4 * byte_190BE8F95[v5]))();
  }
}

_QWORD *sub_190B2A580(_QWORD *a1, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    v9 = *a2;
    *a1 = v8;
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v5) = v10;
  return a1;
}

id *sub_190B2A664(id *a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      v13 = v12;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 0;
    }
    *((_BYTE *)a1 + v7) = v14;
  }
  return a1;
}

_QWORD *sub_190B2A7F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_190B2A8CC(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_190B2AA58(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B2AB1C + 4 * byte_190BE8FB8[(v4 - 1)]))();
}

void sub_190B2AB68(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B2AD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B2AD54 + 4 * byte_190BE8FC6[v3]))();
}

void sub_190B2AD9C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t getEnumTagSinglePayload for DigestAlgo(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_190B2AEB4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190B2AEF4 + 4 * byte_190BE8FCB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190B2AF14 + 4 * byte_190BE8FD0[v4]))();
}

_BYTE *sub_190B2AEF4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190B2AF14(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B2AF1C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B2AF24(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B2AF2C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B2AF34(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_190B2AF44(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B2AF90 + 4 * byte_190BE8FDA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B2AFC4 + 4 * byte_190BE8FD5[v4]))();
}

uint64_t sub_190B2AFC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B2AFCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B2AFD4);
  return result;
}

uint64_t sub_190B2AFE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B2AFE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B2AFEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B2AFF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_190B2B000()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B2B010()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B2B020()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B2B030()
{
  JUMPOUT(0x194016EF8);
}

uint64_t sub_190B2B040(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_190BE5D50();
    v5 = (_QWORD *)(a1 + 32);
    do
    {
      v6 = v5[3];
      v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a2, v6, v7);
      sub_190BE5D2C();
      sub_190BE5D5C();
      sub_190BE5D68();
      sub_190BE5D38();
      v5 += 5;
      --v3;
    }
    while (v3);
    v8 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

uint64_t sub_190B2B134()
{
  OUTLINED_FUNCTION_129_0();
  return OUTLINED_FUNCTION_37_4();
}

void sub_190B2B1A8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_190B2B1E4()
{
  OUTLINED_FUNCTION_129_0();
  return OUTLINED_FUNCTION_37_4();
}

uint64_t sub_190B2B244()
{
  OUTLINED_FUNCTION_129_0();
  return OUTLINED_FUNCTION_37_4();
}

uint64_t sub_190B2B2C4()
{
  return sub_190BE50B4();
}

uint64_t sub_190B2B2E0()
{
  OUTLINED_FUNCTION_129_0();
  return OUTLINED_FUNCTION_37_4();
}

uint64_t sub_190B2B32C()
{
  OUTLINED_FUNCTION_129_0();
  return OUTLINED_FUNCTION_37_4();
}

uint64_t sub_190B2B37C()
{
  sub_190BE50B4();
  return swift_bridgeObjectRelease();
}

void sub_190B2B3B0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *, uint64_t))
{
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  _QWORD v30[5];
  int64_t v31;

  sub_190AC9FA0(a1, v30);
  v3 = v30[0];
  v23 = v30[1];
  v4 = v30[3];
  v5 = v30[4];
  v31 = (unint64_t)(v30[2] + 64) >> 6;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v6 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v8 = v7 | (v4 << 6);
      goto LABEL_20;
    }
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v9 >= v31)
      goto LABEL_26;
    v10 = *(_QWORD *)(v23 + 8 * v9);
    v11 = v4 + 1;
    if (!v10)
    {
      v11 = v4 + 2;
      if (v4 + 2 >= v31)
        goto LABEL_26;
      v10 = *(_QWORD *)(v23 + 8 * v11);
      if (!v10)
      {
        v11 = v4 + 3;
        if (v4 + 3 >= v31)
          goto LABEL_26;
        v10 = *(_QWORD *)(v23 + 8 * v11);
        if (!v10)
        {
          v11 = v4 + 4;
          if (v4 + 4 >= v31)
            goto LABEL_26;
          v10 = *(_QWORD *)(v23 + 8 * v11);
          if (!v10)
          {
            v11 = v4 + 5;
            if (v4 + 5 >= v31)
              goto LABEL_26;
            v10 = *(_QWORD *)(v23 + 8 * v11);
            if (!v10)
            {
              v12 = v4 + 6;
              while (v12 < v31)
              {
                v10 = *(_QWORD *)(v23 + 8 * v12++);
                if (v10)
                {
                  v11 = v12 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
    v4 = v11;
LABEL_20:
    v13 = *(_QWORD *)(v3 + 48) + 24 * v8;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    LOBYTE(v13) = *(_BYTE *)(v13 + 16);
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v8);
    v27[0] = v14;
    v27[1] = v15;
    v28 = v13;
    v29 = v16;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    a2(&v25, v27, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((_QWORD)v26)
    {
      v24 = v26;
      v17 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190ACCF98();
        v6 = v21;
      }
      v18 = *(_QWORD *)(v6 + 16);
      v19 = v24;
      if (v18 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_190ACCF98();
        v19 = v24;
        v6 = v22;
      }
      *(_QWORD *)(v6 + 16) = v18 + 1;
      v20 = v6 + 24 * v18;
      *(_QWORD *)(v20 + 32) = v17;
      *(_OWORD *)(v20 + 40) = v19;
    }
  }
  __break(1u);
}

void sub_190B2B61C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    v4 = a1;
    if (a2 >= a1)
    {
      v6 = MEMORY[0x1E0DEE9D8];
      while (v4 < a2)
      {
        swift_beginAccess();
        v7 = *a3;
        if (*(_QWORD *)(*a3 + 16) && (v8 = sub_190AE0AB8(v4), (v9 & 1) != 0))
        {
          v10 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v8);
          swift_endAccess();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_190B125D4();
            v6 = v12;
          }
          v11 = *(_QWORD *)(v6 + 16);
          if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
          {
            sub_190B125D4();
            v6 = v13;
          }
          *(_QWORD *)(v6 + 16) = v11 + 1;
          *(_BYTE *)(v6 + v11 + 32) = v10;
        }
        else
        {
          swift_endAccess();
        }
        if (a2 == ++v4)
          return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_190B2B75C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    v4 = a1;
    if (a2 >= a1)
    {
      v6 = MEMORY[0x1E0DEE9D8];
      while (v4 < a2)
      {
        swift_beginAccess();
        v7 = *a3;
        if (*(_QWORD *)(*a3 + 16) && (v8 = sub_190AE0AB8(v4), (v9 & 1) != 0))
        {
          v10 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v8);
          swift_endAccess();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_190B1278C();
            v6 = v12;
          }
          v11 = *(_QWORD *)(v6 + 16);
          if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
          {
            sub_190B1278C();
            v6 = v13;
          }
          *(_QWORD *)(v6 + 16) = v11 + 1;
          *(_BYTE *)(v6 + v11 + 32) = v10;
        }
        else
        {
          swift_endAccess();
        }
        if (a2 == ++v4)
          return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_190B2B89C()
{
  sub_190ADFA64();
}

void sub_190B2B8A8()
{
  sub_190ADFA64();
}

void sub_190B2B8B4()
{
  sub_190B2B928();
}

void sub_190B2B8C0()
{
  sub_190ADFA64();
}

void sub_190B2B8CC(void *a1)
{
  sub_190B2B9B4(a1, sub_190B39CD4, (void (*)(_QWORD *))sub_190B301E8, (void (*)(_QWORD *))sub_190B39CF8);
}

void sub_190B2B8E8()
{
  sub_190B2B928();
}

void sub_190B2B8F4()
{
  sub_190ADFA64();
}

void sub_190B2B900(void *a1)
{
  sub_190B2B9B4(a1, sub_190B3931C, (void (*)(_QWORD *))sub_190B3049C, (void (*)(_QWORD *))sub_190B39340);
}

void sub_190B2B91C()
{
  sub_190B2B928();
}

void sub_190B2B928()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t);
  uint64_t v2;

  OUTLINED_FUNCTION_123_0();
  if ((*(_BYTE *)(v2 + 24) & 1) == 0)
  {
    *(_BYTE *)(v2 + 24) = 1;
    OUTLINED_FUNCTION_88_0();
    v1(v0, 0, 1);
    OUTLINED_FUNCTION_41_1();
  }
  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_9();
}

void sub_190B2B998(void *a1)
{
  sub_190B2B9B4(a1, sub_190B39664, (void (*)(_QWORD *))sub_190B306DC, (void (*)(_QWORD *))sub_190B396F4);
}

void sub_190B2B9B4(void *a1, void (*a2)(_QWORD), void (*a3)(_QWORD *), void (*a4)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;

  a2(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v13 - v10);
  OUTLINED_FUNCTION_190();
  if ((*(_BYTE *)(v4 + 24) & 1) == 0)
  {
    *(_BYTE *)(v4 + 24) = 1;
    *v11 = a1;
    swift_storeEnumTagMultiPayload();
    v12 = a1;
    a3(v11);
    a4(v11);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  OUTLINED_FUNCTION_26();
}

void sub_190B2BA7C()
{
  sub_190ADFA64();
}

void sub_190B2BA88()
{
  sub_190ADFA64();
}

uint64_t (*sub_190B2BA94())(_QWORD)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);

  v1 = *(_QWORD *)(v0 + 16);
  UnfairLock.lock()();
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v2 = nullsub_1;
  }
  else
  {
    *(_BYTE *)(v0 + 24) = 1;
    sub_190B3035C(0, 0, 2);
    v2 = v3;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return v2;
}

void sub_190B2BB10()
{
  sub_190B2BBE4((void (*)(_QWORD, uint64_t))sub_190B30414);
}

void sub_190B2BB1C(void (*a1)(_QWORD), void (*a2)(char *), void (*a3)(char *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  a1(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v10 - v8;
  OUTLINED_FUNCTION_190();
  if ((*(_BYTE *)(v3 + 24) & 1) == 0)
  {
    *(_BYTE *)(v3 + 24) = 1;
    swift_storeEnumTagMultiPayload();
    a2(v9);
    a3(v9);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  OUTLINED_FUNCTION_26();
}

void sub_190B2BBD8()
{
  sub_190B2BBE4((void (*)(_QWORD, uint64_t))sub_190B30910);
}

void sub_190B2BBE4(void (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;

  UnfairLock.lock()();
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
  {
    *(_BYTE *)(v1 + 24) = 1;
    a1(0, 2);
    OUTLINED_FUNCTION_120();
  }
  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_4();
}

void sub_190B2BC4C()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_56(v1, &qword_1ED033010, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190AC966C(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = (void *)OUTLINED_FUNCTION_11_3();
  sub_190B2D578(v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_6_4();
  v12 = OUTLINED_FUNCTION_54();
  v0(v12);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2BD14()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_56(v1, &qword_1EE1FF8C8, (uint64_t)&type metadata for RemoteNotificationFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190B378E4(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = (void *)OUTLINED_FUNCTION_11_3();
  sub_190B2D6F0(v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_6_4();
  v12 = OUTLINED_FUNCTION_54();
  v0(v12);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_190B2BDD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_190ACF6F0(0, &qword_1ED033010, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  swift_allocObject();
  v6 = swift_retain();
  v7 = sub_190AC966C(v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v7;
  swift_retain_n();
  swift_retain();
  v9 = (void (*)(uint64_t))sub_190B2D900(a1, (void (*)())sub_190B3A418, v7, (uint64_t)sub_190AE1854, v7, (uint64_t)sub_190B3A07C, (uint64_t)v8);
  swift_release_n();
  v10 = swift_release();
  v9(v10);
  result = swift_beginAccess();
  v12 = *(_QWORD *)(v7 + 16);
  if (v12)
  {
    swift_retain();
    swift_release();
    swift_release();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190B2BF28()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_45_4(v1, (uint64_t)&unk_1ED02F058);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_2();
  sub_190B37A54();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_39_4(v5, (uint64_t)sub_190B3A41C, v6, (uint64_t)sub_190B3A3D8, v7, (uint64_t)sub_190B39A2C);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2BFE8()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_56(v1, &qword_1ED033010, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190AC966C(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_116_0(v5, (void (*)())sub_190B3A418, v6, (uint64_t)sub_190AE1854, v7, (uint64_t)sub_190ACAFA0);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C0AC()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_45_4(v1, (uint64_t)&qword_1ED02F058);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_2();
  sub_190B37A54();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_116_0(v5, (void (*)())sub_190B3A41C, v6, (uint64_t)sub_190B3A3D8, v7, (uint64_t)sub_190B3A424);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C16C()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_45_4(v1, (uint64_t)&qword_1EE1FEDF0);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_2();
  sub_190B37C00();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_39_4(v5, (uint64_t)sub_190B39BAC, v6, (uint64_t)sub_190B39BC8, v7, (uint64_t)sub_190B39BF8);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C22C()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_56(v1, &qword_1ED033010, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190AC966C(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_39_4(v5, (uint64_t)sub_190B3A418, v6, (uint64_t)sub_190AE1854, v7, (uint64_t)sub_190ACAEA4);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C2F0()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_45_4(v1, (uint64_t)&qword_1ED02F058);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_2();
  sub_190B37A54();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = OUTLINED_FUNCTION_11_3();
  sub_190B2E04C(v5);
  OUTLINED_FUNCTION_6_4();
  v6 = OUTLINED_FUNCTION_54();
  v0(v6);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C3B4()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_45_4(v1, (uint64_t)&unk_1EE1FF8A0);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190B37E84(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_39_4(v5, (uint64_t)sub_190B399BC, v6, (uint64_t)sub_190B399D8, v7, (uint64_t)sub_190B39A08);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C474()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_45_4(v1, (uint64_t)&unk_1EE1FF880);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190B37FF4(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = (void *)OUTLINED_FUNCTION_11_3();
  sub_190B2E6BC(v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_6_4();
  v12 = OUTLINED_FUNCTION_54();
  v0(v12);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C538()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_56(v1, &qword_1ED033010, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190AC966C(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = (void *)OUTLINED_FUNCTION_11_3();
  sub_190B2E8CC(v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_6_4();
  v12 = OUTLINED_FUNCTION_54();
  v0(v12);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B2C600()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_56(v1, &qword_1EE1FF860, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190B38164(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = (void *)OUTLINED_FUNCTION_11_3();
  sub_190B2EBBC(v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_6_4();
  v12 = OUTLINED_FUNCTION_54();
  v0(v12);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

#error "190B2C748: call analysis failed (funcsize=44)"

void sub_190B2C78C()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_56(v1, &qword_1ED033010, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_4_2();
  v3 = sub_190AC966C(v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = (void *)OUTLINED_FUNCTION_11_3();
  sub_190B2EDCC(v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_6_4();
  v12 = OUTLINED_FUNCTION_54();
  v0(v12);
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_190B2C854()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B2C860()
{
  return sub_190B2C890();
}

uint64_t sub_190B2C86C()
{
  return sub_190B2C890();
}

uint64_t sub_190B2C878()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B2C884()
{
  return sub_190B2C890();
}

uint64_t sub_190B2C890()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_149();
  if (v1)
  {
    v3 = v2;
    v4 = OUTLINED_FUNCTION_1();
    v3(v4);
    OUTLINED_FUNCTION_2();
  }
  *(_QWORD *)(v0 + 24) = 0;
  return OUTLINED_FUNCTION_25_1();
}

uint64_t sub_190B2C8D0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, uint64_t);
  void (*v3)(_QWORD, uint64_t);

  OUTLINED_FUNCTION_149();
  if (v1)
  {
    v3 = v2;
    OUTLINED_FUNCTION_1();
    sub_190B2F07C(v3);
    OUTLINED_FUNCTION_2();
  }
  *(_QWORD *)(v0 + 24) = 0;
  return OUTLINED_FUNCTION_25_1();
}

uint64_t sub_190B2C914()
{
  return sub_190AE0394();
}

uint64_t sub_190B2C928()
{
  return sub_190AE0394();
}

uint64_t sub_190B2C93C()
{
  return sub_190AE0394();
}

uint64_t sub_190B2C950()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2C95C()
{
  return sub_190AE0394();
}

uint64_t sub_190B2C970()
{
  return sub_190AE0394();
}

uint64_t sub_190B2C984()
{
  return sub_190AE0394();
}

uint64_t sub_190B2C998()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2C9A4()
{
  return sub_190AE0394();
}

uint64_t sub_190B2C9B8(char a1, void (*a2)(char *))
{
  char v3;

  v3 = a1;
  a2(&v3);
  return sub_190ADF880();
}

uint64_t sub_190B2CAB4(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  __int128 v3;
  uint64_t v4;

  v4 = a1;
  a2(&v3, &v4);
  return sub_190B2D434();
}

uint64_t sub_190B2CBB8(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  __int128 v3;
  uint64_t v4;

  v4 = a1;
  a2(&v3, &v4);
  sub_190B2D4B0();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B2CCD4(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  __int128 v3;
  uint64_t v4;

  v4 = a1;
  a2(&v3, &v4);
  sub_190B2D48C();
  return swift_bridgeObjectRelease();
}

void sub_190B2CDE4(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, void (*a5)(), uint64_t a6, uint64_t a7)
{
  void *v7;
  id v9;
  void *v10;
  __int128 v11;
  unsigned __int8 v12;

  OUTLINED_FUNCTION_177(a1, a2, a3, a4, (uint64_t)a5, a6, a7);
  if (!v7)
  {
    a5();
    OUTLINED_FUNCTION_16();
    return;
  }
  v9 = OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_165((uint64_t)v9, (unint64_t *)&qword_1ED034920);
  if ((OUTLINED_FUNCTION_176() & 1) == 0)
    goto LABEL_8;
  if (v12 != 2 || v11 != 0)
  {
    sub_190B20F48(v11, *((uint64_t *)&v11 + 1), v12);
LABEL_8:

    sub_190AE0394();
    v10 = v7;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_41_1();
  sub_190B2C8D0();
  v10 = v7;
LABEL_9:

}

uint64_t sub_190B2CED4(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_190BE4628();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1;
  a2(&v10);
  sub_190AE03F8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_190B2D038(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  a3(v4);
  return sub_190ADF880();
}

uint64_t sub_190B2D134(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  __int128 v3;
  uint64_t v4;

  v4 = a1;
  a2(&v3, &v4);
  return sub_190B2D520();
}

uint64_t sub_190B2D238(char a1, void (*a2)(char *))
{
  char v3;

  v3 = a1 & 1;
  a2(&v3);
  return sub_190ADF880();
}

uint64_t sub_190B2D338(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  a2(&v3);
  return sub_190ADF880();
}

uint64_t sub_190B2D434()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_retain();
    sub_190B7B42C();
    swift_release();
  }
  *(_QWORD *)(v0 + 24) = 0;
  return swift_release();
}

uint64_t sub_190B2D48C()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2D498()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2D4A4()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2D4B0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_149();
  if (v1)
  {
    OUTLINED_FUNCTION_1();
    sub_190B7B4B4();
    OUTLINED_FUNCTION_2();
  }
  *(_QWORD *)(v0 + 24) = 0;
  return OUTLINED_FUNCTION_25_1();
}

uint64_t sub_190B2D4FC()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2D508()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2D514()
{
  return sub_190AE03F8();
}

uint64_t sub_190B2D520()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_retain();
    sub_190B7B528();
    swift_release();
  }
  *(_QWORD *)(v0 + 24) = 0;
  return swift_release();
}

uint64_t (*sub_190B2D578(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(_QWORD)
{
  uint64_t v7;
  _QWORD *v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  char v20;
  void *v21;
  void *v22;
  uint64_t v24;

  v24 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = a2;
  v15[8] = a3;
  v16 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB22C();
  v18 = v17;
  v20 = v19;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 16));
  if (v20)
  {
    if (v20 == 1)
    {
      v21 = sub_190B34BE0(v18, 1, v16, a4, a5);
    }
    else
    {
      if (v20 != 2)
        return nullsub_1;
      v21 = sub_190ADADE0(v16, a2, a3);
    }
  }
  else
  {
    v21 = sub_190B34030((void (*)())v18, 0, v16, a6, a7);
  }
  v22 = v21;
  sub_190AB7D2C(v18, v20);
  return (uint64_t (*)(_QWORD))v22;
}

uint64_t (*sub_190B2D6F0(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(_QWORD)
{
  uint64_t v7;
  _QWORD *v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  char v20;
  void *v21;
  void *v22;
  char v23;
  _QWORD *v24;
  uint64_t v26;

  v26 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = a2;
  v15[8] = a3;
  v16 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB250();
  v18 = v17;
  v20 = v19;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
  if (v20)
  {
    if (v20 == 1)
    {
      v21 = sub_190B35290(v18, 1, v16, a4, a5);
      v22 = v18;
      v23 = 1;
    }
    else
    {
      if (v20 != 2)
        return nullsub_1;
      v21 = sub_190ADADE0(v16, a2, a3);
      v22 = v18;
      v23 = 2;
    }
    sub_190AB03B4(v22, v23);
  }
  else
  {
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a6;
    v24[3] = a7;
    v24[4] = v18;
    sub_190ACACD0(v18, 0);
    sub_190ACACD0(v18, 0);
    swift_retain();
    sub_190ACACD0(v18, 0);
    v21 = sub_190ADADE0(v16, (void (*)())sub_190AC7EA8, (uint64_t)v24);
    swift_release();
    sub_190AB03B4(v18, 0);
    sub_190AB03B4(v18, 0);
    sub_190AB03DC(v18, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
  }
  return (uint64_t (*)(_QWORD))v21;
}

uint64_t (*sub_190B2D900(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(_QWORD)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char v21;
  void *v22;
  void *v23;
  uint64_t v25;
  void *v26;
  char v27;

  v15 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a6;
  v25 = a6;
  v17 = a5;
  v18 = a7;
  v16[4] = a7;
  v16[5] = a4;
  v16[6] = v17;
  v16[7] = a2;
  v16[8] = a3;
  v19 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB274((uint64_t)sub_190B3A08C, (uint64_t)v16, (uint64_t)&v26);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  v20 = v26;
  v21 = v27;
  if (v27)
  {
    if (v27 == 1)
    {
      v22 = sub_190B3543C(v26, 1, v19, a4, v17);
    }
    else
    {
      if (v27 != 2)
        return nullsub_1;
      v22 = sub_190ADADE0(v19, a2, a3);
    }
  }
  else
  {
    v22 = sub_190B341C4((void (*)())v26, 0, v19, v25, v18);
  }
  v23 = v22;
  sub_190AB7D2C(v20, v21);
  return (uint64_t (*)(_QWORD))v23;
}

#error "190B2DAD0: call analysis failed (funcsize=63)"

void sub_190B2DB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_50_3(v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_45_4(v7, (uint64_t)&qword_1ED02F270);
  OUTLINED_FUNCTION_163();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_65_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_61_1();
  v10 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_35_4(v10);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_158();
  sub_190BCB2B4();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_185();
  sub_190B39688(v0, v1, (uint64_t)&qword_1ED02F270);
  OUTLINED_FUNCTION_192();
  v12 = OUTLINED_FUNCTION_82_2(v11);
  if (v13)
  {
    OUTLINED_FUNCTION_80_2(v12, (uint64_t)&qword_1ED02F270);
  }
  else
  {
    v14 = OUTLINED_FUNCTION_140();
    if (v14)
    {
      if (v14 == 1)
      {
        OUTLINED_FUNCTION_183();
        v15 = OUTLINED_FUNCTION_128_0();
        sub_190B35794(v15, v16, v17, v18);
      }
      else
      {
        OUTLINED_FUNCTION_106_0();
      }
      OUTLINED_FUNCTION_120();
      OUTLINED_FUNCTION_80_2(v24, (uint64_t)&qword_1ED02F270);
    }
    else
    {
      v19 = OUTLINED_FUNCTION_127_0();
      sub_190B34354(v19, v20, v21, v22);
      OUTLINED_FUNCTION_120();
      OUTLINED_FUNCTION_80_2(v23, (uint64_t)&qword_1ED02F270);
      sub_190B39CF8(v1);
    }
  }
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_0_0();
}

uint64_t (*sub_190B2DCE4(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(_QWORD)
{
  uint64_t v7;
  _QWORD *v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  char v20;
  void *v21;
  void *v22;
  char v23;
  _QWORD *v24;
  uint64_t v26;

  v26 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = a2;
  v15[8] = a3;
  v16 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB3E4();
  v18 = v17;
  v20 = v19;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
  if (v20)
  {
    if (v20 == 1)
    {
      v21 = sub_190B359F0(v18, 1, v16, a4, a5);
      v22 = v18;
      v23 = 1;
    }
    else
    {
      if (v20 != 2)
        return nullsub_1;
      v21 = sub_190ADADE0(v16, a2, a3);
      v22 = v18;
      v23 = 2;
    }
    sub_190AB03B4(v22, v23);
  }
  else
  {
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a6;
    v24[3] = a7;
    v24[4] = v18;
    sub_190ACACD0(v18, 0);
    sub_190ACACD0(v18, 0);
    swift_retain();
    sub_190ACACD0(v18, 0);
    v21 = sub_190ADADE0(v16, (void (*)())sub_190AC7EA8, (uint64_t)v24);
    swift_release();
    sub_190AB03B4(v18, 0);
    sub_190AB03B4(v18, 0);
    sub_190AB03DC(v18, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
  }
  return (uint64_t (*)(_QWORD))v21;
}

#error "190B2DF8C: call analysis failed (funcsize=83)"

#error "190B2E0A4: call analysis failed (funcsize=63)"

void sub_190B2E15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_50_3(v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_45_4(v7, (uint64_t)&qword_1EE1FEE18);
  OUTLINED_FUNCTION_163();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_65_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_61_1();
  v10 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_35_4(v10);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_158();
  sub_190BCB440();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_185();
  sub_190B39688(v0, v1, (uint64_t)&qword_1EE1FEE18);
  sub_190B3931C(0);
  v12 = OUTLINED_FUNCTION_82_2(v11);
  if (v13)
  {
    OUTLINED_FUNCTION_80_2(v12, (uint64_t)&qword_1EE1FEE18);
  }
  else
  {
    v14 = OUTLINED_FUNCTION_140();
    if (v14)
    {
      if (v14 == 1)
      {
        OUTLINED_FUNCTION_183();
        v15 = OUTLINED_FUNCTION_128_0();
        sub_190B35F0C(v15, v16, v17, v18);
      }
      else
      {
        OUTLINED_FUNCTION_106_0();
      }
      OUTLINED_FUNCTION_120();
      OUTLINED_FUNCTION_80_2(v24, (uint64_t)&qword_1EE1FEE18);
    }
    else
    {
      v19 = OUTLINED_FUNCTION_127_0();
      sub_190B34620(v19, v20, v21, v22);
      OUTLINED_FUNCTION_120();
      OUTLINED_FUNCTION_80_2(v23, (uint64_t)&qword_1EE1FEE18);
      sub_190B39340(v1);
    }
  }
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_0_0();
}

#error "190B2E348: call analysis failed (funcsize=95)"

#error "190B2E4A4: call analysis failed (funcsize=63)"

void sub_190B2E55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_50_3(v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_45_4(v7, (uint64_t)&qword_1EE1FF878);
  OUTLINED_FUNCTION_163();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_65_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_61_1();
  v10 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_35_4(v10);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_158();
  sub_190BCB680();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_185();
  sub_190B39688(v0, v1, (uint64_t)&qword_1EE1FF878);
  sub_190B39664(0);
  v12 = OUTLINED_FUNCTION_82_2(v11);
  if (v13)
  {
    OUTLINED_FUNCTION_80_2(v12, (uint64_t)&qword_1EE1FF878);
  }
  else
  {
    v14 = OUTLINED_FUNCTION_140();
    if (v14)
    {
      if (v14 == 1)
      {
        OUTLINED_FUNCTION_183();
        v15 = OUTLINED_FUNCTION_128_0();
        sub_190B364D8(v15, v16, v17, v18);
      }
      else
      {
        OUTLINED_FUNCTION_106_0();
      }
      OUTLINED_FUNCTION_120();
      OUTLINED_FUNCTION_80_2(v24, (uint64_t)&qword_1EE1FF878);
    }
    else
    {
      v19 = OUTLINED_FUNCTION_127_0();
      sub_190B34828(v19, v20, v21, v22);
      OUTLINED_FUNCTION_120();
      OUTLINED_FUNCTION_80_2(v23, (uint64_t)&qword_1EE1FF878);
      sub_190B396F4(v1);
    }
  }
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_0_0();
}

uint64_t (*sub_190B2E6BC(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(_QWORD)
{
  uint64_t v7;
  _QWORD *v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  char v20;
  void *v21;
  void *v22;
  char v23;
  _QWORD *v24;
  uint64_t v26;

  v26 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = a2;
  v15[8] = a3;
  v16 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB7B0();
  v18 = v17;
  v20 = v19;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
  if (v20)
  {
    if (v20 == 1)
    {
      v21 = sub_190B36734(v18, 1, v16, a4, a5);
      v22 = v18;
      v23 = 1;
    }
    else
    {
      if (v20 != 2)
        return nullsub_1;
      v21 = sub_190ADADE0(v16, a2, a3);
      v22 = v18;
      v23 = 2;
    }
    sub_190AB03B4(v22, v23);
  }
  else
  {
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a6;
    v24[3] = a7;
    v24[4] = v18;
    sub_190ACACD0(v18, 0);
    sub_190ACACD0(v18, 0);
    swift_retain();
    sub_190ACACD0(v18, 0);
    v21 = sub_190ADADE0(v16, (void (*)())sub_190AC7EA8, (uint64_t)v24);
    swift_release();
    sub_190AB03B4(v18, 0);
    sub_190AB03B4(v18, 0);
    sub_190AB03DC(v18, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
  }
  return (uint64_t (*)(_QWORD))v21;
}

void (*sub_190B2E8CC(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))()
{
  uint64_t v7;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*v22)();
  _QWORD *v23;
  void (*v24)();
  uint64_t v26;
  id v27;
  void *v28;
  unint64_t v29;
  char v30;

  v15 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a6;
  v26 = a6;
  v17 = a4;
  v18 = a7;
  v16[4] = a7;
  v16[5] = v17;
  v16[6] = a5;
  v16[7] = a2;
  v16[8] = a3;
  v27 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB7D4((uint64_t)sub_190B395B0, (uint64_t)v16, (uint64_t)&v28);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  v19 = (uint64_t)v28;
  v20 = v29;
  v21 = v30;
  if (v30)
  {
    if (v30 == 1)
    {
      v22 = (void (*)())sub_190B368E0(v28, v29, 1, v27, v17, a5);
    }
    else
    {
      if (v30 != 2)
        return (void (*)())nullsub_1;
      v22 = sub_190ADADE0(v27, a2, a3);
    }
    v24 = v22;
  }
  else
  {
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v26;
    v23[3] = v18;
    v23[4] = v19;
    v23[5] = v20;
    sub_190B395F0(v19, v20, 0);
    sub_190B395F0(v19, v20, 0);
    swift_retain();
    sub_190B395F0(v19, v20, 0);
    v24 = sub_190ADADE0(v27, (void (*)())sub_190B3A3DC, (uint64_t)v23);
    swift_release();
    sub_190B395BC(v19, v20, 0);
    sub_190B395BC(v19, v20, 0);
  }
  sub_190B395BC(v19, v20, v21);
  return v24;
}

void sub_190B2EAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void (*v40)();
  char v41;
  void *v42;
  uint64_t v43;
  void *v44;
  char v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_42_2();
  a25 = v33;
  a26 = v34;
  v36 = v35;
  OUTLINED_FUNCTION_145();
  v37 = *(_QWORD *)(v27 + 16);
  UnfairLock.lock()();
  v38 = OUTLINED_FUNCTION_24();
  v39 = (_QWORD *)OUTLINED_FUNCTION_199(v38);
  v39[4] = v36;
  v39[5] = v30;
  v39[6] = v26;
  v39[7] = v31;
  v39[8] = v28;
  v32;
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_8();
  sub_190BCB8B4((uint64_t)sub_190B39080, v29, (uint64_t)&a13);
  OUTLINED_FUNCTION_19();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
  switch(a14)
  {
    case 0:
      v40 = (void (*)())OUTLINED_FUNCTION_180();
      sub_190B34A30(v40, v41, v42, v43, v36);
      goto LABEL_7;
    case 1:
      v44 = (void *)OUTLINED_FUNCTION_150();
      sub_190B36AA4(v44, v45, v46, v47, v48);
      goto LABEL_7;
    case 2:
      OUTLINED_FUNCTION_170();
LABEL_7:
      OUTLINED_FUNCTION_144();
      break;
  }
  OUTLINED_FUNCTION_9_7();
}

uint64_t (*sub_190B2EBBC(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(_QWORD)
{
  uint64_t v7;
  _QWORD *v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  char v20;
  void *v21;
  void *v22;
  char v23;
  _QWORD *v24;
  uint64_t v26;

  v26 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = a2;
  v15[8] = a3;
  v16 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB9D0();
  v18 = v17;
  v20 = v19;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
  if (v20)
  {
    if (v20 == 1)
    {
      v21 = sub_190B36C50(v18, 1, v16, a4, a5);
      v22 = v18;
      v23 = 1;
    }
    else
    {
      if (v20 != 2)
        return nullsub_1;
      v21 = sub_190ADADE0(v16, a2, a3);
      v22 = v18;
      v23 = 2;
    }
    sub_190AB03B4(v22, v23);
  }
  else
  {
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a6;
    v24[3] = a7;
    v24[4] = v18;
    sub_190ACACD0(v18, 0);
    sub_190ACACD0(v18, 0);
    swift_retain();
    sub_190ACACD0(v18, 0);
    v21 = sub_190ADADE0(v16, (void (*)())sub_190AC7EA8, (uint64_t)v24);
    swift_release();
    sub_190AB03B4(v18, 0);
    sub_190AB03B4(v18, 0);
    sub_190AB03DC(v18, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
  }
  return (uint64_t (*)(_QWORD))v21;
}

uint64_t (*sub_190B2EDCC(void *a1, void (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(_QWORD)
{
  uint64_t v7;
  _QWORD *v15;
  id v16;
  void *v17;
  void *v18;
  char v19;
  char v20;
  void *v21;
  void *v22;
  char v23;
  _QWORD *v24;
  void (*v25)(void);
  uint64_t v27;

  v27 = *(_QWORD *)(v7 + 16);
  UnfairLock.lock()();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a4;
  v15[6] = a5;
  v15[7] = a2;
  v15[8] = a3;
  v16 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190BCB9F4();
  v18 = v17;
  v20 = v19;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
  if (v20)
  {
    if (v20 == 1)
    {
      v21 = sub_190B36DFC(v18, 1, v16, a4, a5);
      v22 = v18;
      v23 = 1;
    }
    else
    {
      if (v20 != 2)
        return nullsub_1;
      v21 = sub_190ADADE0(v16, a2, a3);
      v22 = v18;
      v23 = 2;
    }
    sub_190AE447C(v22, v23);
  }
  else
  {
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a6;
    v24[3] = a7;
    v24[4] = v18;
    sub_190B38FC4(v18, 0);
    sub_190B38FC4(v18, 0);
    swift_retain();
    sub_190B38FC4(v18, 0);
    v21 = sub_190ADADE0(v16, (void (*)())sub_190AC7EA8, (uint64_t)v24);
    swift_release();
    v25 = (void (*)(void))MEMORY[0x1E0DEEE30];
    sub_190AE447C(v18, 0);
    sub_190AE447C(v18, 0);
    sub_190AB03DC(v18, 0, v25);
  }
  return (uint64_t (*)(_QWORD))v21;
}

void sub_190B2EFE4(uint64_t a1)
{
  sub_190B2EFFC(a1, (uint64_t (*)(uint64_t))sub_190B2B8CC);
}

void sub_190B2EFF0(uint64_t a1)
{
  sub_190B2EFFC(a1, (uint64_t (*)(uint64_t))sub_190B2B900);
}

void sub_190B2EFFC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  void (*v4)(uint64_t);
  uint64_t v5;

  if (OUTLINED_FUNCTION_174())
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_9_2();
    v4 = (void (*)(uint64_t))a2(a1);
    OUTLINED_FUNCTION_2();
    v5 = OUTLINED_FUNCTION_8();
    v4(v5);
    OUTLINED_FUNCTION_39_3();
  }
  OUTLINED_FUNCTION_4();
}

void sub_190B2F05C(uint64_t a1)
{
  sub_190B2EFFC(a1, (uint64_t (*)(uint64_t))sub_190B2B998);
}

void sub_190B2F068(uint64_t a1)
{
  sub_190ADF814(a1, (uint64_t)sub_190B307CC, (uint64_t (*)(uint64_t, uint64_t))sub_190ADFA64);
}

void sub_190B2F07C(void (*a1)(_QWORD, uint64_t))
{
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;

  if (OUTLINED_FUNCTION_174())
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_2();
    sub_190B2BBE4(a1);
    v3 = v2;
    OUTLINED_FUNCTION_9_2();
    v4 = OUTLINED_FUNCTION_1();
    v3(v4);
    OUTLINED_FUNCTION_39_3();
  }
  OUTLINED_FUNCTION_4();
}

void sub_190B2F0D8()
{
  sub_190B2F184(sub_190B39CD4, (void (*)(char *))sub_190B301E8, (void (*)(char *))sub_190B39CF8);
}

uint64_t sub_190B2F0F4()
{
  uint64_t result;
  void (*v1)(uint64_t);
  uint64_t v2;

  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    v1 = (void (*)(uint64_t))sub_190B2BA94();
    swift_release();
    v2 = swift_retain();
    v1(v2);
    return swift_release_n();
  }
  return result;
}

void sub_190B2F168()
{
  sub_190B2F184(sub_190B3931C, (void (*)(char *))sub_190B3049C, (void (*)(char *))sub_190B39340);
}

void sub_190B2F184(void (*a1)(_QWORD), void (*a2)(char *), void (*a3)(char *))
{
  void (*v6)(uint64_t);
  void (*v7)(uint64_t);
  uint64_t v8;

  if (OUTLINED_FUNCTION_174())
  {
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_2();
    sub_190B2BB1C(a1, a2, a3);
    v7 = v6;
    OUTLINED_FUNCTION_16_4();
    v8 = OUTLINED_FUNCTION_1();
    v7(v8);
    OUTLINED_FUNCTION_39_3();
  }
  OUTLINED_FUNCTION_9();
}

void sub_190B2F1F4()
{
  sub_190B2F184(sub_190B39664, (void (*)(char *))sub_190B306DC, (void (*)(char *))sub_190B396F4);
}

void sub_190B2F210()
{
  sub_190B2F07C((void (*)(_QWORD, uint64_t))sub_190B307CC);
}

uint64_t sub_190B2F21C()
{
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_175();
  sub_190BE50B4();
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_68_2();
  sub_190BE50B4();
  return swift_bridgeObjectRelease();
}

void sub_190B2F2B0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  char v3;
  BOOL v4;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (sub_190BE60BC() & 1) != 0)
    sub_190B564B8(v2, v3);
}

uint64_t sub_190B2F314()
{
  sub_190BE62FC();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE50B4();
  swift_bridgeObjectRelease();
  sub_190BE50B4();
  swift_bridgeObjectRelease();
  return sub_190BE6314();
}

uint64_t sub_190B2F3F8()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_66();
  sub_190BE50B4();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_129_0();
  OUTLINED_FUNCTION_20();
  return sub_190BE6314();
}

BOOL sub_190B2F49C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_190B2F4AC()
{
  return sub_190BE6308();
}

uint64_t sub_190B2F4D0()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

BOOL sub_190B2F514(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_190B2F49C(*a1, *a2);
}

uint64_t sub_190B2F520()
{
  return sub_190B2F4D0();
}

uint64_t sub_190B2F528()
{
  return sub_190B2F4AC();
}

void StartupTaskManager.__allocating_init()()
{
  OUTLINED_FUNCTION_24();
  StartupTaskManager.init()();
  OUTLINED_FUNCTION_0();
}

void sub_190B2F55C(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(__int128 *__return_ptr, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16[2];
  uint64_t v17;

  v7 = *a1;
  v6 = a1[1];
  sub_190B564B8(*((_BYTE *)a1 + 16), a3);
  if ((v8 & 1) != 0)
  {
    v9 = *(_QWORD *)(a2 + 16);
    if (v9)
    {
      v17 = MEMORY[0x1E0DEE9D8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACB928(0, v9, 0);
      v10 = v17;
      v11 = a2 + 40;
      do
      {
        v12 = *(void (**)(__int128 *__return_ptr, uint64_t))(v11 - 8);
        v13 = swift_retain();
        v12(v16, v13);
        swift_release();
        v17 = v10;
        v15 = *(_QWORD *)(v10 + 16);
        v14 = *(_QWORD *)(v10 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_190ACB928(v14 > 1, v15 + 1, 1);
          v10 = v17;
        }
        *(_QWORD *)(v10 + 16) = v15 + 1;
        sub_190AAB5A4(v16, v10 + 40 * v15 + 32);
        v11 += 16;
        --v9;
      }
      while (v9);
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v10 = MEMORY[0x1E0DEE9D8];
    }
    *a4 = v7;
    a4[1] = v6;
    a4[2] = v10;
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
}

Swift::Void __swiftcall StartupTaskManager.startAllTasks()()
{
  TeaFoundation::StartupTaskExecutionPhase v0;
  char *v1;
  uint64_t v2;
  char v3;

  v3 = 0;
  v1 = &v3;
  v2 = 0;
  StartupTaskManager.startAllTasks(launchOptions:phase:)(*(Swift::OpaquePointer_optional *)(&v1 - 1), v0);
}

void sub_190B2F6B4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char v17;
  void *v18;

  OUTLINED_FUNCTION_42_2();
  v2 = v1;
  v18 = v3;
  sub_190AC99E0(0, (uint64_t)&unk_1EE1FF8F0);
  OUTLINED_FUNCTION_24();
  v4 = sub_190B37474();
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_66();
    v5 = OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_16();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      OUTLINED_FUNCTION_95_2();
      v6 = OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_131(v6, v7, v8);
      v10 = v9;
      v11 = OUTLINED_FUNCTION_24();
      *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEE9E0];
      v12 = OUTLINED_FUNCTION_24();
      *(_BYTE *)(v12 + 16) = 0;
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        v13 = v12;
        OUTLINED_FUNCTION_66();
        v14 = 0;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
            OUTLINED_FUNCTION_130_0();
          OUTLINED_FUNCTION_92_2();
          v15 = (_QWORD *)OUTLINED_FUNCTION_24();
          v15[2] = v10;
          v15[3] = v13;
          v15[4] = v11;
          v15[5] = v14;
          v15[6] = v2;
          v15[7] = v4;
          OUTLINED_FUNCTION_66();
          OUTLINED_FUNCTION_117_0();
          OUTLINED_FUNCTION_121();
          OUTLINED_FUNCTION_105_0();
          OUTLINED_FUNCTION_74_0();
          OUTLINED_FUNCTION_4_2();
          v14 = v0;
          sub_190B2BDD8(v18, (uint64_t)sub_190B3A004, (uint64_t)v15);
          OUTLINED_FUNCTION_96_0();
          OUTLINED_FUNCTION_51();
          v16 = (_QWORD *)OUTLINED_FUNCTION_24();
          v16[2] = v10;
          v16[3] = v13;
          v16[4] = v4;
          OUTLINED_FUNCTION_121();
          OUTLINED_FUNCTION_105_0();
          OUTLINED_FUNCTION_4_2();
          OUTLINED_FUNCTION_179((uint64_t)v18, (uint64_t)sub_190B3A040);
          OUTLINED_FUNCTION_67_1();
          OUTLINED_FUNCTION_16_4();
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_51();
          OUTLINED_FUNCTION_159();
        }
        while (!v17);
        OUTLINED_FUNCTION_16();
        OUTLINED_FUNCTION_20_0();
        if (*(_QWORD *)(v4 + 16))
        {
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_5_0();
          OUTLINED_FUNCTION_38_0();
          OUTLINED_FUNCTION_54();
LABEL_14:
          swift_release();
          OUTLINED_FUNCTION_9_7();
          return;
        }
      }
      __break(1u);
      goto LABEL_17;
    }
  }
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v4 + 16))
  {
    OUTLINED_FUNCTION_1();
    goto LABEL_14;
  }
LABEL_17:
  __break(1u);
}

void sub_190B2F8F8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;

  OUTLINED_FUNCTION_42_2();
  v2 = v1;
  v18 = v3;
  sub_190AC99E0(0, (uint64_t)&unk_1EE1FF868);
  OUTLINED_FUNCTION_24();
  v4 = sub_190B37734();
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_66();
    v5 = OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_16();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      OUTLINED_FUNCTION_95_2();
      v6 = OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_131(v6, v7, v8);
      v10 = v9;
      v11 = OUTLINED_FUNCTION_24();
      *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEE9E0];
      v12 = OUTLINED_FUNCTION_24();
      *(_BYTE *)(v12 + 16) = 0;
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        v13 = v12;
        OUTLINED_FUNCTION_66();
        v14 = 0;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
            OUTLINED_FUNCTION_130_0();
          OUTLINED_FUNCTION_92_2();
          v15 = (_QWORD *)OUTLINED_FUNCTION_24();
          v15[2] = v10;
          v15[3] = v13;
          v15[4] = v11;
          v15[5] = v14;
          v15[6] = v2;
          v15[7] = v4;
          OUTLINED_FUNCTION_66();
          OUTLINED_FUNCTION_117_0();
          OUTLINED_FUNCTION_121();
          OUTLINED_FUNCTION_105_0();
          OUTLINED_FUNCTION_74_0();
          OUTLINED_FUNCTION_4_2();
          v14 = v0;
          sub_190B2C6C4(v18, sub_190B391D4, v15);
          OUTLINED_FUNCTION_96_0();
          OUTLINED_FUNCTION_51();
          v16 = (_QWORD *)OUTLINED_FUNCTION_24();
          v16[2] = v10;
          v16[3] = v13;
          v16[4] = v4;
          OUTLINED_FUNCTION_121();
          OUTLINED_FUNCTION_105_0();
          OUTLINED_FUNCTION_4_2();
          OUTLINED_FUNCTION_179(v18, (uint64_t)sub_190B391F4);
          OUTLINED_FUNCTION_67_1();
          OUTLINED_FUNCTION_16_4();
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_51();
          OUTLINED_FUNCTION_159();
        }
        while (!v17);
        OUTLINED_FUNCTION_16();
        OUTLINED_FUNCTION_20_0();
        if (*(_QWORD *)(v4 + 16))
        {
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_5_0();
          OUTLINED_FUNCTION_38_0();
          OUTLINED_FUNCTION_54();
LABEL_14:
          swift_release();
          OUTLINED_FUNCTION_9_7();
          return;
        }
      }
      __break(1u);
      goto LABEL_17;
    }
  }
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_20_0();
  if (*(_QWORD *)(v4 + 16))
  {
    OUTLINED_FUNCTION_1();
    goto LABEL_14;
  }
LABEL_17:
  __break(1u);
}

void sub_190B2FB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_126_0();
  v1 = v0;
  sub_190B089F4();
  sub_190BE55E8();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_71();
      OUTLINED_FUNCTION_175();
      sub_190B842B4();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_21();
}

void sub_190B2FBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  _QWORD v18[2];

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_6_3();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v18 - v8;
  OUTLINED_FUNCTION_45_4(v7, (uint64_t)&qword_1ED034BC0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v18 - v11;
  sub_190B39230();
  v13 = sub_190BE55E8();
  v18[0] = v1;
  v18[1] = v13;
  v14 = *(_QWORD *)(v1 + 16);
  if (v14)
  {
    v15 = v18[0] + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v16 = *(_QWORD *)(v3 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v17(v12, v15, v2);
      OUTLINED_FUNCTION_9_3((uint64_t)v12, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
      sub_190B8439C();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      v15 += v16;
      if (!--v14)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    OUTLINED_FUNCTION_9_3((uint64_t)v12, 1);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B2FD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_126_0();
  v1 = v0;
  sub_190BE55E8();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_71();
      OUTLINED_FUNCTION_175();
      sub_190ABE62C();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_21();
}

uint64_t sub_190B2FDD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  sub_190B3953C();
  v2 = sub_190BE55E8();
  v9 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    for (i = 0; i != v3; ++i)
    {
      v5 = *(_QWORD *)(a1 + 8 * i + 32);
      sub_190B845E0(&v8, v5);
    }
    OUTLINED_FUNCTION_20();
    return v9;
  }
  else
  {
    v6 = v2;
    OUTLINED_FUNCTION_20();
  }
  return v6;
}

uint64_t StartupTaskManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_124();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_208();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StartupTaskManager.__deallocating_deinit()
{
  StartupTaskManager.deinit();
  return swift_deallocClassInstance();
}

void sub_190B2FEB8()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  v3 = *(void **)(v0 + 40);
  *(_QWORD *)(v0 + 40) = v1;
  v4 = *(_BYTE *)(v0 + 48);
  *(_BYTE *)(v0 + 48) = v2;
  sub_190ADCF0C(v1, v2);
  sub_190AB7D2C(v3, v4);
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v5 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v5);
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B2FF64()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  v3 = *(void **)(v0 + 40);
  *(_QWORD *)(v0 + 40) = v1;
  v4 = *(_BYTE *)(v0 + 48);
  *(_BYTE *)(v0 + 48) = v2;
  sub_190ADCF0C(v1, v2);
  sub_190AB7D2C(v3, v4);
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v5 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v5);
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B30010()
{
  uint64_t v0;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v0 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v0);
  OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B300A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_1_6();
  v6 = OUTLINED_FUNCTION_52_4();
  sub_190B39604(v6, v7, v8);
  v9 = OUTLINED_FUNCTION_161();
  sub_190B395BC(v9, v10, v11);
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_172(MEMORY[0x1E0DEE9D8]);
  v12 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_157(v12);
  sub_190ADD0C4();
  sub_190B39604(a1, a2, a3);
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_64_1();
}

void sub_190B30160()
{
  uint64_t v0;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v0 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v0);
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B301E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_192();
  v2 = v1;
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_109_0();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_79_2(MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_84_1();
  v5 = swift_allocObject();
  OUTLINED_FUNCTION_59_2(v5);
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B302D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v0 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v0);
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B3035C(void *a1, uint64_t a2, char a3)
{
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_1_6();
  v6 = (void *)OUTLINED_FUNCTION_52_4();
  sub_190B39ABC(v6, v7, v8);
  v9 = (void *)OUTLINED_FUNCTION_161();
  sub_190B39A54(v9, v10, v11);
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_172(MEMORY[0x1E0DEE9D8]);
  v12 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_157(v12);
  sub_190AE4458();
  sub_190B39ABC(a1, a2, a3);
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_64_1();
}

void sub_190B30414()
{
  uint64_t v0;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v0 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v0);
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B3049C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72();
  sub_190B3931C(0);
  v2 = v1;
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_109_0();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_79_2(MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_84_1();
  v5 = swift_allocObject();
  OUTLINED_FUNCTION_59_2(v5);
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B3058C(void *a1, void *a2, char a3)
{
  void *v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_1_6();
  v6 = (void *)OUTLINED_FUNCTION_52_4();
  sub_190B39450(v6, v7, v8);
  v9 = (void *)OUTLINED_FUNCTION_161();
  sub_190B393A8(v9, v10, v11);
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_172(MEMORY[0x1E0DEE9D8]);
  v12 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_157(v12);
  sub_190AE054C();
  sub_190B39450(a1, a2, a3);
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_64_1();
}

void sub_190B30654()
{
  uint64_t v0;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v0 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v0);
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B306DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72();
  sub_190B39664(0);
  v2 = v1;
  OUTLINED_FUNCTION_166_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_109_0();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_79_2(MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_84_1();
  v5 = swift_allocObject();
  OUTLINED_FUNCTION_59_2(v5);
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B307CC()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  v3 = *(void **)(v0 + 40);
  *(_QWORD *)(v0 + 40) = v1;
  v4 = *(_BYTE *)(v0 + 48);
  *(_BYTE *)(v0 + 48) = v2;
  sub_190ADCF0C(v1, v2);
  sub_190AB7D2C(v3, v4);
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v5 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v5);
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B30878()
{
  uint64_t v0;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v0 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v0);
  OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B30910()
{
  uint64_t v0;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_21_2(MEMORY[0x1E0DEE9D8]);
  v0 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_4(v0);
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B30998(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  _QWORD *v17;
  id v18;
  uint64_t v19;

  if (a2)
  {
    if (a2 == 1)
    {
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = a6;
      v13[3] = a7;
      v13[4] = a1;
      sub_190ADCF0C(a1, 1);
      sub_190ADCF0C(a1, 1);
      swift_retain();
      v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
      v15 = swift_release();
      ((void (*)(uint64_t))v14)(v15);
      swift_release();
      sub_190AB67C4(a1, 1);
    }
    else
    {
      if (qword_1ED035648 != -1)
        swift_once();
      if ((void *)qword_1ED035618 != a3)
      {
        if (qword_1ED034E10 != -1)
          swift_once();
        if ((void *)qword_1ED034CE8 != a3
          || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
        {
          if (qword_1ED034CA8 != -1)
            swift_once();
          if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
          {
            v17 = (_QWORD *)swift_allocObject();
            v17[2] = a3;
            v17[3] = a8;
            v17[4] = a9;
            v18 = a3;
            a8 = sub_190ADBA24;
          }
        }
      }
      v19 = swift_retain();
      ((void (*)(uint64_t))a8)(v19);
      swift_release();
    }
  }
  else
  {
    sub_190B337E4((uint64_t)a1, 0, a3, a4, a5);
  }
}

void sub_190B30BB4(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190AC7EA8, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B30E78(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190AC7EA8, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B3113C(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190AC7EA8, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B31400(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  _QWORD *v17;
  id v18;
  uint64_t v19;

  if (a2)
  {
    if (a2 == 1)
    {
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = a6;
      v13[3] = a7;
      v13[4] = a1;
      sub_190ADCF0C(a1, 1);
      sub_190ADCF0C(a1, 1);
      swift_retain();
      v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
      v15 = swift_release();
      ((void (*)(uint64_t))v14)(v15);
      swift_release();
      sub_190AB67C4(a1, 1);
    }
    else
    {
      if (qword_1ED035648 != -1)
        swift_once();
      if ((void *)qword_1ED035618 != a3)
      {
        if (qword_1ED034E10 != -1)
          swift_once();
        if ((void *)qword_1ED034CE8 != a3
          || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
        {
          if (qword_1ED034CA8 != -1)
            swift_once();
          if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
          {
            v17 = (_QWORD *)swift_allocObject();
            v17[2] = a3;
            v17[3] = a8;
            v17[4] = a9;
            v18 = a3;
            a8 = sub_190ADBA24;
          }
        }
      }
      v19 = swift_retain();
      ((void (*)(uint64_t))a8)(v19);
      swift_release();
    }
  }
  else
  {
    sub_190B3387C((uint64_t)a1, 0, a3, a4, a5);
  }
}

void sub_190B3161C(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190ACAE90, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B318E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  void (*v19)();
  uint64_t v20;

  sub_190B39CD4(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B1E078(a1, (uint64_t)v16, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_190B39CF8((uint64_t)v16);
      sub_190B33F34();
    }
    else
    {
      v19 = sub_190ADADE0(a2, a7, a8);
      v19();
      swift_release();
    }
  }
  else
  {
    sub_190B33914(a1, a2, a3, a4);
    sub_190B39CF8((uint64_t)v16);
  }
}

void sub_190B31A20(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190AC7EA8, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B31CE4(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(), uint64_t a10)
{
  _QWORD *v15;
  void (*v16)();
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  _QWORD *v23;
  void (*v24)();
  uint64_t v25;
  void (*v26)();
  _QWORD *v27;
  id v28;
  uint64_t v29;

  if (!a3)
  {
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a5;
    v23[3] = a6;
    v23[4] = a1;
    v23[5] = a2;
    sub_190B39ABC(a1, a2, 0);
    sub_190B39ABC(a1, a2, 0);
    sub_190B39ABC(a1, a2, 0);
    swift_retain();
    v24 = sub_190ADADE0(a4, (void (*)())sub_190B394B0, (uint64_t)v23);
    v25 = swift_release();
    ((void (*)(uint64_t))v24)(v25);
    sub_190B39A68(a1, a2, 0);
    swift_release();
    v18 = a1;
    v19 = a2;
    v20 = 0;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a7;
    v15[3] = a8;
    v15[4] = a1;
    sub_190B39ABC(a1, a2, 1);
    sub_190B39ABC(a1, a2, 1);
    swift_retain();
    v16 = sub_190ADADE0(a4, (void (*)())sub_190B3A410, (uint64_t)v15);
    v17 = swift_release();
    ((void (*)(uint64_t))v16)(v17);
    swift_release();
    v18 = a1;
    v19 = a2;
    v20 = 1;
LABEL_5:
    sub_190B39A68(v18, v19, v20);
    return;
  }
  v26 = a9;
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a4)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a4 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a4 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v27 = (_QWORD *)swift_allocObject();
        v27[2] = a4;
        v27[3] = a9;
        v27[4] = a10;
        v28 = a4;
        v26 = sub_190ADBA24;
      }
    }
  }
  v29 = swift_retain();
  ((void (*)(uint64_t))v26)(v29);
  swift_release();
}

void sub_190B31FAC(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190ACAE90, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B32270(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  void (*v19)();
  uint64_t v20;

  sub_190B3931C(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B1E078(a1, (uint64_t)v16, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_190B39340((uint64_t)v16);
      sub_190B33F34();
    }
    else
    {
      v19 = sub_190ADADE0(a2, a7, a8);
      v19();
      swift_release();
    }
  }
  else
  {
    sub_190B33AC4(a1, a2, a3, a4);
    sub_190B39340((uint64_t)v16);
  }
}

void sub_190B323B0(void *a1, void *a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(), uint64_t a10)
{
  _QWORD *v15;
  void (*v16)();
  uint64_t v17;
  uint64_t v20;
  void (*v21)();
  uint64_t v22;
  void (*v23)();
  _QWORD *v24;
  id v25;
  uint64_t v26;
  _QWORD v27[2];

  if (a3)
  {
    if (a3 == 1)
    {
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = a7;
      v15[3] = a8;
      v15[4] = a1;
      sub_190B39450(a1, a2, 1);
      sub_190B39450(a1, a2, 1);
      swift_retain();
      v16 = sub_190ADADE0(a4, (void (*)())sub_190B3A410, (uint64_t)v15);
      v17 = swift_release();
      ((void (*)(uint64_t))v16)(v17);
      swift_release();
      sub_190B393BC(a1, a2, 1);
    }
    else
    {
      v23 = a9;
      if (qword_1ED035648 != -1)
        swift_once();
      if ((void *)qword_1ED035618 != a4)
      {
        if (qword_1ED034E10 != -1)
          swift_once();
        if ((void *)qword_1ED034CE8 != a4
          || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
        {
          if (qword_1ED034CA8 != -1)
            swift_once();
          if ((void *)qword_1ED034C98 != a4 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
          {
            v24 = (_QWORD *)swift_allocObject();
            v24[2] = a4;
            v24[3] = a9;
            v24[4] = a10;
            v25 = a4;
            v23 = sub_190ADBA24;
          }
        }
      }
      v26 = swift_retain();
      ((void (*)(uint64_t))v23)(v26);
      swift_release();
    }
  }
  else
  {
    v27[0] = a1;
    v27[1] = a2;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a5;
    *(_QWORD *)(v20 + 24) = a6;
    sub_190B393E0((uint64_t)v27, v20 + 32);
    sub_190B39450(a1, a2, 0);
    sub_190B39450(a1, a2, 0);
    sub_190B39450(a1, a2, 0);
    swift_retain();
    v21 = sub_190ADADE0(a4, (void (*)())sub_190B394B0, v20);
    v22 = swift_release();
    ((void (*)(uint64_t))v21)(v22);
    sub_190B393BC(a1, a2, 0);
    swift_release();
    sub_190B393BC(a1, a2, 0);
  }
}

void sub_190B326AC(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190AC7EA8, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B32970(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  void (*v19)();
  uint64_t v20;

  sub_190B39664(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B1E078(a1, (uint64_t)v16, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_190B396F4((uint64_t)v16);
      sub_190B33F34();
    }
    else
    {
      v19 = sub_190ADADE0(a2, a7, a8);
      v19();
      swift_release();
    }
  }
  else
  {
    sub_190B33C78(a1, a2, a3, a4);
    sub_190B396F4((uint64_t)v16);
  }
}

void sub_190B32AB0(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190AC7EA8, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    swift_release();
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B32D74(uint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(), uint64_t a10)
{
  _QWORD *v15;
  void (*v16)();
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _QWORD *v23;
  void (*v24)();
  uint64_t v25;
  void (*v26)();
  _QWORD *v27;
  id v28;
  uint64_t v29;

  if (!a3)
  {
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a5;
    v23[3] = a6;
    v23[4] = a1;
    v23[5] = a2;
    sub_190B39604(a1, a2, 0);
    sub_190B39604(a1, a2, 0);
    sub_190B39604(a1, a2, 0);
    swift_retain();
    v24 = sub_190ADADE0(a4, (void (*)())sub_190B394B0, (uint64_t)v23);
    v25 = swift_release();
    ((void (*)(uint64_t))v24)(v25);
    sub_190B395D0(a1, a2, 0);
    swift_release();
    v18 = a1;
    v19 = a2;
    v20 = 0;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a7;
    v15[3] = a8;
    v15[4] = a1;
    sub_190B39604(a1, a2, 1);
    sub_190B39604(a1, a2, 1);
    swift_retain();
    v16 = sub_190ADADE0(a4, (void (*)())sub_190B3A410, (uint64_t)v15);
    v17 = swift_release();
    ((void (*)(uint64_t))v16)(v17);
    swift_release();
    v18 = a1;
    v19 = a2;
    v20 = 1;
LABEL_5:
    sub_190B395D0(v18, v19, v20);
    return;
  }
  v26 = a9;
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a4)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a4 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a4 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v27 = (_QWORD *)swift_allocObject();
        v27[2] = a4;
        v27[3] = a9;
        v27[4] = a10;
        v28 = a4;
        v26 = sub_190ADBA24;
      }
    }
  }
  v29 = swift_retain();
  ((void (*)(uint64_t))v26)(v29);
  swift_release();
}

void sub_190B3303C(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  _QWORD *v17;
  id v18;
  uint64_t v19;

  if (a2)
  {
    if (a2 == 1)
    {
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = a6;
      v13[3] = a7;
      v13[4] = a1;
      sub_190ADCF0C(a1, 1);
      sub_190ADCF0C(a1, 1);
      swift_retain();
      v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
      v15 = swift_release();
      ((void (*)(uint64_t))v14)(v15);
      swift_release();
      sub_190AB67C4(a1, 1);
    }
    else
    {
      if (qword_1ED035648 != -1)
        swift_once();
      if ((void *)qword_1ED035618 != a3)
      {
        if (qword_1ED034E10 != -1)
          swift_once();
        if ((void *)qword_1ED034CE8 != a3
          || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
        {
          if (qword_1ED034CA8 != -1)
            swift_once();
          if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
          {
            v17 = (_QWORD *)swift_allocObject();
            v17[2] = a3;
            v17[3] = a8;
            v17[4] = a9;
            v18 = a3;
            a8 = sub_190ADBA24;
          }
        }
      }
      v19 = swift_retain();
      ((void (*)(uint64_t))a8)(v19);
      swift_release();
    }
  }
  else
  {
    sub_190B33E2C((uint64_t)a1, 0, a3, a4, a5);
  }
}

void sub_190B33258(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  char v18;
  _QWORD *v21;
  void (*v22)();
  uint64_t v23;
  uint64_t (*v24)(void);
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (!a2)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a4;
    v21[3] = a5;
    v21[4] = a1;
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    sub_190ACACF0(a1, 0);
    swift_retain();
    v22 = sub_190ADADE0(a3, (void (*)())sub_190AC7EA8, (uint64_t)v21);
    v23 = swift_release();
    ((void (*)(uint64_t))v22)(v23);
    swift_release();
    v24 = MEMORY[0x1E0DEEB08];
    sub_190AB03DC(a1, 0, (void (*)(void))MEMORY[0x1E0DEEB08]);
    v17 = a1;
    v18 = 0;
    v16 = (void (*)(void))v24;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190ACACF0(a1, 1);
    sub_190ACACF0(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190B3A410, (uint64_t)v13);
    v15 = swift_release();
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v16 = (void (*)(void))MEMORY[0x1E0DEEB08];
    v17 = a1;
    v18 = 1;
LABEL_5:
    sub_190AB03DC(v17, v18, v16);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v26 = (_QWORD *)swift_allocObject();
        v26[2] = a3;
        v26[3] = a8;
        v26[4] = a9;
        v27 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v28 = swift_retain();
  ((void (*)(uint64_t))a8)(v28);
  swift_release();
}

void sub_190B3351C(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(), uint64_t a9)
{
  _QWORD *v13;
  void (*v14)();
  uint64_t v15;
  uint64_t (*v16)(void);
  void *v17;
  char v18;
  void (*v19)(void);
  _QWORD *v22;
  void (*v23)();
  uint64_t v24;
  void (*v25)(void);
  _QWORD *v27;
  id v28;
  uint64_t v29;

  if (!a2)
  {
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = a4;
    v22[3] = a5;
    v22[4] = a1;
    sub_190B03650(a1, 0);
    sub_190B03650(a1, 0);
    sub_190B03650(a1, 0);
    swift_retain();
    v23 = sub_190ADADE0(a3, (void (*)())sub_190ACAE90, (uint64_t)v22);
    v24 = swift_release();
    v25 = (void (*)(void))MEMORY[0x1E0DEEE30];
    ((void (*)(uint64_t))v23)(v24);
    swift_release();
    sub_190AB03DC(a1, 0, v25);
    v17 = a1;
    v18 = 0;
    v19 = v25;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a6;
    v13[3] = a7;
    v13[4] = a1;
    sub_190B03650(a1, 1);
    sub_190B03650(a1, 1);
    swift_retain();
    v14 = sub_190ADADE0(a3, (void (*)())sub_190ADF5DC, (uint64_t)v13);
    v15 = swift_release();
    v16 = MEMORY[0x1E0DEEE30];
    ((void (*)(uint64_t))v14)(v15);
    swift_release();
    v17 = a1;
    v18 = 1;
    v19 = (void (*)(void))v16;
LABEL_5:
    sub_190AB03DC(v17, v18, v19);
    return;
  }
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a3)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v27 = (_QWORD *)swift_allocObject();
        v27[2] = a3;
        v27[3] = a8;
        v27[4] = a9;
        v28 = a3;
        a8 = sub_190ADBA24;
      }
    }
  }
  v29 = swift_retain();
  ((void (*)(uint64_t))a8)(v29);
  swift_release();
}

uint64_t sub_190B337E4(uint64_t result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  void (*v10)();
  uint64_t v11;

  if (a2)
  {
    __break(1u);
  }
  else
  {
    v8 = result & 1;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a4;
    *(_QWORD *)(v9 + 24) = a5;
    *(_BYTE *)(v9 + 32) = v8;
    swift_retain();
    v10 = sub_190ADADE0(a3, (void (*)())sub_190B3A0BC, v9);
    v11 = swift_release();
    ((void (*)(uint64_t))v10)(v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_190B3387C(uint64_t result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  void (*v10)();
  uint64_t v11;

  if (a2)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a4;
    *(_QWORD *)(v9 + 24) = a5;
    *(_BYTE *)(v9 + 32) = v8;
    swift_retain();
    v10 = sub_190ADADE0(a3, (void (*)())sub_190B3A0BC, v9);
    v11 = swift_release();
    ((void (*)(uint64_t))v10)(v11);
    return swift_release();
  }
  return result;
}

void sub_190B33914(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)();
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v22 = a2;
  sub_190B39CD4(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AuthToken();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v21 - v15;
  sub_190B1E078(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_190B39CD4);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_190B39CF8((uint64_t)v9);
    __break(1u);
  }
  else
  {
    sub_190AE43C0((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    sub_190B1E078((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a3;
    *(_QWORD *)(v18 + 24) = a4;
    sub_190AE43C0((uint64_t)v14, v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    swift_retain();
    v19 = sub_190ADADE0(v22, (void (*)())sub_190B39D08, v18);
    v20 = swift_release();
    ((void (*)(uint64_t))v19)(v20);
    swift_release();
    sub_190AE4930((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
  }
}

void sub_190B33AC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  unint64_t v18;
  uint64_t v19;
  void (*v20)();
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v23 = a2;
  sub_190B3931C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190BE428C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - v15;
  sub_190B1E078(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_190B3931C);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_190B39340((uint64_t)v9);
    __break(1u);
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v17(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a3;
    *(_QWORD *)(v19 + 24) = a4;
    v17((char *)(v19 + v18), v14, v10);
    swift_retain();
    v20 = sub_190ADADE0(v23, (void (*)())sub_190B39358, v19);
    v21 = swift_release();
    ((void (*)(uint64_t))v20)(v21);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

void sub_190B33C78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  unint64_t v18;
  uint64_t v19;
  void (*v20)();
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v23 = a2;
  sub_190B39664(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190BE4628();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - v15;
  sub_190B1E078(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_190B39664);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_190B396F4((uint64_t)v9);
    __break(1u);
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v17(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a3;
    *(_QWORD *)(v19 + 24) = a4;
    v17((char *)(v19 + v18), v14, v10);
    swift_retain();
    v20 = sub_190ADADE0(v23, (void (*)())sub_190B3970C, v19);
    v21 = swift_release();
    ((void (*)(uint64_t))v20)(v21);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

uint64_t sub_190B33E2C(uint64_t result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  void (*v10)();
  uint64_t v11;

  if (a2)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a4;
    *(_QWORD *)(v9 + 24) = a5;
    *(_BYTE *)(v9 + 32) = v8 & 1;
    swift_retain();
    v10 = sub_190ADADE0(a3, (void (*)())sub_190B390D0, v9);
    v11 = swift_release();
    ((void (*)(uint64_t))v10)(v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_190B33EC8(uint64_t (*a1)(char *), uint64_t a2, char a3)
{
  char v4;

  v4 = a3;
  return a1(&v4);
}

uint64_t sub_190B33EFC(uint64_t (*a1)(char *), uint64_t a2, char a3)
{
  char v4;

  v4 = a3 & 1;
  return a1(&v4);
}

void sub_190B33F34()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void **);
  void (*v3)(void **);
  void (*v4)();
  void (*v5)();
  void (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  void *v19;
  _QWORD *v20;
  id v21;
  void (*v22)();
  uint64_t v23;
  _BYTE v24[80];
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_72();
  v25 = v0;
  v26 = v1;
  v3 = v2;
  v5 = v4;
  v7 = (uint64_t (*)(_QWORD))v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v6(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v16);
  v18 = (void **)&v24[-v17];
  sub_190B1E078(v15, (uint64_t)&v24[-v17], v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *v18;
    v20 = (_QWORD *)OUTLINED_FUNCTION_24();
    v20[2] = v11;
    v20[3] = v9;
    v20[4] = v19;
    OUTLINED_FUNCTION_8();
    v21 = v19;
    v22 = OUTLINED_FUNCTION_134(v13, v5);
    v23 = OUTLINED_FUNCTION_16_4();
    ((void (*)(uint64_t))v22)(v23);
    OUTLINED_FUNCTION_2();

  }
  else
  {
    v3(v18);
    __break(1u);
  }
}

void (*sub_190B34030(void (*result)(), char a2, void *a3, uint64_t a4, uint64_t a5))()
{
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  _QWORD *v13;
  id v14;

  if (a2)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = result & 1;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a4;
    *(_QWORD *)(v10 + 24) = a5;
    *(_BYTE *)(v10 + 32) = v9;
    sub_190ADD0B0(v8, 0);
    v11 = qword_1ED035648;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = sub_190B3A3E0;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v13 = (_QWORD *)swift_allocObject();
          v13[2] = a3;
          v13[3] = sub_190B3A3E0;
          v13[4] = v10;
          v14 = a3;
          return sub_190B3A408;
        }
      }
    }
    return (void (*)())v12;
  }
  return result;
}

void (*sub_190B341C4(void (*result)(), char a2, void *a3, uint64_t a4, uint64_t a5))()
{
  void (*v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  _QWORD *v12;
  id v13;

  if (a2)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a4;
    *(_QWORD *)(v9 + 24) = a5;
    *(_BYTE *)(v9 + 32) = (_BYTE)v8;
    sub_190ADD0B0(v8, 0);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A3E0;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A3E0;
          v12[4] = v9;
          v13 = a3;
          return sub_190B3A408;
        }
      }
    }
    return (void (*)())v11;
  }
  return result;
}

void sub_190B34354(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v21 = a2;
  sub_190B3A188(0, (uint64_t)&unk_1ED02F270);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for AuthToken();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - v15;
  sub_190B39688(a1, (uint64_t)v9, (uint64_t)&unk_1ED02F270);
  sub_190B39CD4(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v17) == 1)
  {
    sub_190B396C8((uint64_t)v9, (uint64_t)&unk_1ED02F270);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_190AE43C0((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
      sub_190B1E078((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
      v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = a3;
      *(_QWORD *)(v19 + 24) = a4;
      sub_190AE43C0((uint64_t)v14, v19 + v18, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
      swift_retain();
      sub_190ADADE0(v21, (void (*)())sub_190B39D08, v19);
      swift_release();
      sub_190AE4930((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
      return;
    }
    sub_190B39CF8((uint64_t)v9);
  }
  __break(1u);
}

void (*sub_190B34554(void (*result)(), uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6))()
{
  void (*v10)();
  _QWORD *v11;
  void (*v12)();

  if (a3)
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a5;
    v11[3] = a6;
    v11[4] = v10;
    v11[5] = a2;
    sub_190B39AA8(v10, a2, 0);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    v12 = sub_190ADADE0(a4, (void (*)())sub_190B3A3DC, (uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v12;
  }
  return result;
}

void sub_190B34620(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v20 = a3;
  v21 = a2;
  sub_190B3A188(0, (uint64_t)&unk_1EE1FEE18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  v9 = sub_190BE428C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - v14;
  sub_190B39688(a1, (uint64_t)v8, (uint64_t)&unk_1EE1FEE18);
  sub_190B3931C(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16) == 1)
  {
    sub_190B396C8((uint64_t)v8, (uint64_t)&unk_1EE1FEE18);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v17(v15, v8, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v20;
      *(_QWORD *)(v19 + 24) = a4;
      v17((char *)(v19 + v18), v13, v9);
      swift_retain();
      sub_190ADADE0(v21, (void (*)())sub_190B39358, v19);
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return;
    }
    sub_190B39340((uint64_t)v8);
  }
  __break(1u);
}

void sub_190B34828(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v20 = a3;
  v21 = a2;
  sub_190B3A188(0, (uint64_t)&unk_1EE1FF878);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  v9 = sub_190BE4628();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - v14;
  sub_190B39688(a1, (uint64_t)v8, (uint64_t)&unk_1EE1FF878);
  sub_190B39664(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16) == 1)
  {
    sub_190B396C8((uint64_t)v8, (uint64_t)&unk_1EE1FF878);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v17(v15, v8, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v20;
      *(_QWORD *)(v19 + 24) = a4;
      v17((char *)(v19 + v18), v13, v9);
      swift_retain();
      sub_190ADADE0(v21, (void (*)())sub_190B3970C, v19);
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return;
    }
    sub_190B396F4((uint64_t)v8);
  }
  __break(1u);
}

void (*sub_190B34A30(void (*result)(), char a2, void *a3, uint64_t a4, uint64_t a5))()
{
  void (*v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  _QWORD *v12;
  id v13;

  if (a2)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a4;
    *(_QWORD *)(v9 + 24) = a5;
    *(_BYTE *)(v9 + 32) = v8 & 1;
    sub_190ADD0B0(v8, 0);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A428;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A428;
          v12[4] = v9;
          v13 = a3;
          return sub_190B3A408;
        }
      }
    }
    return (void (*)())v11;
  }
  return result;
}

void sub_190B34BC4(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_73_0(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_10_6();
}

void *sub_190B34BE0(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ADD0B0(v8, 1);
    sub_190ADD0B0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB7D2C(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B34D8C(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B34F38(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B350E4(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B35290(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B3543C(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ADD0B0(v8, 1);
    sub_190ADD0B0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB7D2C(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B355E8(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190B35794(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  id v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;

  sub_190B3A188(0, (uint64_t)&unk_1ED02F270);
  MEMORY[0x1E0C80A78](v8);
  v10 = (void **)((char *)&v17 - v9);
  sub_190B39688(a1, (uint64_t)&v17 - v9, (uint64_t)&unk_1ED02F270);
  sub_190B39CD4(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_190B396C8((uint64_t)v10, (uint64_t)&unk_1ED02F270);
LABEL_18:
    __break(1u);
    return;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_190B39CF8((uint64_t)v10);
    goto LABEL_18;
  }
  v12 = *v10;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = v12;
  swift_retain();
  v14 = v12;
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a2)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a2 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a2 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v15 = (_QWORD *)swift_allocObject();
        v15[2] = a2;
        v15[3] = sub_190B3A40C;
        v15[4] = v13;
        v16 = a2;
      }
    }
  }

}

void *sub_190B359F0(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B35B9C(void *result, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;

  if (a3 == 1)
  {
    v10 = result;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a5;
    v11[3] = a6;
    v11[4] = v10;
    sub_190B39AA8(v10, a2, 1);
    sub_190B39AA8(v10, a2, 1);
    v12 = qword_1ED035648;
    swift_retain();
    if (v12 != -1)
      swift_once();
    v13 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a4)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a4 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a4 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = a4;
          v14[3] = sub_190B3A40C;
          v14[4] = v11;
          v15 = a4;
          v13 = sub_190B3A408;
        }
      }
    }
    sub_190B39A54(v10, a2, 1);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B35D60(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190B35F0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  id v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;

  sub_190B3A188(0, (uint64_t)&unk_1EE1FEE18);
  MEMORY[0x1E0C80A78](v8);
  v10 = (void **)((char *)&v17 - v9);
  sub_190B39688(a1, (uint64_t)&v17 - v9, (uint64_t)&unk_1EE1FEE18);
  sub_190B3931C(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_190B396C8((uint64_t)v10, (uint64_t)&unk_1EE1FEE18);
LABEL_18:
    __break(1u);
    return;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_190B39340((uint64_t)v10);
    goto LABEL_18;
  }
  v12 = *v10;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = v12;
  swift_retain();
  v14 = v12;
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a2)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a2 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a2 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v15 = (_QWORD *)swift_allocObject();
        v15[2] = a2;
        v15[3] = sub_190B3A40C;
        v15[4] = v13;
        v16 = a2;
      }
    }
  }

}

void *sub_190B36168(void *result, void *a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;

  if (a3 == 1)
  {
    v10 = result;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a5;
    v11[3] = a6;
    v11[4] = v10;
    sub_190B3943C(v10, a2, 1);
    sub_190B3943C(v10, a2, 1);
    v12 = qword_1ED035648;
    swift_retain();
    if (v12 != -1)
      swift_once();
    v13 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a4)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a4 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a4 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = a4;
          v14[3] = sub_190B3A40C;
          v14[4] = v11;
          v15 = a4;
          v13 = sub_190B3A408;
        }
      }
    }
    sub_190B393A8(v10, a2, 1);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B3632C(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190B364D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  id v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;

  sub_190B3A188(0, (uint64_t)&unk_1EE1FF878);
  MEMORY[0x1E0C80A78](v8);
  v10 = (void **)((char *)&v17 - v9);
  sub_190B39688(a1, (uint64_t)&v17 - v9, (uint64_t)&unk_1EE1FF878);
  sub_190B39664(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_190B396C8((uint64_t)v10, (uint64_t)&unk_1EE1FF878);
LABEL_18:
    __break(1u);
    return;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_190B396F4((uint64_t)v10);
    goto LABEL_18;
  }
  v12 = *v10;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = v12;
  swift_retain();
  v14 = v12;
  if (qword_1ED035648 != -1)
    swift_once();
  if ((void *)qword_1ED035618 != a2)
  {
    if (qword_1ED034E10 != -1)
      swift_once();
    if ((void *)qword_1ED034CE8 != a2 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      if (qword_1ED034CA8 != -1)
        swift_once();
      if ((void *)qword_1ED034C98 != a2 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        v15 = (_QWORD *)swift_allocObject();
        v15[2] = a2;
        v15[3] = sub_190B3A40C;
        v15[4] = v13;
        v16 = a2;
      }
    }
  }

}

void *sub_190B36734(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B368E0(void *result, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;

  if (a3 == 1)
  {
    v10 = (uint64_t)result;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a5;
    v11[3] = a6;
    v11[4] = v10;
    sub_190B395F0(v10, a2, 1);
    sub_190B395F0(v10, a2, 1);
    v12 = qword_1ED035648;
    swift_retain();
    if (v12 != -1)
      swift_once();
    v13 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a4)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a4 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a4 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v14 = (_QWORD *)swift_allocObject();
          v14[2] = a4;
          v14[3] = sub_190B3A40C;
          v14[4] = v11;
          v15 = a4;
          v13 = sub_190B3A408;
        }
      }
    }
    sub_190B395BC(v10, a2, 1);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B36AA4(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ADD0B0(v8, 1);
    sub_190ADD0B0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB7D2C(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B36C50(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190ACACD0(v8, 1);
    sub_190ACACD0(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190B3A40C;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190B3A40C;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190B3A408;
        }
      }
    }
    sub_190AB03B4(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_190B36DFC(void *result, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;

  if (a2 == 1)
  {
    v8 = result;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a5;
    v9[4] = v8;
    sub_190B38FC4(v8, 1);
    sub_190B38FC4(v8, 1);
    v10 = qword_1ED035648;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_190AE1804;
    if ((void *)qword_1ED035618 != a3)
    {
      if (qword_1ED034E10 != -1)
        swift_once();
      if ((void *)qword_1ED034CE8 != a3 || (objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
      {
        if (qword_1ED034CA8 != -1)
          swift_once();
        if ((void *)qword_1ED034C98 != a3 || objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          v12 = (_QWORD *)swift_allocObject();
          v12[2] = a3;
          v12[3] = sub_190AE1804;
          v12[4] = v9;
          v13 = a3;
          v11 = sub_190ADBA24;
        }
      }
    }
    sub_190AE447C(v8, 1);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190B36FA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *);
  _QWORD v13[2];
  char v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_15_0();
  v15 = v0;
  v16 = v1;
  v3 = v2;
  v13[0] = v4;
  v13[1] = v5;
  v14 = v6;
  OUTLINED_FUNCTION_211(v7);
  if (!(v3 >> 62))
  {
    v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_74();
    if (v8)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_72_1();
  result = OUTLINED_FUNCTION_113();
  v8 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v8 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_196();
      v11 = *(_QWORD *)(v3 + 8 * v10 + 32);
      OUTLINED_FUNCTION_34_1();
      ++v10;
      v12 = *(void (**)(_QWORD *))(v11 + 16);
      OUTLINED_FUNCTION_1();
      v12(v13);
      OUTLINED_FUNCTION_16_4();
      OUTLINED_FUNCTION_2();
    }
    while (v8 != v10);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_190B37070(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  OUTLINED_FUNCTION_211(a1);
  if (!(a2 >> 62))
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_74();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_72_1();
  result = OUTLINED_FUNCTION_113();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_196();
      v8 = *(_QWORD *)(a2 + 8 * v7 + 32);
      OUTLINED_FUNCTION_121();
      ++v7;
      v9 = *(void (**)(uint64_t))(v8 + 16);
      OUTLINED_FUNCTION_1();
      v9(a3);
      OUTLINED_FUNCTION_38_0();
      OUTLINED_FUNCTION_2();
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_190B37134()
{
  sub_190ADBEE0((void (*)(void))sub_190B3A0C8);
}

void sub_190B37194()
{
  sub_190ADBEE0((void (*)(void))sub_190B39224);
}

uint64_t sub_190B371F8(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    swift_beginAccess();
    sub_190B1D638();
    swift_endAccess();
    result = swift_beginAccess();
    v9 = *(_QWORD *)(*a2 + 16);
    if (a5 >> 62)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v10 = sub_190BE5EAC();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v9 == v10)
    {
      result = swift_beginAccess();
      *a1 = 1;
      if (v9 < 0)
      {
        __break(1u);
      }
      else
      {
        sub_190B2B61C(0, v9, a2);
        sub_190AE03F8();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_190B37334(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    swift_beginAccess();
    sub_190B1D688();
    swift_endAccess();
    result = swift_beginAccess();
    v9 = *(_QWORD *)(*a2 + 16);
    if (a5 >> 62)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v10 = sub_190BE5EAC();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v9 == v10)
    {
      result = swift_beginAccess();
      *a1 = 1;
      if (v9 < 0)
      {
        __break(1u);
      }
      else
      {
        sub_190B2B75C(0, v9, a2);
        sub_190AE03F8();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_190B37474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v9[6];

  v1 = v0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  v2 = (uint64_t *)(v0 + 16);
  *(_QWORD *)v9 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  UnfairLock.init(options:)(v9);
  v4 = v3;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_190AC99E0(0, (uint64_t)&unk_1EE1FF908);
  v5 = swift_allocObject();
  sub_190AC99E0(0, (uint64_t)&unk_1EE1FF910);
  swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_190AC8364(v4);
  sub_190AC99E0(0, (uint64_t)&unk_1EE1FF918);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  sub_190AC97F8();
  v7 = v6;
  swift_unownedRetainStrong();
  *(_QWORD *)(v1 + 24) = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v2 = v5;
  swift_release();
  return v1;
}

void sub_190B37624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_126_0();
  a19 = v21;
  a20 = v22;
  *(_QWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 16) = 0;
  a10 = 0;
  type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_24();
  UnfairLock.init(options:)((int *)&a10);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  v23 = swift_release();
  OUTLINED_FUNCTION_18_8(v23, (uint64_t)&unk_1ED02F2F0);
  v24 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_18_8(v24, (uint64_t)&unk_1ED02F2C8);
  OUTLINED_FUNCTION_24();
  v25 = OUTLINED_FUNCTION_97_2();
  v26 = sub_190AC8364(v25);
  *(_QWORD *)(v24 + 16) = v26;
  OUTLINED_FUNCTION_18_8(v26, (uint64_t)&unk_1ED02F220);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_34_1();
  sub_190AC97F8();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_21();
}

uint64_t sub_190B37734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v9[6];

  v1 = v0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  v2 = (uint64_t *)(v0 + 16);
  *(_QWORD *)v9 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  UnfairLock.init(options:)(v9);
  v4 = v3;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_190AC99E0(0, (uint64_t)&qword_1ED031E10);
  v5 = swift_allocObject();
  sub_190AC99E0(0, (uint64_t)&unk_1ED031E08);
  swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_190AC8364(v4);
  sub_190AC99E0(0, (uint64_t)&unk_1EE1FF870);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  sub_190AC97F8();
  v7 = v6;
  swift_unownedRetainStrong();
  *(_QWORD *)(v1 + 24) = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v2 = v5;
  swift_release();
  return v1;
}

uint64_t sub_190B378E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v4 = (uint64_t *)(v1 + 16);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_190ACF6F0(0, &qword_1EE1FF8D8, (uint64_t)&type metadata for RemoteNotificationFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  v5 = swift_allocObject();
  sub_190ACF6F0(0, &qword_1EE1FF8E0, (uint64_t)&type metadata for RemoteNotificationFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_190AC8364(a1);
  sub_190ACF6F0(0, &qword_1EE1FF8E8, (uint64_t)&type metadata for RemoteNotificationFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for PromiseWeakResolver);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  sub_190AC97F8();
  v7 = v6;
  swift_unownedRetainStrong();
  *(_QWORD *)(v2 + 24) = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v4 = v5;
  swift_release();
  return v2;
}

void sub_190B37A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_23_8();
  swift_unownedRetain();
  swift_unownedRetain();
  v0 = swift_release();
  OUTLINED_FUNCTION_18_8(v0, (uint64_t)&qword_1ED02F2E8);
  v1 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_18_8(v1, (uint64_t)&unk_1ED02F2C0);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_97_2();
  v3 = sub_190AC8364(v2);
  *(_QWORD *)(v1 + 16) = v3;
  OUTLINED_FUNCTION_18_8(v3, (uint64_t)&unk_1ED02F218);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_34_1();
  sub_190AC97F8();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_21();
}

void sub_190B37B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_23_8();
  swift_unownedRetain();
  swift_unownedRetain();
  v0 = swift_release();
  OUTLINED_FUNCTION_18_8(v0, (uint64_t)&unk_1ED02F2D8);
  v1 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_18_8(v1, (uint64_t)&unk_1ED02F2B8);
  OUTLINED_FUNCTION_181();
  v2 = OUTLINED_FUNCTION_97_2();
  sub_190B27C9C(v2);
  *(_QWORD *)(v1 + 16) = v3;
  OUTLINED_FUNCTION_18_8(v3, (uint64_t)&unk_1ED02F210);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_34_1();
  sub_190AC97F8();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_21();
}

void sub_190B37C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_23_8();
  swift_unownedRetain();
  swift_unownedRetain();
  v0 = swift_release();
  OUTLINED_FUNCTION_18_8(v0, (uint64_t)&unk_1EE1FEE68);
  v1 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_18_8(v1, (uint64_t)&unk_1EE1FEE50);
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_97_2();
  v3 = sub_190B27CB0(v2);
  *(_QWORD *)(v1 + 16) = v3;
  OUTLINED_FUNCTION_18_8(v3, (uint64_t)&unk_1EE1FEE08);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_34_1();
  sub_190AC97F8();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_21();
}

void sub_190B37CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_23_8();
  swift_unownedRetain();
  swift_unownedRetain();
  v0 = swift_release();
  OUTLINED_FUNCTION_136(v0, &qword_1ED02F2D0, v1, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  v2 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_136(v2, &qword_1ED02F2B0, v3, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_24();
  v4 = OUTLINED_FUNCTION_97_2();
  v5 = sub_190AC8364(v4);
  *(_QWORD *)(v2 + 16) = v5;
  OUTLINED_FUNCTION_136(v5, &qword_1EE1FEE00, v6, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for PromiseWeakResolver);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_34_1();
  sub_190AC97F8();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_21();
}

void sub_190B37DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_23_8();
  swift_unownedRetain();
  swift_unownedRetain();
  v0 = swift_release();
  OUTLINED_FUNCTION_18_8(v0, (uint64_t)&unk_1EE1FEE60);
  v1 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_18_8(v1, (uint64_t)&unk_1EE1FEE48);
  OUTLINED_FUNCTION_181();
  v2 = OUTLINED_FUNCTION_97_2();
  sub_190B27CCC(v2);
  *(_QWORD *)(v1 + 16) = v3;
  OUTLINED_FUNCTION_18_8(v3, (uint64_t)&unk_1EE1FEDF8);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_34_1();
  sub_190AC97F8();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_21();
}

uint64_t sub_190B37E84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v4 = (uint64_t *)(v1 + 16);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_190B3A188(0, (uint64_t)&unk_1EE1FF8B0);
  v5 = swift_allocObject();
  sub_190B3A188(0, (uint64_t)&unk_1EE1FF8B8);
  swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_190AC8364(a1);
  sub_190B3A188(0, (uint64_t)&unk_1EE1FF8C0);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  sub_190AC97F8();
  v7 = v6;
  swift_unownedRetainStrong();
  *(_QWORD *)(v2 + 24) = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v4 = v5;
  swift_release();
  return v2;
}

uint64_t sub_190B37FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v4 = (uint64_t *)(v1 + 16);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_190B3A188(0, (uint64_t)&unk_1EE1FF888);
  v5 = swift_allocObject();
  sub_190B3A188(0, (uint64_t)&unk_1EE1FF890);
  swift_allocObject();
  sub_190B27D34(a1);
  *(_QWORD *)(v5 + 16) = v6;
  sub_190B3A188(0, (uint64_t)&unk_1EE1FF898);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  sub_190AC97F8();
  v8 = v7;
  swift_unownedRetainStrong();
  *(_QWORD *)(v2 + 24) = v8;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v4 = v5;
  swift_release();
  return v2;
}

uint64_t sub_190B38164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v4 = (uint64_t *)(v1 + 16);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_190ACF6F0(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  v5 = swift_allocObject();
  sub_190ACF6F0(0, &qword_1ED031E00, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_190AC8364(a1);
  sub_190ACF6F0(0, (unint64_t *)&unk_1EE2002B0, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for PromiseWeakResolver);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  sub_190AC97F8();
  v7 = v6;
  swift_unownedRetainStrong();
  *(_QWORD *)(v2 + 24) = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v4 = v5;
  swift_release();
  return v2;
}

uint64_t method lookup function for StartupTaskManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StartupTaskManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t storeEnumTagSinglePayload for StartupTaskManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B38334 + 4 * byte_190BE93AB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B38368 + 4 * byte_190BE93A6[v4]))();
}

uint64_t sub_190B38368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B38370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B38378);
  return result;
}

uint64_t sub_190B38384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B3838CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B38390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B38398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartupTaskManager.State()
{
  return &type metadata for StartupTaskManager.State;
}

void sub_190B383B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_0();
}

uint64_t assignWithCopy for StartupTaskManager.DeferredTasksByGroupKey(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for StartupTaskManager.DeferredTasksByGroupKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartupTaskManager.DeferredTasksByGroupKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartupTaskManager.DeferredTasksByGroupKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartupTaskManager.DeferredTasksByGroupKey()
{
  return &type metadata for StartupTaskManager.DeferredTasksByGroupKey;
}

unint64_t sub_190B3850C()
{
  unint64_t result;

  result = qword_1EE1FF850;
  if (!qword_1EE1FF850)
  {
    result = MEMORY[0x194016EF8](&unk_190BE94A0, &type metadata for StartupTaskManager.State);
    atomic_store(result, (unint64_t *)&qword_1EE1FF850);
  }
  return result;
}

void sub_190B38548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t isStackAllocationSafe;
  char v20;
  unint64_t v21;
  void *v22;
  _QWORD v23[12];
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_72();
  v2 = v1;
  v25 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(v1 + 16))
  {
    v23[11] = v0;
    v3 = *(_QWORD *)(v0 + 16);
    if (v3)
    {
      v23[0] = v0 + 32;
      OUTLINED_FUNCTION_71();
      v4 = 0;
      do
      {
        v5 = (uint64_t *)(v23[0] + 16 * v4);
        v7 = *v5;
        v6 = v5[1];
        ++v4;
        sub_190BE62FC();
        OUTLINED_FUNCTION_188();
        sub_190BE50B4();
        OUTLINED_FUNCTION_81();
        v8 = sub_190BE6314();
        v9 = -1 << *(_BYTE *)(v2 + 32);
        v10 = v8 & ~v9;
        OUTLINED_FUNCTION_214();
        if ((v11 & 1) != 0)
        {
          v12 = *(_QWORD *)(v2 + 48);
          v13 = (_QWORD *)(v12 + 16 * v10);
          v14 = *v13 == v7 && v13[1] == v6;
          if (v14 || (OUTLINED_FUNCTION_153() & 1) != 0)
          {
            isStackAllocationSafe = OUTLINED_FUNCTION_81();
            v24 = v4;
          }
          else
          {
            v15 = ~v9;
            do
            {
              v10 = (v10 + 1) & v15;
              OUTLINED_FUNCTION_214();
              if ((v16 & 1) == 0)
                goto LABEL_18;
              v17 = (_QWORD *)(v12 + 16 * v10);
              v18 = *v17 == v7 && v17[1] == v6;
            }
            while (!v18 && (OUTLINED_FUNCTION_153() & 1) == 0);
            v24 = v4;
            isStackAllocationSafe = OUTLINED_FUNCTION_81();
          }
          v20 = *(_BYTE *)(v2 + 32);
          v21 = 8 * ((unint64_t)((1 << v20) + 63) >> 6);
          if ((v20 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            OUTLINED_FUNCTION_210((char *)v23 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0));
            OUTLINED_FUNCTION_111_0();
            OUTLINED_FUNCTION_5_0();
            if (v2 == -56)
            {
              swift_bridgeObjectRelease();
              goto LABEL_28;
            }
            swift_willThrow();

            __break(1u);
          }
          else
          {
            v22 = (void *)swift_slowAlloc();
            OUTLINED_FUNCTION_210(v22);
            OUTLINED_FUNCTION_111_0();
            OUTLINED_FUNCTION_5_0();
            if (v2 == -56)
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_160();
            }
          }
          OUTLINED_FUNCTION_41_1();
          OUTLINED_FUNCTION_160();
        }
LABEL_18:
        OUTLINED_FUNCTION_81();
      }
      while (v4 != v3);
      OUTLINED_FUNCTION_3_1();
    }
  }
  else
  {
    OUTLINED_FUNCTION_5_0();
  }
LABEL_28:
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190B38790(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v30 = (unint64_t *)result;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_190ACD15C(v30, a2, v31, a3, (uint64_t)&unk_1EE1FEE88);
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_30;
    v11 = v8 + 16 * v7;
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_190BE62FC();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190BE50B4();
    v14 = sub_190BE6314();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_25;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v12 && v20[1] == v13;
    if (!v21 && (sub_190BE60BC() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v12 && v27[1] == v13;
        if (v28 || (sub_190BE60BC() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_13;
        }
      }
LABEL_25:
      result = swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    result = swift_bridgeObjectRelease();
LABEL_13:
    v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_31;
      --v31;
      if (!v23)
        return MEMORY[0x1E0DEE9E8];
    }
LABEL_26:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_190B389CC(char *a1, void (*a2)(char *))
{
  return sub_190B2C9B8(*a1, a2);
}

void sub_190B389D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B30998(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_190B38A1C(uint64_t (*a1)(char *), uint64_t a2, char *a3)
{
  return sub_190B33EC8(a1, a2, *a3);
}

void sub_190B38A24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B30BB4(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38A6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B30E78(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_190B38AB4(uint64_t *a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  return sub_190B2CAB4(*a1, a2);
}

void sub_190B38ABC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B3113C(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38B04()
{
  sub_190B37134();
}

void sub_190B38B20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B31400(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_190B38B68(_BYTE *a1, uint64_t *a2, uint64_t a3, unsigned __int8 *a4, unint64_t *a5)
{
  return sub_190B371F8(a1, a2, a3, *a4, *a5);
}

uint64_t sub_190B38B74()
{
  return sub_190B36FA8();
}

void sub_190B38B94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B3161C(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38BDC(uint64_t *a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_190B2CDE4(*a1, a2, a3, a4, (void (*)())sub_190B2D48C, (uint64_t)sub_190B30160, a7);
}

void sub_190B38C04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B31A20(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38C4C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B31CE4(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38C94(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_190B34BC4(a1, a2, *a3, a3[1], a5, a6, a7, a8);
}

uint64_t sub_190B38CB0(uint64_t *a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  return sub_190B2CBB8(*a1, a2);
}

uint64_t sub_190B38CB8(uint64_t *a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  return sub_190B2CCD4(*a1, a2);
}

void sub_190B38CC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B31FAC(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38D08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B323B0(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38D50(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B326AC(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38D98(uint64_t *a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_190B2CDE4(*a1, a2, a3, a4, (void (*)())sub_190B2D514, (uint64_t)sub_190B30654, a7);
}

uint64_t sub_190B38DC0(uint64_t *a1, void (*a2)(uint64_t *))
{
  return sub_190B2CED4(*a1, a2);
}

void sub_190B38DC8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B32AB0(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_190B38E10(uint64_t *a1, void (*a2)(_QWORD *))
{
  return sub_190B2D038(*a1, a1[1], a2);
}

void sub_190B38E28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B32D74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38E70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B3303C(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_190B38EB8(uint64_t (*a1)(char *), uint64_t a2, char *a3)
{
  return sub_190B33EFC(a1, a2, *a3);
}

uint64_t sub_190B38EC0(uint64_t *a1, void (*a2)(__int128 *__return_ptr, uint64_t *))
{
  return sub_190B2D134(*a1, a2);
}

void sub_190B38EC8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B33258(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

void sub_190B38F10()
{
  sub_190B37194();
}

uint64_t sub_190B38F2C(char *a1, void (*a2)(char *))
{
  return sub_190B2D238(*a1, a2);
}

uint64_t sub_190B38F34(_BYTE *a1, uint64_t *a2, uint64_t a3, unsigned __int8 *a4, unint64_t *a5)
{
  return sub_190B37334(a1, a2, a3, *a4, *a5);
}

uint64_t sub_190B38F40(uint64_t *a1, void (*a2)(uint64_t *))
{
  return sub_190B2D338(*a1, a2);
}

uint64_t sub_190B38F48()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B38F54(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B38F40(a1, *(void (**)(uint64_t *))(v1 + 16));
}

void sub_190B38F60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(), uint64_t a8)
{
  sub_190B3351C(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_190B38FAC(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38F60);
}

uint64_t sub_190B38FB8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

id sub_190B38FC4(id result, char a2)
{
  if (a2 != -1)
    return sub_190B03650(result, a2);
  return result;
}

uint64_t sub_190B38FE4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B38FF8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39004()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B39010()
{
  return objectdestroy_24Tm((void (*)(_QWORD, _QWORD))sub_190AB67C4);
}

uint64_t sub_190B3901C()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_646Tm(void (*a1)(void))
{
  uint64_t v1;

  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_124();
  sub_190AB03DC(*(void **)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
  return OUTLINED_FUNCTION_47_3();
}

uint64_t sub_190B39064()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B39070(char *a1)
{
  uint64_t v1;

  return sub_190B38F2C(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_190B39080(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38E70);
}

uint64_t sub_190B3908C()
{
  OUTLINED_FUNCTION_83();
  return swift_deallocObject();
}

uint64_t sub_190B390B0()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B390C4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B390D0()
{
  uint64_t v0;

  return sub_190B38EB8(*(uint64_t (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), (char *)(v0 + 32));
}

uint64_t sub_190B390DC()
{
  return objectdestroy_24Tm((void (*)(_QWORD, _QWORD))sub_190AB67C4);
}

uint64_t objectdestroy_24Tm(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_124();
  a1(*(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return OUTLINED_FUNCTION_47_3();
}

uint64_t sub_190B39120()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B3913C()
{
  return sub_190AE0394();
}

uint64_t sub_190B39160()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B3916C(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B38EC0(a1, *(void (**)(__int128 *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t sub_190B3917C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38EC8);
}

uint64_t sub_190B39188()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39194()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B391A8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B391B4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B391C0()
{
  return swift_deallocObject();
}

uint64_t sub_190B391D4()
{
  return sub_190B3A020();
}

uint64_t sub_190B391F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_190AE187C(a1, v1[2], v1[3], v1[4], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190BE0A84);
}

uint64_t sub_190B39218()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39224()
{
  return sub_190B3A0D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38F34);
}

unint64_t sub_190B39230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED032FE0;
  if (!qword_1ED032FE0)
  {
    v1 = sub_190BE4628();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0CB0018], v1);
    atomic_store(result, (unint64_t *)&qword_1ED032FE0);
  }
  return result;
}

uint64_t sub_190B39270()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B3928C()
{
  return sub_190AE0394();
}

uint64_t sub_190B392B0()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B392BC(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B38CB8(a1, *(void (**)(__int128 *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t sub_190B392CC(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38CC0);
}

uint64_t sub_190B392D8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B392E4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B392F8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39304()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39310()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

void sub_190B3931C(uint64_t a1)
{
  sub_190AE44A4(a1, &qword_1EE1FEE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B39334(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B32270);
}

void sub_190B39340(uint64_t a1)
{
  sub_190AE4930(a1, (uint64_t (*)(_QWORD))sub_190B3931C);
}

uint64_t sub_190B3934C()
{
  return objectdestroy_142Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B39358()
{
  return sub_190B39DB8((uint64_t (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B39364()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39374()
{
  return objectdestroy_142Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B39380()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3938C()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3939C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38D08);
}

void sub_190B393A8(void *a1, id a2, char a3)
{
  if (a3 != -1)
    sub_190B393BC(a1, a2, a3);
}

void sub_190B393BC(void *a1, id a2, char a3)
{
  if (a3 == 1)
  {

  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_190B393E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190ACF6F0(0, &qword_1ED032CF0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_190B3943C(id result, id a2, char a3)
{
  if (a3 != -1)
    return sub_190B39450(result, a2, a3);
  return result;
}

id sub_190B39450(id result, id a2, char a3)
{
  if (a3 == 1)
    return result;
  if (!a3)
    return (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return result;
}

uint64_t sub_190B39470()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39484()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_166Tm()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_208();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

void sub_190B394B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_190B38C94(*(uint64_t (**)(uint64_t *))(v8 + 16), *(_QWORD *)(v8 + 24), (uint64_t *)(v8 + 32), a4, a5, a6, a7, a8);
}

uint64_t sub_190B394BC()
{
  return objectdestroy_188Tm_0((uint64_t (*)(_QWORD))sub_190B3931C, (void (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B394D0()
{
  return sub_190B39EB0((uint64_t (*)(_QWORD))sub_190B3931C);
}

uint64_t sub_190B394DC()
{
  return objectdestroy_191Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_190B393BC);
}

uint64_t sub_190B394E8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B394F8()
{
  OUTLINED_FUNCTION_83();
  return swift_deallocObject();
}

uint64_t sub_190B3951C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39530()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

unint64_t sub_190B3953C()
{
  unint64_t result;

  result = qword_1ED033D90;
  if (!qword_1ED033D90)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for XPCClass, &type metadata for XPCClass);
    atomic_store(result, (unint64_t *)&qword_1ED033D90);
  }
  return result;
}

uint64_t sub_190B39578()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B39594()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B395A0(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B38E10(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_190B395B0(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38E28);
}

void sub_190B395BC(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 != -1)
    sub_190B395D0(a1, a2, a3);
}

void sub_190B395D0(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 == 1)
  {

  }
  else if (!a3)
  {
    sub_190AEF3F4(a1, a2);
  }
}

uint64_t sub_190B395F0(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_190B39604(a1, a2, a3);
  return a1;
}

uint64_t sub_190B39604(uint64_t a1, unint64_t a2, char a3)
{
  if (a3 == 1)
    return (uint64_t)(id)a1;
  if (!a3)
    return sub_190AFCA4C(a1, a2);
  return a1;
}

uint64_t sub_190B39620()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39634()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_232Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83();
  sub_190AEF3F4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

void sub_190B39664(uint64_t a1)
{
  sub_190AE44A4(a1, &qword_1EE1FF628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_190B3967C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B32970);
}

void sub_190B39688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  OUTLINED_FUNCTION_164(a1, a2, a3);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0();
}

void sub_190B396C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_45_4(a1, a2);
  OUTLINED_FUNCTION_71_0(v2);
  OUTLINED_FUNCTION_0();
}

void sub_190B396F4(uint64_t a1)
{
  sub_190AE4930(a1, (uint64_t (*)(_QWORD))sub_190B39664);
}

uint64_t sub_190B39700()
{
  return objectdestroy_142Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_190B3970C()
{
  return sub_190B39DB8((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_190B39718()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39728()
{
  return objectdestroy_142Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t objectdestroy_142Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = OUTLINED_FUNCTION_99_2(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  OUTLINED_FUNCTION_83();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  OUTLINED_FUNCTION_175();
  return OUTLINED_FUNCTION_103();
}

uint64_t sub_190B39790()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3979C()
{
  return sub_190B2C890();
}

uint64_t sub_190B397B8()
{
  return sub_190AE03F8();
}

uint64_t sub_190B397D4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B397E0(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B38DC0(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_190B397F0(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38DC8);
}

uint64_t sub_190B397FC()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39808()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3981C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39828()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_190B39834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  OUTLINED_FUNCTION_164(a1, a2, a3);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B39874()
{
  return objectdestroy_188Tm_0((uint64_t (*)(_QWORD))sub_190B39664, (void (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t objectdestroy_188Tm_0(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  void (*v6)(uint64_t);

  OUTLINED_FUNCTION_99_2(a1);
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_124();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    a2(0);
    OUTLINED_FUNCTION_114_0();
    v6(v2 + v3);
  }
  return OUTLINED_FUNCTION_33();
}

uint64_t sub_190B39904()
{
  return sub_190B39EB0((uint64_t (*)(_QWORD))sub_190B39664);
}

uint64_t sub_190B39914(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38B94);
}

uint64_t sub_190B39920()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3992C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39940()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3994C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3995C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38D50);
}

uint64_t sub_190B39968()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39974()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39988()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39994()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_190B399A0(uint64_t a1)
{
  sub_190B3A188(a1, (uint64_t)&unk_1ED02F358);
}

uint64_t sub_190B399BC()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B399D8()
{
  return sub_190AE0394();
}

uint64_t sub_190B399FC()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_190B39A08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_190B38D98(a1, *(uint64_t (**)(char *))(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), a5, a6, a7);
}

uint64_t sub_190B39A14()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39A20()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_190B39A2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_190B38BDC(a1, *(uint64_t (**)(char *))(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), a5, a6, a7);
}

uint64_t sub_190B39A38()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B39A48(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38C4C);
}

void sub_190B39A54(void *a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    sub_190B39A68(a1, a2, a3);
}

void sub_190B39A68(void *a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {

  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

id sub_190B39AA8(id result, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_190B39ABC(result, a2, a3);
  return result;
}

id sub_190B39ABC(id result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return result;
  if (!a3)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    return (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t sub_190B39AF8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39B0C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_371Tm()
{
  OUTLINED_FUNCTION_83();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_208();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

uint64_t sub_190B39B40()
{
  return objectdestroy_191Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_190B39A68);
}

void sub_190B39B4C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EE1FE4D8[0])
  {
    sub_190B1DE20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1EE1FE4D8);
  }
}

uint64_t sub_190B39BAC()
{
  return sub_190B2C890();
}

uint64_t sub_190B39BC8()
{
  return sub_190AE0394();
}

uint64_t sub_190B39BEC()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B39BF8(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B38CB0(a1, *(void (**)(__int128 *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t sub_190B39C04()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B39C14(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38C04);
}

uint64_t sub_190B39C20()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39C2C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39C40()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39C4C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39C58()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B39C64()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

void sub_190B39C70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02F340)
  {
    type metadata accessor for AuthToken();
    v0 = sub_190BE4E98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02F340);
  }
}

void sub_190B39CD4(uint64_t a1)
{
  sub_190AE44A4(a1, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
}

uint64_t sub_190B39CEC(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B318E0);
}

void sub_190B39CF8(uint64_t a1)
{
  sub_190AE4930(a1, (uint64_t (*)(_QWORD))sub_190B39CD4);
}

uint64_t sub_190B39D08()
{
  return sub_190B39DB8((uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
}

uint64_t sub_190B39D14()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_436Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t);

  v1 = type metadata accessor for AuthToken();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  OUTLINED_FUNCTION_83();
  v4 = v0 + v3;
  sub_190BE47E4();
  OUTLINED_FUNCTION_114_0();
  v5(v4);
  v6 = v4 + *(int *)(v1 + 20);
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_114_0();
  v7(v6);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_175();
  return OUTLINED_FUNCTION_103();
}

uint64_t sub_190B39DB8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_99_2(a1) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v1 + 16))(v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_190B39DF4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39E00()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);

  OUTLINED_FUNCTION_192();
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_124();
  v2 = (id *)(v0 + v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    v4 = sub_190BE47E4();
    OUTLINED_FUNCTION_71_0(v4);
    v5 = (char *)v2 + *(int *)(type metadata accessor for AuthToken() + 20);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_114_0();
    v6(v5);
    swift_bridgeObjectRelease();
  }
  return OUTLINED_FUNCTION_33();
}

uint64_t sub_190B39EA4()
{
  return sub_190B39EB0((uint64_t (*)(_QWORD))sub_190B39CD4);
}

uint64_t sub_190B39EB0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_99_2(a1) - 8) + 80);
  return sub_190B37070(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_190B39EE0()
{
  return objectdestroy_191Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_190B395D0);
}

uint64_t objectdestroy_191Tm(void (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_124();
  a1(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
  return OUTLINED_FUNCTION_47_3();
}

uint64_t sub_190B39F24()
{
  return sub_190B38B74();
}

uint64_t sub_190B39F30()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B39F4C()
{
  return sub_190AE0394();
}

uint64_t sub_190B39F70()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B39F7C(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B38AB4(a1, *(void (**)(__int128 *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t sub_190B39F8C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38ABC);
}

uint64_t sub_190B39F98()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39FA4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39FB8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B39FC4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B39FD0()
{
  return objectdestroy_24Tm((void (*)(_QWORD, _QWORD))sub_190B3A414);
}

uint64_t sub_190B39FDC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190B3A004()
{
  return sub_190B3A020();
}

uint64_t sub_190B3A020()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_195();
  return v0();
}

uint64_t sub_190B3A040(uint64_t a1)
{
  uint64_t *v1;

  return sub_190AE187C(a1, v1[2], v1[3], v1[4], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190BE0A78);
}

uint64_t sub_190B3A064()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3A070()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B3A07C(char *a1)
{
  uint64_t v1;

  return sub_190B389CC(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_190B3A08C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38B20);
}

uint64_t sub_190B3A09C()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A0B0()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A0BC()
{
  uint64_t v0;

  return sub_190B38A1C(*(uint64_t (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), (char *)(v0 + 32));
}

uint64_t sub_190B3A0C8()
{
  return sub_190B3A0D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38B68);
}

uint64_t sub_190B3A0D4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_190B3A0E8()
{
  return sub_190B2C8D0();
}

uint64_t sub_190B3A104()
{
  return sub_190AE0394();
}

uint64_t sub_190B3A128()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B3A138(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38A24);
}

uint64_t sub_190B3A144()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3A150()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A164()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A170()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3A17C()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEE30]);
}

void sub_190B3A188(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!OUTLINED_FUNCTION_143(a1, a2))
  {
    v5 = OUTLINED_FUNCTION_101(0, v3, v4);
    v6 = OUTLINED_FUNCTION_80(v5);
    if (!v7)
      atomic_store(v6, v2);
  }
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B3A1CC(uint64_t a1)
{
  uint64_t *v1;

  return sub_190AE187C(a1, v1[2], v1[3], v1[4], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190BE0A6C);
}

uint64_t sub_190B3A1F0()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3A1FC()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B3A20C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B38A6C);
}

uint64_t sub_190B3A218()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3A224()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A238()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A244()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_190B3A250(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  void (*v3)(void);
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  if (!OUTLINED_FUNCTION_143(a1, a2))
  {
    v4 = v2;
    v3();
    OUTLINED_FUNCTION_26_1();
    v5 = sub_190BE5C24();
    if (!v6)
      atomic_store(v5, v4);
  }
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B3A298()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190B3A2A8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190B3A2B4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A2C8()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A2D4()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_99Tm()
{
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_102Tm()
{
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_92();
  return swift_deallocObject();
}

uint64_t sub_190B3A340()
{
  return objectdestroy_646Tm((void (*)(void))MEMORY[0x1E0DEEB08]);
}

void sub_190B3A34C(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_190B2F55C(a1, a2, *(_BYTE *)(v3 + 16), a3);
}

uint64_t sub_190B3A354()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B3A39C(uint64_t a1)
{
  return j__OUTLINED_FUNCTION_36_3(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B389D4);
}

uint64_t sub_190B3A3AC()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A3C0()
{
  return objectdestroyTm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_190B3A3CC()
{
  return objectdestroy_24Tm((void (*)(_QWORD, _QWORD))sub_190B3A414);
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t OUTLINED_FUNCTION_91_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_92_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_100_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a10 + 16));
}

void (*OUTLINED_FUNCTION_104_0())()
{
  void *v0;
  uint64_t v1;
  void (*v2)();

  return sub_190ADADE0(v0, v2, v1);
}

void (*OUTLINED_FUNCTION_106_0())()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return sub_190ADADE0(v0, *(void (**)())(v2 - 128), v1);
}

id OUTLINED_FUNCTION_108_0()
{
  void *v0;
  char v1;

  return sub_190ADCF0C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_130_0()
{
  JUMPOUT(0x194015F20);
}

uint64_t OUTLINED_FUNCTION_140()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_143(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a2;
}

void OUTLINED_FUNCTION_144()
{
  void *v0;
  char v1;

  sub_190AB7D2C(v0, v1);
}

void OUTLINED_FUNCTION_146()
{
  sub_190ADD0C4();
}

void OUTLINED_FUNCTION_147()
{
  sub_190AE4458();
}

void OUTLINED_FUNCTION_148(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v3;

  sub_190AB03DC(v3, 0, a3);
}

uint64_t OUTLINED_FUNCTION_150()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_153()
{
  return sub_190BE60BC();
}

uint64_t OUTLINED_FUNCTION_154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for Seal.Resolution(v4, a1, a1, a4);
}

uint64_t OUTLINED_FUNCTION_155()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_156()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_157(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v1;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

void OUTLINED_FUNCTION_160()
{
  JUMPOUT(0x194017000);
}

uint64_t OUTLINED_FUNCTION_161()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190B3A188(0, a3);
}

void (*OUTLINED_FUNCTION_170())()
{
  uint64_t v0;
  void (*v1)();
  void *v2;

  return sub_190ADADE0(v2, v1, v0);
}

void OUTLINED_FUNCTION_172(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t OUTLINED_FUNCTION_176()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_177(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return a2(va);
}

void OUTLINED_FUNCTION_179(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_190ADE658(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_180()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_182@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_183()
{
  id *v0;

}

uint64_t OUTLINED_FUNCTION_184()
{
  return sub_190AC94D4();
}

void OUTLINED_FUNCTION_185()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_188()
{
  return swift_bridgeObjectRetain_n();
}

void (*OUTLINED_FUNCTION_189(void *a1))()
{
  uint64_t v1;
  void (*v2)();

  return sub_190ADADE0(a1, v2, v1);
}

void OUTLINED_FUNCTION_190()
{
  UnfairLock.lock()();
}

void OUTLINED_FUNCTION_192()
{
  sub_190B39CD4(0);
}

void OUTLINED_FUNCTION_193(uint64_t a1, uint64_t a2)
{
  sub_190AEA934(0, a2);
}

void OUTLINED_FUNCTION_196()
{
  JUMPOUT(0x194015F20);
}

uint64_t OUTLINED_FUNCTION_199(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_200()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_204()
{
  void *v0;
  char v1;

  return sub_190B03650(v0, v1);
}

void OUTLINED_FUNCTION_205(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 16));
}

uint64_t OUTLINED_FUNCTION_206()
{
  return sub_190AE03F8();
}

void OUTLINED_FUNCTION_207()
{
  UnfairLock.lock()();
}

void *OUTLINED_FUNCTION_210(void *a1)
{
  const void *v1;
  size_t v2;

  return memcpy(a1, v1, v2);
}

void OUTLINED_FUNCTION_211(uint64_t a1)
{
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
}

void OUTLINED_FUNCTION_212()
{
  sub_190AE054C();
}

uint64_t dispatch thunk of KeyValueStoreType.readAsync(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of KeyValueStoreType.readAsync(_:maxAge:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of KeyValueStoreType.writeAsync(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of KeyValueStoreType.deleteAsync(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_190B3A888(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_12(a1);
}

uint64_t sub_190B3A8E0(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_12(a1);
}

uint64_t sub_190B3A938(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_12(a1);
}

void sub_190B3A944()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _s13TeaFoundation19AsyncBlockOperationCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

ValueMetadata *type metadata accessor for XPCArgumentBuilder()
{
  return &type metadata for XPCArgumentBuilder;
}

BOOL Ternary.isUnknown.getter()
{
  unsigned __int8 *v0;

  return *v0 == 2;
}

BOOL static Ternary.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Ternary.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t Ternary.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190B3AA60@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return Ternary.init(from:)(a1, a2);
}

uint64_t Ternary.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  BOOL v12;
  BOOL v13;
  _QWORD v14[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_3_10();
  sub_190BE632C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    OUTLINED_FUNCTION_3_10();
    v5 = sub_190BE60E0();
    v7 = v5;
    v8 = v6;
    v9 = v5 == 1702195828 && v6 == 0xE400000000000000;
    if (v9 || (OUTLINED_FUNCTION_1_21() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v10 = 0;
LABEL_10:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      *a2 = v10;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    v12 = v7 == 0x65736C6166 && v8 == 0xE500000000000000;
    if (v12 || (OUTLINED_FUNCTION_4_12(), (OUTLINED_FUNCTION_1_21() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v10 = 1;
      goto LABEL_10;
    }
    v13 = v7 == 0x6E776F6E6B6E75 && v8 == 0xE700000000000000;
    if (v13 || (OUTLINED_FUNCTION_2_15(), (OUTLINED_FUNCTION_1_21() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v10 = 2;
      goto LABEL_10;
    }
    sub_190BE5C54();
    swift_bridgeObjectRelease();
    sub_190BE5114();
    swift_bridgeObjectRelease();
    sub_190BE5114();
    sub_190BE5CB4();
    swift_allocError();
    sub_190BE5C9C();
    swift_bridgeObjectRelease();
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_190B3AC8C(_QWORD *a1)
{
  return Ternary.encode(to:)(a1);
}

uint64_t Ternary.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = sub_190BE635C();
  if (v2)
  {
    OUTLINED_FUNCTION_0_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13[0], v14, v15, v16);
    if (v2 == 1)
      OUTLINED_FUNCTION_4_12();
    else
      OUTLINED_FUNCTION_2_15();
  }
  else
  {
    OUTLINED_FUNCTION_0_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13[0], v14, v15, v16);
  }
  sub_190BE6140();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_190B3AD58(Swift::Bool *a1)
{
  return Ternary.init(BOOLeanLiteral:)(*a1);
}

unint64_t sub_190B3AD64()
{
  unint64_t result;

  result = qword_1EE1FFA70;
  if (!qword_1EE1FFA70)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for Ternary, &type metadata for Ternary);
    atomic_store(result, (unint64_t *)&qword_1EE1FFA70);
  }
  return result;
}

uint64_t sub_190B3ADA0()
{
  return MEMORY[0x1E0DEAFD0];
}

uint64_t storeEnumTagSinglePayload for Ternary(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B3ADF8 + 4 * byte_190BE9579[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B3AE2C + 4 * asc_190BE9574[v4]))();
}

uint64_t sub_190B3AE2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B3AE34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B3AE3CLL);
  return result;
}

uint64_t sub_190B3AE48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B3AE50);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B3AE54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B3AE5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_QWORD *Gate.__allocating_init(name:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v7;

  result = (_QWORD *)OUTLINED_FUNCTION_24();
  v7 = MEMORY[0x1E0DEE9D8];
  result[5] = 0;
  result[6] = v7;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

_QWORD *Gate.init(name:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v4 = MEMORY[0x1E0DEE9D8];
  v3[5] = 0;
  v3[6] = v4;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

Swift::Void __swiftcall Gate.enter()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;

  v2 = OUTLINED_FUNCTION_12_1();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_9();
  v4 = (void *)v0[4];
  *v1 = v4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x1E0DEF740], v2);
  v5 = v4;
  LOBYTE(v4) = sub_190BE4D24();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v1, v2);
  if ((v4 & 1) != 0)
  {
    v6 = v0[5];
    v7 = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      v0[5] = v7;
      OUTLINED_FUNCTION_13_8();
      v8 = OUTLINED_FUNCTION_24();
      *(_OWORD *)(v8 + 16) = xmmword_190BE8430;
      v10 = v0[2];
      v9 = v0[3];
      v11 = OUTLINED_FUNCTION_7_10(v8, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v8 + 32) = v10;
      *(_QWORD *)(v8 + 40) = v9;
      v12 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v8 + 104) = v12;
      *(_QWORD *)(v8 + 64) = v11;
      *(_QWORD *)(v8 + 72) = v7;
      v13 = (void *)OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_2_2();
      sub_190BE5990();
      OUTLINED_FUNCTION_5_2();
      OUTLINED_FUNCTION_4_13();
      OUTLINED_FUNCTION_20();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall Gate.exit()()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;

  v2 = v0;
  v3 = OUTLINED_FUNCTION_12_1();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_9();
  v5 = (void *)v2[4];
  *v1 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x1E0DEF740], v3);
  v6 = v5;
  LOBYTE(v5) = sub_190BE4D24();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v3);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = v2[5];
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v10 = v9 & ~(v9 >> 63);
  v2[5] = v10;
  OUTLINED_FUNCTION_13_8();
  v11 = OUTLINED_FUNCTION_24();
  *(_OWORD *)(v11 + 16) = xmmword_190BE8430;
  v13 = v2[2];
  v12 = v2[3];
  v14 = OUTLINED_FUNCTION_7_10(v11, MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v12;
  v15 = MEMORY[0x1E0DEB418];
  v16 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v11 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 64) = v14;
  *(_QWORD *)(v11 + 72) = v10;
  v17 = (void *)OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_71();
  v18 = (void *)sub_190BE5990();
  sub_190BE58AC();
  sub_190BE4A00();
  OUTLINED_FUNCTION_81();

  if (!v2[5])
  {
    OUTLINED_FUNCTION_20_0();
    v19 = v2[6];
    v2[6] = MEMORY[0x1E0DEE9D8];
    v20 = OUTLINED_FUNCTION_24();
    *(_OWORD *)(v20 + 16) = xmmword_190BE8430;
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = v14;
    *(_QWORD *)(v20 + 32) = v13;
    *(_QWORD *)(v20 + 40) = v12;
    v21 = *(_QWORD *)(v19 + 16);
    *(_QWORD *)(v20 + 96) = v15;
    *(_QWORD *)(v20 + 104) = v16;
    *(_QWORD *)(v20 + 72) = v21;
    OUTLINED_FUNCTION_71();
    sub_190BE5990();
    OUTLINED_FUNCTION_5_2();
    OUTLINED_FUNCTION_4_13();
    OUTLINED_FUNCTION_20();

    v22 = *(_QWORD *)(v19 + 16);
    if (v22)
    {
      v23 = v19 + 40;
      do
      {
        v24 = *(void (**)(uint64_t))(v23 - 8);
        v25 = swift_retain();
        v24(v25);
        swift_release();
        v23 += 16;
        --v22;
      }
      while (v22);
    }
    OUTLINED_FUNCTION_81();
  }
}

uint64_t sub_190B3B22C(_QWORD *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  v6 = sub_190BE4D00();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = (void *)a1[4];
  *v9 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  swift_retain();
  v12 = v11;
  LOBYTE(v11) = sub_190BE4D24();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    v14 = a1[5];
    sub_190B0C000();
    if (v14)
    {
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_190BE8430;
      v17 = a1[2];
      v16 = a1[3];
      *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
      v18 = sub_190B0C064();
      *(_QWORD *)(v15 + 32) = v17;
      *(_QWORD *)(v15 + 40) = v16;
      v19 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v15 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v15 + 104) = v19;
      *(_QWORD *)(v15 + 64) = v18;
      *(_QWORD *)(v15 + 72) = v14;
      sub_190B0BFC4();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v20 = (void *)sub_190BE5990();
      sub_190BE58AC();
      sub_190BE4A00();
      swift_bridgeObjectRelease();

      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = sub_190AF6F0C;
      *(_QWORD *)(v21 + 24) = v10;
      swift_beginAccess();
      swift_retain();
      sub_190B0BF94();
      v22 = *(_QWORD *)(a1[6] + 16);
      sub_190B0C264(v22);
      v23 = a1[6];
      *(_QWORD *)(v23 + 16) = v22 + 1;
      v24 = v23 + 16 * v22;
      *(_QWORD *)(v24 + 32) = sub_190B3BAA8;
      *(_QWORD *)(v24 + 40) = v21;
      swift_endAccess();
    }
    else
    {
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_190BE7CD0;
      v27 = a1[2];
      v26 = a1[3];
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 64) = sub_190B0C064();
      *(_QWORD *)(v25 + 32) = v27;
      *(_QWORD *)(v25 + 40) = v26;
      sub_190B0BFC4();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v28 = (void *)sub_190BE5990();
      sub_190BE58AC();
      sub_190BE4A00();
      swift_bridgeObjectRelease();

      a2();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Gate.wait(closure:)(uint64_t (*a1)(void), uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v3 = v2;
  v6 = OUTLINED_FUNCTION_12_1();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)v3[4];
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v11 = v10;
  LOBYTE(v10) = sub_190BE4D24();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v13 = v3[5];
    OUTLINED_FUNCTION_13_8();
    v14 = OUTLINED_FUNCTION_24();
    if (v13)
    {
      *(_OWORD *)(v14 + 16) = xmmword_190BE8430;
      v16 = v3[2];
      v15 = v3[3];
      v17 = OUTLINED_FUNCTION_7_10(v14, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v14 + 32) = v16;
      *(_QWORD *)(v14 + 40) = v15;
      v18 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v14 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v14 + 104) = v18;
      *(_QWORD *)(v14 + 64) = v17;
      *(_QWORD *)(v14 + 72) = v13;
      v19 = (void *)OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_2_2();
      sub_190BE5990();
      OUTLINED_FUNCTION_5_2();
      OUTLINED_FUNCTION_3_11();
      OUTLINED_FUNCTION_81();

      v20 = OUTLINED_FUNCTION_24();
      *(_QWORD *)(v20 + 16) = a1;
      *(_QWORD *)(v20 + 24) = a2;
      OUTLINED_FUNCTION_20_0();
      swift_retain();
      sub_190B0BF94();
      v21 = *(_QWORD *)(v3[6] + 16);
      sub_190B0C264(v21);
      v22 = v3[6];
      *(_QWORD *)(v22 + 16) = v21 + 1;
      v23 = v22 + 16 * v21;
      *(_QWORD *)(v23 + 32) = sub_190AF6F0C;
      *(_QWORD *)(v23 + 40) = v20;
      return swift_endAccess();
    }
    else
    {
      *(_OWORD *)(v14 + 16) = xmmword_190BE7CD0;
      v25 = v3[2];
      v24 = v3[3];
      *(_QWORD *)(v14 + 64) = OUTLINED_FUNCTION_7_10(v14, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v14 + 32) = v25;
      *(_QWORD *)(v14 + 40) = v24;
      v26 = (void *)OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_2_2();
      sub_190BE5990();
      OUTLINED_FUNCTION_5_2();
      OUTLINED_FUNCTION_3_11();
      OUTLINED_FUNCTION_81();

      return a1();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190B3B728()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Gate.wait()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = v0;
  sub_190B3BA14(0, (unint64_t *)&qword_1ED032C30, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  v2 = OUTLINED_FUNCTION_24();
  v7 = 0;
  type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_24();
  swift_retain();
  UnfairLock.init(options:)((int *)&v7);
  v4 = v3;
  sub_190B3BA14(0, &qword_1ED032C20, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_24();
  *(_QWORD *)(v2 + 16) = sub_190AC8364(v4);
  v5 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v5 + 16) = sub_190B3BA60;
  *(_QWORD *)(v5 + 24) = v2;
  swift_retain_n();
  swift_retain();
  sub_190B3B22C(v1, sub_190AF6F0C, v5);
  swift_release();
  swift_release_n();
  swift_release();
  return v2;
}

uint64_t Gate.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Gate.__deallocating_deinit()
{
  Gate.deinit();
  return swift_deallocClassInstance();
}

unint64_t Gate.description.getter()
{
  sub_190BE5C54();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_71();
  sub_190BE5114();
  swift_bridgeObjectRelease();
  sub_190BE5114();
  OUTLINED_FUNCTION_9_9();
  sub_190BE5114();
  OUTLINED_FUNCTION_81();
  sub_190BE5114();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_9_9();
  sub_190BE5114();
  OUTLINED_FUNCTION_20();
  sub_190BE5114();
  return 0xD000000000000011;
}

unint64_t sub_190B3B9F4()
{
  return Gate.description.getter();
}

void sub_190B3BA14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEE9C0] + 8);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_190B3BA60()
{
  return sub_190B285A0();
}

uint64_t type metadata accessor for Gate()
{
  return objc_opt_self();
}

uint64_t method lookup function for Gate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Gate.__allocating_init(name:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_190B3BAAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[2];
  _QWORD v13[2];
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v3 = MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  sub_190BE5D50();
  v4 = (_QWORD *)(a1 + 32);
  do
  {
    v5 = v4[3];
    v6 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v5);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v13, v5, v6);
    v12[0] = v13[0];
    v12[1] = v13[1];
    v7 = ReferenceEncodingPool.subscript.getter(v12);
    swift_bridgeObjectRelease();
    if (v7)
    {
      if (*(_QWORD *)(v7 + 16))
      {
        v8 = v4[3];
        v9 = v4[4];
        __swift_project_boxed_opaque_existential_1(v4, v8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v9);
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
    }
    sub_190B3C2F8(0);
    swift_allocObject();
    sub_190B7102C(v3);
LABEL_8:
    sub_190BE5D2C();
    sub_190BE5D5C();
    sub_190BE5D68();
    sub_190BE5D38();
    v4 += 5;
    --v1;
  }
  while (v1);
  v10 = v14;
  swift_release();
  return v10;
}

uint64_t ReferenceService.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_24();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t ReferenceService.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t ReferenceService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReferenceService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_190B3BCB8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_190AD2CD8();
  *v0 = v1;
}

void sub_190B3BCF4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_190AD2BE0();
  *v0 = v1;
}

void sub_190B3BD34()
{
  _QWORD *v0;
  uint64_t v1;

  sub_190AD2CD8();
  *v0 = v1;
}

void sub_190B3BD70(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_190B3BDE8(a1, a2, a3, *v3, &qword_1ED0328A0, (void (*)(uint64_t))MEMORY[0x1E0CAE690], (void (*)(uint64_t, uint64_t, char *))sub_190B12FE8, (void (*)(uint64_t, uint64_t, char *))sub_190B13204);
  *v3 = v4;
}

void sub_190B3BDAC(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_190B3BDE8(a1, a2, a3, *v3, qword_1EE1FFA80, (void (*)(uint64_t))MEMORY[0x1E0DEF0C8], (void (*)(uint64_t, uint64_t, char *))sub_190B12FF4, (void (*)(uint64_t, uint64_t, char *))sub_190B13210);
  *v3 = v4;
}

void sub_190B3BDE8(char a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, char *), void (*a8)(uint64_t, uint64_t, char *))
{
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  size_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_4();
    if (v14 != v15)
    {
      OUTLINED_FUNCTION_17_2();
      if (v14)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_1();
    }
  }
  else
  {
    v13 = a2;
  }
  v16 = *(_QWORD *)(a4 + 16);
  if (v13 <= v16)
    v17 = *(_QWORD *)(a4 + 16);
  else
    v17 = v13;
  if (!v17)
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  sub_190B3C2AC(0, a5, a6);
  v18 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v19 = *(_QWORD *)(v18 + 72);
  v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v21 = (_QWORD *)swift_allocObject();
  v22 = _swift_stdlib_malloc_size(v21);
  if (!v19)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v22 - v20 == 0x8000000000000000 && v19 == -1)
    goto LABEL_23;
  v21[2] = v16;
  v21[3] = 2 * ((uint64_t)(v22 - v20) / v19);
LABEL_18:
  v24 = *(unsigned __int8 *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8) + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = (char *)v21 + v25;
  v27 = a4 + v25;
  if ((a1 & 1) != 0)
  {
    a7(v27, v16, v26);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    a8(v27, v16, v26);
  }
  OUTLINED_FUNCTION_5_0();
}

void sub_190B3BF28(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_4();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_17_2();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_1();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_190B3C2AC(0, &qword_1EE1FFA78, (void (*)(uint64_t))sub_190B14404);
    v11 = (char *)OUTLINED_FUNCTION_24();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_8_9(v12);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    sub_190B13074(v13, v9, v11 + 32);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_190B132C0((uint64_t)v13, v9);
  }
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_9();
}

unint64_t sub_190B3BFE8()
{
  unint64_t result;

  result = qword_1EE1FEE80;
  if (!qword_1EE1FEE80)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ReferenceServiceError, &type metadata for ReferenceServiceError);
    atomic_store(result, (unint64_t *)&qword_1EE1FEE80);
  }
  return result;
}

uint64_t sub_190B3C024(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (a4 == 2)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  result = a2;
  if (a4 == 1)
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return result;
}

uint64_t destroy for ReferenceServiceError(uint64_t a1)
{
  return sub_190B3C080(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_190B3C080(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
    return swift_bridgeObjectRelease();
  if (a4 == 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  result = a2;
  if (a4 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ReferenceServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_190B3C024(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ReferenceServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_190B3C024(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_190B3C080(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReferenceServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_190B3C080(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferenceServiceError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferenceServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_190B3C278(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_190B3C280(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReferenceServiceError()
{
  return &type metadata for ReferenceServiceError;
}

uint64_t method lookup function for ReferenceService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReferenceService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_190B3C2AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_190BE5FCC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_190B3C2F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED02EB50)
  {
    sub_190AC5F10(255, &qword_1ED02EB80, (uint64_t)&type metadata for AnyReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = type metadata accessor for Promise(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED02EB50);
  }
}

uint64_t sub_190B3C364(uint64_t a1)
{
  uint64_t v2;

  sub_190B3C3C0(0, &qword_1EE1FE158, (unint64_t *)&qword_1ED02E980, (uint64_t)&protocol descriptor for ReferenceTypeServiceType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_190B3C3C0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_190AA96FC(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void Bidict.init()(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_190BE4D6C();
  v3 = sub_190BE4D6C();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_9();
}

void Bidict.subscript.getter()
{
  OUTLINED_FUNCTION_14_3();
}

{
  OUTLINED_FUNCTION_14_3();
}

void sub_190B3C478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a4 + a3 - 32);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v15 = *(_OWORD *)(a4 + a3 - 24);
  v8 = sub_190BE59A8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - v11;
  MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v15 - v14, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  v16 = v6;
  v17 = v15;
  v18 = v7;
  type metadata accessor for Bidict();
}

void sub_190B3C55C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  Bidict.subscript.setter(v1, v2, a1);
}

void Bidict.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v52 = a1;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_10();
  v45 = v8;
  v9 = OUTLINED_FUNCTION_15_8();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_25_6(v10, v39);
  v11 = *(_QWORD *)(a3 + 24);
  v53 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_1_0();
  v41 = v13;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v14);
  v48 = (uint64_t)&v39 - v15;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v16);
  v17 = OUTLINED_FUNCTION_6_10();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_1_0();
  v44 = v19;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_27_5();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v39 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v39 - v25;
  v27 = OUTLINED_FUNCTION_20_5();
  v50 = a2;
  v43 = v27;
  sub_190BE4DD8();
  v28 = v18;
  v29 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v46 = v26;
  v29(v24, v26, v17);
  OUTLINED_FUNCTION_3_12((uint64_t)v24);
  v42 = a3;
  v47 = v28;
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v17);
  }
  else
  {
    v31 = v53;
    OUTLINED_FUNCTION_91(v4, (uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32));
    OUTLINED_FUNCTION_0_14();
    v32 = v49;
    sub_190BE4DD8();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v32, v40);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v4, v11);
  }
  OUTLINED_FUNCTION_29_5(v45);
  v33 = v52;
  OUTLINED_FUNCTION_22_4(v3);
  sub_190BE4EB0();
  v34 = v44;
  OUTLINED_FUNCTION_22_4(v44);
  OUTLINED_FUNCTION_3_12(v34);
  if (v30)
  {
    OUTLINED_FUNCTION_18_9();
    OUTLINED_FUNCTION_2_16(v33);
    OUTLINED_FUNCTION_2_16((uint64_t)v46);
    v38 = v34;
  }
  else
  {
    v35 = v53;
    v36 = v48;
    OUTLINED_FUNCTION_91(v48, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32));
    OUTLINED_FUNCTION_91(v41, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16));
    v37 = v49;
    OUTLINED_FUNCTION_29_5(v49);
    OUTLINED_FUNCTION_19_4(v37);
    OUTLINED_FUNCTION_0_14();
    sub_190BE4EB0();
    OUTLINED_FUNCTION_18_9();
    OUTLINED_FUNCTION_2_16(v33);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v48, v11);
    v38 = (uint64_t)v46;
  }
  OUTLINED_FUNCTION_2_16(v38);
  OUTLINED_FUNCTION_0_0();
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = a2;
  v52 = a1;
  v50 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_10();
  v46 = v8;
  v9 = OUTLINED_FUNCTION_15_8();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_25_6(v10, v37);
  v11 = *(_QWORD *)(a3 + 16);
  v53 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_1_0();
  v40 = v13;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v14);
  v41 = (uint64_t)&v37 - v15;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v16);
  v17 = OUTLINED_FUNCTION_6_10();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_1_0();
  v45 = v19;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_27_5();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v37 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v37 - v25;
  v51 = v3;
  v43 = OUTLINED_FUNCTION_20_5();
  v44 = v3 + 8;
  sub_190BE4DD8();
  v27 = v18;
  v28 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v47 = v26;
  v28(v24, v26, v17);
  OUTLINED_FUNCTION_3_12((uint64_t)v24);
  v42 = a3;
  v48 = v27;
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v17);
  }
  else
  {
    v30 = v53;
    OUTLINED_FUNCTION_91(v5, (uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32));
    OUTLINED_FUNCTION_0_14();
    sub_190BE4DD8();
    OUTLINED_FUNCTION_32_4(v38);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v5, v11);
  }
  OUTLINED_FUNCTION_23_9(v46);
  v31 = v52;
  OUTLINED_FUNCTION_24_4(v4);
  sub_190BE4EB0();
  v32 = v45;
  OUTLINED_FUNCTION_24_4(v45);
  OUTLINED_FUNCTION_3_12(v32);
  if (v29)
  {
    OUTLINED_FUNCTION_16_11();
    OUTLINED_FUNCTION_2_16(v31);
    OUTLINED_FUNCTION_2_16((uint64_t)v47);
    v36 = v32;
  }
  else
  {
    v33 = v53;
    v34 = v41;
    OUTLINED_FUNCTION_91(v41, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32));
    OUTLINED_FUNCTION_91(v40, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16));
    v35 = v49;
    OUTLINED_FUNCTION_23_9(v49);
    OUTLINED_FUNCTION_19_4(v35);
    OUTLINED_FUNCTION_0_14();
    sub_190BE4EB0();
    OUTLINED_FUNCTION_16_11();
    OUTLINED_FUNCTION_2_16(v31);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v34, v11);
    v36 = (uint64_t)v47;
  }
  OUTLINED_FUNCTION_2_16(v36);
  OUTLINED_FUNCTION_0_0();
}

void Bidict.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = OUTLINED_FUNCTION_10_8();
  *v2 = v3;
  *v3 = v0;
  v3[1] = v1;
  v4 = sub_190BE59A8();
  v5 = OUTLINED_FUNCTION_8_10(v4);
  v6 = OUTLINED_FUNCTION_31_4((uint64_t)v5);
  v7 = OUTLINED_FUNCTION_7_12((uint64_t)v6);
  v8 = OUTLINED_FUNCTION_30_6((uint64_t)v7);
  OUTLINED_FUNCTION_12_5((uint64_t)v8);
  OUTLINED_FUNCTION_11_4();
  Bidict.subscript.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = OUTLINED_FUNCTION_10_8();
  *v2 = v3;
  *v3 = v0;
  v3[1] = v1;
  v4 = sub_190BE59A8();
  v5 = OUTLINED_FUNCTION_8_10(v4);
  v6 = OUTLINED_FUNCTION_31_4((uint64_t)v5);
  v7 = OUTLINED_FUNCTION_7_12((uint64_t)v6);
  v8 = OUTLINED_FUNCTION_30_6((uint64_t)v7);
  OUTLINED_FUNCTION_12_5((uint64_t)v8);
  OUTLINED_FUNCTION_11_4();
  Bidict.subscript.getter();
}

void sub_190B3C8EC()
{
  OUTLINED_FUNCTION_39();
}

void sub_190B3C900(uint64_t **a1, char a2)
{
  sub_190B3CE08(a1, a2, (void (*)(void *, void *, uint64_t))Bidict.subscript.setter);
}

void sub_190B3C91C()
{
  type metadata accessor for Bidict();
}

uint64_t sub_190B3C95C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, a1);
}

void sub_190B3C984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v6 = a4 + a3;
  v7 = *(_QWORD *)(a4 + a3 - 32);
  v8 = *(_QWORD *)(a4 + a3 - 8);
  v9 = sub_190BE59A8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - v12;
  v16 = *(_OWORD *)(v6 - 24);
  MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v15, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  v17 = v7;
  v18 = v16;
  v19 = v8;
  type metadata accessor for Bidict();
}

void sub_190B3CA68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  Bidict.subscript.setter(v1, v2, a1);
}

void sub_190B3CDE8()
{
  OUTLINED_FUNCTION_39();
}

void sub_190B3CDFC(uint64_t **a1, char a2)
{
  sub_190B3CE08(a1, a2, (void (*)(void *, void *, uint64_t))Bidict.subscript.setter);
}

void sub_190B3CE08(uint64_t **a1, char a2, void (*a3)(void *, void *, uint64_t))
{
  uint64_t *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a1;
  v5 = (void *)(*a1)[8];
  v6 = (void *)(*a1)[9];
  if ((a2 & 1) != 0)
  {
    v7 = v4[7];
    v9 = (void *)v4[4];
    v8 = (void *)v4[5];
    v10 = v4[2];
    v11 = v4[3];
    v12 = *v4;
    v13 = v4[6];
    (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v5, v6, v13);
    a3(v9, v5, v12);
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
  }
  else
  {
    v9 = (void *)v4[4];
    v8 = (void *)v4[5];
    a3(v8, v6, *v4);
  }
  free(v6);
  free(v5);
  free(v8);
  free(v9);
  free(v4);
}

uint64_t Bidict.keys.getter(_QWORD *a1)
{
  return sub_190B3CF34(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DE9EE8]);
}

uint64_t Bidict.values.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

void Bidict.isEmpty.getter()
{
  JUMPOUT(0x194015104);
}

uint64_t Bidict.count.getter(_QWORD *a1)
{
  return sub_190B3CF34(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DE9F38]);
}

uint64_t sub_190B3CF34(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(*v2, a1[2], a1[3], a1[4]);
}

Swift::Void __swiftcall Bidict.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  sub_190BE4E98();
  OUTLINED_FUNCTION_33_4();
  sub_190BE4E98();
  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_9();
}

uint64_t Bidict.startIndex.getter(_QWORD *a1)
{
  return sub_190B3CFC0(a1, MEMORY[0x1E0DE9E30]);
}

uint64_t Bidict.endIndex.getter(_QWORD *a1)
{
  return sub_190B3CFC0(a1, MEMORY[0x1E0DEA018]);
}

uint64_t sub_190B3CFC0(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(*v2, a1[2], a1[3], a1[4]);
}

uint64_t Bidict.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  char v21;

  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v7 = Bidict.startIndex.getter(a6);
  v9 = v8;
  v11 = v10;
  v12 = Bidict.endIndex.getter(a6);
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v11 & 1;
  v18 = v16 & 1;
  v19 = sub_190BE4E2C();
  MEMORY[0x194016EF8](MEMORY[0x1E0DE9F30], v19);
  result = sub_190BE4F58();
  if ((result & 1) != 0)
  {
    sub_190BE5870();
    v21 = sub_190BE5864();
    sub_190B0B578(v7, v9, v17);
    result = sub_190B0B578(v12, v14, v18);
    if ((v21 & 1) != 0)
      return sub_190BE4EBC();
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Bidict.index(after:)()
{
  return sub_190BE4E44();
}

uint64_t sub_190B3D1C0@<X0>(uint64_t a1@<X8>)
{
  return sub_190B3D1D8((uint64_t (*)(void))Bidict.startIndex.getter, a1);
}

uint64_t sub_190B3D1CC@<X0>(uint64_t a1@<X8>)
{
  return sub_190B3D1D8((uint64_t (*)(void))Bidict.endIndex.getter, a1);
}

uint64_t sub_190B3D1D8@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  result = a1();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  return result;
}

void (*sub_190B3D204(uint64_t **a1, uint64_t a2, _QWORD *a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6 = (uint64_t *)malloc(0x40uLL);
  *a1 = v6;
  v7 = a3[2];
  v8 = a3[3];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6[4] = TupleTypeMetadata2;
  v10 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6[5] = v10;
  v11 = (char *)malloc(*(_QWORD *)(v10 + 64));
  v6[6] = (uint64_t)v11;
  v12 = sub_190B3D33C(v6, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16), a3);
  v14 = v13;
  v6[7] = (uint64_t)v12;
  (*(void (**)(char *))(*(_QWORD *)(v7 - 8) + 16))(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], v14, v8);
  return sub_190B3D2E8;
}

void sub_190B3D2E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_190B3D33C(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5))(uint64_t a1)
{
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  void *v12;

  v9 = a4 & 1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v11 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v11;
  v12 = malloc(*(_QWORD *)(v11 + 64));
  a1[2] = (uint64_t)v12;
  Bidict.subscript.getter((uint64_t)v12, (uint64_t)v12 + *(int *)(TupleTypeMetadata2 + 48), a2, a3, v9, a5);
  return sub_190B3D3E8;
}

void sub_190B3D3E8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 16);
  OUTLINED_FUNCTION_32_4(*(_QWORD *)(a1 + 8));
  free(v1);
}

void sub_190B3D420(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -2;
}

uint64_t sub_190B3D440@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = Bidict.index(after:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_190B3D47C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = Bidict.index(after:)();
  v7 = v6;
  v9 = v8;
  result = sub_190B0B578(v2, v3, v4);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  return result;
}

__n128 sub_190B3D4F4@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v2;
  uint64_t v4;
  __n128 result;
  unint64_t v6;
  char v7;
  __n128 v8;

  v8 = *v2;
  v4 = Bidict.startIndex.getter(a1);
  result = v8;
  *a2 = v8;
  a2[1].n128_u64[0] = v4;
  a2[1].n128_u64[1] = v6;
  a2[2].n128_u8[0] = v7 & 1;
  return result;
}

uint64_t sub_190B3D538(uint64_t a1)
{
  MEMORY[0x194016EF8](&protocol conformance descriptor for Bidict<A, B>, a1);
  return sub_190BE572C();
}

uint64_t sub_190B3D56C(uint64_t a1)
{
  MEMORY[0x194016EF8](&protocol conformance descriptor for Bidict<A, B>, a1);
  return sub_190BE575C();
}

uint64_t sub_190B3D5A0()
{
  return sub_190BE5234();
}

void sub_190B3D5C0()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B3D5D0()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B3D5E0()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B3D5F0()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B3D600()
{
  sub_190B3C91C();
}

void sub_190B3D628()
{
  sub_190B3C91C();
}

void type metadata accessor for Bidict()
{
  JUMPOUT(0x194016E74);
}

uint64_t storeEnumTagSinglePayload for ReferenceCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B3D6AC + 4 * byte_190BE9915[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B3D6E0 + 4 * byte_190BE9910[v4]))();
}

uint64_t sub_190B3D6E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B3D6E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B3D6F0);
  return result;
}

uint64_t sub_190B3D6FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B3D704);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B3D708(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B3D710(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReferenceCodingKeys()
{
  return &type metadata for ReferenceCodingKeys;
}

uint64_t sub_190B3D72C()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_190BE5EF4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

void sub_190B3D780(char *a1, char *a2)
{
  sub_190B565BC(*a1, *a2);
}

void sub_190B3D78C()
{
  sub_190BE21C0();
}

uint64_t sub_190B3D794()
{
  return sub_190B2B2E0();
}

void sub_190B3D79C()
{
  sub_190BE2474();
}

uint64_t sub_190B3D7A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190B3D72C();
  *a1 = result;
  return result;
}

uint64_t sub_190B3D7D0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_190AF86F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_190B3D7F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190B3D77C();
  *a1 = result;
  return result;
}

void sub_190B3D81C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_190B3D828()
{
  sub_190AC0A10();
  return sub_190BE6404();
}

uint64_t sub_190B3D850()
{
  sub_190AC0A10();
  return sub_190BE6410();
}

unint64_t sub_190B3D87C()
{
  unint64_t result;

  result = qword_1EE1FFB08;
  if (!qword_1EE1FFB08)
  {
    result = MEMORY[0x194016EF8](&unk_190BE99FC, &type metadata for ReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB08);
  }
  return result;
}

uint64_t sub_190B3D8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t, char *);
  uint64_t result;
  uint64_t v17;

  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v15(v12, v14);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  return result;
}

void toKey(cls:name:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  OUTLINED_FUNCTION_1_22();
  swift_getMetatypeMetadata();
  v5 = objc_allocWithZone((Class)TFKey);
  v13 = OUTLINED_FUNCTION_2_17((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v1);
  objc_msgSend(v13, sel_address);
  OUTLINED_FUNCTION_3_13();

  *v3 = v4;
  v3[1] = v2;
  v3[2] = v0;
  OUTLINED_FUNCTION_21();
}

void toKey(protocol:name:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  id v5;
  id v6;
  _QWORD v7[4];

  OUTLINED_FUNCTION_1_22();
  v7[3] = sub_190AF7EC0();
  v7[0] = v1;
  v4 = objc_allocWithZone((Class)TFKey);
  v5 = v1;
  v6 = sub_190AD9318(v7, 0, 0);
  objc_msgSend(v6, sel_address, v7[0]);
  OUTLINED_FUNCTION_3_13();

  *v3 = v4;
  v3[1] = v2;
  v3[2] = v0;
  OUTLINED_FUNCTION_21();
}

uint64_t Key.addr.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Key.namespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t Key.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  result = sub_190BE6308();
  if (v1)
    return sub_190BE50B4();
  return result;
}

void Key.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_190BE62FC();
  OUTLINED_FUNCTION_6_11();
  if (v1)
    OUTLINED_FUNCTION_5_10();
  sub_190BE6314();
  OUTLINED_FUNCTION_4_14();
}

_QWORD *assignWithCopy for Key(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Key(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Key(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Key(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Key()
{
  return &type metadata for Key;
}

uint64_t Safe.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_190BE59A8();
  return OUTLINED_FUNCTION_7_1(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t Safe.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_190BE59A8();
  return OUTLINED_FUNCTION_7_1(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*Safe.value.modify())(_QWORD)
{
  return nullsub_1;
}

void KeyedDecodingContainer.decode<A>(_:forKey:onFailureDefaultTo:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;

  OUTLINED_FUNCTION_11_5();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_19_5();
  sub_190BE5F3C();
  if (v0)
  {
    sub_190BE5894();
    sub_190B0C000();
    v7 = (__n128 *)OUTLINED_FUNCTION_10_9();
    v8 = OUTLINED_FUNCTION_1_23(v7, (__n128)xmmword_190BE8430);
    v10 = v9;
    v11 = MEMORY[0x1E0DEA968];
    v7[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v12 = sub_190B0C064();
    v7[4].n128_u64[0] = v12;
    v7[2].n128_u64[0] = v8;
    v7[2].n128_u64[1] = v10;
    OUTLINED_FUNCTION_165(v12, (unint64_t *)&qword_1ED034920);
    OUTLINED_FUNCTION_6_12();
    v7[6].n128_u64[0] = v11;
    v7[6].n128_u64[1] = v12;
    v7[4].n128_u64[1] = 0;
    v7[5].n128_u64[0] = 0xE000000000000000;
    sub_190B0BFC4();
    v13 = (void *)OUTLINED_FUNCTION_17_6();
    sub_190BE4A00();
    OUTLINED_FUNCTION_41_1();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v6, v4, v2);
  }
  OUTLINED_FUNCTION_0_15();
}

uint64_t sub_190B3DDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_190BE59A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void KeyedDecodingContainer.decode<A>(_:forKey:orKey:)()
{
  void *v0;

  OUTLINED_FUNCTION_13_9();
  sub_190BE5F3C();
  if (v0)
  {
    OUTLINED_FUNCTION_15_9();
    sub_190BE5F3C();

  }
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:orKey:)@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a2;
  v7 = sub_190BE59A8();
  v14 = *(_QWORD *)(v7 - 8);
  v15 = v7;
  OUTLINED_FUNCTION_81_0();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - v10;
  v13[1] = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_14_4();
  sub_190BE5F3C();
  if (!a1)
    return __swift_storeEnumTagSinglePayload(a4, 0, 1, a3);
  OUTLINED_FUNCTION_14_4();
  sub_190BE5F0C();
  OUTLINED_FUNCTION_41_1();

  OUTLINED_FUNCTION_0_3((uint64_t)v11, 1);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v15);
  return OUTLINED_FUNCTION_0_3(a4, 1);
}

uint64_t KeyedDecodingContainer.decodeSafeArray<A>(_:forKey:orKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v11;
  uint64_t v12;

  v11 = KeyedDecodingContainer.decodeSafeArray<A>(_:forKey:)(a1, a2, a4, a5, a6);
  if (!v6)
    return v11;
  v12 = KeyedDecodingContainer.decodeSafeArray<A>(_:forKey:)(v11, a3, a4, a5, a6);

  return v12;
}

uint64_t KeyedDecodingContainer.decodeSafeArrayIfPresent<A>(_:forKey:orKey:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_13_9();
  OUTLINED_FUNCTION_19_5();
  result = KeyedDecodingContainer.decodeSafeArray<A>(_:forKey:)(v1, v2, v3, v4, v5);
  if (v0)
  {
    OUTLINED_FUNCTION_15_9();
    v12 = KeyedDecodingContainer.decodeSafeArrayIfPresent<A>(_:forKey:)(v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_41_1();
    return v12;
  }
  return result;
}

uint64_t *sub_190B3E134(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_190B3E204(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_190B3E2DC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_190B3E36C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t OptionSet<>.elements()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v12 - v8;
  sub_190BE52A0();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  sub_190BE63D4();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
}

uint64_t sub_190B3E548@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a4;
  v36 = *(_QWORD *)(a3 + 8);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = swift_checkMetadataState();
  v8 = MEMORY[0x1E0C80A78](v7);
  v34 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v32 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v32 - v15;
  v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v35 = a1;
  v37 = v18;
  v38 = v17;
  v18((char *)&v32 - v15, a1, v7);
  if ((sub_190BE5AD4() & 1) != 0)
  {
    if (sub_190BE5AC8() < 64)
    {
      v19 = sub_190BE5ABC();
      v20 = *(void (**)(char *, uint64_t))(v38 + 8);
      v20(v16, v7);
      goto LABEL_12;
    }
    v41 = 0;
    sub_190AD1EA4();
    v23 = v39;
    sub_190BE5A98();
    v27 = sub_190BE4FD0();
    v20 = *(void (**)(char *, uint64_t))(v38 + 8);
    v20(v23, v7);
    v20(v16, v7);
    goto LABEL_15;
  }
  v33 = a2;
  v21 = sub_190BE5AD4();
  v22 = sub_190BE5AC8();
  if ((v21 & 1) == 0)
  {
    if (v22 < 64)
    {
      v19 = sub_190BE5ABC();
      v20 = *(void (**)(char *, uint64_t))(v38 + 8);
      v20(v16, v7);
      a2 = v33;
LABEL_12:
      v23 = v39;
      v25 = v40;
      if (!v19)
        return __swift_storeEnumTagSinglePayload(v25, 1, 1, a2);
      goto LABEL_18;
    }
    goto LABEL_14;
  }
  if (v22 > 64)
  {
LABEL_14:
    v41 = 0;
    sub_190AD1EA4();
    v23 = v39;
    sub_190BE5A98();
    v27 = sub_190BE4FD0();
    v20 = *(void (**)(char *, uint64_t))(v38 + 8);
    v20(v23, v7);
    v20(v16, v7);
    a2 = v33;
LABEL_15:
    v25 = v40;
    if ((v27 & 1) == 0)
      goto LABEL_18;
    return __swift_storeEnumTagSinglePayload(v25, 1, 1, a2);
  }
  swift_getAssociatedConformanceWitness();
  sub_190BE6230();
  v23 = v39;
  sub_190BE6098();
  v24 = sub_190BE4F40();
  v20 = *(void (**)(char *, uint64_t))(v38 + 8);
  v20(v23, v7);
  v37(v12, v16, v7);
  a2 = v33;
  v25 = v40;
  if ((v24 & 1) == 0)
  {
    v20(v12, v7);
    v20(v16, v7);
    goto LABEL_18;
  }
  v26 = sub_190BE5ABC();
  v20(v12, v7);
  v20(v16, v7);
  if (!v26)
    return __swift_storeEnumTagSinglePayload(v25, 1, 1, a2);
LABEL_18:
  v29 = sub_190BE5AA4();
  v30 = 1 << v29;
  if (v29 >= 0x40)
    v30 = 0;
  if (v29 > 0x40)
    v30 = 0;
  v41 = v30;
  sub_190AD1EA4();
  v31 = v34;
  sub_190BE5AEC();
  sub_190BE5AB0();
  v37(v23, v31, v7);
  sub_190BE52AC();
  return ((uint64_t (*)(char *, uint64_t))v20)(v31, v7);
}

uint64_t sub_190B3EA30()
{
  return swift_deallocObject();
}

uint64_t sub_190B3EA40@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_190B3E548(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_190B3EA4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(char *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15[32];
  _QWORD v16[6];

  sub_190AD9C40();
  OUTLINED_FUNCTION_163();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_3_15();
  v4 = sub_190BE5DF8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_18();
  v6 = type metadata accessor for ReferenceEncodingPool();
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v7 + 24) = v8;
  OUTLINED_FUNCTION_0_16();
  result = __swift_getEnumTagSinglePayload(v1, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v1, v4);
    v16[3] = v6;
    v16[0] = v7;
    swift_retain();
    v10 = (void (*)(char *, _QWORD))sub_190BE42D4();
    sub_190AB3BE0((uint64_t)v16);
    v10(v15, 0);
    v11 = v16[5];
    v12 = sub_190BE42C8();
    if (v11)
    {
      sub_190B3EBD4();
      return swift_release();
    }
    else
    {
      *a1 = v12;
      a1[1] = v13;
      a1[2] = v7;
      return sub_190B3EBD4();
    }
  }
  return result;
}

uint64_t sub_190B3EBD4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  uint64_t (*v8)(_BYTE *, _QWORD);
  double v9;
  _BYTE v10[32];
  _BYTE v11[32];

  sub_190AD9C40();
  MEMORY[0x1E0C80A78](v0);
  v2 = &v10[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_190BE5DF8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_190BE5DEC();
  result = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v2, v3);
    v8 = (uint64_t (*)(_BYTE *, _QWORD))sub_190BE42D4();
    v9 = sub_190AB3F38();
    (*(void (**)(_BYTE *, uint64_t, double))(v4 + 8))(v6, v3, v9);
    sub_190AD9BB8((uint64_t)v11);
    return v8(v10, 0);
  }
  return result;
}

uint64_t ReferenceEncoder.__allocating_init()()
{
  swift_allocObject();
  return _s13TeaFoundation16ReferenceEncoderCACycfc_0();
}

uint64_t ReferenceEncoder.__deallocating_deinit()
{
  _s13TeaFoundation16ReferenceEncoderCfd_0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReferenceEncoder()
{
  uint64_t result;

  result = qword_1ED02E9A8;
  if (!qword_1ED02E9A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190B3ED98()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ReferenceEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReferenceEncoder.encodeWithReferences<A>(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(*v0 + class metadata base offset for ReferenceEncoder))();
}

uint64_t sub_190B3EE04()
{
  return type metadata accessor for ReferenceEncoder();
}

unint64_t sub_190B3EE0C()
{
  unint64_t result;

  result = qword_1EE1FE030;
  if (!qword_1EE1FE030)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ReferenceCodingError, &type metadata for ReferenceCodingError);
    atomic_store(result, (unint64_t *)&qword_1EE1FE030);
  }
  return result;
}

uint64_t sub_190B3EE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
    return a4 == 0;
  if (!a4)
    return 0;
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_190BE60BC();
}

uint64_t sub_190B3EE80(uint64_t *a1, uint64_t *a2)
{
  return sub_190B3EE48(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_190B3EED4(uint64_t a1, unsigned __int8 a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v50;

  if (a1 < 0)
  {
LABEL_42:
    result = sub_190BE5E4C();
    __break(1u);
  }
  else
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = MEMORY[0x1E0DEE9D8];
    v48 = v7 + 16;
    v8 = swift_allocObject();
    v9 = v8;
    *(_QWORD *)(v8 + 16) = 15;
    v10 = HIBYTE(a4) & 0xF;
    if (a1 && ((a4 & 0x2000000000000000) != 0 ? (v11 = HIBYTE(a4) & 0xF) : (v11 = a3 & 0xFFFFFFFFFFFFLL), v11))
    {
      v46 = a1;
      v50 = 4 * v11;
      v12 = MEMORY[0x1E0DEE9D8];
      v13 = 15;
      v14 = 15;
      v15 = 15;
      v47 = v8;
      do
      {
        v16 = sub_190BE5198();
        v18 = sub_190AFF164(v16, v17);
        if ((v18 & 0x100000000) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v19 = v18;
        swift_bridgeObjectRelease();
        v20 = (v19 - 14) <= 0xFFFFFFFB && (v19 - 8232) >= 2;
        if (!v20 || v19 == 133)
        {
          v21 = (v14 >> 14 == v13 >> 14) & a2;
          if (v21 != 1)
          {
            if (v13 >> 14 < v14 >> 14)
              goto LABEL_42;
            v22 = sub_190BE51BC();
            v24 = v23;
            v26 = v25;
            v28 = v27;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_190AE53B4();
              v12 = v33;
            }
            v29 = *(_QWORD *)(v12 + 16);
            if (v29 >= *(_QWORD *)(v12 + 24) >> 1)
            {
              sub_190AE53B4();
              v12 = v34;
            }
            *(_QWORD *)(v12 + 16) = v29 + 1;
            v30 = (_QWORD *)(v12 + 32 * v29);
            v30[4] = v22;
            v30[5] = v24;
            v30[6] = v26;
            v30[7] = v28;
            v9 = v47;
            *(_QWORD *)v48 = v12;
          }
          v31 = sub_190BE50CC();
          *(_QWORD *)(v9 + 16) = v31;
          if ((v21 & 1) != 0)
          {
            v14 = v31;
            v15 = v31;
          }
          else
          {
            v14 = v31;
            v15 = v31;
            if (*(_QWORD *)(v12 + 16) == v46)
              break;
          }
        }
        else
        {
          v31 = sub_190BE50CC();
        }
        v32 = v50 == v31 >> 14;
        v13 = v31;
        v31 = v15;
      }
      while (!v32);
      if (v50 == v14 >> 14 && (a2 & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v50 < v31 >> 14)
          goto LABEL_42;
        v36 = sub_190BE51BC();
        v38 = v37;
        v40 = v39;
        v42 = v41;
        swift_bridgeObjectRelease();
        sub_190AE55F0();
        v43 = *(_QWORD *)(*(_QWORD *)v48 + 16);
        sub_190AE55E4(v43);
        v12 = *(_QWORD *)v48;
        *(_QWORD *)(v12 + 16) = v43 + 1;
        v44 = (_QWORD *)(v12 + 32 * v43);
        v44[4] = v36;
        v44[5] = v38;
        v44[6] = v40;
        v44[7] = v42;
        *(_QWORD *)v48 = v12;
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_release();
      swift_release();
    }
    else
    {
      if ((a4 & 0x2000000000000000) == 0)
        v10 = a3 & 0xFFFFFFFFFFFFLL;
      v35 = 7;
      if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0)
        v35 = 11;
      sub_190B3F374(v35 | (v10 << 16), v8);
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v7 + 16);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_release();
      swift_release();
    }
    return v12;
  }
  return result;
}

void sub_190B3F2F8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_19(a1, a2);
  if (v4)
    goto LABEL_4;
  if (v2 >> 14 >= v3)
  {
    OUTLINED_FUNCTION_6_13();
    sub_190BE5A08();
    OUTLINED_FUNCTION_3_16();
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_15();
LABEL_4:
    OUTLINED_FUNCTION_3_9();
    return;
  }
  OUTLINED_FUNCTION_7_13();
  OUTLINED_FUNCTION_0_17();
  __break(1u);
}

void sub_190B3F374(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_19(a1, a2);
  if (v4)
    goto LABEL_4;
  if (v2 >> 14 >= v3)
  {
    OUTLINED_FUNCTION_6_13();
    sub_190BE51BC();
    OUTLINED_FUNCTION_3_16();
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_15();
LABEL_4:
    OUTLINED_FUNCTION_3_9();
    return;
  }
  OUTLINED_FUNCTION_7_13();
  OUTLINED_FUNCTION_0_17();
  __break(1u);
}

uint64_t sub_190B3F3E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v6 = sub_190BE5168();
    OUTLINED_FUNCTION_8_12(v6);
    return v7 | 4;
  }
  else
  {
    v3 = MEMORY[0x1940153E0](15, a1 >> 16);
    OUTLINED_FUNCTION_8_12(v3);
    return v4 | 8;
  }
}

unint64_t sub_190B3F440(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_190B3F3E8(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_190B3F4AC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v8 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v8 << 16;
        }
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v12 = result >> 16;
          v6 = sub_190BE5CFC();
          v5 = v12;
        }
        if (v5 != v7 && (*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v8 = v5 - 1;
            v9 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
          }
          while (v9 == 128);
          return v8 << 16;
        }
      }
      v8 = v5;
      return v8 << 16;
    }
    v10 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v10 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v10)
      return sub_190BE5C3C();
  }
  return result;
}

uint64_t sub_190B3F5B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x190B3F610);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_190B3F5CC + dword_190B3F614[a4 >> 62]))(v5);
}

uint64_t sub_190B3F624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;

  v9 = sub_190B3F6A8(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2)
      return 0;
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_190B3F5B4(a1, a2, a4, a5);
}

uint64_t sub_190B3F6A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_190B3F6BC + dword_190B3F764[a4 >> 62]))();
}

uint64_t sub_190B3F6D8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;

  if (v1 >= a1)
  {
    v5 = __OFSUB__(0, a1);
    v3 = a1 == 0;
    v4 = -a1 < 0;
  }
  else
  {
    v5 = 0;
    v3 = 0;
    v4 = 0;
  }
  if (!(v4 ^ v5 | v3))
  {
    __break(1u);
    JUMPOUT(0x190B3F75CLL);
  }
  return ((uint64_t (*)(void))((char *)&loc_190B3F710 + dword_190B3F774[v2]))();
}

uint64_t sub_190B3F784()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190B3F7A8()
{
  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for HttpParser.ParserError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HttpParser.ParserError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_190B3F85C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

ValueMetadata *type metadata accessor for HttpParser.ParserError()
{
  return &type metadata for HttpParser.ParserError;
}

uint64_t sub_190B3F884(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v3 = OUTLINED_FUNCTION_0_18(a1);
  swift_getMetatypeMetadata();
  v4 = objc_allocWithZone((Class)TFKey);
  v12 = OUTLINED_FUNCTION_1_7((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, a2);
  v13 = objc_msgSend(v12, sel_address);

  sub_190B3F910(v3, (uint64_t)v13, 0, 0);
  return OUTLINED_FUNCTION_3_17();
}

uint64_t sub_190B3F910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AFA238();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  sub_190B3FE88(0, v8, v9, v10);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  swift_beginAccess();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_unknownObjectRetain();
  sub_190AF35A4(v11, a2, a3, a4);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B3FA88(_QWORD *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  OUTLINED_FUNCTION_0_18(a1);
  swift_getMetatypeMetadata();
  v3 = objc_allocWithZone((Class)TFKey);
  v11 = OUTLINED_FUNCTION_1_7((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, a2);
  objc_msgSend(v11, sel_address);
  OUTLINED_FUNCTION_3_13();

  OUTLINED_FUNCTION_4_16();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_2_20();
}

uint64_t sub_190B3FBCC(_QWORD *a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v3 = OUTLINED_FUNCTION_0_18(a1);
  sub_190AF7EC0();
  v4 = objc_allocWithZone((Class)TFKey);
  v5 = a2;
  v13 = OUTLINED_FUNCTION_1_7((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, (uint64_t)a2);
  v14 = objc_msgSend(v13, sel_address);

  sub_190B3F910(v3, (uint64_t)v14, 0, 0);
  return OUTLINED_FUNCTION_3_17();
}

uint64_t sub_190B3FCDC(_QWORD *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  OUTLINED_FUNCTION_0_18(a1);
  sub_190AF7EC0();
  v3 = objc_allocWithZone((Class)TFKey);
  v4 = a2;
  v12 = OUTLINED_FUNCTION_1_7((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, (uint64_t)a2);
  objc_msgSend(v12, sel_address);
  OUTLINED_FUNCTION_3_13();

  OUTLINED_FUNCTION_4_16();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_2_20();
}

void sub_190B3FE20()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for BridgedContext()
{
  return objc_opt_self();
}

void sub_190B3FE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED032FE8)
  {
    v4 = type metadata accessor for PoolObject(0, MEMORY[0x1E0DEE9B0] + 8, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED032FE8);
  }
}

uint64_t sub_190B3FED4()
{
  OUTLINED_FUNCTION_26_4();
  sub_190AD2470();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_22_5();
  return OUTLINED_FUNCTION_7_14();
}

void sub_190B3FF1C()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_2_2();
  sub_190AD2470();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_22_5();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void sub_190B3FF68()
{
  sub_190B3FF1C();
}

uint64_t sub_190B3FF70()
{
  return sub_190B3FED4();
}

void sub_190B3FF78()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_9_12();
  sub_190AD2354((uint64_t)v0);
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

uint64_t sub_190B3FFA0()
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_24_5();
  return swift_bridgeObjectRelease();
}

void sub_190B40000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  BOOL v13;

  v12 = a1 == a5 && a2 == a6;
  if ((v12 || (OUTLINED_FUNCTION_14() & 1) != 0) && (a3 == a7 ? (v13 = a4 == a8) : (v13 = 0), !v13))
    sub_190BE60BC();
  else
    OUTLINED_FUNCTION_4();
}

uint64_t sub_190B40080()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_24_5();
  OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_32_0();
}

uint64_t sub_190B400E8()
{
  return sub_190B40080();
}

uint64_t sub_190B400F4()
{
  return sub_190B3FFA0();
}

uint64_t sub_190B40100()
{
  sub_190BE62FC();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE50B4();
  swift_bridgeObjectRelease();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE50B4();
  swift_bridgeObjectRelease();
  return sub_190BE6314();
}

void sub_190B40180(uint64_t *a1, uint64_t *a2)
{
  sub_190B40000(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t _s13TeaFoundation26ApplicationStateManagerIOSCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *assignWithCopy for CodableError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CodableError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for QueryItem()
{
  OUTLINED_FUNCTION_23();
}

uint64_t sub_190B402FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190B403C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v4;
  swift_release();
  return a1;
}

uint64_t sub_190B4044C(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_190B4048C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Route()
{
  OUTLINED_FUNCTION_23();
}

void type metadata accessor for RouteKey()
{
  OUTLINED_FUNCTION_23();
}

unint64_t sub_190B404F8()
{
  unint64_t result;

  result = qword_1EE1FFB18;
  if (!qword_1EE1FFB18)
  {
    result = MEMORY[0x194016EF8](&unk_190BE9CFC, &unk_1E2CE31D0);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB18);
  }
  return result;
}

BOOL sub_190B40534(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL8 v16;

  v5 = a4 >> 14;
  OUTLINED_FUNCTION_26_4();
  if (v5 == a3 >> 14)
  {
LABEL_13:
    OUTLINED_FUNCTION_13_10();
    v15 = v14;
    OUTLINED_FUNCTION_12_6();
    v16 = v15 == 0;
  }
  else
  {
    OUTLINED_FUNCTION_74();
    while (1)
    {
      OUTLINED_FUNCTION_16_12();
      v6 = sub_190BE59F0();
      v8 = v7;
      OUTLINED_FUNCTION_16_12();
      v9 = sub_190BE59B4();
      v10 = OUTLINED_FUNCTION_13_10();
      if (!v11)
        break;
      if (v6 == v10 && v11 == v8)
      {
        OUTLINED_FUNCTION_30_0();
        OUTLINED_FUNCTION_62();
      }
      else
      {
        v13 = OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_30_0();
        OUTLINED_FUNCTION_62();
        if ((v13 & 1) == 0)
        {
          OUTLINED_FUNCTION_20();
          v16 = 0;
          goto LABEL_15;
        }
      }
      if (v5 == v9 >> 14)
      {
        OUTLINED_FUNCTION_20();
        goto LABEL_13;
      }
    }
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_30_0();
    v16 = 1;
  }
LABEL_15:
  OUTLINED_FUNCTION_62();
  return v16;
}

uint64_t sub_190B40660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;

  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_74();
  v0 = OUTLINED_FUNCTION_13_10();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    while (1)
    {
      v4 = sub_190BE5120();
      if (!v5)
        break;
      if (v2 == v4 && v3 == v5)
      {
        OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_62();
      }
      else
      {
        v7 = OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_62();
        if ((v7 & 1) == 0)
        {
          OUTLINED_FUNCTION_12_6();
          OUTLINED_FUNCTION_27_6();
          return 0;
        }
      }
      v2 = OUTLINED_FUNCTION_13_10();
      v3 = v8;
      if (!v8)
        goto LABEL_12;
    }
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_12_6();
    OUTLINED_FUNCTION_27_6();
    return 1;
  }
  else
  {
LABEL_12:
    OUTLINED_FUNCTION_12_6();
    sub_190BE5120();
    v10 = v9;
    OUTLINED_FUNCTION_27_6();
    v11 = v10 == 0;
    OUTLINED_FUNCTION_62();
  }
  return v11;
}

uint64_t sub_190B4077C()
{
  OUTLINED_FUNCTION_21_4();
  return sub_190B127B0();
}

void sub_190B4078C(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_74();
    sub_190BE5EAC();
    OUTLINED_FUNCTION_20();
  }
  JUMPOUT(0x194015F2CLL);
}

void sub_190B407EC()
{
  OUTLINED_FUNCTION_21_4();
  sub_190B12880();
}

uint64_t sub_190B407FC(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  char *v24;
  char *v25;
  BOOL v26;
  __int128 v27;
  _OWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  char v38;
  BOOL v40;
  unint64_t v41;
  BOOL v42;
  __int128 v43;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  _OWORD *v50;
  char *v51;
  unint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  unint64_t v56;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 32;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 32;
  if (v9 >= v11)
  {
    sub_190AF81D4(a2, (uint64_t)(a3 - (_QWORD)a2) / 32, a4);
    v12 = &v4[32 * v11];
    if (v7 >= v6 || v10 < 32)
      goto LABEL_53;
    v29 = (_OWORD *)(a3 - 32);
    v48 = v4;
    v54 = v7;
    while (1)
    {
      v30 = v12 - 32;
      v50 = v29 + 2;
      v52 = (unint64_t)v12;
      v32 = *((_QWORD *)v12 - 2);
      v31 = *((_QWORD *)v12 - 1);
      v56 = (unint64_t)v6;
      v33 = v6 - 32;
      v34 = *((_QWORD *)v6 - 2);
      v35 = *((_QWORD *)v6 - 1);
      v36 = *((_QWORD *)v12 - 4) == *((_QWORD *)v6 - 4) && *((_QWORD *)v12 - 3) == *((_QWORD *)v6 - 3);
      if (v36
        || (v46 = *((_QWORD *)v6 - 2),
            v47 = *((_QWORD *)v12 - 1),
            v37 = *((_QWORD *)v12 - 2),
            v38 = sub_190BE60BC(),
            v34 = v46,
            v31 = v47,
            v32 = v37,
            (v38 & 1) != 0))
      {
        if (v32 == v34 && v31 == v35)
          goto LABEL_43;
      }
      if ((sub_190BE60BC() & 1) == 0)
      {
LABEL_43:
        v42 = v50 != (_OWORD *)v52 || (unint64_t)v29 >= v52;
        v12 = v30;
        v4 = v48;
        v6 = (char *)v56;
        v41 = (unint64_t)v54;
        if (!v42)
          goto LABEL_49;
      }
      else
      {
        v4 = v48;
        v40 = v50 != (_OWORD *)v56 || (unint64_t)v29 >= v56;
        v30 = v33;
        v6 = v33;
        v12 = (char *)v52;
        v41 = (unint64_t)v54;
        if (!v40)
          goto LABEL_49;
      }
      v43 = *((_OWORD *)v30 + 1);
      *v29 = *(_OWORD *)v30;
      v29[1] = v43;
LABEL_49:
      v29 -= 2;
      if ((unint64_t)v6 <= v41 || v12 <= v4)
        goto LABEL_53;
    }
  }
  sub_190AF81D4(a1, (a2 - a1) / 32, a4);
  v12 = &v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    v49 = a3;
    v51 = &v4[32 * v9];
    do
    {
      v53 = v7;
      v13 = *(_QWORD *)v6;
      v14 = *((_QWORD *)v6 + 1);
      v55 = v6;
      v15 = *((_QWORD *)v6 + 2);
      v16 = *((_QWORD *)v6 + 3);
      v17 = *(_QWORD *)v4;
      v18 = *((_QWORD *)v4 + 1);
      v19 = v4;
      v20 = *((_QWORD *)v4 + 2);
      v21 = *((_QWORD *)v4 + 3);
      v22 = v13 == v17 && v14 == v18;
      if ((v22 || (sub_190BE60BC() & 1) != 0) && (v15 == v20 ? (v23 = v16 == v21) : (v23 = 0), v23)
        || (sub_190BE60BC() & 1) == 0)
      {
        v24 = v19;
        v4 = v19 + 32;
        v25 = v53;
        v26 = v53 == v19;
        v6 = v55;
      }
      else
      {
        v24 = v55;
        v6 = v55 + 32;
        v25 = v53;
        v26 = v53 == v55;
        v4 = v19;
      }
      v12 = v51;
      if (!v26)
      {
        v27 = *((_OWORD *)v24 + 1);
        *(_OWORD *)v25 = *(_OWORD *)v24;
        *((_OWORD *)v25 + 1) = v27;
      }
      v7 = v25 + 32;
    }
    while (v4 < v51 && (unint64_t)v6 < v49);
  }
  v6 = v7;
LABEL_53:
  sub_190AF81D4(v4, (v12 - v4) / 32, v6);
  return 1;
}

char *sub_190B40AAC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_190B40BA8();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  OUTLINED_FUNCTION_20();
  return v10;
}

char *sub_190B40B98()
{
  char *v0;
  int64_t v1;
  char v2;
  char *v3;

  v0 = (char *)OUTLINED_FUNCTION_21_4();
  return sub_190B40AAC(v0, v1, v2, v3);
}

void sub_190B40BA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1FFB20)
  {
    sub_190ADD190();
    v0 = sub_190BE5FCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1FFB20);
  }
}

void sub_190B40BFC()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_21_4();
  sub_190B3BF28(v0, v1, v2, v3);
}

uint64_t storeEnumTagSinglePayload for RouteMatchResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B40C58 + 4 * byte_190BE9C25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B40C8C + 4 * byte_190BE9C20[v4]))();
}

uint64_t sub_190B40C8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B40C94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B40C9CLL);
  return result;
}

uint64_t sub_190B40CA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B40CB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B40CB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B40CBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RouteMatchResult()
{
  return &type metadata for RouteMatchResult;
}

unint64_t sub_190B40CDC()
{
  unint64_t result;

  result = qword_1EE1FFB28;
  if (!qword_1EE1FFB28)
  {
    result = MEMORY[0x194016EF8](&unk_190BE9E04, &type metadata for RouteMatchResult);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB28);
  }
  return result;
}

uint64_t sub_190B40D18()
{
  sub_190BE4D54();
  sub_190AC2574(&qword_1ED02F330, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
  return sub_190BE4D30();
}

void sub_190B40E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = sub_190BE4D60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190AC2574(&qword_1ED02F338, v7, MEMORY[0x1E0CA9A58]);
  v8 = sub_190BE51D4();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_190AD2C9C();
  v9 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_190BE51C8();
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = v37;
    if (v8)
    {
      v31[1] = v1;
      v11 = *(_QWORD *)(v36 + 16);
      v34 = v36;
      *(_QWORD *)&v35 = v11;
      v33 = v36 + 32;
      v32 = xmmword_190BE7CD0;
      v12 = v37;
      while ((_QWORD)v35 != v12)
      {
        if (v10 < 0)
          goto LABEL_21;
        if (v12 >= *(_QWORD *)(v34 + 16))
          goto LABEL_22;
        v13 = v10;
        v14 = *(_BYTE *)(v33 + v12);
        sub_190B0C000();
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = v32;
        *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v15 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v15 + 32) = v14;
        v16 = sub_190BE503C();
        v18 = v17;
        v38 = v9;
        v19 = *(_QWORD *)(v9 + 16);
        if (v19 >= *(_QWORD *)(v9 + 24) >> 1)
        {
          sub_190AD2C9C();
          v9 = v38;
        }
        *(_QWORD *)(v9 + 16) = v19 + 1;
        v20 = v9 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v16;
        *(_QWORD *)(v20 + 40) = v18;
        ++v12;
        --v8;
        v10 = v13;
        if (!v8)
        {
          v37 = v12;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      v12 = v37;
LABEL_12:
      v21 = v36;
      v22 = *(_QWORD *)(v36 + 16);
      if (v12 == v22)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return;
      }
      v35 = xmmword_190BE7CD0;
      while (v12 < v22)
      {
        v23 = v12 + 1;
        v24 = *(_BYTE *)(v21 + 32 + v12);
        v37 = v23;
        sub_190B0C000();
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = v35;
        *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v25 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v25 + 32) = v24;
        v26 = sub_190BE503C();
        v28 = v27;
        v38 = v9;
        v29 = *(_QWORD *)(v9 + 16);
        if (v29 >= *(_QWORD *)(v9 + 24) >> 1)
        {
          sub_190AD2C9C();
          v9 = v38;
        }
        *(_QWORD *)(v9 + 16) = v29 + 1;
        v30 = v9 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v26;
        *(_QWORD *)(v30 + 40) = v28;
        v12 = v37;
        v22 = *(_QWORD *)(v21 + 16);
        if (v37 == v22)
          goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t static DigestAlgo.== infix(_:_:)()
{
  return 1;
}

uint64_t DigestAlgo.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t DigestAlgo.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190B411B8()
{
  return DigestAlgo.hashValue.getter();
}

uint64_t sub_190B411CC()
{
  return DigestAlgo.hash(into:)();
}

uint64_t sub_190B411E0()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t Digest.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t Digest.init()()
{
  uint64_t v0;

  return v0;
}

void sub_190B41238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v3 = sub_190BE4D54();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18];
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_190BE4D60();
  MEMORY[0x1E0C80A78](v5);
  sub_190AC2574(&qword_1ED02F330, v4, MEMORY[0x1E0CA9A10]);
  sub_190BE4D48();
  __asm { BR              X10 }
}

uint64_t sub_190B41328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_190B40D18();
  sub_190AEF3F4(v5, v4);
  sub_190BE4D3C();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
  sub_190B40E24(v1);
  *(_QWORD *)(v7 - 104) = v8;
  sub_190AFE28C();
  sub_190AC2574((unint64_t *)&qword_1ED034530, (uint64_t (*)(uint64_t))sub_190AFE28C, MEMORY[0x1E0DEAF20]);
  v9 = sub_190BE4F28();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 112) + 8))(v1, v6);
  return v9;
}

uint64_t Digest.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Digest.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_190B41504()
{
  unint64_t result;

  result = qword_1EE1FFB30;
  if (!qword_1EE1FFB30)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for DigestAlgo, &type metadata for DigestAlgo);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DigestAlgo(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190B41580 + 4 * byte_190BE9E30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190B415A0 + 4 * byte_190BE9E35[v4]))();
}

_BYTE *sub_190B41580(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190B415A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B415A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B415B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B415B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B415C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DigestAlgo()
{
  return &type metadata for DigestAlgo;
}

uint64_t type metadata accessor for Digest()
{
  return objc_opt_self();
}

uint64_t method lookup function for Digest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Digest.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_190B41610(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_190BE446C();
  if (!result || (result = sub_190BE4484(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_190BE4478();
      sub_190BE4D54();
      sub_190AC2574(&qword_1ED02F330, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
      return sub_190BE4D30();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t CodingSafeDictionary.wrappedValue.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t CodingSafeDictionary.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CodingSafeDictionary.wrappedValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CodingSafeDictionary.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CodingSafeDictionary.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD v4[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BE632C();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    type metadata accessor for SafeishDictionary();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodingSafeDictionary.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  _BYTE v9[24];
  uint64_t v10;

  v4 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BE635C();
  v8[2] = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  v5 = sub_190BE4E98();
  v6 = *(_QWORD *)(a2 + 72);
  v8[0] = *(_QWORD *)(a2 + 40);
  v8[1] = v6;
  MEMORY[0x194016EF8](MEMORY[0x1E0DEA0B8], v5, v8);
  sub_190BE6170();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_190B41928(_QWORD *a1)
{
  return CodingSafeDictionary.init(from:)(a1);
}

uint64_t sub_190B4195C(_QWORD *a1, uint64_t a2)
{
  return CodingSafeDictionary.encode(to:)(a1, a2);
}

uint64_t SingleValueStore.__allocating_init(directoryURL:filename:log:)()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_11_6();
  SingleValueStore.init(directoryURL:filename:log:)();
  return v0;
}

uint64_t SingleValueStore.__allocating_init(directory:subdirectoryPath:filename:log:)()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_11_6();
  SingleValueStore.init(directory:subdirectoryPath:filename:log:)();
  return v0;
}

Swift::Void __swiftcall SingleValueStore.reset()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)();
  uint64_t v26;

  OUTLINED_FUNCTION_72();
  v2 = (uint64_t)v0;
  v3 = *v0;
  v4 = sub_190BE4C40();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v21 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_15();
  v7 = sub_190BE4C88();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_0();
  v11 = v10 - v9;
  v12 = *(_QWORD *)(v3 + 80);
  v13 = sub_190BE59A8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v19 - v15;
  v17 = *(_QWORD *)(v2 + qword_1ED033708);
  UnfairLock.lock()();
  OUTLINED_FUNCTION_18_10();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v12);
  OUTLINED_FUNCTION_4_17();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v17, v16, v13);
  swift_endAccess();
  v25 = sub_190B42180;
  v26 = v2;
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v18 = OUTLINED_FUNCTION_23_2((uint64_t)sub_190AB3224);
  swift_retain();
  sub_190BE4C64();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_190ADCAB4((unint64_t *)&qword_1ED034E18, v5, MEMORY[0x1E0DEF510]);
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034E20, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190ADBDB0((unint64_t *)&qword_1ED034E28, (unint64_t *)&qword_1ED034E20, v5);
  sub_190BE5B70();
  MEMORY[0x194015BC0](0, v11, v1, v18);
  _Block_release(v18);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v11, v20);
  swift_release();
  sub_190AB47E0(v2);
  OUTLINED_FUNCTION_0_0();
}

void sub_190B41C70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  unsigned int v16;
  void (*v17)(char *, uint64_t);
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  _QWORD v29[2];
  id v30[2];

  v30[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_190AF8C80();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190BE4628();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190AE2064((uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_190AE4930((uint64_t)v4, (uint64_t (*)(_QWORD))sub_190AF8C80);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v9 = *(void **)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 168));
  sub_190BE45E0();
  v10 = (void *)sub_190BE4FDC();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  if (v11)
  {
    v12 = sub_190BE4A0C();
    v13 = sub_190BE58AC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_190AA0000, v12, v13, "SingleValueStore resetting state", v14, 2u);
      MEMORY[0x194017000](v14, -1, -1);
    }

    v15 = (void *)sub_190BE45A4();
    v30[0] = 0;
    v16 = objc_msgSend(v9, sel_removeItemAtURL_error_, v15, v30);

    if (v16)
    {
      v17 = *(void (**)(char *, uint64_t))(v6 + 8);
      v18 = v30[0];
      v17(v8, v5);
      return;
    }
    v19 = v30[0];
    v20 = (void *)sub_190BE4544();

    swift_willThrow();
    v21 = v20;
    v22 = v20;
    v23 = sub_190BE4A0C();
    v24 = sub_190BE5894();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)v25 = 138543362;
      v26 = v20;
      v27 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v30[0] = v27;
      sub_190BE5A2C();
      v28 = v29[0];
      *(_QWORD *)v29[0] = v27;

      _os_log_impl(&dword_190AA0000, v23, v24, "SingleValueStore failed to reset state with error: %{public}@", v25, 0xCu);
      sub_190B14274();
      swift_arrayDestroy();
      MEMORY[0x194017000](v28, -1, -1);
      MEMORY[0x194017000](v25, -1, -1);

    }
    else
    {

    }
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SingleValueStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_190AE4930(v0 + qword_1ED0336F8, (uint64_t (*)(_QWORD))sub_190AF8C80);
  OUTLINED_FUNCTION_20_6();

  OUTLINED_FUNCTION_20_6();
  swift_release();
  v1 = sub_190BE59A8();
  OUTLINED_FUNCTION_71_0(v1);

  v2 = sub_190BE4A30();
  OUTLINED_FUNCTION_71_0(v2);
  sub_190AE4930(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184), (uint64_t (*)(_QWORD))sub_190AE4A78);
  return v0;
}

uint64_t SingleValueStore.__deallocating_deinit()
{
  SingleValueStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190B42114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_190B42180()
{
  uint64_t v0;

  sub_190B41C70(v0);
}

uint64_t method lookup function for SingleValueStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleValueStore.__allocating_init(directoryURL:filename:log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of SingleValueStore.__allocating_init(directory:subdirectoryPath:filename:log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_190B421A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  char v35;
  uint64_t v36;
  void (*v37)(uint64_t, void (*)(char *, uint64_t, uint64_t));
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, char *);
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v45 = a8;
  v46 = a5;
  v59 = a1;
  v60 = a2;
  v44 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_1_0();
  v58 = v11;
  MEMORY[0x1E0C80A78](v12);
  v57 = (char *)v43 - v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v61 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v17);
  v49 = (char *)v43 - v18;
  v19 = sub_190BE59A8();
  v47 = *(_QWORD *)(v19 - 8);
  v48 = v19;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_1_0();
  v55 = v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v43 - v23;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_1_0();
  v43[1] = v26;
  MEMORY[0x1E0C80A78](v27);
  v54 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_4_0();
  v53 = v30 - v29;
  v52 = a6;
  v62 = swift_getAssociatedTypeWitness();
  v50 = *(_QWORD *)(v62 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v31);
  v56 = (char *)v43 - v32;
  v33 = sub_190BE51D4();
  v63 = sub_190BE4D78();
  sub_190BE5D8C();
  sub_190BE5D44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v51, v15);
  v54 = v15;
  result = sub_190BE51C8();
  if (v33 < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (v33)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      OUTLINED_FUNCTION_9_14();
      result = OUTLINED_FUNCTION_7_16((uint64_t)v24);
      if (v35)
        goto LABEL_19;
      v36 = OUTLINED_FUNCTION_13_11();
      v37(v36, v58);
      if (v8)
      {
        OUTLINED_FUNCTION_3_18();
        swift_release();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 32))(v45, v58, v46);
        return OUTLINED_FUNCTION_0_19();
      }
      OUTLINED_FUNCTION_0_19();
      OUTLINED_FUNCTION_6_15();
      if (!--v33)
      {
        v38 = v55;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v38 = v55;
LABEL_9:
  sub_190BE5A14();
  OUTLINED_FUNCTION_7_16(v38);
  v39 = v49;
  if (v35)
  {
    v40 = v55;
LABEL_15:
    OUTLINED_FUNCTION_3_18();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v40, v48);
    return v63;
  }
  else
  {
    v58 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 32);
    v40 = v55;
    while (1)
    {
      v58(v39, v40, AssociatedTypeWitness);
      v41 = OUTLINED_FUNCTION_13_11();
      v42(v41, v57);
      if (v8)
        break;
      OUTLINED_FUNCTION_0_19();
      OUTLINED_FUNCTION_6_15();
      OUTLINED_FUNCTION_9_14();
      OUTLINED_FUNCTION_7_16(v40);
      if (v35)
        goto LABEL_15;
    }
    OUTLINED_FUNCTION_0_19();
    OUTLINED_FUNCTION_3_18();
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v45, v57, v46);
  }
}

void Reference.init(value:type:identifier:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  v14 = v13 - v12;
  v18 = type metadata accessor for Reference(0, v17, v15, v16);
  v19 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_10_12();
  v21 = a2[1];
  if (__swift_getEnumTagSinglePayload(a1, 1, a5) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = sub_190BE59A8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
    __swift_storeEnumTagSinglePayload(a6, 1, 1, v18);
  }
  else
  {
    v23 = *a2;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
    v24(v14, a1, a5);
    v24(v6, v14, a5);
    v25 = (_QWORD *)(v6 + *(int *)(v18 + 32));
    *v25 = v23;
    v25[1] = v21;
    v26 = v6 + *(int *)(v18 + 28);
    *(_QWORD *)v26 = a3;
    *(_QWORD *)(v26 + 8) = a4;
    *(_BYTE *)(v26 + 16) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(a6, v6, v18);
    __swift_storeEnumTagSinglePayload(a6, 0, 1, v18);
    OUTLINED_FUNCTION_0_0();
  }
}

uint64_t Reference<A>.init(value:type:elementKeyPath:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD v23[6];

  v10 = *a2;
  v11 = a2[1];
  v12 = *(_QWORD *)(a4 - 8);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a6, a1, a4);
  v17 = OUTLINED_FUNCTION_14_6(v13, v14, v15, v16);
  v18 = (_QWORD *)(a6 + *(int *)(v17 + 32));
  *v18 = v10;
  v18[1] = v11;
  v23[2] = a4;
  v23[3] = a5;
  v23[4] = a3;
  v20 = sub_190B421A4((uint64_t)sub_190B4301C, (uint64_t)v23, a4, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], a5, MEMORY[0x1E0DEDD18], v19);
  OUTLINED_FUNCTION_15_10(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  result = swift_release();
  v22 = a6 + *(int *)(v17 + 28);
  *(_QWORD *)v22 = v20;
  *(_QWORD *)(v22 + 8) = 0;
  *(_BYTE *)(v22 + 16) = 1;
  return result;
}

void Reference<A>.init(value:type:elementKeyPath:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a5;
  v43 = a3;
  v45 = a6;
  v9 = sub_190BE59A8();
  v10 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_2_5();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - v13;
  v15 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_4_0();
  v18 = v17 - v16;
  v21 = type metadata accessor for Reference(0, a4, v19, v20);
  v41 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v39 - v23;
  v25 = *a2;
  v26 = a2[1];
  v40 = v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v44 = a1;
  v27(v14, a1, v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, a4) == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    v28 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v28(v44, v9);
    v28((uint64_t)v14, v9);
    v29 = 1;
    v30 = v45;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v18, v14, a4);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v24, v18, a4);
    v39 = (uint64_t)&v39;
    v32 = &v24[*(int *)(v21 + 32)];
    *(_QWORD *)v32 = v40;
    *((_QWORD *)v32 + 1) = v26;
    MEMORY[0x1E0C80A78](v31);
    v33 = v42;
    v34 = v43;
    *(&v39 - 4) = a4;
    *(&v39 - 3) = v33;
    *(&v39 - 2) = v34;
    v36 = sub_190B421A4((uint64_t)sub_190B42A48, (uint64_t)(&v39 - 6), a4, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v33, MEMORY[0x1E0DEDD18], v35);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v44, v9);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, a4);
    v37 = &v24[*(int *)(v21 + 28)];
    *(_QWORD *)v37 = v36;
    *((_QWORD *)v37 + 1) = 0;
    v37[16] = 1;
    v38 = v45;
    OUTLINED_FUNCTION_16_6(v45, (uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
    v29 = 0;
    v30 = v38;
  }
  __swift_storeEnumTagSinglePayload(v30, v29, 1, v21);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190B42A48()
{
  return swift_getAtKeyPath();
}

uint64_t *sub_190B42A70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (char *)v4 + v6;
    v11 = (char *)a2 + v6;
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(_BYTE *)(v13 + 16);
    sub_190AAED64();
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
    *(_BYTE *)(v12 + 16) = v16;
    v17 = (_QWORD *)((unint64_t)(v10 + 31) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((unint64_t)(v11 + 31) & 0xFFFFFFFFFFFFFFF8);
    *v17 = *v18;
    v17[1] = v18[1];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return v4;
}

uint64_t sub_190B42B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_BYTE *)(v10 + 16);
  sub_190AAED64();
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_BYTE *)(v9 + 16) = v13;
  sub_190AB4EA0();
  v14 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190B42C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = v11;
  *(_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_190B42CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = v11;
  sub_190AB4EA0();
  v12 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithCopy for AnyReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AAED64();
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t assignWithCopy for AnyReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_190AAED64();
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  sub_190AB4EA0();
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AnyReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_190AB4EA0();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_190B4301C()
{
  return sub_190B42A48();
}

uint64_t sub_190B43030(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_190BE5198();
  else
    return 0;
}

uint64_t sub_190B43070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_190B446E8(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v7 = 1;
  }
  else
  {
    sub_190B44768(result, v5, a1, a2);
    v7 = 0;
  }
  v8 = type metadata accessor for AuthToken();
  return __swift_storeEnumTagSinglePayload(a2, v7, 1, v8);
}

unint64_t sub_190B430F4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_190BE50E4();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
    {
      v7 = sub_190BE51BC();
      OUTLINED_FUNCTION_20();
      return v7;
    }
  }
  __break(1u);
  return result;
}

void sub_190B431C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x190B432F0);
}

uint64_t JSONPointer.components.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

TeaFoundation::JSONPointer __swiftcall JSONPointer.init(components:)(TeaFoundation::JSONPointer components)
{
  TeaFoundation::JSONPointer *v1;

  v1->components._rawValue = components.components._rawValue;
  return components;
}

Swift::Void __swiftcall JSONPointer.append(_:)(TeaFoundation::JSONPointer::Component a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)a1.unescapedValue._countAndFlagsBits;
  v2 = *(_QWORD *)(a1.unescapedValue._countAndFlagsBits + 8);
  OUTLINED_FUNCTION_74();
  sub_190B0BF7C();
  v4 = *(_QWORD *)(*v1 + 16);
  sub_190B0C24C(v4);
  v5 = *v1;
  *(_QWORD *)(v5 + 16) = v4 + 1;
  v6 = v5 + 16 * v4;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *v1 = v5;
  OUTLINED_FUNCTION_4();
}

TeaFoundation::JSONPointer __swiftcall JSONPointer.appending(_:)(TeaFoundation::JSONPointer::Component a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  TeaFoundation::JSONPointer result;

  v3 = v1;
  v5 = *(_QWORD *)a1.unescapedValue._countAndFlagsBits;
  v4 = *(_QWORD *)(a1.unescapedValue._countAndFlagsBits + 8);
  *v1 = *v2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B0BF7C();
  v6 = *(_QWORD *)(*v3 + 16);
  sub_190B0C24C(v6);
  v7 = *v3;
  *(_QWORD *)(v7 + 16) = v6 + 1;
  v8 = v7 + 16 * v6;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v4;
  OUTLINED_FUNCTION_9();
  return result;
}

uint64_t JSONPointer.Component.jsonEscaped.getter()
{
  uint64_t v0;

  sub_190AD8E3C();
  OUTLINED_FUNCTION_0_20();
  v0 = OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_3_1();
  return v0;
}

TeaFoundation::JSONPointer_optional __swiftcall JSONPointer.init(rawValue:)(Swift::String rawValue)
{
  _QWORD *v1;
  unint64_t object;
  uint64_t countAndFlagsBits;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Bool v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  TeaFoundation::JSONPointer_optional result;

  object = (unint64_t)rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v5 = sub_190B43030(countAndFlagsBits, object);
  v7 = v6;
  OUTLINED_FUNCTION_62();
  if (!v7)
  {
LABEL_7:
    OUTLINED_FUNCTION_62();
    v10 = HIBYTE(object) & 0xF;
    if ((object & 0x2000000000000000) == 0)
      v10 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      v11 = 0;
LABEL_21:
      *v4 = v11;
      OUTLINED_FUNCTION_0_0();
      goto _$s13TeaFoundation11JSONPointerV8rawValueACSgSS_tcfC;
    }
LABEL_20:
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  if (v5 == 47 && v7 == 0xE100000000000000)
  {
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_15_11();
    OUTLINED_FUNCTION_3_1();
    if ((v9 & 1) == 0)
      goto LABEL_7;
  }
  v12 = sub_190B430F4(1uLL, countAndFlagsBits, object);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v47 = 47;
  v48 = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v12);
  v34[2] = &v47;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v19 = sub_190AE4B28(0x7FFFFFFFFFFFFFFFLL, 0, (uint64_t (*)(uint64_t))sub_190AE4EAC, (uint64_t)v34, v12, v14, v16, v18);
  OUTLINED_FUNCTION_3_1();
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    OUTLINED_FUNCTION_20();
    goto LABEL_20;
  }
  v36 = v4;
  v51 = MEMORY[0x1E0DEE9D8];
  sub_190B3BCB8();
  v11 = v51;
  v21 = sub_190B44610();
  sub_190AD8E3C();
  v35 = v19;
  v22 = (uint64_t *)(v19 + 56);
  v37 = v21;
  while (1)
  {
    v38 = v20;
    v23 = *(v22 - 2);
    v24 = *(v22 - 1);
    v25 = *v22;
    v47 = *(v22 - 3);
    v48 = v23;
    v49 = v24;
    v50 = v25;
    v43 = v47;
    v44 = v23;
    v45 = v24;
    v46 = v25;
    v41 = 47;
    v42 = 0xE100000000000000;
    OUTLINED_FUNCTION_16_2();
    v26 = MEMORY[0x1E0DEA968];
    v27 = sub_190BE5A8C();
    if ((v27 & 1) != 0)
      break;
    v42 = 0xE100000000000000;
    v43 = 12670;
    v44 = 0xE200000000000000;
    v41 = 47;
    OUTLINED_FUNCTION_40_3();
    v35 = v26;
    v36 = (_QWORD *)v21;
    OUTLINED_FUNCTION_37_5();
    sub_190BE5A68();
    OUTLINED_FUNCTION_23_10();
    v43 = 47;
    v44 = v21;
    v40 = 0xE100000000000000;
    v41 = 12414;
    v42 = 0xE200000000000000;
    v39 = 126;
    OUTLINED_FUNCTION_40_3();
    v29 = OUTLINED_FUNCTION_1_25();
    v31 = v30;
    OUTLINED_FUNCTION_16();
    v51 = v11;
    v32 = *(_QWORD *)(v11 + 16);
    if (v32 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      sub_190B3BCB8();
      v11 = v51;
    }
    *(_QWORD *)(v11 + 16) = v32 + 1;
    v33 = v11 + 16 * v32;
    *(_QWORD *)(v33 + 32) = v29;
    *(_QWORD *)(v33 + 40) = v31;
    v22 += 4;
    v21 = v37;
    v20 = v38 - 1;
    if (v38 == 1)
    {
      swift_bridgeObjectRelease();
      v4 = v36;
      goto LABEL_21;
    }
  }
  __break(1u);
_$s13TeaFoundation11JSONPointerV8rawValueACSgSS_tcfC:
  result.value.components._rawValue = (void *)v27;
  result.is_nil = v28;
  return result;
}

void JSONPointer.Component.init<A>(jsonEscaped:)(char *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, a1, a2);
  v23 = 47;
  v24 = 0xE100000000000000;
  v11 = sub_190AD8E3C();
  v12 = MEMORY[0x1E0DEA968];
  v13 = sub_190BE5A8C();
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, a2);
  if ((v13 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v23 = 12670;
    v24 = 0xE200000000000000;
    v21 = 47;
    v22 = 0xE100000000000000;
    OUTLINED_FUNCTION_40_3();
    v19 = v12;
    v20 = a3;
    v23 = sub_190BE5A68();
    v24 = v15;
    v21 = 12414;
    v22 = 0xE200000000000000;
    v19 = 126;
    v20 = 0xE100000000000000;
    OUTLINED_FUNCTION_40_3();
    v23 = v12;
    v24 = v11;
    OUTLINED_FUNCTION_37_5();
    v16 = sub_190BE5A68();
    v18 = v17;
    v14(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a4 = v16;
    a4[1] = v18;
    OUTLINED_FUNCTION_0_0();
  }
}

unint64_t sub_190B43904(Swift::String *a1)
{
  return (unint64_t)JSONPointer.init(rawValue:)(*a1);
}

uint64_t sub_190B43910@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = JSONPointer.description.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_190B43934()
{
  sub_190B446AC();
  return sub_190BE52E8();
}

uint64_t sub_190B43990()
{
  sub_190B446AC();
  return sub_190BE52B8();
}

uint64_t static JSONPointer.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v2 = *a1;
  v3 = *a2;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = 47;
  if (!v4)
    v5 = 0;
  v6 = 0xE000000000000000;
  if (v4)
    v6 = 0xE100000000000000;
  v30 = v5;
  v32 = v6;
  v7 = MEMORY[0x1E0DEE9D8];
  v28 = *a2;
  if (v4)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_21_5();
    sub_190AD8E3C();
    v8 = v2 + 40;
    do
    {
      OUTLINED_FUNCTION_16_2();
      OUTLINED_FUNCTION_0_20();
      OUTLINED_FUNCTION_43_6();
      v9 = OUTLINED_FUNCTION_0_20();
      v11 = v10;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_35();
      v12 = *(_QWORD *)(v29 + 16);
      if (v12 >= *(_QWORD *)(v29 + 24) >> 1)
        OUTLINED_FUNCTION_25_7();
      v8 += 16;
      *(_QWORD *)(v29 + 16) = v12 + 1;
      v13 = v29 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v11;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v28;
    v7 = MEMORY[0x1E0DEE9D8];
  }
  OUTLINED_FUNCTION_39_1();
  sub_190AD1E54();
  OUTLINED_FUNCTION_12_7();
  swift_bridgeObjectRelease();
  sub_190BE5114();
  OUTLINED_FUNCTION_81();
  v15 = v30;
  v14 = v32;
  v16 = *(_QWORD *)(v3 + 16);
  if (v16)
  {
    v26 = v30;
    v27 = v32;
    v31 = 47;
    v33 = 0xE100000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AD2C9C();
    sub_190AD8E3C();
    v17 = v3 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_0_20();
      OUTLINED_FUNCTION_43_6();
      v18 = OUTLINED_FUNCTION_0_20();
      v20 = v19;
      OUTLINED_FUNCTION_81();
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v7 + 16);
      if (v21 >= *(_QWORD *)(v7 + 24) >> 1)
        OUTLINED_FUNCTION_25_7();
      v17 += 16;
      *(_QWORD *)(v7 + 16) = v21 + 1;
      v22 = v7 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v14 = v27;
    v15 = v26;
  }
  else
  {
    v31 = 0;
    v33 = 0xE000000000000000;
  }
  OUTLINED_FUNCTION_12_7();
  OUTLINED_FUNCTION_23_10();
  sub_190BE5114();
  OUTLINED_FUNCTION_16();
  if (v15 == v31 && v14 == v33)
    v24 = 1;
  else
    v24 = sub_190BE60BC();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_20();
  return v24 & 1;
}

uint64_t JSONPointer.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    OUTLINED_FUNCTION_21_5();
    sub_190AD8E3C();
    v3 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_25();
      v4 = OUTLINED_FUNCTION_1_25();
      v6 = v5;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_20();
      v7 = *(_QWORD *)(v10 + 16);
      if (v7 >= *(_QWORD *)(v10 + 24) >> 1)
        OUTLINED_FUNCTION_25_7();
      v3 += 16;
      *(_QWORD *)(v10 + 16) = v7 + 1;
      v8 = v10 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v4;
      *(_QWORD *)(v8 + 40) = v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_39_1();
  sub_190AD1E54();
  sub_190BE4F28();
  OUTLINED_FUNCTION_16();
  sub_190BE5114();
  OUTLINED_FUNCTION_81();
  sub_190BE50B4();
  return OUTLINED_FUNCTION_62();
}

void sub_190B43F00()
{
  uint64_t *v0;

  sub_190BE21CC(*v0);
}

void sub_190B43F0C(uint64_t a1)
{
  uint64_t *v1;

  sub_190BE2574(a1, *v1);
}

uint64_t JSONPointer.Component.unescapedValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

void JSONPointer.Component.unescapedValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_4();
}

uint64_t (*JSONPointer.Component.unescapedValue.modify())(_QWORD)
{
  return nullsub_1;
}

TeaFoundation::JSONPointer::Component __swiftcall JSONPointer.Component.init(unescaped:)(TeaFoundation::JSONPointer::Component unescaped)
{
  TeaFoundation::JSONPointer::Component *v1;

  *v1 = unescaped;
  return unescaped;
}

uint64_t static JSONPointer.Component.index(_:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    result = sub_190BE5FC0();
    *a2 = result;
    a2[1] = v3;
  }
  return result;
}

uint64_t JSONPointer.Component.index.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  unsigned __int8 *v23;
  uint64_t v24;
  char v25;
  unsigned __int8 v26;
  char v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v2 = *v0;
  v1 = v0[1];
  v3 = HIBYTE(v1) & 0xF;
  v4 = *v0 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v1) & 0xF;
  else
    v5 = *v0 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain_n();
  v6 = sub_190BE5120();
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    while ((OUTLINED_FUNCTION_31_5() & 1) == 0)
    {
      v10 = v8 == 48 && v9 == 0xE100000000000000;
      if (v10)
        goto LABEL_16;
      if ((OUTLINED_FUNCTION_31_5() & 1) != 0)
      {
        OUTLINED_FUNCTION_62();
LABEL_47:
        OUTLINED_FUNCTION_20();
        goto LABEL_48;
      }
      if (v8 == 57 && v9 == 0xE100000000000000)
      {
        OUTLINED_FUNCTION_62();
      }
      else
      {
LABEL_16:
        v12 = sub_190BE60BC();
        OUTLINED_FUNCTION_62();
        if ((v12 & 1) != 0)
          goto LABEL_47;
      }
      v8 = sub_190BE5120();
      v9 = v13;
      if (!v13)
        goto LABEL_20;
    }
    __break(1u);
    goto LABEL_91;
  }
LABEL_20:
  LOBYTE(v14) = v1;
  OUTLINED_FUNCTION_20();
  result = OUTLINED_FUNCTION_62();
  v16 = v2 == 48 && v1 == 0xE100000000000000;
  if (v16
    || (OUTLINED_FUNCTION_34_6(), result = OUTLINED_FUNCTION_15_11(), (result & 1) != 0)
    || (OUTLINED_FUNCTION_74(),
        v17 = OUTLINED_FUNCTION_34_6(),
        v19 = sub_190B43030(v17, v18),
        v14 = v20,
        result = OUTLINED_FUNCTION_20(),
        !v14))
  {
    if (v5)
      goto LABEL_34;
    return 0;
  }
  if (v19 == 48 && v14 == 0xE100000000000000)
  {
LABEL_48:
    OUTLINED_FUNCTION_62();
    return 0;
  }
  v22 = OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_62();
  result = 0;
  if ((v22 & 1) == 0 && v5)
  {
LABEL_34:
    if ((v1 & 0x1000000000000000) != 0)
    {
LABEL_91:
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_34_6();
      v24 = sub_190B0E0AC();
      LOBYTE(v14) = v37;
      swift_bridgeObjectRelease();
LABEL_79:
      if ((v14 & 1) != 0)
        return 0;
      else
        return v24;
    }
    if ((v1 & 0x2000000000000000) == 0)
    {
      if ((v2 & 0x1000000000000000) != 0)
      {
        v23 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        OUTLINED_FUNCTION_34_6();
        v23 = (unsigned __int8 *)sub_190BE5CFC();
        v4 = v38;
      }
      v24 = (uint64_t)sub_190ABC798(v23, v4);
      LOBYTE(v14) = v25 & 1;
      goto LABEL_79;
    }
    if (v2 == 43)
    {
      if (!v3)
        goto LABEL_94;
      if (v3 == 1)
        goto LABEL_65;
      OUTLINED_FUNCTION_11_7();
      if (!v10 & v27)
        goto LABEL_65;
      v24 = v28;
      if (v3 != 2)
      {
        OUTLINED_FUNCTION_11_7();
        if (!v10 & v27)
          goto LABEL_65;
        v24 = 10 * v24 + v29;
        if (v3 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_37();
            if (!v10 & v27)
              goto LABEL_65;
            OUTLINED_FUNCTION_8_14();
            if (!v10)
              goto LABEL_65;
            v24 = v31 + v30;
            if (__OFADD__(v31, v30))
              goto LABEL_65;
            OUTLINED_FUNCTION_28_6();
            if (v10)
              goto LABEL_79;
          }
        }
      }
    }
    else
    {
      if (v2 == 45)
      {
        if (v3)
        {
          if (v3 != 1)
          {
            OUTLINED_FUNCTION_11_7();
            if (!(!v10 & v27))
            {
              if (v3 == 2)
              {
                LOBYTE(v14) = 0;
                v24 = -(uint64_t)v26;
                goto LABEL_79;
              }
              if ((BYTE2(v2) - 48) <= 9u)
              {
                v24 = -10 * v26 - (BYTE2(v2) - 48);
                if (v3 == 3)
                  goto LABEL_78;
                while (1)
                {
                  OUTLINED_FUNCTION_37();
                  if (!v10 & v27)
                    break;
                  OUTLINED_FUNCTION_8_14();
                  if (!v10)
                    break;
                  v24 = v36 - v35;
                  if (__OFSUB__(v36, v35))
                    break;
                  OUTLINED_FUNCTION_28_6();
                  if (v10)
                    goto LABEL_79;
                }
              }
            }
          }
LABEL_65:
          v24 = 0;
          LOBYTE(v14) = 1;
          goto LABEL_79;
        }
        __break(1u);
LABEL_94:
        __break(1u);
        return result;
      }
      if (!v3 || (v2 - 48) > 9u)
        goto LABEL_65;
      v24 = (v2 - 48);
      if (v3 != 1)
      {
        OUTLINED_FUNCTION_11_7();
        if (!v10 & v27)
          goto LABEL_65;
        v24 = 10 * (v2 - 48) + v32;
        if (v3 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_37();
            if (!v10 & v27)
              goto LABEL_65;
            OUTLINED_FUNCTION_8_14();
            if (!v10)
              goto LABEL_65;
            v24 = v34 + v33;
            if (__OFADD__(v34, v33))
              goto LABEL_65;
            OUTLINED_FUNCTION_28_6();
            if (v10)
              goto LABEL_79;
          }
        }
      }
    }
LABEL_78:
    LOBYTE(v14) = 0;
    goto LABEL_79;
  }
  return result;
}

uint64_t static JSONPointer.Component.name(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t static JSONPointer.Component.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_190BE60BC();
}

uint64_t _s13TeaFoundation11JSONPointerV8rawValueSSvg_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = 47;
  if (!v2)
    v3 = 0;
  v12 = v3;
  if (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AD2C9C();
    sub_190AD8E3C();
    v4 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_16_2();
      OUTLINED_FUNCTION_2_3();
      v5 = OUTLINED_FUNCTION_2_3();
      v7 = v6;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_35();
      v8 = *(_QWORD *)(v11 + 16);
      if (v8 >= *(_QWORD *)(v11 + 24) >> 1)
        OUTLINED_FUNCTION_25_7();
      v4 += 16;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_39_1();
  sub_190AD1E54();
  sub_190BE4F28();
  OUTLINED_FUNCTION_20();
  sub_190BE5114();
  OUTLINED_FUNCTION_3_1();
  return v12;
}

unint64_t JSONPointer.debugDescription.getter()
{
  uint64_t v0;

  sub_190BE5C54();
  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_74();
  MEMORY[0x1940155C0](v0, &type metadata for JSONPointer.Component);
  sub_190BE5114();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_16();
  sub_190BE5114();
  return 0xD000000000000018;
}

unint64_t sub_190B44610()
{
  unint64_t result;

  result = qword_1EE1FFB38;
  if (!qword_1EE1FFB38)
  {
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB38);
  }
  return result;
}

unint64_t sub_190B44650()
{
  unint64_t result;

  result = qword_1EE1FFB40;
  if (!qword_1EE1FFB40)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for JSONPointer, &type metadata for JSONPointer);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB40);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONPointer()
{
  return &type metadata for JSONPointer;
}

ValueMetadata *type metadata accessor for JSONPointer.Component()
{
  return &type metadata for JSONPointer.Component;
}

unint64_t sub_190B446AC()
{
  unint64_t result;

  result = qword_1EE1FFB48;
  if (!qword_1EE1FFB48)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for JSONPointer, &type metadata for JSONPointer);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB48);
  }
  return result;
}

uint64_t sub_190B446E8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_190B44768@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v5 = *(_QWORD *)(a3 + 56);
    v6 = v5 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for AuthToken() - 8) + 72) * result;
    return sub_190B447F4(v6, a4);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_190B447F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B44838()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190B4485C()
{
  return swift_deallocObject();
}

uint64_t Promise.timeout(after:on:message:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0;
  v2 = *v0;
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_1_26();
  v3 = OUTLINED_FUNCTION_5_12();
  v5 = v4;
  *v4 = v1;
  swift_retain();
  static Promise.timeout<A>(after:on:message:)();
  v5[1] = v6;
  sub_190ADE6B0();
  static Promise.race(_:)(v3);
  OUTLINED_FUNCTION_2_0();
  return v2;
}

uint64_t static Promise.timeout<A>(after:on:message:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[8];

  v10 = sub_190B449AC(a2);
  type metadata accessor for Promise(0, a5, v11, v12);
  v16[2] = *(_QWORD *)(v5 + 80);
  v16[3] = a5;
  v16[4] = v10;
  v16[5] = a1;
  v16[6] = a3;
  v16[7] = a4;
  Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B450E0, (uint64_t)v16);
  v14 = v13;

  return v14;
}

id sub_190B449AC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  int v7;
  unsigned int *v8;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v12 = a1;
  v1 = sub_190BE4C4C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED035648 != -1)
    swift_once();
  v5 = v12;
  if ((id)qword_1ED035618 == v12)
    goto LABEL_12;
  if (qword_1ED034E10 != -1)
  {
    swift_once();
    v5 = v12;
  }
  if ((id)qword_1ED034CE8 == v5)
  {
LABEL_12:
    OUTLINED_FUNCTION_8_15((uint64_t)v5, (unint64_t *)&qword_1ED035670);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF540], v1);
  }
  else
  {
    OUTLINED_FUNCTION_8_15((uint64_t)v5, (unint64_t *)&qword_1ED034910);
    if (qword_1ED034CA8 != -1)
      swift_once();
    if ((sub_190BE5978() & 1) == 0)
      return v12;
    v6 = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
    v7 = (int)v6;
    OUTLINED_FUNCTION_8_15((uint64_t)v6, (unint64_t *)&qword_1ED035670);
    if (v7)
      v8 = (unsigned int *)MEMORY[0x1E0DEF530];
    else
      v8 = (unsigned int *)MEMORY[0x1E0DEF540];
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *v8, v1);
  }
  v10 = sub_190BE5948();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (id)v10;
}

uint64_t sub_190B44BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v24 = a6;
  v25 = a5;
  v12 = sub_190BE4C40();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190BE4C88();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a7;
  v20[5] = a8;
  aBlock[4] = sub_190B45138;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_3;
  v21 = _Block_copy(aBlock);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  sub_190BE4C64();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_190AC2574((unint64_t *)&qword_1ED034E18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_190ADCAF0();
  sub_190AC2574((unint64_t *)&qword_1ED034E28, (uint64_t (*)(uint64_t))sub_190ADCAF0, MEMORY[0x1E0DEAF38]);
  sub_190BE5B70();
  MEMORY[0x194015B84](v24, v19, v15, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return swift_release();
}

void sub_190B44DA0(void (*a1)(void *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;

  if (a4)
    v5 = a3;
  else
    v5 = 0xD000000000000011;
  if (a4)
    v6 = a4;
  else
    v6 = 0x8000000190BF36B0;
  sub_190B2850C();
  v7 = (void *)swift_allocError();
  *(_QWORD *)v8 = v5;
  *(_QWORD *)(v8 + 8) = v6;
  *(_BYTE *)(v8 + 16) = 0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  a1(v7);

}

void static Promise.timeout<A>(after:on:message:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_4_18();
  v5 = sub_190BE4CAC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - v10;
  sub_190BE4CA0();
  MEMORY[0x194014FA8](v9, v4);
  v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v9, v5);
  static Promise.timeout<A>(after:on:message:)((uint64_t)v11, v3, v2, v1, v0);
  v12(v11, v5);
  OUTLINED_FUNCTION_0_21();
}

void Promise.timeout(after:on:message:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = v4;
  v10 = *v4;
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_1_26();
  v11 = OUTLINED_FUNCTION_5_12();
  v13 = v12;
  *v12 = v5;
  v14 = *(_QWORD *)(v10 + 80);
  swift_retain();
  v13[1] = static Promise.timeout<A>(after:on:message:)(a1, a2, a3, a4, v14);
  sub_190ADE6B0();
  static Promise.race(_:)(v11);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0();
}

void static Promise.timeout<A>(after:on:promise:message:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v9 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  type metadata accessor for Promise(0, v9, a3, a4);
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_1_26();
  v10 = OUTLINED_FUNCTION_5_12();
  v12 = v11;
  OUTLINED_FUNCTION_7_17(v10, v11);
  v12[1] = static Promise.timeout<A>(after:on:message:)(a1, a2, a4, a5, v9);
  sub_190ADE6B0();
  static Promise.race(_:)(v10);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0();
}

void static Promise.timeout<A>(after:on:promise:message:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_18();
  type metadata accessor for Promise(0, *(_QWORD *)(*(_QWORD *)v0 + 80), v1, v2);
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_1_26();
  v3 = OUTLINED_FUNCTION_5_12();
  v5 = v4;
  OUTLINED_FUNCTION_7_17(v3, v4);
  static Promise.timeout<A>(after:on:message:)();
  v5[1] = v6;
  sub_190ADE6B0();
  static Promise.race(_:)(v3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_21();
}

uint64_t sub_190B450E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_190B44BAC(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7]);
}

uint64_t sub_190B4510C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_190B45138()
{
  uint64_t v0;

  sub_190B44DA0(*(void (**)(void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t *sub_190B45144(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_190AC0AB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_190B451CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190AC0AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_190B4522C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190AC0AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190B45298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190AC0AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_190B452F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190AC0AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_190B45358()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B45364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  OUTLINED_FUNCTION_2_21();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190B453D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_190B453E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  OUTLINED_FUNCTION_2_21();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
    OUTLINED_FUNCTION_4();
  }
}

void URLHandlerPattern.scheme.getter()
{
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_0();
}

void URLHandlerPattern.host.getter()
{
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_0();
}

void URLHandlerPattern.path.getter()
{
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_0();
}

void URLHandlerPattern.fragment.getter()
{
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_0();
}

uint64_t URLHandlerPattern.params.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t URLHandlerPattern.conditions.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t URLHandlerPattern.init(scheme:host:path:fragment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t result;

  sub_190B45574();
  result = sub_190BE4DFC();
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = 0;
  a9[9] = result;
  return result;
}

void sub_190B45574()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED032870)
  {
    v0 = sub_190BE5438();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED032870);
  }
}

uint64_t destroy for URLHandlerPattern()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for URLHandlerPattern(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

_QWORD *assignWithCopy for URLHandlerPattern(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for URLHandlerPattern(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerPattern(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerPattern(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_190B45888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 >= 3)
  {
    if (a5 > 1u)
      return result;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t destroy for URLHandlerPattern.Param(uint64_t a1)
{
  return sub_190B458F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_190B458F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 >= 3)
  {
    if (a5 > 1u)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for URLHandlerPattern.Param(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_190B45888(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for URLHandlerPattern.Param(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_190B45888(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_190B458F0(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for URLHandlerPattern.Param(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_190B458F0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerPattern.Param(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerPattern.Param(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_190B45AF8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_190B45B04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return result;
}

uint64_t destroy for URLHandlerPattern.Condition(uint64_t a1)
{
  return sub_190B45B24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_190B45B24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13TeaFoundation17URLHandlerPatternV9ConditionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B45B04(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for URLHandlerPattern.Condition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B45B04(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_190B45B24(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for URLHandlerPattern.Condition(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_190B45B24(v4, v5, v6);
  return a1;
}

void type metadata accessor for URLHandlerPattern.Condition()
{
  OUTLINED_FUNCTION_23();
}

uint64_t AuthToken.fetchDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_4_6();
  return OUTLINED_FUNCTION_7_1(v0, v1, v2, v3);
}

uint64_t AuthToken.url.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_6_3();
  v0 = OUTLINED_FUNCTION_4_6();
  return OUTLINED_FUNCTION_7_1(v0, v1, v2, v3);
}

uint64_t AuthToken.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_2_22() + 24));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

double AuthToken.expirationUtc.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_2_22() + 28));
}

uint64_t AuthToken.init(fetchDate:url:token:expirationUtc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  v12 = OUTLINED_FUNCTION_0_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a5, a1, v12);
  v13 = (int *)OUTLINED_FUNCTION_2_22();
  v14 = a5 + v13[5];
  v15 = OUTLINED_FUNCTION_6_3();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a2, v15);
  v17 = (_QWORD *)(a5 + v13[6]);
  *v17 = a3;
  v17[1] = a4;
  *(double *)(a5 + v13[7]) = a6;
  return result;
}

BOOL AuthToken.isExpired.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  uint64_t v9;

  v1 = OUTLINED_FUNCTION_0_1();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_2_22() + 28));
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  sub_190BE47A8();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5 <= v7;
}

uint64_t sub_190B45DFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7461446863746566 && a2 == 0xE900000000000065;
  if (v2 || (sub_190BE60BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7107189 && a2 == 0xE300000000000000;
    if (v6 || (sub_190BE60BC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
      if (v7 || (sub_190BE60BC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6974617269707865 && a2 == 0xED00006374556E6FLL)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_190BE60BC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_190B45FC0()
{
  return 4;
}

uint64_t sub_190B45FC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190B46000 + 4 * byte_190BEA330[a1]))(0x7461446863746566, 0xE900000000000065);
}

uint64_t sub_190B46000()
{
  return 7107189;
}

uint64_t sub_190B46010()
{
  return 0x6E656B6F74;
}

uint64_t sub_190B46024()
{
  return 0x6974617269707865;
}

uint64_t sub_190B46048()
{
  unsigned __int8 *v0;

  return sub_190B45FC8(*v0);
}

uint64_t sub_190B46050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190B45DFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190B46074@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190B45FC0();
  *a1 = result;
  return result;
}

uint64_t sub_190B46098()
{
  sub_190B462C4();
  return sub_190BE6404();
}

uint64_t sub_190B460C0()
{
  sub_190B462C4();
  return sub_190BE6410();
}

uint64_t AuthToken.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_190B46678(0, &qword_1ED02F3E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B462C4();
  sub_190BE6374();
  v9[15] = 0;
  sub_190BE47E4();
  sub_190AC2574(&qword_1ED02EFB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  OUTLINED_FUNCTION_7_18();
  if (!v1)
  {
    type metadata accessor for AuthToken();
    v9[14] = 1;
    sub_190BE4628();
    sub_190AC2574((unint64_t *)&qword_1ED02EFA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    OUTLINED_FUNCTION_7_18();
    v9[13] = 2;
    sub_190BE5F6C();
    v9[12] = 3;
    sub_190BE5F78();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_190B462C4()
{
  unint64_t result;

  result = qword_1ED02F2F8;
  if (!qword_1ED02F2F8)
  {
    result = MEMORY[0x194016EF8](&unk_190BEA4A4, &type metadata for AuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F2F8);
  }
  return result;
}

uint64_t AuthToken.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  char v41;
  char v42;

  v30 = a2;
  v32 = sub_190BE4628();
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_10();
  v31 = v3;
  v33 = sub_190BE47E4();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_10();
  v34 = v5;
  sub_190B46678(0, &qword_1ED02F3D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v37 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v27 - v8;
  v10 = type metadata accessor for AuthToken();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B462C4();
  v36 = v9;
  v13 = (uint64_t)v38;
  sub_190BE6344();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = v10;
  v29 = v7;
  v14 = (uint64_t)v12;
  v38 = a1;
  v15 = v35;
  v16 = v31;
  v17 = v32;
  v42 = 0;
  sub_190AC2574(qword_1ED02EFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v18 = v33;
  v19 = v34;
  sub_190BE5F3C();
  v27[1] = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v14, v19, v18);
  v41 = 1;
  sub_190AC2574((unint64_t *)&qword_1ED02EFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_190BE5F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14 + *(int *)(v28 + 20), v16, v17);
  v40 = 2;
  v20 = sub_190BE5F18();
  v21 = v28;
  v22 = (uint64_t *)(v14 + *(int *)(v28 + 24));
  *v22 = v20;
  v22[1] = v23;
  v39 = 3;
  sub_190BE5F24();
  v25 = v24;
  OUTLINED_FUNCTION_0_24();
  *(_QWORD *)(v14 + *(int *)(v21 + 28)) = v25;
  sub_190B447F4(v14, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_190B466D4(v14);
}

void sub_190B46678(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_190B462C4();
    v7 = a3(a1, &type metadata for AuthToken.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_190B466D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190B46710@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AuthToken.init(from:)(a1, a2);
}

uint64_t sub_190B46724(_QWORD *a1)
{
  return AuthToken.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for AuthToken(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190BE47E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_190BE4628();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t destroy for AuthToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for AuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthToken()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B46B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = OUTLINED_FUNCTION_6_3();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthToken()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B46BD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
    return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
  }
  result = OUTLINED_FUNCTION_6_3();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t getEnumTagSinglePayload for Scope(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthToken.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190B46D40 + 4 * byte_190BEA339[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190B46D74 + 4 * byte_190BEA334[v4]))();
}

uint64_t sub_190B46D74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B46D7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B46D84);
  return result;
}

uint64_t sub_190B46D90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B46D98);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_190B46D9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B46DA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuthToken.CodingKeys()
{
  return &type metadata for AuthToken.CodingKeys;
}

unint64_t sub_190B46DC4()
{
  unint64_t result;

  result = qword_1EE1FFB50;
  if (!qword_1EE1FFB50)
  {
    result = MEMORY[0x194016EF8](&unk_190BEA47C, &type metadata for AuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB50);
  }
  return result;
}

unint64_t sub_190B46E04()
{
  unint64_t result;

  result = qword_1ED02F308;
  if (!qword_1ED02F308)
  {
    result = MEMORY[0x194016EF8](&unk_190BEA3EC, &type metadata for AuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F308);
  }
  return result;
}

unint64_t sub_190B46E44()
{
  unint64_t result;

  result = qword_1ED02F300;
  if (!qword_1ED02F300)
  {
    result = MEMORY[0x194016EF8](&unk_190BEA414, &type metadata for AuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F300);
  }
  return result;
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidBecomeActive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidBecomeActive(with:sourceApplication:sceneID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillResignActive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillResignActive(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillEnterForeground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidEnterBackground(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneWillConnectToSession(withOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SceneStateMonitor.sceneDidDisconnect()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_190B46ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v4 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0() + 40;
  v5 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (!*(_QWORD *)(a2 + 16))
    {
      v12 = 0u;
      v13 = 0u;
LABEL_14:
      sub_190AD9BB8((uint64_t)&v12);
      goto LABEL_15;
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v6 = sub_190AEABD0();
    if ((v7 & 1) != 0)
    {
      sub_190ACF624(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v13 + 1))
      goto LABEL_14;
    sub_190ACEE08(&v12, v14);
    sub_190ACEE08(v14, &v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_190AFA324();
      v5 = v9;
    }
    v8 = *(_QWORD *)(v5 + 16);
    if (v8 >= *(_QWORD *)(v5 + 24) >> 1)
    {
      sub_190AFA324();
      v5 = v10;
    }
    *(_QWORD *)(v5 + 16) = v8 + 1;
    sub_190ACEE08(&v12, (_OWORD *)(v5 + 32 * v8 + 32));
LABEL_15:
    v4 += 16;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_190B47060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v18 = v2;
  v5 = (uint64_t *)(_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0() + 40);
  v6 = MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = *(v5 - 1);
    v7 = *v5;
    if (*(_QWORD *)(a2 + 16))
    {
      swift_bridgeObjectRetain_n();
      v9 = sub_190AEABD0();
      if ((v10 & 1) != 0)
      {
        sub_190ACF624(*(_QWORD *)(a2 + 56) + 32 * v9, (uint64_t)&v16);
      }
      else
      {
        v16 = 0u;
        v17 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v17 + 1))
      {
        sub_190AD9BB8((uint64_t)&v16);
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    sub_190AD9BB8((uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_190AFE0AC();
      v6 = v13;
    }
    v11 = *(_QWORD *)(v6 + 16);
    if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      sub_190AFE0AC();
      v6 = v14;
    }
    *(_QWORD *)(v6 + 16) = v11 + 1;
    v12 = v6 + 16 * v11;
    *(_QWORD *)(v12 + 32) = v8;
    *(_QWORD *)(v12 + 40) = v7;
LABEL_15:
    v5 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void ReferenceDecodingPool.__allocating_init(references:)(uint64_t a1)
{
  OUTLINED_FUNCTION_27_7();
  ReferenceDecodingPool.init(references:)(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B47220@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v8 = sub_190BE59A8();
  v27[1] = *(_QWORD *)(v8 - 8);
  v27[2] = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v27 - v12;
  v14 = *a1;
  v15 = a1[1];
  v16 = *(_QWORD *)(a2 + 16);
  if (!v16)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_190AC5F10(0, (unint64_t *)&unk_1ED033B60, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    if ((OUTLINED_FUNCTION_56_3() & 1) != 0)
    {
      OUTLINED_FUNCTION_41_5((uint64_t)v13);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v29, v13, a3);
    }
    OUTLINED_FUNCTION_54_3((uint64_t)v13);
    v18(v13);
  }
  OUTLINED_FUNCTION_48_2();
  v19 = *(_QWORD *)(v4 + 16);
  OUTLINED_FUNCTION_53();
  sub_190ABE758(v14, v15, v19);
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_endAccess();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v22 = sub_190B46ED8(a2, v21);
    if (*(_QWORD *)(v22 + 16) == v16)
    {
      v28 = v22;
      sub_190AC5F10(0, (unint64_t *)&unk_1ED033B60, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      if ((OUTLINED_FUNCTION_56_3() & 1) != 0)
      {
        OUTLINED_FUNCTION_41_5((uint64_t)v11);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v29, v11, a3);
      }
      OUTLINED_FUNCTION_54_3((uint64_t)v11);
      v24(v11);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v25 = sub_190B47060(a2, v21);
    swift_bridgeObjectRelease();
    sub_190B3EE0C();
    OUTLINED_FUNCTION_38();
    *(_QWORD *)v26 = v14;
    *(_QWORD *)(v26 + 8) = v15;
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = 0;
    *(_BYTE *)(v26 + 32) = 1;
  }
  else
  {
    swift_endAccess();
    sub_190B3EE0C();
    OUTLINED_FUNCTION_38();
    *(_QWORD *)v23 = v14;
    *(_QWORD *)(v23 + 8) = v15;
    *(_QWORD *)(v23 + 16) = a2;
    *(_QWORD *)(v23 + 24) = 0;
    *(_BYTE *)(v23 + 32) = 1;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  OUTLINED_FUNCTION_53();
  return swift_willThrow();
}

uint64_t ReferenceDecodingPool.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_27_7();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t ReferenceDecodingPool.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

void ReferenceDecodingPool.__allocating_init(references:)(Swift::OpaquePointer a1)
{
  *(_QWORD *)(OUTLINED_FUNCTION_27_7() + 16) = MEMORY[0x1E0DEE9E0];
  ReferenceDecodingPool.insert(contentsOf:)(a1);
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_0();
}

void ReferenceDecodingPool.init(references:)(Swift::OpaquePointer a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  ReferenceDecodingPool.insert(contentsOf:)(a1);
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_0();
}

void ReferenceDecodingPool.insert<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13[4];

  v6 = type metadata accessor for Reference(0, a2, a3, a4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v12 - v7, a1);
  AnyReference.init<A>(reference:)((uint64_t)v8, a2, v10, v11, v13);
  ReferenceDecodingPool.insert(_:)((uint64_t *)v13);
  sub_190B475EC((uint64_t)v13);
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B475EC(uint64_t a1)
{
  destroy for AnyReference(a1);
  return a1;
}

void ReferenceDecodingPool.insert<A>(contentsOf:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_72();
  v0 = OUTLINED_FUNCTION_39_5();
  v4 = type metadata accessor for Reference(v0, v1, v2, v3);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_74();
  sub_190BE5318();
  OUTLINED_FUNCTION_60_3();
}

uint64_t ReferenceDecodingPool.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

unint64_t ReferenceDecodingPool.description.getter()
{
  uint64_t v0;

  sub_190BE5C54();
  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_34_7(v0, (unint64_t *)&qword_1ED02EB78, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_190B089F4();
  OUTLINED_FUNCTION_74();
  sub_190BE4DCC();
  sub_190BE5114();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_16();
  sub_190BE5114();
  return 0xD000000000000021;
}

unint64_t sub_190B47890()
{
  return ReferenceDecodingPool.description.getter();
}

_QWORD *sub_190B478B0()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *result;

  OUTLINED_FUNCTION_68();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_190AEABD0();
  OUTLINED_FUNCTION_1_28();
  if (v9)
  {
    __break(1u);
LABEL_10:
    result = (_QWORD *)sub_190BE626C();
    __break(1u);
    return result;
  }
  v10 = v7;
  v11 = v8;
  OUTLINED_FUNCTION_34_7(v7, &qword_1EE1FF5C8, (uint64_t)&type metadata for NetworkOperationTask, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECB20]);
  if ((OUTLINED_FUNCTION_2_23() & 1) != 0)
  {
    sub_190AEABD0();
    OUTLINED_FUNCTION_28_7();
    if (!v13)
      goto LABEL_10;
    v10 = v12;
  }
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_26();
    return sub_190B47E78(v14, v15);
  }
  else
  {
    sub_190B47C08(v10, v4, v2, v6, *v0);
    return (_QWORD *)OUTLINED_FUNCTION_0_25();
  }
}

void sub_190B47994()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_68();
  v2 = v1;
  OUTLINED_FUNCTION_37_6(v1, v3);
  OUTLINED_FUNCTION_1_28();
  if (v6)
  {
    __break(1u);
LABEL_10:
    sub_190BE626C();
    __break(1u);
    return;
  }
  v7 = v4;
  v8 = v5;
  sub_190B47E20();
  if ((OUTLINED_FUNCTION_19_8() & 1) != 0)
  {
    OUTLINED_FUNCTION_50_4();
    OUTLINED_FUNCTION_38_6();
    if (!v10)
      goto LABEL_10;
    v7 = v9;
  }
  if ((v8 & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + v7) = v2;
    OUTLINED_FUNCTION_26();
  }
  else
  {
    OUTLINED_FUNCTION_26();
    sub_190B47C60(v11, v12, v13, v14);
  }
}

void sub_190B47A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_1_28();
  if (v4)
  {
    __break(1u);
LABEL_10:
    sub_190BE626C();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_23_11();
  sub_190B47D4C();
  if ((OUTLINED_FUNCTION_2_23() & 1) != 0)
  {
    OUTLINED_FUNCTION_25_8();
    OUTLINED_FUNCTION_10_14();
    if (!v6)
      goto LABEL_10;
    v2 = v5;
  }
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_24_7();
    *(_QWORD *)(v1 + 8 * v2) = v0;
    OUTLINED_FUNCTION_26();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_13();
    sub_190AF9B88(v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_0_25();
  }
}

void sub_190B47AB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_68();
  v5 = OUTLINED_FUNCTION_35_5(v3, v4);
  sub_190B13714(v5);
  OUTLINED_FUNCTION_1_28();
  if (v8)
  {
    __break(1u);
LABEL_10:
    sub_190AA510C();
    sub_190BE626C();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  sub_190B1DD74();
  if ((OUTLINED_FUNCTION_19_8() & 1) != 0)
  {
    sub_190B13714(v1);
    OUTLINED_FUNCTION_28_7();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  v13 = *v2;
  if ((v10 & 1) != 0)
  {
    v14 = v13[7];
    swift_release();
    *(_QWORD *)(v14 + 8 * v9) = v0;
    OUTLINED_FUNCTION_26();
  }
  else
  {
    sub_190AE10A0(v9, v1, v0, v13);
    OUTLINED_FUNCTION_0_25();
  }
}

void sub_190B47B5C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_68();
  v2 = v1;
  OUTLINED_FUNCTION_37_6(v1, v3);
  OUTLINED_FUNCTION_1_28();
  if (v6)
  {
    __break(1u);
LABEL_10:
    sub_190BE626C();
    __break(1u);
    return;
  }
  v7 = v4;
  v8 = v5;
  sub_190B47DC8();
  if ((OUTLINED_FUNCTION_64_2() & 1) != 0)
  {
    OUTLINED_FUNCTION_58_4();
    OUTLINED_FUNCTION_38_6();
    if (!v10)
      goto LABEL_10;
    v7 = v9;
  }
  if ((v8 & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + v7) = v2 & 1;
    OUTLINED_FUNCTION_26();
  }
  else
  {
    OUTLINED_FUNCTION_26();
    sub_190B47CA4(v11, v12, v13, v14);
  }
}

unint64_t sub_190B47C08(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + (result << 6));
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

unint64_t sub_190B47C60(unint64_t result, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_BYTE *)(a4[7] + result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_190B47CA4(unint64_t result, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_BYTE *)(a4[7] + result) = a3 & 1;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t method lookup function for ReferenceDecodingPool()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReferenceDecodingPool.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ReferenceDecodingPool.__allocating_init(references:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_190B47D10(uint64_t a1, uint64_t a2)
{
  sub_190B403C8(a2, a1);
  return a2;
}

void sub_190B47D4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED032880)
  {
    sub_190AC5F10(255, (unint64_t *)&qword_1ED034520, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_190BE5E28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED032880);
  }
}

void sub_190B47DC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1FFB58)
  {
    v0 = sub_190BE5E28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1FFB58);
  }
}

void sub_190B47E20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1FFB60)
  {
    v0 = sub_190BE5E28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1FFB60);
  }
}

_QWORD *sub_190B47E78(uint64_t a1, _QWORD *a2)
{
  assignWithTake for NetworkOperationTask(a2, a1);
  return a2;
}

void SyncObservable.uncheckedValue.getter()
{
  sub_190B482AC((void (*)(uint64_t))sub_190B47EC0);
}

uint64_t sub_190B47EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_190B47EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for os_unfair_lock_s(255);
  sub_190BE5CF0();
  v4 = sub_190BE5CE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t SyncObservable.__allocating_init<A>(initialValue:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_24();
  SyncObservable.init<A>(initialValue:)(a1);
  return v2;
}

_QWORD *SyncObservable.init<A>(initialValue:)(uint64_t a1)
{
  return sub_190B47FC0(a1, sub_190B48080);
}

_QWORD *sub_190B47FC0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_12_8(v10, v11, v12, v13);
  v2[3] = sub_190BE4D78();
  v14 = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_14_8(v14, v15, v16, v17);
  v2[4] = sub_190BE4D78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  v18 = a2(v9, v5);
  OUTLINED_FUNCTION_11_9(a1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v2[2] = v18;
  return v2;
}

uint64_t sub_190B48080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  v7 = v6 - v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6 - v5, a1, a2);
  v8 = sub_190B47EF8(v7, a2);
  OUTLINED_FUNCTION_15_1(a1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return v8;
}

void sub_190B48104(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_190B483FC(a1, a2, a3, a4, a5);
}

uint64_t sub_190B48118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  return sub_190B482EC(a1, a2, a3);
}

uint64_t sub_190B48168(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  char v19;
  uint64_t v20;

  v12 = *(_QWORD *)(a8 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v20 - v16;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a3(a1);
    if (a5)
    {
      SyncObservable.uncheckedValue.getter();
      v19 = a5(v15, v17);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a8);
    }
    else
    {
      v19 = 0;
    }
    SyncObservable.next(value:quiet:)((uint64_t)v17, v19 & 1);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, a8);
  }
  return result;
}

void SyncObservable<A>.checkedValue.getter()
{
  sub_190B482AC((void (*)(uint64_t))sub_190B486C0);
}

void sub_190B482AC(void (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v2;

  sub_190B483FC(a1, (uint64_t)&v2, v1[2], *(_QWORD *)(*v1 + 80), *(_QWORD *)(*v1 + 80));
}

uint64_t sub_190B482EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  return v3;
}

uint64_t sub_190B4833C()
{
  sub_190BE54F8();
  sub_190BE5BF4();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_190B4839C()
{
  uint64_t v0;

  sub_190AA2860(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_190B483C0()
{
  sub_190B4839C();
  return swift_deallocClassInstance();
}

uint64_t sub_190B483DC()
{
  return sub_190B4833C();
}

void sub_190B483FC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_190B48464(a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_190B48464(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t sub_190B484E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2);
}

uint64_t sub_190B48538()
{
  return 0;
}

void sub_190B48544(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_5_14(a1);
  OUTLINED_FUNCTION_6_18();
  OUTLINED_FUNCTION_9_16();
}

uint64_t sub_190B4857C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B485A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190B485C4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B48600(uint64_t a1)
{
  uint64_t v1;

  return sub_190B48168(a1, *(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(uint64_t (**)(char *, char *))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_190B48614(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_5_14(a1);
  OUTLINED_FUNCTION_6_18();
  OUTLINED_FUNCTION_9_16();
}

uint64_t sub_190B48650()
{
  return swift_deallocObject();
}

uint64_t sub_190B48660()
{
  return sub_190BE4FD0() & 1;
}

uint64_t method lookup function for SyncObservable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncObservable.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SyncObservable.__allocating_init<A>(initialValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_190B486A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190B484E4(a1, a2);
}

uint64_t sub_190B486C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190B47EC0(a1, a2);
}

uint64_t dispatch thunk of ApplicationStateMonitor.applicationWillEnterForeground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ApplicationStateMonitor.applicationDidEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ApplicationStateMonitor.applicationDidFinishLaunching(withOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t ApplicationStateLaunchOptionKey.hash(into:)()
{
  uint64_t v0;
  uint64_t result;

  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
      result = sub_190BE6308();
      break;
    default:
      sub_190BE6308();
      result = sub_190BE50B4();
      break;
  }
  return result;
}

uint64_t static ApplicationStateLaunchOptionKey.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_28;
      v3 = 0;
      goto LABEL_6;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_28;
      v3 = 1;
LABEL_6:
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_28;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_28;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_28;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_28;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_28;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_28;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_28;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_28;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_28;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_28;
      v6 = 1;
      v3 = 11;
      break;
    default:
      if (v5 >= 0xC)
      {
        if (v2 == v4 && v3 == v5)
          v6 = 1;
        else
          v6 = sub_190BE60BC();
      }
      else
      {
LABEL_28:
        v6 = 0;
      }
      sub_190B48970(v4, v5);
      sub_190B48970(v2, v3);
      break;
  }
  sub_190B48984(v2, v3);
  sub_190B48984(v4, v5);
  return v6 & 1;
}

uint64_t sub_190B48970(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0xC)
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return result;
}

uint64_t sub_190B48984(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0xC)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t ApplicationStateLaunchOptionKey.hashValue.getter()
{
  sub_190BE62FC();
  ApplicationStateLaunchOptionKey.hash(into:)();
  return sub_190BE6314();
}

uint64_t sub_190B489E8()
{
  sub_190BE62FC();
  ApplicationStateLaunchOptionKey.hash(into:)();
  return sub_190BE6314();
}

uint64_t ApplicationStateManagerIOS.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t ApplicationStateManagerIOS.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

Swift::Void __swiftcall ApplicationStateManagerIOS.didEnterBackground()()
{
  sub_190B48C4C();
}

uint64_t sub_190B48A8C(unint64_t a1)
{
  return sub_190B48B54(a1, (uint64_t (*)(uint64_t))sub_190B40778, (void (*)(uint64_t, unint64_t))sub_190ABD31C);
}

void sub_190B48AA0(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_190B4077C();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(type metadata accessor for ManualClock.WakeUp() - 8);
    v8 = *(_QWORD *)(v7 + 72);
    v9 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v8 * a1;
    sub_190B49144(v9, a2);
    sub_190B13000(v9 + v8, v6 - 1 - a1, v9);
    *(_QWORD *)(v5 + 16) = v6 - 1;
    *v2 = v5;
  }
}

uint64_t sub_190B48B54(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t, unint64_t))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *v3;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v7;
  if (!(_DWORD)result || v7 < 0 || (v7 & 0x4000000000000000) != 0)
  {
    result = a2(v7);
    v7 = result;
    *v3 = result;
  }
  v9 = v7 & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
  }
  else
  {
    v11 = v10 - 1;
    v12 = v10 - 1 - a1;
    v13 = v9 + 8 * a1;
    v14 = *(_QWORD *)(v13 + 32);
    a3(v13 + 40, v12);
    *(_QWORD *)(v9 + 16) = v11;
    sub_190BE5330();
    return v14;
  }
  return result;
}

uint64_t ApplicationStateManagerIOS.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

void sub_190B48C0C()
{
  ApplicationStateManagerIOS.didEnterBackground()();
}

uint64_t sub_190B48C2C()
{
  return ApplicationStateManagerIOS.remove(monitor:)();
}

void sub_190B48C4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6_19();
  if (*(_QWORD *)(v1 + 16) >> 62)
  {
    OUTLINED_FUNCTION_0_27();
    v2 = OUTLINED_FUNCTION_113();
    if (v2)
      goto LABEL_3;
LABEL_7:
    OUTLINED_FUNCTION_16();
    if (*v0 >> 62)
    {
      OUTLINED_FUNCTION_0_27();
      v4 = OUTLINED_FUNCTION_113();
      if (v4)
      {
        if (v4 >= 1)
        {
          OUTLINED_FUNCTION_17_10();
          if (v3)
            OUTLINED_FUNCTION_4_19();
          OUTLINED_FUNCTION_1_30();
          OUTLINED_FUNCTION_16_14();
        }
        goto LABEL_18;
      }
    }
    else
    {
      OUTLINED_FUNCTION_2_24();
    }
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_24_8(MEMORY[0x1E0DEE9D8]);
    OUTLINED_FUNCTION_3_9();
    return;
  }
  OUTLINED_FUNCTION_2_24();
  if (!v2)
    goto LABEL_7;
LABEL_3:
  if (v2 >= 1)
  {
    OUTLINED_FUNCTION_17_10();
    if (v3)
      OUTLINED_FUNCTION_4_19();
    OUTLINED_FUNCTION_1_30();
    OUTLINED_FUNCTION_16_14();
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

uint64_t _s13TeaFoundation26ApplicationStateManagerIOSC6remove7monitoryAA0cD7Monitor_p_tF_0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_0();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_0_27();
    if (OUTLINED_FUNCTION_113())
    {
LABEL_3:
      if ((v1 & 0xC000000000000001) != 0)
        MEMORY[0x194015F20](0, v1);
      else
        swift_retain();
      OUTLINED_FUNCTION_23_12();
    }
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v2)
      goto LABEL_3;
  }
  return OUTLINED_FUNCTION_16();
}

unint64_t destroy for ApplicationStateLaunchOptionKey(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13TeaFoundation31ApplicationStateLaunchOptionKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

_QWORD *assignWithCopy for ApplicationStateLaunchOptionKey(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationStateLaunchOptionKey(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationStateLaunchOptionKey(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF3 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483636);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 11;
  if (v4 >= 0xD)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ApplicationStateLaunchOptionKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF4)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483636;
    if (a3 >= 0x7FFFFFF4)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF4)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 11;
  }
  return result;
}

uint64_t dispatch thunk of ApplicationStateManagerType.didEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ApplicationStateManagerType.remove(monitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t method lookup function for ApplicationStateManagerIOS()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ApplicationStateManagerIOS.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for ApplicationStateManagerMacOS()
{
  return objc_opt_self();
}

uint64_t method lookup function for ApplicationStateManagerMacOS()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_190B49144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManualClock.WakeUp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static RemoteNotificationFetchResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RemoteNotificationFetchResult.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t RemoteNotificationFetchResult.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t RemoteNotificationManager.__allocating_init()()
{
  uint64_t result;
  uint64_t v1;

  OUTLINED_FUNCTION_0_28();
  result = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t RemoteNotificationManager.handleRemoteNotification(userInfo:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B4934C(v1, a1, &v9);
  v3 = qword_1ED035648;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v3 != -1)
    swift_once();
  v4 = (id)qword_1ED035618;
  sub_190B2F6B4();
  swift_bridgeObjectRelease();

  v5 = (id)qword_1ED035618;
  sub_190B2BD14();
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_release();

  return v7;
}

uint64_t sub_190B4934C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  char v17;
  uint64_t ObjectType;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v27;
  _QWORD v29[5];
  __int128 v30;
  __int128 v31;

  v25 = (unint64_t *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v5 = result;
    if (result)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        v7 = 0;
        while (1)
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            v8 = (_QWORD *)MEMORY[0x194015F20](v7, v4);
          }
          else
          {
            v8 = *(_QWORD **)(v4 + 8 * v7 + 32);
            swift_retain();
          }
          v9 = MEMORY[0x1940170E4](v8 + 6);
          swift_unknownObjectRelease();
          if (v9)
          {
            if (MEMORY[0x1940170E4](v8 + 2))
              break;
          }
          swift_release();
LABEL_36:
          if (v5 == ++v7)
            goto LABEL_39;
        }
        v10 = v8[3];
        v11 = v8[5];
        if (!v11)
          goto LABEL_33;
        v27 = v8[4];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190BE5BE8();
        if (*(_QWORD *)(a2 + 16) && (v12 = sub_190B1364C((uint64_t)v29), (v13 & 1) != 0))
        {
          sub_190ACF624(*(_QWORD *)(a2 + 56) + 32 * v12, (uint64_t)&v30);
        }
        else
        {
          v30 = 0u;
          v31 = 0u;
        }
        sub_190ACFA98((uint64_t)v29);
        if (*((_QWORD *)&v31 + 1))
        {
          sub_190ACF778();
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_31:
            swift_bridgeObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
            goto LABEL_36;
          }
          sub_190BE5BE8();
          if (MEMORY[0x737071] && (v14 = sub_190B1364C((uint64_t)v29), (v15 & 1) != 0))
          {
            sub_190ACF624(MEMORY[0x737099] + 32 * v14, (uint64_t)&v30);
          }
          else
          {
            v30 = 0u;
            v31 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_190ACFA98((uint64_t)v29);
          if (*((_QWORD *)&v31 + 1))
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              if (v27 == 0x79726F6765746163 && v11 == 0xE800000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_33:
                ObjectType = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, ObjectType, v10);
                MEMORY[0x194015590]();
                if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_190BE5360();
                sub_190BE53A8();
                sub_190BE5330();
                swift_release();
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_36;
              }
              v17 = sub_190BE60BC();
              swift_bridgeObjectRelease();
              if ((v17 & 1) != 0)
                goto LABEL_33;
            }
            goto LABEL_31;
          }
        }
        sub_190AD9BB8((uint64_t)&v30);
        goto LABEL_31;
      }
      __break(1u);
      goto LABEL_55;
    }
  }
LABEL_39:
  swift_bridgeObjectRelease();
  v19 = *v25;
  v29[0] = MEMORY[0x1E0DEE9D8];
  if (!(v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v20)
      goto LABEL_41;
LABEL_52:
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_53:
    *v25 = v24;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  result = sub_190BE5EAC();
  v20 = result;
  if (!result)
    goto LABEL_52;
LABEL_41:
  if (v20 >= 1)
  {
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        v22 = MEMORY[0x194015F20](i, v19);
      }
      else
      {
        v22 = *(_QWORD *)(v19 + 8 * i + 32);
        swift_retain();
      }
      v23 = MEMORY[0x1940170E4](v22 + 48);
      swift_unknownObjectRelease();
      if (v23)
      {
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v24 = v29[0];
    goto LABEL_53;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_190B49804@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;

  v2 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v2)
  {
    v3 = (unsigned __int8 *)(*(_QWORD *)result + 32);
    while (1)
    {
      v4 = *v3++;
      if (v4 == 1)
        break;
      if (!--v2)
        goto LABEL_7;
    }
    LOBYTE(v2) = 1;
  }
LABEL_7:
  *a2 = v2;
  return result;
}

uint64_t RemoteNotificationManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteNotificationManager.__deallocating_deinit()
{
  RemoteNotificationManager.deinit();
  OUTLINED_FUNCTION_0_28();
  return swift_deallocClassInstance();
}

uint64_t sub_190B49874()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_190B49880()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_190B4988C()
{
  uint64_t v0;

  sub_190AA2860(v0 + 16);
  swift_bridgeObjectRelease();
  sub_190AA2860(v0 + 48);
  return v0;
}

uint64_t sub_190B498B8()
{
  sub_190B4988C();
  return swift_deallocClassInstance();
}

uint64_t sub_190B498D4()
{
  return sub_190B49874();
}

uint64_t sub_190B498F4()
{
  return sub_190B49880();
}

uint64_t sub_190B49914()
{
  swift_release();
  OUTLINED_FUNCTION_0_28();
  return swift_deallocObject();
}

unint64_t sub_190B49934()
{
  unint64_t result;

  result = qword_1EE1FFB68;
  if (!qword_1EE1FFB68)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for RemoteNotificationFetchResult, &type metadata for RemoteNotificationFetchResult);
    atomic_store(result, (unint64_t *)&qword_1EE1FFB68);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RemoteNotificationFetchResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B499BC + 4 * byte_190BEA845[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B499F0 + 4 * byte_190BEA840[v4]))();
}

uint64_t sub_190B499F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B499F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B49A00);
  return result;
}

uint64_t sub_190B49A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B49A14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B49A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B49A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteNotificationFetchResult()
{
  return &type metadata for RemoteNotificationFetchResult;
}

uint64_t dispatch thunk of RemoteNotificationHandler.handleRemoteNotification(userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for RemoteNotificationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteNotificationManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void SafeCollection.subscript.getter(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v2;
  OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_3_20();
  sub_190BE5870();
  OUTLINED_FUNCTION_2_25();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_10_12();
  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_20();
  v9 = sub_190AA29C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, v4, a1);
  OUTLINED_FUNCTION_6_20();
  if (v9 < 0)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_9_17();
    goto LABEL_5;
  }
  v10 = OUTLINED_FUNCTION_12_10();
  OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_9_17();
  if (v10 < 0)
  {
LABEL_5:
    v12 = 1;
    v11 = a2;
    goto LABEL_6;
  }
  v11 = a2;
  sub_190BE57F8();
  v12 = 0;
LABEL_6:
  v13 = OUTLINED_FUNCTION_10_16();
  __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
  OUTLINED_FUNCTION_0_0();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v2;
  v6 = OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_3_20();
  sub_190BE4FC4();
  OUTLINED_FUNCTION_2_25();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_10_12();
  v8 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_20();
  v10 = sub_190AA29C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v4, a1);
  OUTLINED_FUNCTION_6_20();
  if (v10 < 0)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_11();
    goto LABEL_5;
  }
  v11 = OUTLINED_FUNCTION_12_10();
  OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_11_11();
  if (v11 <= 0)
  {
LABEL_5:
    v13 = 1;
    v12 = a2;
    goto LABEL_6;
  }
  MEMORY[0x194016EF8](MEMORY[0x1E0DEA4E8], v6);
  v12 = a2;
  sub_190BE57BC();
  v13 = 0;
LABEL_6:
  v14 = OUTLINED_FUNCTION_10_16();
  __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
  OUTLINED_FUNCTION_0_0();
}

uint64_t *sub_190B49D14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_190B49D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_190B49DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_190B49DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_190B49E14(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B49EC4 + 4 * byte_190BEA9C8[(v8 - 1)]))();
}

void sub_190B49F10(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_190B4A0B8()
{
  uint64_t v0;
  uint64_t result;

  sub_190AC4980();
  v0 = sub_190BE590C();
  type metadata accessor for ThrottleScheduler();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  qword_1EE1FE360 = result;
  return result;
}

uint64_t static ThrottleScheduler.main.getter()
{
  if (qword_1EE1FE368 != -1)
    swift_once();
  return swift_retain();
}

uint64_t ThrottleScheduler.__allocating_init(label:qos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = sub_190BE5900();
  v22 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_10();
  v23 = v6;
  sub_190BE58DC();
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_10();
  v8 = sub_190BE4C88();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_0();
  v12 = v11 - v10;
  v13 = sub_190BE4820();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_4_0();
  v17 = v16 - v15;
  if (!a2)
  {
    sub_190BE5C54();
    swift_bridgeObjectRelease();
    sub_190BE4814();
    sub_190BE47F0();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
    sub_190BE5114();
    swift_bridgeObjectRelease();
  }
  sub_190AC4980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  v18 = a3;
  v19 = (void (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_190AC2574((unint64_t *)&qword_1ED035668, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_190AAC3E4(0, (unint64_t *)&qword_1ED035658, v19);
  sub_190ADBDF4((unint64_t *)&qword_1ED035660, (unint64_t *)&qword_1ED035658, v19);
  sub_190BE5B70();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v23, *MEMORY[0x1E0DEF8D0], v24);
  v20 = sub_190BE593C();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v18, v8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v20;
  return result;
}

uint64_t ThrottleScheduler.precondition(block:)(void (*a1)(_QWORD *))
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  _QWORD v10[5];

  v4 = *v1;
  v5 = sub_190BE4D00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_1_31();
  v7 = (void *)v1[2];
  *v2 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v2, *MEMORY[0x1E0DEF740], v5);
  v8 = v7;
  LOBYTE(v7) = sub_190BE4D24();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v2, v5);
  if ((v7 & 1) != 0)
  {
    v10[3] = v4;
    v10[4] = &protocol witness table for ThrottleScheduler;
    v10[0] = v1;
    swift_retain();
    a1(v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ThrottleScheduler.schedule(delay:block:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v8 = sub_190BE4C40();
  v29 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_0();
  v12 = v11 - v10;
  v13 = sub_190BE4C88();
  v27 = *(_QWORD *)(v13 - 8);
  v28 = v13;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_1_31();
  v15 = sub_190BE4CAC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v25 - v20;
  v25 = *(_QWORD *)(v3 + 16);
  sub_190BE4CA0();
  MEMORY[0x194014FA8](v19, a3);
  v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v19, v15);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_4;
  v22 = _Block_copy(aBlock);
  swift_retain();
  sub_190BE4C64();
  v30 = MEMORY[0x1E0DEE9D8];
  v23 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_190AC2574((unint64_t *)&qword_1ED034E18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_190AAC3E4(0, (unint64_t *)&qword_1ED034E20, v23);
  sub_190ADBDF4((unint64_t *)&qword_1ED034E28, (unint64_t *)&qword_1ED034E20, v23);
  sub_190BE5B70();
  MEMORY[0x194015B84](v21, v4, v12, v22);
  _Block_release(v22);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v12, v8);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v28);
  v26(v21, v15);
  return swift_release();
}

uint64_t ThrottleScheduler.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ThrottleScheduler.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_190B4A780(void (*a1)(_QWORD *))
{
  return ThrottleScheduler.precondition(block:)(a1);
}

uint64_t sub_190B4A7A0(uint64_t a1, uint64_t a2, double a3)
{
  return ThrottleScheduler.schedule(delay:block:)(a1, a2, a3);
}

uint64_t dispatch thunk of ThrottleScheduling.precondition(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ThrottleSchedulingQueue.schedule(delay:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for ThrottleScheduler()
{
  return objc_opt_self();
}

uint64_t method lookup function for ThrottleScheduler()
{
  return swift_lookUpClassMethod();
}

void NSURLSession.downloadData(from:completion:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  id v22;
  _QWORD aBlock[6];

  v5 = v3;
  v8 = sub_190BE4A30();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_1_31();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  v11 = (id *)(v10 + 16);
  v12 = (void *)sub_190BE4244();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v10;
  aBlock[4] = sub_190B4ABC8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190B4ABD4;
  aBlock[3] = &block_descriptor_5;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v15 = objc_msgSend(v5, sel_dataTaskWithRequest_completionHandler_, v12, v14);
  _Block_release(v14);

  swift_beginAccess();
  v16 = *(void **)(v10 + 16);
  *(_QWORD *)(v10 + 16) = v15;

  if (qword_1ED034658 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED039A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v4, v17, v8);
  swift_retain();
  v18 = sub_190BE4A0C();
  v19 = sub_190BE58AC();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v20 = 134349056;
    if (*v11)
    {
      objc_msgSend(*v11, sel_taskIdentifier);
      sub_190BE5A2C();
      OUTLINED_FUNCTION_9_2();
      _os_log_impl(&dword_190AA0000, v18, v19, "Scheduling URLSession data task. id=%{public}ld", v20, 0xCu);
      OUTLINED_FUNCTION_12_0();
    }
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_9_2();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
  if (!*v11)
  {
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_9_2();
    __break(1u);
    return;
  }
  objc_msgSend(*v11, sel_resume);
  v21 = *v11;
  if (*v11)
  {
    *(_QWORD *)(a3 + 24) = sub_190B4AFA4();
    *(_QWORD *)(a3 + 32) = &protocol witness table for NSURLSessionTask;
    *(_QWORD *)a3 = v21;
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  v22 = v21;
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190B4AACC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_190B4AAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, id, uint64_t), uint64_t a6, uint64_t a7)
{
  void *v13;
  id v14;

  swift_beginAccess();
  v13 = *(void **)(a7 + 16);
  if (v13)
    v14 = objc_msgSend(v13, sel_ts_taskMetrics);
  else
    v14 = 0;
  a5(a1, a2, a3, v14, a4);

}

uint64_t sub_190B4AB9C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190B4ABC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190B4AAF0(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, id, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_190B4ABD4(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_190BE46F4();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_190AFCEB8((uint64_t)v6, v10);
  return swift_release();
}

void NSURLSession.downloadData(from:operationID:earliestBeginDate:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v6 = v4;
  v11 = sub_190BE47E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_1_31();
  v13 = (void *)sub_190BE4244();
  v14 = objc_msgSend(v6, sel_downloadTaskWithRequest_, v13);

  v15 = v14;
  v16 = (void *)sub_190BE476C();
  objc_msgSend(v15, sel_setEarliestBeginDate_, v16);

  sub_190B4AFE0(a1, a2, v15);
  if (qword_1ED034658 != -1)
    swift_once();
  v17 = sub_190BE4A30();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED039A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v5, a3, v11);
  v18 = v15;
  v19 = sub_190BE4A0C();
  v20 = sub_190BE58AC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = OUTLINED_FUNCTION_20_1();
    v27 = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v21 = 134349570;
    objc_msgSend(v18, sel_taskIdentifier);
    OUTLINED_FUNCTION_2_26();
    *(_WORD *)(v21 + 12) = 2082;
    v22 = sub_190BE47CC();
    sub_190ACE890(v22, v23, &v27);
    sub_190BE5A2C();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_21();
    *(_WORD *)(v21 + 22) = 2082;
    sub_190B1D820(v18);
    if (v25)
    {
      v26 = v25;
    }
    else
    {
      v24 = 7104878;
      v26 = 0xE300000000000000;
    }
    sub_190ACE890(v24, v26, &v27);
    OUTLINED_FUNCTION_2_26();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v19, v20, "Scheduling URLSession download task. id=%{public}ld, beginData=%{public}s, description=%{public}s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_12_0();
  }
  OUTLINED_FUNCTION_3_21();

  objc_msgSend(v18, sel_resume);
  a4[3] = sub_190B4AFA4();
  a4[4] = &protocol witness table for NSURLSessionTask;

  *a4 = v18;
  OUTLINED_FUNCTION_0_0();
}

void sub_190B4AF64(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  NSURLSession.downloadData(from:completion:)(a1, a2, a3);
}

void sub_190B4AF84(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  NSURLSession.downloadData(from:operationID:earliestBeginDate:)(a1, a2, a3, a4);
}

unint64_t sub_190B4AFA4()
{
  unint64_t result;

  result = qword_1ED033D28;
  if (!qword_1ED033D28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED033D28);
  }
  return result;
}

void sub_190B4AFE0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_190BE4FDC();
  objc_msgSend(a3, sel_setTaskDescription_, v4);

}

uint64_t dispatch thunk of URLSessionType.downloadData(from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of URLSessionType.downloadData(from:operationID:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t StateMachineTransition.__allocating_init(state:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_5_16();
  StateMachineTransition.init(state:)(v0);
  return v1;
}

double StateMachineTransition.__allocating_init(states:)()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = OUTLINED_FUNCTION_5_16();
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_QWORD *)(v1 + 16) = v0;
  return result;
}

uint64_t StateMachineTransition.canTry(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_1_32(v3);
  return OUTLINED_FUNCTION_0_30();
}

uint64_t StateMachineTransition.willEnter(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  OUTLINED_FUNCTION_1_32(v3);
  return OUTLINED_FUNCTION_0_30();
}

uint64_t StateMachineTransition.willEnterFailed(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  OUTLINED_FUNCTION_1_32(v3);
  return OUTLINED_FUNCTION_0_30();
}

uint64_t StateMachineTransition.willExit(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  OUTLINED_FUNCTION_1_32(v3);
  return OUTLINED_FUNCTION_0_30();
}

uint64_t StateMachineTransition.willExitFailed(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  OUTLINED_FUNCTION_1_32(v3);
  return OUTLINED_FUNCTION_0_30();
}

uint64_t StateMachineTransition.didExit(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  OUTLINED_FUNCTION_1_32(v3);
  return OUTLINED_FUNCTION_0_30();
}

uint64_t sub_190B4B190(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (!v2)
    return 1;
  OUTLINED_FUNCTION_1();
  LOBYTE(a1) = v2(a1);
  v4 = OUTLINED_FUNCTION_89();
  sub_190AB9930(v4);
  return a1 & 1;
}

void sub_190B4B1E4(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v2 = *(void (**)(uint64_t))(v1 + 40);
  if (v2)
  {
    OUTLINED_FUNCTION_1();
    v2(a1);
    sub_190AB9930((uint64_t)v2);
  }
  OUTLINED_FUNCTION_132();
}

void sub_190B4B22C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 56))
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_10_17();
    v1 = OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_2_27(v1);
  }
  else
  {
    OUTLINED_FUNCTION_4();
  }
}

void sub_190B4B26C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v4;

  v2 = *(void (**)(uint64_t))(v1 + 72);
  if (v2)
  {
    OUTLINED_FUNCTION_1();
    v2(a1);
    v4 = OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_2_27(v4);
  }
  else
  {
    OUTLINED_FUNCTION_4();
  }
}

void sub_190B4B2AC(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v2 = *(void (**)(uint64_t))(v1 + 88);
  if (v2)
  {
    OUTLINED_FUNCTION_1();
    v2(a1);
    sub_190AB9930((uint64_t)v2);
  }
  OUTLINED_FUNCTION_132();
}

void sub_190B4B2F4()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 104))
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_10_17();
    v1 = OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_2_27(v1);
  }
  else
  {
    OUTLINED_FUNCTION_4();
  }
}

void sub_190B4B334(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v4;

  v2 = *(void (**)(uint64_t))(v1 + 120);
  if (v2)
  {
    OUTLINED_FUNCTION_1();
    v2(a1);
    v4 = OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_2_27(v4);
  }
  else
  {
    OUTLINED_FUNCTION_4();
  }
}

uint64_t *StateMachineTransition.deinit()
{
  uint64_t *v0;

  swift_bridgeObjectRelease();
  sub_190AB9930(v0[3]);
  sub_190AB9930(v0[5]);
  sub_190AB9930(v0[7]);
  sub_190AB9930(v0[9]);
  sub_190AB9930(v0[11]);
  sub_190AB9930(v0[13]);
  sub_190AB9930(v0[15]);
  return v0;
}

uint64_t StateMachineTransition.__deallocating_deinit()
{
  StateMachineTransition.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for StateMachineTransition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateMachineTransition.__allocating_init(state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of StateMachineTransition.__allocating_init(states:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t Throttle.__allocating_init(delay:scheduler:)(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  Throttle.init(delay:scheduler:)(a1, a2);
  return v4;
}

uint64_t *Throttle.init(delay:scheduler:)(uint64_t a1, double a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *((_BYTE *)v2 + 24) = 0;
  v2[4] = 0;
  v2[5] = 0;
  *((double *)v2 + 2) = a2;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))((uint64_t)v2 + *(_QWORD *)(v3 + 120), a1);
  return v2;
}

uint64_t Throttle.throttle(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD v5[6];

  v3 = *v2;
  v5[3] = a1;
  v5[4] = a2;
  return (*(uint64_t (**)(uint64_t (*)(_QWORD *), _QWORD *, _QWORD))(*(_QWORD *)(v3 + 88) + 8))(sub_190B4B5F8, v5, *(_QWORD *)(v3 + 80));
}

uint64_t sub_190B4B4E0(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t, double);

  if (*((_BYTE *)a2 + 24) == 1)
  {
    v5 = a2[4];
    a2[4] = (uint64_t)a3;
    a2[5] = a4;
    sub_190AB9930(v5);
    return swift_retain();
  }
  else
  {
    v8 = *a2;
    *((_BYTE *)a2 + 24) = 1;
    a3();
    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    v11 = *((double *)a2 + 2);
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = *(_QWORD *)(v8 + 80);
    v13[3] = *(_QWORD *)(v8 + 88);
    v13[4] = v12;
    v14 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t, double))(v10 + 8);
    swift_retain();
    v14(sub_190B4B810, v13, v9, v10, v11);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_190B4B5F8(_QWORD *a1)
{
  uint64_t v1;

  return sub_190B4B4E0(a1, *(uint64_t **)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190B4B604()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 32);
    *(_BYTE *)(result + 24) = 0;
    if (v1)
    {
      v2 = *(_QWORD *)(result + 40);
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      swift_retain();
      sub_190AB9930(v1);
      Throttle.throttle(block:)(v1, v2);
      swift_release();
      return sub_190AB9930(v1);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t *Throttle.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190AB9930(v0[4]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((char *)v0 + *(_QWORD *)(*v0 + 120));
  return v0;
}

uint64_t Throttle.__deallocating_deinit()
{
  Throttle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190B4B714()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Throttle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Throttle);
}

uint64_t method lookup function for Throttle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Throttle.__allocating_init(delay:scheduler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_190B4B7C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190B4B7EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B4B810()
{
  return sub_190B4B604();
}

uint64_t ThreadsafeSet.isEmpty.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_0_32();
  v2 = *(_QWORD *)(v1 + 80);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE5624();
  OUTLINED_FUNCTION_3();
  sub_190AB42FC((uint64_t)v0);
  return v2 & 1;
}

uint64_t ThreadsafeSet.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ThreadsafeSet.init()();
  return v0;
}

void ThreadsafeSet.remove(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_6_0();
  sub_190BE5654();
  sub_190BE5618();
  swift_endAccess();
  sub_190AB42FC(v0);
}

uint64_t ThreadsafeSet.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ThreadsafeSet.__deallocating_deinit()
{
  ThreadsafeSet.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for ThreadsafeSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ThreadsafeSet.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_190B4B988(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return Atomic.wrappedValue.setter((uint64_t)v2);
}

void sub_190B4B9FC(uint64_t a1@<X8>)
{
  Atomic.wrappedValue.getter(a1);
}

uint64_t sub_190B4BA20()
{
  return 8;
}

_QWORD *sub_190B4BA2C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for Atomic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Atomic.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t XPCBlock.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t XPCBlock.arguments.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t XPCBlock.init(_:arguments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  result = a3();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = result;
  return result;
}

_QWORD *sub_190B4BAC4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

_QWORD *assignWithCopy for XPCArgument(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for XPCArgument(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCArgument(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCArgument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCBlock()
{
  return &type metadata for XPCBlock;
}

uint64_t dispatch thunk of XPCFunction.arguments.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t DateProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DateProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t DateProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DateProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_190B4BC74()
{
  return DateProvider.now()();
}

uint64_t dispatch thunk of DateProviding.now()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for DateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DateProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_190B4BCA4(char a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = (_BYTE *)(a2 + 32);
    v4 = v2 - 1;
    do
    {
      v5 = v4;
      LOBYTE(v2) = ((a1 & 1) == 0) ^ *v3;
      if ((v2 & 1) != 0)
        break;
      --v4;
      ++v3;
    }
    while (v5);
  }
  return v2 & 1;
}

uint64_t DynamicLocale.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_71_0(v1);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DynamicLocale.__deallocating_deinit()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_71_0(v0);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_190B4BD6C()
{
  char v0;

  DynamicLocale.shouldSwapPriceChangeColors.getter();
  return v0 & 1;
}

void DynamicLocale.shouldSwapPriceChangeColors.getter()
{
  sub_190B4BDCC((void (*)(uint64_t))Locale.shouldSwapPriceChangeColors.getter);
}

uint64_t sub_190B4BD9C()
{
  char v0;

  DynamicLocale.textDirectionIsRTL.getter();
  return v0 & 1;
}

void DynamicLocale.textDirectionIsRTL.getter()
{
  sub_190B4BDCC((void (*)(uint64_t))Locale.textDirectionIsRTL.getter);
}

void sub_190B4BDCC(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_10_18();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_15();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1 + OBJC_IVAR____TtC13TeaFoundation13DynamicLocale_currentLocale, v2);
  a1(v7);
  OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_190B4BE38()
{
  return sub_190ACA374((void (*)(_QWORD))sub_190B1DF90);
}

uint64_t sub_190B4BE44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  OUTLINED_FUNCTION_7_21(a1, a2, a3);
  OUTLINED_FUNCTION_71_0(v4);
  return a1;
}

uint64_t dispatch thunk of LocaleType.shouldSwapPriceChangeColors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_190B4BE74()
{
  return type metadata accessor for DynamicLocale();
}

uint64_t type metadata accessor for DynamicLocale()
{
  uint64_t result;

  result = qword_1EE1FFB80;
  if (!qword_1EE1FFB80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190B4BEB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE48BC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DynamicLocale()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_190B4BF34()
{
  return sub_190B4BF48((unint64_t *)&qword_1ED034560);
}

uint64_t sub_190B4BF48(unint64_t *a1)
{
  sub_190AA96FC(0, a1);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_0_28();
  return OUTLINED_FUNCTION_1_36();
}

uint64_t sub_190B4BF80()
{
  return sub_190B4BF48((unint64_t *)&qword_1ED034BB0);
}

void sub_190B4BF94()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_190BE44F0();
  v4 = v3;

  qword_1ED031D98 = v2;
  unk_1ED031DA0 = v4;
}

void sub_190B4C05C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_190BE44F0();
  v4 = v3;

  qword_1ED031D48 = v2;
  unk_1ED031D50 = v4;
}

void sub_190B4C128()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_190BE44F0();
  v4 = v3;

  qword_1ED031D78 = v2;
  unk_1ED031D80 = v4;
}

void sub_190B4C1F4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_190BE44F0();
  v4 = v3;

  qword_1ED031D18 = v2;
  unk_1ED031D20 = v4;
}

void sub_190B4C2C0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_190BE44F0();
  v4 = v3;

  qword_1ED031B20 = v2;
  unk_1ED031B28 = v4;
}

void sub_190B4C388()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_190BE44F0();
  v4 = v3;

  qword_1ED031D88 = v2;
  unk_1ED031D90 = v4;
}

void Date.makeRandomlyImprecise(within:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t EnumTagSinglePayload;

  OUTLINED_FUNCTION_72();
  a19 = v23;
  a20 = v24;
  v25 = v20;
  v27 = v26;
  v29 = v28;
  v30 = OUTLINED_FUNCTION_25_10();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_190BE4910();
  OUTLINED_FUNCTION_16_5();
  v36 = MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_18_12(v36, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_45_6();
  if (__OFSUB__(0, v27))
  {
    __break(1u);
  }
  else
  {
    sub_190B4CB28(-v27, v27);
    sub_190BE48F8();
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0CB1188], v30);
    sub_190BE48EC();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v38, v34);
    v40 = OUTLINED_FUNCTION_0_1();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v21, 1, v40);
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_53_3(EnumTagSinglePayload, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v29, v25, v40);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v29, v21, v40);
    }
    OUTLINED_FUNCTION_0_0();
  }
}

void Date.addMinutes(_:calendar:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_72();
  v4 = v3;
  OUTLINED_FUNCTION_20_9(v5);
  v6 = MEMORY[0x1E0CB0870];
  OUTLINED_FUNCTION_16_5();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_14_10();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_61_2(v9, &qword_1ED034808, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_45_6();
  OUTLINED_FUNCTION_9_19(v12, *MEMORY[0x1E0CB1178]);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_8_20();
  OUTLINED_FUNCTION_65(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  OUTLINED_FUNCTION_27_8((uint64_t)v6);
  if (!v13)
  {
    OUTLINED_FUNCTION_11_12();
    OUTLINED_FUNCTION_65(v15, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
LABEL_5:
    OUTLINED_FUNCTION_0_0();
    return;
  }
  if ((unsigned __int128)(v4 * (__int128)60) >> 64 == (60 * v4) >> 63)
  {
    sub_190BE4784();
    v14 = OUTLINED_FUNCTION_11_12();
    OUTLINED_FUNCTION_53_3(v14, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    goto LABEL_5;
  }
  __break(1u);
}

void Date.addHours(_:calendar:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13[2];

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_20_9(v3);
  OUTLINED_FUNCTION_16_5();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_14_10();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_60_4(v6, &qword_1ED034808, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_27();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - v10;
  OUTLINED_FUNCTION_9_19(v9, *MEMORY[0x1E0CB1140]);
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_8_20();
  OUTLINED_FUNCTION_65(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  OUTLINED_FUNCTION_27_8((uint64_t)v11);
  if (!v12)
  {
    OUTLINED_FUNCTION_10_19();
    OUTLINED_FUNCTION_65(v13[1], (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
LABEL_8:
    OUTLINED_FUNCTION_0_0();
    return;
  }
  OUTLINED_FUNCTION_36_4();
  if (v12)
  {
    OUTLINED_FUNCTION_50_5();
    if (v12)
    {
      OUTLINED_FUNCTION_63_4();
      OUTLINED_FUNCTION_10_19();
      sub_190AC2290((uint64_t)v11, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void Date.addDays(_:calendar:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14[2];

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_20_9(v3);
  OUTLINED_FUNCTION_16_5();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_14_10();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_60_4(v6, &qword_1ED034808, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_27();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  OUTLINED_FUNCTION_9_19(v9, *MEMORY[0x1E0CB1130]);
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_8_20();
  OUTLINED_FUNCTION_65(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  OUTLINED_FUNCTION_27_8((uint64_t)v11);
  if (!v12)
  {
    OUTLINED_FUNCTION_10_19();
    OUTLINED_FUNCTION_65(v14[1], (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
LABEL_9:
    OUTLINED_FUNCTION_0_0();
    return;
  }
  OUTLINED_FUNCTION_36_4();
  if (!v12)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_50_5();
  if (!v12)
    goto LABEL_10;
  if ((unsigned __int128)(v13 * (__int128)24) >> 64 == (24 * v13) >> 63)
  {
    OUTLINED_FUNCTION_63_4();
    OUTLINED_FUNCTION_10_19();
    sub_190AC2290((uint64_t)v11, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    goto LABEL_9;
  }
LABEL_11:
  __break(1u);
}

void sub_190B4C95C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = a1;
  if (!*(_QWORD *)(a1 + 16)
    || (sub_190B4CC08(0, &qword_1EE1FE348, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (unint64_t *)&unk_1EE1FE318, (uint64_t)&unk_190BE7A68), v2 = OUTLINED_FUNCTION_39_6(), (v24 = *(_QWORD *)(v1 + 16)) == 0))
  {
LABEL_24:
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_19_10();
    return;
  }
  v3 = 0;
  v22 = v1;
  v23 = v1 + 32;
  while (v3 < *(_QWORD *)(v1 + 16))
  {
    v4 = *(void **)(v23 + 8 * v3);
    sub_190BE5000();
    v6 = v5;
    sub_190BE62FC();
    v7 = v4;
    sub_190BE50B4();
    v8 = sub_190BE6314();
    swift_bridgeObjectRelease();
    v9 = -1 << *(_BYTE *)(v2 + 32);
    v10 = v8 & ~v9;
    OUTLINED_FUNCTION_64_3();
    if ((v13 & v12) != 0)
    {
      OUTLINED_FUNCTION_62_4();
      if (v6 == OUTLINED_FUNCTION_42_5() && v8 == v14)
      {
LABEL_21:
        swift_bridgeObjectRelease_n();
LABEL_22:

        goto LABEL_23;
      }
      OUTLINED_FUNCTION_28_8();
      OUTLINED_FUNCTION_59_3();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        goto LABEL_22;
      v16 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v16;
        OUTLINED_FUNCTION_64_3();
        if ((v12 & v13) == 0)
          break;
        OUTLINED_FUNCTION_62_4();
        if (v6 == OUTLINED_FUNCTION_42_5() && v8 == v17)
          goto LABEL_21;
        OUTLINED_FUNCTION_28_8();
        OUTLINED_FUNCTION_59_3();
        swift_bridgeObjectRelease();
        if ((v6 & 1) != 0)
          goto LABEL_22;
      }
    }
    *(_QWORD *)(v2 + 56 + 8 * v11) = v13 | v12;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10) = v7;
    v19 = *(_QWORD *)(v2 + 16);
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_26;
    *(_QWORD *)(v2 + 16) = v21;
LABEL_23:
    ++v3;
    v1 = v22;
    if (v3 == v24)
      goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_190B4CB28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (a2 - a1 != -1)
    return sub_190B4CB80(a2 - a1 + 1) + a1;
  v3 = 0;
  MEMORY[0x194017018](&v3, 8);
  return v3;
}

unint64_t sub_190B4CB80(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x194017018](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x194017018](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190B4CC08(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t *v5;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    OUTLINED_FUNCTION_101(0, (uint64_t)a2, a3);
    sub_190AC2574(a4, a3, a5);
    v9 = sub_190BE5C24();
    if (!v10)
      atomic_store(v9, v5);
  }
}

void fetch(urlRequest:session:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_190B4CE10(0, a2, a3, a4);
  swift_allocObject();
  sub_190B20FBC((void (*)(uint64_t (*)(uint64_t *), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B4CE08);
}

void sub_190B4CCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  v11 = (void *)sub_190BE4244();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = sub_190B4D154;
  v12[5] = v10;
  v15[4] = sub_190B4D464;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_190B4ABD4;
  v15[3] = &block_descriptor_6;
  v13 = _Block_copy(v15);
  swift_retain();
  swift_release();
  v14 = objc_msgSend(a5, sel_dataTaskWithRequest_completionHandler_, v11, v13);
  _Block_release(v13);

  objc_msgSend(v14, sel_resume);
}

void sub_190B4CE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190B4CCCC(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_190B4CE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EE1FE298)
  {
    v4 = type metadata accessor for Promise(0, MEMORY[0x1E0CB0338], a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EE1FE298);
  }
}

unint64_t destroy for PromiseFetchError(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 16);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13TeaFoundation17PromiseFetchErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if ((int)v4 - 1 < 0)
  {
    *(_QWORD *)(a1 + 16) = v3;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  return a1;
}

_QWORD *assignWithCopy for PromiseFetchError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 v8;

  LODWORD(v4) = -1;
  if (a1[2] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[2];
  v6 = v5 - 1;
  if (a2[2] < 0xFFFFFFFFuLL)
    v4 = a2[2];
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    v8 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithTake for PromiseFetchError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = *(_QWORD *)(a2 + 16);
    if ((int)v7 - 1 < 0)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromiseFetchError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PromiseFetchError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

uint64_t sub_190B4D0CC(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_190B4D0F0(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromiseFetchError()
{
  return &type metadata for PromiseFetchError;
}

uint64_t sub_190B4D130()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190B4D154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_190B65D9C(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

void sub_190B4D15C(uint64_t a1, unint64_t a2, void *a3, void *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, unint64_t))
{
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  id v31;

  v13 = sub_190BE5060();
  MEMORY[0x1E0C80A78](v13);
  if (!a4)
  {
    if (a2 >> 60 == 15)
    {
      if (a3)
      {
        objc_opt_self();
        v15 = swift_dynamicCastObjCClass();
        if (v15)
        {
          v16 = (void *)v15;
          v31 = a3;
          if ((uint64_t)objc_msgSend(v16, sel_statusCode) >= 400)
          {
            v22 = objc_msgSend(v16, sel_statusCode);
            sub_190B4D470();
            v23 = (void *)swift_allocError();
            v24[1] = 0;
            v24[2] = 0;
            *v24 = v22;
            a5();

            return;
          }

        }
      }
      sub_190B4D470();
      v17 = (void *)swift_allocError();
      *v18 = 0;
      v18[1] = 0;
      v18[2] = 1;
      a5();

      return;
    }
    if (a3)
    {
      objc_opt_self();
      v19 = swift_dynamicCastObjCClass();
      if (v19)
      {
        v20 = (void *)v19;
        v21 = a3;
        sub_190AFCD54(a1, a2);
        if ((uint64_t)objc_msgSend(v20, sel_statusCode) >= 400)
        {
          v25 = objc_msgSend(v20, sel_statusCode);
          sub_190BE5048();
          v26 = sub_190BE5018();
          v28 = v27;
          sub_190B4D470();
          v29 = (void *)swift_allocError();
          *v30 = v25;
          v30[1] = v26;
          v30[2] = v28;
          a5();

          sub_190AFCEB8(a1, a2);
          return;
        }

        sub_190AFCEB8(a1, a2);
      }
    }
    sub_190AFCA4C(a1, a2);
    a7(a1, a2);
    sub_190AFCEB8(a1, a2);
    return;
  }
  v14 = a4;
  ((void (*)(void *))a5)(a4);

}

uint64_t sub_190B4D438()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190B4D464(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_190B4D15C(a1, a2, a3, a4, *(void (**)(void))(v4 + 16), *(_QWORD *)(v4 + 24), *(void (**)(uint64_t, unint64_t))(v4 + 32));
}

unint64_t sub_190B4D470()
{
  unint64_t result;

  result = qword_1EE1FFB90[0];
  if (!qword_1EE1FFB90[0])
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for PromiseFetchError, &type metadata for PromiseFetchError);
    atomic_store(result, qword_1EE1FFB90);
  }
  return result;
}

void sub_190B4D4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  __n128 *v9;
  __n128 *v10;
  __n128 *v11;
  id v12;

  switch(*(_QWORD *)(a4 + 16))
  {
    case 1:
      sub_190BE58A0();
      OUTLINED_FUNCTION_16_3();
      v5 = OUTLINED_FUNCTION_24();
      *(_OWORD *)(v5 + 16) = xmmword_190BE7CD0;
      v6 = v5 + 32;
      v7 = a4 + 32;
      goto LABEL_8;
    case 2:
      sub_190BE58A0();
      OUTLINED_FUNCTION_16_3();
      v8 = (__n128 *)OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_0_35(v8, (__n128)xmmword_190BE8430);
      v6 = (uint64_t)&v8[4].n128_i64[1];
      v7 = a4 + 72;
      goto LABEL_8;
    case 3:
      sub_190BE58A0();
      OUTLINED_FUNCTION_16_3();
      v9 = (__n128 *)OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_0_35(v9, (__n128)xmmword_190BEACC0);
      OUTLINED_FUNCTION_3_24();
      v6 = (uint64_t)&v9[7];
      v7 = a4 + 112;
      goto LABEL_8;
    case 4:
      sub_190BE58A0();
      OUTLINED_FUNCTION_16_3();
      v10 = (__n128 *)OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_0_35(v10, (__n128)xmmword_190BEADA0);
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_5_18();
      v6 = (uint64_t)&v10[9].n128_i64[1];
      v7 = a4 + 152;
      goto LABEL_8;
    case 5:
      sub_190BE58A0();
      OUTLINED_FUNCTION_16_3();
      v11 = (__n128 *)OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_0_35(v11, (__n128)xmmword_190BE87D0);
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_5_18();
      sub_190AC78B8(a4 + 152, (uint64_t)&v11[9].n128_i64[1]);
      v6 = (uint64_t)&v11[12];
      v7 = a4 + 192;
LABEL_8:
      sub_190AC78B8(v7, v6);
      sub_190B0BFC4();
      sub_190BE5990();
      OUTLINED_FUNCTION_4_22();
      sub_190BE4A00();
      swift_bridgeObjectRelease();
      break;
    default:
      sub_190BE58A0();
      sub_190B0BFC4();
      sub_190BE5990();
      OUTLINED_FUNCTION_4_22();
      sub_190BE4A00();
      break;
  }

}

void simulateCrash(unless:_:_:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) == 0)
    sub_190B4D4B0(a2, a3, a4, a5);
}

uint64_t dispatch thunk of Constructable.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t Quantity.quantifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_190B4D6BC(v2, v3, v4);
}

uint64_t sub_190B4D6BC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 4)
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return result;
}

uint64_t Quantity.thing.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t Quantity.inverted.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t Quantity.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v2;
}

void static Quantity.need<A>(_:of:)()
{
  sub_190B4D870();
}

void sub_190B4D740(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  char v13;
  int *v14;
  uint64_t *v15;

  v10 = a3;
  v13 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_BYTE *)(a7 + 16) = v13;
  v14 = (int *)type metadata accessor for Quantity(0, a6, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a7 + v14[7], a2, a6);
  *(_BYTE *)(a7 + v14[8]) = v10;
  v15 = (uint64_t *)(a7 + v14[9]);
  *v15 = a4;
  v15[1] = a5;
  OUTLINED_FUNCTION_26();
}

void static Quantity.need<A>(_:without:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_1_37();
  v1 = MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_0_36(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_6_24();
  sub_190BE5C54();
  sub_190BE5114();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_42();
  sub_190BE5114();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_26();
}

void static Quantity.has<A>(_:of:)()
{
  sub_190B4D870();
}

void sub_190B4D870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  char v15;

  OUTLINED_FUNCTION_1_37();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v3 + 8);
  v8 = *(_BYTE *)(v3 + 16);
  v14[0] = *(_QWORD *)v3;
  v6 = v14[0];
  v14[1] = v7;
  v15 = v8;
  (*(void (**)(char *))(v9 + 16))(v5);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_190B4D6BC(v6, v7, v8);
  sub_190BE5114();
  v10[0] = v6;
  v10[1] = v7;
  v11 = v8;
  Quantifier.description.getter();
  sub_190BE5114();
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_7_23();
  OUTLINED_FUNCTION_4_23();
  sub_190B4D740((uint64_t)v14, (uint64_t)v5, 0, v12, v13, v0, v1);
}

void static Quantity.doesNotHave<A>(_:of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_1_37();
  v1 = MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_0_36(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_6_24();
  sub_190BE5C54();
  sub_190BE5114();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_7_23();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_190B4D9FC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_190B4DA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((((v7 + 17) & ~v7) + v8) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((((v7 + 17) & ~v7) + v8) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    v12 = *(_QWORD *)a2;
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(_BYTE *)(a2 + 16);
    sub_190B4D6BC(*(_QWORD *)a2, v13, v14);
    *(_QWORD *)a1 = v12;
    *(_QWORD *)(a1 + 8) = v13;
    *(_BYTE *)(a1 + 16) = v14;
    v15 = a2 + v7;
    v16 = (a1 + v7 + 17) & ~v7;
    v17 = (v15 + 17) & ~v7;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v16, v17, v5);
    *(_BYTE *)(v16 + v8) = *(_BYTE *)(v17 + v8);
    v18 = (v16 + v8) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v17 + v8) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_190B4DBA8(uint64_t a1, uint64_t a2)
{
  sub_190B4DC14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B4DC14(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_190B4DC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_190B4D6BC(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 17 + a1) & ~v10;
  v12 = (v10 + 17 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  v14 &= 0xFFFFFFFFFFFFFFF8;
  v15 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_190B4DCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_190B4D6BC(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v11 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v8;
  sub_190B4DC14(v9, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 17 + a1) & ~v13;
  v15 = (v13 + 17 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = v14 + v16;
  v18 = v15 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v17 &= 0xFFFFFFFFFFFFFFF8;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190B4DDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 17 + a1) & ~v5;
  v7 = (v5 + 17 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = v6 + v8;
  v10 = v7 + v8;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  *(_OWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_190B4DE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_190B4DC14(v7, v8, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 17 + a1) & ~v11;
  v13 = (v11 + 17 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = v12 + v14;
  v16 = v13 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  v15 &= 0xFFFFFFFFFFFFFFF8;
  v16 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190B4DEF0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    v14 = (a1 + v8 + 17) & ~v8;
    if (v6 < 0x7FFFFFFF)
    {
      v15 = *(_QWORD *)(((v14 + v9) & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(v14, v6, v4);
    }
  }
  else
  {
    if (((((((v8 + 17) & ~v8) + v9) & 0xFFFFFFFFFFFFFFF8) + 24) & 0xFFFFFFF8) != 0)
      v10 = 2;
    else
      v10 = a2 - v7 + 1;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_190B4DF78 + 4 * byte_190BEADC8[v12]))();
  }
}

void sub_190B4E004(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0u;
  }
  else
  {
    if ((((((_DWORD)v7 + 17) & ~(_DWORD)v7) + *(_DWORD *)(v5 + 64)) & 0xFFFFFFF8) == 0xFFFFFFE8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((((((_DWORD)v7 + 17) & ~(_DWORD)v7) + *(_DWORD *)(v5 + 64)) & 0xFFFFFFF8) != 0xFFFFFFE8)
    {
      v11 = ~v6 + a2;
      bzero(a1, ((((v7 + 17) & ~v7) + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + 24);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_190B4E100(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)(v6 + v7) = 0;
  if ((_DWORD)a1)
  {
    v8 = (v6 + v5 + 17) & a4;
    if (a2 < 0x7FFFFFFF)
    {
      v9 = (v8 + v4) & 0xFFFFFFFFFFFFFFF8;
      if ((a1 & 0x80000000) != 0)
      {
        *(_QWORD *)(v9 + 8) = a1 ^ 0x80000000;
        *(_QWORD *)(v9 + 16) = 0;
      }
      else
      {
        *(_QWORD *)(v9 + 16) = (a1 - 1);
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload(v8, a1, a2, a3);
    }
  }
}

uint64_t type metadata accessor for Quantity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Quantity);
}

void sub_190B4E1A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_39_7() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_190AFE0AC();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_35_7();
  if (v7 != v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_190AD2D94();
  if (!v2)
  {
LABEL_11:
    OUTLINED_FUNCTION_20();
    *v1 = v3;
    return;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v9, v2);
  v10 = v9 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_190B4E264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  void (*v56)(unint64_t **, _QWORD);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(unint64_t **, _QWORD);
  uint64_t v69;

  OUTLINED_FUNCTION_82_1();
  a29 = v34;
  a30 = v35;
  v36 = v30;
  v38 = v37;
  v39 = sub_190B9D940(v37);
  v40 = *v36;
  v41 = *(_QWORD *)(*v36 + 16);
  v42 = v41 + v39;
  if (__OFADD__(v41, v39))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v43 = v39;
  if (!OUTLINED_FUNCTION_39_7() || (v44 = *(_QWORD *)(v40 + 24) >> 1, v44 < v42))
  {
    OUTLINED_FUNCTION_38_8();
    v40 = v45;
    v44 = *(_QWORD *)(v45 + 24) >> 1;
  }
  v46 = *(_QWORD *)(v40 + 16);
  v47 = v44 - v46;
  v48 = (uint64_t)sub_190BA1400(&a17, v40 + 40 * v46 + 32, v44 - v46, v38);
  if (v48 < v43)
    goto LABEL_12;
  if (v48 >= 1)
  {
    v49 = *(_QWORD *)(v40 + 16);
    v50 = __OFADD__(v49, v48);
    v51 = v49 + v48;
    if (v50)
    {
      __break(1u);
      goto LABEL_10;
    }
    *(_QWORD *)(v40 + 16) = v51;
  }
  if (v48 != v47)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    *v36 = v40;
    OUTLINED_FUNCTION_18_1();
    return;
  }
LABEL_13:
  v52 = a18;
  if (a18 == *(_QWORD *)(a17 + 16))
    goto LABEL_10;
  v67 = a17;
  v53 = *(_QWORD *)(v40 + 16);
  v54 = &a17;
  sub_190BA0CA4(&a13, a18);
  v56 = (void (*)(unint64_t **, _QWORD))v55;
  OUTLINED_FUNCTION_6_25(v55, v57);
  v56(&a13, 0);
  v50 = __OFADD__(v52, 1);
  v58 = v52 + 1;
  if (!v50)
  {
    if (&a17 != 255)
    {
      v59 = v67;
      while (2)
      {
        v60 = *(_QWORD *)(v40 + 24) >> 1;
        if (v60 < v53 + 1)
        {
          OUTLINED_FUNCTION_38_8();
          v40 = v66;
          v59 = v67;
          v60 = *(_QWORD *)(v40 + 24) >> 1;
        }
        v61 = v40 + 64;
LABEL_20:
        v62 = (_BYTE *)(v61 + 40 * v53);
        while ((_BYTE)v54 != 0xFF && v53 < v60)
        {
          *((_QWORD *)v62 - 4) = v42;
          *((_QWORD *)v62 - 3) = v31;
          *((_QWORD *)v62 - 2) = v32;
          *((_QWORD *)v62 - 1) = v33;
          *v62 = (_BYTE)v54;
          v62 += 40;
          ++v53;
          LOBYTE(v54) = -1;
          v33 = 0;
          v32 = 0;
          v31 = 0;
          v42 = 0;
          if (v58 != *(_QWORD *)(v59 + 16))
          {
            v54 = &a17;
            v69 = v61;
            sub_190BA0CA4(&a13, v58);
            v68 = (void (*)(unint64_t **, _QWORD))v64;
            OUTLINED_FUNCTION_6_25(v64, v65);
            v68(&a13, 0);
            v61 = v69;
            v59 = v67;
            v50 = __OFADD__(v58++, 1);
            if (!v50)
              goto LABEL_20;
            __break(1u);
            goto LABEL_34;
          }
        }
        *(_QWORD *)(v40 + 16) = v53;
        if ((_BYTE)v54 != 0xFF)
          continue;
        break;
      }
    }
    goto LABEL_10;
  }
LABEL_34:
  __break(1u);
}

_QWORD *assignWithCopy for CallbackStore.CallbackDefinitionContainer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for CallbackStore.CallbackDefinitionContainer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CallbackStore.CallbackDefinitionContainer(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for CallbackStore.CallbackDefinitionContainer(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_190B4E590(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_190B4E59C(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_190B4E5AC(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for CallbackStore.CallbackDefinitionContainer()
{
  return &type metadata for CallbackStore.CallbackDefinitionContainer;
}

void sub_190B4E5D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED032920)
  {
    sub_190AC5F10(255, (unint64_t *)&qword_1ED033E38, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for CallbackDefinition);
    v0 = sub_190BE5438();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED032920);
  }
}

unint64_t sub_190B4E640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1FFC18;
  if (!qword_1EE1FFC18)
  {
    sub_190B4E5D0();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1FFC18);
  }
  return result;
}

unint64_t sub_190B4E680(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AEA618(a2);
      result = sub_190AEA618(a3);
      break;
    case 2:
    case 3:
      sub_190AEA618(result);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      goto LABEL_5;
    case 4:
    case 5:
      sub_190AEA618(result);
LABEL_5:
      result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      break;
    default:
      return result;
  }
  return result;
}

id InterprocessDiagnosticDumpNotifier.__allocating_init(notificationName:diagnosticFileManager:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_37());
  return InterprocessDiagnosticDumpNotifier.init(notificationName:diagnosticFileManager:)();
}

id InterprocessDiagnosticDumpNotifier.init(notificationName:diagnosticFileManager:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *ObjectType;
  char *v5;
  objc_super v7;

  OUTLINED_FUNCTION_0_37();
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v1[OBJC_IVAR___TFInterprocessDiagnosticDumpNotifier_interprocessDiagnosticDumpNotification];
  *(_QWORD *)v5 = v3;
  *((_QWORD *)v5 + 1) = v2;
  *(_QWORD *)&v1[OBJC_IVAR___TFInterprocessDiagnosticDumpNotifier_diagnosticFileManager] = v0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

Swift::Void __swiftcall InterprocessDiagnosticDumpNotifier.triggerDiagnosticFileDump()()
{
  sub_190B105DC();
  sub_190B4E844();
}

void sub_190B4E844()
{
  __CFNotificationCenter *v0;
  __CFString *v1;

  v0 = CFNotificationCenterGetDarwinNotifyCenter();
  v1 = (__CFString *)sub_190BE4FDC();
  CFNotificationCenterPostNotification(v0, v1, 0, 0, 1u);

}

id InterprocessDiagnosticDumpNotifier.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void InterprocessDiagnosticDumpNotifier.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InterprocessDiagnosticDumpNotifier.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InterprocessDiagnosticDumpNotifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for InterprocessDiagnosticDumpNotifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InterprocessDiagnosticDumpNotifier.__allocating_init(notificationName:diagnosticFileManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *static Random.string(chars:)(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *result;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_15_15(a1);
  if (v2 <= v1)
    v3 = v1;
  else
    v3 = v2;
  v4 = MEMORY[0x1E0DEE9D8];
  if ((_DWORD)v3)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_4_24();
    v4 = v12;
    while (1)
    {
      v5 = sub_190BE50C0();
      if ((v5 & 0x8000000000000000) != 0 || HIDWORD(v5))
        break;
      arc4random_uniform(v5);
      OUTLINED_FUNCTION_17_11();
      v6 = OUTLINED_FUNCTION_16_15();
      v8 = v7;
      v12 = v4;
      v9 = *(_QWORD *)(v4 + 16);
      if (v9 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_190AD2C9C();
        v4 = v12;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      v10 = v4 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v8;
      if (!--v3)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_0_6();
    result = (uint64_t *)OUTLINED_FUNCTION_11_14();
    __break(1u);
  }
  else
  {
LABEL_11:
    v12 = v4;
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_12_12();
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_9_1();
    return &v12;
  }
  return result;
}

uint64_t static Random.colorHEX()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  v0 = 6;
  sub_190AD2C9C();
  while (1)
  {
    v1 = sub_190BE50C0();
    if ((v1 & 0x8000000000000000) != 0 || HIDWORD(v1))
      break;
    arc4random_uniform(v1);
    OUTLINED_FUNCTION_17_11();
    v2 = OUTLINED_FUNCTION_16_15();
    v4 = v3;
    v5 = *(_QWORD *)(v8 + 16);
    if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
      OUTLINED_FUNCTION_13_15();
    *(_QWORD *)(v8 + 16) = v5 + 1;
    v6 = v8 + 16 * v5;
    *(_QWORD *)(v6 + 32) = v2;
    *(_QWORD *)(v6 + 40) = v4;
    if (!--v0)
    {
      OUTLINED_FUNCTION_39_1();
      OUTLINED_FUNCTION_12_12();
      OUTLINED_FUNCTION_5_21();
      swift_release();
      sub_190BE5114();
      swift_bridgeObjectRelease();
      return 35;
    }
  }
  OUTLINED_FUNCTION_0_6();
  result = OUTLINED_FUNCTION_11_14();
  __break(1u);
  return result;
}

uint64_t static Random.data()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  v1 = sub_190BE5060();
  OUTLINED_FUNCTION_7_25();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Random.string(chars:)(0x3200000019);
  sub_190BE5048();
  v5 = sub_190BE500C();
  v7 = v6;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v4, v1);
  if (v7 >> 60 != 15)
    return v5;
  __break(1u);
  return result;
}

uint64_t *static Random.sentence(words:)(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = OUTLINED_FUNCTION_15_15(a1);
  if (v2 <= v1)
    v3 = v1;
  else
    v3 = v2;
  v4 = MEMORY[0x1E0DEE9D8];
  if ((_DWORD)v3)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_4_24();
    v4 = v11;
    do
    {
      v5 = static Random.string(chars:)(0x800000003);
      v7 = v6;
      v11 = v4;
      v8 = *(_QWORD *)(v4 + 16);
      if (v8 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        OUTLINED_FUNCTION_13_15();
        v4 = v11;
      }
      *(_QWORD *)(v4 + 16) = v8 + 1;
      v9 = v4 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      --v3;
    }
    while (v3);
  }
  v11 = v4;
  OUTLINED_FUNCTION_39_1();
  OUTLINED_FUNCTION_12_12();
  sub_190BE4F28();
  OUTLINED_FUNCTION_9_1();
  return &v11;
}

double static Random.double(seed:allowNegative:)(uint32_t a1, char a2)
{
  uint32_t v4;
  unsigned int v5;
  double v6;
  uint32_t v7;
  unsigned int v8;
  double v9;

  v4 = arc4random_uniform(a1);
  if (v4 <= 1)
    v5 = 1;
  else
    v5 = v4;
  v6 = (double)v5;
  v7 = arc4random_uniform(a1);
  if (v7 <= 1)
    v8 = 1;
  else
    v8 = v7;
  v9 = v6 / (double)v8;
  if ((a2 & 1) != 0 && (arc4random_uniform(2u) & 1) == 0)
    return -v9;
  return v9;
}

uint64_t static Random.uint(seed:)(uint32_t a1)
{
  uint64_t result;

  LODWORD(result) = arc4random_uniform(a1);
  if (result <= 1)
    return 1;
  else
    return result;
}

void static Random.date(withinLastDays:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_7_25();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2_30();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_39();
  if (__OFSUB__(0, v0))
  {
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_8_23();
  sub_190BE4754();
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v5 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 4294967300.0)
  {
    arc4random_uniform(v5);
    sub_190BE4760();
    OUTLINED_FUNCTION_6_26(v1);
    OUTLINED_FUNCTION_6_26(v2);
    OUTLINED_FUNCTION_9();
    return;
  }
LABEL_9:
  __break(1u);
}

void static Random.date(withinNextDays:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;

  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_7_25();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_2_30();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_39();
  OUTLINED_FUNCTION_8_23();
  sub_190BE4754();
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 4294967300.0)
  {
    arc4random_uniform(v4);
    sub_190BE4760();
    OUTLINED_FUNCTION_6_26(v0);
    OUTLINED_FUNCTION_6_26(v1);
    OUTLINED_FUNCTION_9();
    return;
  }
LABEL_7:
  __break(1u);
}

ValueMetadata *type metadata accessor for Random()
{
  return &type metadata for Random;
}

uint64_t sub_190B4F10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_190B1795C();
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_3_15();
  sub_190B51A3C(a1, v3);
  v7 = OUTLINED_FUNCTION_86_1();
  OUTLINED_FUNCTION_23_3(v3, 1, v7);
  if (v8)
  {
    sub_190AB4BC4(v3);
  }
  else
  {
    sub_190BE5504();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_190BE5474();
    swift_unknownObjectRelease();
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_190B4F268(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Sequence.uniqueByPtr<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  MEMORY[0x1E0C80A78](a1);
  v22 = MEMORY[0x1E0DEE9E8];
  (*(void (**)(_BYTE *, uint64_t))(v13 + 16))(&v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a1;
  v20 = a2;
  v21 = &v22;
  sub_190BE524C();
  OUTLINED_FUNCTION_68_3();
  return v6;
}

uint64_t sub_190B4F344(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v6 = a2();
  if (!v4)
  {
    v8 = v6;
    if ((sub_190B59FC8(v6, *a4) & 1) != 0)
    {
      swift_unknownObjectRelease();
      v7 = 0;
    }
    else
    {
      sub_190B842D0(&v10, v8);
      swift_unknownObjectRelease();
      v7 = 1;
    }
  }
  return v7 & 1;
}

uint64_t sub_190B4F3C4(uint64_t a1)
{
  uint64_t v1;

  return sub_190B4F344(a1, *(uint64_t (**)(void))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD **)(v1 + 56)) & 1;
}

uint64_t Sequence.uniqueWithOptionals<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190ABF084(a1, a2, a3);
}

uint64_t sub_190B4F404(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  _QWORD v34[2];
  uint64_t v35;
  void (*v36)(uint64_t);
  char *v37;

  v34[0] = a4;
  v34[1] = a8;
  v36 = a2;
  v10 = sub_190BE59A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v34 - v13;
  v35 = a6;
  v15 = *(_QWORD *)(a6 - 8);
  v16 = MEMORY[0x1E0C80A78](v12);
  v18 = (void (*)(uint64_t))((char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v34 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v34 - v22;
  v24 = v37;
  v36(a1);
  if (!v24)
  {
    v37 = v21;
    v36 = v18;
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v35) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_7:
      v25 = 1;
      return v25 & 1;
    }
    v26 = v15;
    v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v28 = v23;
    v27(v23, v14, v35);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v29 = sub_190BE563C();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      v30 = v35;
      (*(void (**)(void (*)(uint64_t), char *, uint64_t))(v26 + 16))(v36, v23, v35);
      sub_190BE5654();
      v31 = v37;
      sub_190BE560C();
      v32 = *(void (**)(char *, uint64_t))(v26 + 8);
      v32(v31, v30);
      v32(v28, v30);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v35);
    v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_190B4F620(uint64_t a1)
{
  return sub_190AC3E2C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B4F404) & 1;
}

uint64_t Sequence<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  MEMORY[0x1E0C80A78](a1);
  v16 = MEMORY[0x1E0DEE9E8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v3, a1);
  v12 = a1;
  v13 = a2;
  v14 = a3;
  v15 = &v16;
  v9 = sub_190BE524C();
  swift_bridgeObjectRelease();
  return v9;
}

BOOL sub_190B4F704(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v6 = *a2;
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v9 = v7(AssociatedTypeWitness, a5);
  sub_190B59FCC(v9, v10, v6);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    v7(AssociatedTypeWitness, a5);
    sub_190ABE62C();
    swift_bridgeObjectRelease();
  }
  return (v12 & 1) == 0;
}

BOOL sub_190B4F7F4(uint64_t a1)
{
  uint64_t v1;

  return sub_190B4F704(a1, *(uint64_t **)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t Sequence.groupedBy<A>(_:)()
{
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  sub_190BE5438();
  sub_190BE4D6C();
  sub_190BE4E98();
  sub_190BE5258();
  return v1;
}

uint64_t sub_190B4F8F0(void (*a1)(uint64_t), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v28 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v26 - v14;
  v16 = *(_QWORD *)(a6 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v26 - v20;
  v27 = a2;
  v29(a2);
  v29 = a1;
  v22 = *(_QWORD *)a1;
  v23 = sub_190BE5438();
  v28 = a8;
  MEMORY[0x194015140](&v30, v21, v22, a6, v23, a8);
  v24 = v30;
  if (!v30)
    v24 = sub_190BE5384();
  v31 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v15, v27, AssociatedTypeWitness);
  sub_190BE53D8();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a6);
  v30 = v31;
  sub_190BE4E98();
  sub_190BE4EB0();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, a6);
}

uint64_t sub_190B4FAC0(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_190B4F8F0(a1, a2, *(void (**)(uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t Sequence<>.throwingConcurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_44_4(a1, a2, a3, a4, a5);
  v6 = OUTLINED_FUNCTION_69_2();
  v7 = OUTLINED_FUNCTION_53_4(v6);
  v5[13] = OUTLINED_FUNCTION_19_12(v7);
  v8 = OUTLINED_FUNCTION_28_10();
  v9 = OUTLINED_FUNCTION_56_4(v8);
  v5[15] = v9;
  v5[16] = *(_QWORD *)(v9 - 8);
  v10 = OUTLINED_FUNCTION_5_5();
  v11 = OUTLINED_FUNCTION_39_8(v10);
  v5[18] = v11;
  v5[19] = *(_QWORD *)(v11 - 8);
  v5[20] = OUTLINED_FUNCTION_5_5();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_2_31();
}

uint64_t sub_190B4FB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22_11();
  v6 = (_QWORD *)OUTLINED_FUNCTION_24_11();
  OUTLINED_FUNCTION_91_3(v6);
  v7 = (_QWORD *)OUTLINED_FUNCTION_24_11();
  *(_QWORD *)(v3 + 168) = v7;
  v7[2] = v4;
  v7[3] = v5;
  v7[4] = v2;
  v7[5] = &unk_1EE1FFC40;
  v7[6] = v1;
  swift_retain();
  *(_QWORD *)(v3 + 176) = OUTLINED_FUNCTION_28_10();
  MEMORY[0x194016EF8](MEMORY[0x1E0DECC68], v0);
  OUTLINED_FUNCTION_84_2((uint64_t)sub_190B4FC2C);
  return Sequence<>.throwingUnorderedConcurrentMap<A>(_:)((uint64_t)&unk_1EE1FFC50, (uint64_t)v7, v8, v9, v10);
}

uint64_t sub_190B4FC2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v2;
  v5 = *(_QWORD *)(*v2 + 152);
  v4 = *(_QWORD *)(*v2 + 160);
  v6 = *(_QWORD *)(*v2 + 144);
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release();
  OUTLINED_FUNCTION_3_3();
  return swift_task_switch();
}

void sub_190B4FCC4()
{
  OUTLINED_FUNCTION_64_4();
  OUTLINED_FUNCTION_29_9();
}

void sub_190B4FD00()
{
  OUTLINED_FUNCTION_54_5();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE5318();
  OUTLINED_FUNCTION_89_1();
  OUTLINED_FUNCTION_90_2();
}

uint64_t sub_190B4FEA8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_22_2();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B4FEFC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a2;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v7;
  *v7 = v4;
  v7[1] = sub_190B4FF70;
  return v9(a1, a3);
}

uint64_t sub_190B4FF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_35_8();
  v3 = *v2;
  v5 = OUTLINED_FUNCTION_3_27(v4);
  if (!v1)
    v5 = *(_QWORD *)(v0 + 16);
  return OUTLINED_FUNCTION_34_10(v5, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_190B4FFA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B4FFCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_46_4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  OUTLINED_FUNCTION_17_12(v1);
  OUTLINED_FUNCTION_36_1();
  return sub_190B4FEFC(v2, v3, v4, v5);
}

uint64_t sub_190B50018(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_32();
  return OUTLINED_FUNCTION_34_10(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_190B50044(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, char *);

  *(_QWORD *)(v3 + 16) = a1;
  v7 = *a2;
  swift_getAssociatedTypeWitness();
  v8 = (char *)a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v12 = (uint64_t (*)(uint64_t, uint64_t, char *))((char *)a3 + *a3);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v10;
  *v10 = v3;
  v10[1] = sub_190B50150;
  return v12(v9, v7, v8);
}

uint64_t sub_190B50150(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  OUTLINED_FUNCTION_3_27(&v7);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_190B501A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_59_4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  v2 = OUTLINED_FUNCTION_14_12(v1);
  return OUTLINED_FUNCTION_16_16(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t Sequence<>.throwingUnorderedConcurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_25();
}

uint64_t sub_190B50204()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_8_24(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_190B50274;
  OUTLINED_FUNCTION_27_9();
  return sub_190BE5F00();
}

uint64_t sub_190B50274()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_35_8();
  *v3 = *v2;
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_2_31();
}

uint64_t sub_190B502D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_190B502DC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Sequence<>.concurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_44_4(a1, a2, a3, a4, a5);
  v6 = OUTLINED_FUNCTION_69_2();
  v7 = OUTLINED_FUNCTION_53_4(v6);
  v5[13] = OUTLINED_FUNCTION_19_12(v7);
  v8 = OUTLINED_FUNCTION_28_10();
  v9 = OUTLINED_FUNCTION_56_4(v8);
  v5[15] = v9;
  v5[16] = *(_QWORD *)(v9 - 8);
  v10 = OUTLINED_FUNCTION_5_5();
  v11 = OUTLINED_FUNCTION_39_8(v10);
  v5[18] = v11;
  v5[19] = *(_QWORD *)(v11 - 8);
  v5[20] = OUTLINED_FUNCTION_5_5();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_2_31();
}

uint64_t sub_190B50398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22_11();
  v6 = (_QWORD *)OUTLINED_FUNCTION_24_11();
  OUTLINED_FUNCTION_91_3(v6);
  v7 = (_QWORD *)OUTLINED_FUNCTION_24_11();
  *(_QWORD *)(v3 + 168) = v7;
  v7[2] = v4;
  v7[3] = v5;
  v7[4] = v2;
  v7[5] = &unk_1EE1FFC80;
  v7[6] = v1;
  swift_retain();
  *(_QWORD *)(v3 + 176) = OUTLINED_FUNCTION_28_10();
  MEMORY[0x194016EF8](MEMORY[0x1E0DECC68], v0);
  OUTLINED_FUNCTION_84_2((uint64_t)sub_190B5045C);
  return Sequence<>.unorderedConcurrentMap<A>(_:)((uint64_t)&unk_1EE1FFC90, (uint64_t)v7, v8, v9, v10);
}

uint64_t sub_190B5045C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_2_31();
}

void sub_190B504D8()
{
  OUTLINED_FUNCTION_29_9();
}

void sub_190B50520()
{
  OUTLINED_FUNCTION_54_5();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE5318();
  OUTLINED_FUNCTION_89_1();
  OUTLINED_FUNCTION_90_2();
}

uint64_t sub_190B506C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a2;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v7;
  *v7 = v4;
  v7[1] = sub_190B5073C;
  return v9(a1, a3);
}

uint64_t sub_190B5073C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = v4;
  v2 = *v0;
  OUTLINED_FUNCTION_3_27(&v4);
  return OUTLINED_FUNCTION_36_6(*(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_190B50778(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, char *);

  *(_QWORD *)(v3 + 16) = a1;
  v7 = *a2;
  swift_getAssociatedTypeWitness();
  v8 = (char *)a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v12 = (uint64_t (*)(uint64_t, uint64_t, char *))((char *)a3 + *a3);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v10;
  *v10 = v3;
  v10[1] = sub_190B50884;
  return v12(v9, v7, v8);
}

uint64_t sub_190B50884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_14_1();
  v4 = *(_QWORD **)(v3 + 16);
  OUTLINED_FUNCTION_7_5();
  *v4 = a1;
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t Sequence<>.unorderedConcurrentMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_25();
}

uint64_t sub_190B508D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_8_24(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_190B50948;
  OUTLINED_FUNCTION_27_9();
  return sub_190BE5D14();
}

uint64_t sub_190B50948()
{
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_7_5();
  swift_task_dealloc();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B50984()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_190B5098C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_190BE59A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_190B509E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  v8[12] = *(_QWORD *)(a7 - 8);
  v8[13] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[14] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[15] = v11;
  v8[16] = *(_QWORD *)(v11 + 64);
  v8[17] = swift_task_alloc();
  sub_190B1795C();
  v8[18] = swift_task_alloc();
  sub_190BE59A8();
  v8[19] = swift_task_alloc();
  v8[20] = sub_190ABC730();
  v12 = sub_190BE5564();
  v8[21] = v12;
  v8[22] = *(_QWORD *)(v12 - 8);
  v8[23] = swift_task_alloc();
  sub_190BE59A8();
  v8[24] = swift_task_alloc();
  v8[25] = *(_QWORD *)(a6 - 8);
  v8[26] = swift_task_alloc();
  v13 = swift_getAssociatedTypeWitness();
  v8[27] = v13;
  v8[28] = *(_QWORD *)(v13 - 8);
  v8[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190B50BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  OUTLINED_FUNCTION_64_4();
  v18 = *(_QWORD *)(v0 + 120);
  OUTLINED_FUNCTION_57_2(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 200));
  OUTLINED_FUNCTION_48_3();
  while (1)
  {
    v1 = *(_QWORD *)(v0 + 192);
    v2 = *(_QWORD *)(v0 + 112);
    swift_getAssociatedConformanceWitness();
    sub_190BE5A14();
    OUTLINED_FUNCTION_23_3(v1, 1, v2);
    if (v3)
      break;
    v4 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 56);
    v10 = OUTLINED_FUNCTION_86_1();
    v20 = *(_OWORD *)(v0 + 80);
    OUTLINED_FUNCTION_108(v6, v11, v12, v10);
    v13 = *(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32);
    v13(v5, v4, v7);
    v14 = (*(unsigned __int8 *)(v18 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = 0;
    *(_QWORD *)(v15 + 24) = 0;
    *(_QWORD *)(v15 + 32) = v8;
    *(_OWORD *)(v15 + 40) = v20;
    *(_QWORD *)(v15 + 56) = v19;
    *(_QWORD *)(v15 + 64) = v9;
    v13(v15 + v14, v5, v7);
    sub_190BE557C();
    swift_retain();
    sub_190B4F10C(v6, (uint64_t)&unk_1EE1FFCD8, v15);
    sub_190AB4BC4(v6);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  *(_QWORD *)(v0 + 16) = sub_190BE5384();
  OUTLINED_FUNCTION_88_2();
  swift_checkMetadataState();
  sub_190BE5540();
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v16;
  *v16 = v0;
  v16[1] = sub_190B50DDC;
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_58_5();
  return sub_190BE5558();
}

uint64_t sub_190B50DDC()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_35_8();
  OUTLINED_FUNCTION_3_27(v1);
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_2_31();
}

uint64_t sub_190B50E30()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_23_3(*(_QWORD *)(v0 + 152), 1, *(_QWORD *)(v0 + 80));
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 32);
    OUTLINED_FUNCTION_77_3(*(_QWORD *)(v0 + 176));
    *v2 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_78_2();
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_52_7();
    OUTLINED_FUNCTION_70_2();
    return OUTLINED_FUNCTION_11_15(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_82_3(*(_QWORD *)(v0 + 104), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 32));
    OUTLINED_FUNCTION_87();
    sub_190BE53D8();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v3;
    *v3 = v0;
    v3[1] = sub_190B50F34;
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_34_0();
    return sub_190BE5558();
  }
}

uint64_t sub_190B50F34()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_35_8();
  OUTLINED_FUNCTION_3_27(v1);
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_2_31();
}

uint64_t sub_190B50F88()
{
  uint64_t v0;

  OUTLINED_FUNCTION_63_5();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_11_15(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B50FF8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_190B5106C;
  return v11(a1, a6);
}

uint64_t sub_190B5106C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_32();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B51090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a3;
  v8[6] = a4;
  v8[3] = a1;
  v8[4] = a2;
  v8[11] = *(_QWORD *)(a7 - 8);
  v8[12] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[13] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[14] = v11;
  v8[15] = *(_QWORD *)(v11 + 64);
  v8[16] = swift_task_alloc();
  sub_190B1795C();
  v8[17] = swift_task_alloc();
  sub_190BE59A8();
  v8[18] = swift_task_alloc();
  v12 = sub_190BE54C8();
  v8[19] = v12;
  v8[20] = *(_QWORD *)(v12 - 8);
  v8[21] = swift_task_alloc();
  sub_190BE59A8();
  v8[22] = swift_task_alloc();
  v8[23] = *(_QWORD *)(a6 - 8);
  v8[24] = swift_task_alloc();
  v13 = swift_getAssociatedTypeWitness();
  v8[25] = v13;
  v8[26] = *(_QWORD *)(v13 - 8);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190B51244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  OUTLINED_FUNCTION_64_4();
  v17 = *(_QWORD *)(v0 + 112);
  OUTLINED_FUNCTION_57_2(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 184));
  OUTLINED_FUNCTION_48_3();
  while (1)
  {
    v1 = *(_QWORD *)(v0 + 176);
    v2 = *(_QWORD *)(v0 + 104);
    swift_getAssociatedConformanceWitness();
    sub_190BE5A14();
    if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
      break;
    v3 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 48);
    v8 = OUTLINED_FUNCTION_86_1();
    v20 = *(_OWORD *)(v0 + 72);
    OUTLINED_FUNCTION_108(v4, v9, v10, v8);
    v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32);
    v11(v5, v3, v6);
    v12 = (*(unsigned __int8 *)(v17 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 32) = v18;
    *(_OWORD *)(v13 + 40) = v20;
    *(_QWORD *)(v13 + 56) = v19;
    *(_QWORD *)(v13 + 64) = v7;
    v11(v13 + v12, v5, v6);
    v14 = sub_190BE54D4();
    swift_retain();
    sub_190B515DC(v4, (uint64_t)&unk_1EE1FFCB8, v13, v14);
    sub_190AB4BC4(v4);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  OUTLINED_FUNCTION_88_2();
  *(_QWORD *)(v0 + 16) = sub_190BE5384();
  sub_190BE54B0();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v15;
  *v15 = v0;
  v15[1] = sub_190B51434;
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_58_5();
  return sub_190BE54BC();
}

uint64_t sub_190B51434()
{
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B51468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  uint64_t (*v15)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_23_3(v12[18], 1, v12[9]);
  if (v13)
  {
    v14 = (_QWORD *)v12[3];
    OUTLINED_FUNCTION_77_3(v12[20]);
    *v14 = v12[2];
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_78_2();
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_52_7();
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_34_0();
    return v15(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    OUTLINED_FUNCTION_82_3(v12[12], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12[11] + 32));
    OUTLINED_FUNCTION_87();
    sub_190BE53D8();
    v23 = (_QWORD *)swift_task_alloc();
    v12[28] = v23;
    *v23 = v12;
    v23[1] = sub_190B51434;
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_34_0();
    return sub_190BE54BC();
  }
}

uint64_t sub_190B51568(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_190B51C34;
  return v11(a1, a6);
}

uint64_t sub_190B515DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[4];
  _QWORD v22[4];

  v5 = v4;
  sub_190B1795C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B51A3C(a1, (uint64_t)v12);
  v13 = sub_190BE5510();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_190AB4BC4((uint64_t)v12);
  }
  else
  {
    sub_190BE5504();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v14 = sub_190BE5474();
    v16 = v15;
    swift_unknownObjectRelease();
  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v17 = *v5;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = *(_QWORD *)(a4 + 16);
  v18[3] = a2;
  v18[4] = a3;
  v19 = (_QWORD *)(v16 | v14);
  if (v16 | v14)
  {
    v22[0] = 0;
    v22[1] = 0;
    v19 = v22;
    v22[2] = v14;
    v22[3] = v16;
  }
  v21[1] = 1;
  v21[2] = v19;
  v21[3] = v17;
  swift_task_create();
  return swift_release();
}

uint64_t sub_190B51774(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_190B517D8;
  return v6(a1);
}

uint64_t sub_190B517D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_32();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B51800(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_190B51850()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_60_5();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  OUTLINED_FUNCTION_18_14(v1);
  OUTLINED_FUNCTION_36_1();
  return sub_190B509E0(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_190B5189C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_46_4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  OUTLINED_FUNCTION_17_12(v1);
  OUTLINED_FUNCTION_36_1();
  return sub_190B506C8(v2, v3, v4, v5);
}

uint64_t sub_190B518E8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_32();
  return OUTLINED_FUNCTION_36_6(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_190B51914()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_59_4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  v2 = OUTLINED_FUNCTION_14_12(v1);
  return OUTLINED_FUNCTION_16_16(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_190B51958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190B5098C(a1, a2);
}

uint64_t sub_190B51974()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_60_5();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  OUTLINED_FUNCTION_18_14(v1);
  OUTLINED_FUNCTION_36_1();
  return sub_190B51090(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_190B519C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_65_3();
  OUTLINED_FUNCTION_33_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  OUTLINED_FUNCTION_13_16(v1);
  OUTLINED_FUNCTION_34_0();
  return sub_190B51568(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_190B51A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190B1795C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B51A80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B51AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 24);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_27_0(v5);
  *v6 = v2;
  v6[1] = sub_190B51C30;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE1FFCC0 + dword_1EE1FFCC0))(a1, v4);
}

uint64_t objectdestroy_24Tm_0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_190B51BB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_65_3();
  OUTLINED_FUNCTION_33_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  OUTLINED_FUNCTION_13_16(v1);
  OUTLINED_FUNCTION_34_0();
  return sub_190B50FF8(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_190B51C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190B51958(a1, a2);
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = v1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return sub_190BE5510();
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_89_1()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_91_3(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result[2] = v2;
  result[3] = v5;
  result[4] = v1;
  result[5] = v4;
  result[6] = v3;
  return result;
}

uint64_t AsyncSequence.collect()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_190B51CB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[4];
  v1 = v0[5];
  swift_getAssociatedTypeWitness();
  v0[3] = sub_190BE4D78();
  v3 = swift_task_alloc();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  sub_190BE5438();
  *v4 = v0;
  v4[1] = sub_190B51D94;
  return sub_190BE5588();
}

uint64_t sub_190B51D94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190B51E00()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B51E34(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;

  v2[2] = a1;
  v2[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[4] = AssociatedTypeWitness;
  v2[5] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190B51EAC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_190BE5438();
  sub_190BE53D8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B51F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190B51F84;
  return sub_190B51E34(a1, a2);
}

uint64_t sub_190B51F84()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t CodingSafeArray.wrappedValue.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t CodingSafeArray.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CodingSafeArray.wrappedValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t CodingSafeArray.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CodingSafeArray.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BE632C();
  if (!v5)
  {
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    v11 = type metadata accessor for SafeishArray(0, a2, a3, a4);
    MEMORY[0x194016EF8](&protocol conformance descriptor for SafeishArray<A>, v11);
    sub_190BE6110();
    v12 = v14[6];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    *a5 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodingSafeArray.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v4 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BE635C();
  v7[1] = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  v5 = sub_190BE5438();
  v7[0] = *(_QWORD *)(a2 + 32);
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF10], v5, v7);
  sub_190BE6170();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_190B521F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return CodingSafeArray.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_190B52210(_QWORD *a1, uint64_t a2)
{
  return CodingSafeArray.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for CodingSafeArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodingSafeArray);
}

uint64_t VersionQualifier.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  return v1;
}

uint64_t VersionQualifier.version.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

BOOL VersionQualifier.development.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16) != 0;
}

uint64_t VersionQualifier.init(name:version:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t VersionQualifier.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t VersionQualifier.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];

  if (a2)
  {
    result = VersionQualifier.init(_:)(result, a2, v7);
    v4 = v7[0];
    v5 = v7[1];
    v6 = v7[2];
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
  }
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

uint64_t static VersionQualifier.beta(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 1635018082;
  a2[1] = 0xE400000000000000;
  a2[2] = a1;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t VersionQualifier.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  if (v0[2])
  {
    v3 = *v0;
    OUTLINED_FUNCTION_74();
    sub_190BE5114();
    VersionNumber.description.getter();
    sub_190BE5114();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    OUTLINED_FUNCTION_74();
  }
  return v1;
}

BOOL static VersionQualifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  _BOOL8 result;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_190BE60BC(), result = 0, (v5 & 1) != 0))
  {
    if (v2)
    {
      v9 = v2;
      if (v3)
      {
        v8 = v3;
        v7 = static VersionNumber.== infix(_:_:)((uint64_t)&v9, (uint64_t)&v8);
        OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_16();
        return (v7 & 1) != 0;
      }
      OUTLINED_FUNCTION_74();
    }
    else if (!v3)
    {
      return 1;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_190B52434(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B52458(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190BDC8B4);
}

uint64_t sub_190B52440(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B52458(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190BBEC60);
}

uint64_t sub_190B5244C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B52458(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190BBECD4);
}

uint64_t sub_190B52458(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

unint64_t sub_190B52484()
{
  unint64_t result;

  result = qword_1EE1FFCF8;
  if (!qword_1EE1FFCF8)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for VersionQualifier, &type metadata for VersionQualifier);
    atomic_store(result, (unint64_t *)&qword_1EE1FFCF8);
  }
  return result;
}

_QWORD *sub_190B524C4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_2_2();
  return a1;
}

_QWORD *assignWithCopy for VersionQualifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t static CacheMaxAge.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v5 = *(_QWORD *)&v3 == 0;
    if (v3 == 0.0)
      v6 = *(unsigned __int8 *)(a2 + 8);
    else
      v6 = 0;
    if (v5)
      v4 = 0;
    if (v2 == 0.0)
      return v6;
    else
      return v4;
  }
  else
  {
    return (v4 & 1) == 0 && v2 == v3;
  }
}

uint64_t CacheMaxAge.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    if (*(_QWORD *)v0)
      return 0x69736E6972746E69;
    else
      return 0x72657665726F66;
  }
  else
  {
    sub_190ABB4B4();
    sub_190BE4D9C();
    sub_190BE5114();
    swift_bridgeObjectRelease();
    sub_190BE5114();
    return 678977901;
  }
}

uint64_t getEnumTagSinglePayload for CacheMaxAge(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CacheMaxAge(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_190B526C8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_190B526E4(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for CacheMaxAge()
{
  return &type metadata for CacheMaxAge;
}

uint64_t withEagerCancellation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_190B52730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v5 = *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  v6 = type metadata accessor for EagerCancellationState(0, v5, a3, a4);
  v12 = *(_OWORD *)(v4 + 48);
  v7 = sub_190B48080(v4 + 16, v6);
  *(_QWORD *)(v4 + 72) = v7;
  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 80) = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  *(_OWORD *)(v8 + 32) = v12;
  v9 = swift_task_alloc();
  *(_QWORD *)(v4 + 88) = v9;
  *(_QWORD *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v10;
  *v10 = v4;
  v10[1] = sub_190B52820;
  return sub_190BE60C8();
}

uint64_t sub_190B52820()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_8_4();
  }
  return OUTLINED_FUNCTION_4_1();
}

uint64_t sub_190B52888()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B528B4()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_8_4();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for EagerCancellationState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EagerCancellationState);
}

uint64_t sub_190B528FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_190B5291C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE1FFD20 + dword_1EE1FFD20);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_190B529C0;
  return v7(*(_QWORD *)(v0 + 16), 0, 0, (uint64_t)sub_190B53468, v3);
}

uint64_t sub_190B529C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return OUTLINED_FUNCTION_4_1();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_1(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_190B52A24()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B52A50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_190B5106C;
  return sub_190B528FC(a1, v5, v7, v6, v4);
}

void sub_190B52AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[9];
  uint64_t v13;

  v12[2] = a5;
  v12[3] = a1;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a2;
  v7 = type metadata accessor for EagerCancellationState(0, a5, a3, a4);
  v8 = sub_190ABC730();
  sub_190BE5528();
  v9 = sub_190BE59A8();
  sub_190B48104((void (*)(uint64_t))sub_190B53474, (uint64_t)v12, a2, v7, v9);
  v10 = v13;
  if (v13)
  {
    sub_190BE54A4();
    sub_190B53394();
    v11 = swift_allocError();
    sub_190BE4D84();
    v13 = v11;
    sub_190B52F58((uint64_t)&v13, v10, a5, v8);
  }
}

uint64_t sub_190B52BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  sub_190B1795C();
  result = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    *(_QWORD *)(a1 + 8) = a2;
    v18 = sub_190BE5510();
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v18);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = a6;
    v19[5] = a3;
    v19[6] = a4;
    v19[7] = a5;
    swift_retain();
    swift_retain();
    v20 = sub_190B219C4((uint64_t)v17, (uint64_t)&unk_1EE1FFD30, (uint64_t)v19);
    result = swift_release();
    a2 = 0;
    *(_QWORD *)a1 = v20;
  }
  *a7 = a2;
  return result;
}

uint64_t sub_190B52CDC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v7[3] = a6;
  v7[4] = a7;
  v7[5] = *(_QWORD *)(a7 - 8);
  v7[6] = swift_task_alloc();
  v9 = swift_task_alloc();
  v7[7] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v7[8] = v10;
  *v10 = v7;
  v10[1] = sub_190B52D78;
  return v12(v9);
}

uint64_t sub_190B52D78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190B52DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_190B53300(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), (void (*)(uint64_t))sub_190B53554, a4);
  v6 = *(_QWORD *)(v4 + 56);
  if (v5)
  {
    v7 = v5;
    v9 = *(_QWORD *)(v4 + 40);
    v8 = *(_QWORD *)(v4 + 48);
    v10 = *(_QWORD *)(v4 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v8, *(_QWORD *)(v4 + 56), v10);
    OUTLINED_FUNCTION_125();
    sub_190B52F20(v8, v7, v10);
  }
  else
  {
    v10 = *(_QWORD *)(v4 + 32);
    v9 = *(_QWORD *)(v4 + 40);
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v10);
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_4();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_190B52E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5 = sub_190B53300(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), (void (*)(uint64_t))sub_190B53554, a4);
  if (v5)
  {
    v6 = v5;
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(v4 + 72);
    v7 = *(_QWORD *)(v4 + 32);
    v8 = OUTLINED_FUNCTION_125();
    sub_190B52F58(v4 + 16, v6, v7, v8);
  }
  else
  {

  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_4();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_190B52F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(*(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), a1);
  return swift_continuation_throwingResume();
}

uint64_t sub_190B52F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v6, a1, a4);
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_190B52FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_190BE5474();
  }
  return swift_task_switch();
}

uint64_t sub_190B53024()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_190B5308C;
  v2 = swift_continuation_init();
  OUTLINED_FUNCTION_125();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_190B5308C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_190B530E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = sub_190B53300(a1, a2, (void (*)(uint64_t))sub_190B533D4, a4);
  if (result)
  {
    v6 = result;
    sub_190BE54A4();
    sub_190B53394();
    v7 = swift_allocError();
    sub_190BE4D84();
    v9 = v7;
    v8 = sub_190ABC730();
    return sub_190B52F58((uint64_t)&v9, v6, a2, v8);
  }
  return result;
}

uint64_t sub_190B53178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_190B530E0(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 16), a3, a4);
}

uint64_t sub_190B53184()
{
  return swift_release();
}

uint64_t sub_190B5318C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_190B531C0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t sub_190B53214(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t sub_190B53258(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_190B532AC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_190B53300(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v9[2] = a2;
  v6 = type metadata accessor for EagerCancellationState(0, a2, (uint64_t)a3, a4);
  sub_190ABC730();
  sub_190BE5528();
  v7 = sub_190BE59A8();
  sub_190B48104(a3, (uint64_t)v9, a1, v6, v7);
  return v9[5];
}

unint64_t sub_190B53394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1FFD18;
  if (!qword_1EE1FFD18)
  {
    v1 = sub_190BE54A4();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DF05E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1FFD18);
  }
  return result;
}

_QWORD *sub_190B533D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *(_BYTE *)(a1 + 16) = 1;
  *a2 = *(_QWORD *)(a1 + 8);
  return sub_190B5340C((_QWORD *)a1);
}

_QWORD *sub_190B5340C(_QWORD *result)
{
  result[1] = 0;
  if (*result)
  {
    swift_retain();
    sub_190BE551C();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_190B53468(uint64_t a1)
{
  uint64_t *v1;

  sub_190B52AC8(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_190B53474@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_190B52BC0(a1, v2[3], v2[4], v2[5], v2[6], v2[2], a2);
}

uint64_t sub_190B53494()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B534C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (int *)v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_190B280BC;
  return sub_190B52CDC(a1, v4, v5, v7, v9, v8, v6);
}

uint64_t sub_190B53554@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  *(_QWORD *)(result + 8) = 0;
  return result;
}

uint64_t PromiseDebouncer.__allocating_init(interval:queue:)(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PromiseDebouncer.init(interval:queue:)(a1, a2);
  return v4;
}

Swift::Void __swiftcall PromiseDebouncer.cancel()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  OUTLINED_FUNCTION_1();
  UnfairLock.lock()();
  OUTLINED_FUNCTION_2();
  v2 = qword_1ED02F0B8;
  if (*(uint64_t *)((char *)v0 + qword_1ED02F0B8))
  {
    OUTLINED_FUNCTION_1();
    sub_190BE4CE8();
    OUTLINED_FUNCTION_2();
  }
  *(uint64_t *)((char *)v0 + v2) = 0;
  swift_release();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0_2();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  type metadata accessor for OnlyOnceDeferredPromise(0, *(_QWORD *)(v1 + 80), v4, v5);
  sub_190AC2574((unint64_t *)&qword_1ED034E38, v3, MEMORY[0x1E0CB09C8]);
  sub_190BE4E5C();
  v6 = swift_endAccess();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_190BE4E50();
  MEMORY[0x194016EF8](MEMORY[0x1E0DE9F98], v7);
  sub_190BE527C();
  swift_bridgeObjectRelease();
  sub_190ABDDE8((uint64_t)v0);
}

uint64_t sub_190B5373C(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36[4];
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;

  v9 = sub_190BE4820();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    v39 = a4;
    v15 = qword_1ED02F0B0;
    swift_retain();
    UnfairLock.lock()();
    swift_release();
    sub_190BE4814();
    v16 = v14 + qword_1ED02F0A8;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v16, (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v14 + v15) + 16));
    MEMORY[0x1E0C80A78](v17);
    v36[-4] = a5;
    v36[-3] = a2;
    v36[-2] = a3;
    firstly<A>(closure:)(sub_190B53FE4);
    v38 = qword_1ED02F0C0;
    v36[0] = *(id *)(v14 + qword_1ED02F0C0);
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v18 = v39;
    v37((char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v9);
    v19 = *(unsigned __int8 *)(v10 + 80);
    v20 = (v19 + 24) & ~v19;
    v42 = v20;
    v36[2] = (id)(v20 + v11);
    v36[3] = (id)(v19 | 7);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a5;
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v40 = a5;
    v41 = v22;
    v22(v21 + v20, v12, v9);
    v36[1] = (id)type metadata accessor for PromiseDebouncer(0, (uint64_t)a5, v23, v24);
    v25 = v36[0];
    Promise.then<A, B>(on:disposeOn:closure:)();
    swift_release();

    swift_release();
    v26 = v38;
    v27 = *(void **)(v14 + v38);
    v28 = v18;
    v29 = v37;
    v37(v12, v28, v9);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v40;
    v41(v30 + v42, v12, v9);
    v31 = v27;
    Promise.error<A>(on:disposeOn:closure:)();
    v36[0] = v32;
    swift_release();

    swift_release();
    v33 = *(void **)(v14 + v26);
    v29(v12, v39, v9);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v40;
    v41(v34 + v42, v12, v9);
    v35 = v33;
    Promise.always<A>(on:disposeOn:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return swift_release();
  }
  return result;
}

void sub_190B53AB8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *a2;
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  v6 = (uint64_t *)((char *)a2 + qword_1ED02F0D0);
  swift_beginAccess();
  v7 = *v6;
  v8 = sub_190BE4820();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v12 = type metadata accessor for OnlyOnceDeferredPromise(0, *(_QWORD *)(v5 + 80), v10, v11);
  v13 = sub_190AC2574((unint64_t *)&qword_1ED034E38, v9, MEMORY[0x1E0CB09C8]);
  MEMORY[0x194015140](&v14, a3, v7, v8, v12, v13);
  if (v14)
  {
    swift_endAccess();
    OnlyOnceDeferredPromise.resolve(_:)();
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  sub_190ABDDE8((uint64_t)a2);
}

void sub_190B53BD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *a2;
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  v6 = (uint64_t *)((char *)a2 + qword_1ED02F0D0);
  swift_beginAccess();
  v7 = *v6;
  v8 = sub_190BE4820();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v12 = type metadata accessor for OnlyOnceDeferredPromise(0, *(_QWORD *)(v5 + 80), v10, v11);
  v13 = sub_190AC2574((unint64_t *)&qword_1ED034E38, v9, MEMORY[0x1E0CB09C8]);
  MEMORY[0x194015140](&v14, a3, v7, v8, v12, v13);
  if (v14)
  {
    swift_endAccess();
    OnlyOnceDeferredPromise.reject(_:)();
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  sub_190ABDDE8((uint64_t)a2);
}

void sub_190B53CF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;

  v4 = *a1;
  v5 = sub_190BE4820();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  UnfairLock.lock()();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v5);
  v13 = 0;
  swift_beginAccess();
  type metadata accessor for OnlyOnceDeferredPromise(255, *(_QWORD *)(v4 + 80), v10, v11);
  sub_190AC2574((unint64_t *)&qword_1ED034E38, v6, MEMORY[0x1E0CB09C8]);
  sub_190BE4E98();
  sub_190BE4EB0();
  swift_endAccess();
  sub_190ABDDE8((uint64_t)a1);
}

uint64_t PromiseDebouncer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED02F0A8;
  v2 = OUTLINED_FUNCTION_0_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t PromiseDebouncer.__deallocating_deinit()
{
  PromiseDebouncer.deinit();
  return swift_deallocClassInstance();
}

void sub_190B53ECC()
{
  OnlyOnceDeferredPromise.cancel()();
}

uint64_t method lookup function for PromiseDebouncer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromiseDebouncer.__allocating_init(interval:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_190B53F08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190B53F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_0_2();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190B53FA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0_2() - 8) + 80);
  return sub_190B5373C(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_190B53FE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

void sub_190B54010(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  sub_190BE4820();
  OUTLINED_FUNCTION_2_32();
  sub_190B53AB8(a1, a2, v4);
}

void sub_190B54064(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_2_32();
  sub_190B53BD8(a1, a2, v4);
}

void sub_190B540A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0_2() - 8) + 80);
  sub_190B53CF0(a1, v1 + ((v3 + 24) & ~v3));
}

uint64_t BackgroundFetchJournalEntry.reason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___TSBackgroundFetchJournalEntry_reason);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t BackgroundFetchJournalEntry.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___TSBackgroundFetchJournalEntry_date;
  v4 = OUTLINED_FUNCTION_0_1();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id BackgroundFetchJournalEntry.__allocating_init(reason:date:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_37());
  return BackgroundFetchJournalEntry.init(reason:date:)();
}

id BackgroundFetchJournalEntry.init(reason:date:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  OUTLINED_FUNCTION_0_37();
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v1[OBJC_IVAR___TSBackgroundFetchJournalEntry_reason];
  *(_QWORD *)v5 = v3;
  *((_QWORD *)v5 + 1) = v2;
  v6 = &v1[OBJC_IVAR___TSBackgroundFetchJournalEntry_date];
  v7 = OUTLINED_FUNCTION_0_1();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v0, v7);
  v11.receiver = v1;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
  return v9;
}

id BackgroundFetchJournalEntry.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BackgroundFetchJournalEntry.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BackgroundFetchJournalEntry.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t EmptyBackgroundFetchJournal.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t EmptyBackgroundFetchJournal.entries.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t EmptyBackgroundFetchJournal.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EmptyBackgroundFetchJournal.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_190B54500()
{
  return type metadata accessor for BackgroundFetchJournalEntry();
}

uint64_t type metadata accessor for BackgroundFetchJournalEntry()
{
  uint64_t result;

  result = qword_1EE1FFD40;
  if (!qword_1EE1FFD40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190B54540()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE47E4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BackgroundFetchJournalEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BackgroundFetchJournalEntry.__allocating_init(reason:date:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for EmptyBackgroundFetchJournal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmptyBackgroundFetchJournal.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL static DeviceStorageDataClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceStorageDataClass.hash(into:)()
{
  return sub_190BE6308();
}

void _s13TeaFoundation22DeviceStorageDataClassO9hashValueSivg_0()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_1_1();
  sub_190BE6314();
  OUTLINED_FUNCTION_1_3();
}

void sub_190B54668()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_1_1();
  sub_190BE6314();
  OUTLINED_FUNCTION_1_3();
}

uint64_t DeviceStorageManagerType.purgeUrgency.getter@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  (*(void (**)(void))(a1 + 8))();
  sub_190B546CC(a2);
  return swift_release();
}

void sub_190B546CC(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 16);
  UnfairLock.lock()();
  swift_beginAccess();
  *a1 = *(_BYTE *)(v2 + 32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
}

uint64_t sub_190B54728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  UnfairLock.lock()();
  OUTLINED_FUNCTION_6_28();
  v3 = *(_QWORD *)(v1 + 32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return v3;
}

uint64_t DeviceStorageManager.observablePurgeUrgency.getter()
{
  OUTLINED_FUNCTION_6_28();
  return swift_retain();
}

uint64_t DeviceStorageManager.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_24();
  DeviceStorageManager.init()();
  return v0;
}

uint64_t sub_190B547C4()
{
  sub_190BE4DB4();
  return 0;
}

uint64_t sub_190B54A04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t (*v5)(uint64_t, id);
  id v6;
  uint64_t v7;

  v5 = *(uint64_t (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  v6 = a3;
  v7 = v5(a2, v6);
  swift_release();

  return v7;
}

uint64_t sub_190B54A64()
{
  sub_190BE4DB4();
  return 0;
}

uint64_t sub_190B54D04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = (uint64_t *)(a1 + 24);
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 24);
  v23 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x194015F20](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      swift_retain();
    }
    v10 = MEMORY[0x1940170E4](v9 + 32);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_190BE5D2C();
      sub_190BE5D5C();
      sub_190BE5D68();
      sub_190BE5D38();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v23;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  v12 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v13)
      goto LABEL_17;
LABEL_31:
    v15 = MEMORY[0x1E0DEE9D8];
LABEL_32:
    result = swift_bridgeObjectRelease_n();
    *a2 = v15;
    return result;
  }
  swift_bridgeObjectRetain_n();
  result = sub_190BE5EAC();
  v13 = result;
  if (!result)
    goto LABEL_31;
LABEL_17:
  if (v13 >= 1)
  {
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v16 = MEMORY[0x194015F20](v14, v12);
      }
      else
      {
        v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
        swift_retain();
      }
      v17 = MEMORY[0x1940170E4](v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      swift_release();
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190B12688();
          v15 = v21;
        }
        v19 = *(_QWORD *)(v15 + 16);
        if (v19 >= *(_QWORD *)(v15 + 24) >> 1)
        {
          sub_190B12688();
          v15 = v22;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        v20 = v15 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v17;
        *(_QWORD *)(v20 + 40) = v18;
      }
      ++v14;
    }
    while (v13 != v14);
    goto LABEL_32;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t DeviceStorageManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DeviceStorageManager.__deallocating_deinit()
{
  DeviceStorageManager.deinit();
  return swift_deallocClassInstance();
}

Swift::Int __swiftcall DeviceStorageManager.availableSpace(for:)(TeaFoundation::DeviceStorageDataClass a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  NSArray *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t inited;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v31)(uint64_t, _QWORD);
  uint64_t (*v32)(uint64_t, _QWORD);
  _QWORD v33[2];
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (unsigned __int8 *)a1;
  v2 = sub_190BE4520();
  v37 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v36 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v35 = (char *)v33 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v34 = (char *)v33 - v8;
  OUTLINED_FUNCTION_5_22(v7, (unint64_t *)&qword_1ED034BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v33 - v10;
  v12 = sub_190BE4568();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190BE4628();
  v38 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v17 = *v1;
  v18 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  v19 = sub_190BE530C();

  if (*(_QWORD *)(v19 + 16))
  {
    v33[1] = v2;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CAFD60], v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v16);
    v20 = sub_190BE4604();
    if (v17)
    {
      if (v17 != 1)
      {
        OUTLINED_FUNCTION_5_22(v20, &qword_1EE1FE358, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        v27 = inited;
        *(_OWORD *)(inited + 16) = xmmword_190BE7CD0;
        OUTLINED_FUNCTION_13_17(inited, (void *)*MEMORY[0x1E0C99BB8]);
        OUTLINED_FUNCTION_9_21();
        v28 = (uint64_t)v36;
        OUTLINED_FUNCTION_2_33();
        if (!v15)
        {
          swift_bridgeObjectRelease();
          v24 = v28;
          sub_190BE44FC();
          OUTLINED_FUNCTION_14_13();
          OUTLINED_FUNCTION_12_13(v28, v32);
          OUTLINED_FUNCTION_0_38(v38);
          if ((v27 & 1) == 0)
            return v24;
          return 0x7FFFFFFFFFFFFFFFLL;
        }
        swift_bridgeObjectRelease();

        goto LABEL_11;
      }
      OUTLINED_FUNCTION_5_22(v20, &qword_1EE1FE358, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v21 = swift_initStackObject();
      v22 = v21;
      *(_OWORD *)(v21 + 16) = xmmword_190BE7CD0;
      OUTLINED_FUNCTION_13_17(v21, (void *)*MEMORY[0x1E0C99BA8]);
      OUTLINED_FUNCTION_9_21();
      v23 = (uint64_t)v35;
      OUTLINED_FUNCTION_2_33();
      if (!v15)
      {
        OUTLINED_FUNCTION_42();
        v24 = v23;
        sub_190BE4508();
        goto LABEL_16;
      }
    }
    else
    {
      OUTLINED_FUNCTION_5_22(v20, &qword_1EE1FE358, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v25 = swift_initStackObject();
      v22 = v25;
      *(_OWORD *)(v25 + 16) = xmmword_190BE7CD0;
      OUTLINED_FUNCTION_13_17(v25, (void *)*MEMORY[0x1E0C99BB0]);
      OUTLINED_FUNCTION_9_21();
      v23 = (uint64_t)v34;
      OUTLINED_FUNCTION_2_33();
      if (!v15)
      {
        OUTLINED_FUNCTION_42();
        v24 = v23;
        sub_190BE4514();
LABEL_16:
        OUTLINED_FUNCTION_14_13();
        OUTLINED_FUNCTION_12_13(v23, v31);
        v29 = v38;
        if ((v22 & 1) == 0)
        {
          OUTLINED_FUNCTION_0_38(v38);
          return v24;
        }
        goto LABEL_12;
      }
    }

    OUTLINED_FUNCTION_42();
LABEL_11:
    v29 = v38;
LABEL_12:
    OUTLINED_FUNCTION_0_38(v29);
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRelease();
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t DeviceStorageManager.add(purgeable:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v3 = v2;
  v6 = type metadata accessor for DisposablePurgeable();
  OUTLINED_FUNCTION_24();
  v7 = swift_unknownObjectRetain();
  v8 = sub_190AA5360(v7, a1);
  v9 = *(_QWORD *)(v3 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  UnfairLock.lock()();
  sub_190B55470(v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  swift_release();
  result = swift_release();
  a2[3] = v6;
  a2[4] = (uint64_t)&off_1E2CE0B18;
  *a2 = v8;
  return result;
}

uint64_t sub_190B55470(uint64_t a1)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = swift_retain();
  MEMORY[0x194015590](v2);
  sub_190AAE55C(*(_QWORD *)((*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_190BE53A8();
  sub_190BE5330();
  return swift_endAccess();
}

uint64_t sub_190B554F0()
{
  return DeviceStorageManager.observablePurgeUrgency.getter();
}

Swift::Int sub_190B55510(TeaFoundation::DeviceStorageDataClass a1)
{
  return DeviceStorageManager.availableSpace(for:)(a1);
}

uint64_t sub_190B55524@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return DeviceStorageManager.add(purgeable:)(a1, a2);
}

uint64_t sub_190B55544()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t type metadata accessor for DisposablePurgeable()
{
  return objc_opt_self();
}

unint64_t sub_190B5558C()
{
  unint64_t result;

  result = qword_1EE1FFD50;
  if (!qword_1EE1FFD50)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for DeviceStorageDataClass, &type metadata for DeviceStorageDataClass);
    atomic_store(result, (unint64_t *)&qword_1EE1FFD50);
  }
  return result;
}

unint64_t sub_190B555CC()
{
  unint64_t result;

  result = qword_1EE1FFD58;
  if (!qword_1EE1FFD58)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for DeviceStoragePurgeUrgency, &type metadata for DeviceStoragePurgeUrgency);
    atomic_store(result, (unint64_t *)&qword_1EE1FFD58);
  }
  return result;
}

uint64_t dispatch thunk of DeviceStoragePurgeable.purge()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for DeviceStorageDataClass()
{
  return &type metadata for DeviceStorageDataClass;
}

uint64_t _s13TeaFoundation22DeviceStorageDataClassOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B55678 + 4 * byte_190BEB225[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B556AC + 4 * byte_190BEB220[v4]))();
}

uint64_t sub_190B556AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B556B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B556BCLL);
  return result;
}

uint64_t sub_190B556C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B556D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B556D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B556DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceStoragePurgeUrgency()
{
  return &type metadata for DeviceStoragePurgeUrgency;
}

uint64_t dispatch thunk of DeviceStorageManagerType.availableSpace(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DeviceStorageManagerType.add(purgeable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t method lookup function for DeviceStorageManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceStorageManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of URLHandlerType.patterns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void URLHandlerManager.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  URLHandlerManager.init()(v0, v1, v2, v3);
  OUTLINED_FUNCTION_0();
}

void URLHandlerManager.add<A>(handler:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_11_16();
  v1 = *v0;
  OUTLINED_FUNCTION_10_22();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_40(v3, v4, v14);
  v5 = OUTLINED_FUNCTION_2_34();
  v9 = sub_190B8D844(v5, v6, v7, v8);
  OUTLINED_FUNCTION_1_40(v9, v10, v11);
  type metadata accessor for AnyURLHandler(255, v1, v12, v13);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_8_25();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_9();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_11_16();
  v1 = *v0;
  OUTLINED_FUNCTION_10_22();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_40(v3, v4, v14);
  v5 = OUTLINED_FUNCTION_2_34();
  v9 = sub_190B8D850(v5, v6, v7, v8);
  OUTLINED_FUNCTION_1_40(v9, v10, v11);
  type metadata accessor for AnyAsyncURLHandler(255, v1, v12, v13);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_8_25();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_9();
}

void URLHandlerManager.handle(url:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[24];

  v3 = v2;
  v24[10] = a2;
  v24[15] = 0;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v24[12] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v24[1] = v6;
  v24[11] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URLHandlerContext(0, v5, v7, v8);
  v24[8] = *(_QWORD *)(v9 - 8);
  v24[9] = v9;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_1_0();
  v24[3] = v10;
  MEMORY[0x1E0C80A78](v11);
  v24[6] = (char *)v24 - v12;
  v13 = type metadata accessor for URLHandlerMatch();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_1_0();
  v24[4] = v14;
  v16 = MEMORY[0x1E0C80A78](v15);
  v24[7] = (char *)v24 - v17;
  MEMORY[0x1E0C80A78](v16);
  v18 = sub_190BE4628();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a1);
  type metadata accessor for URLHandlerMatcher();
  swift_allocObject();
  v24[14] = URLHandlerMatcher.init(url:)((uint64_t)v20);
  OUTLINED_FUNCTION_20_0();
  type metadata accessor for AnyURLHandlerProcessor(0, v5, v22, v23);
  OUTLINED_FUNCTION_36_0();
  v24[20] = sub_190BE5318();
  OUTLINED_FUNCTION_9_22();
}

void sub_190B55A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v7 - 200) = v4;
  *(_QWORD *)(v7 - 288) = v3;
  if (v2 == a1)
  {
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_20_0();
    type metadata accessor for AnyURLHandler(0, v4, v16, v17);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    *(_QWORD *)(v7 - 168) = sub_190BE5318();
    OUTLINED_FUNCTION_9_22();
  }
  *(_QWORD *)(v7 - 264) = v5;
  v8 = sub_190BE539C();
  sub_190BE5348();
  if ((v8 & 1) != 0)
  {
    v9 = (uint64_t *)(v6 + 32 + 24 * v2);
    v11 = *v9;
    v10 = (uint64_t (*)(void))v9[1];
    OUTLINED_FUNCTION_36_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    MEMORY[0x1940156B0](v7 - 144, v6, v5);
    OUTLINED_FUNCTION_35();
    v12 = *(void **)(v7 - 184);
    URLHandlerMatcher.match(for:)(v11, v1);
    if (v12)
    {
      OUTLINED_FUNCTION_54();
      swift_bridgeObjectRelease();

      *(_QWORD *)(v7 - 184) = 0;
    }
    else
    {
      *(_QWORD *)(v7 - 184) = 0;
      OUTLINED_FUNCTION_19_13(v1);
      v13 = *(_QWORD *)(v7 - 200);
      v14 = *(_QWORD *)(v7 - 216);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7 - 208) + 16))(v14, *(_QWORD *)(v7 - 224), v13);
      v15 = *(_QWORD *)(v7 - 256);
      URLHandlerContext.init(match:clientContext:)(v1, v14, v13, v15);
      sub_190B8D8E8(v15, v11, v10);
      OUTLINED_FUNCTION_54();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 240) + 8))(v15, *(_QWORD *)(v7 - 232));
      sub_190B1E0A4(v1, (uint64_t (*)(_QWORD))type metadata accessor for URLHandlerMatch);
    }
    OUTLINED_FUNCTION_9_22();
  }
  sub_190BE5C78();
  __break(1u);
  JUMPOUT(0x190B55EFCLL);
}

uint64_t sub_190B55F28(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a3;
  v28 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for URLHandlerContext(0, v9, v8, v9);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v11 = (char *)v26 - v10;
  sub_190B56280();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URLHandlerMatch();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v26 - v19;
  v22 = *a1;
  v21 = (void (*)(void))a1[1];
  v26[1] = a1[2];
  v27 = v21;
  URLHandlerMatcher.match(for:)(v22, (uint64_t)v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v15);
  sub_190B562D4((uint64_t)v14, (uint64_t)v20);
  sub_190B56228((uint64_t)v20, (uint64_t)v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v7, v30, a4);
  URLHandlerContext.init(match:clientContext:)((uint64_t)v18, (uint64_t)v7, a4, (uint64_t)v11);
  sub_190B8D92C((uint64_t)v11, v22, v27);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
  sub_190B1E0A4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for URLHandlerMatch);
  return v24;
}

uint64_t URLHandlerManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t URLHandlerManager.__deallocating_deinit()
{
  URLHandlerManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190B561A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190B5620C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_190B55F28(a1, *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3), v2);
}

uint64_t sub_190B56228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLHandlerMatch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for URLHandlerManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of URLHandlerManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_190B56280()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1FFD60)
  {
    type metadata accessor for URLHandlerMatch();
    v0 = sub_190BE59A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1FFD60);
  }
}

uint64_t sub_190B562D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLHandlerMatch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_190B5631C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_190BE5000();
  v2 = v1;
  if (v0 == sub_190BE5000() && v2 == v3)
    OUTLINED_FUNCTION_16_17();
  else
    OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_4();
}

void sub_190B56380(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_190B563C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_190B56438 + 4 * byte_190BEB4E6[a2]))(0x7961727261);
}

void sub_190B56438(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x7961727261 && v1 == 0xE500000000000000)
    OUTLINED_FUNCTION_16_17();
  else
    OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_4();
}

void sub_190B564B8(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x8000000190BF2370;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000012;
    else
      v4 = 0x75614C7265746661;
    if (v3 == 1)
      v5 = 0x8000000190BF2390;
    else
      v5 = 0xEE00676E6968636ELL;
  }
  else
  {
    v4 = 0xD000000000000013;
    v5 = 0x8000000190BF2370;
  }
  if (a2)
  {
    if (a2 == 1)
      v6 = 0xD000000000000012;
    else
      v6 = 0x75614C7265746661;
    if (a2 == 1)
      v2 = 0x8000000190BF2390;
    else
      v2 = 0xEE00676E6968636ELL;
  }
  else
  {
    v6 = 0xD000000000000013;
  }
  if (v4 != v6 || v5 != v2)
    OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_4();
}

BOOL sub_190B565B0(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_190B565BC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656E6961746E6F63;
  else
    v3 = 1701869940;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE900000000000072;
  if ((a2 & 1) != 0)
    v5 = 0x656E6961746E6F63;
  else
    v5 = 1701869940;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000072;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_16_17();
  else
    OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_4();
}

void sub_190B56638(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x697463656C6C6F63;
  else
    v3 = 0x7463656A626FLL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEA00000000006E6FLL;
  if ((a2 & 1) != 0)
    v5 = 0x697463656C6C6F63;
  else
    v5 = 0x7463656A626FLL;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006E6FLL;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_16_17();
  else
    OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B566B8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 1635017060;
  else
    v2 = 1701869940;
  if ((a2 & 1) != 0)
    v3 = 1635017060;
  else
    v3 = 1701869940;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = OUTLINED_FUNCTION_14();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_190B56720(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

uint64_t sub_190B56728(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

BOOL sub_190B56734(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_190B56740(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

TeaFoundation::EventTriggerBehavior __swiftcall EventTriggerBehavior.init(rawValue:)(TeaFoundation::EventTriggerBehavior rawValue)
{
  TeaFoundation::EventTriggerBehavior *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t EventTriggerBehavior.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaFoundation::EventTriggerBehavior sub_190B5675C(Swift::Int *a1)
{
  return EventTriggerBehavior.init(rawValue:)(*a1);
}

void sub_190B56764(_QWORD *a1@<X8>)
{
  sub_190B56720(a1);
}

uint64_t sub_190B56770(uint64_t *a1)
{
  return j__OUTLINED_FUNCTION_11_17(*a1);
}

BOOL sub_190B56778(uint64_t *a1)
{
  uint64_t *v1;

  return sub_190B56734(*a1, *v1);
}

BOOL sub_190B56784(uint64_t *a1)
{
  uint64_t *v1;

  return sub_190B56740(*a1, *v1);
}

TeaFoundation::EventTriggerBehavior sub_190B56790@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaFoundation::EventTriggerBehavior result;

  result.rawValue = EventTriggerBehavior.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_190B567B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EventTriggerBehavior.rawValue.getter();
  *a1 = result;
  return result;
}

void EventManager.__allocating_init()()
{
  swift_allocObject();
  EventManager.init()();
}

uint64_t sub_190B56800()
{
  uint64_t v0;

  return v0;
}

uint64_t EventManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventManager.__deallocating_deinit()
{
  EventManager.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_190B56858()
{
  unint64_t result;

  result = qword_1EE1FFD68;
  if (!qword_1EE1FFD68)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for EventTriggerBehavior, &type metadata for EventTriggerBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE1FFD68);
  }
  return result;
}

unint64_t sub_190B56898()
{
  unint64_t result;

  result = qword_1EE1FFD70;
  if (!qword_1EE1FFD70)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for EventTriggerBehavior, &type metadata for EventTriggerBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE1FFD70);
  }
  return result;
}

uint64_t method lookup function for EventManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EventManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_190B568FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if ((sub_190BE5174() & 1) != 0)
    return __swift_storeEnumTagSinglePayload(a5, 1, 1, a3);
  else
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, a2, a3, a3, a4);
}

uint64_t NSProcessInfo.environmentVariable<A>(forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_190AA4B94();
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v10 = objc_msgSend(v9, sel_environment);

  v11 = sub_190BE4DC0();
  v12 = sub_190B20944(v6, v8, v11);
  v14 = v13;
  OUTLINED_FUNCTION_81();
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_190B568FC(v12, v14, a1, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_0_41();
    return __swift_storeEnumTagSinglePayload(v16, v17, v18, v19);
  }
}

uint64_t BasePoolObject.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BasePoolObject.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for BasePoolObject()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_190B56AD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 104) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
}

void sub_190B56AEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v3 = v0[2];
  v2 = v0[3];
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  v4[2] = *(_QWORD *)(v1 + 104);
  v4[3] = v3;
  v4[4] = v2;
  sub_190AF7BD8(0, &qword_1EE1FFD78, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for WeakPoolObject);
  v5 = OUTLINED_FUNCTION_24();
  v6 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v6 + 16) = sub_190B56C44;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v5 + 16) = sub_190B56C74;
  *(_QWORD *)(v5 + 24) = v6;
  swift_retain();
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B56B84@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = sub_190BE59A8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  a1(v6);
  v9 = sub_190BE599C();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v9;
  return result;
}

uint64_t sub_190B56C20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B56C44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_190B56B84(*(void (**)(uint64_t))(v1 + 24), a1);
}

uint64_t sub_190B56C50()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_190B56C74@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  *a1 = v4;
  return result;
}

uint64_t sub_190B56CAC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190B56CD4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  char v6;
  char *v7;
  uint64_t *v8;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v7 = &v6;
      swift_getTupleTypeLayout2();
      v8 = &v5;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_190B56DA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = (v10 & ~(unint64_t)v8) + *(_QWORD *)(v7 + 64);
  v12 = *(_DWORD *)(v6 + 80) | v8;
  v13 = v12;
  v14 = v12 & 0x100000;
  if (v13 > 7 || v14 != 0 || v11 + 1 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  else
  {
    v18 = ~v9;
    v19 = *((unsigned __int8 *)a2 + v11);
    if (v19 >= 2)
    {
      if (v11 <= 3)
        v20 = v11;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v18, ((unint64_t)a2 + v10) & v18, v5);
    *((_BYTE *)v4 + v11) = v19 == 1;
  }
  return v4;
}

uint64_t sub_190B56F04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v5 = *(_QWORD *)(v3 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  (*(void (**)(uint64_t, _QWORD))(v4 + 8))(a1, *(_QWORD *)(a2 + 24));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))((v7 + a1) & ~v6, v3);
}

uint64_t sub_190B56F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  BOOL v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ~v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = (v10 & ~v8) + *(_QWORD *)(v7 + 64);
  v12 = *(unsigned __int8 *)(a2 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X13 }
  }
  v14 = v12 == 1;
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))((v10 + a1) & v9, (v10 + a2) & v9, v5);
  *(_BYTE *)(a1 + v11) = v14;
  return a1;
}

uint64_t sub_190B57078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v5 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v18 = ~v10;
    v11 = v8 + v10;
    v12 = ((v8 + v10) & ~v10) + *(_QWORD *)(v9 + 64);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v13 = (v11 + a1) & ~v10;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v5);
    v14 = *(unsigned __int8 *)(a2 + v12);
    if (v14 >= 2)
    {
      if (v12 <= 3)
        v15 = v12;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, (v11 + a2) & v18, v5);
    *(_BYTE *)(a1 + v12) = v16;
  }
  return a1;
}

uint64_t sub_190B571CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  BOOL v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ~v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = (v10 & ~v8) + *(_QWORD *)(v7 + 64);
  v12 = *(unsigned __int8 *)(a2 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X13 }
  }
  v14 = v12 == 1;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a1, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))((v10 + a1) & v9, (v10 + a2) & v9, v5);
  *(_BYTE *)(a1 + v11) = v14;
  return a1;
}

uint64_t sub_190B572E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v5 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v18 = ~v10;
    v11 = v8 + v10;
    v12 = ((v8 + v10) & ~v10) + *(_QWORD *)(v9 + 64);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v13 = (v11 + a1) & ~v10;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v5);
    v14 = *(unsigned __int8 *)(a2 + v12);
    if (v14 >= 2)
    {
      if (v12 <= 3)
        v15 = v12;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v13, (v11 + a2) & v18, v5);
    *(_BYTE *)(a1 + v12) = v16;
  }
  return a1;
}

uint64_t sub_190B57434(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  if (!a2)
    return 0;
  v3 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 < 0xFF)
    goto LABEL_19;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_19:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_19;
LABEL_12:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B57504 + 4 * byte_190BEB7D9[(v4 - 1)]))();
}

void sub_190B57550(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B57700(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64)
       + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B57754 + 4 * byte_190BEB7E7[v3]))();
}

void sub_190B5779C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) + v5) & ~v5;
  if (a2 > 1)
  {
    v8 = v7 + v6;
    v9 = a2 - 2;
    if ((v7 + v6) < 4)
    {
      v10 = v9 >> (8 * v8);
      v11 = v9 & ~(-1 << (8 * v8));
      a1[v8] = v10 + 2;
      bzero(a1, v8);
      if ((_DWORD)v8 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if ((_DWORD)v8 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
    else
    {
      a1[v8] = 2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v9;
    }
  }
  else
  {
    a1[v7 + v6] = a2;
  }
}

void type metadata accessor for StateMachineError()
{
  JUMPOUT(0x194016E74);
}

uint64_t dispatch thunk of RequestSigning.signature(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_190B57904;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_190B57904(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t ReferenceDecoder.__allocating_init()()
{
  swift_allocObject();
  return _TeaJSONDecoder.init()();
}

uint64_t method lookup function for ReferenceDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_190B579A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_190ABE2EC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_190B57A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190ABE2EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_190B57A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190ABE2EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190B57AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190ABE2EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_190B57B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_190ABE2EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_190B57BB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B57BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  OUTLINED_FUNCTION_1_43();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190B57C38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_190B57C44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  OUTLINED_FUNCTION_1_43();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
    OUTLINED_FUNCTION_4();
  }
}

void sub_190B57CAC(uint64_t a1)
{
  sub_190AAB868(a1, qword_1ED0395E0);
}

void sub_190B57CD0(uint64_t a1)
{
  sub_190AAB868(a1, qword_1ED0395F8);
}

uint64_t ReferenceType.hash(into:)()
{
  OUTLINED_FUNCTION_2_2();
  sub_190BE50B4();
  return swift_bridgeObjectRelease();
}

void ReferenceType.hashValue.getter()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_0_8();
  swift_bridgeObjectRelease();
  sub_190BE6314();
  OUTLINED_FUNCTION_1_3();
}

uint64_t ReferenceType.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  return v1;
}

uint64_t SignpostEntry.object.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_190BE59A8();
  v0 = OUTLINED_FUNCTION_4_6();
  return OUTLINED_FUNCTION_7_1(v0, v1, v2, v3);
}

uint64_t SignpostEntry.signposts.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t SignpostEntry.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_4_6();
  return OUTLINED_FUNCTION_7_1(v0, v1, v2, v3);
}

uint64_t SignpostEntry.endDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_4_6();
  return OUTLINED_FUNCTION_7_1(v0, v1, v2, v3);
}

uint64_t SignpostEntry.comment.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v2;
}

uint64_t SignpostEntry.timeInterval.getter()
{
  return sub_190BE4754();
}

void sub_190B57E90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD *v23;

  v16 = sub_190BE59A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a8, a1, v16);
  v19 = (int *)type metadata accessor for SignpostEntry(0, a7, v17, v18);
  *(_QWORD *)(a8 + v19[7]) = a2;
  v20 = a8 + v19[8];
  v21 = OUTLINED_FUNCTION_0_1();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a3, v21);
  v22(a8 + v19[9], a4, v21);
  v23 = (_QWORD *)(a8 + v19[10]);
  *v23 = a5;
  v23[1] = a6;
  OUTLINED_FUNCTION_0_0();
}

void SignpostEntry.shortDescription.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[4];
  uint64_t v40;
  __int128 v41;

  v38 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_190BE59A8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v35 - v8;
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B1820C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BEACC0;
  strcpy((char *)(inited + 32), "timeInterval");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  SignpostEntry.timeInterval.getter();
  v12 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = 0x746E656D6D6F63;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  v14 = (_QWORD *)(v2 + *(int *)(a1 + 40));
  v15 = v14[1];
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 96) = *v14;
  *(_QWORD *)(inited + 104) = v15;
  *(_QWORD *)(inited + 120) = v16;
  *(_QWORD *)(inited + 128) = 0x74736F706E676973;
  *(_QWORD *)(inited + 136) = 0xE900000000000073;
  v17 = *(_QWORD *)(v2 + *(int *)(a1 + 28));
  type metadata accessor for Signpost(255, v4, v18, v19);
  *(_QWORD *)(inited + 168) = sub_190BE5438();
  *(_QWORD *)(inited + 144) = v17;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v20 = sub_190BE4DFC();
  ShortDescription.init(name:_:)(0x7972746E45, 0xE500000000000000, v20, &v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
  {
    v21 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    v25 = v37;
    v26 = v36;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v9, v4);
    v39[3] = v4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v39);
    v28 = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v25 + 16))(boxed_opaque_existential_0, v26, v4);
    OUTLINED_FUNCTION_3_30(v28, v29, v30, v31);
    ShortDescription.subscript.setter((uint64_t)v39, 0x7463656A626FLL, 0xE600000000000000);
    v21 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v4);
  }
  v32 = v40;
  v33 = OUTLINED_FUNCTION_3_30(v21, v22, v23, v24);
  v34 = v38;
  *(_QWORD *)(v38 + 24) = v33;
  *(_QWORD *)(v34 + 32) = &protocol witness table for ShortDescription<A>;
  *(_QWORD *)v34 = v32;
  *(_OWORD *)(v34 + 8) = v41;
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190B58208(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x194016EF8](&protocol conformance descriptor for SignpostEntry<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190B58234(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x194016EF8](&protocol conformance descriptor for SignpostEntry<A>, a1);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_190B58268()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_190BE59A8();
  if (v1 <= 0x3F)
  {
    result = sub_190BE47E4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_190B58308(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v33;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  v8 = sub_190BE47E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = v12 + v10;
  v14 = v12 + 7;
  v15 = ((v12 + 7 + ((v13 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v16 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  v17 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v16 > 7 || v17 != 0 || v15 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    v33 = v8;
    v21 = ~v11;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    }
    v23 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v24;
    v25 = ((unint64_t)v23 + v11 + 8) & v21;
    v26 = ((unint64_t)v24 + v11 + 8) & v21;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v27(v25, v26, v33);
    v28 = (v13 + v25) & v21;
    v29 = (v13 + v26) & v21;
    v27(v28, v29, v33);
    v30 = (_QWORD *)((v14 + v28) & 0xFFFFFFFFFFFFFFF8);
    v31 = (_QWORD *)((v14 + v29) & 0xFFFFFFFFFFFFFFF8);
    *v30 = *v31;
    v30[1] = v31[1];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_190B584E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int EnumTagSinglePayload;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v3);
  v5 = *(_QWORD *)(v3 - 8);
  if (!EnumTagSinglePayload)
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  v6 = a1 + *(_QWORD *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84))
    ++v6;
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v8 = sub_190BE47E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v7 + v10 + 8) & ~v10;
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v11, v8);
  v12((*(_QWORD *)(v9 + 64) + v10 + v11) & ~v10, v8);
  return swift_bridgeObjectRelease();
}

void *sub_190B585BC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = v11 + 7;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = sub_190BE47E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = ((unint64_t)v13 + v17 + 8) & ~v17;
  v19 = ((unint64_t)v14 + v17 + 8) & ~v17;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v20(v18, v19, v15);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = (v21 + v17 + v18) & ~v17;
  v20(v22, (v21 + v17 + v19) & ~v17, v15);
  v23 = (_QWORD *)((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v21 + 7 + ((v21 + v17 + v19) & ~v17)) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

void *sub_190B5871C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = v10 + 7;
  v12 = (_QWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v14 = sub_190BE47E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v12 + v16 + 8) & ~v16;
  v18 = ((unint64_t)v13 + v16 + 8) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = (v20 + v16 + v17) & ~v16;
  v22 = (v20 + v16 + v18) & ~v16;
  v19(v21, v22, v14);
  v23 = (_QWORD *)((v20 + 7 + v21) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v20 + 7 + v22) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_190B588D0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = v11 + 7;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = sub_190BE47E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = ((unint64_t)v13 + v17 + 8) & ~v17;
  v19 = ((unint64_t)v14 + v17 + 8) & ~v17;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  v20(v18, v19, v15);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = (v21 + v17 + v18) & ~v17;
  v23 = (v21 + v17 + v19) & ~v17;
  v20(v22, v23, v15);
  *(_OWORD *)((v21 + 7 + v22) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v21 + 7 + v23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_190B58A1C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = v10 + 7;
  v12 = (_QWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_bridgeObjectRelease();
  v14 = sub_190BE47E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v12 + v16 + 8) & ~v16;
  v18 = ((unint64_t)v13 + v16 + 8) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v19(v17, v18, v14);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = (v20 + v16 + v17) & ~v16;
  v22 = (v20 + v16 + v18) & ~v16;
  v19(v21, v22, v14);
  v23 = (_QWORD *)((v20 + 7 + v21) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v20 + 7 + v22) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190B58BC0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t *v20;
  unint64_t v21;
  unsigned int EnumTagSinglePayload;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = sub_190BE47E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = v8;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if ((_DWORD)v7)
    v14 = *(_QWORD *)(v6 + 64);
  else
    v14 = *(_QWORD *)(v6 + 64) + 1;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v10 + 80);
  if (v13 < a2)
  {
    if (((((*(_QWORD *)(v10 + 64)
           + ((*(_QWORD *)(v10 + 64) + v15 + ((v15 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v15)) & ~v15)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v13 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X16 }
  }
  if (v8 == v13)
  {
    if (v7 < 2)
      return 0;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v7, v5);
    if (EnumTagSinglePayload >= 2)
      return EnumTagSinglePayload - 1;
    else
      return 0;
  }
  else
  {
    v20 = (unint64_t *)((a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 0x80000000) != 0)
    {
      return __swift_getEnumTagSinglePayload(((unint64_t)v20 + v15 + 8) & ~v15, v11, v9);
    }
    else
    {
      v21 = *v20;
      if (v21 >= 0xFFFFFFFF)
        LODWORD(v21) = -1;
      return (v21 + 1);
    }
  }
}

void sub_190B58D8C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  size_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = 0u;
  v11 = *(_QWORD *)(sub_190BE47E4() - 8);
  if (v9 <= *(_DWORD *)(v11 + 84))
    v12 = *(_DWORD *)(v11 + 84);
  else
    v12 = v9;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (v8)
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = *(_QWORD *)(v7 + 64) + 1;
  v15 = ((*(_QWORD *)(v11 + 64)
        + ((*(_QWORD *)(v11 + 64)
          + *(unsigned __int8 *)(v11 + 80)
          + ((*(unsigned __int8 *)(v11 + 80) + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v13 < a3)
  {
    if (((*(_DWORD *)(v11 + 64)
         + ((*(_DWORD *)(v11 + 64)
           + *(unsigned __int8 *)(v11 + 80)
           + ((*(unsigned __int8 *)(v11 + 80) + (((_DWORD)v14 + 7) & 0xFFFFFFF8) + 8) & ~*(unsigned __int8 *)(v11 + 80))) & ~*(unsigned __int8 *)(v11 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v16 = a3 - v13 + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v10 = v17;
    else
      v10 = 0;
  }
  if (a2 > v13)
  {
    if ((_DWORD)v15)
    {
      v18 = ~v13 + a2;
      bzero(a1, v15);
      *a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_190B58ED8(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  *(_BYTE *)(v7 + v11) = 0;
  if ((_DWORD)v8)
  {
    if (v12 == v3)
    {
      v13 = (v8 + 1);
      v14 = v7;
      a1 = v10;
      a2 = v9;
LABEL_8:
      __swift_storeEnumTagSinglePayload(v14, v13, a1, a2);
      return;
    }
    v15 = (_QWORD *)((v7 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (a3 < 0)
    {
      v14 = ((unint64_t)v15 + v4 + 8) & v6;
      v13 = v8;
      goto LABEL_8;
    }
    if ((v8 & 0x80000000) != 0)
      v16 = v8 ^ 0x80000000;
    else
      v16 = (v8 - 1);
    *v15 = v16;
  }
}

uint64_t type metadata accessor for SignpostEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SignpostEntry);
}

void -= infix<A, B>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_2_36();
  OUTLINED_FUNCTION_81_0();
  v1 = MEMORY[0x1E0C80A78](v0);
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_74();
  sub_190BE5318();
  OUTLINED_FUNCTION_3_31();
}

uint64_t sub_190B5917C(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t TupleTypeMetadata2;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  _QWORD v54[2];
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;

  v65 = a5;
  v66 = a6;
  v67 = a4;
  v68 = a3;
  v59 = a1;
  v57 = *(_QWORD *)(a8 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v58 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v12);
  v56 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v60 = (char *)v54 - v18;
  v61 = v17;
  v64 = sub_190BE59A8();
  v19 = *(_QWORD *)(v64 - 8);
  v20 = MEMORY[0x1E0C80A78](v64);
  v22 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v54 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v54 - v26;
  v63 = a7;
  v28 = sub_190BE59A8();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)v54 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)v54 - v33;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v36 = v69;
  result = ((uint64_t (*)(char *, char *, uint64_t, uint64_t))v68)(v34, v27, a2, a2 + *(int *)(TupleTypeMetadata2 + 48));
  if (!v36)
  {
    v67 = v22;
    v68 = v25;
    v69 = 0;
    v38 = v62;
    v39 = v64;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v34, v28);
    v40 = v63;
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v63) == 1)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v39);
      v41 = *(void (**)(char *, uint64_t))(v29 + 8);
      v41(v34, v28);
      return ((uint64_t (*)(char *, uint64_t))v41)(v32, v28);
    }
    else
    {
      v55 = v34;
      v65 = v29;
      v66 = v28;
      v42 = v38;
      v43 = v60;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v60, v32, v40);
      v44 = v19;
      v45 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v46 = (uint64_t)v68;
      v47 = v39;
      v45(v68, v27, v39);
      v48 = v61;
      if (__swift_getEnumTagSinglePayload(v46, 1, v61) == 1)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v40);
        v49 = *(void (**)(char *, uint64_t))(v44 + 8);
        v49(v27, v47);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v66);
        return ((uint64_t (*)(uint64_t, uint64_t))v49)(v46, v47);
      }
      else
      {
        v54[1] = a10;
        v51 = v57;
        v50 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v58, v46, v48);
        v52 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
        v68 = v27;
        v52(v56, v43, v40);
        v53 = (uint64_t)v67;
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v67, v50, v48);
        __swift_storeEnumTagSinglePayload(v53, 0, 1, v48);
        sub_190BE4E98();
        sub_190BE4EB0();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v48);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v40);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v68, v64);
        return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v55, v66);
      }
    }
  }
  return result;
}

uint64_t sub_190B5954C(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, char *, uint64_t, uint64_t);
  uint64_t v35;

  v34 = a3;
  v31 = a1;
  v11 = sub_190BE59A8();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - v13;
  v30 = *(_QWORD *)(a8 - 8);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a7 - 8);
  v32 = a7;
  v33 = v18;
  v19 = MEMORY[0x1E0C80A78](v15);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v29 - v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v25 = v35;
  result = v34(v23, v17, a2, a2 + *(int *)(TupleTypeMetadata2 + 48));
  if (!v25)
  {
    v27 = v32;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v21, v23, v32);
    v28 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v14, v17, a8);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, a8);
    sub_190BE4E98();
    sub_190BE4EB0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, a8);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v23, v27);
  }
  return result;
}

Swift::String_optional __swiftcall Dictionary.jsonRepresentation(options:)(NSJSONWritingOptions options)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  Swift::String_optional result;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_190BE5060();
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v2);
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_190BE4DA8();
  v17[0] = 0;
  v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, options, v17);

  v6 = v17[0];
  if (v5)
  {
    v7 = sub_190BE46F4();
    v9 = v8;

    sub_190BE5048();
    v10 = sub_190BE5018();
    v5 = v11;
    sub_190AEF3F4(v7, v9);
  }
  else
  {
    v12 = v6;
    v13 = (void *)sub_190BE4544();

    swift_willThrow();
    v10 = 0;
  }
  v14 = v10;
  v15 = v5;
  result.value._object = v15;
  result.value._countAndFlagsBits = v14;
  return result;
}

uint64_t sub_190B598B8(uint64_t a1, uint64_t a2)
{
  return sub_190B598F0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B5917C);
}

uint64_t sub_190B598D4(uint64_t a1, uint64_t a2)
{
  return sub_190B598F0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190B5954C);
}

uint64_t sub_190B598F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t ScenePhaseManager.insertObserver(_:before:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = (_QWORD *)(v3 + 16);
  OUTLINED_FUNCTION_20_0();
  v6 = *(_QWORD *)(v3 + 16);
  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v7)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return ScenePhaseManager.addObserver(_:)(a1, a3);
  }
LABEL_17:
  swift_unknownObjectRetain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v7 = sub_190BE5EAC();
  if (!v7)
    goto LABEL_11;
LABEL_3:
  v8 = 0;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x194015F20](v8, v6);
    }
    else
    {
      v9 = *(_QWORD *)(v6 + 8 * v8 + 32);
      swift_retain();
    }
    v10 = MEMORY[0x1940170E4](v9 + 16);
    swift_release();
    if (v10)
    {
      swift_unknownObjectRelease();
      if (v10 == a2)
        break;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    ++v8;
    if (v11 == v7)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v13 = _s13TeaFoundation18DisposableObserverCMa_0();
  OUTLINED_FUNCTION_1_9();
  v14 = swift_unknownObjectRetain();
  v15 = sub_190AA5360(v14, a1);
  OUTLINED_FUNCTION_20_0();
  if (*v5 >> 62)
  {
    swift_retain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v16 = sub_190BE5EAC();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_retain();
  }
  if (v16 < v8)
  {
    __break(1u);
  }
  else
  {
    sub_190B141D8(v8, v8, v15);
    result = swift_endAccess();
    a3[3] = v13;
    a3[4] = (uint64_t)&off_1E2CE0680;
    *a3 = v15;
  }
  return result;
}

uint64_t ScenePhaseManager.removeObserver(_:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_20_0();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (; v4; v4 = sub_190BE5EAC())
  {
    for (i = 0; ; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x194015F20](i, v3);
      }
      else
      {
        v6 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain();
      }
      v7 = i + 1;
      if (__OFADD__(i, 1))
        break;
      v8 = MEMORY[0x1940170E4](v6 + 16);
      if (v8)
      {
        v9 = v8;
        swift_unknownObjectRelease();
        if (v9 == a1)
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_20_0();
          sub_190B48A8C(i);
          swift_endAccess();
          swift_release();
          return swift_release();
        }
      }
      swift_release();
      if (v7 == v4)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_14:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t ScenePhaseManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ScenePhaseManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_190B59CD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return ScenePhaseManager.insertObserver(_:before:)(a1, a2, a3);
}

uint64_t sub_190B59CF8(uint64_t a1)
{
  return ScenePhaseManager.removeObserver(_:)(a1);
}

BOOL static ScenePhase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ScenePhase.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t ScenePhase.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

unint64_t sub_190B59DA8()
{
  unint64_t result;

  result = qword_1EE1FFD88;
  if (!qword_1EE1FFD88)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ScenePhase, &type metadata for ScenePhase);
    atomic_store(result, (unint64_t *)&qword_1EE1FFD88);
  }
  return result;
}

uint64_t dispatch thunk of ScenePhaseManagerType.insertObserver(_:before:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of ScenePhaseManagerType.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for ScenePhaseManager()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for ScenePhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B59E4C + 4 * byte_190BEBA95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B59E80 + 4 * byte_190BEBA90[v4]))();
}

uint64_t sub_190B59E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B59E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B59E90);
  return result;
}

uint64_t sub_190B59E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B59EA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B59EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B59EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for HttpMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B59F08 + 4 * byte_190BEBBB9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B59F3C + 4 * byte_190BEBBB4[v4]))();
}

uint64_t sub_190B59F3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B59F44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B59F4CLL);
  return result;
}

uint64_t sub_190B59F58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B59F60);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B59F64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B59F6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HttpMethod()
{
  return &type metadata for HttpMethod;
}

unint64_t sub_190B59F8C()
{
  unint64_t result;

  result = qword_1EE1FFD90[0];
  if (!qword_1EE1FFD90[0])
  {
    result = MEMORY[0x194016EF8](&unk_190BEBC0C, &type metadata for HttpMethod);
    atomic_store(result, qword_1EE1FFD90);
  }
  return result;
}

void sub_190B59FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_190BE62FC();
    sub_190BE50B4();
    v6 = sub_190BE6314();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    OUTLINED_FUNCTION_4_4();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (OUTLINED_FUNCTION_7_29() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        OUTLINED_FUNCTION_4_4();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((OUTLINED_FUNCTION_7_29() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_4_4();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_190B5A0C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*(_QWORD *)(a2 + 16))
  {
    v4 = sub_190BE62F0() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0
      && *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v4) != a1)
    {
      OUTLINED_FUNCTION_6_30();
      if ((v7 & 1) != 0)
      {
        do
        {
          if (*(_QWORD *)(v5 + 8 * v6) == a1)
            break;
          OUTLINED_FUNCTION_6_30();
        }
        while ((v8 & 1) != 0);
      }
    }
  }
}

Swift::Bool __swiftcall Quantifier.matches(_:)(Swift::Int a1)
{
  Swift::Bool result;

  __asm { BR              X12 }
  return result;
}

BOOL sub_190B5A190@<W0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return a1 <= a2;
}

uint64_t sub_190B5A1D4(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))((char *)&loc_190B5A1C8 + 4 * byte_190BEBC3A[a2]))(1);
}

void sub_190B5A1F0()
{
  JUMPOUT(0x190B5A1C8);
}

void sub_190B5A1FC()
{
  JUMPOUT(0x190B5A1C8);
}

void sub_190B5A208()
{
  JUMPOUT(0x190B5A1C8);
}

void sub_190B5A210()
{
  JUMPOUT(0x190B5A1B8);
}

void Quantifier.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_190B5A250()
{
  sub_190BE5FC0();
  sub_190BE5114();
  swift_bridgeObjectRelease();
  return 0x747361656C207461;
}

void sub_190B5A384()
{
  sub_190BE55DC();
  JUMPOUT(0x190B5A354);
}

uint64_t sub_190B5A3B8()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)&loc_190B5A36C + 4 * byte_190BEBC45[v0]))(7958113, 0xE300000000000000);
}

void sub_190B5A3DC()
{
  JUMPOUT(0x190B5A36CLL);
}

void sub_190B5A3EC()
{
  JUMPOUT(0x190B5A36CLL);
}

void sub_190B5A3FC()
{
  JUMPOUT(0x190B5A36CLL);
}

void sub_190B5A408()
{
  JUMPOUT(0x190B5A36CLL);
}

uint64_t destroy for Quantifier(uint64_t a1)
{
  return sub_190B4DC14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13TeaFoundation10QuantifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B4D6BC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Quantifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B4D6BC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_190B4DC14(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Quantifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_190B4DC14(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Quantifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Quantifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_190B5A594(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_190B5A5AC(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Quantifier()
{
  return &type metadata for Quantifier;
}

uint64_t sub_190B5A5D4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy40_8(a2, a1);
  return a2;
}

uint64_t sub_190B5A610(uint64_t a1)
{
  sub_190AB20CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_190B5A640()
{
  return sub_190BE6308();
}

uint64_t sub_190B5A664()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190B5A6AC()
{
  sub_190BE62FC();
  sub_190B5A640();
  return sub_190BE6314();
}

uint64_t type metadata accessor for Result.Errors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Result.Errors);
}

id *sub_190B5A6F0(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

id *sub_190B5A814(id *a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      v13 = v12;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 0;
    }
    *((_BYTE *)a1 + v7) = v14;
  }
  return a1;
}

_QWORD *sub_190B5A9A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_190B5AA7C(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_190B5AC08(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B5ACCC + 4 * byte_190BEBCD8[(v4 - 1)]))();
}

void sub_190B5AD18(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B5AEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B5AF04 + 4 * byte_190BEBCE6[v3]))();
}

uint64_t sub_190B5AF4C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190B5AF8C + 4 * byte_190BEBCEB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190B5AFAC + 4 * byte_190BEBCF0[v4]))();
}

_BYTE *sub_190B5AF8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190B5AFAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B5AFB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B5AFBC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B5AFC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B5AFCC(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_190B5AFD8()
{
  JUMPOUT(0x194016EF8);
}

void sub_190B5AFE8()
{
  sub_190BE5E58();
  __break(1u);
}

void sub_190B5B040(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = *v2;
  v5 = OUTLINED_FUNCTION_0_2();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CallbackDefinition(0, a2, v9, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, (uint64_t)v2 + qword_1ED039A98, v5);
  v12 = v2[2];
  v11 = v2[3];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = *(_QWORD *)(v4 + 112);
  v13[3] = a2;
  v13[4] = v12;
  v13[5] = v11;
  sub_190AC65B0((uint64_t)v8, (uint64_t)sub_190B5B264, (uint64_t)v13);
  swift_retain();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_190B5B118(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = *(_QWORD *)(a5 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_dynamicCast();
  a3(v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, a5);
}

uint64_t sub_190B5B200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + qword_1ED039A98;
  v2 = OUTLINED_FUNCTION_0_2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_190B5B240()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B5B264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190B5B118(a1, a2, *(void (**)(char *, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16));
}

uint64_t sub_190B5B270()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190B5B294()
{
  sub_190BE5E58();
  __break(1u);
}

uint64_t BaseDefinition.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BaseDefinition.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t Definition.key.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 16) = v2;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_190B5B318(_BYTE *a1, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>), _BYTE *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);

  v8 = *a4;
  v7 = a4[1];
  *a1 = *a3;
  v9 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject();
  *((_QWORD *)v9 + 2) = a5;
  *((_QWORD *)v9 + 3) = v8;
  *((_QWORD *)v9 + 4) = v7;
  *a2 = sub_190B5BC10;
  a2[1] = v9;
  return swift_retain();
}

uint64_t sub_190B5B38C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v6 = sub_190BE59A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  a2(a1);
  v10 = sub_190BE599C();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v10;
  return result;
}

uint64_t sub_190B5B438()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_190B03100(v0 + 72);
  v1 = OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_71_0(v1);
  return swift_bridgeObjectRelease();
}

void Definition.whenResolving<A, B>(_:scope:castAs:callback:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_72();
  v2 = v1;
  v4 = v3;
  v23 = v5;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_0_2();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_0();
  v12 = v11 - v10;
  v14 = *(_QWORD *)v7;
  v13 = *(_QWORD *)(v7 + 8);
  LOBYTE(v7) = *(_BYTE *)(v7 + 16);
  v15 = OUTLINED_FUNCTION_21_9();
  toKey<A>(type:name:)(v15, v16, v17, v18, v19);
  type metadata accessor for CallbackInstanceDefinition(0, v4, v2, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v0 + qword_1ED039AA0, v8);
  sub_190B5B5C4(v14, v13, v7);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_28_12(v12, v23, v21, v22);
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v24 = v6;
  v25 = v7;
  v9 = v8;
  v26 = v10;
  v23 = *v0;
  v11 = OUTLINED_FUNCTION_0_2();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_4_0();
  v15 = v14 - v13;
  v17 = *(_QWORD *)v9;
  v16 = *(_QWORD *)(v9 + 8);
  v18 = *(_BYTE *)(v9 + 16);
  toKey<A>(type:name:)();
  type metadata accessor for CallbackInstanceDefinition(0, v5, v3, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, (uint64_t)v1 + qword_1ED039AA0, v11);
  v20 = (_QWORD *)OUTLINED_FUNCTION_24();
  v20[2] = *(_QWORD *)(v23 + 96);
  v20[3] = v5;
  v20[4] = v3;
  v20[5] = v24;
  v20[6] = v25;
  sub_190B5B5C4(v17, v16, v18);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_28_12(v15, v26, v21, v22);
}

void sub_190B5B578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_129();
  sub_190B0BFA0();
  v3 = OUTLINED_FUNCTION_4_27();
  *(_QWORD *)(v1 - 128) = a1;
  OUTLINED_FUNCTION_5_24(v3, v4, v5, v6, (uint64_t)&off_1E2CE1B70);
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190B5B5C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return result;
}

void sub_190B5B718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_129();
  sub_190B0BFA0();
  v3 = OUTLINED_FUNCTION_4_27();
  *(_QWORD *)(v1 - 128) = a1;
  OUTLINED_FUNCTION_5_24(v3, v4, v5, v6, (uint64_t)&off_1E2CE1B70);
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_0_0();
}

void Definition<A>.whenResolving<A>(_:scope:callback:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v3 = v2;
  v20 = v4;
  v6 = v5;
  v7 = *v0;
  v8 = OUTLINED_FUNCTION_0_2();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_0();
  v12 = v11 - v10;
  v13 = *(_QWORD *)v6;
  v14 = *(_QWORD *)(v6 + 8);
  LOBYTE(v6) = *(_BYTE *)(v6 + 16);
  toKey<A>(type:name:)(v3, 0, 0, v3, &v21);
  v19 = v21;
  v15 = v22;
  type metadata accessor for CallbackInstanceDefinition(0, v3, *(_QWORD *)(v7 + 96), v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, (uint64_t)v1 + qword_1ED039AA0, v8);
  v21 = v19;
  v22 = v15;
  sub_190B5B5C4(v13, v14, v6);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_22_13();
  sub_190B9D0E4(v12, v20, v17, v18);
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v3 = v2;
  v23 = v4;
  v24 = v5;
  v7 = v6;
  v25 = v8;
  v9 = *v0;
  v10 = OUTLINED_FUNCTION_0_2();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_4_0();
  v14 = v13 - v12;
  v15 = *(_QWORD *)v7;
  v16 = *(_QWORD *)(v7 + 8);
  v17 = *(_BYTE *)(v7 + 16);
  OUTLINED_FUNCTION_21_9();
  toKey<A>(type:name:)();
  v18 = *(_QWORD *)(v9 + 96);
  type metadata accessor for CallbackInstanceDefinition(0, v3, v18, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, (uint64_t)v1 + qword_1ED039AA0, v10);
  v20 = (_QWORD *)OUTLINED_FUNCTION_24();
  v20[2] = v18;
  v20[3] = v3;
  v20[4] = v23;
  v20[5] = v24;
  sub_190B5B5C4(v15, v16, v17);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_28_12(v14, v25, v21, v22);
}

void sub_190B5B860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;

  v6 = (uint64_t *)(v1 + qword_1ED039AA8);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_8();
  sub_190B0BFA0();
  OUTLINED_FUNCTION_4_27();
  *(_QWORD *)(v4 - 128) = a1;
  sub_190B5BA20(v3, v4 - 128, v6, v2, (uint64_t)&off_1E2CE1B70);
  OUTLINED_FUNCTION_191();
  swift_release();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B5B9D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_129();
  sub_190B0BFA0();
  v3 = OUTLINED_FUNCTION_4_27();
  *(_QWORD *)(v1 - 128) = a1;
  OUTLINED_FUNCTION_5_24(v3, v4, v5, v6, (uint64_t)&off_1E2CE1B70);
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190B5BA20(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_190AAB5A4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_190B5BA98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B5BABC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 40))(a1, *a2);
}

uint64_t sub_190B5BAE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B5BB04(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 32))(a1, *a2);
}

uint64_t method lookup function for BaseDefinition()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for Definition()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_190B5BB40()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B5BB6C(_BYTE *a1, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>), _BYTE *a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_190B5B318(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_190B5BB84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1FFE18)
  {
    sub_190AF7E44();
    sub_190AF437C();
    v0 = sub_190BE5ED0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1FFE18);
  }
}

uint64_t sub_190B5BBEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B5BC10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_190B5B38C(a1, *(void (**)(uint64_t))(v2 + 24), a2);
}

uint64_t sub_190B5BC20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_190AD2C9C();
    v2 = v13;
    v4 = *(_QWORD *)(sub_190BE4628() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_190BE4574();
      v9 = v8;
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_190AD2C9C();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_190B5BD1C()
{
  sub_190B5BD40();
}

void sub_190B5BD40()
{
  void (*v0)(_QWORD, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t));
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_11_19();
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v4);
  v0(0, v2, v1, type metadata accessor for Seal);
  OUTLINED_FUNCTION_24();
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_17_14();
  OUTLINED_FUNCTION_39();
}

uint64_t sub_190B5BDA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = v1;
  v7 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  UnfairLock.init(options:)((int *)&v7);
  v5 = v4;
  sub_190AE48E8(0, &qword_1ED02F2B8, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_190B613AC(v5, a1);
  return v2;
}

void sub_190B5BE44()
{
  sub_190B5BD40();
}

void sub_190B5BE68()
{
  sub_190B5BE8C();
}

void sub_190B5BE8C()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_11_19();
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v4);
  sub_190B61714(0, v2, v1, v0);
  OUTLINED_FUNCTION_24();
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_17_14();
  OUTLINED_FUNCTION_39();
}

uint64_t sub_190B5BEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_190AE48E8(0, &qword_1ED02F050, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  swift_allocObject();
  swift_retain();
  sub_190B37B2C();
  v7 = v6;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v7;
  swift_retain_n();
  swift_retain();
  v9 = (void (*)(uint64_t))sub_190B2DA78(a1, sub_190B628E4, v7, sub_190B626F8, v7, sub_190B62720, v8);
  swift_release_n();
  v10 = swift_release();
  v9(v10);
  result = swift_beginAccess();
  v12 = *(_QWORD *)(v7 + 16);
  if (v12)
  {
    swift_retain();
    swift_release();
    swift_release();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_190B5C040()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_70(v1, &qword_1ED02F058, (uint64_t (*)(uint64_t))sub_190B1DE20);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_9_0();
  sub_190B37A54();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_39_4(v5, (uint64_t)sub_190B628DC, v6, (uint64_t)sub_190B62278, v7, (uint64_t)sub_190B62280);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_3_33();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B5C0F0()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_70(v1, &qword_1ED02F058, (uint64_t (*)(uint64_t))sub_190B1DE20);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_9_0();
  sub_190B37A54();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = OUTLINED_FUNCTION_11_3();
  sub_190B2DEF4(v5);
  OUTLINED_FUNCTION_6_4();
  v6 = OUTLINED_FUNCTION_54();
  v0(v6);
  OUTLINED_FUNCTION_3_33();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B5C1A4()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_70(v1, &qword_1EE1FEDF0, (uint64_t (*)(uint64_t))sub_190B39B4C);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_9_0();
  sub_190B37C00();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  v5 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_39_4(v5, (uint64_t)sub_190B628E0, v6, (uint64_t)sub_190B62290, v7, (uint64_t)sub_190B62298);
  OUTLINED_FUNCTION_6_4();
  v8 = OUTLINED_FUNCTION_54();
  v0(v8);
  OUTLINED_FUNCTION_3_33();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B5C254()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_70(v1, &qword_1EE1FEDE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_9_0();
  sub_190B37DB0();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v4);
  OUTLINED_FUNCTION_34_1();
  v5 = OUTLINED_FUNCTION_11_3();
  sub_190B2E2BC(v5);
  OUTLINED_FUNCTION_6_4();
  v6 = OUTLINED_FUNCTION_54();
  v0(v6);
  OUTLINED_FUNCTION_3_33();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B5C308()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_7_9();
  sub_190AC5F10(0, &qword_1EE1FEDE8, (uint64_t)&type metadata for AuthTokenResponse, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for DeferredPromise);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_9_0();
  sub_190B37CD8();
  v2 = v1;
  v3 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_5(v3);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_11_3();
  sub_190B2E15C();
  OUTLINED_FUNCTION_6_4();
  v4 = OUTLINED_FUNCTION_54();
  v0(v4);
  OUTLINED_FUNCTION_3_33();
  if (*(_QWORD *)(v2 + 16))
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_9();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_190B5C3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_190AE48E8(0, &qword_1ED02F058, (uint64_t (*)(uint64_t))sub_190B1DE20);
  swift_allocObject();
  swift_retain();
  sub_190B37A54();
  v7 = v6;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v7;
  swift_retain_n();
  swift_retain();
  v9 = (void (*)(uint64_t))sub_190B2E44C(a1, sub_190B628DC, v7, sub_190B628B4, v7, sub_190B620AC, v8);
  swift_release_n();
  v10 = swift_release();
  v9(v10);
  result = swift_beginAccess();
  v12 = *(_QWORD *)(v7 + 16);
  if (v12)
  {
    swift_retain();
    swift_release();
    swift_release();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190B5C50C(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v7;

  v7 = a1;
  a2(&v7);
  v2 = qword_1ED035648;
  swift_retain();
  if (v2 != -1)
    swift_once();
  swift_retain_n();
  sub_190B2DB88();
  v4 = v3;
  swift_release();
  v5 = swift_release_n();
  v4(v5);
  swift_release();
  return swift_release();
}

uint64_t sub_190B5C69C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v10;

  v10 = a1;
  a2(&v10);
  v5 = qword_1ED035648;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = qword_1ED035618;
  swift_retain_n();
  v7 = (void (*)(uint64_t))sub_190B2DA78(v6, sub_190B6228C, a4, sub_190B628B4, a4, j__OUTLINED_FUNCTION_10_25, a4);
  swift_release();
  v8 = swift_release_n();
  v7(v8);
  swift_release();
  return swift_release();
}

uint64_t sub_190B5C82C(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v7;

  v7 = a1;
  a2(&v7);
  v2 = qword_1ED035648;
  swift_retain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1ED035618;
  swift_retain_n();
  v4 = (void (*)(uint64_t))sub_190B2DEF4(v3);
  swift_release();
  v5 = swift_release_n();
  v4(v5);
  swift_release();
  return swift_release();
}

uint64_t sub_190B5C9BC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a2;
  a3(v11);
  v6 = qword_1ED035648;
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = qword_1ED035618;
  swift_retain_n();
  v8 = (void (*)(uint64_t))sub_190B2DA78(v7, sub_190B628DC, a5, sub_190B628B4, a5, j__OUTLINED_FUNCTION_10_25, a5);
  swift_release();
  v9 = swift_release_n();
  v8(v9);
  swift_release();
  return swift_release();
}

uint64_t sub_190B5CB4C(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  a2();
  v2 = qword_1ED035648;
  swift_retain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1ED035618;
  swift_retain_n();
  v4 = (void (*)(uint64_t))sub_190B2E04C(v3);
  swift_release();
  v5 = swift_release_n();
  v4(v5);
  swift_release();
  return swift_release();
}

uint64_t sub_190B5CCD4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  uint64_t v3;
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  _QWORD v8[2];

  v8[0] = a1;
  v8[1] = a2;
  a3(v8);
  v3 = qword_1ED035648;
  swift_retain();
  if (v3 != -1)
    swift_once();
  swift_retain_n();
  sub_190B2E15C();
  v5 = v4;
  swift_release();
  v6 = swift_release_n();
  v5(v6);
  swift_release();
  return swift_release();
}

uint64_t sub_190B5CE64(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v10;

  v10 = a1;
  a2(&v10);
  v5 = qword_1ED035648;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = qword_1ED035618;
  swift_retain_n();
  v7 = (void (*)(uint64_t))sub_190B2DA78(v6, sub_190B628DC, a4, sub_190B628B4, a4, j__OUTLINED_FUNCTION_10_25, a4);
  swift_release();
  v8 = swift_release_n();
  v7(v8);
  swift_release();
  return swift_release();
}

uint64_t sub_190B5CFF4()
{
  return sub_190B2D48C();
}

uint64_t sub_190B5D014()
{
  return sub_190B2D4B0();
}

uint64_t sub_190B5D034()
{
  return sub_190B2D4FC();
}

uint64_t sub_190B5D054(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  uint64_t (*v48)();
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  _QWORD *v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  int64_t v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[6];
  _QWORD *v99;

  v87 = a3;
  v88 = a4;
  v89 = a1;
  v77 = type metadata accessor for AuthToken();
  v86 = *(_QWORD *)(v77 - 8);
  v5 = MEMORY[0x1E0C80A78](v77);
  v75 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v74 = (uint64_t)&v74 - v7;
  v8 = sub_190BE4628();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v91 = v8;
  v81 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v80 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v82 = (char *)&v74 - v12;
  sub_190AE48E8(0, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v92 = (uint64_t)&v74 - v17;
  sub_190AE48E8(0, (unint64_t *)&qword_1ED034BC0, v9);
  v19 = MEMORY[0x1E0C80A78](v18);
  v83 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v94 = (uint64_t)&v74 - v21;
  sub_190B62398();
  v85 = v22;
  v23 = MEMORY[0x1E0C80A78](v22);
  v97 = (uint64_t)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v84 = (char *)&v74 - v25;
  sub_190AC9FA0(a2, v98);
  v90 = v98[0];
  v78 = v98[1];
  v93 = v98[3];
  v26 = v98[4];
  v79 = (unint64_t)(v98[2] + 64) >> 6;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v76 = v16;
  if (!v26)
    goto LABEL_3;
LABEL_2:
  v95 = (v26 - 1) & v26;
  v27 = v92;
  v28 = __clz(__rbit64(v26)) | (v93 << 6);
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v30 = v96;
  while (1)
  {
    v34 = (uint64_t *)(*(_QWORD *)(v90 + 48) + 16 * v28);
    v35 = *v34;
    v36 = v34[1];
    v37 = v85;
    v38 = *(_QWORD *)(v86 + 72);
    v39 = v84;
    sub_190B447F4(*(_QWORD *)(v90 + 56) + v38 * v28, (uint64_t)&v84[*(int *)(v85 + 48)]);
    *v39 = v35;
    v39[1] = v36;
    v40 = v97;
    sub_190B625DC((uint64_t)v39, v97, (uint64_t (*)(_QWORD))sub_190B62398);
    v41 = v40 + *(int *)(v37 + 48);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v42 = v94;
    v87(v94, v27, v40, v41);
    if (v30)
    {
      swift_bridgeObjectRelease();
      sub_190AE4930(v97, (uint64_t (*)(_QWORD))sub_190B62398);
LABEL_37:
      swift_release();
      return (uint64_t)v89;
    }
    v96 = 0;
    v43 = v83;
    sub_190B6242C(v42, v83, (unint64_t *)&qword_1ED034BC0, v29);
    v44 = v42;
    v45 = v91;
    if (__swift_getEnumTagSinglePayload(v43, 1, v91) == 1)
    {
      sub_190B62400(v27, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      sub_190B62400(v44, (unint64_t *)&qword_1ED034BC0, v29);
      v46 = v43;
      v47 = (unint64_t *)&qword_1ED034BC0;
      v48 = (uint64_t (*)())v29;
    }
    else
    {
      v49 = v82;
      v50 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v82, v43, v45);
      v51 = v27;
      v52 = v27;
      v53 = (uint64_t)v76;
      sub_190B6242C(v51, (uint64_t)v76, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      if (__swift_getEnumTagSinglePayload(v53, 1, v77) == 1)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v45);
        sub_190B62400(v52, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        sub_190B62400(v94, (unint64_t *)&qword_1ED034BC0, v29);
        v46 = v53;
        v47 = (unint64_t *)&unk_1ED02F310;
        v48 = type metadata accessor for AuthToken;
      }
      else
      {
        v54 = v74;
        sub_190B625DC(v53, v74, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
        v55 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
        v55(v80, v49, v45);
        sub_190B447F4(v54, v75);
        v56 = v89;
        swift_isUniquelyReferenced_nonNull_native();
        v99 = v56;
        sub_190B136AC();
        if (__OFADD__(v56[2], (v58 & 1) == 0))
          goto LABEL_39;
        v59 = v57;
        v60 = v58;
        sub_190B62478();
        v61 = sub_190BE5E04();
        v62 = v81;
        v63 = v82;
        if ((v61 & 1) != 0)
        {
          sub_190B136AC();
          if ((v60 & 1) != (v65 & 1))
            goto LABEL_41;
          v59 = v64;
        }
        v89 = v99;
        if ((v60 & 1) != 0)
        {
          sub_190B6250C(v75, v89[7] + v59 * v38);
          v66 = v91;
        }
        else
        {
          v67 = v89;
          v89[(v59 >> 6) + 8] |= 1 << v59;
          v66 = v91;
          v55((char *)(v67[6] + *(_QWORD *)(v62 + 72) * v59), v80, v91);
          sub_190B625DC(v75, v67[7] + v59 * v38, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
          v68 = v67[2];
          v69 = __OFADD__(v68, 1);
          v70 = v68 + 1;
          if (v69)
            goto LABEL_40;
          v89[2] = v70;
          v89 = v99;
          v63 = v82;
        }
        swift_bridgeObjectRelease();
        v71 = *(void (**)(char *, uint64_t))(v62 + 8);
        v71(v80, v66);
        sub_190AE4930(v74, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
        v71(v63, v66);
        sub_190B62400(v92, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        v46 = v94;
        v47 = (unint64_t *)&qword_1ED034BC0;
        v48 = MEMORY[0x1E0CAFFF8];
      }
    }
    sub_190B62400(v46, v47, (uint64_t (*)(uint64_t))v48);
    v26 = v95;
    sub_190AE4930(v97, (uint64_t (*)(_QWORD))sub_190B62398);
    if (v26)
      goto LABEL_2;
LABEL_3:
    v27 = v92;
    v31 = v93 + 1;
    v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    if (__OFADD__(v93, 1))
      break;
    if (v31 >= v79)
      goto LABEL_37;
    v32 = *(_QWORD *)(v78 + 8 * v31);
    v30 = v96;
    if (!v32)
    {
      v33 = v93 + 2;
      if (v93 + 2 >= v79)
        goto LABEL_37;
      v32 = *(_QWORD *)(v78 + 8 * v33);
      if (v32)
        goto LABEL_12;
      v33 = v93 + 3;
      if (v93 + 3 >= v79)
        goto LABEL_37;
      v32 = *(_QWORD *)(v78 + 8 * v33);
      if (v32)
        goto LABEL_12;
      v33 = v93 + 4;
      if (v93 + 4 >= v79)
        goto LABEL_37;
      v32 = *(_QWORD *)(v78 + 8 * v33);
      if (v32)
      {
LABEL_12:
        v31 = v33;
      }
      else
      {
        v31 = v93 + 5;
        if (v93 + 5 >= v79)
          goto LABEL_37;
        v32 = *(_QWORD *)(v78 + 8 * v31);
        if (!v32)
        {
          v72 = v93 + 6;
          while (v72 < v79)
          {
            v32 = *(_QWORD *)(v78 + 8 * v72++);
            if (v32)
            {
              v31 = v72 - 1;
              goto LABEL_13;
            }
          }
          goto LABEL_37;
        }
      }
    }
LABEL_13:
    v95 = (v32 - 1) & v32;
    v28 = __clz(__rbit64(v32)) + (v31 << 6);
    v93 = v31;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_190BE626C();
  __break(1u);
  return result;
}

uint64_t sub_190B5D840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  _BYTE *v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t);
  uint64_t result;
  _BYTE v69[16];
  void (*v70)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[6];
  uint64_t v91;

  v73 = a1;
  v88 = type metadata accessor for AuthToken();
  v83 = *(_QWORD *)(v88 - 8);
  v3 = MEMORY[0x1E0C80A78](v88);
  v72 = &v69[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v71 = &v69[-v5];
  v85 = sub_190BE4628();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v78 = *(_QWORD *)(v85 - 8);
  v7 = MEMORY[0x1E0C80A78](v85);
  v76 = &v69[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v77 = &v69[-v9];
  sub_190AE48E8(0, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v69[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v69[-v14];
  sub_190AE48E8(0, (unint64_t *)&qword_1ED034BC0, v6);
  v17 = MEMORY[0x1E0C80A78](v16);
  v82 = &v69[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v87 = &v69[-v19];
  sub_190B62398();
  v81 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = &v69[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v80 = &v69[-v24];
  sub_190AC9FA0(a2, v90);
  v84 = v90[0];
  v86 = v90[3];
  v25 = v90[4];
  v74 = v90[1];
  v75 = (unint64_t)(v90[2] + 64) >> 6;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v79 = v23;
  if (!v25)
    goto LABEL_3;
LABEL_2:
  v89 = (v25 - 1) & v25;
  v26 = __clz(__rbit64(v25)) | (v86 << 6);
  while (1)
  {
    v31 = (uint64_t *)(*(_QWORD *)(v84 + 48) + 16 * v26);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v83 + 72);
    v36 = v80;
    v35 = v81;
    sub_190B447F4(*(_QWORD *)(v84 + 56) + v34 * v26, (uint64_t)&v80[*(int *)(v81 + 48)]);
    *v36 = v33;
    v36[1] = v32;
    sub_190B625DC((uint64_t)v36, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_190B62398);
    v37 = (uint64_t)&v23[*(int *)(v35 + 48)];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v38 = v87;
    sub_190BE45F8();
    sub_190B447F4(v37, (uint64_t)v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v88);
    v39 = v82;
    v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_190B6242C((uint64_t)v38, (uint64_t)v82, (unint64_t *)&qword_1ED034BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v41 = v85;
    if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v85) == 1)
    {
      sub_190B62400((uint64_t)v15, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      sub_190B62400((uint64_t)v38, (unint64_t *)&qword_1ED034BC0, v40);
      v42 = v39;
      v43 = v40;
    }
    else
    {
      v44 = v78;
      v45 = (uint64_t)v15;
      v46 = v77;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v78 + 32))(v77, v39, v41);
      sub_190B6242C(v45, (uint64_t)v13, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v88) == 1)
      {
        (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v46, v41);
        sub_190B62400(v45, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        sub_190B62400((uint64_t)v87, (unint64_t *)&qword_1ED034BC0, v40);
        sub_190B62400((uint64_t)v13, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        v15 = (_BYTE *)v45;
        goto LABEL_33;
      }
      v47 = v13;
      v48 = (uint64_t)v13;
      v49 = v44;
      v50 = v71;
      sub_190B625DC(v48, (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
      v70 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16);
      v70(v76, v46, v41);
      sub_190B447F4((uint64_t)v50, (uint64_t)v72);
      v51 = v73;
      swift_isUniquelyReferenced_nonNull_native();
      v91 = v51;
      sub_190B136AC();
      if (__OFADD__(*(_QWORD *)(v51 + 16), (v53 & 1) == 0))
        goto LABEL_37;
      v54 = v52;
      v55 = v53;
      sub_190B62478();
      v56 = sub_190BE5E04();
      v57 = v78;
      v13 = v47;
      v15 = (_BYTE *)v45;
      if ((v56 & 1) != 0)
      {
        sub_190B136AC();
        if ((v55 & 1) != (v59 & 1))
          goto LABEL_39;
        v54 = v58;
      }
      v60 = v91;
      if ((v55 & 1) != 0)
      {
        v73 = v91;
        sub_190B6250C((uint64_t)v72, *(_QWORD *)(v91 + 56) + v54 * v34);
        v61 = v85;
      }
      else
      {
        *(_QWORD *)(v91 + 8 * (v54 >> 6) + 64) |= 1 << v54;
        v62 = v60;
        v63 = *(_QWORD *)(v60 + 48) + *(_QWORD *)(v57 + 72) * v54;
        v61 = v85;
        v70((_BYTE *)v63, v76, v85);
        sub_190B625DC((uint64_t)v72, *(_QWORD *)(v62 + 56) + v54 * v34, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
        v64 = *(_QWORD *)(v62 + 16);
        v65 = __OFADD__(v64, 1);
        v66 = v64 + 1;
        if (v65)
          goto LABEL_38;
        *(_QWORD *)(v62 + 16) = v66;
        v73 = v91;
      }
      swift_bridgeObjectRelease();
      v67 = *(void (**)(_BYTE *, uint64_t))(v78 + 8);
      v67(v76, v61);
      sub_190AE4930((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
      v67(v77, v61);
      sub_190B62400(v45, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
      v42 = v87;
      v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    }
    sub_190B62400((uint64_t)v42, (unint64_t *)&qword_1ED034BC0, v43);
LABEL_33:
    v23 = v79;
    sub_190AE4930((uint64_t)v79, (uint64_t (*)(_QWORD))sub_190B62398);
    v25 = v89;
    if (v89)
      goto LABEL_2;
LABEL_3:
    v27 = v86 + 1;
    if (__OFADD__(v86, 1))
      break;
    if (v27 >= v75)
      goto LABEL_35;
    v28 = *(_QWORD *)(v74 + 8 * v27);
    v29 = v86 + 1;
    if (!v28)
    {
      v29 = v86 + 2;
      if (v86 + 2 >= v75)
        goto LABEL_35;
      v28 = *(_QWORD *)(v74 + 8 * v29);
      if (!v28)
      {
        v29 = v86 + 3;
        if (v86 + 3 >= v75)
          goto LABEL_35;
        v28 = *(_QWORD *)(v74 + 8 * v29);
        if (!v28)
        {
          v29 = v86 + 4;
          if (v86 + 4 >= v75)
            goto LABEL_35;
          v28 = *(_QWORD *)(v74 + 8 * v29);
          if (!v28)
          {
            v29 = v86 + 5;
            if (v86 + 5 >= v75)
              goto LABEL_35;
            v28 = *(_QWORD *)(v74 + 8 * v29);
            if (!v28)
            {
              v30 = v86 + 6;
              while (v30 < v75)
              {
                v28 = *(_QWORD *)(v74 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_18;
                }
              }
LABEL_35:
              swift_release();
              return v73;
            }
          }
        }
      }
    }
LABEL_18:
    v89 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v86 = v29;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = sub_190BE626C();
  __break(1u);
  return result;
}

uint64_t sub_190B5DFC8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  _QWORD v60[5];
  _QWORD *v61;

  v4 = type metadata accessor for AuthToken();
  v56 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v49 - v8;
  sub_190B6256C();
  v55 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v49 - v14;
  sub_190AC9FA0(a2, v60);
  v57 = v60[0];
  v58 = v60[3];
  v15 = v60[4];
  v50 = v60[1];
  v51 = (unint64_t)(v60[2] + 64) >> 6;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v52 = v13;
  v53 = v9;
  if (!v15)
    goto LABEL_3;
LABEL_2:
  v59 = (v15 - 1) & v15;
  for (i = __clz(__rbit64(v15)) | (v58 << 6); ; i = __clz(__rbit64(v18)) + (v19 << 6))
  {
    v21 = v57;
    v22 = *(_QWORD *)(v57 + 48);
    v23 = sub_190BE4628();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = v22 + *(_QWORD *)(v24 + 72) * i;
    v26 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v54, v25, v23);
    v27 = *(_QWORD *)(v56 + 72);
    v28 = *(_QWORD *)(v21 + 56) + v27 * i;
    v29 = v55;
    sub_190B447F4(v28, v26 + *(int *)(v55 + 48));
    sub_190B625DC(v26, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_190B6256C);
    v30 = (uint64_t)&v13[*(int *)(v29 + 48)];
    v31 = sub_190BE4574();
    v33 = v32;
    sub_190B447F4(v30, (uint64_t)v9);
    v34 = (uint64_t)v9;
    v35 = (uint64_t)v7;
    sub_190B447F4(v34, (uint64_t)v7);
    swift_isUniquelyReferenced_nonNull_native();
    v61 = a1;
    v36 = sub_190AEABD0();
    if (__OFADD__(a1[2], (v37 & 1) == 0))
      break;
    v38 = v36;
    v39 = v37;
    sub_190B62614(0, (unint64_t *)&unk_1ED02F398, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECB20]);
    if ((sub_190BE5E04() & 1) != 0)
    {
      v40 = sub_190AEABD0();
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_33;
      v38 = v40;
    }
    a1 = v61;
    if ((v39 & 1) != 0)
    {
      v42 = v61[7] + v38 * v27;
      v7 = (char *)v35;
      sub_190B6250C(v35, v42);
    }
    else
    {
      v61[(v38 >> 6) + 8] |= 1 << v38;
      v43 = (uint64_t *)(a1[6] + 16 * v38);
      *v43 = v31;
      v43[1] = v33;
      v44 = a1[7] + v38 * v27;
      v7 = (char *)v35;
      sub_190B625DC(v35, v44, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
      v45 = a1[2];
      v46 = __OFADD__(v45, 1);
      v47 = v45 + 1;
      if (v46)
        goto LABEL_31;
      a1[2] = v47;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    swift_bridgeObjectRelease();
    v9 = v53;
    sub_190AE4930((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    swift_bridgeObjectRelease();
    v13 = v52;
    sub_190AE4930((uint64_t)v52, (uint64_t (*)(_QWORD))sub_190B6256C);
    v15 = v59;
    if (v59)
      goto LABEL_2;
LABEL_3:
    v17 = v58 + 1;
    if (__OFADD__(v58, 1))
      goto LABEL_32;
    if (v17 >= v51)
      goto LABEL_29;
    v18 = *(_QWORD *)(v50 + 8 * v17);
    v19 = v58 + 1;
    if (!v18)
    {
      v19 = v58 + 2;
      if (v58 + 2 >= v51)
        goto LABEL_29;
      v18 = *(_QWORD *)(v50 + 8 * v19);
      if (!v18)
      {
        v19 = v58 + 3;
        if (v58 + 3 >= v51)
          goto LABEL_29;
        v18 = *(_QWORD *)(v50 + 8 * v19);
        if (!v18)
        {
          v19 = v58 + 4;
          if (v58 + 4 >= v51)
            goto LABEL_29;
          v18 = *(_QWORD *)(v50 + 8 * v19);
          if (!v18)
          {
            v19 = v58 + 5;
            if (v58 + 5 >= v51)
              goto LABEL_29;
            v18 = *(_QWORD *)(v50 + 8 * v19);
            if (!v18)
            {
              v20 = v58 + 6;
              while (v20 < v51)
              {
                v18 = *(_QWORD *)(v50 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_18;
                }
              }
LABEL_29:
              swift_release();
              return (uint64_t)a1;
            }
          }
        }
      }
    }
LABEL_18:
    v58 = v19;
    v59 = (v18 - 1) & v18;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  result = sub_190BE626C();
  __break(1u);
  return result;
}

void AuthTokenManagerType.fetchAuthToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;

  OUTLINED_FUNCTION_70(a1, &qword_1ED02F3E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v6 = OUTLINED_FUNCTION_6_3();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_190BE7CD0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v9, a2, a3);
  swift_bridgeObjectRelease();
  if (qword_1ED035648 != -1)
    swift_once();
  v10 = (id)qword_1ED035618;
  sub_190B5BEF4((uint64_t)v10, (uint64_t)sub_190B5E528, 0);
  OUTLINED_FUNCTION_2();

  OUTLINED_FUNCTION_26();
}

uint64_t sub_190B5E528(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_190AE48E8(0, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = type metadata accessor for AuthToken();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  sub_190B43070(*a1, (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_190B62400((uint64_t)v4, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
    sub_190B62734();
    v11 = swift_allocError();
    sub_190AE48E8(0, (unint64_t *)&unk_1ED02F2D8, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
    swift_allocObject();
    return sub_190B5BDA4(v11);
  }
  else
  {
    sub_190B625DC((uint64_t)v4, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    sub_190B447F4((uint64_t)v10, (uint64_t)v8);
    sub_190AE48E8(0, (unint64_t *)&unk_1ED02F2D8, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
    swift_allocObject();
    v12 = sub_190B71050((uint64_t)v8);
    sub_190AE4930((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
  }
  return v12;
}

uint64_t AuthTokenManager.__allocating_init(service:store:tokenType:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  AuthTokenManager.init(service:store:tokenType:)(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_190B5E76C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  id v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v6 = sub_190BE4C4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(_QWORD *)a2;
  v40 = *(unsigned __int8 *)(a2 + 8);
  sub_190AB8568(0, (unint64_t *)&qword_1ED035670);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF530], v6);
  v10 = (void *)sub_190BE5948();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v10;
  *(_QWORD *)(v12 + 32) = v3;
  v13 = qword_1ED02F328;
  v14 = v10;
  swift_retain_n();
  v15 = v14;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v13 != -1)
    swift_once();
  v16 = sub_190BE4A30();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v17 = sub_190BE4A0C();
  v18 = sub_190BE5894();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v39 = v11;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v43 = v21;
    v37 = v3;
    v38 = v15;
    *(_DWORD *)v20 = 136446210;
    v22 = sub_190BE4628();
    v23 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v24 = MEMORY[0x1940155C0](v23, v22);
    v26 = v25;
    swift_bridgeObjectRelease();
    sub_190ACE890(v24, v26, &v43);
    v42 = v27;
    v3 = v37;
    v15 = v38;
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v17, v18, "AuthTokenManager will fetch auth tokens for %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v21, -1, -1);
    v28 = v20;
    v11 = v39;
    MEMORY[0x194017000](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_190B5FF40(a1, v41, v40, v3, (uint64_t (*)(uint64_t, __n128))sub_190B62170, v11, (uint64_t)sub_190B621A0, (void (*)(uint64_t))v12);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v29 = qword_1ED035648;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v29 != -1)
    swift_once();
  v30 = (id)qword_1ED035618;
  sub_190B2BF28();
  swift_release();
  swift_release();

  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = a1;
  v32 = (void *)qword_1ED035618;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v33 = v32;
  sub_190B22098((uint64_t)v33, (uint64_t)sub_190B621C4, v31);
  v35 = v34;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v35;
}

uint64_t sub_190B5EBE0(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)();
  uint64_t v31;
  uint64_t result;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[9];

  v6 = *a3;
  if (qword_1ED02F328 != -1)
    swift_once();
  v7 = sub_190BE4A30();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v8 = sub_190BE4A0C();
  v9 = sub_190BE58AC();
  if (os_log_type_enabled(v8, v9))
  {
    v39 = (uint64_t)a2;
    v10 = (uint8_t *)swift_slowAlloc();
    v40 = v6;
    v11 = swift_slowAlloc();
    v42[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_190BE4628();
    v13 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v14 = MEMORY[0x1940155C0](v13, v12);
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_190ACE890(v14, v16, v42);
    v41 = v17;
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    a2 = (void *)v39;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v8, v9, "AuthTokenManager will queue cache read for urls=%{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v11, -1, -1);
    MEMORY[0x194017000](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a3;
  sub_190B62304(0);
  swift_allocObject();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v19 = swift_retain();
  sub_190B37624(v19, v20, v21, v22, v23, v24, v25, v26, v39, v40, v41, v42[0], v42[1], v42[2], v42[3], v42[4], v42[5], v42[6], v42[7],
    v42[8]);
  v28 = v27;
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = sub_190B62690;
  v29[3] = v18;
  v29[4] = v28;
  swift_retain();
  swift_retain();
  v30 = sub_190ADADE0(a2, (void (*)())sub_190B628D0, (uint64_t)v29);
  v31 = swift_release();
  ((void (*)(uint64_t))v30)(v31);
  result = swift_beginAccess();
  if (*(_QWORD *)(v28 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    sub_190B62614(0, (unint64_t *)&qword_1ED02F340, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    sub_190B1DE20();
    v33 = sub_190ABD678();
    Promise.then<A, B>(on:disposeOn:closure:)();
    swift_release();

    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = a1;
    v35 = qword_1ED035648;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v35 != -1)
      swift_once();
    v36 = (id)qword_1ED035618;
    sub_190B22098((uint64_t)v36, (uint64_t)sub_190B626C0, v34);
    v38 = v37;
    swift_release();
    swift_release();

    return v38;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190B5EFAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = *a2;
  if (qword_1ED02F328 != -1)
    swift_once();
  v4 = sub_190BE4A30();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v5 = sub_190BE4A0C();
  v6 = sub_190BE58AC();
  if (os_log_type_enabled(v5, v6))
  {
    v17 = v3;
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = sub_190BE4628();
    v10 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v11 = MEMORY[0x1940155C0](v10, v9);
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_190ACE890(v11, v13, &v18);
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v5, v6, "AuthTokenManager will perform cache read for urls=%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v8, -1, -1);
    v14 = v7;
    v3 = v17;
    MEMORY[0x194017000](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_190B5BC20(a1);
  v15 = (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 88) + 16))();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_190B5F1DC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v4 = sub_190B5D054(MEMORY[0x1E0DEE9E0], *a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190B626E0, a2);
  if (qword_1ED02F328 != -1)
    swift_once();
  v5 = sub_190BE4A30();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v6 = sub_190BE4A0C();
  v7 = sub_190BE58AC();
  if (os_log_type_enabled(v6, v7))
  {
    v16 = a3;
    v8 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v17 = v15;
    *(_DWORD *)v8 = 136446210;
    v9 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v10 = sub_190BE2E54(v9);
    swift_bridgeObjectRelease();
    v11 = sub_190BE4628();
    v12 = MEMORY[0x1940155C0](v10, v11);
    v14 = v13;
    a3 = v16;
    swift_release();
    sub_190ACE890(v12, v14, &v17);
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v6, v7, "AuthTokenManager using cached auth tokens for urls=%{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v15, -1, -1);
    MEMORY[0x194017000](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a3 = v4;
}

uint64_t sub_190B5F3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v8 = sub_190BE47E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190BE45F8();
  sub_190AC78B8(a5 + *(_QWORD *)(*(_QWORD *)a5 + 128), (uint64_t)v21);
  v12 = v22;
  v13 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  v14 = type metadata accessor for AuthToken();
  v15 = *(double *)(a4 + *(int *)(v14 + 28));
  sub_190BE47A8();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (v15 <= v17)
  {
    v18 = 1;
  }
  else
  {
    sub_190B447F4(a4, a2);
    v18 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v18, 1, v14);
}

uint64_t sub_190B5F540(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)();
  uint64_t v34;
  uint64_t result;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[9];

  if (qword_1ED02F328 != -1)
    swift_once();
  v8 = sub_190BE4A30();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v9 = sub_190BE4A0C();
  v10 = sub_190BE58AC();
  if (os_log_type_enabled(v9, v10))
  {
    v43 = (uint64_t)a3;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v45[0] = v12;
    *(_DWORD *)v11 = 136446210;
    v42 = (uint64_t)(v11 + 4);
    v13 = sub_190BE4628();
    v14 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v15 = MEMORY[0x1940155C0](v14, v13);
    v16 = a1;
    v18 = v17;
    swift_bridgeObjectRelease();
    v19 = v15;
    a3 = (void *)v43;
    sub_190ACE890(v19, v18, v45);
    v44 = v20;
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    a1 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v9, v10, "AuthTokenManager will queue cache write for urls=%{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v12, -1, -1);
    MEMORY[0x194017000](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a4;
  v21[4] = a1;
  sub_190B62304(0);
  swift_allocObject();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  v22 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B37624(v22, v23, v24, v25, v26, v27, v28, v29, v42, v43, v44, v45[0], v45[1], v45[2], v45[3], v45[4], v45[5], v45[6], v45[7],
    v45[8]);
  v31 = v30;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = sub_190B622E8;
  v32[3] = v21;
  v32[4] = v31;
  swift_retain();
  swift_retain();
  v33 = sub_190ADADE0(a3, (void (*)())sub_190B6236C, (uint64_t)v32);
  v34 = swift_release();
  ((void (*)(uint64_t))v33)(v34);
  result = swift_beginAccess();
  if (*(_QWORD *)(v31 + 16))
  {
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    if (qword_1ED035648 != -1)
      swift_once();
    v36 = (id)qword_1ED035618;
    sub_190B2C0AC();
    swift_release();

    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = a2;
    v38 = (void *)qword_1ED035618;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v39 = v38;
    sub_190B22098((uint64_t)v39, (uint64_t)sub_190B62378, v37);
    v41 = v40;
    swift_release();
    swift_release();

    return v41;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190B5F8E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a2;
  if (qword_1ED02F328 != -1)
    swift_once();
  v5 = sub_190BE4A30();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v6 = sub_190BE4A0C();
  v7 = sub_190BE58AC();
  if (os_log_type_enabled(v6, v7))
  {
    v20 = v4;
    v8 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v8 = 136446210;
    v9 = sub_190BE4628();
    v10 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v11 = a3;
    v12 = MEMORY[0x1940155C0](v10, v9);
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = v12;
    a3 = v11;
    sub_190ACE890(v15, v14, &v21);
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v6, v7, "AuthTokenManager will perform cache write for urls=%{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v19, -1, -1);
    v16 = v8;
    v4 = v20;
    MEMORY[0x194017000](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_190B5DFC8(MEMORY[0x1E0DEE9E0], a3);
  v17 = (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 88) + 32))();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_190B5FB24(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  v3 = sub_190B5D840(MEMORY[0x1E0DEE9E0], *a1);
  if (qword_1ED02F328 != -1)
    swift_once();
  v4 = sub_190BE4A30();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v5 = sub_190BE4A0C();
  v6 = sub_190BE58AC();
  if (os_log_type_enabled(v5, v6))
  {
    v15 = a2;
    v7 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v7 = 136446210;
    v8 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v9 = sub_190BE2E54(v8);
    swift_bridgeObjectRelease();
    v10 = sub_190BE4628();
    v11 = MEMORY[0x1940155C0](v9, v10);
    v13 = v12;
    a2 = v15;
    swift_release();
    sub_190ACE890(v11, v13, &v16);
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v5, v6, "AuthTokenManager wrote new tokens to cache for urls=%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v14, -1, -1);
    MEMORY[0x194017000](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a2 = v3;
}

void sub_190B5FD30(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *oslog;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED02F328 != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED0395E0);
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_43();
  oslog = sub_190BE4A0C();
  v5 = sub_190BE5894();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = OUTLINED_FUNCTION_20_1();
    v7 = (_QWORD *)OUTLINED_FUNCTION_20_1();
    v15 = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v6 = 136446466;
    v8 = OUTLINED_FUNCTION_6_3();
    v9 = OUTLINED_FUNCTION_71();
    MEMORY[0x1940155C0](v9, v8);
    v10 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_5(v10, v11, &v15);
    sub_190BE5A2C();
    OUTLINED_FUNCTION_19_0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2114;
    OUTLINED_FUNCTION_43();
    v14 = _swift_stdlib_bridgeErrorToNSError();
    sub_190BE5A2C();
    *v7 = v14;
    OUTLINED_FUNCTION_38_10();
    OUTLINED_FUNCTION_38_10();
    _os_log_impl(&dword_190AA0000, oslog, v5, a3, (uint8_t *)v6, 0x16u);
    sub_190B14274();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_12_0();
  }
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_0_15();

}

void (*sub_190B5FF40(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t (*a5)(uint64_t, __n128), uint64_t a6, uint64_t a7, void (*a8)(uint64_t)))(uint64_t)
{
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t);

  sub_190B621E4(0);
  v15 = (void (*)(uint64_t))sub_190B6001C();
  v17 = sub_190B600AC(a1, a2, a3, v15, v16, a5, a6, a7, a8, *(uint64_t **)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 120)), 0);
  swift_release();
  return v17;
}

uint64_t (*sub_190B6001C())(uint64_t)
{
  swift_retain();
  return sub_190B622C0;
}

uint64_t sub_190B6004C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 8))(a1, *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 112)), *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 112) + 8), v3, v4);
}

void (*sub_190B600AC(uint64_t a1, unint64_t a2, unsigned __int8 a3, void (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, __n128), uint64_t a7, uint64_t a8, void (*a9)(uint64_t), uint64_t *a10, uint64_t a11))(uint64_t)
{
  uint64_t v11;

  swift_retain();
  return sub_190BD9BE0(a1, a2, a3, a4, a5, a8, a9, a10, a11, 0, 0, v11, a6, a7);
}

uint64_t sub_190B60144@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = *a1;
  if (qword_1ED02F328 != -1)
    swift_once();
  v4 = sub_190BE4A30();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v5 = sub_190BE4A0C();
  v6 = sub_190BE58AC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = sub_190BE4628();
    v10 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v11 = a2;
    v12 = MEMORY[0x1940155C0](v10, v9);
    v17 = v3;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = v12;
    a2 = v11;
    sub_190ACE890(v15, v14, &v18);
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    v3 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v5, v6, "AuthTokenManager fetch successful for urls %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v8, -1, -1);
    MEMORY[0x194017000](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a2 = v3;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

void AuthTokenManager.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  OUTLINED_FUNCTION_0();
}

uint64_t AuthTokenManager.__deallocating_deinit()
{
  AuthTokenManager.deinit();
  return swift_deallocClassInstance();
}

void AuthTokenManager.fetchAuthTokens(for:)(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  if (qword_1ED02F328 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v3 = sub_190BE4A0C();
  v4 = sub_190BE58AC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_20_1();
    v10 = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v5 = 136446210;
    v6 = OUTLINED_FUNCTION_6_3();
    v7 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    MEMORY[0x1940155C0](v7, v6);
    v8 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_5(v8, v9, &v10);
    sub_190BE5A2C();
    OUTLINED_FUNCTION_19_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50(&dword_190AA0000, v3, v4, "AuthTokenManager will fetch auth tokens for urls: %{public}s", v5);
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_12_0();
  }

  OUTLINED_FUNCTION_19_0();
  v10 = 2;
  v11 = 2;
  sub_190B5E76C(a1, (uint64_t)&v10);
  OUTLINED_FUNCTION_0_15();
}

uint64_t AuthTokenManager.refreshAuthTokens(for:condition:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v4 = v3;
  if (qword_1ED02F328 != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v9 = sub_190BE4A0C();
  v10 = sub_190BE58AC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_20_1();
    v28 = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v11 = 136446210;
    v12 = OUTLINED_FUNCTION_6_3();
    v13 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v14 = MEMORY[0x1940155C0](v13, v12);
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_190ACE890(v14, v16, &v28);
    sub_190BE5A2C();
    OUTLINED_FUNCTION_19_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50(&dword_190AA0000, v9, v10, "AuthTokenManager will refresh auth tokens for urls: %{public}s", v11);
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_12_0();
  }

  OUTLINED_FUNCTION_19_0();
  sub_190B608C0(v4, a1);
  v17 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = qword_1ED035648;
  swift_retain();
  if (v18 != -1)
    swift_once();
  v19 = (id)qword_1ED035618;
  sub_190B2C3B4();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_9_2();

  v20 = (void *)qword_1ED035618;
  swift_retain();
  v21 = v20;
  sub_190B5C3C0((uint64_t)v21, (uint64_t)sub_190B616D4, v4);
  swift_release();
  swift_release();

  v22 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v22 + 16) = a1;
  v23 = (void *)qword_1ED035618;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v24 = v23;
  sub_190B22098((uint64_t)v24, (uint64_t)sub_190B6170C, v22);
  v26 = v25;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_9_2();

  return v26;
}

uint64_t sub_190B608C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = 2;
  v4 = 2;
  return sub_190B5E76C(a2, (uint64_t)&v3);
}

uint64_t sub_190B60908@<X0>(uint64_t (*a1)(char *)@<X1>, size_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(char *);
  size_t v6;
  uint64_t result;

  swift_retain();
  v4 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v5 = sub_190B6182C(v4, a1);
  swift_bridgeObjectRelease();
  v6 = sub_190BE2E54((uint64_t)v5);
  result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_190B60980(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v1 = *a1;
  v3 = 0;
  v4 = 2;
  return sub_190B5E76C(v1, (uint64_t)&v3);
}

void sub_190B609C4(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  NSObject *oslog;
  uint64_t v16;

  if (qword_1ED02F328 != -1)
    swift_once();
  v2 = sub_190BE4A30();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED0395E0);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v3 = a1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v4 = a1;
  oslog = sub_190BE4A0C();
  v5 = sub_190BE5894();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v16 = v7;
    *(_DWORD *)v6 = 136446466;
    v8 = sub_190BE4628();
    v9 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v10 = MEMORY[0x1940155C0](v9, v8);
    v12 = v11;
    swift_bridgeObjectRelease();
    sub_190ACE890(v10, v12, &v16);
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    swift_getErrorValue();
    v13 = sub_190BE62B4();
    sub_190ACE890(v13, v14, &v16);
    sub_190BE5A2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_190AA0000, oslog, v5, "AuthTokenManager failed to refresh auth tokens for urls=%{public}s; error=%{public}s",
      (uint8_t *)v6,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x194017000](v7, -1, -1);
    MEMORY[0x194017000](v6, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t AuthTokenManager.discardAuthToken(for:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, char *);
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  void (*v31)(char *, uint64_t, char *);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = OUTLINED_FUNCTION_6_3();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v30 - (((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v30 - v8;
  if (qword_1ED02F328 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED0395E0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11(v9, a1, v3);
  v12 = sub_190BE4A0C();
  v13 = sub_190BE58AC();
  v14 = os_log_type_enabled(v12, v13);
  v32 = v7;
  v33 = a1;
  if (v14)
  {
    v15 = OUTLINED_FUNCTION_20_1();
    v30[1] = v1;
    v16 = (uint8_t *)v15;
    v35 = OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v16 = 136446210;
    v30[0] = v16 + 4;
    sub_190ADCAB4(&qword_1EE1FFE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v17 = sub_190BE5FC0();
    sub_190ACE890(v17, v18, &v35);
    v34 = v19;
    sub_190BE5A2C();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_11();
    OUTLINED_FUNCTION_50(&dword_190AA0000, v12, v13, "AuthTokenManager will discard auth token for URL: %{public}s", v16);
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_12_0();
  }
  OUTLINED_FUNCTION_27_11();

  sub_190B60FBC(v1);
  v20 = v32;
  v21 = v9;
  v11(v32, a1, (uint64_t)v9);
  v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v31 = (void (*)(char *, uint64_t, char *))v11;
  v23 = OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_42_7(v23 + v22);
  if (qword_1ED035648 != -1)
    swift_once();
  v24 = (id)qword_1ED035618;
  sub_190B2C474();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_54();

  v31(v20, v33, v21);
  v25 = OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_42_7(v25 + v22);
  v26 = (id)qword_1ED035618;
  sub_190B220AC((uint64_t)v26, (uint64_t)sub_190B617C0, v25);
  v28 = v27;
  OUTLINED_FUNCTION_9_2();

  swift_release();
  return v28;
}

uint64_t sub_190B60FBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  sub_190AC5F10(0, &qword_1ED034918, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190BE7CD0;
  *(_QWORD *)(v2 + 32) = sub_190BE4574();
  *(_QWORD *)(v2 + 40) = v3;
  v4 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 40))(v2, *(_QWORD *)(v1 + 80));
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_190B61064@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_190BE4628();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void sub_190B610B4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_190BE4628();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED02F328 != -1)
    swift_once();
  v8 = sub_190BE4A30();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED0395E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v9 = a1;
  v10 = a1;
  v11 = sub_190BE4A0C();
  v12 = sub_190BE5894();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v24 = v22;
    *(_DWORD *)v13 = 136446466;
    sub_190ADCAB4(&qword_1EE1FFE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v14 = sub_190BE5FC0();
    sub_190ACE890(v14, v15, &v24);
    v23 = v16;
    sub_190BE5A2C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_WORD *)(v13 + 12) = 2082;
    swift_getErrorValue();
    v17 = sub_190BE62B4();
    sub_190ACE890(v17, v18, &v24);
    v23 = v19;
    sub_190BE5A2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_190AA0000, v11, v12, "AuthTokenManager failed to discard token for url=%{public}s; error=%{public}s",
      (uint8_t *)v13,
      0x16u);
    v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x194017000](v20, -1, -1);
    MEMORY[0x194017000](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  }
}

void sub_190B6134C(uint64_t a1)
{
  AuthTokenManager.fetchAuthTokens(for:)(a1);
}

uint64_t sub_190B6136C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AuthTokenManager.refreshAuthTokens(for:condition:)(a1, a2, a3);
}

uint64_t sub_190B6138C(uint64_t a1)
{
  return AuthTokenManager.discardAuthToken(for:)(a1);
}

uint64_t sub_190B613AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_190AE48E8(0, &qword_1ED02F270, (uint64_t (*)(uint64_t))sub_190B39CD4);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v13 - v6);
  *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
  v8 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  sub_190B39CD4(0);
  v10 = v9;
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = 1;
  *v7 = a2;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
  v11 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  swift_beginAccess();
  sub_190B62770((uint64_t)v7, v11);
  swift_endAccess();
  return v2;
}

uint64_t sub_190B614D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 32) = v6;
  *(_BYTE *)(v3 + 48) = -1;
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = 1;
  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = a2;
  v8 = *(unsigned __int8 *)(v3 + 48);
  *(_BYTE *)(v3 + 48) = 1;
  a3(v7, v8);
  return v3;
}

void sub_190B61564(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  a1();
  v4 = qword_1ED035648;
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = (id)qword_1ED035618;
  sub_190B2BFE8();
  swift_release();
  swift_release();

  v6 = (void *)qword_1ED035618;
  swift_retain();
  v7 = v6;
  sub_190ADE658((uint64_t)v7, (uint64_t)sub_190B62568, a3);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_190B6167C()
{
  return sub_190B2D4A4();
}

uint64_t sub_190B616A4()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_0_28();
  return swift_deallocObject();
}

uint64_t sub_190B616BC@<X0>(size_t *a1@<X8>)
{
  uint64_t v1;

  return sub_190B60908(*(uint64_t (**)(char *))(v1 + 16), a1);
}

uint64_t sub_190B616D4(uint64_t *a1)
{
  return sub_190B60980(a1);
}

uint64_t sub_190B616EC()
{
  OUTLINED_FUNCTION_37_8();
  return swift_deallocObject();
}

void sub_190B6170C(void *a1)
{
  sub_190B609C4(a1);
}

void sub_190B61714(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_190AC5F10(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v6 = OUTLINED_FUNCTION_80(v5);
    if (!v7)
      atomic_store(v6, a2);
  }
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B61774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_190BE4628();
  OUTLINED_FUNCTION_35_9();
  return sub_190B61064(v2, a1);
}

void sub_190B617C0(void *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_35_9();
  sub_190B610B4(a1, v2);
}

uint64_t dispatch thunk of AuthTokenManagerType.fetchAuthTokens(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AuthTokenManagerType.refreshAuthTokens(for:condition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of AuthTokenManagerType.discardAuthToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for AuthTokenManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AuthTokenManager.__allocating_init(service:store:tokenType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_190B6181C(uint64_t a1)
{
  uint64_t v1;

  return sub_190B5CB4C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t (*sub_190B6182C(uint64_t a1, uint64_t (*a2)(char *)))(char *)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t isStackAllocationSafe;
  unint64_t *v10;
  uint64_t (*v11)(char *);
  unint64_t *v12;
  uint64_t (*v13)(char *);
  _QWORD v15[2];

  v3 = v2;
  v15[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v10 = (_QWORD *)((char *)v15 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_190BBE11C(0, v8, v10);
    swift_retain();
    sub_190B619FC(v10, v8, a1, a2);
    if (v3)
      swift_willThrow();
    else
      a2 = v11;
    swift_release_n();
  }
  else
  {
    v12 = (unint64_t *)swift_slowAlloc();
    sub_190BBE11C(0, v8, v12);
    swift_retain();
    sub_190B619FC(v12, v8, a1, a2);
    a2 = v13;
    MEMORY[0x194017000](v12, -1, -1);
    swift_release_n();
  }
  swift_release();
  return a2;
}

void sub_190B619FC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v23 = a2;
  v24 = a1;
  v6 = type metadata accessor for AuthToken();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 64);
  v25 = 0;
  v26 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_20;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v27)
      goto LABEL_24;
    v18 = *(_QWORD *)(v26 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v27)
        goto LABEL_24;
      v18 = *(_QWORD *)(v26 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v27)
          goto LABEL_24;
        v18 = *(_QWORD *)(v26 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_19:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_20:
    sub_190B447F4(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v7 + 72) * v16, (uint64_t)v9);
    v20 = a4(v9);
    sub_190AE4930((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    if ((v20 & 1) != 0)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        sub_190B61C28(v24, v23, v25, (_QWORD *)a3);
        swift_release();
        return;
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v27)
    goto LABEL_24;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v27)
      goto LABEL_24;
    v18 = *(_QWORD *)(v26 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_190B61C28(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;

  v8 = type metadata accessor for AuthToken();
  v51 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v55 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v50 = (uint64_t)&v44 - v11;
  v12 = sub_190BE4628();
  v49 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v54 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v48 = (char *)&v44 - v15;
  if (!a3)
    return;
  if (a4[2] == a3)
  {
    swift_retain();
    return;
  }
  sub_190B620BC();
  v16 = sub_190BE5EC4();
  v17 = v16;
  v45 = a1;
  v46 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = v16 + 64;
  v47 = a4;
  while (1)
  {
    if (v18)
    {
      v52 = (v18 - 1) & v18;
      v53 = v19;
      v21 = __clz(__rbit64(v18)) | (v19 << 6);
      goto LABEL_25;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_39;
    if (v22 >= v46)
      return;
    v23 = v45[v22];
    v24 = v19 + 1;
    if (!v23)
    {
      v24 = v19 + 2;
      if (v19 + 2 >= v46)
        return;
      v23 = v45[v24];
      if (!v23)
      {
        v24 = v19 + 3;
        if (v19 + 3 >= v46)
          return;
        v23 = v45[v24];
        if (!v23)
          break;
      }
    }
LABEL_24:
    v52 = (v23 - 1) & v23;
    v53 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_25:
    v26 = v48;
    v27 = v49;
    v28 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v48, a4[6] + v28 * v21, v12);
    v29 = a4[7];
    v30 = *(_QWORD *)(v51 + 72);
    v31 = v29 + v30 * v21;
    v32 = v50;
    sub_190B447F4(v31, v50);
    v33 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v33(v54, v26, v12);
    sub_190B625DC(v32, v55, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    sub_190ADCAB4((unint64_t *)&qword_1ED032FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    v34 = sub_190BE4EEC();
    v35 = -1 << *(_BYTE *)(v17 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v20 + 8 * (v36 >> 6))) == 0)
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v35) >> 6;
      while (++v37 != v40 || (v39 & 1) == 0)
      {
        v41 = v37 == v40;
        if (v37 == v40)
          v37 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v20 + 8 * v37);
        if (v42 != -1)
        {
          v38 = __clz(__rbit64(~v42)) + (v37 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v38 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v20 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v20 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    v33((char *)(*(_QWORD *)(v17 + 48) + v38 * v28), v54, v12);
    sub_190B625DC(v55, *(_QWORD *)(v17 + 56) + v38 * v30, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    ++*(_QWORD *)(v17 + 16);
    if (__OFSUB__(a3--, 1))
      goto LABEL_38;
    a4 = v47;
    v18 = v52;
    v19 = v53;
    if (!a3)
      return;
  }
  v25 = v19 + 4;
  if (v19 + 4 >= v46)
    return;
  v23 = v45[v25];
  if (v23)
  {
    v24 = v19 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v46)
      return;
    v23 = v45[v24];
    ++v25;
    if (v23)
      goto LABEL_24;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_190B61FFC(uint64_t *a1, void (*a2)(uint64_t *))
{
  return sub_190B5C50C(*a1, a2);
}

uint64_t sub_190B62004()
{
  return sub_190B6167C();
}

uint64_t sub_190B6201C(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  return sub_190B5C69C(*a1, a2, a3, a4);
}

uint64_t sub_190B62024()
{
  return sub_190B5CFF4();
}

uint64_t sub_190B6202C(uint64_t *a1, void (*a2)(uint64_t *))
{
  return sub_190B5C82C(*a1, a2);
}

uint64_t sub_190B62034()
{
  return sub_190B5D014();
}

uint64_t sub_190B62044(uint64_t *a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4)
{
  return sub_190B5C9BC(*a1, a1[1], a2, a3, a4);
}

uint64_t sub_190B6205C()
{
  return sub_190B5D034();
}

uint64_t sub_190B62064()
{
  return sub_190B6205C();
}

uint64_t sub_190B62070(uint64_t *a1, void (*a2)(_QWORD *))
{
  return sub_190B5CCD4(*a1, a1[1], a2);
}

uint64_t sub_190B6208C(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B62070(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_190B620A0(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  return sub_190B5CE64(*a1, a2, a3, a4);
}

uint64_t sub_190B620AC(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B620A0(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_190B620BC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EE1FE4C0)
  {
    sub_190BE4628();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for AuthToken();
    sub_190ADCAB4((unint64_t *)&qword_1ED032FE0, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_190BE5ED0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EE1FE4C0);
  }
}

uint64_t sub_190B62150()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_0_28();
  return swift_deallocObject();
}

uint64_t sub_190B62170(uint64_t a1)
{
  uint64_t v1;

  return sub_190B5EBE0(a1, *(void **)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_190B62178()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_8();

  swift_release();
  OUTLINED_FUNCTION_92();
  return swift_deallocObject();
}

uint64_t sub_190B621A0(uint64_t a1)
{
  uint64_t v1;

  return sub_190B5F540(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190B621AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_190B60144(a1, a2);
}

void sub_190B621C4(uint64_t a1)
{
  uint64_t v1;

  sub_190B5FD30(a1, *(_QWORD *)(v1 + 16), "AuthTokenManager fetch failed for urls %{public}s, error=%{public}@");
}

void sub_190B621E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED02F3F8[0])
  {
    v2 = sub_190BE4628();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v4 = type metadata accessor for AuthToken();
    sub_190ADCAB4((unint64_t *)&qword_1ED032FE0, v3, MEMORY[0x1E0CB0018]);
    v6 = type metadata accessor for Manager(a1, v2, v4, v5);
    if (!v7)
      atomic_store(v6, qword_1ED02F3F8);
  }
}

uint64_t sub_190B62280(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B6201C(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190B62298(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B6202C(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_190B622A8()
{
  return sub_190B62034();
}

uint64_t sub_190B622B4(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B62044(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190B622C4()
{
  OUTLINED_FUNCTION_37_8();
  OUTLINED_FUNCTION_83();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_92();
  return swift_deallocObject();
}

uint64_t sub_190B622E8()
{
  uint64_t v0;

  return sub_190B5F8E0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_190B62304(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED02F060)
  {
    sub_190B62614(255, (unint64_t *)&qword_1ED02F340, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v5 = type metadata accessor for DeferredPromise(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED02F060);
  }
}

void sub_190B6236C()
{
  uint64_t v0;

  sub_190B61564(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_190B62378(uint64_t a1)
{
  uint64_t v1;

  sub_190B5FD30(a1, *(_QWORD *)(v1 + 16), "AuthTokenManager failed cache write for urls=%{public}s, error=%{public}@");
}

void sub_190B62398()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED02F348)
  {
    type metadata accessor for AuthToken();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED02F348);
  }
}

void sub_190B62400(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  OUTLINED_FUNCTION_70(a1, a2, a3);
  OUTLINED_FUNCTION_71_0(v3);
  OUTLINED_FUNCTION_0();
}

void sub_190B6242C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;

  sub_190AE48E8(0, a3, a4);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_0();
}

void sub_190B62478()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED02F378)
  {
    sub_190BE4628();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for AuthToken();
    sub_190ADCAB4((unint64_t *)&qword_1ED032FE0, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_190BE5E28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED02F378);
  }
}

uint64_t sub_190B6250C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B62550()
{
  return sub_190B62004();
}

void sub_190B6256C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED02EF90)
  {
    sub_190BE4628();
    type metadata accessor for AuthToken();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED02EF90);
  }
}

void sub_190B625DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0();
}

void sub_190B62614(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for AuthToken();
    v7 = a3(a1, MEMORY[0x1E0DEA968], v6, MEMORY[0x1E0DEA978]);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B62674()
{
  OUTLINED_FUNCTION_37_8();
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_0_28();
  return swift_deallocObject();
}

uint64_t sub_190B62690()
{
  uint64_t v0;

  return sub_190B5EFAC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

void sub_190B626AC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_190B5F1DC(a1, a2, a3);
}

void sub_190B626C0(uint64_t a1)
{
  uint64_t v1;

  sub_190B5FD30(a1, *(_QWORD *)(v1 + 16), "AuthTokenManager failed cache read for urls=%{public}s, error=%{public}@");
}

uint64_t sub_190B626E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_190B5F3F4(a1, a2, a3, a4, v4);
}

uint64_t objectdestroy_11Tm()
{
  OUTLINED_FUNCTION_83();
  swift_release();
  OUTLINED_FUNCTION_92();
  return swift_deallocObject();
}

uint64_t sub_190B62720(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B61FFC(a1, *(void (**)(uint64_t *))(v1 + 16));
}

unint64_t sub_190B62734()
{
  unint64_t result;

  result = qword_1EE1FFE38;
  if (!qword_1EE1FFE38)
  {
    result = MEMORY[0x194016EF8](&unk_190BEC030, &type metadata for AuthTokenManagerError);
    atomic_store(result, (unint64_t *)&qword_1EE1FFE38);
  }
  return result;
}

uint64_t sub_190B62770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190AE48E8(0, &qword_1ED02F270, (uint64_t (*)(uint64_t))sub_190B39CD4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for AuthTokenManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190B6280C + 4 * byte_190BEBF10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190B6282C + 4 * byte_190BEBF15[v4]))();
}

_BYTE *sub_190B6280C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190B6282C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B62834(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B6283C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B62844(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B6284C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenManagerError()
{
  return &type metadata for AuthTokenManagerError;
}

unint64_t sub_190B6286C()
{
  unint64_t result;

  result = qword_1EE1FFE40;
  if (!qword_1EE1FFE40)
  {
    result = MEMORY[0x194016EF8](&unk_190BEC008, &type metadata for AuthTokenManagerError);
    atomic_store(result, (unint64_t *)&qword_1EE1FFE40);
  }
  return result;
}

uint64_t dispatch thunk of NetworkEventHandlerType.handleNetworkEvent(_:urlRequest:requestID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_190B628F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD v22[5];
  uint64_t v23;

  v3 = v2;
  sub_190AC9FA0(a1, v22);
  v5 = v22[0];
  v23 = v22[1];
  v6 = v22[3];
  v7 = v22[4];
  v8 = (unint64_t)(v22[2] + 64) >> 6;
  result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v11 = v10 | (v6 << 6);
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v11);
    v20 = *v18;
    v19 = v18[1];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    String.write(to:)(a2, v16, v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    String.write(to:)(a2, v20, v19);
    v3 = 0;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_2;
LABEL_3:
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v12 >= v8)
      return swift_release();
    v13 = *(_QWORD *)(v23 + 8 * v12);
    if (!v13)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v8)
        return swift_release();
      v13 = *(_QWORD *)(v23 + 8 * v14);
      if (v13)
        goto LABEL_12;
      v14 = v6 + 3;
      if (v6 + 3 >= v8)
        return swift_release();
      v13 = *(_QWORD *)(v23 + 8 * v14);
      if (v13)
        goto LABEL_12;
      v14 = v6 + 4;
      if (v6 + 4 >= v8)
        return swift_release();
      v13 = *(_QWORD *)(v23 + 8 * v14);
      if (v13)
      {
LABEL_12:
        v12 = v14;
      }
      else
      {
        v12 = v6 + 5;
        if (v6 + 5 >= v8)
          return swift_release();
        v13 = *(_QWORD *)(v23 + 8 * v12);
        if (!v13)
        {
          v21 = v6 + 6;
          while (v21 < v8)
          {
            v13 = *(_QWORD *)(v23 + 8 * v21++);
            if (v13)
            {
              v12 = v21 - 1;
              goto LABEL_13;
            }
          }
          return swift_release();
        }
      }
    }
LABEL_13:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
  }
  __break(1u);
  return result;
}

void sub_190B62AD0()
{
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_40_0();
}

void sub_190B62B10()
{
  sub_190B62BB4();
  OUTLINED_FUNCTION_40_0();
}

void sub_190B62B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22_14();
  OUTLINED_FUNCTION_29_11(v0, v1, v2, v3, v4, v5, v6, v7, v8, *MEMORY[0x1E0C80C00]);
  OUTLINED_FUNCTION_10_26();
  OUTLINED_FUNCTION_9_24();
  OUTLINED_FUNCTION_2_38();
}

void sub_190B62BB4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_14();
  OUTLINED_FUNCTION_24_14(v0, *MEMORY[0x1E0C80C00], v1, SWORD2(v1), SBYTE6(v1), SHIBYTE(v1), v2);
  OUTLINED_FUNCTION_10_26();
  OUTLINED_FUNCTION_9_24();
  OUTLINED_FUNCTION_2_38();
}

void sub_190B62C0C()
{
  sub_190B62C50();
  OUTLINED_FUNCTION_40_0();
}

void sub_190B62C50()
{
  __int16 v0;
  __int16 v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_14();
  v2 = *MEMORY[0x1E0C80C00];
  v1 = v0;
  sub_190B1F838((uint64_t)&v1, (uint64_t)&v2);
  OUTLINED_FUNCTION_10_26();
  OUTLINED_FUNCTION_9_24();
  OUTLINED_FUNCTION_2_38();
}

void sub_190B62CBC()
{
  sub_190B62D00();
  OUTLINED_FUNCTION_40_0();
}

void sub_190B62D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  OUTLINED_FUNCTION_22_14();
  OUTLINED_FUNCTION_27_12(v0, v1, v2, v3, v4, v5, v6, v7, v8, v1, *MEMORY[0x1E0C80C00]);
  OUTLINED_FUNCTION_10_26();
  OUTLINED_FUNCTION_9_24();
  OUTLINED_FUNCTION_2_38();
}

void sub_190B62D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_22_14();
  OUTLINED_FUNCTION_29_11(v0, v1, v2, v3, v4, v5, v6, v7, v1, *MEMORY[0x1E0C80C00]);
  OUTLINED_FUNCTION_10_26();
  OUTLINED_FUNCTION_9_24();
  OUTLINED_FUNCTION_2_38();
}

void sub_190B62DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;

  OUTLINED_FUNCTION_22_14();
  OUTLINED_FUNCTION_27_12(v0, v1, v2, v3, v4, v5, v6, v7, v9, v8, *MEMORY[0x1E0C80C00]);
  OUTLINED_FUNCTION_10_26();
  OUTLINED_FUNCTION_9_24();
  OUTLINED_FUNCTION_2_38();
}

uint64_t sub_190B62E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  size_t v7;
  void *v8;
  uint64_t result;
  uint64_t __src;
  __int16 v11;
  char v12;
  char v13;
  char v14;
  char v15;

  __src = a1;
  v11 = a2;
  v12 = BYTE2(a2);
  v13 = BYTE3(a2);
  v14 = BYTE4(a2);
  v15 = BYTE5(a2);
  v4 = sub_190BE4820();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (void *)swift_slowAlloc();
  v7 = *(_QWORD *)(v5 + 64);
  if ((v7 & 0x8000000000000000) != 0)
  {
    result = sub_190BE5EDC();
    __break(1u);
  }
  else
  {
    v8 = v6;
    memcpy(v6, &__src, v7);
    (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(a3, v8, v4);
    return MEMORY[0x194017000](v8, -1, -1);
  }
  return result;
}

void sub_190B62F6C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_190B62FAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_190B62E20(v1, v3 & 0xFFFFFFFFFFFFLL, v2);
  return sub_190B637DC(v0);
}

void sub_190B630B4()
{
  OUTLINED_FUNCTION_5_25();
  __asm { BR              X10 }
}

void sub_190B630EC()
{
  uint64_t v0;

  *(_QWORD *)OUTLINED_FUNCTION_20_1() = v0;
  OUTLINED_FUNCTION_12_0();
}

double sub_190B63100()
{
  double v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  OUTLINED_FUNCTION_11_20(8);
  OUTLINED_FUNCTION_36_7(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  return v0;
}

void sub_190B631C8()
{
  sub_190B635C0();
}

void sub_190B631DC()
{
  OUTLINED_FUNCTION_5_25();
  __asm { BR              X10 }
}

void sub_190B63210()
{
  char v0;

  *(_BYTE *)OUTLINED_FUNCTION_20_1() = v0;
  OUTLINED_FUNCTION_12_0();
}

void sub_190B63224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  OUTLINED_FUNCTION_11_20(1);
  OUTLINED_FUNCTION_36_7(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_8_28();
}

void sub_190B632CC()
{
  sub_190B632E0();
}

void sub_190B632E0()
{
  OUTLINED_FUNCTION_5_25();
  __asm { BR              X10 }
}

void sub_190B63314()
{
  char v0;

  *(_BYTE *)OUTLINED_FUNCTION_20_1() = v0;
  OUTLINED_FUNCTION_12_0();
}

#error "190B63394: call analysis failed (funcsize=8)"

void sub_190B633C8()
{
  sub_190B633DC();
}

void sub_190B633DC()
{
  OUTLINED_FUNCTION_5_25();
  __asm { BR              X10 }
}

void sub_190B63410()
{
  __int16 v0;

  *(_WORD *)OUTLINED_FUNCTION_20_1() = v0;
  OUTLINED_FUNCTION_12_0();
}

#error "190B63490: call analysis failed (funcsize=7)"

void sub_190B634C4()
{
  sub_190B634D8();
}

void sub_190B634D8()
{
  OUTLINED_FUNCTION_5_25();
  __asm { BR              X10 }
}

void sub_190B6350C()
{
  int v0;

  *(_DWORD *)OUTLINED_FUNCTION_20_1() = v0;
  OUTLINED_FUNCTION_12_0();
}

#error "190B6358C: call analysis failed (funcsize=7)"

void sub_190B635C0()
{
  OUTLINED_FUNCTION_5_25();
  __asm { BR              X10 }
}

void sub_190B635F4()
{
  uint64_t v0;

  *(_QWORD *)OUTLINED_FUNCTION_20_1() = v0;
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_190B63604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  OUTLINED_FUNCTION_11_20(8);
  OUTLINED_FUNCTION_36_7(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  return v0;
}

void sub_190B636C8()
{
  OUTLINED_FUNCTION_5_25();
  __asm { BR              X10 }
}

void sub_190B63700()
{
  int v0;

  *(_DWORD *)OUTLINED_FUNCTION_20_1() = v0;
  OUTLINED_FUNCTION_12_0();
}

float sub_190B63714()
{
  float v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  OUTLINED_FUNCTION_11_20(4);
  OUTLINED_FUNCTION_36_7(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  return v0;
}

uint64_t sub_190B637DC(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_QWORD *)(*(_QWORD *)(sub_190BE4820() - 8) + 64);
  sub_190AFCA4C(v2, v3);
  sub_190B431C0(v4, v2, v3);
  v5 = *a1;
  v6 = a1[1];
  *(_OWORD *)a1 = v8;
  return sub_190AEF3F4(v5, v6);
}

uint64_t sub_190B63848@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  size_t v7;
  void *v8;
  uint64_t result;

  v4 = sub_190BE4820();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (void *)swift_slowAlloc();
  if (a1)
  {
    v7 = *(_QWORD *)(v5 + 64);
    if ((v7 & 0x8000000000000000) == 0)
    {
      v8 = v6;
      memmove(v6, a1, v7);
      (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(a2, v8, v4);
      return MEMORY[0x194017000](v8, -1, -1);
    }
  }
  else
  {
    __break(1u);
  }
  result = sub_190BE5EDC();
  __break(1u);
  return result;
}

void CodableError.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v4 = (void *)sub_190BE4538();
  v5 = objc_msgSend(v4, sel_domain);
  v6 = sub_190BE5000();
  v8 = v7;

  v9 = objc_msgSend(v4, sel_code);
  v10 = sub_190B63A90();

  *a2 = v6;
  a2[1] = v8;
  a2[2] = (uint64_t)v9;
  a2[3] = v10;
}

void CodableError.domain.getter()
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_0();
}

uint64_t CodableError.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CodableError.errorUserInfo.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

TeaFoundation::CodableError __swiftcall CodableError.init(_:)(NSError *a1)
{
  uint64_t *v1;
  uint64_t *v3;
  NSString *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSInteger v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  Swift::Int v12;
  void *v13;
  TeaFoundation::CodableError result;

  v3 = v1;
  v4 = -[NSError domain](a1, sel_domain);
  v5 = sub_190BE5000();
  v7 = v6;

  v8 = -[NSError code](a1, sel_code);
  v9 = sub_190B63A90();

  *v3 = v5;
  v3[1] = v7;
  v3[2] = v8;
  v3[3] = v9;
  result.errorUserInfo._rawValue = v13;
  result.errorCode = v12;
  result.domain._object = v11;
  result.domain._countAndFlagsBits = v10;
  return result;
}

uint64_t sub_190B63A90()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;

  v0 = sub_190BE4DFC();
  v1 = OUTLINED_FUNCTION_37_9();
  v2 = sub_190BE4DC0();

  sub_190BE5000();
  sub_190AC0FC8(v2, &v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    if ((OUTLINED_FUNCTION_26_8() & 1) != 0)
    {
      sub_190BE5000();
      swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v6 = v0;
      sub_190B0005C();
      v0 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_190AD9BB8((uint64_t)&v6);
  }
  v3 = OUTLINED_FUNCTION_37_9();
  v4 = sub_190BE4DC0();

  sub_190BE5000();
  sub_190AC0FC8(v4, &v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    if ((OUTLINED_FUNCTION_26_8() & 1) != 0)
    {
      sub_190BE5000();
      swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v6 = v0;
      sub_190B0005C();
      v0 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_190AD9BB8((uint64_t)&v6);
  }
  return v0;
}

void CodableError.write(to:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v5 = v1[2];
  v4 = v1[3];
  String.write(to:)(a1, *v1, v1[1]);
  if (!v2)
  {
    v14 = OUTLINED_FUNCTION_35_10(v6, v7, v8, v9, v10, v11, v12, v13, v5);
    v16 = v15;
    sub_190BE4724();
    v17 = sub_190AEF3F4(v14, v16);
    v25 = OUTLINED_FUNCTION_35_10(v17, v18, v19, v20, v21, v22, v23, v24, *(_QWORD *)(v4 + 16));
    v27 = v26;
    sub_190BE4724();
    sub_190AEF3F4(v25, v27);
    sub_190B628F0(v4, a1);
  }
}

uint64_t static CodableError.read(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = (uint64_t)static String.read(from:)(a1);
  if (!v2)
  {
    v7 = result;
    v8 = v6;
    sub_190B635C0();
    v10 = v9;
    result = sub_190B63E2C(a1);
    *a2 = v7;
    a2[1] = v8;
    a2[2] = v10;
    a2[3] = result;
  }
  return result;
}

uint64_t sub_190B63E2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_190BE5060();
  MEMORY[0x1E0C80A78](v4);
  sub_190B635C0();
  if (v2)
    return (uint64_t)v1;
  v6 = v5;
  if (v5 < 0)
  {
    sub_190B64F88();
    swift_allocError();
    v8 = 1;
    goto LABEL_6;
  }
  if (sub_190BE470C() < v5)
  {
    sub_190B64F88();
    swift_allocError();
    v8 = 2;
LABEL_6:
    *v7 = v8;
    swift_willThrow();
    return (uint64_t)v1;
  }
  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (!v6)
    return (uint64_t)v1;
  while (1)
  {
    sub_190BC4528(a1);
    sub_190BE5048();
    sub_190ACF6F0(0, &qword_1ED033D98, MEMORY[0x1E0DEDE70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_190B64F30();
    v31 = sub_190BE5024();
    v11 = v10;
    swift_bridgeObjectRelease();
    if (!v11)
    {
      sub_190B64F88();
      swift_allocError();
      *v27 = 0;
      swift_willThrow();
LABEL_23:
      swift_bridgeObjectRelease();
      return (uint64_t)v1;
    }
    sub_190BC4528(a1);
    sub_190BE5048();
    v12 = sub_190BE5024();
    v14 = v13;
    swift_bridgeObjectRelease();
    if (!v14)
    {
      sub_190B64F88();
      swift_allocError();
      *v28 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v29 = v12;
    v30 = v14;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_isUniquelyReferenced_nonNull_native();
    v15 = sub_190AEABD0();
    if (__OFADD__(v1[2], (v16 & 1) == 0))
      break;
    v17 = v15;
    v18 = v16;
    sub_190B64FC4(0, (unint64_t *)&qword_1ED0328B8, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DECB20]);
    if ((sub_190BE5E04() & 1) != 0)
    {
      v19 = sub_190AEABD0();
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_26;
      v17 = v19;
    }
    if ((v18 & 1) != 0)
    {
      v21 = (uint64_t *)(v1[7] + 16 * v17);
      swift_bridgeObjectRelease();
      *v21 = v29;
      v21[1] = v30;
    }
    else
    {
      v1[(v17 >> 6) + 8] |= 1 << v17;
      v22 = (uint64_t *)(v1[6] + 16 * v17);
      *v22 = v31;
      v22[1] = v11;
      v23 = (uint64_t *)(v1[7] + 16 * v17);
      *v23 = v29;
      v23[1] = v30;
      v24 = v1[2];
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        goto LABEL_25;
      v1[2] = v26;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v6)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_190BE626C();
  __break(1u);
  return result;
}

uint64_t sub_190B641F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_190BE60BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x646F43726F727265 && a2 == 0xE900000000000065;
    if (v6 || (sub_190BE60BC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x657355726F727265 && a2 == 0xED00006F666E4972)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_190BE60BC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_190B6436C()
{
  return 3;
}

uint64_t sub_190B64374(char a1)
{
  if (!a1)
    return 0x6E69616D6F64;
  if (a1 == 1)
    return 0x646F43726F727265;
  return 0x657355726F727265;
}

uint64_t sub_190B643D8()
{
  char *v0;

  return sub_190B64374(*v0);
}

uint64_t sub_190B643E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190B641F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190B64404@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190B6436C();
  *a1 = result;
  return result;
}

uint64_t sub_190B64428()
{
  sub_190B64604();
  return sub_190BE6404();
}

uint64_t sub_190B64450()
{
  sub_190B64604();
  return sub_190BE6410();
}

void CodableError.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];
  char v12;
  char v13;
  char v14;

  sub_190B64814(0, &qword_1EE1FFE48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[0] = *(_QWORD *)(v1 + 24);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B64604();
  sub_190BE6374();
  v14 = 0;
  v9 = v11[2];
  sub_190BE5F6C();
  if (!v9)
  {
    v10 = v11[0];
    v13 = 1;
    sub_190BE5F84();
    v11[3] = v10;
    v12 = 2;
    sub_190B64FC4(0, &qword_1EE1FFE58, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DEA048]);
    sub_190B64870(&qword_1EE1FFE60, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_190BE5F90();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_1_5();
}

unint64_t sub_190B64604()
{
  unint64_t result;

  result = qword_1EE1FFE50;
  if (!qword_1EE1FFE50)
  {
    result = MEMORY[0x194016EF8](&unk_190BEC264, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1FFE50);
  }
  return result;
}

void CodableError.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_190B64814(0, &qword_1EE1FFE68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B64604();
  sub_190BE6344();
  if (v2)
  {
    OUTLINED_FUNCTION_34_11();
  }
  else
  {
    v6 = sub_190BE5F18();
    v8 = v7;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v9 = sub_190BE5F30();
    sub_190B64FC4(0, &qword_1EE1FFE58, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DEA048]);
    sub_190B64870(&qword_1EE1FFE70, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_190BE5F3C();
    OUTLINED_FUNCTION_19_1();
    *a2 = v6;
    a2[1] = v8;
    a2[2] = v9;
    a2[3] = v10;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    OUTLINED_FUNCTION_34_11();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1_5();
}

void sub_190B64814(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_190B64604();
    v7 = a3(a1, &type metadata for CodableError.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_190B64870(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_190B64FC4(255, &qword_1EE1FFE58, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DEA048]);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x194016EF8](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190B648DC()
{
  sub_190B64B18();
  return sub_190BE62A8();
}

uint64_t sub_190B64904()
{
  sub_190B64B18();
  return sub_190BE629C();
}

void sub_190B6493C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  CodableError.init(from:)(a1, a2);
}

void sub_190B64950(_QWORD *a1)
{
  CodableError.encode(to:)(a1);
}

void sub_190B64964(uint64_t a1)
{
  CodableError.write(to:)(a1);
}

uint64_t sub_190B64978@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return static CodableError.read(from:)(a1, a2);
}

uint64_t storeEnumTagSinglePayload for CodableError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B649D8 + 4 * byte_190BEC08D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B64A0C + 4 * byte_190BEC088[v4]))();
}

uint64_t sub_190B64A0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B64A14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B64A1CLL);
  return result;
}

uint64_t sub_190B64A28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B64A30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B64A34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B64A3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableError.CodingKeys()
{
  return &type metadata for CodableError.CodingKeys;
}

unint64_t sub_190B64A5C()
{
  unint64_t result;

  result = qword_1EE1FFE78;
  if (!qword_1EE1FFE78)
  {
    result = MEMORY[0x194016EF8](&unk_190BEC23C, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1FFE78);
  }
  return result;
}

unint64_t sub_190B64A9C()
{
  unint64_t result;

  result = qword_1EE1FFE80;
  if (!qword_1EE1FFE80)
  {
    result = MEMORY[0x194016EF8](&unk_190BEC1AC, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1FFE80);
  }
  return result;
}

unint64_t sub_190B64ADC()
{
  unint64_t result;

  result = qword_1EE1FFE88;
  if (!qword_1EE1FFE88)
  {
    result = MEMORY[0x194016EF8](&unk_190BEC1D4, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1FFE88);
  }
  return result;
}

unint64_t sub_190B64B18()
{
  unint64_t result;

  result = qword_1EE1FFE90;
  if (!qword_1EE1FFE90)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1EE1FFE90);
  }
  return result;
}

uint64_t sub_190B64B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  char *v7;

  result = sub_190BE446C();
  v7 = (char *)result;
  if (result)
  {
    result = sub_190BE4484();
    if (__OFSUB__(a1, result))
      goto LABEL_7;
    v7 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_190BE4478();
    return sub_190B63848(v7, a3);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

_QWORD *sub_190B64BE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  _QWORD *v5;

  v2 = sub_190BE446C();
  if (v2)
  {
    v3 = v2;
    result = (_QWORD *)sub_190BE4484();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v5 = (_QWORD *)(v3 + a1 - (_QWORD)result);
  }
  else
  {
    v5 = 0;
  }
  sub_190BE4478();
  result = (_QWORD *)swift_slowAlloc();
  if (v5)
  {
    *result = *v5;
    return (_QWORD *)MEMORY[0x194017000]();
  }
LABEL_8:
  __break(1u);
  return result;
}

_BYTE *sub_190B64C78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *result;
  char *v5;
  char v6;
  uint64_t v7;

  v2 = sub_190BE446C();
  if (v2)
  {
    v3 = v2;
    result = (_BYTE *)sub_190BE4484();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v5 = (char *)(v3 + a1 - (_QWORD)result);
  }
  else
  {
    v5 = 0;
  }
  sub_190BE4478();
  result = (_BYTE *)swift_slowAlloc();
  if (v5)
  {
    v6 = *v5;
    *result = *v5;
    v7 = v6 & 1;
    MEMORY[0x194017000]();
    return (_BYTE *)v7;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_190B64D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;

  if (OUTLINED_FUNCTION_17_15())
  {
    v2 = OUTLINED_FUNCTION_28_13();
    if (__OFSUB__(v0, v2))
    {
      __break(1u);
      goto LABEL_8;
    }
    v3 = (_BYTE *)(v1 + v0 - v2);
  }
  else
  {
    v3 = 0;
  }
  sub_190BE4478();
  v4 = (_BYTE *)OUTLINED_FUNCTION_20_1();
  if (v3)
  {
    *v4 = *v3;
    OUTLINED_FUNCTION_12_0();
  }
LABEL_8:
  __break(1u);
}

void sub_190B64D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;
  _WORD *v4;

  if (OUTLINED_FUNCTION_17_15())
  {
    v2 = OUTLINED_FUNCTION_28_13();
    if (__OFSUB__(v0, v2))
    {
      __break(1u);
      goto LABEL_8;
    }
    v3 = (_WORD *)(v1 + v0 - v2);
  }
  else
  {
    v3 = 0;
  }
  sub_190BE4478();
  v4 = (_WORD *)OUTLINED_FUNCTION_20_1();
  if (v3)
  {
    *v4 = *v3;
    OUTLINED_FUNCTION_12_0();
  }
LABEL_8:
  __break(1u);
}

void sub_190B64DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  _DWORD *v4;

  if (OUTLINED_FUNCTION_17_15())
  {
    v2 = OUTLINED_FUNCTION_28_13();
    if (__OFSUB__(v0, v2))
    {
      __break(1u);
      goto LABEL_8;
    }
    v3 = (_DWORD *)(v1 + v0 - v2);
  }
  else
  {
    v3 = 0;
  }
  sub_190BE4478();
  v4 = (_DWORD *)OUTLINED_FUNCTION_20_1();
  if (v3)
  {
    *v4 = *v3;
    OUTLINED_FUNCTION_12_0();
  }
LABEL_8:
  __break(1u);
}

void sub_190B64E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  if (OUTLINED_FUNCTION_17_15())
  {
    v2 = OUTLINED_FUNCTION_28_13();
    if (__OFSUB__(v0, v2))
    {
      __break(1u);
      goto LABEL_8;
    }
    v3 = (_QWORD *)(v1 + v0 - v2);
  }
  else
  {
    v3 = 0;
  }
  sub_190BE4478();
  v4 = (_QWORD *)OUTLINED_FUNCTION_20_1();
  if (v3)
  {
    *v4 = *v3;
    OUTLINED_FUNCTION_12_0();
  }
LABEL_8:
  __break(1u);
}

_DWORD *sub_190B64E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _DWORD *result;
  _DWORD *v5;

  v2 = sub_190BE446C();
  if (v2)
  {
    v3 = v2;
    result = (_DWORD *)sub_190BE4484();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v5 = (_DWORD *)(v3 + a1 - (_QWORD)result);
  }
  else
  {
    v5 = 0;
  }
  sub_190BE4478();
  result = (_DWORD *)swift_slowAlloc();
  if (v5)
  {
    *result = *v5;
    return (_DWORD *)MEMORY[0x194017000]();
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_190B64F30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED033DA0[0];
  if (!qword_1ED033DA0[0])
  {
    sub_190ACF6F0(255, &qword_1ED033D98, MEMORY[0x1E0DEDE70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, qword_1ED033DA0);
  }
  return result;
}

unint64_t sub_190B64F88()
{
  unint64_t result;

  result = qword_1EE1FFE98[0];
  if (!qword_1EE1FFE98[0])
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for BinaryDecoder.Error, &type metadata for BinaryDecoder.Error);
    atomic_store(result, qword_1EE1FFE98);
  }
  return result;
}

void sub_190B64FC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(a1, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978]);
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B65018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v4 = sub_190BE43A0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - v9;
  v11 = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(a1 + 16);
  if (v29)
  {
    v25 = v2;
    v26 = (char *)&v25 - v9;
    v12 = 0;
    v27 = v4;
    v28 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v14 = a1;
      v32 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, a1 + v13 + v32 * v12, v4);
      sub_190BE4388();
      v15 = sub_190BE5084();
      v16 = v10;
      v18 = v17;
      swift_bridgeObjectRelease();
      sub_190B59FCC(v15, v18, v31);
      v20 = v19;
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v16, v4);
        v10 = v16;
        a1 = v14;
      }
      else
      {
        v21 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v21(v30, v16, v4);
        v22 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190B3BD70(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v33;
        }
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_190B3BD70(v23 > 1, v24 + 1, 1);
          v22 = v33;
        }
        *(_QWORD *)(v22 + 16) = v24 + 1;
        v4 = v27;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v22 + v13 + v24 * v32, v30, v27);
        v33 = v22;
        a1 = v28;
        v10 = v26;
      }
      if (v29 == ++v12)
      {
        v11 = v33;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

Swift::Bool __swiftcall URL.isHTTPURL()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v0 = sub_190BE4628();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_0();
  v4 = v3 - v2;
  v5 = sub_190BE45EC();
  if (v6)
  {
    if (v5 == 1886680168 && v6 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_35();
LABEL_16:
      OUTLINED_FUNCTION_15_1(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      v12 = 1;
      return v12 & 1;
    }
    v8 = OUTLINED_FUNCTION_14();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_35();
    if ((v8 & 1) != 0)
      goto LABEL_16;
  }
  else
  {
    OUTLINED_FUNCTION_3_35();
  }
  v9 = sub_190BE45EC();
  if (v10)
  {
    if (v9 == 0x7370747468 && v10 == 0xE500000000000000)
      v12 = 1;
    else
      v12 = OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_15_1(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_15_1(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v12 = 0;
  }
  return v12 & 1;
}

Swift::String_optional __swiftcall URL.queryItem(for:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  unint64_t *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  void *v37;
  char v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  Swift::String_optional result;
  uint64_t v49[5];
  char *v50;
  uint64_t v51;
  uint64_t v52;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = sub_190BE43A0();
  v52 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_0();
  v7 = v6 - v5;
  OUTLINED_FUNCTION_7_21(v8, qword_1ED032340, v9);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_13_21(v11, v49[0]);
  v12 = OUTLINED_FUNCTION_14_18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_4_0();
  v16 = v15 - v14;
  OUTLINED_FUNCTION_7_21(v17, (unint64_t *)&qword_1ED033970, v18);
  OUTLINED_FUNCTION_28();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v49 - v23;
  sub_190BE43DC();
  sub_190AFFEFC((uint64_t)v24, (uint64_t)v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v12) == 1)
  {
    v25 = MEMORY[0x1E0CAE890];
    sub_190B656E8((uint64_t)v24, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v26 = (uint64_t)v22;
    v27 = (unint64_t *)&qword_1ED033970;
    v28 = (void (*)(uint64_t))v25;
LABEL_19:
    sub_190B656E8(v26, v27, v28);
    goto LABEL_20;
  }
  v50 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16, v22, v12);
  v29 = sub_190BE43C4();
  v30 = v29;
  if (v29)
  {
    v49[4] = v16;
    v31 = *(_QWORD *)(v29 + 16);
    if (v31)
    {
      v49[2] = v13;
      v49[3] = v12;
      OUTLINED_FUNCTION_16_18();
      v33 = v30 + v32;
      v35 = *(_QWORD *)(v34 + 72);
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
      v49[1] = v30;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      while (1)
      {
        v36(v7, v33, v3);
        if (sub_190BE4388() == countAndFlagsBits && v37 == object)
          break;
        v39 = OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_62();
        if ((v39 & 1) != 0)
          goto LABEL_16;
        OUTLINED_FUNCTION_11_21();
        OUTLINED_FUNCTION_15_1(v7, v40);
        v33 += v35;
        if (!--v31)
        {
          OUTLINED_FUNCTION_62();
          v41 = 1;
          v42 = v51;
          goto LABEL_17;
        }
      }
      OUTLINED_FUNCTION_62();
LABEL_16:
      swift_bridgeObjectRelease();
      v42 = v51;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v7, v3);
      v41 = 0;
    }
    else
    {
      v41 = 1;
      v42 = v51;
    }
LABEL_17:
    __swift_storeEnumTagSinglePayload(v42, v41, 1, v3);
    OUTLINED_FUNCTION_62();
    if (__swift_getEnumTagSinglePayload(v42, 1, v3) != 1)
    {
      sub_190BE4394();
      v46 = OUTLINED_FUNCTION_6_32();
      OUTLINED_FUNCTION_15_19(v46, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
      OUTLINED_FUNCTION_11_21();
      OUTLINED_FUNCTION_15_1(v42, v47);
      goto LABEL_20;
    }
    v43 = OUTLINED_FUNCTION_6_32();
    OUTLINED_FUNCTION_15_19(v43, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v27 = qword_1ED032340;
    v28 = (void (*)(uint64_t))MEMORY[0x1E0CAE690];
    v26 = v42;
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_6_32();
  sub_190B656E8((uint64_t)v50, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
LABEL_20:
  OUTLINED_FUNCTION_0_0();
  result.value._object = v45;
  result.value._countAndFlagsBits = v44;
  return result;
}

uint64_t sub_190B656E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  OUTLINED_FUNCTION_7_21(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t URL.removingQueryItems(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v6 = sub_190BE4628();
  v7 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_0();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_14_18();
  v13 = (void (*)(uint64_t))MEMORY[0x1E0CAE890];
  v43 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_4_0();
  v42 = v16 - v15;
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED034BC0, v7);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_13_21(v18, v38);
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, v13);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v38 = v3;
    v39 = v11;
    v40 = v8;
    v41 = a2;
    v45 = MEMORY[0x1E0DEE9D8];
    sub_190AD2C9C();
    v23 = v45;
    v24 = a1 + 40;
    do
    {
      v25 = sub_190BE5084();
      v27 = v26;
      v45 = v23;
      v28 = *(_QWORD *)(v23 + 16);
      if (v28 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_190AD2C9C();
        v23 = v45;
      }
      v24 += 16;
      *(_QWORD *)(v23 + 16) = v28 + 1;
      v29 = v23 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v25;
      *(_QWORD *)(v29 + 40) = v27;
      --v22;
    }
    while (v22);
    v8 = v40;
    a2 = v41;
    v3 = v38;
    v11 = v39;
  }
  sub_190B2FD48();
  v31 = v30;
  sub_190BE43DC();
  sub_190B65A00((uint64_t)v21, v31);
  OUTLINED_FUNCTION_62();
  if (OUTLINED_FUNCTION_9_25())
    swift_bridgeObjectRelease();
  else
    sub_190BE43D0();
  v32 = OUTLINED_FUNCTION_9_25();
  v33 = v44;
  if (v32)
  {
    __swift_storeEnumTagSinglePayload(v44, 1, 1, v6);
  }
  else
  {
    v34 = v42;
    v35 = v43;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v42, v21, v12);
    sub_190BE43E8();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v12);
  }
  OUTLINED_FUNCTION_17_0(v11, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  if (__swift_getEnumTagSinglePayload(v33, 1, v6) == 1)
  {
    OUTLINED_FUNCTION_17_0(a2, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    v36 = sub_190B656E8(v33, (unint64_t *)&qword_1ED034BC0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v6);
    v36 = OUTLINED_FUNCTION_17_0(a2, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  }
  return OUTLINED_FUNCTION_15_19(v36, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
}

uint64_t sub_190B65A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-v5];
  v7 = sub_190BE4448();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_190AFFEFC(a1, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    sub_190B656E8((uint64_t)v6, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    return 0;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
  v11 = sub_190BE43C4();
  if (!v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  v12 = v11;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v13 = sub_190B65018(v12, a2);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

Swift::String_optional __swiftcall URL.hashParameter(for:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  void *v26;
  char v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  void *v33;
  Swift::String_optional result;
  _QWORD v35[4];
  char *v36;
  uint64_t v37;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = sub_190BE43A0();
  v37 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_0();
  v7 = v6 - v5;
  OUTLINED_FUNCTION_7_21(v8, qword_1ED032340, v9);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v35 - v11;
  v13 = OUTLINED_FUNCTION_14_18();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_4_0();
  v17 = v16 - v15;
  sub_190BE443C();
  sub_190BE4610();
  sub_190BE440C();
  v18 = sub_190BE43C4();
  v19 = v18;
  if (v18)
  {
    v20 = *(_QWORD *)(v18 + 16);
    if (v20)
    {
      v35[1] = v17;
      v35[2] = v14;
      v35[3] = v13;
      v36 = v12;
      OUTLINED_FUNCTION_16_18();
      v22 = v19 + v21;
      v24 = *(_QWORD *)(v23 + 72);
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
      v35[0] = v19;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      while (1)
      {
        v25(v7, v22, v3);
        if (sub_190BE4388() == countAndFlagsBits && v26 == object)
          break;
        v28 = OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_62();
        if ((v28 & 1) != 0)
          goto LABEL_14;
        OUTLINED_FUNCTION_11_21();
        OUTLINED_FUNCTION_15_1(v7, v29);
        v22 += v24;
        if (!--v20)
        {
          OUTLINED_FUNCTION_62();
          v30 = 1;
          v12 = v36;
          goto LABEL_15;
        }
      }
      OUTLINED_FUNCTION_62();
LABEL_14:
      swift_bridgeObjectRelease();
      v12 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v36, v7, v3);
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
LABEL_15:
    __swift_storeEnumTagSinglePayload((uint64_t)v12, v30, 1, v3);
    OUTLINED_FUNCTION_62();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v3) == 1)
    {
      OUTLINED_FUNCTION_5_26();
      sub_190B656E8((uint64_t)v12, qword_1ED032340, (void (*)(uint64_t))MEMORY[0x1E0CAE690]);
    }
    else
    {
      sub_190BE4394();
      OUTLINED_FUNCTION_5_26();
      OUTLINED_FUNCTION_11_21();
      OUTLINED_FUNCTION_15_1((uint64_t)v12, v31);
    }
  }
  else
  {
    OUTLINED_FUNCTION_5_26();
  }
  OUTLINED_FUNCTION_0_0();
  result.value._object = v33;
  result.value._countAndFlagsBits = v32;
  return result;
}

void sub_190B65D9C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  a3(v3);
  OUTLINED_FUNCTION_10_6();
}

uint64_t TestDataLoader.contentDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t TestDataLoader.__allocating_init(_:contentDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  TestDataLoader.init(_:contentDirectory:)(a1, a2, a3);
  return v6;
}

_QWORD *TestDataLoader.init(_:contentDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v6 = *v3;
  sub_190B660A0();
  v8 = v7;
  v10 = v9;
  v24 = *(_QWORD *)(v6 + 80);
  v23 = *(_QWORD *)(v6 + 88);
  (*(void (**)(void))(v23 + 8))();
  sub_190B66154();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_190BE5114();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_bridgeObjectRelease();
    v11 = sub_190B66154();
    v13 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = sub_190B66154();
    v13 = v14;
  }
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = (void *)sub_190BE4FDC();
  v17 = objc_msgSend(v15, sel_fileExistsAtPath_, v16);

  if (v17)
  {
    OUTLINED_FUNCTION_0_49();
    if (a3)
    {
      swift_bridgeObjectRelease();
      v10 = a3;
      v18 = a2;
    }
    else
    {
      v18 = v8;
    }
    v25[4] = v18;
    v25[5] = v10;
    v25[2] = v11;
    v25[3] = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = type metadata accessor for TestDataLoader.TestDataError(0, v24, v23, v19);
    MEMORY[0x194016EF8](&protocol conformance descriptor for TestDataLoader<A>.TestDataError, v20);
    swift_allocError();
    *v21 = 0;
    swift_willThrow();
    OUTLINED_FUNCTION_0_49();
    swift_deallocPartialClassInstance();
  }
  return v25;
}

void sub_190B660A0()
{
  NSArray *v0;
  uint64_t v1;

  v0 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  v1 = sub_190BE530C();

  if (*(_QWORD *)(v1 + 16))
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_bridgeObjectRelease();
    sub_190B66154();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_190B66154()
{
  uint64_t v1;

  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v1 = sub_190BE51B0();
  sub_190BE50FC();
  return v1;
}

uint64_t type metadata accessor for TestDataLoader.TestDataError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TestDataLoader.TestDataError);
}

void TestDataLoader.loadDataWithType<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD v7[4];
  uint64_t v8;

  type metadata accessor for Promise(0, a2, a3, a4);
  v7[2] = a2;
  v7[3] = a3;
  v8 = v4;
  Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B6633C, (uint64_t)v7);
}

void sub_190B66234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;

  v13 = *a5;
  TestDataLoader.loadData()(a1, a2, a3, a4);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = *(_QWORD *)(v13 + 80);
  v14[3] = a6;
  v14[4] = *(_QWORD *)(v13 + 88);
  v14[5] = a7;
  v14[6] = a1;
  v14[7] = a2;
  v14[8] = a3;
  v14[9] = a4;
  v15 = qword_1ED035648;
  swift_retain();
  swift_retain();
  if (v15 != -1)
    swift_once();
  v16 = (id)qword_1ED035618;
  sub_190B2C538();
  swift_release();
  swift_release();
  swift_release();

}

void sub_190B6633C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190B66234(a1, a2, a3, a4, *(uint64_t **)(v4 + 32), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void TestDataLoader.loadData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_190B4CE10(0, a2, a3, a4);
  OUTLINED_FUNCTION_24();
  sub_190B20FBC((void (*)(uint64_t (*)(uint64_t *), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190B667A8);
}

void sub_190B66388(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void *);

  v25 = a8;
  v26 = a5;
  v27 = a4;
  v23 = a3;
  v24 = a2;
  v12 = *(_QWORD *)(a7 - 8);
  v13 = (uint64_t *)MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v13;
  v17 = v13[1];
  type metadata accessor for _TeaJSONDecoder();
  swift_initStackObject();
  _TeaJSONDecoder.init()();
  sub_190AFC3BC(a7, v16, v17, a7, a9, (uint64_t)v15);
  swift_release();
  if (v9)
  {
    v19 = type metadata accessor for TestDataLoader.TestDataError(0, a6, v25, v18);
    MEMORY[0x194016EF8](&protocol conformance descriptor for TestDataLoader<A>.TestDataError, v19);
    v20 = (void *)swift_allocError();
    *v21 = v9;
    v22 = v9;
    v27(v20);

  }
  else
  {
    v24(v15);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a7);
  }
}

uint64_t sub_190B664F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v25 = a3;
  v26 = a4;
  v8 = sub_190BE4C40();
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190BE4C88();
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190BE4C4C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  sub_190AC4980();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF540], v14);
  swift_retain();
  v19 = (void *)sub_190BE5948();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v20 = (_QWORD *)swift_allocObject();
  v21 = v25;
  v22 = v26;
  v20[2] = a5;
  v20[3] = v21;
  v20[4] = v22;
  v20[5] = sub_190B66E34;
  v20[6] = v18;
  aBlock[4] = sub_190B66E90;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_9;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_190BE4C64();
  v30 = MEMORY[0x1E0DEE9D8];
  sub_190AC2574((unint64_t *)&qword_1ED034E18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_190ADCAF0();
  sub_190AC2574((unint64_t *)&qword_1ED034E28, (uint64_t (*)(uint64_t))sub_190ADCAF0, MEMORY[0x1E0DEAF38]);
  sub_190BE5B70();
  MEMORY[0x194015BC0](0, v13, v10, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  return swift_release();
}

uint64_t sub_190B667A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_190B664F4(a1, a2, a3, a4, v4);
}

void sub_190B667B0(uint64_t *a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t, unint64_t))
{
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;

  v6 = *a1;
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v8 = (void *)sub_190BE4FDC();
  v9 = objc_msgSend(v7, sel_contentsAtPath_, v8);

  if (v9)
  {
    v11 = sub_190BE46F4();
    v13 = v12;

    a4(v11, v13);
    sub_190AEF3F4(v11, v13);
  }
  else
  {
    v14 = type metadata accessor for TestDataLoader.TestDataError(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v10);
    MEMORY[0x194016EF8](&protocol conformance descriptor for TestDataLoader<A>.TestDataError, v14);
    v15 = (void *)swift_allocError();
    *v16 = 0;
    a2();

  }
}

uint64_t TestDataLoader.syncLoadDataWithType<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  dispatch_semaphore_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v26 = a4;
  v8 = *v4;
  v9 = sub_190BE4CAC();
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = dispatch_semaphore_create(0);
  v23 = sub_190BE59A8();
  v13 = swift_allocBox();
  v15 = v14;
  __swift_storeEnumTagSinglePayload(v14, 1, 1, a2);
  v27 = a2;
  v28 = a3;
  v29 = v4;
  v30 = a1;
  firstly<A>(closure:)((uint64_t (*)(void))sub_190B66B1C);
  v16 = (_QWORD *)OUTLINED_FUNCTION_24();
  v16[2] = *(_QWORD *)(v8 + 80);
  v16[3] = a2;
  v16[4] = *(_QWORD *)(v8 + 88);
  v16[5] = a3;
  v16[6] = v13;
  swift_retain();
  v17 = (void *)sub_190AC06B8(a2, MEMORY[0x1E0DEE9C0] + 8);
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  v18 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v18 + 16) = v12;
  v19 = qword_1ED035648;
  v20 = v12;
  if (v19 != -1)
    swift_once();
  v21 = (id)qword_1ED035618;
  sub_190B22144((uint64_t)v21, (uint64_t)sub_190B66C94, v18);
  swift_release();
  swift_release();
  swift_release();

  sub_190BE4C94();
  sub_190BE5954();

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v26, v15);
  return swift_release();
}

void sub_190B66B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  TestDataLoader.loadDataWithType<A>(_:)(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_190B66B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_190BE59A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v9, a1, a4);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
}

uint64_t sub_190B66C2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B66C50(uint64_t a1)
{
  uint64_t *v1;

  return sub_190B66B48(a1, v1[6], v1[2], v1[3]);
}

uint64_t sub_190B66C70()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_190B66C94()
{
  return sub_190BE596C();
}

uint64_t TestDataLoader.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TestDataLoader.__deallocating_deinit()
{
  TestDataLoader.deinit();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of TestDataLocatorType.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_190B66D00()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TestDataLoader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TestDataLoader);
}

uint64_t method lookup function for TestDataLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TestDataLoader.__allocating_init(_:contentDirectory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *initializeBufferWithCopyOfBuffer for SafeishError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for SafeishError(id *a1)
{

}

void **assignWithCopy for SafeishError(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for SafeishError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_190B66E10()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190B66E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD *);
  _QWORD v4[2];

  v3 = *(void (**)(_QWORD *))(v2 + 16);
  v4[0] = a1;
  v4[1] = a2;
  v3(v4);
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_190B66E5C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190B66E90()
{
  uint64_t v0;

  sub_190B667B0(*(uint64_t **)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t, unint64_t))(v0 + 40));
}

uint64_t sub_190B66EA0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190B66ECC(uint64_t a1)
{
  uint64_t v1;

  sub_190B66388(a1, *(void (**)(char *))(v1 + 48), *(_QWORD *)(v1 + 56), *(void (**)(void *))(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_190B67108()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_19_17();
  swift_getMetatypeMetadata();
  v1 = objc_allocWithZone((Class)TFKey);
  v9 = OUTLINED_FUNCTION_1_7((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v0);
  v10 = objc_msgSend(v9, sel_address);

  v11 = OUTLINED_FUNCTION_5();
  v12 = OUTLINED_FUNCTION_2_39(v11);
  OUTLINED_FUNCTION_3_36(v12, (void (*)(_QWORD *))sub_190B67F80, v13, v14, v15, v16, v17, v18, (uint64_t)v10);
  OUTLINED_FUNCTION_7_30();
  OUTLINED_FUNCTION_15_20();
  if (v9)
  {
    v19 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_9_26(v19);
  }
  else
  {
    OUTLINED_FUNCTION_8_29();
  }
  OUTLINED_FUNCTION_21();
}

void sub_190B67398()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_14_19();
  swift_getMetatypeMetadata();
  v1 = objc_allocWithZone((Class)TFKey);
  v9 = OUTLINED_FUNCTION_1_7((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v0);
  objc_msgSend(v9, sel_address);
  OUTLINED_FUNCTION_18_18();

  v10 = OUTLINED_FUNCTION_5();
  v11 = OUTLINED_FUNCTION_2_39(v10);
  OUTLINED_FUNCTION_3_36(v11, (void (*)(_QWORD *))sub_190B67FC4, v12, v13, v14, v15, v16, v17, v0);
  OUTLINED_FUNCTION_7_30();
  OUTLINED_FUNCTION_15_20();
  if (v9)
  {
    v18 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_9_26(v18);
  }
  else
  {
    OUTLINED_FUNCTION_8_29();
  }
  OUTLINED_FUNCTION_3_9();
}

uint64_t sub_190B6753C(_QWORD *a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 104))(v3, v4);
  a2();
  return swift_unknownObjectRelease();
}

void sub_190B677DC()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_19_17();
  OUTLINED_FUNCTION_17_1();
  v1 = objc_allocWithZone((Class)TFKey);
  v2 = v0;
  v10 = OUTLINED_FUNCTION_1_7((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  v11 = objc_msgSend(v10, sel_address);

  v12 = OUTLINED_FUNCTION_5();
  v13 = OUTLINED_FUNCTION_2_39(v12);
  OUTLINED_FUNCTION_3_36(v13, (void (*)(_QWORD *))sub_190B67FC4, v14, v15, v16, v17, v18, v19, (uint64_t)v11);
  OUTLINED_FUNCTION_7_30();
  OUTLINED_FUNCTION_15_20();
  if (v10)
  {
    v20 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_9_26(v20);
  }
  else
  {
    OUTLINED_FUNCTION_8_29();
  }
  OUTLINED_FUNCTION_21();
}

void sub_190B67B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *(*a6)(__int128 *__return_ptr))
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v6 = a6(&v14);
  if (v15)
  {
    OUTLINED_FUNCTION_12_17((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_61();
  }
  else
  {
    __break(1u);
  }
}

void sub_190B67BC0()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_14_19();
  OUTLINED_FUNCTION_17_1();
  v1 = objc_allocWithZone((Class)TFKey);
  v2 = v0;
  v10 = OUTLINED_FUNCTION_1_7((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);
  OUTLINED_FUNCTION_18_18();

  v11 = OUTLINED_FUNCTION_5();
  v12 = OUTLINED_FUNCTION_2_39(v11);
  OUTLINED_FUNCTION_3_36(v12, (void (*)(_QWORD *))sub_190B67FC4, v13, v14, v15, v16, v17, v18, (uint64_t)v0);
  OUTLINED_FUNCTION_7_30();
  OUTLINED_FUNCTION_15_20();
  if (v10)
  {
    v19 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_9_26(v19);
  }
  else
  {
    OUTLINED_FUNCTION_8_29();
  }
  OUTLINED_FUNCTION_3_9();
}

void sub_190B67EC0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_190B67EF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_105();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B67F28()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_190B67F4C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_190B67F5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B67F80(_QWORD *a1)
{
  uint64_t v1;

  return sub_190B6753C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t UniqueCollection.array.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

void UniqueCollection.prepend(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[14];

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_13_22(v0, v1);
  MEMORY[0x1E0C80A78](v2);
  v8[1] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_10_27();
  OUTLINED_FUNCTION_39_10();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_26_9();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_8_30();
  OUTLINED_FUNCTION_41_9(v6, v7);
  OUTLINED_FUNCTION_35_11();
}

void sub_190B6806C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;

  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_14_20();
  if (v0 == 1)
  {
    OUTLINED_FUNCTION_8_30();
    OUTLINED_FUNCTION_7_31(v1);
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_12_18();
    OUTLINED_FUNCTION_28_14();
    OUTLINED_FUNCTION_7_31(*(_QWORD *)(v2 - 184));
    OUTLINED_FUNCTION_87();
    sub_190BE53E4();
  }
  else
  {
    if (qword_1ED035650 != -1)
      swift_once();
    OUTLINED_FUNCTION_17_16();
    *(_OWORD *)(OUTLINED_FUNCTION_57_3() + 16) = xmmword_190BE7CD0;
    OUTLINED_FUNCTION_8_30();
    v3 = OUTLINED_FUNCTION_54_6(MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_37_10(v3);
    if (!v4)
      OUTLINED_FUNCTION_15_21((uint64_t)"collection must contain unique elements, duplicate=%{public}@");
    OUTLINED_FUNCTION_48_4();
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0_0();
}

Swift::Void __swiftcall UniqueCollection.insert(contentsOf:at:)(Swift::OpaquePointer contentsOf, Swift::Int at)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[30];

  OUTLINED_FUNCTION_72();
  v2 = OUTLINED_FUNCTION_58();
  v13[10] = *(_QWORD *)(v2 - 8);
  v13[11] = v2;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_0();
  v13[7] = v4;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_52_1();
  v13[9] = v6;
  v8 = MEMORY[0x1E0C80A78](v7);
  v13[6] = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v13[3] = v11;
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_52_1();
  v13[12] = v12;
  v13[28] = sub_190BE4D78();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v13[27] = sub_190BE5318();
  OUTLINED_FUNCTION_51_5();
}

void UniqueCollection.removeSubrange<A>(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[13];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_72();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_58();
  v12[11] = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v12[5] = (char *)v12 - v5;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_0();
  v12[12] = v6;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_52_1();
  v12[3] = v8;
  v13 = *v0;
  v9 = v13;
  v10 = OUTLINED_FUNCTION_18_19();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v10);
  v12[4] = v10;
  sub_190BE5294();
  v12[6] = v15;
  v11 = v0[1];
  v12[10] = v0 + 1;
  v14 = v9;
  v15 = v11;
  UniqueCollection.startIndex.getter();
  v14 = v9;
  v15 = v11;
  v12[8] = v2;
  UniqueCollection.endIndex.getter();
}

void sub_190B6887C()
{
  sub_190BE5834();
  OUTLINED_FUNCTION_42_8();
  OUTLINED_FUNCTION_0_0();
}

Swift::Void __swiftcall UniqueCollection.remove(for:)(Swift::String a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_72();
  v3 = v2;
  v30 = v4;
  v6 = v5;
  v7 = *(_QWORD *)(v2 + 16);
  v8 = OUTLINED_FUNCTION_10_27();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_1_0();
  v27 = v10;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  v29 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_1_0();
  v26 = v15;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_52_1();
  v31 = v17;
  v18 = *v1;
  v28 = v1;
  v19 = v1[1];
  v32 = v18;
  v33 = v19;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_66();
  UniqueCollection.subscript.getter(v6, v30, v3);
  OUTLINED_FUNCTION_16();
  swift_bridgeObjectRelease();
  if (OUTLINED_FUNCTION_31_10() == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }
  else
  {
    v30 = v8;
    v20 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v13, v7);
    v32 = v18;
    v33 = v19;
    MEMORY[0x194016EF8](&protocol conformance descriptor for UniqueCollection<A>, v3);
    sub_190BE57E0();
    OUTLINED_FUNCTION_60_6();
    if (v21)
    {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v31, v7);
    }
    else
    {
      v22 = v31;
      v32 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 8))(v7);
      v33 = v23;
      OUTLINED_FUNCTION_12_18();
      v24 = v27;
      sub_190BE4DD8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v30);
      OUTLINED_FUNCTION_87();
      v25 = v26;
      sub_190BE53F0();
      OUTLINED_FUNCTION_6_26(v25);
      OUTLINED_FUNCTION_6_26(v22);
    }
  }
  OUTLINED_FUNCTION_0_0();
}

Swift::Void __swiftcall UniqueCollection.removeAll()()
{
  sub_190BE4E98();
  sub_190BE4E8C();
  OUTLINED_FUNCTION_18_19();
  sub_190BE5420();
}

void UniqueCollection.replace(_:withContentsOf:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_3_37();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_40(v1, v2);
  OUTLINED_FUNCTION_20_12();
}

uint64_t sub_190B68B64()
{
  _OWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t result;

  OUTLINED_FUNCTION_5_27();
  result = OUTLINED_FUNCTION_9_27();
  if ((v1 & 1) != 0)
  {
    *(_OWORD *)(v2 - 96) = *v0;
    OUTLINED_FUNCTION_20_12();
  }
  __break(1u);
  return result;
}

void UniqueCollection.move(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_3_37();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_40(v1, v2);
  OUTLINED_FUNCTION_20_12();
}

uint64_t sub_190B68BF0()
{
  _OWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t result;

  OUTLINED_FUNCTION_5_27();
  result = OUTLINED_FUNCTION_9_27();
  if ((v1 & 1) != 0)
  {
    *(_OWORD *)(v2 - 96) = *v0;
    OUTLINED_FUNCTION_20_12();
  }
  __break(1u);
  return result;
}

void sub_190B68C50(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  *a2 = UniqueCollection.index(after:)(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B68C74(uint64_t a1)
{
  MEMORY[0x194016EF8](&protocol conformance descriptor for UniqueCollection<A>, a1);
  return sub_190BE572C();
}

uint64_t sub_190B68CA8(uint64_t a1)
{
  MEMORY[0x194016EF8](&protocol conformance descriptor for UniqueCollection<A>, a1);
  return sub_190BE575C();
}

void UniqueCollection.init(keepingFirstUniqueFrom:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_72();
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  sub_190BE4D78();
  sub_190BE4D6C();
  OUTLINED_FUNCTION_66();
  sub_190BE5318();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_53_5();
}

void sub_190B68F00(uint64_t a1, _QWORD *a2)
{
  UniqueCollection.init(arrayLiteral:)(a1, a2[2], a2[3], a2[4]);
}

uint64_t sub_190B68F10()
{
  return static UniqueCollection.== infix(_:_:)();
}

uint64_t UniqueCollection.description.getter()
{
  uint64_t v0;

  v0 = sub_190BE5438();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF68], v0);
  return sub_190BE5078();
}

void sub_190B68F84(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v4 = sub_190BE4C4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_0();
  v8 = v7 - v6;
  if (qword_1ED035648 != -1)
    swift_once();
  if (qword_1ED035618 == a1)
    goto LABEL_16;
  if (qword_1ED034E10 != -1)
    swift_once();
  if (qword_1ED034CE8 == a1 && (objc_msgSend((id)objc_opt_self(), (SEL)0x1F26C7197) & 1) != 0)
    goto LABEL_16;
  if (qword_1ED034CA8 != -1)
    swift_once();
  if (qword_1ED034C98 != a1)
  {
    if (qword_1ED034CE8 != a1)
    {
      OUTLINED_FUNCTION_5_28();
      return;
    }
    goto LABEL_17;
  }
  if ((objc_msgSend((id)objc_opt_self(), (SEL)0x1F26C7197) & 1) == 0)
  {
LABEL_16:
    a2();
    return;
  }
  if (qword_1ED034CE8 == a1)
  {
LABEL_17:
    sub_190AC4980();
    v9 = (void *)sub_190BE590C();
    goto LABEL_18;
  }
  sub_190AC4980();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF530], v4);
  v9 = (void *)sub_190BE5948();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
LABEL_18:
  OUTLINED_FUNCTION_5_28();

}

uint64_t sub_190B691F8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t SignpostRecorder.init(createdDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(int *)(type metadata accessor for SignpostRecorder(0, a2, a3, a4) + 28);
  type metadata accessor for Signpost(0, a2, v9, v10);
  *(_QWORD *)(a5 + v8) = sub_190BE4D78();
  v11 = OUTLINED_FUNCTION_0_1();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a5, a1, v11);
}

uint64_t type metadata accessor for SignpostRecorder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SignpostRecorder);
}

uint64_t SignpostRecorder.mark(comment:createdDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = v4;
  v36 = (_QWORD *)a3;
  v41 = a2;
  v39 = a1;
  v40 = *(_QWORD *)(a4 + 16);
  v7 = type metadata accessor for Signpost(255, v40, a3, a4);
  v8 = sub_190BE59A8();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  sub_190B1DF74(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_1_0();
  v38 = v15;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v31 - v18;
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_1_0();
  v37 = v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v31 - v23;
  v32 = v25;
  OUTLINED_FUNCTION_2_43((uint64_t)v19, (uint64_t)v36);
  v26 = (_QWORD *)(v5 + *(int *)(a4 + 28));
  v35 = v5;
  v36 = v26;
  v42 = *v26;
  v27 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF20], v27);
  sub_190BE4F1C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
    OUTLINED_FUNCTION_1_48((uint64_t)v13, 1);
  }
  else
  {
    OUTLINED_FUNCTION_2_43((uint64_t)v13, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
    OUTLINED_FUNCTION_1_48((uint64_t)v13, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) != 1)
    {
      v28 = v38;
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v38, v13, v14);
      goto LABEL_6;
    }
  }
  v28 = v38;
  OUTLINED_FUNCTION_2_43(v38, v35);
  sub_190B69558((uint64_t)v13);
LABEL_6:
  v29 = v41;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B18028((uint64_t)v19, v28, v39, v29, v40, (uint64_t)v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v37, v24, v7);
  sub_190BE53D8();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v24, v7);
}

uint64_t sub_190B69558(uint64_t a1)
{
  uint64_t v2;

  sub_190B1DF74(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190B69594()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE47E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190B69608(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190BE47E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_190B69694(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B696D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_190B69738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190B697A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_190B69800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190BE47E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190B69864()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B69870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190B698E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B698F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

TeaFoundation::VersionNumber __swiftcall VersionNumber.init(_:)(TeaFoundation::VersionNumber result)
{
  TeaFoundation::VersionNumber *v1;

  v1->numbers._rawValue = result.numbers._rawValue;
  return result;
}

void sub_190B69968()
{
  qword_1EE1FFF90 = (uint64_t)&unk_1E2CDF3F0;
}

uint64_t static VersionNumber.min.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_190B699C8(&qword_1EE1FEF50, &qword_1EE1FFF90, a1);
}

void sub_190B69998()
{
  qword_1EE1FFF98 = (uint64_t)&unk_1E2CDF3C8;
}

uint64_t static VersionNumber.max.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_190B699C8(qword_1EE1FEF58, &qword_1EE1FFF98, a1);
}

uint64_t sub_190B699C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t VersionNumber.numbers.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t VersionNumber.major.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
    return *(_QWORD *)(*(_QWORD *)v0 + 32);
  else
    return OUTLINED_FUNCTION_97();
}

uint64_t VersionNumber.subscript.getter(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16) <= result)
    return OUTLINED_FUNCTION_97();
  if ((result & 0x8000000000000000) == 0)
    return *(_QWORD *)(*(_QWORD *)v1 + 8 * result + 32);
  __break(1u);
  return result;
}

uint64_t VersionNumber.minor.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16) < 2uLL)
    return OUTLINED_FUNCTION_97();
  else
    return *(_QWORD *)(*(_QWORD *)v0 + 40);
}

uint64_t VersionNumber.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

TeaFoundation::VersionNumber_optional __swiftcall VersionNumber.init(_:)(Swift::String_optional a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1;
  if (a1.value._object)
  {
    *(TeaFoundation::VersionNumber_optional *)&a1.value._countAndFlagsBits = VersionNumber.init(_:)(a1.value);
    v3 = v4;
  }
  else
  {
    v3 = 0;
  }
  *v2 = v3;
  return *(TeaFoundation::VersionNumber_optional *)&a1.value._countAndFlagsBits;
}

BOOL sub_190B69AB8(uint64_t *a1, uint64_t *a2)
{
  return sub_190BDC8EC(*a1, *a2);
}

BOOL sub_190B69AC4(uint64_t *a1, uint64_t *a2)
{
  return sub_190BBEC88(*a1, *a2);
}

BOOL sub_190B69AD0(uint64_t *a1, uint64_t *a2)
{
  return sub_190BBED00(*a1, *a2);
}

uint64_t sub_190B69AE4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_190B69B34();
  sub_190B69B68(v1, v2, v3, v4);
  OUTLINED_FUNCTION_9_1();
  return v0;
}

uint64_t sub_190B69B34()
{
  return sub_190BE51BC();
}

uint64_t sub_190B69B68(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_190B69CAC(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_190ACF9E0(v9, 0);
      v12 = sub_190B69D98((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x194015344](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x194015344);
LABEL_9:
      sub_190BE5CFC();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x194015344]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_190B69CAC(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_190B3F3E8(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_190B3F3E8(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_190BE5150();
  }
  __break(1u);
  return result;
}

unint64_t sub_190B69D98(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
    goto LABEL_38;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_35:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    result = v12;
    if ((v12 & 0xC) == v15)
      result = sub_190B3F3E8(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_190BE515C();
      v19 = result;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_190BE5CFC();
        v19 = *(_BYTE *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      result = sub_190B3F3E8(v12, a6, a7);
      v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16)
      goto LABEL_37;
    v12 = sub_190BE5138();
LABEL_31:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_35;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unsigned __int8 *sub_190B69F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_190B6AAE0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v7 = sub_190BE51B0();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_190B69AE4();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_190BE5CFC();
  }
LABEL_7:
  v13 = sub_190B6A164(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_190B6A088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v5 = sub_190BE51B0();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_190B69AE4();
  v10 = v9;
  OUTLINED_FUNCTION_62();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_190BE5CFC();
  }
LABEL_7:
  v11 = sub_190B6A3E0(v7, v8, a3);
  OUTLINED_FUNCTION_62();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_190B6A164(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_190B6A3E0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190B6A660(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 *v40;
  uint64_t v41;
  unsigned int v42;
  char v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  uint64_t v48;
  unsigned int v49;
  char v50;
  uint64_t v51;

  v11 = a3;
  v12 = result;
  v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v13) = 1;
  v14 = 4 << v13;
  v15 = a3 & 0xC;
  v16 = a3;
  if (v15 == 4 << v13)
  {
    result = sub_190B3F3E8(a3, a5, a6);
    v16 = result;
  }
  v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0)
      v19 = HIBYTE(a6) & 0xF;
    if (v19 < v16 >> 16)
      goto LABEL_96;
    result = sub_190BE5150();
    v18 = result;
    v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    v20 = v17;
    result = sub_190B3F3E8(v11, a5, a6);
    v17 = v20;
    v11 = result;
  }
  if ((a4 & 0xC) == v14)
  {
    v21 = a4;
    v22 = v17;
    result = sub_190B3F3E8(v21, a5, a6);
    v17 = v22;
    a4 = result;
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_11;
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    result = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0)
    v23 = v17;
  if (v23 < v11 >> 16)
    goto LABEL_92;
  if (v23 < a4 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  result = sub_190BE5150();
LABEL_22:
  v24 = v18 + result;
  if (__OFADD__(v18, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v24 < v18)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v25 = (unsigned __int8 *)(v12 + v18);
  if (!v12)
    v25 = 0;
  v26 = *v25;
  if (v26 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v37 = a7 + 48;
        v38 = a7 + 55;
        v39 = a7 + 87;
        if (a7 > 10)
        {
          v37 = 58;
        }
        else
        {
          v39 = 97;
          v38 = 65;
        }
        if (v25)
        {
          v30 = 0;
          v40 = v25 + 1;
          v41 = result - 1;
          do
          {
            v42 = *v40;
            if (v42 < 0x30 || v42 >= v37)
            {
              if (v42 < 0x41 || v42 >= v38)
              {
                v35 = 0;
                if (v42 < 0x61 || v42 >= v39)
                  return v35;
                v43 = -87;
              }
              else
              {
                v43 = -55;
              }
            }
            else
            {
              v43 = -48;
            }
            v44 = v30 * a7;
            if ((unsigned __int128)(v30 * (__int128)a7) >> 64 != (v30 * a7) >> 63)
              return 0;
            v30 = v44 + (v42 + v43);
            if (__OFADD__(v44, (v42 + v43)))
              return 0;
            ++v40;
            --v41;
          }
          while (v41);
          return v30;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v26 != 45)
  {
    if (v24 != v18)
    {
      v45 = a7 + 48;
      v46 = a7 + 55;
      v47 = a7 + 87;
      if (a7 > 10)
      {
        v45 = 58;
      }
      else
      {
        v47 = 97;
        v46 = 65;
      }
      if (v25)
      {
        v48 = 0;
        do
        {
          v49 = *v25;
          if (v49 < 0x30 || v49 >= v45)
          {
            if (v49 < 0x41 || v49 >= v46)
            {
              v35 = 0;
              if (v49 < 0x61 || v49 >= v47)
                return v35;
              v50 = -87;
            }
            else
            {
              v50 = -55;
            }
          }
          else
          {
            v50 = -48;
          }
          v51 = v48 * a7;
          if ((unsigned __int128)(v48 * (__int128)a7) >> 64 != (v48 * a7) >> 63)
            return 0;
          v48 = v51 + (v49 + v50);
          if (__OFADD__(v51, (v49 + v50)))
            return 0;
          ++v25;
          --result;
        }
        while (result);
        return v51 + (v49 + v50);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v27 = a7 + 48;
      v28 = a7 + 55;
      v29 = a7 + 87;
      if (a7 > 10)
      {
        v27 = 58;
      }
      else
      {
        v29 = 97;
        v28 = 65;
      }
      if (v25)
      {
        v30 = 0;
        v31 = v25 + 1;
        v32 = result - 1;
        while (1)
        {
          v33 = *v31;
          if (v33 < 0x30 || v33 >= v27)
          {
            if (v33 < 0x41 || v33 >= v28)
            {
              v35 = 0;
              if (v33 < 0x61 || v33 >= v29)
                return v35;
              v34 = -87;
            }
            else
            {
              v34 = -55;
            }
          }
          else
          {
            v34 = -48;
          }
          v36 = v30 * a7;
          if ((unsigned __int128)(v30 * (__int128)a7) >> 64 != (v30 * a7) >> 63)
            return 0;
          v30 = v36 - (v33 + v34);
          if (__OFSUB__(v36, (v33 + v34)))
            return 0;
          ++v31;
          if (!--v32)
            return v30;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

unint64_t sub_190B6AAA4()
{
  unint64_t result;

  result = qword_1EE1FFFA0;
  if (!qword_1EE1FFFA0)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for VersionNumber, &type metadata for VersionNumber);
    atomic_store(result, (unint64_t *)&qword_1EE1FFFA0);
  }
  return result;
}

unint64_t sub_190B6AAE0()
{
  unint64_t result;

  result = qword_1EE1FFFA8;
  if (!qword_1EE1FFFA8)
  {
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE1FFFA8);
  }
  return result;
}

uint64_t ProxyContainer.__allocating_init(publicContainer:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_24();
  ProxyContainer.init(publicContainer:)(a1);
  return v2;
}

uint64_t method lookup function for ProxyContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProxyContainer.__allocating_init(publicContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_190B6AB68()
{
  swift_release();
  return swift_deallocObject();
}

id AsyncBlockOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AsyncBlockOperation.init()()
{
  OUTLINED_FUNCTION_6_34();
  __break(1u);
}

void sub_190B6ABD0()
{
  AsyncBlockOperation.init()();
}

uint64_t sub_190B6ABDC()
{
  return OUTLINED_FUNCTION_0_50();
}

void AsyncBlockCancellingOperation.__allocating_init(_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_44();
  AsyncBlockCancellingOperation.init(_:)(v1, v0);
  OUTLINED_FUNCTION_4();
}

id AsyncBlockCancellingOperation.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_190AC2A94(a1, a2, qword_1EE1FFFB0);
}

void AsyncBlockCancellingOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *);
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  _QWORD v16[5];

  v5 = *MEMORY[0x1E0DEEDD8] & *v2;
  v6 = type metadata accessor for AsyncBlockCancelledReporter();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  v8 = *(void (**)(_QWORD *))((char *)v2 + qword_1EE1FFFB0[0]);
  v16[3] = v6;
  v16[4] = &off_1E2CE1C88;
  v16[0] = v7;
  v9 = v2;
  OUTLINED_FUNCTION_4_2();
  v8(v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  v10 = (_QWORD *)OUTLINED_FUNCTION_1_9();
  v11 = *(_QWORD *)(v5 + 240);
  v10[2] = v11;
  v10[3] = a1;
  v10[4] = a2;
  swift_retain();
  v12 = (void *)sub_190AC06B8(v11, MEMORY[0x1E0DEE9C0] + 8);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_16_4();
  swift_release();

  v13 = (_QWORD *)OUTLINED_FUNCTION_1_9();
  v13[2] = v11;
  v13[3] = a1;
  v13[4] = a2;
  v14 = qword_1ED035648;
  swift_retain();
  if (v14 != -1)
    swift_once();
  v15 = (id)qword_1ED035618;
  sub_190ADE658((uint64_t)v15, (uint64_t)sub_190B6AEDC, (uint64_t)v13);
  swift_release();
  OUTLINED_FUNCTION_19();
  swift_release();
  OUTLINED_FUNCTION_16_4();

}

uint64_t type metadata accessor for AsyncBlockCancelledReporter()
{
  return objc_opt_self();
}

void AsyncBlockCancellingOperation.init()()
{
  OUTLINED_FUNCTION_6_34();
  __break(1u);
}

void sub_190B6AE14()
{
  AsyncBlockCancellingOperation.init()();
}

uint64_t sub_190B6AE20()
{
  return OUTLINED_FUNCTION_0_50();
}

uint64_t method lookup function for AsyncBlockOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncBlockOperation.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_190B6AE48()
{
  return OUTLINED_FUNCTION_0_50();
}

uint64_t type metadata accessor for AsyncBlockCancellingOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncBlockCancellingOperation);
}

uint64_t method lookup function for AsyncBlockCancellingOperation()
{
  return swift_lookUpClassMethod();
}

id sub_190B6AE70()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_isCancelled);
}

uint64_t sub_190B6AE90()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

unint64_t sub_190B6AEB4()
{
  return (unint64_t)sub_190B6AE70() & 1;
}

uint64_t sub_190B6AEF0(uint64_t a1)
{
  return sub_190AE1984(a1);
}

uint64_t static XPCClassBuilder.buildBlock(_:)()
{
  uint64_t v0;

  v0 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return sub_190B2FDD4(v0);
}

ValueMetadata *type metadata accessor for XPCClassBuilder()
{
  return &type metadata for XPCClassBuilder;
}

uint64_t ShortDescription.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v7[32];

  sub_190B18ADC(a1, (uint64_t)v7);
  sub_190ACDA10((uint64_t)v7, a2, a3);
  return sub_190AD9BB8(a1);
}

void ShortDescription.subscript.getter(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v3 + 16))
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v4 = sub_190AEABD0();
    if ((v5 & 1) != 0)
    {
      sub_190ACF624(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)a1);
    }
    else
    {
      *a1 = 0u;
      a1[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a1 = 0u;
    a1[1] = 0u;
  }
}

uint64_t sub_190B6B008@<X0>(_OWORD *a1@<X8>)
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  ShortDescription.subscript.getter(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B6B080(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[32];

  v3 = *a3;
  v4 = a3[1];
  sub_190B18ADC(a1, (uint64_t)v6);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return ShortDescription.subscript.setter((uint64_t)v6, v3, v4);
}

void (*ShortDescription.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = malloc(0x60uLL);
  *a1 = v9;
  v9[10] = a4;
  v9[11] = v4;
  v9[8] = a2;
  v9[9] = a3;
  ShortDescription.subscript.getter(v9);
  return sub_190B6B158;
}

void sub_190B6B158(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[8];
    v3 = v2[9];
    sub_190B18ADC(*a1, (uint64_t)(v2 + 4));
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    ShortDescription.subscript.setter((uint64_t)(v2 + 4), v4, v3);
    sub_190AD9BB8((uint64_t)v2);
  }
  else
  {
    v6 = v2[8];
    v5 = v2[9];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    ShortDescription.subscript.setter((uint64_t)v2, v6, v5);
  }
  free(v2);
}

uint64_t ShortDescription.shortDescription.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v3 = v2[1];
  v5 = v2[2];
  a2[3] = a1;
  a2[4] = &protocol witness table for ShortDescription<A>;
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v5;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_190B6B22C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x194016EF8](&protocol conformance descriptor for ShortDescription<A>, a1);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_190B6B260(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x194016EF8](&protocol conformance descriptor for ShortDescription<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190B6B294()
{
  return 8;
}

_QWORD *sub_190B6B2A0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of ShortDescriptionType.describe(withIndentation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_190B6B2B8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_0();
}

uint64_t URLHandlerOpenOptions.sourceApplication.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t URLHandlerOpenOptions.annotation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190B18ADC(v1 + 16, a1);
}

uint64_t URLHandlerOpenOptions.openInPlace.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t URLHandlerOpenOptions.init(sourceApplication:annotation:openInPlace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t result;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  result = sub_190B6B364(a3, a5 + 16);
  *(_BYTE *)(a5 + 48) = a4;
  return result;
}

uint64_t sub_190B6B364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190AD9BF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for URLHandlerOpenOptions(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  return result;
}

uint64_t initializeWithCopy for URLHandlerOpenOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v6)
  {
    *(_QWORD *)(a1 + 40) = v6;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    v7 = v5[1];
    *(_OWORD *)(a1 + 16) = *v5;
    *(_OWORD *)(a1 + 32) = v7;
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for URLHandlerOpenOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 40) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for URLHandlerOpenOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerOpenOptions(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerOpenOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t Dictionary<>.disableSafeishSafety.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];
  uint64_t v9;

  sub_190AD9C40();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_0_51();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_1_49();
  result = __swift_getEnumTagSinglePayload(v1, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v1, v5);
    v9 = MEMORY[0x1E0DEAFA0];
    v8[0] = a1 & 1;
    return sub_190AB3BE0((uint64_t)v8);
  }
  return result;
}

void (*Dictionary<>.disableSafeishSafety.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = Dictionary<>.disableSafeishSafety.getter(*v1) & 1;
  return sub_190B6B754;
}

void sub_190B6B754(uint64_t a1)
{
  Dictionary<>.disableSafeishSafety.setter(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

void sub_190B6B774(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = Dictionary<>.disableSafeishSafety.getter(*a1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_190B6B79C(char *a1)
{
  Dictionary<>.disableSafeishSafety.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B6B7BC()
{
  return 0;
}

id sub_190B6B7CC()
{
  return sub_190B6B7EC();
}

id sub_190B6B7EC()
{
  void *v0;

  return objc_msgSend(v0, sel_cancel);
}

uint64_t NonCancellingReporter.isCancelled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

TeaFoundation::NonCancellingReporter __swiftcall NonCancellingReporter.init()()
{
  _BYTE *v0;
  TeaFoundation::NonCancellingReporter result;

  *v0 = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for NonCancellingReporter(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NonCancellingReporter(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B6B8FC + 4 * byte_190BEC8D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B6B930 + 4 * asc_190BEC8D0[v4]))();
}

uint64_t sub_190B6B930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B6B938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B6B940);
  return result;
}

uint64_t sub_190B6B94C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B6B954);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B6B958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B6B960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NonCancellingReporter()
{
  return &type metadata for NonCancellingReporter;
}

uint64_t MachService.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

void *MachService.hostInterface.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_190B6B9B8(v2);
}

void *sub_190B6B9B8(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t MachService.serviceInterface.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  v4 = v2;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

__n128 MachService.init(name:hostInterface:serviceInterface:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr)@<X2>, uint64_t a4@<X3>, void (*a5)(__n128 *__return_ptr, _QWORD *)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, __n128 *a9@<X8>)
{
  _QWORD *v13;
  __n128 v14;
  __n128 result;
  __n128 v16;

  v13 = OUTLINED_FUNCTION_0_52(a1, a2, a3, a4, (uint64_t)a5, a6, a7, a8, v16.n128_i64[0]);
  v14 = v16;
  a5(&v16, v13);
  result = v16;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1] = v14;
  a9[2] = result;
  return result;
}

__n128 MachService.init(_:serviceInterface:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, __n128 *a9@<X8>)
{
  __n128 result;
  __n128 v13;

  OUTLINED_FUNCTION_0_52(a1, a2, a3, a4, a5, a6, a7, a8, v13.n128_i64[0]);
  result = v13;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = 0;
  a9[1].n128_u64[1] = 0;
  a9[2] = v13;
  return result;
}

uint64_t destroy for MachService(uint64_t a1)
{
  void *v2;

  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 16);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MachService(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2 + 2;
  v6 = (void *)a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v6)
  {
    v7 = a2[3];
    a1[2] = v6;
    a1[3] = v7;
    v8 = v6;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v5;
  }
  v9 = (void *)a2[4];
  v10 = a2[5];
  a1[4] = v9;
  a1[5] = v10;
  v11 = v9;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for MachService(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = (void *)a2[2];
  if (!v4)
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = a2[3];
      v7 = v5;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_190B6BC74((id *)(a1 + 16));
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 24) = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = (void *)a2[4];
  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + 40) = a2[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_190B6BC74(id *a1)
{
  destroy for XPCInterface(a1);
  return a1;
}

uint64_t assignWithTake for MachService(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 16);
  v6 = a2[2];
  if (!v5)
    goto LABEL_5;
  if (!v6)
  {
    sub_190B6BC74((id *)(a1 + 16));
LABEL_5:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = v6;

  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRelease();
LABEL_6:
  v7 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2[4];

  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HttpRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HttpRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MachService()
{
  return &type metadata for MachService;
}

uint64_t dispatch thunk of ReferenceTypeServiceType.referenceType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReferenceTypeServiceType.createReferences(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t StoreState.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  v7 = v6 - v5;
  (*(void (**)(uint64_t))(v4 + 16))(v6 - v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, a1);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_5:
    v12 = *(_QWORD *)(a1 + 16);
    v10 = a2;
    v11 = 1;
    return __swift_storeEnumTagSinglePayload(v10, v11, 1, v12);
  }
  v9 = *(_QWORD *)(a1 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a2, v7, v9);
  v10 = a2;
  v11 = 0;
  v12 = v9;
  return __swift_storeEnumTagSinglePayload(v10, v11, 1, v12);
}

void StoreValue.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_7_2();
  StoreValue.init()(v0, v1, v2, v3);
  OUTLINED_FUNCTION_0();
}

void sub_190B6BEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Promise(0, v7, v8, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  Promise.__allocating_init(value:)();
}

void sub_190B6BF7C(uint64_t a1)
{
  uint64_t v1;

  sub_190B6BEEC(a1, *(_QWORD *)(v1 + 16));
}

void StoreValue.__allocating_init(computation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_7_2();
  v0 = OUTLINED_FUNCTION_8_31();
  StoreValue.init(computation:)(v0, v1, v2, v3);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_7_2();
  v0 = OUTLINED_FUNCTION_8_31();
  StoreValue.init(computation:)(v0, v1, v2, v3);
  OUTLINED_FUNCTION_4();
}

void StoreValue.init(computation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_190B6C004(a1, a2, (uint64_t (*)(uint64_t, uint64_t))StoreComputedValue.__allocating_init(computation:), a4);
}

{
  sub_190B6C004(a1, a2, (uint64_t (*)(uint64_t, uint64_t))StoreComputedValue.__allocating_init(computation:), a4);
}

void sub_190B6C004(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;

  v6 = v4;
  type metadata accessor for StoreComputedValue(0, *(_QWORD *)(*v6 + 80), *(_QWORD *)(*v6 + 80), a4);
  v6[2] = a3(a1, a2);
  OUTLINED_FUNCTION_4();
}

void StoreComputedValue.__allocating_init(computation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_24();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v2 + 80);
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  StoreComputedValue.__allocating_init(computation:)();
}

void StoreValue.nextInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  StoreComputedValue.nextInput(_:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_0();
}

uint64_t StoreComputedValue.nextInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = type metadata accessor for StoreState(0, v6, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((char *)&v15 - v10, a1, v6);
  swift_storeEnumTagMultiPayload();
  StoreComputedValue.nextInput(_:)((uint64_t)v11);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v13;
}

void StoreValue.nextInput(_:)(uint64_t a1)
{
  StoreComputedValue.nextInput(_:)(a1);
  OUTLINED_FUNCTION_0();
}

void StoreComputedValue.nextInput(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = v1;
  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v47 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  v44 = *(_QWORD *)(v3 + 88);
  v45 = v6 - v5;
  v9 = type metadata accessor for StoreState(0, v44, v7, v8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v10);
  v46 = v4;
  v13 = *(_QWORD *)(type metadata accessor for StoreState(0, v4, v11, v12) - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v14);
  v16 = (void **)((char *)&v44 - v15);
  v17 = *(_QWORD *)(v2 + *(_QWORD *)(v3 + 136));
  UnfairLock.lock()();
  v18 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v19 = *(_QWORD *)(v2 + v18);
  if (v19 == -1)
  {
    __break(1u);
  }
  else
  {
    v48 = v9;
    *(_QWORD *)(v2 + v18) = v19 + 1;
    v20 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
    swift_beginAccess();
    OUTLINED_FUNCTION_9_30(v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 24));
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
    OUTLINED_FUNCTION_9_30((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v24 = v45;
        v25 = v16;
        v26 = v46;
        v27 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v47 + 32))(v45, v25, v46);
        MEMORY[0x1E0C80A78](v27);
        *(&v44 - 2) = v2;
        *(&v44 - 1) = v24;
        firstly<A>(closure:)(sub_190B6C7C8);
        v28 = *(_QWORD *)(*(_QWORD *)v2 + 144);
        v29 = *(void **)(v2 + v28);
        *(_QWORD *)(OUTLINED_FUNCTION_7_2() + 16) = v19;
        v30 = v29;
        OUTLINED_FUNCTION_12_19();
        Promise.then<A, B>(on:disposeOn:closure:)();
        swift_release();

        OUTLINED_FUNCTION_19();
        v31 = *(void **)(v2 + v28);
        *(_QWORD *)(OUTLINED_FUNCTION_7_2() + 16) = v19;
        v32 = v31;
        Promise.error<A>(on:disposeOn:closure:)();
        swift_release();

        OUTLINED_FUNCTION_19();
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v24, v26);
      }
      else
      {
        type metadata accessor for Promise(0, v48, v22, v23);
        OUTLINED_FUNCTION_10_29();
        Promise.__allocating_init(value:)();
      }
    }
    else
    {
      v33 = *v16;
      v34 = *(void **)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
      v35 = OUTLINED_FUNCTION_24();
      *(_QWORD *)(v35 + 16) = v33;
      *(_QWORD *)(v35 + 24) = v19;
      v36 = v34;
      v37 = v33;
      OUTLINED_FUNCTION_12_19();
      firstly<A, B>(on:disposeOn:closure:)(v38, v39, v40, v41, v42, v43);

      OUTLINED_FUNCTION_19();
    }
    OUTLINED_FUNCTION_0_0();
  }
}

Swift::Void __swiftcall StoreValue.refresh()()
{
  StoreComputedValue.refresh()();
}

Swift::Void __swiftcall StoreComputedValue.refresh()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v2;
  v4 = type metadata accessor for StoreState(0, *(_QWORD *)(*v2 + 80), v0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - v7;
  v9 = (uint64_t)v2 + *(_QWORD *)(v3 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  StoreComputedValue.nextInput(_:)((uint64_t)v8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t StoreValue.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t StoreValue.__deallocating_deinit()
{
  StoreValue.deinit();
  return swift_deallocClassInstance();
}

uint64_t StoreComputedValue.observable.getter()
{
  return swift_retain();
}

void sub_190B6C5B4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for Promise(0, v6, v4, v5);
  a2(a1);
  Promise.__allocating_init(value:)();
}

uint64_t sub_190B6C640()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190B6C664(uint64_t a1)
{
  uint64_t v1;

  sub_190B6C5B4(a1, *(void (**)(uint64_t))(v1 + 32));
}

void sub_190B6C670(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v6 = type metadata accessor for StoreState(0, *(_QWORD *)(*(_QWORD *)a1 + 88), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - v8;
  *(_QWORD *)((char *)v13 - v8) = a2;
  swift_storeEnumTagMultiPayload();
  v10 = a2;
  sub_190B6C758((uint64_t)v9, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for Promise(0, v6, v11, v12);
  AsyncObservable.value.getter((uint64_t)v9);
  Promise.__allocating_init(value:)();
}

void sub_190B6C758(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  UnfairLock.lock()();
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 128);
  if (*(_QWORD *)(v2 + v5) < a2)
  {
    AsyncObservable.next(value:quiet:)(a1, 0);
    *(_QWORD *)(v2 + v5) = a2;
  }
  sub_190B6C9FC(v2);
}

uint64_t sub_190B6C7C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 16) + 24))(*(_QWORD *)(v0 + 24));
}

void sub_190B6C7F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  v7 = type metadata accessor for StoreState(0, v6, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((char *)&v13 - v9, a1, v6);
  swift_storeEnumTagMultiPayload();
  sub_190B6C758((uint64_t)v10, a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  type metadata accessor for Promise(0, v7, v11, v12);
  AsyncObservable.value.getter((uint64_t)v10);
  Promise.__allocating_init(value:)();
}

void sub_190B6C8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190B6C7F4(a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_190B6C908(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  v6 = type metadata accessor for StoreState(0, *(_QWORD *)(*(_QWORD *)a2 + 88), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  v10 = a1;
  sub_190B6C758((uint64_t)v9, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_190B6C9B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_190B6C908(a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_190B6C9C0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_190B6C9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190B6C670(a1, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

void sub_190B6C9FC(uint64_t a1)
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 136)) + 16));
}

void StoreComputedValue.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  swift_release();
  swift_release();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  v5 = type metadata accessor for StoreState(0, *(_QWORD *)(v1 + 80), v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  swift_release();

  OUTLINED_FUNCTION_4();
}

uint64_t StoreComputedValue.__deallocating_deinit()
{
  StoreComputedValue.deinit();
  return swift_deallocClassInstance();
}

id *sub_190B6CAB0(id *__dst, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      (*(void (**)(id *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

id *sub_190B6CBE8(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    else

    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      v12 = *__src;
      v13 = v12;
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

_BYTE *sub_190B6CD94(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_190B6CE7C(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    else

    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      *__dst = *__src;
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_190B6D020(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B6D0E4 + 4 * byte_190BECA08[(v4 - 1)]))();
}

void sub_190B6D130(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B6D2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B6D31C + 4 * byte_190BECA16[v3]))();
}

uint64_t method lookup function for StoreValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreValue.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of StoreValue.__allocating_init(computation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for StoreComputedValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreComputedValue.__allocating_init(computation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_190B6D39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_1_50(v1, v2, v3, v4);
  v19 = sub_190BE59A8();
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_16_0();
  v9 = (id *)(v7 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - v11;
  OUTLINED_FUNCTION_24_16();
  v13 = (_QWORD *)OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_10_30(v13);
  OUTLINED_FUNCTION_31_11();
  sub_190ADA488((uint64_t)sub_190B6E154, (uint64_t)v13, v14, (uint64_t)v12);
  swift_release();
  v15 = *(os_unfair_lock_s **)(v0 + 16);
  v16 = v19;
  os_unfair_lock_unlock(v15);
  (*(void (**)(id *, char *, uint64_t))(v6 + 16))(v9, v12, v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v16);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        OUTLINED_FUNCTION_3_41();

      }
      else
      {
        OUTLINED_FUNCTION_14_22();
        OUTLINED_FUNCTION_120();
        OUTLINED_FUNCTION_3_41();
      }
    }
    else
    {
      OUTLINED_FUNCTION_3_41();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9, v5);
    }
  }
  OUTLINED_FUNCTION_0_0();
}

BOOL sub_190B6D500(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_190B2F49C(*a1, *a2);
}

uint64_t sub_190B6D510()
{
  return sub_190B2F4D0();
}

uint64_t sub_190B6D520()
{
  return sub_190B2F4AC();
}

uint64_t sub_190B6D530()
{
  sub_190BE62FC();
  sub_190B2F4AC();
  return sub_190BE6314();
}

uint64_t sub_190B6D574(uint64_t a1, void *a2, void (*a3)(), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v14)();
  uint64_t v15;

  v9 = type metadata accessor for Seal.Resolution(0, a5, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - v11, a1, v9);
  if (swift_getEnumCaseMultiPayload() <= 1)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v14 = sub_190ADADE0(a2, a3, a4);
  v14();
  return swift_release();
}

uint64_t sub_190B6D654(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B6D6A0 + 4 * byte_190BECADD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B6D6D4 + 4 * asc_190BECAD8[v4]))();
}

uint64_t sub_190B6D6D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B6D6DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B6D6E4);
  return result;
}

uint64_t sub_190B6D6F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B6D6F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B6D6FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B6D704(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for Seal.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Seal.State);
}

id *sub_190B6D71C(id *__dst, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

id *sub_190B6D854(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *__src;
      v13 = v12;
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

_BYTE *sub_190B6DA00(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_190B6DAE8(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *__dst = *__src;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_190B6DC8C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B6DD50 + 4 * byte_190BECB0A[(v4 - 1)]))();
}

void sub_190B6DD9C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B6DF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B6DF88 + 4 * byte_190BECB18[v3]))();
}

void sub_190B6DFD0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void sub_190B6E098()
{
  JUMPOUT(0x194016EF8);
}

uint64_t sub_190B6E0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_4_32(a1, a2, a3, a4) - 8) + 80);
  v7 = (v6 + 40) & ~v6;
  swift_release();
  swift_bridgeObjectRelease();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  }
  return swift_deallocObject();
}

uint64_t sub_190B6E154(uint64_t a1)
{
  uint64_t v1;

  return sub_190B6D574(a1, *(void **)(v1 + 24), *(void (**)())(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B6E194()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t *sub_190B6E210(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190BE4628();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_190B6E2AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B6E2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_190B6E364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_190B6E3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_190B6E450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_190B6E4C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B6E4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_190BE4628();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190B6E550()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B6E55C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_190BE4628();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AuthTokenResponseItem()
{
  uint64_t result;

  result = qword_1ED02F250;
  if (!qword_1ED02F250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190B6E60C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE4628();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_190B6E68C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_190BE60BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
    if (v6 || (sub_190BE60BC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6974617269707865 && a2 == 0xED00006374556E6FLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_190BE60BC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_190B6E7E4(char a1)
{
  if (!a1)
    return 7107189;
  if (a1 == 1)
    return 0x6E656B6F74;
  return 0x6974617269707865;
}

uint64_t sub_190B6E83C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_190BE4628();
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_0();
  v19 = v5 - v4;
  sub_190B6EB2C();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_0();
  v7 = type metadata accessor for AuthTokenResponseItem();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_0();
  v10 = v9 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B6EB84();
  sub_190BE6344();
  if (v20)
    return OUTLINED_FUNCTION_2_45();
  sub_190B6EBC0();
  sub_190BE5F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v10, v19, v3);
  v11 = sub_190BE5F18();
  v12 = (uint64_t *)(v10 + *(int *)(v7 + 20));
  *v12 = v11;
  v12[1] = v13;
  sub_190BE5F24();
  v15 = v14;
  OUTLINED_FUNCTION_0_54();
  *(_QWORD *)(v10 + *(int *)(v7 + 24)) = v15;
  sub_190B6EC00(v10, a2);
  OUTLINED_FUNCTION_2_45();
  return sub_190B6EC44(v10);
}

uint64_t sub_190B6EA9C()
{
  char *v0;

  return sub_190B6E7E4(*v0);
}

uint64_t sub_190B6EAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190B6E68C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190B6EAC8()
{
  sub_190B6EB84();
  return sub_190BE6404();
}

uint64_t sub_190B6EAF0()
{
  sub_190B6EB84();
  return sub_190BE6410();
}

uint64_t sub_190B6EB18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190B6E83C(a1, a2);
}

void sub_190B6EB2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02F3C8)
  {
    sub_190B6EB84();
    v0 = sub_190BE5F54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02F3C8);
  }
}

unint64_t sub_190B6EB84()
{
  unint64_t result;

  result = qword_1ED02F230;
  if (!qword_1ED02F230)
  {
    result = MEMORY[0x194016EF8](&unk_190BECDAC, &type metadata for AuthTokenResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F230);
  }
  return result;
}

unint64_t sub_190B6EBC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED02EFB0;
  if (!qword_1ED02EFB0)
  {
    v1 = sub_190BE4628();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0CB0038], v1);
    atomic_store(result, (unint64_t *)&qword_1ED02EFB0);
  }
  return result;
}

uint64_t sub_190B6EC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthTokenResponseItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B6EC44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AuthTokenResponseItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for AuthTokenResponseItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B6ECCC + 4 * byte_190BECC85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B6ED00 + 4 * byte_190BECC80[v4]))();
}

uint64_t sub_190B6ED00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B6ED08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B6ED10);
  return result;
}

uint64_t sub_190B6ED1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B6ED24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B6ED28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B6ED30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenResponseItem.CodingKeys()
{
  return &type metadata for AuthTokenResponseItem.CodingKeys;
}

unint64_t sub_190B6ED50()
{
  unint64_t result;

  result = qword_1EE2000B8;
  if (!qword_1EE2000B8)
  {
    result = MEMORY[0x194016EF8](&unk_190BECD84, &type metadata for AuthTokenResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE2000B8);
  }
  return result;
}

unint64_t sub_190B6ED90()
{
  unint64_t result;

  result = qword_1ED02F240;
  if (!qword_1ED02F240)
  {
    result = MEMORY[0x194016EF8](&unk_190BECCF4, &type metadata for AuthTokenResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F240);
  }
  return result;
}

unint64_t sub_190B6EDD0()
{
  unint64_t result;

  result = qword_1ED02F238;
  if (!qword_1ED02F238)
  {
    result = MEMORY[0x194016EF8](&unk_190BECD1C, &type metadata for AuthTokenResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F238);
  }
  return result;
}

Swift::Bool __swiftcall Optional.isNil()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int EnumTagSinglePayload;
  uint64_t v7;

  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  ((void (*)())MEMORY[0x1E0C80A78])();
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, *(_QWORD *)(v1 + 16));
  if (EnumTagSinglePayload != 1)
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return EnumTagSinglePayload == 1;
}

Swift::Bool __swiftcall Optional.isNotNil()()
{
  return !Optional.isNil()();
}

uint64_t Optional.unwrap()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;

  OUTLINED_FUNCTION_2_46();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  OUTLINED_FUNCTION_0_55((uint64_t)&v12 - v7);
  v9 = *(_QWORD *)(a1 + 16);
  if (OUTLINED_FUNCTION_1_51((uint64_t)v8) == 1
    && (OUTLINED_FUNCTION_0_55((uint64_t)v6), result = OUTLINED_FUNCTION_1_51((uint64_t)v6), v8 = v6, (_DWORD)result == 1))
  {
    __break(1u);
  }
  else
  {
    v1[3] = v9;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(boxed_opaque_existential_0, v8, v9);
  }
  return result;
}

void sub_190B6EFA8()
{
  sub_190ADBEE0((void (*)(void))sub_190B6FC68);
}

uint64_t sub_190B6EFEC(_BYTE *a1)
{
  uint64_t result;

  result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    swift_beginAccess();
    *a1 = 1;
    return DeferredPromise.reject(_:)();
  }
  return result;
}

void static Promise.map<A>(on:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD v69[2];
  unint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  int64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;

  v86 = a1;
  v97 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v85 = (uint64_t)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v9;
  MEMORY[0x1E0C80A78](v8);
  v96 = (char *)v69 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = sub_190BE59A8();
  v87 = *(_QWORD *)(v12 - 8);
  v88 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v89 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v69 - v15;
  v17 = *(_QWORD *)(v4 + 80);
  v18 = sub_190BE4E98();
  OUTLINED_FUNCTION_12_4(v18, v19, v20, v21);
  DeferredPromise.__allocating_init()();
  v23 = v22;
  v90 = a2;
  v24 = a3;
  v71 = v4;
  if ((MEMORY[0x194015104](a2, a3, v4, a4) & 1) != 0)
  {
    swift_getTupleTypeMetadata2();
    sub_190BE5384();
    v98 = sub_190BE4DFC();
    DeferredPromise.resolve(_:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_52();
    if (*(_QWORD *)(v23 + 16))
    {
      OUTLINED_FUNCTION_1();
LABEL_39:
      swift_release();
      OUTLINED_FUNCTION_0_0();
      return;
    }
    goto LABEL_42;
  }
  OUTLINED_FUNCTION_7_33();
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_17_18();
  v83 = v25;
  v26 = OUTLINED_FUNCTION_24();
  v27 = sub_190BE4D6C();
  v82 = v26;
  *(_QWORD *)(v26 + 16) = v27;
  v28 = OUTLINED_FUNCTION_24();
  v80 = a4;
  v81 = v28;
  *(_BYTE *)(v28 + 16) = 0;
  v78 = v17;
  v84 = v16;
  if ((v90 & 0xC000000000000001) != 0)
  {
    v29 = sub_190BE5E34();
    v70 = 0;
    v30 = 0;
    v31 = 0;
    v32 = v29 | 0x8000000000000000;
  }
  else
  {
    v32 = v90;
    v33 = -1 << *(_BYTE *)(v90 + 32);
    v30 = ~v33;
    v34 = *(_QWORD *)(v90 + 64);
    v70 = v90 + 64;
    v35 = -v33;
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v31 = v36 & v34;
  }
  v37 = (uint64_t)v89;
  v73 = v32 & 0x7FFFFFFFFFFFFFFFLL;
  v69[1] = v30;
  v76 = v95 + 7;
  v72 = (unint64_t)(v30 + 64) >> 6;
  v69[0] = v72 - 1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v38 = 0;
  v75 = MEMORY[0x1E0DEE9C0] + 8;
  v79 = v23;
  v77 = v32;
  v74 = v24;
  if ((v32 & 0x8000000000000000) != 0)
    goto LABEL_14;
LABEL_11:
  if (v31)
  {
    v39 = (v31 - 1) & v31;
    v40 = __clz(__rbit64(v31)) | (v38 << 6);
    v41 = v38;
LABEL_13:
    OUTLINED_FUNCTION_17_0(v37, *(_QWORD *)(v32 + 48) + *(_QWORD *)(v97 + 72) * v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 16));
    *(_QWORD *)(v37 + *(int *)(TupleTypeMetadata2 + 48)) = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v40);
    OUTLINED_FUNCTION_10_0(v37, 0);
    OUTLINED_FUNCTION_1();
    v95 = v41;
    goto LABEL_34;
  }
  v41 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  v44 = v38;
  if (v41 < v72)
  {
    v45 = *(_QWORD *)(v70 + 8 * v41);
    if (v45)
    {
LABEL_19:
      v39 = (v45 - 1) & v45;
      v40 = __clz(__rbit64(v45)) + (v41 << 6);
      goto LABEL_13;
    }
    v44 = v38 + 1;
    if (v38 + 2 < v72)
    {
      v45 = *(_QWORD *)(v70 + 8 * (v38 + 2));
      if (v45)
      {
        v41 = v38 + 2;
        goto LABEL_19;
      }
      v46 = v38 + 3;
      v44 = v38 + 2;
      if (v38 + 3 < v72)
      {
        v45 = *(_QWORD *)(v70 + 8 * v46);
        if (v45)
        {
          v41 = v38 + 3;
          goto LABEL_19;
        }
        while (1)
        {
          v41 = v46 + 1;
          if (__OFADD__(v46, 1))
            break;
          if (v41 >= v72)
          {
            v44 = v69[0];
            goto LABEL_33;
          }
          v45 = *(_QWORD *)(v70 + 8 * v41);
          ++v46;
          if (v45)
            goto LABEL_19;
        }
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
  }
LABEL_33:
  v95 = v44;
  OUTLINED_FUNCTION_10_0(v37, 1);
  v39 = 0;
LABEL_34:
  while (1)
  {
    v47 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v84, v37, v88);
    if (__swift_getEnumTagSinglePayload(v47, 1, TupleTypeMetadata2) == 1)
      break;
    v93 = *(_QWORD *)(v47 + *(int *)(TupleTypeMetadata2 + 48));
    v48 = v93;
    v49 = (uint64_t)v96;
    v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 32);
    v50 = v97;
    v51 = v91(v96, v47, v24);
    MEMORY[0x1E0C80A78](v51);
    v52 = v80;
    v69[-4] = v24;
    v69[-3] = v52;
    v69[-2] = v48;
    v94 = v39;
    v53 = v78;
    v92 = firstly<A>(closure:)(sub_190B6FC78);
    v54 = v85;
    OUTLINED_FUNCTION_17_0(v85, v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16));
    v55 = (*(unsigned __int8 *)(v50 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v56 = (v76 + v55) & 0xFFFFFFFFFFFFFFF8;
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = v53;
    v57[3] = v24;
    v57[4] = v52;
    v58 = v79;
    v60 = v90;
    v59 = (void (*)(char *, uint64_t, uint64_t))v91;
    v61 = v24;
    v62 = v83;
    v57[5] = v83;
    v63 = (char *)v57 + v55;
    v65 = v81;
    v64 = v82;
    v57[6] = v81;
    v57[7] = v64;
    v59(v63, v54, v61);
    *(_QWORD *)((char *)v57 + v56) = v60;
    *(_QWORD *)((char *)v57 + ((v56 + 15) & 0xFFFFFFFFFFFFFFF8)) = v58;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_4_2();
    swift_retain();
    v66 = v86;
    Promise.then<A>(on:closure:)();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_54();
    v67 = (_QWORD *)OUTLINED_FUNCTION_24();
    v67[2] = v62;
    v67[3] = v65;
    v67[4] = v58;
    swift_retain();
    swift_retain();
    v23 = v58;
    v32 = v77;
    swift_retain();
    v68 = v66;
    v37 = (uint64_t)v89;
    sub_190ADE658(v68, (uint64_t)sub_190B6FC40, (uint64_t)v67);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_54();
    swift_release();
    v24 = v74;
    (*(void (**)(char *))(v97 + 8))(v96);
    v31 = v94;
    v38 = v95;
    if ((v32 & 0x8000000000000000) == 0)
      goto LABEL_11;
LABEL_14:
    if (sub_190BE5E40())
    {
      sub_190BE608C();
      swift_unknownObjectRelease();
      sub_190BE608C();
      swift_unknownObjectRelease();
      v42 = v37;
      v43 = 0;
    }
    else
    {
      v42 = v37;
      v43 = 1;
    }
    OUTLINED_FUNCTION_10_0(v42, v43);
    v95 = v38;
    v39 = v31;
  }
  sub_190AD05B8();
  OUTLINED_FUNCTION_1_52();
  if (*(_QWORD *)(v23 + 16))
  {
    OUTLINED_FUNCTION_1();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_39;
  }
LABEL_43:
  __break(1u);
}

void sub_190B6F7E0()
{
  sub_190ADBEE0((void (*)(void))sub_190B6FC58);
}

uint64_t sub_190B6F830(_BYTE *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];

  v24[1] = a6;
  v24[2] = a5;
  v10 = *(_QWORD *)(*(_QWORD *)a6 + 80);
  v11 = *(_QWORD *)(v10 + 24);
  v12 = sub_190BE59A8();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v24 - v14;
  v16 = *(_QWORD *)(v10 + 16);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v13);
  v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a3, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v15, a4, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
    swift_beginAccess();
    sub_190BE4EB0();
    swift_endAccess();
    swift_beginAccess();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v21 = sub_190BE4E38();
    swift_bridgeObjectRelease();
    type metadata accessor for Promise(0, v11, v22, v23);
    result = sub_190BE4E38();
    if (v21 == result)
    {
      swift_beginAccess();
      *a1 = 1;
      swift_beginAccess();
      v24[3] = *a2;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      DeferredPromise.resolve(_:)();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_190B6FA38()
{
  sub_190ADBEE0((void (*)(void))sub_190B6FC4C);
}

uint64_t sub_190B6FA78()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190B6FA9C()
{
  return swift_deallocObject();
}

uint64_t sub_190B6FAAC()
{
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  swift_release();
  OUTLINED_FUNCTION_41();
  swift_release();
  return OUTLINED_FUNCTION_33();
}

uint64_t sub_190B6FB0C()
{
  swift_release();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  return swift_deallocObject();
}

void sub_190B6FB38()
{
  sub_190B6EFA8();
}

uint64_t sub_190B6FB48()
{
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  swift_release();
  OUTLINED_FUNCTION_41();
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_33();
}

void sub_190B6FBB8()
{
  sub_190B6F7E0();
}

uint64_t sub_190B6FC0C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190B6FC40()
{
  sub_190B6FA38();
}

uint64_t sub_190B6FC4C()
{
  uint64_t v0;

  return sub_190B6EFEC(*(_BYTE **)(v0 + 16));
}

uint64_t sub_190B6FC58()
{
  uint64_t v0;

  return sub_190B6F830(*(_BYTE **)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_190B6FC68()
{
  uint64_t v0;

  return sub_190B6EFEC(*(_BYTE **)(v0 + 32));
}

uint64_t sub_190B6FC78()
{
  return sub_190ADE66C();
}

uint64_t Diffable.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t))(*(_QWORD *)(a3 + 16) + 8))(a2);
  sub_190BE50B4();
  return swift_bridgeObjectRelease();
}

unint64_t JSON.subscript.getter@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t result;

  v4 = *a1;
  v5 = *v2;
  v6 = *(_QWORD *)(*a1 + 16);
  if (!v6)
  {
    result = OUTLINED_FUNCTION_2_47();
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_2_47();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v7 = v4 + 40;
  while (!(v5 >> 61))
  {
    v12 = *(_QWORD *)(v5 + 16);
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_20;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    OUTLINED_FUNCTION_2_47();
    v13 = sub_190AEABD0();
    if ((v14 & 1) == 0)
    {
      OUTLINED_FUNCTION_0_56();
      OUTLINED_FUNCTION_3_1();
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    sub_190AEA618(v11);
    OUTLINED_FUNCTION_0_56();
    swift_bridgeObjectRelease();
LABEL_12:
    v7 += 16;
    OUTLINED_FUNCTION_0_56();
    v5 = v11;
    if (!--v6)
    {
      result = OUTLINED_FUNCTION_3_1();
      v5 = v11;
      goto LABEL_22;
    }
  }
  if (v5 >> 61 == 1)
  {
    v8 = *(_QWORD *)(v5 + 16);
    swift_retain();
    v9 = JSONPointer.Component.index.getter();
    if ((v10 & 1) != 0 || v9 < 0 || v9 >= *(_QWORD *)(v8 + 16))
    {
      OUTLINED_FUNCTION_3_1();
      OUTLINED_FUNCTION_0_56();
      goto LABEL_21;
    }
    v11 = *(_QWORD *)(v8 + 8 * v9 + 32);
    sub_190AEA618(v11);
    OUTLINED_FUNCTION_0_56();
    goto LABEL_12;
  }
  result = OUTLINED_FUNCTION_3_1();
  if (v6 == 1)
    goto LABEL_22;
LABEL_21:
  result = OUTLINED_FUNCTION_0_56();
  v5 = 0xF000000000000007;
LABEL_22:
  *a2 = v5;
  return result;
}

uint64_t Synchronizer.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v0 + 16) = dispatch_group_create();
  return v0;
}

uint64_t Synchronizer.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = dispatch_group_create();
  return v0;
}

uint64_t Synchronizer.synchronize(on:closure:)(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = v3;
  sub_190B3BA14(0, (unint64_t *)&qword_1ED032C30, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  v8 = OUTLINED_FUNCTION_24();
  v13 = 0;
  type metadata accessor for UnfairLock();
  OUTLINED_FUNCTION_24();
  swift_retain();
  v9 = a1;
  UnfairLock.init(options:)((int *)&v13);
  v11 = v10;
  sub_190B3BA14(0, &qword_1ED032C20, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_24();
  *(_QWORD *)(v8 + 16) = sub_190AC8364(v11);
  swift_retain_n();
  sub_190B6FFC0((uint64_t)sub_190B3BA60, v8, (uint64_t)sub_190B70398, v8, v4, a2, a3, v9);

  swift_release();
  swift_release_n();
  return v8;
}

void sub_190B6FFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, void *a8)
{
  uint64_t v13;
  NSObject *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = *(NSObject **)(a5 + 16);
  swift_retain();
  dispatch_group_enter(v14);
  a6();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a8;
  v15[4] = sub_190AF6F04;
  v15[5] = v13;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_190B70434;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = qword_1ED035648;
  swift_retain();
  v18 = a8;
  if (v17 != -1)
    swift_once();
  v19 = (id)qword_1ED035618;
  sub_190AC906C();
  swift_release();
  swift_release();

  v20 = (void *)qword_1ED035618;
  swift_retain();
  v21 = v20;
  sub_190B22144((uint64_t)v21, (uint64_t)sub_190B70468, a5);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_190B70140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v18[0] = a2;
  v6 = sub_190BE4C40();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190BE4C88();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  aBlock[4] = sub_190B05B88;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_11;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_190BE4C64();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_190AC2574((unint64_t *)&qword_1ED034E18, v7, MEMORY[0x1E0DEF510]);
  sub_190ADCAF0();
  sub_190AC2574((unint64_t *)&qword_1ED034E28, (uint64_t (*)(uint64_t))sub_190ADCAF0, MEMORY[0x1E0DEAF38]);
  sub_190BE5B70();
  sub_190BE58C4();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_190B70330(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 16));
}

uint64_t Synchronizer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Synchronizer.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_190B70378(void *a1, void (*a2)(void), uint64_t a3)
{
  return Synchronizer.synchronize(on:closure:)(a1, a2, a3);
}

uint64_t sub_190B70398(uint64_t a1)
{
  uint64_t v1;

  return sub_190B2115C(a1, v1);
}

uint64_t dispatch thunk of SynchronizerType.synchronize(on:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for Synchronizer()
{
  return objc_opt_self();
}

uint64_t method lookup function for Synchronizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Synchronizer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_190B703DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B70400()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B70434()
{
  uint64_t *v0;

  return sub_190B70140(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_190B70440()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_190B70468()
{
  uint64_t v0;

  sub_190B70330(v0);
}

uint64_t sub_190B70478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 <= 1u)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t destroy for ReferenceCodingError(uint64_t a1)
{
  return sub_190B704D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_190B704D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 <= 1u)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ReferenceCodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_190B70478(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ReferenceCodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_190B70478(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_190B704D4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ReferenceCodingError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_190B704D4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferenceCodingError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferenceCodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_190B706BC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_190B706D4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReferenceCodingError()
{
  return &type metadata for ReferenceCodingError;
}

uint64_t sub_190B70700()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t method lookup function for RegistrationContainer()
{
  return swift_lookUpClassMethod();
}

void __swiftcall NSURL.appendQueryItem(with:value:)(NSURL_optional *__return_ptr retstr, Swift::String with, Swift::String value)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  char *v33;

  v32 = value;
  v31 = with;
  v3 = sub_190BE4448();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0CAE890];
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED034BC0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v28 - v7;
  v8 = sub_190BE43A0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - v13;
  v15 = sub_190BE4628();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, v4);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v28 - v20;
  sub_190BE45C8();
  sub_190BE43DC();
  v28 = *(void (**)(char *, uint64_t))(v16 + 8);
  v28(v18, v15);
  if (OUTLINED_FUNCTION_0_57() || (v23 = sub_190BE43C4()) == 0)
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v22 = v23;
  }
  sub_190BE437C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = OUTLINED_FUNCTION_3_42();
  v24 = *(_QWORD *)(v22 + 16);
  if (v24 >= *(_QWORD *)(v22 + 24) >> 1)
    v22 = OUTLINED_FUNCTION_3_42();
  *(_QWORD *)(v22 + 16) = v24 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v24, v12, v8);
  if (OUTLINED_FUNCTION_0_57())
    swift_bridgeObjectRelease();
  else
    sub_190BE43D0();
  v25 = (uint64_t)v33;
  if (OUTLINED_FUNCTION_0_57())
  {
    __swift_storeEnumTagSinglePayload(v25, 1, 1, v15);
  }
  else
  {
    v26 = v29;
    v27 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v29, v21, v3);
    sub_190BE43E8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v3);
    if (__swift_getEnumTagSinglePayload(v25, 1, v15) != 1)
    {
      sub_190BE45A4();
      OUTLINED_FUNCTION_1_53();
      v28((char *)v25, v15);
      goto LABEL_16;
    }
  }
  OUTLINED_FUNCTION_1_53();
LABEL_16:
  sub_190AFF9C0((uint64_t)v21);
}

ValueMetadata *type metadata accessor for AuthTokenRequest()
{
  return &type metadata for AuthTokenRequest;
}

uint64_t sub_190B70A80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_190BE60BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473694C6C7275 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_190BE60BC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_190B70B5C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473694C6C7275;
  else
    return 1701869940;
}

uint64_t sub_190B70B8C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  sub_190B70D68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B70DC0();
  sub_190BE6374();
  v14 = 0;
  sub_190BE5F6C();
  if (!v4)
  {
    v12[1] = v12[0];
    v13 = 1;
    sub_190B399A0(0);
    sub_190B70DFC();
    sub_190BE5F90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_190B70CD0()
{
  char *v0;

  return sub_190B70B5C(*v0);
}

uint64_t sub_190B70CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190B70A80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190B70CFC()
{
  sub_190B70DC0();
  return sub_190BE6404();
}

uint64_t sub_190B70D24()
{
  sub_190B70DC0();
  return sub_190BE6410();
}

uint64_t sub_190B70D4C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_190B70B8C(a1, *v1, v1[1], v1[2]);
}

void sub_190B70D68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02F3D8)
  {
    sub_190B70DC0();
    v0 = sub_190BE5F9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02F3D8);
  }
}

unint64_t sub_190B70DC0()
{
  unint64_t result;

  result = qword_1ED02F070;
  if (!qword_1ED02F070)
  {
    result = MEMORY[0x194016EF8](&unk_190BED070, &type metadata for AuthTokenRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F070);
  }
  return result;
}

unint64_t sub_190B70DFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED02F360;
  if (!qword_1ED02F360)
  {
    sub_190B399A0(255);
    v2 = v1;
    v3 = sub_190B70E5C();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED02F360);
  }
  return result;
}

unint64_t sub_190B70E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED02EFA0;
  if (!qword_1ED02EFA0)
  {
    v1 = sub_190BE4628();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0CB0010], v1);
    atomic_store(result, (unint64_t *)&qword_1ED02EFA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AuthTokenRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B70EE8 + 4 * byte_190BECF65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B70F1C + 4 * byte_190BECF60[v4]))();
}

uint64_t sub_190B70F1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B70F24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B70F2CLL);
  return result;
}

uint64_t sub_190B70F38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B70F40);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B70F44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B70F4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenRequest.CodingKeys()
{
  return &type metadata for AuthTokenRequest.CodingKeys;
}

unint64_t sub_190B70F6C()
{
  unint64_t result;

  result = qword_1EE2000C0;
  if (!qword_1EE2000C0)
  {
    result = MEMORY[0x194016EF8](&unk_190BED048, &type metadata for AuthTokenRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE2000C0);
  }
  return result;
}

unint64_t sub_190B70FAC()
{
  unint64_t result;

  result = qword_1ED02F080;
  if (!qword_1ED02F080)
  {
    result = MEMORY[0x194016EF8](&unk_190BECFB8, &type metadata for AuthTokenRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F080);
  }
  return result;
}

unint64_t sub_190B70FEC()
{
  unint64_t result;

  result = qword_1ED02F078;
  if (!qword_1ED02F078)
  {
    result = MEMORY[0x194016EF8](&unk_190BECFE0, &type metadata for AuthTokenRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F078);
  }
  return result;
}

uint64_t sub_190B7102C(uint64_t a1)
{
  return sub_190B71220(a1, &qword_1EE1FE038, &qword_1ED02EB80, (uint64_t)&type metadata for AnyReference, (void (*)(uint64_t, uint64_t))sub_190B628A8);
}

uint64_t sub_190B71050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  type metadata accessor for AuthToken();
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_24();
  UnfairLock.init(options:)((int *)&v11);
  sub_190B447F4(a1, (uint64_t)v6);
  sub_190B7294C(0, &qword_1ED02F2B8, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  OUTLINED_FUNCTION_181();
  v7 = OUTLINED_FUNCTION_30_14();
  v8 = sub_190B71434(v7, (uint64_t)v6);
  sub_190B466D4(a1);
  *(_QWORD *)(v2 + 16) = v8;
  return v2;
}

void sub_190B71128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  v2 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v2);
  v4 = v3;
  sub_190B7294C(0, &qword_1ED02F2C0, (uint64_t (*)(uint64_t))sub_190B1DE20);
  OUTLINED_FUNCTION_24();
  sub_190B71620(v4, a1, (void (*)(uint64_t, uint64_t))sub_190B28A08);
  OUTLINED_FUNCTION_64_5(v5);
  OUTLINED_FUNCTION_2_4();
}

void sub_190B711A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v4);
  v6 = v5;
  sub_190B7294C(0, &qword_1EE1FEE50, (uint64_t (*)(uint64_t))sub_190B39B4C);
  OUTLINED_FUNCTION_24();
  v7 = sub_190B71590(v6, a1, a2);
  OUTLINED_FUNCTION_64_5(v7);
  OUTLINED_FUNCTION_2_4();
}

uint64_t sub_190B71220(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  v11 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v11);
  sub_190B729D4(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_24();
  v12 = OUTLINED_FUNCTION_30_14();
  sub_190B71620(v12, a1, a5);
  *(_QWORD *)(v5 + 16) = v13;
  return v5;
}

uint64_t sub_190B712C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = sub_190BE428C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_24();
  UnfairLock.init(options:)((int *)&v13);
  OUTLINED_FUNCTION_16_6((uint64_t)v8, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  sub_190B7294C(0, &qword_1EE1FEE48, v5);
  OUTLINED_FUNCTION_181();
  v9 = OUTLINED_FUNCTION_30_14();
  v10 = sub_190B71694(v9, (uint64_t)v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  *(_QWORD *)(v2 + 16) = v10;
  return v2;
}

void sub_190B713BC(char a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1 & 1;
  OUTLINED_FUNCTION_16_1();
  v2 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_29_4(v2);
  sub_190ACF6F0(0, &qword_1ED031E00, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  OUTLINED_FUNCTION_24();
  v3 = OUTLINED_FUNCTION_30_14();
  v4 = sub_190B71804(v3, v1);
  OUTLINED_FUNCTION_64_5(v4);
  OUTLINED_FUNCTION_2_4();
}

uint64_t sub_190B71434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_190B72988(0, &qword_1ED02F270, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - v6;
  *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
  v8 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  sub_190B72A40(0, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  v10 = v9;
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = 1;
  sub_190B72A80(a2, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
  v11 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  swift_beginAccess();
  sub_190B72AC4((uint64_t)v7, v11, &qword_1ED02F270, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  swift_endAccess();
  return v2;
}

uint64_t sub_190B71590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)(v3 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 56) = -1;
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = 1;
  swift_beginAccess();
  v6 = *(void **)(v3 + 40);
  v7 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  v8 = *(_BYTE *)(v3 + 56);
  *(_BYTE *)(v3 + 56) = 0;
  sub_190B39A54(v6, v7, v8);
  return v3;
}

void sub_190B71620(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 32) = v6;
  *(_BYTE *)(v3 + 48) = -1;
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = 1;
  OUTLINED_FUNCTION_20_0();
  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = a2;
  v8 = *(unsigned __int8 *)(v3 + 48);
  *(_BYTE *)(v3 + 48) = 0;
  a3(v7, v8);
  OUTLINED_FUNCTION_67();
}

uint64_t sub_190B71694(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50];
  sub_190B72988(0, &qword_1EE1FEE18, &qword_1EE1FEE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
  v9 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  sub_190B72A40(0, &qword_1EE1FEE10, v5);
  v11 = v10;
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = 1;
  v12 = sub_190BE428C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, a2, v12);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
  v13 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  swift_beginAccess();
  sub_190B72AC4((uint64_t)v8, v13, &qword_1EE1FEE18, &qword_1EE1FEE10, v5);
  swift_endAccess();
  return v2;
}

uint64_t sub_190B71804(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;

  *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = -1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = 1;
  v3 = a2 & 1;
  swift_beginAccess();
  v4 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = v3;
  v5 = *(_BYTE *)(v2 + 48);
  *(_BYTE *)(v2 + 48) = 0;
  sub_190AB7D2C(v4, v5);
  return v2;
}

void Cache.__allocating_init(_:)()
{
  OUTLINED_FUNCTION_24();
  Cache.init(_:)();
  OUTLINED_FUNCTION_0();
}

void Cache.init(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];
  _QWORD *v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;

  OUTLINED_FUNCTION_72();
  v4 = v3;
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 88);
  OUTLINED_FUNCTION_27_14(v3, v7, v8, v9);
  OUTLINED_FUNCTION_9_31();
  OUTLINED_FUNCTION_81_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_33_10();
  v77 = v11;
  v84 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_15_22(v13, v64[0]);
  v15 = MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_52_8(v15, v16, v17, v18, v19, v20, v21, v22, v64[0]);
  v23 = *(_QWORD *)(v5 + 80);
  v83 = *(_QWORD *)(v23 - 8);
  OUTLINED_FUNCTION_28();
  v25 = MEMORY[0x1E0C80A78](v24);
  v74 = (uint64_t)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_52_1();
  v73 = v27;
  v86 = v6;
  v28 = OUTLINED_FUNCTION_49_6();
  v29 = OUTLINED_FUNCTION_58();
  v80 = *(_QWORD *)(v29 - 8);
  v81 = v29;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_65_0();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_52_1();
  v82 = v32;
  v33 = *(_QWORD *)(v5 + 96);
  v85 = v23;
  v78 = v1;
  v71 = v33;
  v34 = sub_190BE4D6C();
  v65 = v0;
  v0[2] = v34;
  v89 = 1;
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_24();
  UnfairLock.init(options:)((int *)&v89);
  v69 = v0 + 2;
  v0[3] = v35;
  v36 = v4;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v37 = sub_190BE5E34();
    v66 = 0;
    v38 = 0;
    v39 = 0;
    v36 = v37 | 0x8000000000000000;
  }
  else
  {
    v66 = v4 + 64;
    OUTLINED_FUNCTION_57_4();
    v39 = v40 & v41;
  }
  v42 = 0;
  v68 = v36 & 0x7FFFFFFFFFFFFFFFLL;
  v64[1] = v38;
  v67 = (unint64_t)(v38 + 64) >> 6;
  v64[0] = v67 - 1;
  v79 = v36;
  v72 = v2;
  v70 = v28;
  if ((v36 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  v43 = v82;
  if (v39)
  {
    v4 = (v39 - 1) & v39;
    v44 = __clz(__rbit64(v39)) | (v42 << 6);
    v45 = v42;
LABEL_7:
    v46 = OUTLINED_FUNCTION_70_3();
    v47(v46);
    OUTLINED_FUNCTION_37_11(*(_QWORD *)(v36 + 56) + *(_QWORD *)(v84 + 72) * v44, *(int *)(v28 + 48));
    v48 = 0;
    goto LABEL_17;
  }
  v45 = v42 + 1;
  if (__OFADD__(v42, 1))
  {
    __break(1u);
  }
  else
  {
    if (v45 >= v67)
    {
      OUTLINED_FUNCTION_55_2();
      v45 = v42;
      goto LABEL_17;
    }
    v50 = *(_QWORD *)(v66 + 8 * v45);
    if (v50)
      goto LABEL_13;
    if (v42 + 2 >= v67)
    {
      OUTLINED_FUNCTION_55_2();
      goto LABEL_17;
    }
    v50 = *(_QWORD *)(v66 + 8 * (v42 + 2));
    if (v50)
    {
      v45 = v42 + 2;
LABEL_13:
      v4 = (v50 - 1) & v50;
      v44 = __clz(__rbit64(v50)) + (v45 << 6);
      goto LABEL_7;
    }
    v62 = v42 + 3;
    if (v42 + 3 >= v67)
    {
      OUTLINED_FUNCTION_55_2();
      v45 = v63;
      goto LABEL_17;
    }
    v50 = *(_QWORD *)(v66 + 8 * v62);
    if (v50)
    {
      v45 = v42 + 3;
      goto LABEL_13;
    }
    while (1)
    {
      v45 = v62 + 1;
      if (__OFADD__(v62, 1))
        break;
      if (v45 >= v67)
      {
        OUTLINED_FUNCTION_55_2();
        v45 = v64[0];
LABEL_17:
        while (1)
        {
          __swift_storeEnumTagSinglePayload(v2, v48, 1, v28);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v43, v2, v81);
          OUTLINED_FUNCTION_23_3(v43, 1, v28);
          if (v51)
            break;
          v52 = v43 + *(int *)(v28 + 48);
          v88 = v45;
          v53 = v83;
          v54 = v73;
          v55 = v85;
          OUTLINED_FUNCTION_13_2(v73, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 32));
          v56 = v84;
          v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 32);
          v58 = v75;
          v87 = v4;
          v4 = v86;
          OUTLINED_FUNCTION_91(v75, v52, v57);
          OUTLINED_FUNCTION_13_2(v74, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
          v59 = v76;
          OUTLINED_FUNCTION_91(v76, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 16));
          v60 = v77;
          sub_190AD5090(v59, v4, v77);
          __swift_storeEnumTagSinglePayload(v60, 0, 1, v78);
          OUTLINED_FUNCTION_20_0();
          sub_190BE4E98();
          OUTLINED_FUNCTION_30_14();
          sub_190BE4EB0();
          swift_endAccess();
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v58, v4);
          v61 = v54;
          v28 = v70;
          v2 = v72;
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v61, v55);
          v39 = v87;
          v42 = v88;
          v36 = v79;
          if ((v79 & 0x8000000000000000) == 0)
            goto LABEL_5;
LABEL_8:
          v49 = sub_190BE5E40();
          v43 = v82;
          if (v49)
          {
            sub_190BE608C();
            swift_unknownObjectRelease();
            OUTLINED_FUNCTION_26_11();
            OUTLINED_FUNCTION_18_3();
            v48 = 0;
          }
          else
          {
            v48 = 1;
          }
          v45 = v42;
          v4 = v39;
        }
        sub_190AD05B8();
        OUTLINED_FUNCTION_0_0();
        return;
      }
      v50 = *(_QWORD *)(v66 + 8 * v45);
      ++v62;
      if (v50)
        goto LABEL_13;
    }
  }
  __break(1u);
}

void sub_190B71E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a4 + a3 - 24);
  v7 = sub_190BE59A8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v14 - v13, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  Cache.subscript.setter();
}

void (*Cache.subscript.modify(_QWORD *a1, uint64_t a2))()
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  void *v13;

  v5 = malloc(0x48uLL);
  *a1 = v5;
  *v5 = v2;
  v6 = *v2;
  v7 = sub_190BE59A8();
  v5[1] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[2] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[3] = malloc(v9);
  v5[4] = malloc(v9);
  v10 = *(_QWORD *)(v6 + 80);
  v5[5] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[6] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v5[7] = malloc(v12);
  v13 = malloc(v12);
  v5[8] = v13;
  OUTLINED_FUNCTION_13_19((uint64_t)v13, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  Cache.subscript.getter();
  return sub_190B71FB8;
}

void sub_190B71FB8()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  char v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_72();
  v1 = *(_QWORD **)v0;
  v2 = *(void **)(*(_QWORD *)v0 + 56);
  v3 = *(void **)(*(_QWORD *)v0 + 64);
  if ((v4 & 1) != 0)
  {
    v5 = v1[6];
    v7 = (void *)v1[3];
    v6 = (void *)v1[4];
    v8 = v1[1];
    v9 = v1[2];
    OUTLINED_FUNCTION_91((uint64_t)v7, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    OUTLINED_FUNCTION_13_2((uint64_t)v2, (uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    Cache.subscript.setter();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    v7 = (void *)v1[3];
    v6 = (void *)v1[4];
    Cache.subscript.setter();
  }
  free(v3);
  free(v2);
  free(v6);
  free(v7);
  free(v1);
}

void Cache.subscript.getter(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  OUTLINED_FUNCTION_58();
  OUTLINED_FUNCTION_81_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_33_10();
  type metadata accessor for CacheEntry(255, v3, v5, v6);
  OUTLINED_FUNCTION_9_31();
  OUTLINED_FUNCTION_81_0();
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53_6();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_32_8();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_52_1();
  sub_190BE4D6C();
  UnfairLock.lock()();
  if (a1 >= 0.0)
  {
    OUTLINED_FUNCTION_74();
    sub_190BE5318();
    OUTLINED_FUNCTION_12_20();
  }
  __break(1u);
  JUMPOUT(0x190B723B4);
}

void Cache.read(_:maxAge:)(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_190BE4E98();
  OUTLINED_FUNCTION_62_1(v2, v3, v4, v5);
  Cache.subscript.getter(a1);
}

void sub_190B72400()
{
  Promise.__allocating_init(value:)();
}

void Cache.write(values:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  static Cache.+= infix(_:_:)();
  v0 = sub_190BE4E98();
  OUTLINED_FUNCTION_62_1(v0, v1, v2, v3);
  OUTLINED_FUNCTION_74();
  Promise.__allocating_init(value:)();
  OUTLINED_FUNCTION_10_6();
}

Swift::Void __swiftcall Cache.removeAll()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[3];
  UnfairLock.lock()();
  OUTLINED_FUNCTION_20_0();
  type metadata accessor for CacheEntry(0, *(_QWORD *)(v1 + 88), v3, v4);
  sub_190ADAA00();
  sub_190BE4E98();
  sub_190BE4E8C();
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
}

void Cache<>.readAsync(_:)()
{
  Cache.read(_:maxAge:)(1.79769313e308);
}

void Cache<>.deleteAsync(_:)()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_190ADBEE0((void (*)(void))sub_190B72720);
  swift_release();
  v0 = MEMORY[0x1E0DEA968];
  sub_190B729D4(0, &qword_1EE1FFE20, (unint64_t *)&qword_1ED034520, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  OUTLINED_FUNCTION_24();
  v1 = OUTLINED_FUNCTION_74();
  sub_190B71220(v1, &qword_1EE1FFE30, (unint64_t *)&qword_1ED034520, v0, (void (*)(uint64_t, uint64_t))sub_190B628A8);
  OUTLINED_FUNCTION_67();
}

void sub_190B725EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  swift_beginAccess();
  type metadata accessor for CacheEntry(0, *(_QWORD *)(v1 + 88), v2, v3);
  -= infix<A, B>(_:_:)();
}

uint64_t sub_190B7264C()
{
  return swift_endAccess();
}

void sub_190B72668()
{
  Cache<>.readAsync(_:)();
}

void sub_190B72688()
{
  Cache<>.readAsync(_:maxAge:)();
}

uint64_t sub_190B726A8()
{
  return Cache<>.writeAsync(_:)();
}

void sub_190B726C8()
{
  Cache<>.deleteAsync(_:)();
}

uint64_t sub_190B726E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 24) - 8) + 16))(a2, a1);
}

void sub_190B72720()
{
  uint64_t v0;

  sub_190B725EC(*(uint64_t **)(v0 + 16));
}

void sub_190B72728()
{
  Cache.subscript.getter();
}

uint64_t sub_190B72750()
{
  return 24;
}

__n128 sub_190B7275C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for Cache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Cache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of Cache.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t *sub_190B7278C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_190BE47E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = *(_DWORD *)(v6 + 80) | v10;
  v14 = (*(_BYTE *)(v6 + 80) | v10);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v12 & (unint64_t)~v11) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v8;
    v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v20, ((unint64_t)a2 + v12) & v20, v19);
  }
  return a1;
}

uint64_t sub_190B7286C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_190BE47E4();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_190B728DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_190BE47E4();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

void sub_190B7294C(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    OUTLINED_FUNCTION_101(0, (uint64_t)a2, a3);
    v4 = OUTLINED_FUNCTION_61_3();
    v8 = type metadata accessor for Seal(v4, v5, v6, v7);
    if (!v9)
      atomic_store(v8, v3);
  }
  OUTLINED_FUNCTION_0();
}

void sub_190B72988(uint64_t a1, unint64_t *a2, _QWORD *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_190B72A40(255, a3, a4);
    OUTLINED_FUNCTION_61_3();
    v5 = sub_190BE59A8();
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_0();
}

void sub_190B729D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_190ACF6F0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_190B72A40(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    OUTLINED_FUNCTION_101(0, (uint64_t)a2, a3);
    v4 = OUTLINED_FUNCTION_61_3();
    v7 = type metadata accessor for Seal.Resolution(v4, v5, v5, v6);
    if (!v8)
      atomic_store(v7, v3);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B72A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_190B72AC4(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7;

  sub_190B72988(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(a2, a1, v7);
  OUTLINED_FUNCTION_0();
}

unint64_t sub_190B72B14(unint64_t result, int64_t a2, void *a3, uint64_t a4, void *a5)
{
  unint64_t v5;
  int64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
    {

      v12 = MEMORY[0x1E0DEE9D8];
LABEL_8:

      swift_unknownObjectRelease();
      return v12;
    }
    v9 = result;
    v14 = MEMORY[0x1E0DEE9D8];
    sub_190BE5D50();
    result = sub_190B72F4C();
    if (a2 >= v9 && (v5 & 0x8000000000000000) == 0)
    {
      do
      {
        v10 = a3;
        swift_unknownObjectRetain();
        v11 = a5;
        sub_190B72D5C(v10, a4, a5);
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
        --v5;
      }
      while (v5);
      v12 = v14;

      a5 = v11;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

void URLSessionPool.__allocating_init(size:configuration:delegate:delegateQueue:)(int64_t a1, void *a2, uint64_t a3, void *a4)
{
  swift_allocObject();
  URLSessionPool.init(size:configuration:delegate:delegateQueue:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_9();
}

void URLSessionPool.init(size:configuration:delegate:delegateQueue:)(int64_t a1, void *a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;

  v4[3] = 0;
  v10 = 1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  UnfairLock.init(options:)((int *)&v10);
  v4[4] = v9;
  if (a1 < 0)
    __break(1u);
  else
    v4[2] = sub_190B72B14(0, a1, a2, a3, a4);
}

id sub_190B72D5C(void *a1, uint64_t a2, void *a3)
{
  id v5;

  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, a3);

  swift_unknownObjectRelease();
  return v5;
}

NSURLSession __swiftcall URLSessionPool.nextSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  NSURLSession result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  UnfairLock.lock()();
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_190B72F28(v3, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0)
    result.super.isa = (Class)MEMORY[0x194015F20](v3, v4);
  else
    result.super.isa = (Class)*(id *)(v4 + 8 * v3 + 32);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else if (!(v4 >> 62))
  {
    v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_6;
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v8 = sub_190BE5EAC();
  result.super.isa = (Class)swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_14;
LABEL_6:
  if (v7 != 0x8000000000000000 || v8 != -1)
  {
    *(_QWORD *)(v1 + 24) = v7 % v8;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
    OUTLINED_FUNCTION_9();
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t URLSessionPool.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t URLSessionPool.__deallocating_deinit()
{
  URLSessionPool.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for URLSessionPool()
{
  return objc_opt_self();
}

uint64_t method lookup function for URLSessionPool()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of URLSessionPool.__allocating_init(size:configuration:delegate:delegateQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_190B72F28(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_190B72F4C()
{
  unint64_t result;

  result = qword_1ED033D20;
  if (!qword_1ED033D20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED033D20);
  }
  return result;
}

uint64_t URLHandlerContext.init(match:clientContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_190B562D4(a1, a4);
  v9 = a4 + *(int *)(type metadata accessor for URLHandlerContext(0, a3, v7, v8) + 28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v9, a2, a3);
}

uint64_t type metadata accessor for URLHandlerContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for URLHandlerContext);
}

uint64_t URLHandlerContext.match.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190B56228(v1, a1);
}

uint64_t URLHandlerContext.clientContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t sub_190B73014()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for URLHandlerMatch();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_190B7309C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  void (*v22)(unint64_t, unint64_t, uint64_t);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_190BE4628();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  v13 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
  v14 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  v15 = (*(_DWORD *)(v7 + 80) | v11) & 0x100000;
  if (v14 > 7 || v15 != 0 || (v13 & ~v12) + *(_QWORD *)(v10 + 64) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    v25 = ~v12;
    v26 = v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v19 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v19[1] = v20[1];
    v19[2] = v20[2];
    v19[3] = v20[3];
    v19[4] = v20[4];
    v19[5] = v20[5];
    v19[6] = v20[6];
    v19[7] = v20[7];
    v19[8] = v20[8];
    v19[9] = v20[9];
    *(_QWORD *)(((unint64_t)v19 + 87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + 87) & 0xFFFFFFFFFFFFF8);
    v24 = ((unint64_t)a1 + v13) & v25;
    v21 = ((unint64_t)a2 + v13) & v25;
    v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v22(v24, v21, v26);
  }
  return a1;
}

uint64_t sub_190B73270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190BE4628();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + (((v6 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_190B73330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void (*v18)(unint64_t, unint64_t, uint64_t);

  v6 = sub_190BE4628();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  v9[4] = v10[4];
  v9[5] = v10[5];
  v9[6] = v10[6];
  v9[7] = v10[7];
  v9[8] = v10[8];
  v9[9] = v10[9];
  *(_QWORD *)(((unint64_t)v9 + 87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v13 + 8;
  v15 = (v14 + a1) & ~v13;
  v16 = (v14 + a2) & ~v13;
  v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v18(v15, v16, v11);
  return a1;
}

uint64_t sub_190B734A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = sub_190BE4628();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[2] = v10[2];
  v9[3] = v10[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[4] = v10[4];
  v9[5] = v10[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[6] = v10[6];
  v9[7] = v10[7];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[8] = v10[8];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v9[9] = v10[9];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v9 + 87) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFF8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))((v13 + a1) & ~v12, (v13 + a2) & ~v12);
  return a1;
}

uint64_t sub_190B73628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_190BE4628();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  memcpy((void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8), (const void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8), 0x50uLL);
  *(_QWORD *)((((v8 + a1) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((((v8 + a2) & 0xFFFFFFFFFFFFFFF8)
                                                                                           + 87) & 0xFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v10 + 8;
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))((v11 + a1) & ~v10, (v11 + a2) & ~v10);
  return a1;
}

uint64_t sub_190B736F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = sub_190BE4628();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v9[2] = v10[2];
  v9[3] = v10[3];
  swift_bridgeObjectRelease();
  v9[4] = v10[4];
  v9[5] = v10[5];
  swift_bridgeObjectRelease();
  v9[6] = v10[6];
  v9[7] = v10[7];
  swift_bridgeObjectRelease();
  v9[8] = v10[8];
  swift_bridgeObjectRelease();
  v9[9] = v10[9];
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v9 + 87) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))((v13 + a1) & ~v12, (v13 + a2) & ~v12);
  return a1;
}

uint64_t sub_190B73840(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;

  v6 = sub_190BE4628();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v9)
    v13 = v9;
  else
    v13 = *(_DWORD *)(v11 + 84);
  if (!a2)
    return 0;
  v14 = v6;
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = ((((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + v16 + 8;
  if (a2 <= v13)
    goto LABEL_27;
  v18 = (v17 & ~v16) + *(_QWORD *)(v11 + 64);
  v19 = 8 * v18;
  if (v18 > 3)
    goto LABEL_10;
  v22 = ((a2 - v13 + ~(-1 << v19)) >> v19) + 1;
  if (HIWORD(v22))
  {
    v20 = *(_DWORD *)(a1 + v18);
    if (v20)
      goto LABEL_18;
  }
  else
  {
    if (v22 <= 0xFF)
    {
      if (v22 < 2)
        goto LABEL_27;
LABEL_10:
      v20 = *(unsigned __int8 *)(a1 + v18);
      if (!*(_BYTE *)(a1 + v18))
        goto LABEL_27;
LABEL_18:
      v23 = (v20 - 1) << v19;
      if (v18 > 3)
        v23 = 0;
      if ((_DWORD)v18)
      {
        if (v18 <= 3)
          v24 = v18;
        else
          v24 = 4;
        __asm { BR              X12 }
      }
      return v13 + v23 + 1;
    }
    v20 = *(unsigned __int16 *)(a1 + v18);
    if (*(_WORD *)(a1 + v18))
      goto LABEL_18;
  }
LABEL_27:
  if (v9 < v12)
  {
    v25 = (v17 + a1) & ~v16;
    v8 = v12;
    return __swift_getEnumTagSinglePayload(v25, v8, v10);
  }
  if (v8 >= 0x7FFFFFFF)
  {
    v25 = a1;
    v10 = v14;
    return __swift_getEnumTagSinglePayload(v25, v8, v10);
  }
  v26 = *(_QWORD *)(((a1 + v15 + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v26 >= 0xFFFFFFFF)
    LODWORD(v26) = -1;
  return (v26 + 1);
}

void sub_190B73A14(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  size_t v12;
  char v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_190BE4628() - 8);
  if (*(_DWORD *)(v8 + 84) <= 0x7FFFFFFFu)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = ((((((*(_QWORD *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
        + 8
        + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  v13 = 8 * v12;
  if (a3 <= v11)
  {
    v14 = 0u;
  }
  else if (v12 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v17 = v15 & ~(-1 << v13);
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t SignpostReporter.init(createdDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(int *)(type metadata accessor for SignpostReporter(0, a2, a3, a4) + 28);
  type metadata accessor for SignpostEntry(0, a2, v9, v10);
  *(_QWORD *)(a5 + v8) = sub_190BE4D78();
  v11 = OUTLINED_FUNCTION_0_1();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a5, a1, v11);
}

uint64_t type metadata accessor for SignpostReporter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SignpostReporter);
}

uint64_t SignpostReporter.create(date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v7 = OUTLINED_FUNCTION_0_1();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - v11;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14((char *)&v16 - v11, v3, v7);
  v14(v10, a1, v7);
  sub_190BE1A3C((uint64_t)v12, (uint64_t)v10, *(_QWORD *)(v3 + *(int *)(a2 + 28)), *(_QWORD *)(a2 + 16), a3);
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t SignpostReporter.add(_:object:date:comment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *);
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a5;
  v38 = a6;
  v39 = a3;
  v40 = a4;
  v35 = a2;
  v37 = a1;
  v7 = OUTLINED_FUNCTION_0_1();
  v36 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - v11;
  v13 = *(_QWORD *)(a6 + 16);
  v14 = sub_190BE59A8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - v16;
  v20 = type metadata accessor for SignpostEntry(0, v13, v18, v19);
  v34 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v33 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v35, v14);
  v28 = type metadata accessor for SignpostRecorder(0, v13, v26, v27);
  v29 = *(_QWORD *)(v37 + *(int *)(v28 + 28));
  v30 = *(void (**)(char *))(v36 + 16);
  v30(v12);
  ((void (*)(char *, uint64_t, uint64_t))v30)(v10, v39, v7);
  sub_190B57E90((uint64_t)v17, v29, (uint64_t)v12, (uint64_t)v10, v40, v41, v13, (uint64_t)v25);
  v31 = v34;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v23, v25, v20);
  sub_190BE5438();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE53D8();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v25, v20);
}

uint64_t sub_190B74014()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B74020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190B74094()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B740A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_190B74110()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_17_1();
  v1 = objc_allocWithZone((Class)TFKey);
  v2 = v0;
  objc_msgSend(OUTLINED_FUNCTION_1_7((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0), sel_address);
  OUTLINED_FUNCTION_16_22();
  v10 = OUTLINED_FUNCTION_5();
  v11 = OUTLINED_FUNCTION_7_34(v10);
  OUTLINED_FUNCTION_3_43(v11, v12, v13, v14, (uint64_t)sub_190AF821C);
  OUTLINED_FUNCTION_9_32();
  OUTLINED_FUNCTION_21();
}

void sub_190B7419C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_8_33();
  OUTLINED_FUNCTION_17_1();
  v1 = objc_allocWithZone((Class)TFKey);
  v2 = v0;
  v10 = OUTLINED_FUNCTION_1_7((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);
  OUTLINED_FUNCTION_11_24();

  v11 = OUTLINED_FUNCTION_5();
  v12 = OUTLINED_FUNCTION_6_35(v11);
  OUTLINED_FUNCTION_2_48(v12, v13, v14, v15, (uint64_t)sub_190AF821C);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_3_9();
}

void sub_190B74234()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_17_1();
  v1 = objc_allocWithZone((Class)TFKey);
  v2 = v0;
  objc_msgSend(OUTLINED_FUNCTION_1_7((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0), sel_address);
  OUTLINED_FUNCTION_16_22();
  v10 = OUTLINED_FUNCTION_5();
  v11 = OUTLINED_FUNCTION_7_34(v10);
  OUTLINED_FUNCTION_3_43(v11, v12, v13, v14, (uint64_t)sub_190AF821C);
  OUTLINED_FUNCTION_9_32();
  OUTLINED_FUNCTION_21();
}

void sub_190B742DC()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_8_33();
  OUTLINED_FUNCTION_17_1();
  v1 = objc_allocWithZone((Class)TFKey);
  v2 = v0;
  v10 = OUTLINED_FUNCTION_1_7((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)v0);
  objc_msgSend(v10, sel_address);
  OUTLINED_FUNCTION_11_24();

  v11 = OUTLINED_FUNCTION_5();
  v12 = OUTLINED_FUNCTION_6_35(v11);
  OUTLINED_FUNCTION_2_48(v12, v13, v14, v15, (uint64_t)sub_190AF7758);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_3_9();
}

void sub_190B74390()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_190B743C8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_190B743EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t BridgedContainer.resolver.getter()
{
  return swift_unknownObjectRetain();
}

id BridgedContainer.__allocating_init(bundleAssemblies:assemblies:)(unint64_t a1, unint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return BridgedContainer.init(bundleAssemblies:assemblies:)(a1, a2);
}

id BridgedContainer.init(bundleAssemblies:assemblies:)(unint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  char *v6;
  id result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  objc_class *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  objc_super v86;
  void *v87;
  void *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  _UNKNOWN **v96;
  uint64_t v97[3];
  uint64_t v98;
  uint64_t v99;

  v83 = a2;
  ObjectType = swift_getObjectType();
  if (a1 >> 62)
  {
    v73 = v2;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = (id)sub_190BE5EAC();
    v5 = (uint64_t)result;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v2;
    result = (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  v74 = (objc_class *)ObjectType;
  v77 = v2;
  if (v5)
  {
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_50;
    }
    v8 = 0;
    v9 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x194015F20](v8, a1);
      }
      else
      {
        v10 = *(_QWORD *)(a1 + 8 * v8 + 32);
        OUTLINED_FUNCTION_1_54();
      }
      v93 = v10;
      sub_190AA96FC(0, &qword_1ED034800);
      OUTLINED_FUNCTION_1_54();
      if (swift_dynamicCast())
      {
        v11 = sub_190AAB5A4(&v89, (uint64_t)v97);
        OUTLINED_FUNCTION_0_58(v11, v12, v13, v14, v15, v16, v17, v18, (uint64_t)v74, (uint64_t)v77, v80, v83, (uint64_t)v86.receiver, (uint64_t)v86.super_class);
      }
      else
      {
        OUTLINED_FUNCTION_8_34();
        OUTLINED_FUNCTION_6_36(v19, (unint64_t *)&unk_1EE2000F0, &qword_1ED034800);
        v88 = &unk_1EE212858;
        OUTLINED_FUNCTION_1_54();
        v20 = swift_dynamicCastObjCProtocolConditional();
        if (v20)
        {
          v21 = v20;
          v22 = type metadata accessor for BridgedBundleAssembly();
          v23 = OUTLINED_FUNCTION_7_2();
          *(_QWORD *)(v23 + 16) = v21;
          *((_QWORD *)&v95 + 1) = v22;
          v96 = &protocol witness table for BridgedBundleAssembly;
          *(_QWORD *)&v94 = v23;
        }
        else
        {
          OUTLINED_FUNCTION_3_44();
          v96 = 0;
          v94 = 0u;
          v95 = 0u;
        }
      }
      OUTLINED_FUNCTION_3_44();
      if (*((_QWORD *)&v95 + 1))
      {
        v24 = sub_190AAB5A4(&v94, (uint64_t)v97);
        OUTLINED_FUNCTION_0_58(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v74, (uint64_t)v77, v80, v83, (uint64_t)v86.receiver, (uint64_t)v86.super_class);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_4_33(0, *(_QWORD *)(v9 + 16) + 1);
          v9 = v34;
        }
        v33 = *(_QWORD *)(v9 + 16);
        v32 = *(_QWORD *)(v9 + 24);
        if (v33 >= v32 >> 1)
        {
          OUTLINED_FUNCTION_4_33(v32 > 1, v33 + 1);
          v9 = v35;
        }
        *(_QWORD *)(v9 + 16) = v33 + 1;
        OUTLINED_FUNCTION_7_35(v9 + 40 * v33, v75, v78, v81, v84, (uint64_t)v86.receiver, (uint64_t)v86.super_class, (uint64_t)v87, (uint64_t)v88, v89, *((uint64_t *)&v89 + 1), v90, v91, v92, v93, v94);
      }
      else
      {
        OUTLINED_FUNCTION_6_36((uint64_t)&v94, (unint64_t *)&unk_1EE2000F0, &qword_1ED034800);
      }
      ++v8;
    }
    while (v5 != v8);
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  if (v83 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = (id)sub_190BE5EAC();
    v36 = (uint64_t)result;
  }
  else
  {
    v36 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  if (!v36)
  {
LABEL_46:
    swift_bridgeObjectRelease_n();
    type metadata accessor for SingletonPool();
    *(_QWORD *)(OUTLINED_FUNCTION_7_2() + 16) = MEMORY[0x1E0DEE9E0];
    LOBYTE(v97[0]) = 3;
    type metadata accessor for Container(0);
    swift_allocObject();
    *(_QWORD *)&v77[OBJC_IVAR___TFContainer_container] = Container.init(bundleAssemblies:assemblies:singletonPool:environment:)();
    Container.resolver.getter(v97);
    v71 = v98;
    v72 = v99;
    __swift_project_boxed_opaque_existential_1(v97, v98);
    *(_QWORD *)&v77[OBJC_IVAR___TFContainer_resolver] = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 72))(v71, v72);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
    v86.receiver = v77;
    v86.super_class = v74;
    return objc_msgSendSuper2(&v86, sel_init);
  }
  if (v36 >= 1)
  {
    v37 = 0;
    v38 = v83 & 0xC000000000000001;
    v39 = MEMORY[0x1E0DEE9D8];
    v40 = (unint64_t *)&qword_1ED034AF0;
    do
    {
      if (v38)
      {
        v41 = MEMORY[0x194015F20](v37, v83);
      }
      else
      {
        v41 = *(_QWORD *)(v83 + 8 * v37 + 32);
        OUTLINED_FUNCTION_1_54();
      }
      v93 = v41;
      sub_190AA96FC(0, v40);
      OUTLINED_FUNCTION_1_54();
      if (swift_dynamicCast())
      {
        v42 = sub_190AAB5A4(&v89, (uint64_t)v97);
        OUTLINED_FUNCTION_0_58(v42, v43, v44, v45, v46, v47, v48, v49, (uint64_t)v74, (uint64_t)v77, v80, v83, (uint64_t)v86.receiver, (uint64_t)v86.super_class);
        OUTLINED_FUNCTION_3_44();
      }
      else
      {
        v80 = v39;
        v50 = v9;
        v51 = v36;
        v52 = v38;
        OUTLINED_FUNCTION_8_34();
        v53 = v40;
        sub_190B74A30(v54, &qword_1EE200100, v40);
        v87 = &unk_1EE212798;
        OUTLINED_FUNCTION_1_54();
        v55 = swift_dynamicCastObjCProtocolConditional();
        if (v55)
        {
          v56 = v55;
          v57 = type metadata accessor for BridgedAssembly();
          v58 = OUTLINED_FUNCTION_7_2();
          *(_QWORD *)(v58 + 16) = v56;
          *((_QWORD *)&v95 + 1) = v57;
          v96 = &protocol witness table for BridgedAssembly;
          *(_QWORD *)&v94 = v58;
        }
        else
        {
          OUTLINED_FUNCTION_3_44();
          v96 = 0;
          v94 = 0u;
          v95 = 0u;
        }
        OUTLINED_FUNCTION_3_44();
        v40 = v53;
        v38 = v52;
        v36 = v51;
        v9 = v50;
        v39 = v80;
      }
      if (*((_QWORD *)&v95 + 1))
      {
        v59 = sub_190AAB5A4(&v94, (uint64_t)v97);
        OUTLINED_FUNCTION_0_58(v59, v60, v61, v62, v63, v64, v65, v66, (uint64_t)v74, (uint64_t)v77, v80, v83, (uint64_t)v86.receiver, (uint64_t)v86.super_class);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_5_31(0, *(_QWORD *)(v39 + 16) + 1);
          v39 = v69;
        }
        v68 = *(_QWORD *)(v39 + 16);
        v67 = *(_QWORD *)(v39 + 24);
        if (v68 >= v67 >> 1)
        {
          OUTLINED_FUNCTION_5_31(v67 > 1, v68 + 1);
          v39 = v70;
        }
        *(_QWORD *)(v39 + 16) = v68 + 1;
        OUTLINED_FUNCTION_7_35(v39 + 40 * v68, v76, v79, v82, v85, (uint64_t)v86.receiver, (uint64_t)v86.super_class, (uint64_t)v87, (uint64_t)v88, v89, *((uint64_t *)&v89 + 1), v90, v91, v92, v93, v94);
      }
      else
      {
        OUTLINED_FUNCTION_6_36((uint64_t)&v94, &qword_1EE200100, v40);
      }
      ++v37;
    }
    while (v36 != v37);
    goto LABEL_46;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_190B74A30(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_190B74A6C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_190B74A6C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_190AA96FC(255, a3);
    v4 = sub_190BE59A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

id BridgedContainer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedContainer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedContainer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedContainer()
{
  return objc_opt_self();
}

uint64_t method lookup function for BridgedContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedContainer.__allocating_init(bundleAssemblies:assemblies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_190B74C14(int64_t a1, int64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  int64_t v10;
  int64_t v11;

  if (a1 == a2)
  {
LABEL_6:

    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = a1;
    if (a2 >= a1)
    {
      while (v10 < a2)
      {
        v11 = v10;
        sub_190B750B4((unint64_t *)&v11, a3, a4, a5);
        if (v5)
        {
          swift_bridgeObjectRelease();

          return;
        }
        if (a2 == ++v10)
          goto LABEL_6;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t NSAttributedString.init(_:arguments:)(void *a1, unint64_t a2)
{
  id v4;
  int64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  id v16;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, a1);
  if (!(a2 >> 62))
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      if (v5 == 1)
      {
        OUTLINED_FUNCTION_2_2();
LABEL_5:
        sub_190B72EF0(0, (a2 & 0xC000000000000001) == 0, a2);
        if ((a2 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x194015F20](0, a2);
        else
          v6 = *(id *)(a2 + 32);
        v7 = v6;
        swift_bridgeObjectRelease_n();
        sub_190AB8568(0, &qword_1ED0332C0);
        v8 = objc_msgSend(v4, sel_string);
        sub_190BE5000();

        v9 = sub_190B75044();
        v10 = (void *)sub_190BE4FDC();
        v11 = objc_msgSend(v9, sel_rangeOfString_, v10);
        v13 = v12;

        sub_190B74EFC((uint64_t)v7, (uint64_t)v11, v13, v4, a1);
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_2_2();
  v14 = OUTLINED_FUNCTION_2_49();
  OUTLINED_FUNCTION_62();
  if (v14 == 1)
  {
    OUTLINED_FUNCTION_2_2();
    if (OUTLINED_FUNCTION_2_49())
      goto LABEL_5;
    OUTLINED_FUNCTION_62();
    goto LABEL_12;
  }
  if (v14 < 2)
  {
LABEL_12:
    OUTLINED_FUNCTION_62();
LABEL_16:
    v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAttributedString_, v4);

    return (uint64_t)v16;
  }
  OUTLINED_FUNCTION_2_2();
  v5 = OUTLINED_FUNCTION_2_49();
  result = OUTLINED_FUNCTION_62();
  if ((v5 & 0x8000000000000000) == 0)
  {
LABEL_15:
    sub_190B74C14(0, v5, v4, a1, a2);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_190B74EFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  if (sub_190BE4214() == a2)
  {
    sub_190BE5894();
    sub_190B0C000();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_190BE7CD0;
    v11 = objc_msgSend(a5, sel_string);
    v12 = sub_190BE5000();
    v14 = v13;

    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = sub_190B0C064();
    *(_QWORD *)(v10 + 32) = v12;
    *(_QWORD *)(v10 + 40) = v14;
    sub_190AB8568(0, (unint64_t *)&qword_1ED034538);
    v15 = (id)sub_190BE5990();
    sub_190BE4A00();
    swift_bridgeObjectRelease();

  }
  else
  {
    objc_msgSend(a4, sel_replaceCharactersInRange_withAttributedString_, a2, a3, a1);
  }
}

id sub_190B75044()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_190BE4FDC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

void sub_190B750B4(unint64_t *a1, void *a2, void *a3, uint64_t a4)
{
  unint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;

  v7 = *a1;
  v8 = (id)sub_190AB8568(0, &qword_1ED0332C0);
  v9 = objc_msgSend(a2, sel_string);
  v10 = sub_190BE5000();

  v11 = sub_190B75044();
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  v12 = v11;
  sub_190BE5FC0();
  sub_190BE5114();
  swift_bridgeObjectRelease();
  sub_190BE5114();
  v13 = (void *)sub_190BE4FDC();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v12, sel_rangeOfString_, v13, 37, 0xE100000000000000);
  v10 = v14;

  sub_190B72EF0(v7, (a4 & 0xC000000000000001) == 0, a4);
  if ((a4 & 0xC000000000000001) != 0)
  {
LABEL_6:
    v15 = (id)MEMORY[0x194015F20](v7, a4);
    goto LABEL_4;
  }
  v15 = *(id *)(a4 + 8 * v7 + 32);
LABEL_4:
  v16 = v15;
  sub_190B74EFC((uint64_t)v15, (uint64_t)v8, v10, a2, a3);

}

id NSAttributedString.addingAttribute(_:value:)(uint64_t a1, _QWORD *a2)
{
  void *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v2);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  objc_msgSend(v5, sel_addAttribute_value_range_, a1, sub_190BE60A4(), 0, objc_msgSend(v2, sel_length));
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_190B752F0()
{
  uint64_t (*v0)(void);

  sub_190ADFA0C();
  OUTLINED_FUNCTION_35_1(v0);
  return OUTLINED_FUNCTION_69();
}

uint64_t sub_190B75314()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))sub_190B753A8();
  OUTLINED_FUNCTION_35_1(v0);
  return OUTLINED_FUNCTION_69();
}

uint64_t sub_190B75338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190B7535C(a1, a2, a3, (uint64_t (*)(void))sub_190B754B0);
}

uint64_t sub_190B75344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190B7535C(a1, a2, a3, (uint64_t (*)(void))sub_190B75650);
}

uint64_t sub_190B75350()
{
  return sub_190AAA980();
}

uint64_t sub_190B7535C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))a4();
  OUTLINED_FUNCTION_35_1(v4);
  return OUTLINED_FUNCTION_69();
}

uint64_t sub_190B75380()
{
  uint64_t (*v0)(void);

  sub_190B758C8();
  OUTLINED_FUNCTION_35_1(v0);
  return OUTLINED_FUNCTION_69();
}

uint64_t (*sub_190B753A8())(_QWORD)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);

  v1 = *(_QWORD *)(v0 + 16);
  UnfairLock.lock()();
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v2 = nullsub_1;
  }
  else
  {
    *(_BYTE *)(v0 + 24) = 1;
    sub_190B2FEB8();
    v2 = v3;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return v2;
}

void sub_190B75424()
{
  sub_190AE0444();
}

void sub_190B75430()
{
  sub_190AE4240();
}

void sub_190B7543C()
{
  sub_190AE0444();
}

void sub_190B75448()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_56();
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_32_9();
    sub_190B2FF64();
    OUTLINED_FUNCTION_120();
  }
  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_4();
}

void sub_190B754A4()
{
  sub_190AE0444();
}

uint64_t (*sub_190B754B0(uint64_t a1, unint64_t a2))(_QWORD)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);

  v5 = *(_QWORD *)(v2 + 16);
  UnfairLock.lock()();
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    v6 = nullsub_1;
  }
  else
  {
    *(_BYTE *)(v2 + 24) = 1;
    sub_190AFCA4C(a1, a2);
    sub_190B300A8(a1, a2, 0);
    v6 = v7;
    sub_190AEF3F4(a1, a2);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return v6;
}

void sub_190B75554()
{
  sub_190AE0444();
}

uint64_t sub_190B75560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  OUTLINED_FUNCTION_30_15(a1, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - v4;
  OUTLINED_FUNCTION_1_56();
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_32_9();
    sub_190B78364(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AuthToken);
    swift_storeEnumTagMultiPayload();
    sub_190B301E8();
    OUTLINED_FUNCTION_120();
    sub_190B78340((uint64_t)v5, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  }
  OUTLINED_FUNCTION_198();
  return OUTLINED_FUNCTION_26_1();
}

void sub_190B75644()
{
  sub_190AE0444();
}

void sub_190B75650(void *a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_1_56();
  if ((*(_BYTE *)(v2 + 24) & 1) == 0)
  {
    *(_BYTE *)(v2 + 24) = 1;
    OUTLINED_FUNCTION_66();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B3035C(a1, a2, 0);
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_9();
}

void sub_190B756D8()
{
  sub_190AE0444();
}

uint64_t (*sub_190B756E4(uint64_t a1))(_QWORD)
{
  return sub_190B757C4(a1, &qword_1EE1FEE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(char *))sub_190B3049C);
}

uint64_t (*sub_190B75700(void *a1, void *a2))(_QWORD)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);

  v5 = *(_QWORD *)(v2 + 16);
  UnfairLock.lock()();
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    v6 = nullsub_1;
  }
  else
  {
    *(_BYTE *)(v2 + 24) = 1;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B3058C(a1, a2, 0);
    v6 = v7;
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return v6;
}

void sub_190B7579C()
{
  sub_190AE0444();
}

uint64_t (*sub_190B757A8(uint64_t a1))(_QWORD)
{
  return sub_190B757C4(a1, &qword_1EE1FF628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(char *))sub_190B306DC);
}

uint64_t (*sub_190B757C4(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(char *)))(_QWORD)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_30_15(a1, a2, a3);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  v12 = *(_QWORD *)(v4 + 16);
  UnfairLock.lock()();
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    v13 = nullsub_1;
  }
  else
  {
    *(_BYTE *)(v4 + 24) = 1;
    v14 = a3(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, a1, v14);
    swift_storeEnumTagMultiPayload();
    v13 = (uint64_t (*)(_QWORD))a4(v11);
    sub_190B78340((uint64_t)v11, a2, a3);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  return v13;
}

void sub_190B758C8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_56();
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_32_9();
    sub_190B307CC();
    OUTLINED_FUNCTION_120();
  }
  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_4();
}

void sub_190B75924()
{
  sub_190AE0444();
}

void sub_190B75930()
{
  sub_190AE4240();
}

uint64_t sub_190B7593C()
{
  void (*v0)(void);

  sub_190B2B8F4();
  v0();
  return swift_release();
}

uint64_t sub_190B75968()
{
  void (*v0)(void);

  sub_190B2BB10();
  v0();
  return swift_release();
}

void sub_190B75994(void *a1, char a2, void (*a3)(id *), uint64_t a4, void (*a5)(void), uint64_t a6, void (*a7)(void *))
{
  id v11;
  id v12;
  id v13;

  if ((a2 & 1) != 0)
  {
    v13 = a1;
    sub_190B78150(a1, 1);
    v11 = a1;
    sub_190AA96FC(0, (unint64_t *)&qword_1ED034920);
    if ((swift_dynamicCast() & 1) != 0)
    {

      a5();
      v12 = v13;
    }
    else
    {

      a7(a1);
      v12 = a1;
    }

  }
  else
  {
    v13 = a1;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    a3(&v13);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_190B75A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t *);

  if (a1)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    v5 = sub_190B7811C;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  swift_retain();
  sub_190AFCCE8(a1);
  sub_190BDF514((uint64_t)v5, v4);
  sub_190AB9930(a1);
  return swift_release();
}

uint64_t AuthTokenService.__allocating_init(endpointUrl:networkProxy:requestSigner:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_24();
  AuthTokenService.init(endpointUrl:networkProxy:requestSigner:eventHandler:)(a1, a2, a3, a4);
  return v8;
}

uint64_t AuthTokenService.__allocating_init(endpointUrl:networkProxy:requestSigner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD v8[2];
  uint64_t v9;

  v9 = 0;
  memset(v8, 0, sizeof(v8));
  v6 = OUTLINED_FUNCTION_24();
  AuthTokenService.init(endpointUrl:networkProxy:requestSigner:eventHandler:)(a1, a2, a3, (uint64_t)v8);
  return v6;
}

uint64_t AuthTokenService.fetchAuthTokens(for:tokenType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t (*v55)(void);
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  _QWORD *v67;
  void *v68;
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  _QWORD v77[3];
  void (*v78)(unint64_t, char *, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91[5];

  v4 = v3;
  OUTLINED_FUNCTION_31_12(a1, &qword_1ED034960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v8);
  v79 = (uint64_t)v77 - v9;
  v10 = sub_190BE4820();
  v81 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v80 = (char *)v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_31_12(v11, &qword_1ED034BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v77 - v14;
  v88 = sub_190BE4628();
  v16 = *(_QWORD *)(v88 - 8);
  v17 = MEMORY[0x1E0C80A78](v88);
  v83 = (char *)v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = v18;
  MEMORY[0x1E0C80A78](v17);
  v87 = (char *)v77 - v19;
  if (qword_1ED02F328 != -1)
    swift_once();
  v20 = sub_190BE4A30();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  v86 = v21;
  v22 = sub_190BE4A0C();
  v23 = sub_190BE58AC();
  if (os_log_type_enabled(v22, v23))
  {
    v77[1] = a2;
    v24 = OUTLINED_FUNCTION_20_1();
    v77[2] = v10;
    v25 = (uint8_t *)v24;
    v26 = OUTLINED_FUNCTION_20_1();
    v78 = (void (*)(unint64_t, char *, uint64_t))a3;
    v91[0] = v26;
    *(_DWORD *)v25 = 136446210;
    v84 = v16;
    v27 = OUTLINED_FUNCTION_66();
    v28 = MEMORY[0x1940155C0](v27, v88);
    v85 = v4;
    v30 = v29;
    OUTLINED_FUNCTION_16();
    sub_190ACE890(v28, v30, v91);
    OUTLINED_FUNCTION_33_11(v31);
    sub_190BE5A2C();
    OUTLINED_FUNCTION_25_17();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v22, v23, "AuthTokenService will fetch auth tokens for URLs: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_12_0();
  }

  v32 = OUTLINED_FUNCTION_25_17();
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 + 16) + 16))(v32);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v88) == 1)
  {
    sub_190B765F0((uint64_t)v15);
    v33 = sub_190BE4A0C();
    v34 = sub_190BE58AC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_190AA0000, v33, v34, "AuthTokenService endpoint URL is nil; auth tokens cannot be fetched",
        v35,
        2u);
      OUTLINED_FUNCTION_12_0();
    }

    sub_190B76644();
    OUTLINED_FUNCTION_38();
    *v36 = 0x8000000000000000;
    sub_190B76680(0);
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_23_18();
    return v37;
  }
  else
  {
    v39 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v39(v87, v15, v88);
    sub_190BE42EC();
    swift_allocObject();
    OUTLINED_FUNCTION_66();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation16ReferenceEncoderCACycfc_0();
    v91[0] = a2;
    v91[1] = a3;
    v91[2] = a1;
    sub_190B779D4();
    v40 = sub_190BE42C8();
    v42 = v41;
    v78 = (void (*)(unint64_t, char *, uint64_t))v39;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_40_8();
    v43 = v80;
    sub_190BE4814();
    v86 = sub_190BE47F0();
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v43, v10);
    sub_190B77A10(0, &qword_1EE1FEE70);
    v46 = OUTLINED_FUNCTION_24();
    v91[0] = 0;
    type metadata accessor for UnfairLock();
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_40_8();
    swift_retain();
    UnfairLock.init(options:)((int *)v91);
    v48 = v47;
    sub_190B77A10(0, &qword_1EE1FEE58);
    OUTLINED_FUNCTION_24();
    *(_QWORD *)(v46 + 16) = sub_190B29240(v48);
    v49 = OUTLINED_FUNCTION_24();
    *(_QWORD *)(v49 + 16) = sub_190B77A98;
    *(_QWORD *)(v49 + 24) = v46;
    sub_190B7815C(v4 + 72, (uint64_t)&v89, &qword_1ED033000, &qword_1ED032FF8);
    v85 = v4;
    if (v90)
    {
      sub_190AAB5A4(&v89, (uint64_t)v91);
      v50 = sub_190BE5510();
      v51 = v42;
      v52 = v40;
      v53 = v79;
      __swift_storeEnumTagSinglePayload(v79, 1, 1, v50);
      sub_190AC78B8((uint64_t)v91, (uint64_t)&v89);
      v54 = (_QWORD *)OUTLINED_FUNCTION_24();
      v54[2] = 0;
      v54[3] = 0;
      sub_190AAB5A4(&v89, (uint64_t)(v54 + 4));
      v54[9] = v40;
      v54[10] = v51;
      v54[11] = sub_190B66E34;
      v54[12] = v49;
      v54[13] = sub_190B77AA0;
      v54[14] = v46;
      swift_retain_n();
      sub_190AFCA4C(v40, v51);
      swift_retain_n();
      sub_190B219C4(v53, (uint64_t)&unk_1EE200120, (uint64_t)v54);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
      swift_release();
      OUTLINED_FUNCTION_34_12();
      sub_190AEF3F4(v40, v51);
    }
    else
    {
      swift_retain_n();
      OUTLINED_FUNCTION_2();
      sub_190B77D4C((uint64_t)&v89, &qword_1ED033000, &qword_1ED032FF8);
      v55 = (uint64_t (*)(void))sub_190B75700(0, 0);
      OUTLINED_FUNCTION_35_1(v55);
      swift_release();
      OUTLINED_FUNCTION_34_12();
      OUTLINED_FUNCTION_2();
      sub_190AEF3F4(v40, v42);
      v51 = v42;
      v52 = v40;
    }
    v56 = v83;
    v57 = v88;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v83, v87, v88);
    v58 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v59 = (v82 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
    v84 = v16;
    v60 = swift_allocObject();
    v78(v60 + v58, v56, v57);
    v61 = (uint64_t *)(v60 + v59);
    *v61 = v52;
    v61[1] = v51;
    v62 = (uint64_t *)(v60 + ((v59 + 23) & 0xFFFFFFFFFFFFFFF8));
    v63 = v86;
    *v62 = v86;
    v62[1] = v45;
    v64 = qword_1ED035648;
    OUTLINED_FUNCTION_66();
    v65 = v52;
    if (v64 != -1)
      swift_once();
    v66 = (id)qword_1ED035618;
    sub_190B5C254();
    swift_release();
    OUTLINED_FUNCTION_5_0();

    v67 = (_QWORD *)OUTLINED_FUNCTION_24();
    v67[2] = v85;
    v67[3] = v63;
    v67[4] = v45;
    v68 = (void *)qword_1ED035618;
    swift_retain();
    OUTLINED_FUNCTION_66();
    v69 = v68;
    sub_190B5C308();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_5_0();

    v70 = OUTLINED_FUNCTION_24();
    *(_QWORD *)(v70 + 16) = v63;
    *(_QWORD *)(v70 + 24) = v45;
    v71 = (void *)qword_1ED035618;
    OUTLINED_FUNCTION_66();
    v72 = v71;
    sub_190B2C2F0();
    swift_release();
    OUTLINED_FUNCTION_5_0();

    v73 = OUTLINED_FUNCTION_24();
    *(_QWORD *)(v73 + 16) = v63;
    *(_QWORD *)(v73 + 24) = v45;
    v74 = (id)qword_1ED035618;
    sub_190B22098((uint64_t)v74, (uint64_t)sub_190B77C24, v73);
    v38 = v75;
    OUTLINED_FUNCTION_2();
    swift_release();

    sub_190AEF3F4(v65, v51);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v87, v88);
  }
  return v38;
}

uint64_t sub_190B765F0(uint64_t a1)
{
  uint64_t v2;

  sub_190B781F4(0, &qword_1ED034BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_190B76644()
{
  unint64_t result;

  result = qword_1EE200110;
  if (!qword_1EE200110)
  {
    result = MEMORY[0x194016EF8](&unk_190BED328, &type metadata for AuthTokenServiceError);
    atomic_store(result, &qword_1EE200110);
  }
  return result;
}

void sub_190B76680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED02F2E8)
  {
    sub_190B066A8(255, (unint64_t *)&qword_1ED033270, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    v5 = type metadata accessor for Promise(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED02F2E8);
  }
}

uint64_t sub_190B766E4(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];
  uint64_t v27;
  uint64_t v28;

  v26[2] = a5;
  v26[3] = a6;
  v10 = sub_190BE4628();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190BE428C();
  v27 = *(_QWORD *)(v14 - 8);
  v28 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v26 - v18;
  v20 = *a1;
  v21 = a1[1];
  v26[1] = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  sub_190BE425C();
  sub_190BE4220();
  sub_190AFCA4C(a3, a4);
  sub_190BE4280();
  sub_190BE4274();
  sub_190BE4274();
  if (v21)
    sub_190BE4274();
  v23 = v27;
  v22 = v28;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v17, v19, v28);
  sub_190B781F4(0, &qword_1EE1FEE60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
  swift_allocObject();
  v24 = sub_190B712C8((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v22);
  return v24;
}

uint64_t sub_190B76920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[48];

  v22 = a3;
  v23 = a4;
  v6 = sub_190BE428C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v10(v9, a1, v6);
  sub_190B77F48(a2 + 24, (uint64_t)v24);
  v11 = (char *)sub_190B76AF0((uint64_t)v9, (uint64_t)v24);
  v12 = swift_allocObject();
  swift_weakInit();
  v10(v9, a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v13, v9, v6);
  v16 = (_QWORD *)(v15 + v14);
  v17 = v23;
  *v16 = v22;
  v16[1] = v17;
  v18 = (uint64_t *)&v11[qword_1ED033D70];
  swift_beginAccess();
  v19 = *v18;
  *v18 = (uint64_t)sub_190B78034;
  v18[1] = v15;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AB9930(v19);
  if (qword_1ED034570 != -1)
    swift_once();
  v20 = sub_190B77864(v11);

  return v20;
}

id sub_190B76AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class v12;
  id v13;
  id v14;
  _BYTE v16[48];

  v4 = sub_190BE428C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v4);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v10 + v9, v8, v4);
  sub_190B781F4(0, qword_1ED033CD8, v5);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_190B781BC;
  *(_QWORD *)(v11 + 24) = v10;
  sub_190B77F48(a2, (uint64_t)v16);
  sub_190B78234(0);
  v13 = objc_allocWithZone(v12);
  v14 = sub_190B7772C(v11, (uint64_t)v16);
  sub_190B77D18(a2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  return v14;
}

void sub_190B76C40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  char v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v8 = *a1;
  v9 = a1[1];
  v10 = *((_BYTE *)a1 + 16);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_190B7815C(Strong + 112, (uint64_t)v16, &qword_1ED0331B0, &qword_1ED0331A8);
    swift_release();
    v12 = v17;
    if (v17)
    {
      v13 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      v14[0] = v8;
      v14[1] = v9;
      v15 = v10;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v14, a3, a4, a5, v12, v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
    else
    {
      sub_190B77D4C((uint64_t)v16, &qword_1ED0331B0, &qword_1ED0331A8);
    }
  }
}

uint64_t sub_190B76D54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(uint64_t, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  _BOOL8 v48;
  char v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(unint64_t, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;

  v5 = v4;
  v69 = a2;
  v58 = a4;
  v64 = type metadata accessor for AuthToken();
  v61 = *(_QWORD *)(v64 - 8);
  v8 = MEMORY[0x1E0C80A78](v64);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)&v57 - v11;
  v66 = sub_190BE4628();
  v12 = *(char **)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for AuthTokenResponseItem();
  v14 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  isUniquelyReferenced_nonNull_native = *a1;
  if (qword_1ED02F328 != -1)
LABEL_21:
    swift_once();
  v18 = sub_190BE4A30();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED0395E0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v19 = sub_190BE4A0C();
  v20 = sub_190BE58AC();
  v21 = v20;
  v22 = os_log_type_enabled(v19, v20);
  v59 = v5;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v68 = v16;
    v24 = isUniquelyReferenced_nonNull_native;
    v25 = a3;
    v26 = v23;
    v71 = (_QWORD *)swift_slowAlloc();
    v67 = (void (*)(unint64_t, uint64_t, uint64_t))v14;
    v27 = (uint64_t)v71;
    *(_DWORD *)v26 = 134349314;
    LODWORD(v60) = v21;
    v28 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    swift_bridgeObjectRelease();
    v70 = v28;
    sub_190BE5A2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v69, v25, (uint64_t *)&v71);
    v70 = v29;
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_190AA0000, v19, (os_log_type_t)v60, "AuthTokenService successfully fetched %{public}ld tokens; X-REQUEST-ID=%{public}s",
      (uint8_t *)v26,
      0x16u);
    swift_arrayDestroy();
    v30 = v27;
    v14 = (unint64_t)v67;
    MEMORY[0x194017000](v30, -1, -1);
    isUniquelyReferenced_nonNull_native = v24;
    v16 = v68;
    MEMORY[0x194017000](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v31 = v66;
  v32 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
  if (v32)
  {
    v33 = isUniquelyReferenced_nonNull_native
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v60 = *(_QWORD *)(v14 + 72);
    v57 = isUniquelyReferenced_nonNull_native;
    swift_bridgeObjectRetain_n();
    v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = (uint64_t)v65;
    while (1)
    {
      v68 = (char *)v33;
      v69 = v32;
      sub_190B78364(v33, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for AuthTokenResponseItem);
      a3 = (uint64_t)v12;
      v35 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v12 + 2);
      v35(isUniquelyReferenced_nonNull_native, v16, v31);
      v36 = v63;
      _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
      v14 = isUniquelyReferenced_nonNull_native;
      v37 = v64;
      v38 = &v36[*(int *)(v64 + 20)];
      v67 = (void (*)(unint64_t, uint64_t, uint64_t))v35;
      v35((uint64_t)v38, v16, v31);
      v39 = &v16[*(int *)(v62 + 20)];
      v40 = *(_QWORD *)v39;
      v41 = *((_QWORD *)v39 + 1);
      v5 = v16;
      v42 = *(_QWORD *)&v16[*(int *)(v62 + 24)];
      v43 = &v36[*(int *)(v37 + 24)];
      *(_QWORD *)v43 = v40;
      *((_QWORD *)v43 + 1) = v41;
      *(_QWORD *)&v36[*(int *)(v37 + 28)] = v42;
      v44 = (uint64_t)v36;
      v12 = v10;
      sub_190B72A80(v44, (uint64_t)v10);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v71 = v34;
      sub_190B136AC();
      v47 = v34[2];
      v48 = (v46 & 1) == 0;
      v10 = (char *)(v47 + v48);
      if (__OFADD__(v47, v48))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      v14 = v45;
      v49 = v46;
      sub_190B066A8(0, (unint64_t *)&qword_1ED02F378, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECB20]);
      v50 = sub_190BE5E04();
      v10 = v12;
      v12 = (char *)a3;
      isUniquelyReferenced_nonNull_native = (uint64_t)v65;
      v5 = v68;
      a3 = v69;
      if ((v50 & 1) != 0)
      {
        sub_190B136AC();
        if ((v49 & 1) != (v52 & 1))
        {
          result = sub_190BE626C();
          __break(1u);
          return result;
        }
        v14 = v51;
      }
      v34 = v71;
      if ((v49 & 1) != 0)
      {
        sub_190B6250C((uint64_t)v10, v71[7] + *(_QWORD *)(v61 + 72) * v14);
        v31 = v66;
      }
      else
      {
        v71[(v14 >> 6) + 8] |= 1 << v14;
        v31 = v66;
        v67(v34[6] + *((_QWORD *)v12 + 9) * v14, isUniquelyReferenced_nonNull_native, v66);
        sub_190B72A80((uint64_t)v10, v34[7] + *(_QWORD *)(v61 + 72) * v14);
        v53 = v34[2];
        v54 = __OFADD__(v53, 1);
        v55 = v53 + 1;
        if (v54)
          goto LABEL_20;
        v34[2] = v55;
        v34 = v71;
      }
      swift_bridgeObjectRelease();
      (*((void (**)(uint64_t, uint64_t))v12 + 1))(isUniquelyReferenced_nonNull_native, v31);
      sub_190B6EC44((uint64_t)v16);
      v33 = (uint64_t)&v5[v60];
      v32 = a3 - 1;
      if (!v32)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
  result = swift_bridgeObjectRelease();
  *v58 = v34;
  return result;
}

void sub_190B772CC(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (qword_1ED02F328 != -1)
    swift_once();
  v6 = sub_190BE4A30();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED0395E0);
  v7 = a1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v8 = a1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v9 = sub_190BE4A0C();
  v10 = sub_190BE5894();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136446466;
    swift_getErrorValue();
    v13 = sub_190BE62B4();
    sub_190ACE890(v13, v14, &v15);
    sub_190BE5A2C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2082;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(a2, a3, &v15);
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_190AA0000, v9, v10, "AuthTokenService failed to fetch tokens. error=%{public}s; X-REQUEST-ID=%{public}s",
      (uint8_t *)v11,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x194017000](v12, -1, -1);
    MEMORY[0x194017000](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_190B774F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[7] = v10;
  v8[8] = v11;
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_190B77524()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_190B775A4;
  return v6(v0[3], v0[4], v2, v3);
}

uint64_t sub_190B775A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 80) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 88) = a2;
    *(_QWORD *)(v6 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_190B7761C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 40))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_2_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B77654()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  (*(void (**)(void *))(v0 + 56))(v1);

  return OUTLINED_FUNCTION_2_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AuthTokenService.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110();
  sub_190B77D18(v0 + 24);
  sub_190B77D4C(v0 + 72, &qword_1ED033000, &qword_1ED032FF8);
  sub_190B77D4C(v0 + 112, &qword_1ED0331B0, &qword_1ED0331A8);
  return v0;
}

uint64_t AuthTokenService.__deallocating_deinit()
{
  AuthTokenService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190B7770C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AuthTokenService.fetchAuthTokens(for:tokenType:)(a1, a2, a3);
}

id sub_190B7772C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  id v13;
  objc_super v15;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = sub_190BE47E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[qword_1ED033BA8] = MEMORY[0x1E0DEE9D8];
  v11 = &v3[qword_1ED033D70];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v3[qword_1ED033B98] = a1;
  sub_190B77F48(a2, (uint64_t)&v3[qword_1ED033B90]);
  v12 = v3;
  swift_retain();
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[qword_1ED033D88], v10, v7);

  v15.receiver = v12;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  sub_190B77D18(a2);
  return v13;
}

uint64_t sub_190B77864(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v2 = v1;
  sub_190ACF6F0(0, &qword_1ED02F2D0, (uint64_t)&type metadata for AuthTokenResponse, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  v4 = swift_allocObject();
  v10 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  v5 = a1;
  swift_retain();
  UnfairLock.init(options:)((int *)&v10);
  v7 = v6;
  sub_190ACF6F0(0, &qword_1ED02F2B0, (uint64_t)&type metadata for AuthTokenResponse, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_190AC8364(v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = sub_190B78098;
  v8[3] = v4;
  v8[4] = sub_190B780A8;
  v8[5] = v4;
  v8[6] = sub_190B780A0;
  v8[7] = v4;
  swift_retain_n();
  sub_190B75A8C((uint64_t)sub_190B7810C, (uint64_t)v8);

  swift_release_n();
  objc_msgSend(*(id *)(v2 + 24), sel_addOperation_, v5);
  swift_release();
  return v4;
}

unint64_t sub_190B779D4()
{
  unint64_t result;

  result = qword_1ED02F088;
  if (!qword_1ED02F088)
  {
    result = MEMORY[0x194016EF8](&unk_190BECF84, &type metadata for AuthTokenRequest);
    atomic_store(result, (unint64_t *)&qword_1ED02F088);
  }
  return result;
}

void sub_190B77A10(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_190ACF6F0(255, &qword_1ED032CF0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v4 = OUTLINED_FUNCTION_80(v3);
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B77A70(uint64_t *a1, uint64_t a2)
{
  return sub_190B7535C(*a1, a1[1], a2, (uint64_t (*)(void))sub_190B75700);
}

uint64_t sub_190B77A98(uint64_t *a1)
{
  uint64_t v1;

  return sub_190B77A70(a1, v1);
}

uint64_t sub_190B77AA0(uint64_t a1)
{
  uint64_t v1;

  return sub_190B21180(a1, v1);
}

uint64_t sub_190B77AA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B77ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_190BE4628();
  OUTLINED_FUNCTION_16_23();
  v3 = (v2 + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_37_12(v4);
  sub_190AEF3F4(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190B77B44(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_190BE4628();
  OUTLINED_FUNCTION_20_14();
  return sub_190B766E4(a1, v1 + v3, *(_QWORD *)(v1 + v4), *(_QWORD *)(v1 + v4 + 8), *(_QWORD *)(v1 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_190B77BA4()
{
  OUTLINED_FUNCTION_110();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190B77BCC(uint64_t a1)
{
  uint64_t *v1;

  return sub_190B76920(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_190B77BE8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_190B76D54(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_190B77C00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_190B77C24(void *a1)
{
  uint64_t v1;

  sub_190B772CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_190B77C2C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_190AEF3F4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B77C70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = v1[3];
  v11 = v1[2];
  v5 = v1[9];
  v6 = v1[10];
  v7 = v1[11];
  v8 = v1[12];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_190B51F84;
  return sub_190B774F8(a1, v11, v4, (uint64_t)(v1 + 4), v5, v6, v7, v8);
}

uint64_t sub_190B77D18(uint64_t a1)
{
  destroy for NetworkProxy(a1);
  return a1;
}

void sub_190B77D4C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v3;

  sub_190AA96AC(0, a2, a3);
  OUTLINED_FUNCTION_71_0(v3);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of AuthTokenServiceType.fetchAuthTokens(for:tokenType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for AuthTokenService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AuthTokenService.__allocating_init(endpointUrl:networkProxy:requestSigner:eventHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *initializeBufferWithCopyOfBuffer for AuthTokenServiceError(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;

  v3 = *a2;
  v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = v3;
  return a1;
}

void destroy for AuthTokenServiceError(_QWORD *a1)
{

}

uint64_t *assignWithCopy for AuthTokenServiceError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;

  v3 = *a2;
  v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  v5 = *a1;
  *a1 = v3;

  return a1;
}

uint64_t *assignWithTake for AuthTokenServiceError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AuthTokenServiceError(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AuthTokenServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_190B77EE0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_190B77EFC(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_190B77F0C(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenServiceError()
{
  return &type metadata for AuthTokenServiceError;
}

uint64_t sub_190B77F48(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NetworkProxy(a2, a1);
  return a2;
}

uint64_t sub_190B77F84()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190B77FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_19_20();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_110();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_190B78034(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_19_20();
  OUTLINED_FUNCTION_20_14();
  sub_190B76C40(a1, *(_QWORD *)(v1 + 16), v1 + v3, *(_QWORD *)(v1 + v4), *(_QWORD *)(v1 + v4 + 8));
}

uint64_t sub_190B78078()
{
  return sub_190AAA980();
}

uint64_t sub_190B78098()
{
  return sub_190B78078();
}

uint64_t sub_190B780A0()
{
  return sub_190B7593C();
}

uint64_t sub_190B780A8()
{
  return sub_190B75968();
}

void sub_190B780B0(uint64_t a1, void (*a2)(id *), uint64_t a3, void (*a4)(void), uint64_t a5, void (*a6)(void *))
{
  sub_190B75994(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5, a6);
}

uint64_t sub_190B780D8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190B7810C(uint64_t a1)
{
  uint64_t v1;

  sub_190B780B0(a1, *(void (**)(id *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(void *))(v1 + 48));
}

void sub_190B7811C(uint64_t *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *);
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(void (**)(uint64_t *))(v1 + 16);
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a1;
  v5 = v3;
  v2(&v4);
  OUTLINED_FUNCTION_10_6();
}

id sub_190B78150(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)_s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

void sub_190B7815C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_9_33(a1, a2, a3, a4);
  OUTLINED_FUNCTION_11_25(v4);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B7817C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_20();
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_37_12(v0);
  return swift_deallocObject();
}

uint64_t sub_190B781BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_19_20() - 8) + 80);
  return sub_190B923D8(v0 + ((v1 + 16) & ~v1));
}

void sub_190B781F4(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v4 = OUTLINED_FUNCTION_101(0, (uint64_t)a2, a3);
    v5 = OUTLINED_FUNCTION_80(v4);
    if (!v6)
      atomic_store(v5, v3);
  }
  OUTLINED_FUNCTION_4();
}

void sub_190B78234(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED02F0A0)
  {
    sub_190B782AC(255);
    v3 = v2;
    sub_190ADCAB4(&qword_1ED02F090, (uint64_t (*)(uint64_t))sub_190B782AC, (uint64_t)&protocol conformance descriptor for JSONDeserializer<A>);
    v6 = type metadata accessor for NetworkOperation(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED02F0A0);
  }
}

void sub_190B782AC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED02F098)
  {
    v2 = sub_190B78304();
    v4 = type metadata accessor for JSONDeserializer(a1, (uint64_t)&type metadata for AuthTokenResponse, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED02F098);
  }
}

unint64_t sub_190B78304()
{
  unint64_t result;

  result = qword_1ED02F180[0];
  if (!qword_1ED02F180[0])
  {
    result = MEMORY[0x194016EF8](&unk_190BEE7C4, &type metadata for AuthTokenResponse);
    atomic_store(result, qword_1ED02F180);
  }
  return result;
}

void sub_190B78340(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  OUTLINED_FUNCTION_30_15(a1, a2, a3);
  OUTLINED_FUNCTION_71_0(v3);
  OUTLINED_FUNCTION_0();
}

void sub_190B78364(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_11_25(v3);
  OUTLINED_FUNCTION_0();
}

void AsyncObservable.next(value:quiet:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v3 = v2;
  v6 = *v2;
  v7 = v2[2];
  UnfairLock.lock()();
  OUTLINED_FUNCTION_6_37();
  v9 = (char *)v3 + v8;
  OUTLINED_FUNCTION_20_0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 24))(v9, a1);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  if ((a2 & 1) == 0)
    OUTLINED_FUNCTION_3_45();
}

void AsyncObservable.mutate(with:quiet:)(void (*a1)(_BYTE *), uint64_t a2, int a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v16[12];
  int v17;

  v17 = a3;
  OUTLINED_FUNCTION_2_50();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v16[-v11];
  v13 = v4[2];
  UnfairLock.lock()();
  v14 = (uint64_t)v4 + *(_QWORD *)(*v4 + 104);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_65((uint64_t)v10, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  a1(v10);
  v15 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v15(v10, v3);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_65(v14, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24));
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  if ((v17 & 1) == 0)
    sub_190AAB6EC();
  v15(v12, v3);
  OUTLINED_FUNCTION_0_0();
}

void AsyncObservable.onNextOnlyOnce(on:eager:block:)(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_190AB8B58(a1, a2, a3, a4, 1, (uint64_t)&unk_1E2CECE28, (void (*)())sub_190B0854C, a5);
}

Swift::Void __swiftcall AsyncObservable.triggerObservers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2_50();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  AsyncObservable.value.getter((uint64_t)v3);
  sub_190AAB6EC();
  OUTLINED_FUNCTION_15_1((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190B785C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)()@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  void (*v19)();
  _QWORD v20[2];

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)MEMORY[0x1E0C80A78](a1);
  v11 = MEMORY[0x1940170E4](v10 + 16);
  swift_unknownObjectRelease();
  if (v11)
  {
    v12 = *(void **)(v10 + 40);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
    v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a3;
    *(_QWORD *)(v14 + 24) = v10;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, v9, a3);
    swift_retain();
    v15 = sub_190ADADE0(v12, (void (*)())sub_190B787E8, v14);
    v17 = v16;
    swift_release();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v15;
    *(_QWORD *)(result + 24) = v17;
    v19 = sub_190AF6F04;
  }
  else
  {
    v19 = 0;
    result = 0;
  }
  *a4 = v19;
  a4[1] = (void (*)())result;
  return result;
}

uint64_t sub_190B78708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = MEMORY[0x1940170E4](a1 + 16);
  result = swift_unknownObjectRelease();
  if (v4)
  {
    result = (*(uint64_t (**)(uint64_t))(a1 + 24))(a2);
    if (*(_BYTE *)(a1 + 48) == 1)
      return swift_unknownObjectWeakAssign();
  }
  return result;
}

uint64_t sub_190B78784()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_190B78790()
{
  return sub_190B78784();
}

uint64_t method lookup function for AsyncObservable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncObservable.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_190B787CC@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v2;

  return sub_190B785C4(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_190B787E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_7_36();
  return sub_190B78708(v0, v1);
}

uint64_t sub_190B787F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t static XPCBlockBuilder.buildBlock(_:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

ValueMetadata *type metadata accessor for XPCBlockBuilder()
{
  return &type metadata for XPCBlockBuilder;
}

uint64_t sub_190B78860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_25_18();
  v52 = v3;
  v53 = v4;
  v38 = v5;
  v39 = v6;
  v49 = v1;
  v8 = v7;
  v45 = v9;
  v46 = v10;
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_10();
  v47 = v11;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_32_10();
  v13 = MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_10();
  v41 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  OUTLINED_FUNCTION_16_0();
  v36 = v17 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v33 - v20;
  v43 = v0;
  v22 = v8;
  v23 = sub_190BE56A8();
  if (!v23)
    return sub_190BE5384();
  v24 = v23;
  v34 = AssociatedTypeWitness;
  v51 = sub_190BE4D78();
  v44 = sub_190BE5D8C();
  sub_190BE5D44();
  v35 = v21;
  result = sub_190BE5684();
  if (v24 < 0)
  {
    __break(1u);
  }
  else
  {
    v48 = v22;
    v26 = v42;
    v27 = (uint64_t)v35;
    while (1)
    {
      v28 = (void (*)(uint64_t *, _QWORD))sub_190BE5804();
      (*(void (**)(char *))(v2 + 16))(v26);
      v28(&v50, 0);
      v29 = v49;
      v45(v26, v47);
      if (v29)
        break;
      v49 = 0;
      OUTLINED_FUNCTION_20_15();
      sub_190BE5D74();
      sub_190BE5708();
      if (!--v24)
      {
        v30 = v40;
        v31 = v36;
        v32 = v34;
        OUTLINED_FUNCTION_35_13(v36, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32));
        sub_190BE5BB8();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
        return v51;
      }
    }
    OUTLINED_FUNCTION_20_15();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v27, v34);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v39, v47, v38);
  }
  return result;
}

uint64_t NonEmpty.rawElements.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_190B78B64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + a1 - 16);
  v5 = NonEmpty.rawElements.read();
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a3);
  return ((uint64_t (*)(uint64_t *, _QWORD))v5)(&v7, 0);
}

uint64_t (*NonEmpty.rawElements.read())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_190B78BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t *);
  uint64_t v8;
  _QWORD v10[4];

  v5 = *(_QWORD *)(a4 + a3 - 16);
  v6 = type metadata accessor for NonEmpty(0, v5, *(_QWORD *)(a4 + a3 - 8), a4);
  v7 = NonEmpty.rawElements.modify(v10, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(v8, a1, v5);
  return ((uint64_t (*)(_QWORD *, _QWORD))v7)(v10, 0);
}

uint64_t (*NonEmpty.rawElements.modify(_QWORD *a1, uint64_t a2))(uint64_t *a1)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = v2;
  return sub_190B78C64;
}

uint64_t sub_190B78C64(uint64_t *a1)
{
  return sub_190B78C74(a1[1], *(_QWORD *)(*a1 + 16));
}

uint64_t sub_190B78C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t result;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v5);
  v6 = sub_190BE56E4();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t NonEmpty.rawElements.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_16_6(v2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24));
  sub_190B78C74(v2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void NonEmpty.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_68();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v9 = type metadata accessor for NonEmpty(0, v1, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_23_19();
  v11 = sub_190BE56E4();
  v12 = *(_QWORD *)(v2 - 8);
  if ((v11 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v2);
    __swift_storeEnumTagSinglePayload(v6, 1, 1, v9);
  }
  else
  {
    OUTLINED_FUNCTION_16_6(v0, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
    OUTLINED_FUNCTION_17_0(v6, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
    __swift_storeEnumTagSinglePayload(v6, 0, 1, v9);
    OUTLINED_FUNCTION_26();
  }
}

uint64_t type metadata accessor for NonEmpty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NonEmpty);
}

void NonEmpty.init<A, B>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_68();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v8 - v7, v3);
  sub_190BE5450();
  v9 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v9);
  NonEmpty.init(_:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v1);
  *v5 = v10;
  OUTLINED_FUNCTION_26();
}

void NonEmpty.init<A>(arrayWith:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_68();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  sub_190AC4D04(v0, v0);
  v6 = *(_QWORD *)(v1 - 8);
  swift_allocObject();
  sub_190BE533C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v3, v1);
  sub_190ADE6B0();
  v8 = sub_190BE536C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v1);
  *v5 = v8;
  OUTLINED_FUNCTION_26();
}

void NonEmpty.first.getter()
{
  sub_190B791CC();
}

void NonEmpty.map<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  OUTLINED_FUNCTION_25_18();
  v21 = v12;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_4_0();
  v19 = v18 - v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v18 - v17, v10, v14);
  sub_190ABC730();
  sub_190B78860();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v14);
  if (v11)
    goto LABEL_4;
  v20 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v20);
  NonEmpty.init(_:)();
  if (a10)
  {
    *v21 = a10;
LABEL_4:
    OUTLINED_FUNCTION_1_5();
    return;
  }
  __break(1u);
}

void NonEmpty.randomElement<A>(using:)()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_72();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_5_32();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_7_37();
  sub_190BE5720();
  OUTLINED_FUNCTION_6_38();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_0_0();
  }
}

void NonEmpty.randomElement()()
{
  sub_190B791CC();
}

void sub_190B791CC()
{
  void (*v0)(uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_68();
  v1 = v0;
  v3 = *(_QWORD *)(v2 + 24);
  OUTLINED_FUNCTION_22_17();
  OUTLINED_FUNCTION_5_32();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_7_37();
  v1(v5, v3);
  OUTLINED_FUNCTION_6_38();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_26();
  }
}

void NonEmpty.min(by:)()
{
  sub_190B79288();
}

void NonEmpty.min<>()()
{
  sub_190B79374();
}

void NonEmpty.max(by:)()
{
  sub_190B79288();
}

void sub_190B79288()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_25_18();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v14 = v8;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(*(_QWORD *)(v9 + 24) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_190BE59A8();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_23_19();
  v3(v7, v5, v10, v11);
  if (v0)
    goto LABEL_4;
  if (__swift_getEnumTagSinglePayload(v1, 1, AssociatedTypeWitness) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v14, v1, AssociatedTypeWitness);
LABEL_4:
    OUTLINED_FUNCTION_1_5();
    return;
  }
  __break(1u);
}

void NonEmpty.max<>()()
{
  sub_190B79374();
}

void sub_190B79374()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_68();
  v1 = v0;
  v3 = v2;
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 8);
  OUTLINED_FUNCTION_22_17();
  OUTLINED_FUNCTION_5_32();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_7_37();
  v1(v7, v5, v3);
  OUTLINED_FUNCTION_6_38();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_26();
  }
}

uint64_t static NonEmpty<>.== infix(_:_:)()
{
  return sub_190BE4FD0() & 1;
}

uint64_t sub_190B79420()
{
  return static NonEmpty<>.== infix(_:_:)();
}

uint64_t NonEmpty<>.hash(into:)()
{
  return sub_190BE4EF8();
}

uint64_t NonEmpty<>.hashValue.getter()
{
  sub_190BE62FC();
  NonEmpty<>.hash(into:)();
  return sub_190BE6314();
}

uint64_t sub_190B79488()
{
  return NonEmpty<>.hashValue.getter();
}

uint64_t sub_190B79490()
{
  return NonEmpty<>.hash(into:)();
}

uint64_t sub_190B79498()
{
  sub_190BE62FC();
  NonEmpty<>.hash(into:)();
  return sub_190BE6314();
}

uint64_t NonEmpty.makeIterator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_33_12();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_17_0(v2 - v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  return sub_190BE51C8();
}

uint64_t NonEmpty.withContiguousStorageIfAvailable<A>(_:)()
{
  return sub_190BE51F8();
}

uint64_t NonEmpty._customContainsEquatableElement(_:)()
{
  return sub_190BE51EC();
}

uint64_t NonEmpty._copyToContiguousArray()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_33_12();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_17_0(v2 - v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  return sub_190BE51E0();
}

uint64_t sub_190B795F0(uint64_t a1)
{
  uint64_t v1;

  NonEmpty.makeIterator()();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t NonEmpty.underestimatedCount.getter()
{
  return sub_190BE51D4();
}

uint64_t sub_190B79638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = NonEmpty._copyToContiguousArray()();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_190B7967C()
{
  return NonEmpty.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t NonEmpty.isEmpty.getter()
{
  return sub_190BE56E4();
}

uint64_t NonEmpty.count.getter()
{
  return sub_190BE56A8();
}

uint64_t NonEmpty.indices.getter()
{
  return sub_190BE56D8();
}

uint64_t NonEmpty.startIndex.getter()
{
  return sub_190BE5684();
}

uint64_t NonEmpty.endIndex.getter()
{
  return sub_190BE56FC();
}

uint64_t NonEmpty.index(after:)()
{
  return sub_190BE56B4();
}

uint64_t NonEmpty.formIndex(after:)()
{
  return sub_190BE5708();
}

uint64_t NonEmpty.index(_:offsetBy:)()
{
  return sub_190BE56CC();
}

uint64_t NonEmpty.index(_:offsetBy:limitedBy:)()
{
  return sub_190BE56C0();
}

uint64_t NonEmpty.distance(from:to:)()
{
  return sub_190BE56F0();
}

void NonEmpty.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_24();
  v0 = OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_9_34(v0);
  OUTLINED_FUNCTION_21_15((uint64_t)&v1);
  OUTLINED_FUNCTION_21();
}

uint64_t NonEmpty.subscript.getter()
{
  return sub_190BE57F8();
}

uint64_t NonEmpty._customIndexOfEquatableElement(_:)()
{
  return sub_190BE5690();
}

uint64_t NonEmpty._customLastIndexOfEquatableElement(_:)()
{
  return sub_190BE569C();
}

void (*sub_190B7979C(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_190B797FC(v2);
  return sub_190B797F8;
}

void (*sub_190B797FC(uint64_t *a1))(_QWORD *)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v3 + 64));
  NonEmpty.subscript.getter();
  return sub_190B79888;
}

void NonEmpty<>.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_24();
  v0 = OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_9_34(v0);
  OUTLINED_FUNCTION_21_15((uint64_t)&v1);
  OUTLINED_FUNCTION_21();
}

uint64_t sub_190B79918@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t (*v5)(uint64_t *, _QWORD);
  uint64_t (*v6)(uint64_t *, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  type metadata accessor for NonEmpty(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(*(_QWORD *)(a2 + a1 - 8) + 8), a3);
  NonEmpty<>.subscript.read();
  v6 = v5;
  v8 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a4, v8, AssociatedTypeWitness);
  return v6(&v11, 0);
}

void NonEmpty<>.subscript.read()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;

  OUTLINED_FUNCTION_72();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = malloc(0x58uLL);
  *v6 = v7;
  v8 = *(_QWORD *)(v2 + 16);
  v7[4] = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[5] = AssociatedTypeWitness;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[6] = v10;
  v11 = malloc(*(_QWORD *)(v10 + 64));
  v7[7] = v11;
  v12 = *(_QWORD *)(v8 - 8);
  v7[8] = v12;
  v13 = malloc(*(_QWORD *)(v12 + 64));
  v7[9] = v13;
  OUTLINED_FUNCTION_16_6((uint64_t)v13, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 16))(v11, v4, AssociatedTypeWitness);
  v7[10] = sub_190BE5804();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B79AB4()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_68();
  v1 = (void *)*v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(void **)(*v0 + 56);
  v4 = *(_QWORD *)(*v0 + 64);
  v5 = *(_QWORD *)(*v0 + 40);
  v6 = *(_QWORD *)(*v0 + 48);
  v7 = *(_QWORD *)(*v0 + 32);
  OUTLINED_FUNCTION_30_16(*v0, *(uint64_t (**)(uint64_t, _QWORD))(*v0 + 80));
  (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v7);
  OUTLINED_FUNCTION_28_16();
  free(v3);
  free(v1);
}

uint64_t sub_190B79B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(uint64_t *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[32];

  v6 = *(_QWORD *)(a4 + a3 - 16);
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + a3 - 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = &v18[-v10];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v18[-v10], a3, AssociatedTypeWitness);
  type metadata accessor for NonEmpty(0, v6, v7, v12);
  v13 = NonEmpty<>.subscript.modify();
  v15 = v14;
  v16 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v15, a1, v16);
  ((void (*)(_BYTE *, _QWORD))v13)(v18, 0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

void (*NonEmpty<>.subscript.modify())(uint64_t *a1)
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_68();
  v1 = v0;
  v2 = malloc(0x40uLL);
  *v1 = v2;
  v3 = OUTLINED_FUNCTION_14_25();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = malloc(*(_QWORD *)(v4 + 64));
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_190BE4FB8();
  return sub_190B79D20;
}

void sub_190B79D20(uint64_t *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  OUTLINED_FUNCTION_30_16(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 56));
  OUTLINED_FUNCTION_27_15(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_28_16();
  free(v1);
}

void NonEmpty<>.subscript.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v19 = v2;
  v3 = OUTLINED_FUNCTION_22_17();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_0();
  v7 = v5 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11((char *)&v18 - v9, v1, v3);
  v11((char *)v7, (uint64_t)v10, v3);
  sub_190BE4FB8();
  v13 = v12;
  v14 = OUTLINED_FUNCTION_22_17();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v13;
  v17 = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(v16, v19, v14);
  OUTLINED_FUNCTION_21_15((uint64_t)&v20);
  OUTLINED_FUNCTION_29_14(v7);
  OUTLINED_FUNCTION_29_14(v1);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
  OUTLINED_FUNCTION_29_14((uint64_t)v10);
  OUTLINED_FUNCTION_0_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_72();
  v22 = v0;
  v23 = v1;
  v2 = v1;
  v24 = *(_QWORD *)(v3 + 8);
  v25 = v4;
  v6 = *(_QWORD *)(v5 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = sub_190BE5870();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_0();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15((char *)&v22 - v13, v2, v7);
  v15((char *)v11, (uint64_t)v14, v7);
  sub_190BE4FAC();
  v17 = v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = v17;
  v21 = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 24))(v20, v25, AssociatedTypeWitness);
  OUTLINED_FUNCTION_21_15((uint64_t)&v26);
  OUTLINED_FUNCTION_26_12(v11);
  sub_190B78C74(v22, v6);
  OUTLINED_FUNCTION_26_12(v23);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, AssociatedTypeWitness);
  OUTLINED_FUNCTION_26_12((uint64_t)v14);
  OUTLINED_FUNCTION_0_0();
}

uint64_t NonEmpty<>.subscript.getter()
{
  return sub_190BE57F8();
}

uint64_t sub_190B79EB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void (*v5)(_QWORD *);
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10[4];

  type metadata accessor for NonEmpty(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(*(_QWORD *)(a2 + a1 - 8) + 8), a3);
  v5 = NonEmpty<>.subscript.read(v10);
  v7 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a4, v7, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t *, _QWORD))v5)(v10, 0);
}

void (*NonEmpty<>.subscript.read(uint64_t *a1))(_QWORD *)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v3 + 64));
  sub_190BE57F8();
  return sub_190B79888;
}

uint64_t sub_190B7A004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  void (*v14)(_BYTE *, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  _BYTE v19[32];

  v6 = *(_QWORD *)(a4 + a3 - 16);
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + a3 - 8) + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8 = sub_190BE5870();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v19[-v10];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v19[-v10], a3, v8);
  type metadata accessor for NonEmpty(0, v6, v7, v12);
  NonEmpty<>.subscript.modify();
  v14 = v13;
  v16 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(v16, a1, AssociatedTypeWitness);
  v14(v19, 0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

void NonEmpty<>.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v3 = v2;
  v4 = malloc(0x68uLL);
  *v3 = v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = sub_190BE5870();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v4[10] = malloc(*(_QWORD *)(v6 + 64));
  (*(void (**)(void))(v6 + 16))();
  v4[11] = NonEmpty.rawElements.modify(v4, v1);
  v4[12] = sub_190BE4FAC();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B7A26C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  OUTLINED_FUNCTION_30_16(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96));
  OUTLINED_FUNCTION_27_15(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v2(v1, 0);
  OUTLINED_FUNCTION_28_16();
  free(v1);
}

uint64_t NonEmpty<>.partition(by:)()
{
  return sub_190BE4F70();
}

uint64_t NonEmpty<>.swapAt(_:_:)()
{
  return sub_190BE4F64();
}

void sub_190B7A484()
{
  NonEmpty<>.subscript.setter();
}

void (*sub_190B7A48C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = NonEmpty<>.subscript.modify();
  return sub_190B797F8;
}

void sub_190B7A4F0()
{
  NonEmpty<>.subscript.setter();
}

void (*sub_190B7A4F8(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  NonEmpty<>.subscript.modify();
  v2[4] = v3;
  return sub_190B797F8;
}

uint64_t sub_190B7A55C()
{
  return NonEmpty<>.partition(by:)();
}

uint64_t sub_190B7A574()
{
  return NonEmpty<>.swapAt(_:_:)();
}

uint64_t sub_190B7A57C()
{
  return sub_190BE4F88();
}

uint64_t sub_190B7A59C()
{
  return sub_190BE4F7C();
}

uint64_t NonEmpty<>.index(before:)()
{
  return sub_190BE4F04();
}

uint64_t NonEmpty<>.formIndex(before:)()
{
  return sub_190BE4F10();
}

uint64_t NonEmpty<>.last.getter()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_5_32();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v0);
  sub_190BE4F1C();
  result = OUTLINED_FUNCTION_6_38();
  if (!v2)
    return OUTLINED_FUNCTION_1_57();
  __break(1u);
  return result;
}

uint64_t sub_190B7A668()
{
  return NonEmpty<>.index(before:)();
}

uint64_t sub_190B7A670()
{
  return NonEmpty<>.formIndex(before:)();
}

uint64_t NonEmpty<>.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BE635C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_190BE6170();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_190B7A720(_QWORD *a1)
{
  return NonEmpty<>.encode(to:)(a1);
}

void NonEmpty<>.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[3];
  uint64_t v37;

  OUTLINED_FUNCTION_25_18();
  v30 = v3;
  v31 = v4;
  v6 = v5;
  v8 = v7;
  v28 = v9;
  v29 = type metadata accessor for NonEmpty(255, v5, v3, v4);
  v10 = sub_190BE59A8();
  OUTLINED_FUNCTION_32_10();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_23_19();
  v32 = v6;
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_16_0();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v33 = (uint64_t)&v25 - v18;
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_190BE632C();
  if (!v0)
  {
    v26 = v10;
    v27 = v16;
    v25 = v2;
    v19 = v29;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    sub_190BE6110();
    OUTLINED_FUNCTION_35_13(v27, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
    NonEmpty.init(_:)();
    if (__swift_getEnumTagSinglePayload(v1, 1, v19) != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v33, v32);
      OUTLINED_FUNCTION_35_13(v28, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      v24 = (uint64_t)v8;
      goto LABEL_7;
    }
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v26);
    v20 = sub_190BE5CB4();
    swift_allocError();
    v22 = v21;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    sub_190BE60D4();
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_190BE5C54();
    swift_bridgeObjectRelease();
    v34 = 0x6E6120646E756F46;
    v35 = 0xEF207974706D6520;
    v23 = v32;
    sub_190BE644C();
    sub_190BE5114();
    swift_bridgeObjectRelease();
    sub_190BE5114();
    sub_190BE5CA8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC458], v20);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v33, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  v24 = (uint64_t)v8;
LABEL_7:
  __swift_destroy_boxed_opaque_existential_1(v24);
  OUTLINED_FUNCTION_1_5();
}

void sub_190B7AA10()
{
  NonEmpty<>.init(from:)();
}

uint64_t sub_190B7AA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x194016EF8](&protocol conformance descriptor for <> NonEmpty<A>, a1, &v4);
}

uint64_t sub_190B7AA68()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_190B7AA88()
{
  JUMPOUT(0x194016EF8);
}

uint64_t sub_190B7AA98()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_190B7AAB4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_190B7AAD0()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_190B7AAEC()
{
  JUMPOUT(0x194016EF8);
}

uint64_t sub_190B7AAFC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_190B7AB20()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_190B7AB44()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_190B7AB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x194016EF8](&protocol conformance descriptor for <> NonEmpty<A>, a1, &v4);
}

uint64_t sub_190B7ABA0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_190B7ABC4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_190B7AC18(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B7ACC8 + 4 * byte_190BED450[(v8 - 1)]))();
}

void sub_190B7AD14(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_190B7AEC0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *);

  v6[4] = a6;
  v8 = sub_190BE54A4();
  v6[5] = v8;
  v6[6] = *(_QWORD *)(v8 - 8);
  v6[7] = swift_task_alloc();
  v11 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  v6[8] = v9;
  *v9 = v6;
  v9[1] = sub_190B7AF58;
  return v11(v6 + 2);
}

uint64_t sub_190B7AF58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B7AFB0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_190B75930();
  OUTLINED_FUNCTION_35_1(v1);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_5_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B7B000()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  void *v8;
  uint64_t (*v9)(void);

  v1 = *(void **)(v0 + 72);
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_64_6((uint64_t)v1, (unint64_t *)&qword_1ED034920);
  v2 = swift_dynamicCast();
  v3 = *(void **)(v0 + 72);
  if ((v2 & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 40);
    OUTLINED_FUNCTION_38_10();
    sub_190B2BBD8();
    OUTLINED_FUNCTION_35_1(v7);
    OUTLINED_FUNCTION_2();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v8 = *(void **)(v0 + 24);
  }
  else
  {

    sub_190B2BA88();
    OUTLINED_FUNCTION_35_1(v9);
    OUTLINED_FUNCTION_2();
    v8 = v3;
  }

  swift_task_dealloc();
  return OUTLINED_FUNCTION_14_26(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B7B0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = v0;
  v5 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  UnfairLock.init(options:)((int *)&v5);
  v3 = v2;
  sub_190AAC38C(0, &qword_1EE200278, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF120], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_190AC97E0(v3);
  return v1;
}

#error "190B7B1C8: call analysis failed (funcsize=38)"

void sub_190B7B210()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  UnfairLock.lock()();
  if (*(_QWORD *)(v0 + 24))
  {
    swift_retain();
    sub_190B2F210();
    swift_release();
    *(_QWORD *)(v0 + 24) = 0;
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

void sub_190B7B26C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 32);
  UnfairLock.lock()();
  if (*(_QWORD *)(v1 + 24))
  {
    swift_retain();
    sub_190B2F068(a1);
    swift_release();
    *(_QWORD *)(v1 + 24) = 0;
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

void sub_190B7B2D0()
{
  sub_190B7B2F4();
}

void sub_190B7B2F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  UnfairLock.lock()();
  if (*(_QWORD *)(v0 + 24))
  {
    swift_retain();
    sub_190B7B528();
    swift_release();
    *(_QWORD *)(v0 + 24) = 0;
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t sub_190B7B35C(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  unint64_t inited;
  uint64_t v10;
  uint64_t v11;

  sub_190AC5F10(0, (unint64_t *)&qword_1ED034DF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BED800;
  *(_QWORD *)(inited + 32) = v4;
  swift_retain();
  *(_QWORD *)(inited + 40) = sub_190B7B784(a1, a2, a3, a4);
  sub_190BE5330();
  sub_190B7B8BC(inited);
  v11 = v10;
  swift_bridgeObjectRelease();
  return v11;
}

void sub_190B7B42C()
{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  uint64_t v2;

  if (OUTLINED_FUNCTION_174())
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_2();
    sub_190B75448();
    v1 = v0;
    OUTLINED_FUNCTION_9_2();
    v2 = OUTLINED_FUNCTION_1();
    v1(v2);
    OUTLINED_FUNCTION_70_4();
  }
  OUTLINED_FUNCTION_4();
}

void sub_190B7B484()
{
  sub_190ADF7D4();
}

void sub_190B7B490()
{
  sub_190ADF7D4();
}

void sub_190B7B49C()
{
  sub_190ADF7D4();
}

void sub_190B7B4A8()
{
  sub_190ADF7D4();
}

void sub_190B7B4B4()
{
  uint64_t v0;
  void *v1;

  if (OUTLINED_FUNCTION_19_21())
  {
    OUTLINED_FUNCTION_18_22();
    OUTLINED_FUNCTION_9_2();
    sub_190B75650(v1, v0);
    OUTLINED_FUNCTION_11_26();
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_42_9();
    OUTLINED_FUNCTION_21_16();
  }
  OUTLINED_FUNCTION_4();
}

void sub_190B7B4F8()
{
  sub_190ADF7D4();
}

void sub_190B7B504()
{
  sub_190ADF7D4();
}

void sub_190B7B510()
{
  sub_190ADF7D4();
}

void sub_190B7B51C()
{
  sub_190ADF7D4();
}

void sub_190B7B528()
{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  uint64_t v2;

  if (OUTLINED_FUNCTION_174())
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_5_0();
    sub_190B758C8();
    v1 = v0;
    OUTLINED_FUNCTION_9_2();
    v2 = OUTLINED_FUNCTION_1();
    v1(v2);
    OUTLINED_FUNCTION_70_4();
  }
  OUTLINED_FUNCTION_4();
}

void sub_190B7B584()
{
  sub_190ADF7D4();
}

uint64_t sub_190B7B590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v25 = a6;
  v26 = a5;
  v12 = sub_190BE4C40();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190BE4C88();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a7;
  v20[5] = a8;
  aBlock[4] = sub_190B45138;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_66;
  v21 = _Block_copy(aBlock);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  sub_190BE4C64();
  v27 = MEMORY[0x1E0DEE9D8];
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_190ADCAB4((unint64_t *)&qword_1ED034E18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034E20, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190B14CC4();
  sub_190BE5B70();
  MEMORY[0x194015B84](v25, v19, v15, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return swift_release();
}

uint64_t sub_190B7B784(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(_BYTE *, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];
  id v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;

  v8 = sub_190BE4CAC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v20[-v13];
  sub_190BE4CA0();
  MEMORY[0x194014FA8](v12, a4);
  v15 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  v15(v12, v8);
  v16 = sub_190B449AC(a1);
  v21 = v16;
  v22 = v14;
  v23 = a2;
  v24 = a3;
  sub_190AC5F10(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  sub_190B21070((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190B82514, (uint64_t)v20);
  v18 = v17;

  v15(v14, v8);
  return v18;
}

void sub_190B7B8BC(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  if (a1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v2 = sub_190BE5EAC();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
LABEL_14:
    sub_190B2850C();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_190BECE40;
    *(_BYTE *)(v7 + 16) = 2;
    sub_190AC5F10(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
    swift_allocObject();
    sub_190B5BE44();
    return;
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_14;
LABEL_3:
  sub_190AC5F10(0, &qword_1EE2002A8, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for OnlyOnceDeferredPromise);
  swift_allocObject();
  v3 = sub_190B817F8();
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = v3;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x194015F20](v5, a1);
      else
        swift_retain();
      if (qword_1ED035648 != -1)
        swift_once();
      ++v5;
      v6 = (id)qword_1ED035618;
      sub_190B7B164();
      swift_release();

    }
    while (v2 != v5);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (v4[2])
    {
      swift_retain();
      swift_release();
      return;
    }
  }
  __break(1u);
}

BOOL static BackgroundFetchResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BackgroundFetchResult.hash(into:)()
{
  return sub_190BE6308();
}

void BackgroundFetchResult.hashValue.getter()
{
  OUTLINED_FUNCTION_9_12();
  sub_190BE6308();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void BackgroundFetchTrigger.readableString.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8) > 2uLL)
    sub_190BE5114();
  OUTLINED_FUNCTION_10_6();
}

BOOL static BackgroundFetchTrigger.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      OUTLINED_FUNCTION_3_46(*a1, 0);
      v6 = v4;
      v7 = 0;
      goto LABEL_24;
    }
    OUTLINED_FUNCTION_1_58();
    v3 = 0;
    goto LABEL_14;
  }
  if (v3 != 1)
  {
    if (v3 == 2)
    {
      if (v5 == 2)
      {
        OUTLINED_FUNCTION_3_46(*a1, 2uLL);
        v6 = v4;
        v7 = 2;
LABEL_24:
        OUTLINED_FUNCTION_10_32(v6, v7);
        return 1;
      }
      OUTLINED_FUNCTION_1_58();
      v3 = 2;
    }
    else
    {
      if (v5 >= 3)
      {
        v8 = *a1;
        if (v2 == v4 && v3 == v5)
        {
          sub_190AB20CC(v8, v3);
          OUTLINED_FUNCTION_8_35();
          OUTLINED_FUNCTION_3_46(v2, v3);
          v6 = v2;
          v7 = v3;
          goto LABEL_24;
        }
        v11 = sub_190BE60BC();
        OUTLINED_FUNCTION_1_58();
        OUTLINED_FUNCTION_8_35();
        OUTLINED_FUNCTION_3_46(v2, v3);
        OUTLINED_FUNCTION_10_32(v4, v5);
        return (v11 & 1) != 0;
      }
      OUTLINED_FUNCTION_1_58();
      OUTLINED_FUNCTION_8_35();
    }
LABEL_14:
    OUTLINED_FUNCTION_3_46(v2, v3);
    OUTLINED_FUNCTION_10_32(v4, v5);
    return 0;
  }
  if (v5 != 1)
  {
    OUTLINED_FUNCTION_1_58();
    v3 = 1;
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_3_46(*a1, 1uLL);
  OUTLINED_FUNCTION_10_32(v4, 1uLL);
  return v5;
}

uint64_t BackgroundFetchTrigger.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1)
  {
    if (v1 == 1)
    {
      OUTLINED_FUNCTION_33_13();
    }
    else if (v1 == 2)
    {
      OUTLINED_FUNCTION_32_11();
    }
    else
    {
      OUTLINED_FUNCTION_24_17();
    }
  }
  else
  {
    OUTLINED_FUNCTION_39_12();
  }
  return sub_190BE50B4();
}

void *static BackgroundFetchTrigger.allCases.getter()
{
  return &unk_1E2CE14F0;
}

void BackgroundFetchTrigger.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  OUTLINED_FUNCTION_9_12();
  if (v1)
  {
    if (v1 == 1)
    {
      OUTLINED_FUNCTION_33_13();
    }
    else if (v1 == 2)
    {
      OUTLINED_FUNCTION_32_11();
    }
    else
    {
      OUTLINED_FUNCTION_24_17();
    }
  }
  else
  {
    OUTLINED_FUNCTION_39_12();
  }
  sub_190BE50B4();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void sub_190B7BE90(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E2CE14F0;
}

uint64_t sub_190B7BEA8()
{
  sub_190BE62FC();
  BackgroundFetchTrigger.hash(into:)();
  return OUTLINED_FUNCTION_32_0();
}

TeaFoundation::BackgroundFetchConditions __swiftcall BackgroundFetchConditions.init(rawValue:)(TeaFoundation::BackgroundFetchConditions rawValue)
{
  TeaFoundation::BackgroundFetchConditions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static BackgroundFetchConditions.inexpensiveNetwork.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

void static BackgroundFetchConditions.unconstrainedNetwork.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

void static BackgroundFetchConditions.wifiNetwork.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

void static BackgroundFetchConditions.externalPower.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

uint64_t BackgroundFetchConditions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaFoundation::BackgroundFetchConditions sub_190B7BF24(Swift::Int *a1)
{
  return BackgroundFetchConditions.init(rawValue:)(*a1);
}

TeaFoundation::BackgroundFetchConditions sub_190B7BF2C@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaFoundation::BackgroundFetchConditions result;

  result.rawValue = BackgroundFetchConditions.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_190B7BF54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = BackgroundFetchConditions.rawValue.getter();
  *a1 = result;
  return result;
}

void sub_190B7BF78()
{
  BackgroundFetchWorker.backgroundFetchTriggers.getter();
}

void sub_190B7BF8C(_QWORD *a1@<X8>)
{
  BackgroundFetchWorker.backgroundFetchPreconditions(for:)(a1);
}

void BackgroundFetchWorker.backgroundFetchPreconditions(for:)(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_190B7BFA8()
{
  BackgroundFetchWorker.performBackgroundFetch()();
}

void sub_190B7BFBC()
{
  sub_190AC5F10(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  sub_190B713BC(0);
}

void BackgroundFetchWorker.performBackgroundFetch()()
{
  sub_190AC5F10(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_57_5();
  OUTLINED_FUNCTION_0();
}

void sub_190B7C050(uint64_t a1)
{
  _BYTE v1[40];

  sub_190B5A5D4(a1, (uint64_t)v1);
  sub_190AC5F10(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  sub_190B713BC(0);
}

void BackgroundFetchWorker.performBackgroundFetch(trigger:conditions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_QWORD *)(a1 + 8))
  {
    sub_190AC5F10(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_57_5();
    OUTLINED_FUNCTION_0();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  }
}

uint64_t BackgroundFetchManager.journal.getter()
{
  return swift_unknownObjectRetain();
}

id BackgroundFetchManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BackgroundFetchManager.init()()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  v1 = (objc_class *)OUTLINED_FUNCTION_105();
  *(_QWORD *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_configuredTriggers] = MEMORY[0x1E0DEE9E8];
  v2 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_networkReachability;
  v3 = qword_1EE1FE2A8;
  v4 = v0;
  if (v3 != -1)
    swift_once();
  *(_QWORD *)&v4[v2] = qword_1EE2009F0;
  v5 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_backgroundTaskSchedulingQueue;
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3828]);
  OUTLINED_FUNCTION_8();
  v7 = objc_msgSend(v6, sel_init);
  *(_QWORD *)&v4[v5] = v7;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_journal] = 0;
  v8 = v7;
  objc_msgSend(v8, sel_setMaxConcurrentOperationCount_, 1);

  v10.receiver = v4;
  v10.super_class = v1;
  return objc_msgSendSuper2(&v10, sel_init);
}

void BackgroundFetchManager.__allocating_init(journal:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  BackgroundFetchManager.init(journal:)(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t BackgroundFetchManager.performBackgroundFetch()()
{
  _OWORD v1[2];
  uint64_t v2;

  v2 = 0;
  memset(v1, 0, sizeof(v1));
  return sub_190B7C2E0((uint64_t)v1);
}

uint64_t sub_190B7C2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  id v17;
  uint64_t v18;
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  sub_190B5A5D4(a1, (uint64_t)v20);
  if (qword_1EE1FE300 != -1)
    swift_once();
  v3 = sub_190BE4A30();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE2009D8);
  sub_190B82088(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB20CC);
  sub_190B82088(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB20CC);
  v4 = sub_190BE4A0C();
  v5 = sub_190BE58AC();
  if (!os_log_type_enabled(v4, v5))
  {
    sub_190B82088(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB2098);
    sub_190B82088(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB2098);

    goto LABEL_14;
  }
  v6 = (uint8_t *)swift_slowAlloc();
  v7 = swift_slowAlloc();
  v21 = v7;
  *(_DWORD *)v6 = 136446210;
  sub_190B5A5D4((uint64_t)v20, (uint64_t)&v24);
  if (v25)
  {
    if (v25 == 2)
    {
      v8 = 0x20676E697661654CLL;
      v9 = 1802661719;
    }
    else
    {
      if (v25 != 1)
      {
        v22 = 0x656C756465686353;
        v23 = 0xEB00000000203A64;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        swift_retain();
        sub_190BE5114();
        sub_190B82088(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB2098);
        v8 = v22;
        v10 = v23;
        goto LABEL_13;
      }
      v8 = 0x20676E697661654CLL;
      v9 = 1701670728;
    }
    v10 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
  }
  else
  {
    v8 = 0x7266655220707041;
    v10 = 0xEB00000000687365;
  }
LABEL_13:
  sub_190ACE890(v8, v10, &v21);
  v22 = v11;
  sub_190BE5A2C();
  swift_bridgeObjectRelease();
  sub_190B82088(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB2098);
  sub_190B82088(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB2098);
  _os_log_impl(&dword_190AA0000, v4, v5, "will perform background fetch for trigger: %{public}s", v6, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x194017000](v7, -1, -1);
  MEMORY[0x194017000](v6, -1, -1);

LABEL_14:
  v12 = *(void **)(v2 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_journal);
  if (v12)
  {
    sub_190B5A5D4((uint64_t)v20, (uint64_t)&v21);
    v13 = (void *)sub_190BE4FDC();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_addEntryWithReason_, v13);

  }
  sub_190B7CEF8(v2, v20);
  sub_190AB8568(0, (unint64_t *)&qword_1ED035670);
  v14 = (void *)sub_190BE590C();
  sub_190B2C600();
  swift_release();

  v15 = (void *)sub_190BE590C();
  sub_190B220C0((uint64_t)v15, (uint64_t)sub_190B7DB28, 0);
  swift_release();

  sub_190B5A5D4((uint64_t)v20, (uint64_t)&v22);
  if (v23 > 2)
    v16 = 120.0;
  else
    v16 = dbl_190BEDC28[v23];
  if (qword_1ED035648 != -1)
    swift_once();
  v17 = (id)qword_1ED035618;
  v18 = sub_190B7B35C(v17, 0, 0, v16);
  swift_release();

  return v18;
}

uint64_t BackgroundFetchManager.performBackgroundFetch(trigger:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  _OWORD v4[2];
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  v5 = v1;
  return sub_190B7C2E0((uint64_t)v4);
}

uint64_t BackgroundFetchManager.add(for:workerBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  int64_t v37;
  _QWORD v38[5];

  v5 = v4;
  type metadata accessor for BlockBasedBackgroundFetchWorker();
  v9 = (_QWORD *)OUTLINED_FUNCTION_24();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v34 = type metadata accessor for DisposableWorker();
  v10 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v10 + 24) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 24) = &off_1E2CE2080;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v10 + 40) = v9;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_8();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();
  v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers);
  OUTLINED_FUNCTION_6_0();
  v12 = swift_retain();
  MEMORY[0x194015590](v12);
  sub_190AAE55C(*(_QWORD *)((*v11 & 0xFFFFFFFFFFFFF8) + 0x10));
  v33 = v10;
  sub_190BE53A8();
  sub_190BE5330();
  swift_endAccess();
  v13 = v9[2];
  v36 = v13 + 56;
  v14 = 1 << *(_BYTE *)(v13 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v13 + 56);
  v37 = (unint64_t)(v14 + 63) >> 6;
  result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    v24 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 40 * i);
    v25 = v24[1];
    v27 = v24[2];
    v26 = v24[3];
    v28 = v24[4];
    v38[0] = *v24;
    v38[1] = v25;
    v38[2] = v27;
    v38[3] = v26;
    v38[4] = v28;
    v29 = OUTLINED_FUNCTION_44_6();
    sub_190AB20CC(v29, v30);
    sub_190AB17F8((uint64_t)v38);
    v31 = OUTLINED_FUNCTION_44_6();
    result = sub_190AB2098(v31, v32);
    if (v16)
      goto LABEL_4;
LABEL_5:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v21 >= v37)
      goto LABEL_21;
    v22 = *(_QWORD *)(v36 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_21;
      v22 = *(_QWORD *)(v36 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v37)
          goto LABEL_21;
        v22 = *(_QWORD *)(v36 + 8 * v18);
        if (!v22)
          break;
      }
    }
LABEL_18:
    v16 = (v22 - 1) & v22;
  }
  v23 = v21 + 3;
  if (v23 >= v37)
  {
LABEL_21:
    swift_release();
    a4[3] = v34;
    a4[4] = (uint64_t)&off_1E2CDFA80;
    result = swift_release();
    *a4 = v33;
    return result;
  }
  v22 = *(_QWORD *)(v36 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v37)
      goto LABEL_21;
    v22 = *(_QWORD *)(v36 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_190B7CAF8()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

Swift::Void __swiftcall BackgroundFetchManager.rescheduleBackgroundTasks()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers);
  swift_beginAccess();
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_40;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      v5 = v2 & 0xC000000000000001;
      v30 = v2 + 32;
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
      v33 = v3;
      v34 = v2;
      v32 = v2 & 0xC000000000000001;
      while (1)
      {
        if (v5)
        {
          v6 = MEMORY[0x194015F20](v4, v2);
        }
        else
        {
          if (v4 >= *(_QWORD *)(v31 + 16))
            goto LABEL_39;
          v6 = *(_QWORD *)(v30 + 8 * v4);
          swift_retain();
        }
        if (__OFADD__(v4++, 1))
          goto LABEL_38;
        v8 = MEMORY[0x1940170E4](v6 + 32);
        swift_unknownObjectRelease();
        if (v8)
        {
          if (MEMORY[0x1940170E4](v6 + 16))
            break;
        }
LABEL_34:
        swift_release();
        if (v4 == v3)
          goto LABEL_35;
      }
      v9 = *(_QWORD *)(v6 + 24);
      ObjectType = swift_getObjectType();
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
      v12 = 0;
      v35 = v11 + 56;
      v13 = 1 << *(_BYTE *)(v11 + 32);
      if (v13 < 64)
        v14 = ~(-1 << v13);
      else
        v14 = -1;
      v2 = v14 & *(_QWORD *)(v11 + 56);
      v15 = (unint64_t)(v13 + 63) >> 6;
      while (v2)
      {
        OUTLINED_FUNCTION_58_6();
        v17 = v16 | (v12 << 6);
LABEL_31:
        v21 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 40 * v17);
        v22 = v21[1];
        if (v22 >= 3)
        {
          v23 = v21[3];
          v24 = v21[4];
          v25 = *v21;
          v36 = v21[2];
          OUTLINED_FUNCTION_60_7();
          sub_190AB20CC(v26, v27);
          swift_retain();
          sub_190B7CDE4(v25, v22, &v36, v23, v24);
          swift_release();
          OUTLINED_FUNCTION_60_7();
          sub_190AB2098(v28, v29);
        }
      }
      v18 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v18 >= v15)
        goto LABEL_33;
      ++v12;
      if (*(_QWORD *)(v35 + 8 * v18))
        goto LABEL_30;
      v12 = v18 + 1;
      if (v18 + 1 >= v15)
        goto LABEL_33;
      if (*(_QWORD *)(v35 + 8 * v12))
        goto LABEL_30;
      v12 = v18 + 2;
      if (v18 + 2 >= v15)
        goto LABEL_33;
      if (*(_QWORD *)(v35 + 8 * v12))
        goto LABEL_30;
      v19 = v18 + 3;
      if (v19 >= v15)
      {
LABEL_33:
        swift_unknownObjectRelease();
        swift_release();
        v3 = v33;
        v2 = v34;
        v5 = v32;
        goto LABEL_34;
      }
      if (*(_QWORD *)(v35 + 8 * v19))
        break;
      while (1)
      {
        v12 = v19 + 1;
        if (__OFADD__(v19, 1))
          break;
        if (v12 >= v15)
          goto LABEL_33;
        ++v19;
        if (*(_QWORD *)(v35 + 8 * v12))
          goto LABEL_30;
      }
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v3 = sub_190BE5EAC();
      if (!v3)
        goto LABEL_35;
    }
    v12 = v19;
LABEL_30:
    OUTLINED_FUNCTION_53_7();
    v17 = v20 + (v12 << 6);
    goto LABEL_31;
  }
LABEL_35:
  swift_bridgeObjectRelease();
}

void sub_190B7CDE4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  void *v11;
  uint64_t (*v12)();
  objc_class *v13;
  objc_class *v14;
  char *v15;
  uint64_t (**v16)();
  id v17;
  char *v18;
  id v19;
  objc_super v20;

  v10 = *a3;
  v11 = *(void **)&v5[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_backgroundTaskSchedulingQueue];
  v12 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v12 + 2) = a4;
  *((_QWORD *)v12 + 3) = a5;
  *((_QWORD *)v12 + 4) = a1;
  *((_QWORD *)v12 + 5) = a2;
  *((_QWORD *)v12 + 6) = v5;
  *((_QWORD *)v12 + 7) = v10;
  sub_190AC5F10(0, &qword_1EE1FE2D0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for AsyncBlockOperation);
  v14 = v13;
  v15 = (char *)objc_allocWithZone(v13);
  v16 = (uint64_t (**)())&v15[qword_1ED032B80];
  *v16 = sub_190B81F78;
  v16[1] = v12;
  v20.receiver = v15;
  v20.super_class = v14;
  v17 = v11;
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v18 = v5;
  v19 = objc_msgSendSuper2(&v20, sel_init);
  objc_msgSend(v17, sel_addOperation_, v19, v20.receiver, v20.super_class);

}

uint64_t sub_190B7CEF8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11[5];
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  sub_190B7CFE8(v11);
  v4 = v11[0];
  sub_190B5A5D4((uint64_t)a2, (uint64_t)v11);
  v10 = v4;
  sub_190B82088(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB20CC);
  sub_190B7D348((uint64_t)v11, &v10, a1, &v12, a2, v4);
  v5 = qword_1ED035648;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v5 != -1)
    swift_once();
  v6 = (id)qword_1ED035618;
  sub_190B2F8F8();
  v8 = v7;
  swift_bridgeObjectRelease_n();

  return v8;
}

uint64_t sub_190B7CFE8@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (TFDrawingUnlimitedPower())
    v2 = 8;
  else
    v2 = 0;
  swift_retain();
  sub_190AA366C();
  v3 = sub_190B54728();
  swift_release();
  swift_release();
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL | (v3 >> 2) & 1;
  swift_retain();
  sub_190AA366C();
  v5 = sub_190B54728();
  swift_release();
  swift_release();
  v6 = v4 | (v5 >> 2) & 2;
  swift_retain();
  sub_190AA366C();
  LOBYTE(v5) = sub_190B54728();
  swift_release();
  result = swift_release();
  *a1 = (v6 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v5 & 1))) ^ 3;
  return result;
}

uint64_t sub_190B7D0D0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t ObjectType;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22[5];

  if (qword_1EE1FE300 != -1)
    swift_once();
  v10 = sub_190BE4A30();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE2009D8);
  swift_unknownObjectRetain_n();
  v11 = sub_190BE4A0C();
  v12 = sub_190BE58AC();
  if (os_log_type_enabled(v11, v12))
  {
    v19 = a4;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v21 = v14;
    v22[0] = 0;
    *(_DWORD *)v13 = 136446210;
    v22[1] = 0xE000000000000000;
    v20[0] = a1;
    v20[1] = a2;
    sub_190B8253C(0, (unint64_t *)&unk_1EE2002C0);
    sub_190BE5DE0();
    sub_190ACE890(v22[0], 0xE000000000000000, &v21);
    v22[0] = v15;
    sub_190BE5A2C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v11, v12, "will trigger worker: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v14, -1, -1);
    v16 = v13;
    a4 = v19;
    MEMORY[0x194017000](v16, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  ObjectType = swift_getObjectType();
  sub_190B5A5D4(a4, (uint64_t)v22);
  v20[0] = a5;
  (*(void (**)(uint64_t *, _QWORD *, uint64_t, uint64_t))(a2 + 32))(v22, v20, ObjectType, a2);
  MEMORY[0x194015590]();
  sub_190AAE55C(*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_190BE53A8();
  return sub_190BE5330();
}

void sub_190B7D348(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4, _QWORD *a5, uint64_t a6)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[48];

  sub_190B5A5D4(a1, (uint64_t)v46);
  v40 = *a2;
  v8 = (uint64_t *)(a3 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager_workers);
  swift_beginAccess();
  v9 = *v8;
  v36 = v8;
  if ((unint64_t)*v8 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v10 = sub_190BE5EAC();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v10)
    {
LABEL_3:
      if (v10 >= 1)
      {
        v11 = 0;
        v12 = v9 & 0xC000000000000001;
        while (1)
        {
          if (v12)
          {
            v13 = MEMORY[0x194015F20](v11, v9);
          }
          else
          {
            v13 = *(_QWORD *)(v9 + 8 * v11 + 32);
            swift_retain();
          }
          v14 = MEMORY[0x1940170E4](v13 + 32);
          swift_unknownObjectRelease();
          if (v14 && (v15 = MEMORY[0x1940170E4](v13 + 16)) != 0)
          {
            v16 = v15;
            v17 = *(_QWORD *)(v13 + 24);
            ObjectType = swift_getObjectType();
            v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(ObjectType, v17);
            v20 = sub_190AB2100((uint64_t)v46, v19);
            swift_bridgeObjectRelease();
            if ((v20 & 1) == 0)
            {
              if (qword_1EE1FE300 != -1)
                swift_once();
              v21 = sub_190BE4A30();
              __swift_project_value_buffer(v21, (uint64_t)qword_1EE2009D8);
              swift_unknownObjectRetain_n();
              v22 = sub_190BE4A0C();
              v23 = sub_190BE58AC();
              if (os_log_type_enabled(v22, v23))
              {
                v24 = swift_slowAlloc();
                v25 = swift_slowAlloc();
                v44 = v17;
                v45 = v25;
                *(_DWORD *)v24 = 136446210;
                v41 = 0;
                v42 = 0xE000000000000000;
                v43 = v16;
                sub_190B8253C(0, (unint64_t *)&unk_1EE2002C0);
                sub_190BE5DE0();
                sub_190ACE890(v41, v42, &v45);
                *(_QWORD *)(v24 + 4) = v26;
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_190AA0000, v22, v23, "skipping worker because it hasn't requested this trigger, worker=%{public}s", (uint8_t *)v24, 0xCu);
                goto LABEL_22;
              }
              goto LABEL_23;
            }
            sub_190B5A5D4((uint64_t)v46, (uint64_t)&v41);
            (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))(v17 + 16))(&v43, &v41, ObjectType, v17);
            if ((v43 & ~v40) != 0)
            {
              if (qword_1EE1FE300 != -1)
                swift_once();
              v27 = sub_190BE4A30();
              __swift_project_value_buffer(v27, (uint64_t)qword_1EE2009D8);
              swift_unknownObjectRetain_n();
              v22 = sub_190BE4A0C();
              v28 = sub_190BE58AC();
              if (os_log_type_enabled(v22, v28))
              {
                v24 = swift_slowAlloc();
                v25 = swift_slowAlloc();
                v44 = v17;
                v45 = v25;
                *(_DWORD *)v24 = 136446210;
                v41 = 0;
                v42 = 0xE000000000000000;
                v43 = v16;
                sub_190B8253C(0, (unint64_t *)&unk_1EE2002C0);
                sub_190BE5DE0();
                sub_190ACE890(v41, v42, &v45);
                *(_QWORD *)(v24 + 4) = v29;
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_190AA0000, v22, v28, "skipping worker because its preconditions aren't satisfied, worker=%{public}s", (uint8_t *)v24, 0xCu);
LABEL_22:
                swift_arrayDestroy();
                MEMORY[0x194017000](v25, -1, -1);
                MEMORY[0x194017000](v24, -1, -1);
                swift_unknownObjectRelease();
                swift_release();

LABEL_24:
                v12 = v9 & 0xC000000000000001;
                goto LABEL_25;
              }
LABEL_23:

              swift_release();
              swift_unknownObjectRelease_n();
              goto LABEL_24;
            }
            sub_190B7D0D0(v16, v17, a4, (uint64_t)a5, a6);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
LABEL_25:
          if (v10 == ++v11)
            goto LABEL_28;
        }
      }
      __break(1u);
      goto LABEL_44;
    }
  }
LABEL_28:
  swift_bridgeObjectRelease();
  v30 = *v36;
  v41 = MEMORY[0x1E0DEE9D8];
  if (!(v30 >> 62))
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v31)
      goto LABEL_30;
LABEL_41:
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
LABEL_42:
    *v36 = v35;
    swift_bridgeObjectRelease();
    sub_190B82088(a5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190AB2098);
    return;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v31 = sub_190BE5EAC();
  if (!v31)
    goto LABEL_41;
LABEL_30:
  if (v31 >= 1)
  {
    for (i = 0; i != v31; ++i)
    {
      if ((v30 & 0xC000000000000001) != 0)
      {
        v33 = MEMORY[0x194015F20](i, v30);
      }
      else
      {
        v33 = *(_QWORD *)(v30 + 8 * i + 32);
        swift_retain();
      }
      v34 = MEMORY[0x1940170E4](v33 + 32);
      swift_unknownObjectRelease();
      if (v34)
      {
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v35 = v41;
    goto LABEL_42;
  }
LABEL_44:
  __break(1u);
}

void sub_190B7D950(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  char v9;
  uint8_t *v10;
  _BYTE *v11;
  __int128 v12;
  uint64_t v13;

  v3 = sub_190B4BCA4(1, *a1);
  if (qword_1EE1FE300 != -1)
    swift_once();
  v4 = sub_190BE4A30();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EE2009D8);
  v5 = sub_190BE4A0C();
  v6 = sub_190BE58AC();
  if (os_log_type_enabled(v5, v6))
  {
    v11 = a2;
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    BYTE8(v12) = 0;
    v9 = v3 & 1;
    *(_QWORD *)&v12 = v3 & 1;
    sub_190BE5DE0();
    sub_190ACE890(*(uint64_t *)((char *)&v12 + 1), 0xE000000000000000, &v13);
    sub_190BE5A2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v5, v6, "successfully performed background fetch with result%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v8, -1, -1);
    v10 = v7;
    a2 = v11;
    MEMORY[0x194017000](v10, -1, -1);

  }
  else
  {

    v9 = v3 & 1;
  }
  *a2 = v9;
}

void sub_190B7DB28(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint8_t *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  sub_190B8253C(0, (unint64_t *)&qword_1ED034920);
  if (!swift_dynamicCast())
    goto LABEL_4;
  if (v18)
  {
    sub_190B20F48(v15, v17, v18);
LABEL_4:
    if (qword_1EE1FE300 != -1)
      swift_once();
    v3 = sub_190BE4A30();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EE2009D8);
    v4 = a1;
    v5 = a1;
    v6 = sub_190BE4A0C();
    v7 = sub_190BE5894();
    if (!os_log_type_enabled(v6, v7))
    {

      goto LABEL_10;
    }
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    v10 = a1;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    sub_190BE5A2C();
    *v9 = v16;

    _os_log_impl(&dword_190AA0000, v6, v7, "background fetch failed with error: %{public}@", v8, 0xCu);
    sub_190B14274();
    swift_arrayDestroy();
    MEMORY[0x194017000](v9, -1, -1);
    v11 = v8;
    goto LABEL_8;
  }
  sub_190B20F48(v15, v17, 0);
  if (qword_1EE1FE300 != -1)
    swift_once();
  v12 = sub_190BE4A30();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EE2009D8);
  v6 = sub_190BE4A0C();
  v13 = sub_190BE5894();
  if (os_log_type_enabled(v6, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_190AA0000, v6, v13, "background fetch timed out", v14, 2u);
    v11 = v14;
LABEL_8:
    MEMORY[0x194017000](v11, -1, -1);
  }
LABEL_10:

}

void sub_190B7DDBC(uint64_t a1)
{
  uint64_t v2;
  id v3;

  sub_190B7FB34();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = qword_1ED035648;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v2 != -1)
    swift_once();
  v3 = (id)qword_1ED035618;
  sub_190B2C78C();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_190B7DE7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_190AB8568(0, &qword_1EE2002A0);
    v4 = sub_190BE530C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_190B7DF08(unint64_t a1, id a2, uint64_t a3, const char *a4, const char *a5, const char *a6)
{
  id v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *oslog;
  uint64_t v24;

  if (a2)
  {
    v7 = a2;
    if (qword_1EE1FE300 != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE2009D8);
    OUTLINED_FUNCTION_103_0();
    OUTLINED_FUNCTION_103_0();
    oslog = sub_190BE4A0C();
    v9 = sub_190BE5894();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      v11 = (_QWORD *)OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v10 = 138543362;
      OUTLINED_FUNCTION_103_0();
      v24 = _swift_stdlib_bridgeErrorToNSError();
      sub_190BE5A2C();
      *v11 = v24;
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_50(&dword_190AA0000, oslog, v9, a4, v10);
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_12_0();
    }
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_15_3();
LABEL_23:

    return;
  }
  if (!a1)
    goto LABEL_19;
  if (a1 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v19 = sub_190BE5EAC();
    OUTLINED_FUNCTION_16();
    if (v19)
      goto LABEL_9;
LABEL_19:
    if (qword_1EE1FE300 != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EE2009D8);
    oslog = OUTLINED_FUNCTION_56_5();
    v21 = sub_190BE58AC();
    if (os_log_type_enabled(oslog, v21))
    {
      v22 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      *(_WORD *)v22 = 0;
      OUTLINED_FUNCTION_78_3(&dword_190AA0000, oslog, v21, a6, v22);
      OUTLINED_FUNCTION_12_0();
    }
    goto LABEL_23;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_19;
LABEL_9:
  if (qword_1EE1FE300 != -1)
    swift_once();
  v15 = OUTLINED_FUNCTION_96();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EE2009D8);
  swift_bridgeObjectRetain_n();
  v16 = sub_190BE4A0C();
  v17 = sub_190BE58AC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_20_1();
    *(_DWORD *)v18 = 134217984;
    if (a1 >> 62)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190BE5EAC();
      OUTLINED_FUNCTION_16();
    }
    OUTLINED_FUNCTION_16();
    sub_190BE5A2C();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_50(&dword_190AA0000, v16, v17, a5, v18);
    OUTLINED_FUNCTION_12_0();
  }

  swift_bridgeObjectRelease_n();
  sub_190B7DDBC(a1);
}

void sub_190B7E298(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[40];

  v16 = a2 + 16;
  swift_beginAccess();
  v17 = MEMORY[0x1940170E4](v16);
  if (v17)
  {
    v18 = (void *)v17;
    v30 = a6;
    v31 = a7;
    sub_190B5A5D4(a3, (uint64_t)v32);
    sub_190B7C2E0((uint64_t)v32);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a1;
    v20 = qword_1ED035648;
    v21 = a1;
    if (v20 != -1)
      swift_once();
    v22 = (id)qword_1ED035618;
    sub_190B2C6C4(v22, sub_190B8240C, v19);
    swift_release();
    swift_release();

    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v21;
    v24 = (void *)qword_1ED035618;
    v25 = v21;
    v26 = v24;
    sub_190ADE658((uint64_t)v26, (uint64_t)sub_190B82440, v23);
    swift_release();
    swift_release();

    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a2;
    v27[3] = a4;
    v27[4] = a5;
    v27[5] = v30;
    v27[6] = v31;
    v27[7] = a8;
    v28 = (void *)qword_1ED035618;
    swift_retain();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    v29 = v28;
    sub_190B22144((uint64_t)v29, (uint64_t)sub_190B82488, (uint64_t)v27);

    swift_release();
    swift_release();
    swift_release();

  }
}

uint64_t sub_190B7E4AC(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  void *v15;
  unint64_t v16;

  v10 = sub_190BE47E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1940170E4](a1 + 16);
  if (result)
  {
    v15 = (void *)result;
    v16 = a4;
    a5(result);
    sub_190B7E59C(a2, a3, &v16, (uint64_t)v13);

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return result;
}

void sub_190B7E59C(uint64_t a1, unint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  unsigned int v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  id v61[2];

  v61[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = sub_190BE47E4();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v58 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v56 - v13;
  v59 = *a3;
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_sharedScheduler);
  v17 = (void *)sub_190BE4FDC();
  objc_msgSend(v16, sel_cancelTaskRequestWithIdentifier_, v17);

  sub_190BE4748();
  sub_190ADCAB4(&qword_1EE1FE2B8, v9, MEMORY[0x1E0CB08B8]);
  LOBYTE(v9) = sub_190BE4FD0();
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v14, v8);
  if ((v9 & 1) != 0)
  {
    v19 = a1;
    if (qword_1EE1FE300 != -1)
      swift_once();
    v20 = sub_190BE4A30();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EE2009D8);
    swift_bridgeObjectRetain_n();
    v21 = sub_190BE4A0C();
    v22 = sub_190BE58AC();
    if (!os_log_type_enabled(v21, v22))
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = (void *)swift_slowAlloc();
    v61[0] = v24;
    *(_DWORD *)v23 = 136446210;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v19, a2, (uint64_t *)v61);
    v60 = v25;
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_190AA0000, v21, v22, "will not schedule task request for %{public}s in distant future", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194017000](v24, -1, -1);
    MEMORY[0x194017000](v23, -1, -1);
LABEL_19:

    return;
  }
  sub_190AB8568(0, (unint64_t *)&unk_1EE200218);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v57 = a1;
  v26 = sub_190B7F9D4();
  v27 = (void *)sub_190BE476C();
  objc_msgSend(v26, sel_setEarliestBeginDate_, v27);

  objc_msgSend(v26, sel_setRequiresNetworkConnectivity_, 1);
  objc_msgSend(v26, sel_setRequiresExternalPower_, (v59 >> 3) & 1);
  v28 = objc_msgSend(v15, sel_sharedScheduler);
  v61[0] = 0;
  v29 = objc_msgSend(v28, sel_submitTaskRequest_error_, v26, v61);

  if (!v29)
  {
    v42 = v61[0];
    v43 = (void *)sub_190BE4544();

    swift_willThrow();
    if (qword_1EE1FE300 != -1)
      swift_once();
    v44 = sub_190BE4A30();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EE2009D8);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v45 = v43;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v46 = v43;
    v21 = sub_190BE4A0C();
    v47 = sub_190BE5894();
    v48 = os_log_type_enabled(v21, v47);
    v49 = v57;
    if (v48)
    {
      v50 = swift_slowAlloc();
      v51 = (_QWORD *)swift_slowAlloc();
      v52 = (void *)swift_slowAlloc();
      v61[0] = v52;
      *(_DWORD *)v50 = 136446466;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v49, a2, (uint64_t *)v61);
      v60 = v53;
      sub_190BE5A2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v50 + 12) = 2114;
      v54 = v43;
      v55 = _swift_stdlib_bridgeErrorToNSError();
      v60 = v55;
      sub_190BE5A2C();
      *v51 = v55;

      _os_log_impl(&dword_190AA0000, v21, v47, "failed to schedule task request for  %{public}s with error: %{public}@", (uint8_t *)v50, 0x16u);
      sub_190B14274();
      swift_arrayDestroy();
      MEMORY[0x194017000](v51, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194017000](v52, -1, -1);
      MEMORY[0x194017000](v50, -1, -1);

      return;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  v30 = qword_1EE1FE300;
  v31 = v61[0];
  if (v30 != -1)
    swift_once();
  v32 = sub_190BE4A30();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EE2009D8);
  v33 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v58, a4, v8);
  swift_bridgeObjectRetain_n();
  v34 = sub_190BE4A0C();
  v35 = sub_190BE58AC();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v61[0] = (id)v59;
    *(_DWORD *)v36 = 136446466;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v57, a2, (uint64_t *)v61);
    v60 = v37;
    sub_190BE5A2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 12) = 2082;
    sub_190ADCAB4(&qword_1EE200210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v38 = sub_190BE5FC0();
    sub_190ACE890(v38, v39, (uint64_t *)v61);
    v60 = v40;
    sub_190BE5A2C();
    swift_bridgeObjectRelease();
    v18(v33, v8);
    _os_log_impl(&dword_190AA0000, v34, v35, "successfully scheduled task request for %{public}s at %{public}s", (uint8_t *)v36, 0x16u);
    v41 = v59;
    swift_arrayDestroy();
    MEMORY[0x194017000](v41, -1, -1);
    MEMORY[0x194017000](v36, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    v18(v33, v8);
  }

}

void sub_190B7ED90(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_190B7EDE0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v12 = MEMORY[0x1E0DEE9C0] + 8;
  sub_190AC5F10(0, (unint64_t *)&qword_1ED032C30, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  v13 = swift_allocObject();
  v18 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v14 = a5;
  UnfairLock.init(options:)((int *)&v18);
  v16 = v15;
  sub_190AC5F10(0, &qword_1ED032C20, v12, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_190AC8364(v16);
  swift_retain_n();
  sub_190B7EF50((void (*)(void))sub_190B3BA60, v13, (uint64_t)sub_190B70398, v13, a1, a2, a3, a4, (uint64_t)v14, a6);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  return v13;
}

uint64_t sub_190B7EF50(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  id v41;
  void *v42;
  void (*v44)(void);
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock[6];

  v47 = a8;
  v48 = a7;
  v13 = sub_190BE47E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v44 - v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  v45 = a2;
  v21 = swift_retain();
  a5(v21);
  sub_190BE4748();
  sub_190ADCAB4(&qword_1EE1FE2B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v22 = sub_190BE4FD0();
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v17, v13);
  if ((v22 & 1) != 0)
  {
    v44 = a1;
    v24 = v47;
    swift_release();
    if (qword_1EE1FE300 != -1)
      swift_once();
    v25 = sub_190BE4A30();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE2009D8);
    swift_bridgeObjectRetain_n();
    v26 = sub_190BE4A0C();
    v27 = sub_190BE58AC();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v46 = v23;
      v30 = v29;
      aBlock[0] = v29;
      *(_DWORD *)v28 = 136446210;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v48, v24, aBlock);
      v49 = v31;
      sub_190BE5A2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_190AA0000, v26, v27, "cancelling task request for %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      v32 = v30;
      v23 = v46;
      MEMORY[0x194017000](v32, -1, -1);
      MEMORY[0x194017000](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v41 = objc_msgSend((id)objc_opt_self(), sel_sharedScheduler);
    v42 = (void *)sub_190BE4FDC();
    objc_msgSend(v41, sel_cancelTaskRequestWithIdentifier_, v42);

    v44();
  }
  else
  {
    v45 = a10;
    v46 = v23;
    v33 = objc_msgSend((id)objc_opt_self(), sel_sharedScheduler);
    v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    v35 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = sub_190AF6F04;
    *((_QWORD *)v36 + 3) = v20;
    v37 = v47;
    *((_QWORD *)v36 + 4) = v48;
    *((_QWORD *)v36 + 5) = v37;
    v38 = v45;
    *((_QWORD *)v36 + 6) = v34;
    *((_QWORD *)v36 + 7) = v38;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v36[v35], v17, v13);
    aBlock[4] = (uint64_t)sub_190B82040;
    aBlock[5] = (uint64_t)v36;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_190B7F968;
    aBlock[3] = (uint64_t)&block_descriptor_12;
    v39 = _Block_copy(aBlock);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_release();
    objc_msgSend(v33, sel_getPendingTaskRequestsWithCompletionHandler_, v39);
    v40 = v39;
    v23 = v46;
    _Block_release(v40);

  }
  return ((uint64_t (*)(char *, uint64_t))v23)(v19, v13);
}

uint64_t sub_190B7F3A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v32;
  void *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  double v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69[3];

  v61 = a7;
  v65 = a4;
  v66 = a5;
  sub_190AAC38C(0, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v56 - v14;
  v16 = sub_190BE47E4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v63 = (char *)&v56 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v56 - v24;
  v67 = a1;
  if (a1 >> 62)
  {
LABEL_31:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v26 = sub_190BE5EAC();
    if (v26)
      goto LABEL_3;
  }
  else
  {
    v26 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v26)
    {
LABEL_3:
      v57 = a6;
      v58 = a8;
      v56 = v20;
      v64 = v17;
      v62 = v25;
      v59 = a3;
      v60 = (uint64_t (*)(uint64_t))a2;
      v27 = v67;
      v17 = v67 & 0xC000000000000001;
      a8 = 4;
      while (1)
      {
        a6 = a8 - 4;
        if (v17)
          v28 = (char *)MEMORY[0x194015F20](a8 - 4, v27);
        else
          v28 = (char *)*(id *)(v27 + 8 * a8);
        v20 = v28;
        a3 = a8 - 3;
        if (__OFADD__(a6, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        v25 = (char *)objc_msgSend(v28, sel_identifier);
        a2 = sub_190BE5000();
        v30 = v29;

        if (a2 == v65 && v30 == v66)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          a2 = sub_190BE60BC();
          swift_bridgeObjectRelease();
          if ((a2 & 1) == 0)
            goto LABEL_19;
        }
        v32 = objc_msgSend(v20, sel_earliestBeginDate, v56);
        if (!v32)
        {
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v16);
LABEL_21:

          sub_190B823D4((uint64_t)v15, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
          goto LABEL_22;
        }
        v33 = v32;
        a2 = (uint64_t)v63;
        sub_190BE47B4();

        v34 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
        v34(v15, a2, v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
          goto LABEL_21;
        a2 = (uint64_t)v62;
        v34(v62, (uint64_t)v15, v16);
        sub_190BE4790();
        if (v35 < 86400.0)
        {
          swift_bridgeObjectRelease();
          if (qword_1EE1FE300 != -1)
            swift_once();
          v36 = sub_190BE4A30();
          __swift_project_value_buffer(v36, (uint64_t)qword_1EE2009D8);
          v37 = v64;
          v38 = v56;
          v39 = v62;
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v56, v62, v16);
          v40 = v66;
          swift_bridgeObjectRetain_n();
          v41 = sub_190BE4A0C();
          v42 = sub_190BE58AC();
          if (os_log_type_enabled(v41, v42))
          {
            v43 = swift_slowAlloc();
            v44 = v38;
            v45 = swift_slowAlloc();
            v69[0] = v45;
            *(_DWORD *)v43 = 136446466;
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            sub_190ACE890(v65, v40, v69);
            v68 = v46;
            sub_190BE5A2C();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v43 + 12) = 2082;
            sub_190ADCAB4(&qword_1EE200210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
            v47 = sub_190BE5FC0();
            sub_190ACE890(v47, v48, v69);
            v68 = v49;
            sub_190BE5A2C();
            swift_bridgeObjectRelease();
            v50 = *(void (**)(char *, uint64_t))(v64 + 8);
            v50(v44, v16);
            _os_log_impl(&dword_190AA0000, v41, v42, "found existing task request for %{public}s, scheduledDate=%{public}s", (uint8_t *)v43, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x194017000](v45, -1, -1);
            MEMORY[0x194017000](v43, -1, -1);

            v51 = ((uint64_t (*)(char *, uint64_t))v50)(v62, v16);
          }
          else
          {

            v52 = *(void (**)(char *, uint64_t))(v37 + 8);
            v52(v38, v16);
            swift_bridgeObjectRelease_n();
            v51 = ((uint64_t (*)(char *, uint64_t))v52)(v39, v16);
          }
          return v60(v51);
        }
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(a2, v16);
LABEL_19:

LABEL_22:
        ++a8;
        v27 = v67;
        if (a3 == v26)
        {
          swift_bridgeObjectRelease();
          a2 = (uint64_t)v60;
          a6 = v57;
          a8 = v58;
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_33:
  swift_beginAccess();
  v54 = MEMORY[0x1940170E4](a6 + 16);
  if (v54)
  {
    v55 = (void *)v54;
    v68 = v61;
    sub_190B7E59C(v65, v66, &v68, a8);

  }
  return ((uint64_t (*)(uint64_t))a2)(v54);
}

uint64_t sub_190B7F968(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_190AB8568(0, (unint64_t *)&unk_1EE200200);
  v2 = sub_190BE530C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_190B7F9D4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_190BE4FDC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

id sub_190B7FA44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___locationManager);
  }
  else
  {
    v4 = sub_190B7FAA4(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_190B7FAA4(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3C8]), sel_init);
  objc_msgSend(v2, sel_setDelegate_, a1);
  objc_msgSend(v2, sel_setDesiredAccuracy_, *MEMORY[0x1E0C9E4A8]);
  objc_msgSend(v2, sel_setAllowsBackgroundLocationUpdates_, 1);
  objc_msgSend(v2, sel_setPausesLocationUpdatesAutomatically_, 0);
  return v2;
}

uint64_t sub_190B7FB34()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC13TeaFoundation22BackgroundFetchManager____lazy_storage___regionMonitor];
  }
  else
  {
    v2 = sub_190B7FB98(v0);
    *(_QWORD *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_190B7FB98(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  sub_190AAC38C(0, (unint64_t *)&qword_1ED034960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  sub_190AAC38C(0, &qword_1EE200258, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF120], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  swift_allocObject();
  v6 = a1;
  v7 = sub_190B7B0D4();
  v8 = sub_190BE5510();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1EE200250;
  v9[5] = v5;
  v9[6] = v7;
  swift_retain();
  sub_190B219C4((uint64_t)v4, (uint64_t)&unk_1EE200268, (uint64_t)v9);
  swift_release();
  return v7;
}

uint64_t sub_190B7FCD0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[2] = a1;
  v2[3] = a2;
  sub_190BE49E8();
  v3 = (_QWORD *)swift_task_alloc();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_190B7FD40;
  return sub_190BE49F4();
}

uint64_t sub_190B7FD40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B7FD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(uint64_t **)(v0 + 16);
  sub_190B7FDD8(v1);
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B7FDD8(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  int EnumTagSinglePayload;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  sub_190AAC38C(0, (unint64_t *)&qword_1ED034960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v14 - v4;
  v6 = sub_190BE5510();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  v7[5] = v1;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6);
  swift_retain();
  v9 = v1;
  if (EnumTagSinglePayload == 1)
  {
    sub_190B823D4((uint64_t)v5, (unint64_t *)&qword_1ED034960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_190BE5504();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_190BE5474();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  if (v11 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

void sub_190B7FFA8(uint64_t *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  double v19;
  CLLocationDegrees v20;
  id v21;
  double v22;
  CLLocationDegrees v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = sub_190BE497C();
  v5 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = *a1;
  if (a2 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v12 = sub_190BE5EAC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v13 = MEMORY[0x1E0DEE9D8];
  if (!v12)
  {
LABEL_13:
    v26 = sub_190BE5510();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v26);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = v13;
    v27[5] = v11;
    swift_retain();
    sub_190B219C4((uint64_t)v10, (uint64_t)&unk_1EE200230, (uint64_t)v27);
    swift_release();
    return;
  }
  v34 = MEMORY[0x1E0DEE9D8];
  sub_190B3BDAC(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v32 = v12;
    v28 = v11;
    v29 = v10;
    v14 = 0;
    v30 = v2;
    v31 = a2 & 0xC000000000000001;
    v13 = v34;
    v15 = a2;
    do
    {
      if (v31)
        v16 = (id)MEMORY[0x194015F20](v14, a2);
      else
        v16 = *(id *)(a2 + 8 * v14 + 32);
      v17 = v16;
      v18 = objc_msgSend(v16, sel_location, v28, v29, v30);
      objc_msgSend(v18, sel_latitude);
      v20 = v19;

      v21 = objc_msgSend(v17, sel_location);
      objc_msgSend(v21, sel_longitude);
      v23 = v22;

      CLLocationCoordinate2DMake(v20, v23);
      sub_190BE4970();

      v34 = v13;
      v25 = *(_QWORD *)(v13 + 16);
      v24 = *(_QWORD *)(v13 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_190B3BDAC(v24 > 1, v25 + 1, 1);
        v13 = v34;
      }
      ++v14;
      *(_QWORD *)(v13 + 16) = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v25, v7, v33);
      a2 = v15;
    }
    while (v32 != v14);
    v10 = v29;
    v11 = v28;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_190B80284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  return swift_task_switch();
}

uint64_t sub_190B8029C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 72) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = sub_190BE497C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF0C8];
  *(_QWORD *)(v0 + 80) = v3;
  v5 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v0 + 88) = v5;
  v6 = *(_DWORD *)(v5 + 80);
  *(_DWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v5 + 72);
  *(_QWORD *)(v0 + 104) = 0;
  v7 = v1 + ((v6 + 32) & ~(unint64_t)v6);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  *(_QWORD *)(v0 + 40) = v3;
  sub_190ADCAB4(&qword_1EE200238, v4, MEMORY[0x1E0DEF0C0]);
  *(_QWORD *)(v0 + 48) = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v7, v3);
  sub_190BE49E8();
  sub_190ADCAB4(&qword_1EE200240, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF120], MEMORY[0x1E0DEF130]);
  OUTLINED_FUNCTION_63_7();
  return swift_task_switch();
}

uint64_t sub_190B803D4()
{
  uint64_t v0;

  sub_190BE4988();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_4_1();
}

uint64_t sub_190B8042C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;

  v1 = *(_QWORD *)(v0 + 104) + 1;
  if (v1 == *(_QWORD *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_14_26(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v1;
    v3 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 56)
       + ((*(unsigned __int8 *)(v0 + 112) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 112))
       + *(_QWORD *)(v0 + 96) * v1;
    *(_QWORD *)(v0 + 40) = v4;
    sub_190ADCAB4(&qword_1EE200238, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF0C8], MEMORY[0x1E0DEF0C0]);
    *(_QWORD *)(v0 + 48) = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v3 + 16))(boxed_opaque_existential_0, v5, v4);
    sub_190BE49E8();
    sub_190ADCAB4(&qword_1EE200240, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF120], MEMORY[0x1E0DEF130]);
    OUTLINED_FUNCTION_63_7();
    return swift_task_switch();
  }
}

uint64_t sub_190B80530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v5[15] = a4;
  v5[16] = a5;
  v6 = sub_190BE49AC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF0F0];
  v5[17] = v6;
  v5[18] = *(_QWORD *)(v6 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  sub_190AAC38C(0, &qword_1EE200290, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5[24] = swift_task_alloc();
  v8 = sub_190BE49D0();
  v5[25] = v8;
  v5[26] = *(_QWORD *)(v8 - 8);
  v5[27] = swift_task_alloc();
  v9 = sub_190BE49C4();
  v5[28] = v9;
  v5[29] = *(_QWORD *)(v9 - 8);
  v5[30] = swift_task_alloc();
  sub_190BE49E8();
  sub_190ADCAB4(&qword_1EE200240, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF120], MEMORY[0x1E0DEF130]);
  sub_190BE5474();
  return swift_task_switch();
}

uint64_t sub_190B80698()
{
  sub_190BE49DC();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B806CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[26];
  v1 = v0[27];
  v3 = v0[25];
  sub_190BE49B8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_190ADCAB4(&qword_1EE200298, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF100], MEMORY[0x1E0DEF108]);
  v0[31] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[32] = v5;
  *v5 = v0;
  v5[1] = sub_190B80774;
  return sub_190BE54E0();
}

uint64_t sub_190B80774()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_81_4(&v4);
  if (v0)
    *(_QWORD *)(v2 + 264) = v0;
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_4_1();
}

uint64_t sub_190B807C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int16 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unsigned __int16 v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 136);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    OUTLINED_FUNCTION_32_4(*(_QWORD *)(v0 + 232));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 184), v1, v2);
    if (sub_190BE49A0() == 2)
    {
      if (qword_1EE1FE300 != -1)
        swift_once();
      v5 = *(_QWORD *)(v0 + 152);
      v4 = *(_QWORD *)(v0 + 160);
      v6 = OUTLINED_FUNCTION_96();
      __swift_project_value_buffer(v6, (uint64_t)qword_1EE2009D8);
      OUTLINED_FUNCTION_22_18(v4);
      OUTLINED_FUNCTION_22_18(v5);
      v7 = sub_190BE4A0C();
      v8 = sub_190BE58AC();
      v9 = OUTLINED_FUNCTION_68_5(v7);
      v11 = *(_QWORD *)(v0 + 152);
      v10 = *(_QWORD *)(v0 + 160);
      if (v9)
      {
        v12 = OUTLINED_FUNCTION_20_1();
        *(_QWORD *)(v0 + 112) = OUTLINED_FUNCTION_20_1();
        *(_DWORD *)v12 = 136446466;
        v13 = sub_190BE4994();
        sub_190ACE890(v13, v14, (uint64_t *)(v0 + 112));
        *(_QWORD *)(v12 + 4) = v15;
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_43_8(v10);
        *(_WORD *)(v12 + 12) = 2082;
        sub_190BE49A0();
        OUTLINED_FUNCTION_4_34();
        v23 = v22 | 0x6673697461730000;
        if (v24)
          v17 = 0xEB00000000646569;
        else
          v23 = 0x6E776F6E6B6E55;
        if (v16 == 3)
          v17 = v21;
        else
          v20 = v23;
        v24 = v16 == 1;
        if (v16 == 1)
          v25 = v18;
        else
          v25 = v20;
        if (v24)
          v26 = v19;
        else
          v26 = v17;
        v27 = *(_QWORD *)(v0 + 152);
        sub_190ACE890(v25, v26, (uint64_t *)(v0 + 112));
        *(_QWORD *)(v12 + 14) = v28;
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_43_8(v27);
        _os_log_impl(&dword_190AA0000, v7, v8, "processing region event, id=%{public}s, state=%{public}s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_12_0();
      }
      v56 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 8);
      OUTLINED_FUNCTION_43_8(*(_QWORD *)(v0 + 160));
      OUTLINED_FUNCTION_43_8(v11);

      sub_190BE4994();
      v57 = OUTLINED_FUNCTION_28_17();
      OUTLINED_FUNCTION_62();
      if ((v57 & 1) != 0)
      {
        *(_OWORD *)(v0 + 56) = xmmword_190BE9C10;
        *(_QWORD *)(v0 + 80) = 0;
        *(_QWORD *)(v0 + 88) = 0;
        *(_QWORD *)(v0 + 72) = 0;
        sub_190B7C2E0(v0 + 56);
        swift_release();
      }
      sub_190BE4994();
      v58 = OUTLINED_FUNCTION_28_17();
      OUTLINED_FUNCTION_62();
      v59 = *(_QWORD *)(v0 + 184);
      v60 = *(_QWORD *)(v0 + 136);
      if ((v58 & 1) != 0)
      {
        *(_OWORD *)(v0 + 16) = xmmword_190BED810;
        *(_QWORD *)(v0 + 40) = 0;
        *(_QWORD *)(v0 + 48) = 0;
        *(_QWORD *)(v0 + 32) = 0;
        sub_190B7C2E0(v0 + 16);
        swift_release();
      }
      v56(v59, v60);
    }
    else
    {
      if (qword_1EE1FE300 != -1)
        swift_once();
      v29 = *(_QWORD *)(v0 + 176);
      v30 = *(_QWORD *)(v0 + 168);
      v31 = OUTLINED_FUNCTION_96();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EE2009D8);
      OUTLINED_FUNCTION_22_18(v29);
      OUTLINED_FUNCTION_22_18(v30);
      v32 = sub_190BE4A0C();
      v33 = sub_190BE58AC();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = *(_QWORD *)(v0 + 176);
        v36 = *(_QWORD *)(v0 + 136);
        v35 = *(_QWORD *)(v0 + 144);
        v37 = OUTLINED_FUNCTION_20_1();
        *(_QWORD *)(v0 + 104) = OUTLINED_FUNCTION_20_1();
        *(_DWORD *)v37 = 136446466;
        v38 = sub_190BE4994();
        sub_190ACE890(v38, v39, (uint64_t *)(v0 + 104));
        *(_QWORD *)(v37 + 4) = v40;
        swift_bridgeObjectRelease();
        v41 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v41(v34, v36);
        *(_WORD *)(v37 + 12) = 2082;
        sub_190BE49A0();
        OUTLINED_FUNCTION_4_34();
        v49 = v48 | 0x6673697461730000;
        if (v24)
          v43 = 0xEB00000000646569;
        else
          v49 = 0x6E776F6E6B6E55;
        if (v42 == 3)
          v43 = v47;
        else
          v46 = v49;
        v50 = v42 == 1;
        if (v42 == 1)
          v51 = v44;
        else
          v51 = v46;
        if (v50)
          v52 = v45;
        else
          v52 = v43;
        v53 = *(_QWORD *)(v0 + 168);
        v54 = *(_QWORD *)(v0 + 136);
        sub_190ACE890(v51, v52, (uint64_t *)(v0 + 104));
        *(_QWORD *)(v37 + 14) = v55;
        swift_bridgeObjectRelease();
        v41(v53, v54);
        _os_log_impl(&dword_190AA0000, v32, v33, "ignoring region event, id=%{public}s, state=%{public}s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_12_0();
      }
      v62 = *(_QWORD *)(v0 + 176);
      v61 = *(_QWORD *)(v0 + 184);
      v63 = *(_QWORD *)(v0 + 168);

      OUTLINED_FUNCTION_61_4(v63);
      OUTLINED_FUNCTION_61_4(v62);
      OUTLINED_FUNCTION_61_4(v61);
    }
    v64 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v64;
    *v64 = v0;
    v64[1] = sub_190B80E70;
    return sub_190BE54E0();
  }
}

uint64_t sub_190B80D70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = *(_QWORD *)(v1 + 264);
  OUTLINED_FUNCTION_64_6(a1, (unint64_t *)&qword_1ED034920);
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B80DCC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B80E70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_81_4(&v4);
  if (v0)
    *(_QWORD *)(v2 + 264) = v0;
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_4_1();
}

uint64_t CLMonitoringState.readableString.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = 0x6E776F6E6B6E55;
  if (a1 == 2)
    v1 = 0x6673697461736E55;
  if (a1 == 3)
    v1 = 0x6F74696E6F6D6E55;
  if (a1 == 1)
    return 0x6569667369746153;
  else
    return v1;
}

id BackgroundFetchManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_105();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall BackgroundFetchManager.locationManager(_:didStartMonitoringFor:)(CLLocationManager _, CLRegion didStartMonitoringFor)
{
  void *v2;
  id v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;

  v3 = OUTLINED_FUNCTION_66_3();
  OUTLINED_FUNCTION_55_3();

  OUTLINED_FUNCTION_62_5();
  v4 = sub_190BE5174();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    if (qword_1EE1FE300 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EE2009D8);
    v6 = OUTLINED_FUNCTION_56_5();
    v7 = sub_190BE58AC();
    if (OUTLINED_FUNCTION_68_5(v6))
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      *(_WORD *)v8 = 0;
      OUTLINED_FUNCTION_78_3(&dword_190AA0000, v6, v7, "successfully setup monitoring for Home region", v8);
      OUTLINED_FUNCTION_12_0();
    }

  }
  v9 = OUTLINED_FUNCTION_66_3();
  sub_190BE5000();

  OUTLINED_FUNCTION_62_5();
  LOBYTE(v9) = sub_190BE5174();
  OUTLINED_FUNCTION_16();
  if ((v9 & 1) != 0)
  {
    if (qword_1EE1FE300 != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE2009D8);
    oslog = OUTLINED_FUNCTION_56_5();
    v11 = sub_190BE58AC();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      *(_WORD *)v12 = 0;
      OUTLINED_FUNCTION_78_3(&dword_190AA0000, oslog, v11, "successfully setup monitoring for Work region", v12);
      OUTLINED_FUNCTION_12_0();
    }

  }
}

void BackgroundFetchManager.locationManager(_:monitoringDidFailFor:withError:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if (a2)
  {
    v5 = a2;
    v6 = objc_msgSend(v5, sel_identifier);
    OUTLINED_FUNCTION_55_3();
    OUTLINED_FUNCTION_82_4();
    OUTLINED_FUNCTION_20_16();
    OUTLINED_FUNCTION_65_5();
    if ((v2 & 1) != 0)
    {
      if (qword_1EE1FE300 != -1)
        swift_once();
      v7 = OUTLINED_FUNCTION_96();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EE2009D8);
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_43();
      v2 = sub_190BE4A0C();
      v8 = sub_190BE5894();
      if (OUTLINED_FUNCTION_45_9(v8))
      {
        v9 = (uint8_t *)OUTLINED_FUNCTION_20_1();
        v10 = (_QWORD *)OUTLINED_FUNCTION_20_1();
        *(_DWORD *)v9 = 138543362;
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_73_2();
        OUTLINED_FUNCTION_36_8();
        sub_190BE5A2C();
        *v10 = v4;
        OUTLINED_FUNCTION_38_10();
        OUTLINED_FUNCTION_38_10();
        OUTLINED_FUNCTION_50(&dword_190AA0000, v2, v3, "failed to setup monitoring for Home region with error: %{public}@", v9);
        OUTLINED_FUNCTION_94();
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_12_0();
      }
      OUTLINED_FUNCTION_38_10();
      OUTLINED_FUNCTION_38_10();

      OUTLINED_FUNCTION_26_13((__n128)xmmword_190BE9C10, v15, v16, v17, v18, v19, v20, v21, v22, v39, (uint64_t)v40, v23, v42, v44, v45);
      swift_release();
    }
    v24 = objc_msgSend(v5, sel_identifier);
    OUTLINED_FUNCTION_55_3();
    OUTLINED_FUNCTION_82_4();
    OUTLINED_FUNCTION_20_16();
    OUTLINED_FUNCTION_65_5();
    if ((v2 & 1) != 0)
    {
      if (qword_1EE1FE300 != -1)
        swift_once();
      v25 = OUTLINED_FUNCTION_96();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EE2009D8);
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_43();
      v26 = sub_190BE4A0C();
      v27 = sub_190BE5894();
      if (OUTLINED_FUNCTION_45_9(v27))
      {
        v28 = (uint8_t *)OUTLINED_FUNCTION_20_1();
        v29 = (_QWORD *)OUTLINED_FUNCTION_20_1();
        *(_DWORD *)v28 = 138543362;
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_73_2();
        OUTLINED_FUNCTION_36_8();
        sub_190BE5A2C();
        *v29 = v4;
        OUTLINED_FUNCTION_38_10();
        OUTLINED_FUNCTION_38_10();
        OUTLINED_FUNCTION_50(&dword_190AA0000, v26, v3, "failed to setup monitoring for Work region with error: %{public}@", v28);
        OUTLINED_FUNCTION_94();
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_12_0();
      }
      OUTLINED_FUNCTION_38_10();
      OUTLINED_FUNCTION_38_10();

      OUTLINED_FUNCTION_26_13((__n128)xmmword_190BED810, v30, v31, v32, v33, v34, v35, v36, v37, v39, (uint64_t)v40, v38, v42, v44, v45);
      OUTLINED_FUNCTION_5_0();
    }
    else
    {

    }
  }
  else
  {
    if (qword_1EE1FE300 != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EE2009D8);
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_43();
    v41 = sub_190BE4A0C();
    v12 = sub_190BE5894();
    if (OUTLINED_FUNCTION_68_5(v41))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_20_1();
      v14 = (_QWORD *)OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v13 = 138543362;
      OUTLINED_FUNCTION_43();
      v43 = OUTLINED_FUNCTION_73_2();
      sub_190BE5A2C();
      *v14 = v43;
      OUTLINED_FUNCTION_38_10();
      OUTLINED_FUNCTION_38_10();
      OUTLINED_FUNCTION_50(&dword_190AA0000, v41, v12, "failed to setup monitoring for unknown region with error: %{public}@", v13);
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_12_0();
    }
    OUTLINED_FUNCTION_38_10();
    OUTLINED_FUNCTION_38_10();

  }
}

uint64_t sub_190B816F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_190B8171C()
{
  sub_190B816F8();
  return swift_deallocClassInstance();
}

void sub_190B8173C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _BYTE v3[40];

  sub_190B5A5D4(a1, (uint64_t)v3);
  sub_190B04EB8(a2);
}

void sub_190B81778(uint64_t a1)
{
  _BYTE v1[40];

  sub_190B5A5D4(a1, (uint64_t)v1);
  sub_190B7C050((uint64_t)v1);
}

uint64_t sub_190B817B0()
{
  uint64_t v0;

  sub_190AA2860(v0 + 16);
  sub_190AA2860(v0 + 32);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_190B817DC()
{
  sub_190B817B0();
  return swift_deallocClassInstance();
}

_QWORD *sub_190B817F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10[6];

  v1 = v0;
  v0[3] = 0;
  v0[2] = 0;
  v2 = v0 + 2;
  *(_QWORD *)v10 = 0;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  UnfairLock.init(options:)(v10);
  v0[4] = v3;
  *(_QWORD *)v10 = 0;
  swift_allocObject();
  UnfairLock.init(options:)(v10);
  v5 = v4;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  sub_190AC5F10(0, &qword_1ED031D10, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Promise);
  v6 = swift_allocObject();
  sub_190AC5F10(0, &qword_1ED031E00, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Seal);
  swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_190AC8364(v5);
  sub_190AC5F10(0, (unint64_t *)&unk_1EE2002B0, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for PromiseWeakResolver);
  swift_allocObject();
  swift_unownedRetain();
  swift_retain();
  swift_retain();
  sub_190B2EFE0();
  v8 = v7;
  swift_unownedRetainStrong();
  v1[3] = v8;
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v2 = v6;
  swift_release();
  return v1;
}

void sub_190B819B4()
{
  sub_190B7B2D0();
}

uint64_t type metadata accessor for BlockBasedBackgroundFetchWorker()
{
  return objc_opt_self();
}

unint64_t sub_190B819E0()
{
  unint64_t result;

  result = qword_1EE200160;
  if (!qword_1EE200160)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for BackgroundFetchResult, &type metadata for BackgroundFetchResult);
    atomic_store(result, (unint64_t *)&qword_1EE200160);
  }
  return result;
}

unint64_t sub_190B81A20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE200168;
  if (!qword_1EE200168)
  {
    sub_190AC5F10(255, (unint64_t *)&unk_1EE200170, (uint64_t)&type metadata for BackgroundFetchTrigger, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE200168);
  }
  return result;
}

unint64_t sub_190B81A7C()
{
  unint64_t result;

  result = qword_1EE200180;
  if (!qword_1EE200180)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for BackgroundFetchConditions, &type metadata for BackgroundFetchConditions);
    atomic_store(result, (unint64_t *)&qword_1EE200180);
  }
  return result;
}

unint64_t sub_190B81ABC()
{
  unint64_t result;

  result = qword_1EE200188;
  if (!qword_1EE200188)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for BackgroundFetchConditions, &type metadata for BackgroundFetchConditions);
    atomic_store(result, (unint64_t *)&qword_1EE200188);
  }
  return result;
}

unint64_t sub_190B81AFC()
{
  unint64_t result;

  result = qword_1EE1FE3B0;
  if (!qword_1EE1FE3B0)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for BackgroundFetchConditions, &type metadata for BackgroundFetchConditions);
    atomic_store(result, (unint64_t *)&qword_1EE1FE3B0);
  }
  return result;
}

unint64_t sub_190B81B3C()
{
  unint64_t result;

  result = qword_1EE1FE3B8[0];
  if (!qword_1EE1FE3B8[0])
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for BackgroundFetchConditions, &type metadata for BackgroundFetchConditions);
    atomic_store(result, qword_1EE1FE3B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BackgroundFetchResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190B81BC4 + 4 * byte_190BED825[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190B81BF8 + 4 * byte_190BED820[v4]))();
}

uint64_t sub_190B81BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B81C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B81C08);
  return result;
}

uint64_t sub_190B81C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B81C1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190B81C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B81C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t initializeWithCopy for BackgroundFetchTrigger(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
  }
  return a1;
}

_QWORD *assignWithCopy for BackgroundFetchTrigger(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v6 = a2[4];
      a1[3] = a2[3];
      a1[4] = v6;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_retain();
      return a1;
    }
LABEL_7:
    v7 = *(_OWORD *)a2;
    v8 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v7;
    *((_OWORD *)a1 + 1) = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BackgroundFetchTrigger(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundFetchTrigger(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BackgroundFetchTrigger(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

double sub_190B81ED4(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for BackgroundFetchTrigger()
{
  OUTLINED_FUNCTION_23();
}

void type metadata accessor for BackgroundFetchConditions()
{
  OUTLINED_FUNCTION_23();
}

uint64_t dispatch thunk of BackgroundFetchWorker.backgroundFetchTriggers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BackgroundFetchWorker.backgroundFetchPreconditions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BackgroundFetchWorker.performBackgroundFetch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BackgroundFetchWorker.performBackgroundFetch(trigger:conditions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t method lookup function for BackgroundFetchManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BackgroundFetchManager.__allocating_init(journal:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_190B81F4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_208();

  return swift_deallocObject();
}

uint64_t sub_190B81F78()
{
  uint64_t v0;

  return sub_190B7EDE0(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_190B81F88()
{
  OUTLINED_FUNCTION_83();
  return swift_deallocObject();
}

uint64_t sub_190B81FA8()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

uint64_t sub_190B81FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_190BE47E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_208();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190B82040(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_190BE47E4() - 8) + 80);
  return sub_190B7F3A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3));
}

void sub_190B82088(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4]);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B820B8()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_190B82104(void *a1)
{
  uint64_t *v1;

  sub_190B7E298(a1, v1[2], (uint64_t)(v1 + 3), v1[8], v1[9], v1[10], v1[11], v1[12]);
}

uint64_t sub_190B8211C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

void sub_190B82138(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_190B7DF08(a1, a2, *(_QWORD *)(v2 + 16), "failed to fetch Work location with error: %{public}@", "found %ld Work locations to monitor", "found no Work locations to monitor");
}

void sub_190B82168(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_190B7DF08(a1, a2, *(_QWORD *)(v2 + 16), "failed to fetch Home location with error: %{public}@", "found %ld Home locations to monitor", "found no Home locations to monitor");
}

uint64_t sub_190B82198()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

void sub_190B821B4(uint64_t *a1)
{
  uint64_t v1;

  sub_190B7FFA8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_190B821CC()
{
  OUTLINED_FUNCTION_67_3();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

uint64_t sub_190B821F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  v2 = OUTLINED_FUNCTION_25_19(v1);
  return sub_190B80284(v2, v3, v4, v5, v6);
}

uint64_t sub_190B82250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_27_0(v5);
  *v6 = v2;
  v6[1] = sub_190B280BC;
  return sub_190B7FCD0(a1, v4);
}

uint64_t sub_190B822A4()
{
  OUTLINED_FUNCTION_67_3();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B822D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_27_0(v9);
  *v10 = v2;
  v10[1] = sub_190B51C34;
  return sub_190B7AEC0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_190B82350()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_3();
  swift_release();

  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

uint64_t sub_190B82378()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_27_0(v0);
  v2 = OUTLINED_FUNCTION_25_19(v1);
  return sub_190B80530(v2, v3, v4, v5, v6);
}

void sub_190B823D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  sub_190AAC38C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_32_4(*(_QWORD *)(v3 - 8));
  OUTLINED_FUNCTION_0();
}

id sub_190B8240C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setTaskCompletedWithSuccess_, 1);
}

id sub_190B82440()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setTaskCompletedWithSuccess_, 0);
}

uint64_t sub_190B82454()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B82488()
{
  uint64_t v0;

  return sub_190B7E4AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(uint64_t))(v0 + 48));
}

void sub_190B82498(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED031E10)
  {
    sub_190AC5F10(255, &qword_1ED031E30, (uint64_t)&type metadata for BackgroundFetchResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = type metadata accessor for Promise(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED031E10);
  }
}

void sub_190B8250C()
{
  sub_190B819B4();
}

uint64_t sub_190B82514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_190B7B590(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_190B82520()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_208();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

void sub_190B8253C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
    atomic_store(swift_getExistentialTypeMetadata(), a2);
  OUTLINED_FUNCTION_10_6();
}

uint64_t dispatch thunk of URLRequestProcessor.process(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void ProxyResolver.resolve<A>(_:name:with:)()
{
  __int128 v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_14_27();
  toKey<A>(type:name:)();
  v0 = v2;
  v1 = v3;
  OUTLINED_FUNCTION_1_59((uint64_t *)&v0, (uint64_t)&v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_62_0();
}

void sub_190B82604()
{
  ProxyResolver.resolve<A>(_:name:with:)();
}

uint64_t method lookup function for ProxyResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_190B82630(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v9 + 16))(v6);
  a1(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_190B826D0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B826FC()
{
  uint64_t v0;

  return sub_190B82630(*(void (**)(char *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t method lookup function for Accessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Accessor.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_190B8271C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return 0;
  v7 = 0;
  v8 = *(_QWORD *)(type metadata accessor for ManualClock.WakeUp() - 8);
  v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v10 = *(_QWORD *)(v8 + 72);
  while (1)
  {
    v11 = a1(v9);
    if (v3 || (v11 & 1) != 0)
      break;
    ++v7;
    v9 += v10;
    if (v4 == v7)
      return 0;
  }
  return v7;
}

void ManualClock.init()(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = _s13TeaFoundation11ManualClockV17minimumResolutions8DurationVvg_0();
  v4 = v3;
  sub_190B838D0();
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)(v5 + 48) = v6;
  *a1 = v5;
  OUTLINED_FUNCTION_4();
}

void ManualClock.advance(by:)(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s **v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = type metadata accessor for ManualClock.WakeUp();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v10 = (uint64_t *)&(*v2)[4];
  v11 = v9 + 14;
  os_unfair_lock_lock(v9 + 14);
  sub_190B82960(v10, a1, a2, &v16);
  os_unfair_lock_unlock(v11);
  sub_190B82D0C(&v16);
  v12 = *(_QWORD *)(v16 + 16);
  if (v12)
  {
    v13 = v16 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v14 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_190B83964(v13, (uint64_t)v8);
      sub_190B839A8((uint64_t)v8);
      swift_continuation_throwingResume();
      v13 += v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_190B82960@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28 = a4;
  sub_190B1D6DC(0, &qword_1EE200338, (uint64_t (*)(uint64_t))type metadata accessor for ManualClock.WakeUp, MEMORY[0x1E0DEC628]);
  MEMORY[0x1E0C80A78](v7);
  v32 = (uint64_t)&v27 - v8;
  v34 = type metadata accessor for ManualClock.WakeUp();
  v9 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x194016628](*a1, a1[1], a2, a3);
  *a1 = result;
  a1[1] = v13;
  v14 = *(_QWORD *)(a1[2] + 16);
  if (v14)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    v30 = v9;
    v31 = a1;
    v29 = v11;
    while (1)
    {
      v16 = a1[2];
      if (v14 > *(_QWORD *)(v16 + 16))
        break;
      v17 = v14 - 1;
      v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v19 = *(_QWORD *)(v9 + 72);
      v33 = v19 * (v14 - 1);
      sub_190B83964(v16 + v18 + v33, (uint64_t)v11);
      if ((sub_190BE6380() & 1) == 0)
      {
        sub_190B83964((uint64_t)v11, v32);
        v20 = *(_QWORD *)(v15 + 16);
        if (!swift_isUniquelyReferenced_nonNull_native() || v20 >= *(_QWORD *)(v15 + 24) >> 1)
          v15 = sub_190B127B0();
        result = swift_arrayDestroy();
        if (v19 < 0 || v19 >= *(_QWORD *)(v15 + 16) * v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v19)
        {
          result = swift_arrayInitWithTakeBackToFront();
        }
        ++*(_QWORD *)(v15 + 16);
        if (v19 >= 1)
        {
          v21 = 0;
          v22 = v15 + v18;
          while ((v21 & 1) == 0)
          {
            result = sub_190B83964(v32, v22);
            v22 += v19;
            v21 = 1;
            if (v22 - v19 >= v15 + v18)
              goto LABEL_17;
          }
          goto LABEL_34;
        }
LABEL_17:
        sub_190B882CC(v32, &qword_1EE200338, (uint64_t (*)(uint64_t))type metadata accessor for ManualClock.WakeUp, MEMORY[0x1E0DEC628]);
        result = swift_isUniquelyReferenced_nonNull_native();
        a1 = v31;
        v31[2] = v16;
        if ((result & 1) == 0)
        {
          result = sub_190B4077C();
          v16 = result;
          a1[2] = result;
        }
        v23 = *(_QWORD *)(v16 + 16);
        if (v14 > v23)
          goto LABEL_33;
        v24 = v23 - 1;
        v25 = v16 + v18 + v33;
        sub_190B839A8(v25);
        if (v24 - v17 < 0)
        {
          result = sub_190BE5EDC();
          __break(1u);
          return result;
        }
        v26 = v19 > 0 || v25 >= v25 + v19 + (v24 - v17) * v19;
        v11 = v29;
        if (v26)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v19)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(_QWORD *)(v16 + 16) = v24;
        a1[2] = v16;
        v9 = v30;
      }
      result = sub_190B839A8((uint64_t)v11);
      v14 = v17;
      if (!v17)
        goto LABEL_36;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  v15 = MEMORY[0x1E0DEE9D8];
LABEL_36:
  *v28 = v15;
  return result;
}

uint64_t ManualClock.Instant.advanced(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t result;
  uint64_t v6;

  result = MEMORY[0x194016628](*v3, v3[1], a1, a2);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t static ManualClock.Instant.< infix(_:_:)()
{
  return sub_190BE6380();
}

void sub_190B82D0C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for ManualClock.WakeUp() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_190B4077C();
  v4 = *(_QWORD *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_190B871D0(v5);
  *a1 = v3;
}

uint64_t static ManualClock.Instant.initial.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s13TeaFoundation11ManualClockV17minimumResolutions8DurationVvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void ManualClock.Instant.duration(to:)()
{
  JUMPOUT(0x194016634);
}

uint64_t ManualClock.Instant.hash(into:)()
{
  return sub_190BE63B0();
}

uint64_t static ManualClock.Instant.== infix(_:_:)()
{
  return sub_190BE63A4();
}

uint64_t ManualClock.Instant.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE63B0();
  return OUTLINED_FUNCTION_32_0();
}

uint64_t sub_190B82E24@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return ManualClock.Instant.advanced(by:)(*a1, a1[1], a2);
}

void sub_190B82E30()
{
  ManualClock.Instant.duration(to:)();
}

uint64_t sub_190B82E44(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

BOOL sub_190B82E58()
{
  return sub_190BDC918();
}

BOOL sub_190B82E6C()
{
  return sub_190BBECB8();
}

uint64_t sub_190B82E80()
{
  return sub_190BBED2C();
}

uint64_t sub_190B82E9C()
{
  sub_190BE62FC();
  sub_190BE63B0();
  return sub_190BE6314();
}

void ManualClock.now.getter(_OWORD *a1@<X8>)
{
  os_unfair_lock_s **v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v3 = *v1;
  v4 = *v1 + 14;
  os_unfair_lock_lock(v4);
  *a1 = *(_OWORD *)&v3[4]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v4);
}

uint64_t ManualClock.sleep(until:tolerance:)()
{
  _OWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_60_8();
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 32) = swift_task_alloc();
  *(_OWORD *)(v2 + 40) = *v0;
  *(_QWORD *)(v2 + 56) = *v1;
  return swift_task_switch();
}

uint64_t sub_190B82F90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[6];
  v2 = v0[7];
  v3 = v0[4];
  v4 = v0[5];
  sub_190BE4814();
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  v5[2] = v3;
  v5[3] = v4;
  v5[4] = v1;
  v5[5] = v2;
  v6 = swift_task_alloc();
  v0[9] = v6;
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v3;
  v7 = (_QWORD *)swift_task_alloc();
  v0[10] = v7;
  *v7 = v0;
  v7[1] = sub_190B83050;
  return sub_190BE60C8();
}

uint64_t sub_190B83050()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190B830D0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_22();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B83100()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_22();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B83130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  return swift_task_switch();
}

uint64_t sub_190B8314C()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[12];
  v1 = (os_unfair_lock_s *)v0[13];
  v4 = v0[10];
  v3 = v0[11];
  v0[2] = v0;
  v0[3] = sub_190B5308C;
  v5 = swift_continuation_init();
  sub_190B831BC(v5, v4, v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_190B831BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, os_unfair_lock_s *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v18;
  char v19;

  v10 = type metadata accessor for ManualClock.WakeUp();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190BE4820();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a2, v13);
  v14 = (uint64_t *)&v12[*(int *)(v10 + 20)];
  *v14 = a3;
  v14[1] = a4;
  *(_QWORD *)&v12[*(int *)(v10 + 24)] = a1;
  os_unfair_lock_lock(a5 + 14);
  sub_190B83348((uint64_t)&a5[4], a2, a3, a4, (uint64_t)v12, &v19);
  os_unfair_lock_unlock(a5 + 14);
  if (v19)
  {
    if (v19 != 1)
    {
      sub_190BE54A4();
      sub_190ADCAB4((unint64_t *)&qword_1EE1FFD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
      v15 = swift_allocError();
      sub_190BE4D84();
      sub_190ABC730();
      swift_allocError();
      *v16 = v15;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return sub_190B839A8((uint64_t)v12);
}

void sub_190B83348(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t (*v9)(uint64_t);
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v21[4];

  v21[0] = a5;
  v21[1] = a3;
  v21[3] = a4;
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_190B1D6DC(0, &qword_1EE200330, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v21 - v12;
  sub_190B8807C(a2, (uint64_t)v21 - v12);
  v14 = sub_190BE4820();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  sub_190B882CC((uint64_t)v13, &qword_1EE200330, v9, v10);
  if (EnumTagSinglePayload == 1)
  {
    v16 = v21[0];
    if ((sub_190BE6380() & 1) != 0)
    {
      sub_190B0BFAC();
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
      sub_190B0C27C(v17);
      v18 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(v18 + 16) = v17 + 1;
      v19 = type metadata accessor for ManualClock.WakeUp();
      sub_190B83964(v16, v18+ ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17);
      *(_QWORD *)(a1 + 16) = v18;
      v20 = 1;
    }
    else
    {
      v20 = 0;
    }
  }
  else
  {
    v20 = 2;
  }
  *a6 = v20;
}

uint64_t sub_190B834C0(os_unfair_lock_s *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;

  result = sub_190B83570(a2, a1);
  if (result)
  {
    sub_190BE54A4();
    sub_190ADCAB4((unint64_t *)&qword_1EE1FFD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
    v3 = swift_allocError();
    sub_190BE4D84();
    sub_190ABC730();
    swift_allocError();
    *v4 = v3;
    return swift_continuation_throwingResumeWithError();
  }
  return result;
}

uint64_t sub_190B83570(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v6;

  v3 = (uint64_t)&a2[4];
  v4 = a2 + 14;
  os_unfair_lock_lock(a2 + 14);
  sub_190B83640(v3, a1, &v6);
  os_unfair_lock_unlock(v4);
  return v6;
}

uint64_t sub_190B835D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ManualClock.minimumResolution.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_190B835F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_190B5106C;
  return ManualClock.sleep(until:tolerance:)();
}

uint64_t sub_190B83640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[16];
  uint64_t v26;
  _QWORD *v27;

  v27 = a3;
  v21 = type metadata accessor for ManualClock.WakeUp();
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190BE4820();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - v12;
  v23 = a2;
  v24 = a1;
  v15 = *(_QWORD *)(a1 + 16);
  v14 = a1 + 16;
  v26 = a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v16 = sub_190B8271C((uint64_t (*)(uint64_t))sub_190B84284, (uint64_t)v25, v15);
  LOBYTE(a2) = v17;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v23, v7);
    sub_190B846C0((uint64_t)v13, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    *v27 = 0;
  }
  else
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(_QWORD *)(*(_QWORD *)v14 + 16))
    {
      v19 = (uint64_t)v22;
      *v27 = *(_QWORD *)(*(_QWORD *)v14
                       + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                       + *(_QWORD *)(v5 + 72) * v16
                       + *(int *)(v21 + 24));
      sub_190B48AA0(v16, v19);
      return sub_190B839A8(v19);
    }
    __break(1u);
  }
  return result;
}

void sub_190B83808(uint64_t a1)
{
  sub_190B841B0(a1);
}

uint64_t sub_190B83814(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_190BE5E4C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      type metadata accessor for ManualClock.WakeUp();
      v2 = sub_190BE5390();
      *(_QWORD *)(v2 + 16) = a1;
    }
    else
    {
      v2 = MEMORY[0x1E0DEE9D8];
    }
    type metadata accessor for ManualClock.WakeUp();
    return v2;
  }
  return result;
}

void sub_190B838D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE2002D0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_190BE5CF0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE2002D0);
  }
}

uint64_t type metadata accessor for ManualClock.WakeUp()
{
  uint64_t result;

  result = qword_1EE200318;
  if (!qword_1EE200318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190B83964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManualClock.WakeUp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B839A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManualClock.WakeUp();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190B839E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_190B5106C;
  return sub_190B83130(a1, v4, v5, v7, v6);
}

uint64_t sub_190B83A5C()
{
  uint64_t v0;

  return sub_190B834C0(*(os_unfair_lock_s **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_190B83A68()
{
  unint64_t result;

  result = qword_1EE2002F0;
  if (!qword_1EE2002F0)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ManualClock.Instant, &type metadata for ManualClock.Instant);
    atomic_store(result, (unint64_t *)&qword_1EE2002F0);
  }
  return result;
}

unint64_t sub_190B83AA8()
{
  unint64_t result;

  result = qword_1EE2002F8;
  if (!qword_1EE2002F8)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ManualClock.Instant, &type metadata for ManualClock.Instant);
    atomic_store(result, (unint64_t *)&qword_1EE2002F8);
  }
  return result;
}

uint64_t sub_190B83AE4()
{
  return MEMORY[0x1E0DEE800];
}

unint64_t sub_190B83AF4()
{
  unint64_t result;

  result = qword_1EE200300;
  if (!qword_1EE200300)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ManualClock.Instant, &type metadata for ManualClock.Instant);
    atomic_store(result, (unint64_t *)&qword_1EE200300);
  }
  return result;
}

unint64_t sub_190B83B34()
{
  unint64_t result;

  result = qword_1EE200308;
  if (!qword_1EE200308)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ManualClock.Instant, &type metadata for ManualClock.Instant);
    atomic_store(result, (unint64_t *)&qword_1EE200308);
  }
  return result;
}

ValueMetadata *type metadata accessor for ManualClock()
{
  return &type metadata for ManualClock;
}

uint64_t getEnumTagSinglePayload for ManualClock.Instant(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ManualClock.Instant(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ManualClock.Instant()
{
  return &type metadata for ManualClock.Instant;
}

uint64_t *sub_190B83BD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190BE4820();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_190B83C68(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190BE4820();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_190B83C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_190BE4820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_190B83D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_190BE4820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_190B83D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_190BE4820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_190B83DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_190BE4820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_190B83E40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190B83E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_60_8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(v3, a2, v6);
  v8 = *(_QWORD *)(v3 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190B83EBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_190B83EC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_190BE4820();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    OUTLINED_FUNCTION_4();
  }
}

uint64_t sub_190B83F34()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE4820();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ManualClock.State()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManualClock.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

_QWORD *assignWithCopy for ManualClock.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ManualClock.State(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManualClock.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManualClock.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManualClock.State()
{
  return &type metadata for ManualClock.State;
}

void sub_190B841A4(uint64_t a1)
{
  sub_190B841B0(a1);
}

void sub_190B841B0(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_24_18();
    OUTLINED_FUNCTION_14_28();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_190BE5390() + 16) = a1;
    OUTLINED_FUNCTION_61();
  }
}

void sub_190B84214(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_24_18();
    OUTLINED_FUNCTION_14_28();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_190B14404();
      *(_QWORD *)(sub_190BE5390() + 16) = a1;
    }
    OUTLINED_FUNCTION_61();
  }
}

uint64_t sub_190B84284()
{
  return sub_190BE47FC() & 1;
}

uint64_t sub_190B842B4()
{
  return sub_190ACCC00();
}

uint64_t sub_190B842D0(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  v5 = *v2;
  v6 = sub_190BE62F0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_61_5();
    OUTLINED_FUNCTION_20_17();
    sub_190B85978(a2, v8, v13);
    OUTLINED_FUNCTION_21_17(v14);
    result = 1;
    goto LABEL_8;
  }
  if (*(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v8) != a2)
  {
    v9 = ~v7;
    do
    {
      v8 = (v8 + 1) & v9;
      OUTLINED_FUNCTION_63_8();
      if ((v11 & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v8) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_190B8439C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_72();
  v34 = v1;
  v35 = v2;
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v8 = sub_190BE4628();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v3;
  sub_190ADCAB4((unint64_t *)&qword_1ED032FE0, v13, MEMORY[0x1E0CB0018]);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v32 = v5;
  sub_190BE4EEC();
  OUTLINED_FUNCTION_49_7();
  v16 = v15 & ~v14;
  v17 = v12;
  v18 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v28 = v3;
    v29 = v7;
    v30 = ~v14;
    v31 = v9;
    v19 = *(_QWORD *)(v9 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v9 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v11, *(_QWORD *)(v17 + 48) + v19 * v16, v8);
      sub_190ADCAB4(&qword_1ED02EFA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v23 = sub_190BE4FD0();
      v24 = *(void (**)(char *, uint64_t))(v31 + 8);
      v24(v11, v8);
      if ((v23 & 1) != 0)
        break;
      v16 = (v16 + 1) & v30;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v28;
        v7 = v29;
        v25 = v31;
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_35();
    v24(v32, v8);
    v22(v29, *(_QWORD *)(*v28 + 48) + v19 * v16, v8);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v9 + 16);
    v25 = v9;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20(v11, v32, v8);
    v33 = *v3;
    *v3 = 0x8000000000000000;
    sub_190B85A98((uint64_t)v11, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v33;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_13(v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
    return 1;
  }
}

uint64_t sub_190B845E0(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;

  v5 = *v2;
  sub_190BE62FC();
  sub_190BE6308();
  v6 = OUTLINED_FUNCTION_32_0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v5 + 48);
    while (*(_QWORD *)(v10 + 8 * v8) != a2)
    {
      v8 = (v8 + 1) & v9;
      OUTLINED_FUNCTION_63_8();
      if ((v11 & 1) == 0)
        goto LABEL_5;
    }
    result = 0;
    a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
  }
  else
  {
LABEL_5:
    OUTLINED_FUNCTION_61_5();
    OUTLINED_FUNCTION_20_17();
    sub_190B85CFC(a2, v8, v12);
    OUTLINED_FUNCTION_21_17(v14);
    result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_190B846C0(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_190BE4820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_190ADCAB4((unint64_t *)&qword_1ED034E38, v11, MEMORY[0x1E0CB09C8]);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v31 = a2;
  v12 = sub_190BE4EEC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_190ADCAB4(&qword_1ED034E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v21 = sub_190BE4FD0();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_190B85E3C((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

void sub_190B8491C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  OUTLINED_FUNCTION_31_13();
  v1 = v0;
  v2 = *v0;
  OUTLINED_FUNCTION_27_16(v3, v4, v5);
  v6 = OUTLINED_FUNCTION_25_20();
  if (*(_QWORD *)(v2 + 16))
  {
    OUTLINED_FUNCTION_12_21();
    v30 = (_QWORD *)(v2 + 56);
    OUTLINED_FUNCTION_42_10();
    v9 = v8 & v7;
    v11 = (unint64_t)(v10 + 63) >> 6;
    swift_retain();
    v12 = 0;
    if (!v9)
      goto LABEL_4;
LABEL_3:
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v19 = *v18;
      v20 = v18[1];
      OUTLINED_FUNCTION_59_7();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190BE50B4();
      OUTLINED_FUNCTION_30_0();
      OUTLINED_FUNCTION_51_6();
      OUTLINED_FUNCTION_17_21();
      if (v21)
      {
        OUTLINED_FUNCTION_8_37();
        while (1)
        {
          OUTLINED_FUNCTION_47_9();
          if (v21)
          {
            if ((v23 & 1) != 0)
              break;
          }
          if (v24 == v25)
            v24 = 0;
          if (*(_QWORD *)(v6 + 56 + 8 * v24) != -1)
          {
            OUTLINED_FUNCTION_6_39();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_36();
LABEL_28:
      OUTLINED_FUNCTION_15_24(v22);
      v27 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v26);
      *v27 = v19;
      v27[1] = v20;
      ++*(_QWORD *)(v6 + 16);
      if (v9)
        goto LABEL_3;
LABEL_4:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_36;
      if (v15 >= v11)
        goto LABEL_30;
      v16 = v30[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_30;
        v16 = v30[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_30;
          v16 = v30[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_30:
              OUTLINED_FUNCTION_9_2();
              v1 = v0;
              v28 = 1 << *(_BYTE *)(v2 + 32);
              if (v28 > 63)
              {
                sub_190BBE11C(0, (unint64_t)(v28 + 63) >> 6, v30);
              }
              else
              {
                OUTLINED_FUNCTION_49_7();
                *v30 = v29;
              }
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v30[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_37;
                if (v12 >= v11)
                  goto LABEL_30;
                v16 = v30[v12];
                ++v17;
                if (v16)
                  goto LABEL_17;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_17:
      v9 = (v16 - 1) & v16;
    }
  }
  OUTLINED_FUNCTION_9_2();
  *v1 = v6;
  OUTLINED_FUNCTION_19_10();
}

uint64_t sub_190B84B50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_190ABED0C(0, (unint64_t *)&qword_1ED034540);
  v3 = sub_190BE5C0C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_190BE62FC();
      sub_190BE50B4();
      result = sub_190BE6314();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_190BBE11C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_190B84E3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_190ABED0C(0, &qword_1EE200350);
  result = sub_190BE5C0C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      result = sub_190BE62F0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_190BBE11C(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_190B850D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  sub_190B061A0(0, &qword_1EE200340, (void (*)(void))sub_190B3953C);
  v3 = sub_190BE5C0C();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      result = sub_190B8577C(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i), v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_190BBE11C(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_190B852B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _BYTE v17[40];

  v1 = v0;
  v2 = *v0;
  sub_190B061A0(0, (unint64_t *)&qword_1EE1FE340, (void (*)(void))sub_190B078B4);
  v3 = sub_190BE5C0C();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      sub_190B5A5D4(*(_QWORD *)(v2 + 48) + 40 * i, (uint64_t)v17);
      result = sub_190B8581C((uint64_t)v17, v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_190BBE11C(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

void sub_190B854A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  unint64_t *v47;
  uint64_t v48;

  OUTLINED_FUNCTION_72();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = v0;
  v11 = OUTLINED_FUNCTION_65_6(v10, v7);
  v45 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - v12;
  v14 = *v0;
  v46 = v8;
  v47 = v4;
  v48 = v2;
  sub_190B88578(0, v6, v8, v4, v2);
  v15 = OUTLINED_FUNCTION_25_20();
  if (*(_QWORD *)(v14 + 16))
  {
    OUTLINED_FUNCTION_12_21();
    v44 = (_QWORD *)(v14 + 56);
    OUTLINED_FUNCTION_54_7();
    v18 = v17 & v16;
    OUTLINED_FUNCTION_22_19();
    v42 = v0;
    v43 = v19;
    v20 = v15 + 56;
    swift_retain();
    v21 = 0;
    if (!v18)
      goto LABEL_4;
LABEL_3:
    OUTLINED_FUNCTION_26_14();
    while (1)
    {
      v27 = v14;
      v28 = *(_QWORD *)(v14 + 48);
      v29 = *(_QWORD *)(v45 + 72);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
      v30(v13, v28 + v29 * v22, v11);
      OUTLINED_FUNCTION_36_9();
      sub_190BE4EEC();
      OUTLINED_FUNCTION_67_4();
      if (((v33 << v32) & ~*(_QWORD *)(v20 + 8 * v31)) == 0)
      {
        OUTLINED_FUNCTION_8_37();
        while (1)
        {
          OUTLINED_FUNCTION_47_9();
          if (v38)
          {
            if ((v35 & 1) != 0)
              break;
          }
          if (v36 == v37)
            v36 = 0;
          if (*(_QWORD *)(v20 + 8 * v36) != -1)
          {
            OUTLINED_FUNCTION_6_39();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_36();
LABEL_28:
      *(_QWORD *)(v20 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
      v30((char *)(*(_QWORD *)(v15 + 48) + v34 * v29), (uint64_t)v13, v11);
      ++*(_QWORD *)(v15 + 16);
      v14 = v27;
      if (v18)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v21, 1))
        goto LABEL_36;
      if (v21 + 1 >= v43)
        goto LABEL_30;
      OUTLINED_FUNCTION_46_7();
      v21 = v23;
      if (!v24)
      {
        v21 = v23 + 1;
        if (v23 + 1 >= v43)
          goto LABEL_30;
        if (!v44[v21])
        {
          v21 = v23 + 2;
          if (v23 + 2 >= v43)
            goto LABEL_30;
          if (!v44[v21])
          {
            if (v23 + 3 >= v43)
            {
LABEL_30:
              swift_release();
              v9 = v42;
              v39 = 1 << *(_BYTE *)(v14 + 32);
              if (v39 > 63)
              {
                sub_190BBE11C(0, (unint64_t)(v39 + 63) >> 6, v44);
              }
              else
              {
                OUTLINED_FUNCTION_49_7();
                *v44 = v40;
              }
              *(_QWORD *)(v14 + 16) = 0;
              break;
            }
            OUTLINED_FUNCTION_46_7();
            if (!v26)
            {
              while (1)
              {
                v21 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_37;
                if (v21 >= v43)
                  goto LABEL_30;
                ++v25;
                if (v44[v21])
                  goto LABEL_17;
              }
            }
            v21 = v25;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_29_15();
    }
  }
  swift_release();
  *v9 = v15;
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_190B8577C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_190BE62FC();
  sub_190BE6308();
  sub_190BE6314();
  result = sub_190BE5B94();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_190B8581C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  _QWORD v6[5];

  sub_190BE62FC();
  sub_190B5A5D4(a1, (uint64_t)v6);
  if (v6[1] > 2uLL)
    sub_190BE50B4();
  sub_190BE50B4();
  sub_190BE6314();
  v4 = sub_190BE5B94();
  *(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  result = sub_190B5A5D4(a1, *(_QWORD *)(a2 + 48) + 40 * v4);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_190B85978(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_190B84E3C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_190B8620C();
      goto LABEL_14;
    }
    sub_190B86B08();
  }
  v8 = *v3;
  result = sub_190BE62F0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_190BE6260();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_190B85A98(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_190BE4628();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_190B854A8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_190B86734();
      goto LABEL_12;
    }
    sub_190B86F1C();
  }
  v12 = *v3;
  sub_190ADCAB4((unint64_t *)&qword_1ED032FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  v13 = sub_190BE4EEC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_190ADCAB4(&qword_1ED02EFA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v18 = sub_190BE4FD0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190BE6260();
  __break(1u);
  return result;
}

uint64_t sub_190B85CFC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_190B850D0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_190B863B4();
      goto LABEL_12;
    }
    sub_190B86D78();
  }
  v8 = *v3;
  sub_190BE62FC();
  sub_190BE6308();
  result = sub_190BE6314();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    while (*(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * a2) != v5)
    {
      a2 = (a2 + 1) & v10;
      if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190BE6260();
  __break(1u);
  return result;
}

uint64_t sub_190B85E3C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_190BE4820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_190B854A8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_190B86734();
      goto LABEL_12;
    }
    sub_190B86F1C();
  }
  v12 = *v3;
  sub_190ADCAB4((unint64_t *)&qword_1ED034E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v13 = sub_190BE4EEC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_190ADCAB4(&qword_1ED034E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v18 = sub_190BE4FD0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190BE6260();
  __break(1u);
  return result;
}

void sub_190B860A0(unint64_t *a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;

  v3 = v2;
  sub_190B061A0(0, a1, a2);
  v4 = (_QWORD *)*v2;
  v5 = sub_190BE5C00();
  if (!v4[2])
  {
LABEL_26:
    OUTLINED_FUNCTION_9_2();
    *v3 = v5;
    OUTLINED_FUNCTION_26();
    return;
  }
  OUTLINED_FUNCTION_12_21();
  v6 = v4 + 7;
  OUTLINED_FUNCTION_22_19();
  if ((_QWORD *)v5 != v4 || v7 >= &v4[v8 + 7])
    memmove(v7, v4 + 7, 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = v4[2];
  OUTLINED_FUNCTION_12_21();
  OUTLINED_FUNCTION_62_6();
  v13 = v12 & v11;
  v15 = (unint64_t)(v14 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_26_14();
  while (1)
  {
    v19 = (_QWORD *)(v4[6] + 16 * v16);
    v20 = v19[1];
    v21 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    *v21 = *v19;
    v21[1] = v20;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v13)
      goto LABEL_9;
LABEL_10:
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v15)
      goto LABEL_26;
    ++v10;
    if (!v6[v17])
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v15)
        goto LABEL_26;
      if (!v6[v10])
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v15)
          goto LABEL_26;
        if (!v6[v10])
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_29_15();
  }
  v18 = v17 + 3;
  if (v18 >= v15)
    goto LABEL_26;
  if (v6[v18])
  {
    v10 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v15)
      goto LABEL_26;
    ++v18;
    if (v6[v10])
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void *sub_190B8620C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_190ABED0C(0, &qword_1EE200350);
  v2 = *v0;
  v3 = sub_190BE5C00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_190B863B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_190B061A0(0, &qword_1EE200340, (void (*)(void))sub_190B3953C);
  v2 = *v0;
  v3 = sub_190BE5C00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_190B8655C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  sub_190B061A0(0, (unint64_t *)&qword_1EE1FE340, (void (*)(void))sub_190B078B4);
  v2 = *v0;
  v3 = sub_190BE5C00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 5 * i;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 8 * v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = v21[4];
    v27 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 8 * v20);
    *v27 = *v21;
    v27[1] = v23;
    v27[2] = v24;
    v27[3] = v25;
    v27[4] = v26;
    result = (void *)sub_190AB20CC(v22, v23);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_190B86734()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t i;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;

  OUTLINED_FUNCTION_72();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = v7(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - v11;
  sub_190B88578(0, v6, v8, v4, v2);
  v32 = v0;
  v13 = (_QWORD *)*v0;
  v14 = sub_190BE5C00();
  if (!v13[2])
  {
LABEL_26:
    swift_release();
    *v32 = v14;
    OUTLINED_FUNCTION_0_0();
    return;
  }
  OUTLINED_FUNCTION_12_21();
  v15 = v13 + 7;
  OUTLINED_FUNCTION_22_19();
  if ((_QWORD *)v14 != v13 || v16 >= &v13[v17 + 7])
    memmove(v16, v13 + 7, 8 * v17);
  v19 = 0;
  *(_QWORD *)(v14 + 16) = v13[2];
  OUTLINED_FUNCTION_12_21();
  OUTLINED_FUNCTION_62_6();
  v22 = v21 & v20;
  v24 = (unint64_t)(v23 + 63) >> 6;
  if ((v21 & v20) == 0)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_38_12();
  for (i = v25 | (v19 << 6); ; i = v29 + (v19 << 6))
  {
    v30 = *(_QWORD *)(v10 + 72) * i;
    (*(void (**)(char *, int64_t, uint64_t))(v10 + 16))(v12, v13[6] + v30, v9);
    OUTLINED_FUNCTION_34_13(*(_QWORD *)(v14 + 48) + v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
    if (v22)
      goto LABEL_9;
LABEL_10:
    v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v24)
      goto LABEL_26;
    ++v19;
    if (!v15[v27])
    {
      v19 = v27 + 1;
      if (v27 + 1 >= v24)
        goto LABEL_26;
      if (!v15[v19])
      {
        v19 = v27 + 2;
        if (v27 + 2 >= v24)
          goto LABEL_26;
        if (!v15[v19])
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_64_7();
  }
  v28 = v27 + 3;
  if (v28 >= v24)
    goto LABEL_26;
  if (v15[v28])
  {
    v19 = v28;
    goto LABEL_23;
  }
  while (1)
  {
    v19 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v19 >= v24)
      goto LABEL_26;
    ++v28;
    if (v15[v19])
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void sub_190B86914()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_31_13();
  v1 = v0;
  v2 = *v0;
  OUTLINED_FUNCTION_27_16(v3, v4, v5);
  v6 = OUTLINED_FUNCTION_25_20();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_32:
    *v1 = v6;
    OUTLINED_FUNCTION_19_10();
    return;
  }
  OUTLINED_FUNCTION_12_21();
  v7 = v2 + 56;
  OUTLINED_FUNCTION_42_10();
  v10 = v9 & v8;
  OUTLINED_FUNCTION_22_19();
  v28 = v11;
  swift_retain();
  v12 = 0;
  if (!v10)
    goto LABEL_4;
LABEL_3:
  OUTLINED_FUNCTION_38_12();
  for (i = v13 | (v12 << 6); ; i = v17 + (v12 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v19 = *v18;
    v20 = v18[1];
    OUTLINED_FUNCTION_59_7();
    swift_bridgeObjectRetain_n();
    sub_190BE50B4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_51_6();
    OUTLINED_FUNCTION_17_21();
    if (v21)
    {
      OUTLINED_FUNCTION_8_37();
      while (1)
      {
        OUTLINED_FUNCTION_47_9();
        if (v21)
        {
          if ((v23 & 1) != 0)
            break;
        }
        if (v24 == v25)
          v24 = 0;
        if (*(_QWORD *)(v6 + 56 + 8 * v24) != -1)
        {
          OUTLINED_FUNCTION_6_39();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_9_36();
LABEL_28:
    OUTLINED_FUNCTION_15_24(v22);
    v27 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v26);
    *v27 = v19;
    v27[1] = v20;
    ++*(_QWORD *)(v6 + 16);
    if (v10)
      goto LABEL_3;
LABEL_4:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_34;
    if (v15 >= v28)
      goto LABEL_30;
    ++v12;
    if (!*(_QWORD *)(v7 + 8 * v15))
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_30;
      if (!*(_QWORD *)(v7 + 8 * v12))
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_30;
        if (!*(_QWORD *)(v7 + 8 * v12))
          break;
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_64_7();
  }
  v16 = v15 + 3;
  if (v16 >= v28)
  {
LABEL_30:
    swift_release_n();
    v1 = v0;
    goto LABEL_32;
  }
  if (*(_QWORD *)(v7 + 8 * v16))
  {
    v12 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v12 >= v28)
      goto LABEL_30;
    ++v16;
    if (*(_QWORD *)(v7 + 8 * v12))
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_190B86B08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_190ABED0C(0, &qword_1EE200350);
  result = sub_190BE5C0C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = sub_190BE62F0();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_190B86D78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v1 = v0;
  v2 = *v0;
  sub_190B061A0(0, &qword_1EE200340, (void (*)(void))sub_190B3953C);
  v3 = sub_190BE5C0C();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = swift_release();
    *v1 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    result = sub_190B8577C(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i), v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_190B86F1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t i;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  unint64_t *v41;
  uint64_t v42;

  OUTLINED_FUNCTION_72();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = v0;
  v11 = OUTLINED_FUNCTION_65_6(v10, v7);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v37 - v13;
  v15 = *v0;
  v40 = v8;
  v41 = v4;
  v42 = v2;
  sub_190B88578(0, v6, v8, v4, v2);
  v16 = OUTLINED_FUNCTION_25_20();
  if (!*(_QWORD *)(v15 + 16))
  {
    swift_release();
LABEL_32:
    *v9 = v16;
    OUTLINED_FUNCTION_0_0();
    return;
  }
  OUTLINED_FUNCTION_12_21();
  v37 = v0;
  v38 = v15 + 56;
  OUTLINED_FUNCTION_54_7();
  v19 = v18 & v17;
  OUTLINED_FUNCTION_22_19();
  v39 = v20;
  v21 = v16 + 56;
  swift_retain();
  v22 = 0;
  if (!v19)
    goto LABEL_4;
LABEL_3:
  v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    v28 = *(_QWORD *)(v12 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, *(_QWORD *)(v15 + 48) + v28 * i, v11);
    OUTLINED_FUNCTION_36_9();
    sub_190BE4EEC();
    OUTLINED_FUNCTION_67_4();
    if (((v31 << v30) & ~*(_QWORD *)(v21 + 8 * v29)) == 0)
    {
      OUTLINED_FUNCTION_8_37();
      while (1)
      {
        OUTLINED_FUNCTION_47_9();
        if (v36)
        {
          if ((v33 & 1) != 0)
            break;
        }
        if (v34 == v35)
          v34 = 0;
        if (*(_QWORD *)(v21 + 8 * v34) != -1)
        {
          OUTLINED_FUNCTION_6_39();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_9_36();
LABEL_28:
    *(_QWORD *)(v21 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v16 + 48) + v32 * v28, v14, v11);
    ++*(_QWORD *)(v16 + 16);
    if (v19)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v22, 1))
      goto LABEL_34;
    if (v22 + 1 >= v39)
      goto LABEL_30;
    OUTLINED_FUNCTION_46_7();
    v22 = v25;
    if (!v26)
    {
      v22 = v25 + 1;
      if (v25 + 1 >= v39)
        goto LABEL_30;
      v26 = *(_QWORD *)(v38 + 8 * v22);
      if (!v26)
      {
        v22 = v25 + 2;
        if (v25 + 2 >= v39)
          goto LABEL_30;
        v26 = *(_QWORD *)(v38 + 8 * v22);
        if (!v26)
          break;
      }
    }
LABEL_17:
    v19 = (v26 - 1) & v26;
  }
  if (v25 + 3 >= v39)
  {
LABEL_30:
    swift_release_n();
    v9 = v37;
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_46_7();
  if (v26)
  {
    v22 = v27;
    goto LABEL_17;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v39)
      goto LABEL_30;
    v26 = *(_QWORD *)(v38 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
}

void sub_190B871D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;

  v2 = v1;
  v137 = type metadata accessor for ManualClock.WakeUp();
  v129 = *(_QWORD *)(v137 - 8);
  v4 = MEMORY[0x1E0C80A78](v137);
  v126 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v138 = (uint64_t)&v120 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v135 = (uint64_t)&v120 - v9;
  MEMORY[0x1E0C80A78](v8);
  v134 = (uint64_t)&v120 - v10;
  v11 = a1[1];
  v12 = sub_190BE5FA8();
  if (v12 >= v11)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (v11)
        sub_190B87AE0(0, v11, 1, a1);
      return;
    }
    goto LABEL_142;
  }
  v13 = v12;
  v136 = a1;
  v123 = sub_190B83814(v11 / 2);
  v128 = v14;
  if (v11 <= 0)
  {
LABEL_106:
    v16 = (char *)MEMORY[0x1E0DEE9D8];
    v60 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_107:
    if (v60 < 2)
    {
LABEL_118:
      swift_bridgeObjectRelease();
      if (v11 >= -1)
        goto LABEL_119;
      goto LABEL_146;
    }
    v113 = *v136;
    while (1)
    {
      v114 = v60 - 2;
      if (v60 < 2)
        break;
      if (!v113)
        goto LABEL_150;
      v115 = v16;
      v116 = *(_QWORD *)&v16[16 * v114 + 32];
      v117 = *(_QWORD *)&v16[16 * v60 + 24];
      sub_190B87CE4(v113 + *(_QWORD *)(v129 + 72) * v116, v113 + *(_QWORD *)(v129 + 72) * *(_QWORD *)&v16[16 * v60 + 16], v113 + *(_QWORD *)(v129 + 72) * v117, v128);
      if (v2)
        goto LABEL_104;
      if (v117 < v116)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v115 = sub_190B40B98();
      if (v114 >= *((_QWORD *)v115 + 2))
        goto LABEL_138;
      v118 = &v115[16 * v114 + 32];
      *(_QWORD *)v118 = v116;
      *((_QWORD *)v118 + 1) = v117;
      v119 = *((_QWORD *)v115 + 2);
      if (v60 > v119)
        goto LABEL_139;
      memmove(&v115[16 * v60 + 16], &v115[16 * v60 + 32], 16 * (v119 - v60));
      *((_QWORD *)v115 + 2) = v119 - 1;
      v60 = v119 - 1;
      v16 = v115;
      if (v119 <= 2)
        goto LABEL_118;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    return;
  }
  v122 = v13;
  v15 = 0;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v17 = v11;
  v124 = v11;
  while (1)
  {
    v18 = v15;
    v19 = v15 + 1;
    v127 = v15;
    if (v15 + 1 >= v17)
    {
      ++v15;
      goto LABEL_31;
    }
    v130 = v2;
    v20 = *v136;
    v21 = *(_QWORD *)(v129 + 72);
    v22 = *v136 + v21 * v19;
    v132 = v17;
    v23 = v134;
    sub_190B83964(v22, v134);
    v24 = v135;
    sub_190B83964(v20 + v21 * v15, v135);
    v25 = sub_190BE6380();
    sub_190B839A8(v24);
    v17 = v132;
    sub_190B839A8(v23);
    v15 += 2;
    v131 = v20;
    v133 = v21;
    if (v18 + 2 < v17)
    {
      v26 = v21 * v19;
      v27 = v20;
      v28 = v21 * v15;
      do
      {
        v29 = v15;
        v30 = v134;
        sub_190B83964(v27 + v28, v134);
        v31 = v135;
        sub_190B83964(v27 + v26, v135);
        v32 = sub_190BE6380();
        sub_190B839A8(v31);
        sub_190B839A8(v30);
        if (((v25 ^ v32) & 1) != 0)
        {
          v15 = v29;
          v2 = v130;
          v18 = v127;
          v17 = v132;
          if ((v25 & 1) == 0)
            goto LABEL_31;
          goto LABEL_15;
        }
        v15 = v29 + 1;
        v27 += v133;
      }
      while (v29 + 1 < v132);
      v17 = v132;
      v15 = v132;
      v2 = v130;
      v18 = v127;
      if ((v25 & 1) == 0)
        goto LABEL_31;
LABEL_15:
      if (v15 < v18)
        goto LABEL_143;
      if (v18 >= v15)
        goto LABEL_31;
      v121 = v16;
      v130 = v2;
      v33 = 0;
      v34 = v133;
      v35 = v133 * (v15 - 1);
      v36 = v15 * v133;
      v37 = v18 * v133;
      v38 = v136;
      do
      {
        if (v18 != v15 + v33 - 1)
        {
          v39 = v131;
          if (!v131)
            goto LABEL_149;
          v40 = v131 + v37;
          v41 = v131 + v35;
          sub_190B49144(v131 + v37, v126);
          if (v37 < v35 || v40 >= v39 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
            v34 = v133;
          }
          else
          {
            v34 = v133;
            if (v37 != v35)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_190B49144(v126, v41);
          v38 = v136;
        }
        ++v18;
        --v33;
        v35 -= v34;
        v36 -= v34;
        v37 += v34;
      }
      while (v18 < v15 + v33);
      v2 = v130;
      v16 = v121;
      v18 = v127;
      v17 = v132;
      goto LABEL_32;
    }
    v2 = v130;
    if ((v25 & 1) != 0)
      goto LABEL_15;
LABEL_31:
    v38 = v136;
LABEL_32:
    if (v15 < v17)
    {
      if (__OFSUB__(v15, v18))
        goto LABEL_141;
      if (v15 - v18 < v122)
      {
        if (__OFADD__(v18, v122))
          goto LABEL_144;
        if (v18 + v122 >= v17)
          v43 = v17;
        else
          v43 = v18 + v122;
        if (v43 < v18)
          goto LABEL_145;
        if (v15 != v43)
        {
          v121 = v16;
          v130 = v2;
          v44 = *(_QWORD *)(v129 + 72);
          v45 = v44 * (v15 - 1);
          v131 = v44;
          v46 = v15 * v44;
          v125 = v43;
          do
          {
            v47 = 0;
            v48 = v18;
            v132 = v46;
            v133 = v15;
            while (1)
            {
              v49 = *v38;
              v50 = v46 + v47 + *v38;
              v51 = v134;
              sub_190B83964(v50, v134);
              v52 = v45;
              v53 = v45 + v47 + v49;
              v54 = v135;
              sub_190B83964(v53, v135);
              LOBYTE(v49) = sub_190BE6380();
              sub_190B839A8(v54);
              sub_190B839A8(v51);
              if ((v49 & 1) == 0)
                break;
              v55 = *v38;
              if (!*v38)
                goto LABEL_147;
              v46 = v132;
              v45 = v52;
              v56 = v55 + v52 + v47;
              sub_190B49144(v55 + v132 + v47, v138);
              swift_arrayInitWithTakeFrontToBack();
              sub_190B49144(v138, v56);
              v47 -= v131;
              ++v48;
              v57 = v133;
              v38 = v136;
              if (v133 == v48)
                goto LABEL_48;
            }
            v46 = v132;
            v57 = v133;
            v45 = v52;
LABEL_48:
            v15 = v57 + 1;
            v45 += v131;
            v46 += v131;
            v18 = v127;
          }
          while (v15 != v125);
          v15 = v125;
          v2 = v130;
          v16 = v121;
        }
      }
    }
    if (v15 < v18)
      goto LABEL_140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_190B40AAC(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v59 = *((_QWORD *)v16 + 2);
    v58 = *((_QWORD *)v16 + 3);
    v60 = v59 + 1;
    if (v59 >= v58 >> 1)
      v16 = sub_190B40AAC((char *)(v58 > 1), v59 + 1, 1, v16);
    v130 = v2;
    *((_QWORD *)v16 + 2) = v60;
    v61 = v16 + 32;
    v62 = &v16[16 * v59 + 32];
    *(_QWORD *)v62 = v18;
    *((_QWORD *)v62 + 1) = v15;
    if (v59)
      break;
    v60 = 1;
LABEL_98:
    v17 = v136[1];
    v11 = v124;
    v2 = v130;
    if (v15 >= v17)
      goto LABEL_107;
  }
  while (1)
  {
    v63 = v60 - 1;
    if (v60 >= 4)
    {
      v68 = &v61[16 * v60];
      v69 = *((_QWORD *)v68 - 8);
      v70 = *((_QWORD *)v68 - 7);
      v74 = __OFSUB__(v70, v69);
      v71 = v70 - v69;
      if (v74)
        goto LABEL_125;
      v73 = *((_QWORD *)v68 - 6);
      v72 = *((_QWORD *)v68 - 5);
      v74 = __OFSUB__(v72, v73);
      v66 = v72 - v73;
      v67 = v74;
      if (v74)
        goto LABEL_126;
      v75 = v60 - 2;
      v76 = &v61[16 * v60 - 32];
      v78 = *(_QWORD *)v76;
      v77 = *((_QWORD *)v76 + 1);
      v74 = __OFSUB__(v77, v78);
      v79 = v77 - v78;
      if (v74)
        goto LABEL_127;
      v74 = __OFADD__(v66, v79);
      v80 = v66 + v79;
      if (v74)
        goto LABEL_129;
      if (v80 >= v71)
      {
        v98 = &v61[16 * v63];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        v74 = __OFSUB__(v99, v100);
        v101 = v99 - v100;
        if (v74)
          goto LABEL_135;
        v91 = v66 < v101;
        goto LABEL_87;
      }
    }
    else
    {
      if (v60 != 3)
      {
        v92 = *((_QWORD *)v16 + 4);
        v93 = *((_QWORD *)v16 + 5);
        v74 = __OFSUB__(v93, v92);
        v85 = v93 - v92;
        v86 = v74;
        goto LABEL_81;
      }
      v65 = *((_QWORD *)v16 + 4);
      v64 = *((_QWORD *)v16 + 5);
      v74 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      v67 = v74;
    }
    if ((v67 & 1) != 0)
      goto LABEL_128;
    v75 = v60 - 2;
    v81 = &v61[16 * v60 - 32];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v84 = __OFSUB__(v82, v83);
    v85 = v82 - v83;
    v86 = v84;
    if (v84)
      goto LABEL_130;
    v87 = &v61[16 * v63];
    v89 = *(_QWORD *)v87;
    v88 = *((_QWORD *)v87 + 1);
    v74 = __OFSUB__(v88, v89);
    v90 = v88 - v89;
    if (v74)
      goto LABEL_132;
    if (__OFADD__(v85, v90))
      goto LABEL_134;
    if (v85 + v90 >= v66)
    {
      v91 = v66 < v90;
LABEL_87:
      if (v91)
        v63 = v75;
      goto LABEL_89;
    }
LABEL_81:
    if ((v86 & 1) != 0)
      goto LABEL_131;
    v94 = &v61[16 * v63];
    v96 = *(_QWORD *)v94;
    v95 = *((_QWORD *)v94 + 1);
    v74 = __OFSUB__(v95, v96);
    v97 = v95 - v96;
    if (v74)
      goto LABEL_133;
    if (v97 < v85)
      goto LABEL_98;
LABEL_89:
    v102 = v63 - 1;
    if (v63 - 1 >= v60)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v136)
      goto LABEL_148;
    v103 = v15;
    v104 = v16;
    v105 = &v61[16 * v102];
    v106 = v61;
    v107 = *(_QWORD *)v105;
    v108 = v106;
    v109 = &v106[16 * v63];
    v110 = *((_QWORD *)v109 + 1);
    v111 = v130;
    sub_190B87CE4(*v136 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v105, *v136 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v109, *v136 + *(_QWORD *)(v129 + 72) * v110, v128);
    v130 = v111;
    if (v111)
      break;
    if (v110 < v107)
      goto LABEL_122;
    if (v63 > *((_QWORD *)v104 + 2))
      goto LABEL_123;
    *(_QWORD *)v105 = v107;
    *(_QWORD *)&v108[16 * v102 + 8] = v110;
    v112 = *((_QWORD *)v104 + 2);
    if (v63 >= v112)
      goto LABEL_124;
    v61 = v108;
    v16 = v104;
    v60 = v112 - 1;
    memmove(v109, v109 + 16, 16 * (v112 - 1 - v63));
    *((_QWORD *)v104 + 2) = v112 - 1;
    v15 = v103;
    if (v112 <= 2)
      goto LABEL_98;
  }
  v11 = v124;
  v2 = v130;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v11 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_119:
  *(_QWORD *)(v123 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_190B87AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24 = a1;
  v27 = type metadata accessor for ManualClock.WakeUp();
  v7 = MEMORY[0x1E0C80A78](v27);
  v28 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - v10;
  result = MEMORY[0x1E0C80A78](v9);
  v15 = (char *)&v22 - v14;
  v26 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v30 = v16 * (v26 - 1);
    v25 = v16;
    v29 = v16 * v26;
    while (2)
    {
      v17 = 0;
      v18 = v24;
      do
      {
        v19 = *a4;
        sub_190B83964(v29 + v17 + *a4, (uint64_t)v15);
        sub_190B83964(v30 + v17 + v19, (uint64_t)v11);
        LOBYTE(v19) = sub_190BE6380();
        sub_190B839A8((uint64_t)v11);
        result = sub_190B839A8((uint64_t)v15);
        if ((v19 & 1) == 0)
          break;
        v20 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v21 = v20 + v30 + v17;
        sub_190B49144(v20 + v29 + v17, v28);
        swift_arrayInitWithTakeFrontToBack();
        result = sub_190B49144(v28, v21);
        v17 -= v25;
        ++v18;
      }
      while (v26 != v18);
      v30 += v25;
      v29 += v25;
      if (++v26 != v23)
        continue;
      break;
    }
  }
  return result;
}

void sub_190B87CE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v27;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v40;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = type metadata accessor for ManualClock.WakeUp();
  v8 = MEMORY[0x1E0C80A78](v51);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v49 = (uint64_t)&v44 - v10;
  v12 = *(_QWORD *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v13 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v12 == -1)
    goto LABEL_75;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1)
    goto LABEL_76;
  v17 = v13 / v12;
  v18 = v15 / v12;
  if (v13 / v12 >= v15 / v12)
  {
    sub_190B13000(a2, v15 / v12, a4);
    v28 = v18 * v12;
    v19 = a4 + v18 * v12;
    if (v28 < 1 || a1 >= a2)
      goto LABEL_69;
    v47 = a4;
    v48 = -v12;
    v45 = v12;
    v46 = a1;
    while (1)
    {
      v30 = a3;
      v31 = v48;
      v32 = v49;
      a3 += v48;
      v33 = v19 + v48;
      sub_190B83964(v19 + v48, v49);
      v34 = a2 + v31;
      v35 = a2 + v31;
      v36 = v50;
      sub_190B83964(v35, v50);
      v37 = sub_190BE6380();
      sub_190B839A8(v36);
      sub_190B839A8(v32);
      if ((v37 & 1) != 0)
      {
        if (v30 >= a2 && a3 < a2)
        {
          v40 = v46;
          a4 = v47;
          if (v30 != a2)
            swift_arrayInitWithTakeBackToFront();
          a2 = v34;
          v12 = v45;
          goto LABEL_65;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v34;
      }
      else
      {
        if (v30 >= v19 && a3 < v19)
        {
          a4 = v47;
          if (v30 != v19)
            swift_arrayInitWithTakeBackToFront();
          v19 = v33;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        v19 = v33;
      }
      a4 = v47;
LABEL_64:
      v12 = v45;
      v40 = v46;
LABEL_65:
      if (v19 <= a4 || a2 <= v40)
        goto LABEL_69;
    }
  }
  sub_190B13000(a1, v13 / v12, a4);
  v19 = a4 + v17 * v12;
  if (v17 * v12 >= 1 && a2 < a3)
  {
    do
    {
      v21 = v49;
      sub_190B83964(a2, v49);
      v22 = v50;
      sub_190B83964(a4, v50);
      v23 = sub_190BE6380();
      sub_190B839A8(v22);
      sub_190B839A8(v21);
      if ((v23 & 1) != 0)
      {
        v24 = a2 + v12;
        if (a1 < a2 || a1 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        if (a1 < a4 || a1 >= a4 + v12)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v24 = a2;
        a4 += v12;
      }
      a1 += v12;
      v27 = a4 >= v19 || v24 >= a3;
      a2 = v24;
    }
    while (!v27);
  }
  a2 = a1;
LABEL_69:
  v42 = v19 - a4;
  if (v12 != -1 || v42 != 0x8000000000000000)
  {
    sub_190B13000(a4, v42 / v12, a2);
    return;
  }
LABEL_77:
  __break(1u);
}

uint64_t sub_190B8807C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = sub_190BE4820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_190ADCAB4((unint64_t *)&qword_1ED034E38, v11, MEMORY[0x1E0CB09C8]);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v29 = a1;
  v12 = sub_190BE4EEC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v26 = v3;
    v27 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v28 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_190ADCAB4(&qword_1ED034E40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v18 = sub_190BE4FD0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v19 = 1;
        a2 = v27;
        return __swift_storeEnumTagSinglePayload(a2, v19, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v20 = v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v20;
    v30 = *v20;
    *v20 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_190B86734();
      v22 = v30;
    }
    v23 = *(_QWORD *)(v22 + 48) + v16 * v14;
    a2 = v27;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 32))(v27, v23, v6);
    sub_190B88304(v14);
    *v20 = v30;
    swift_bridgeObjectRelease();
    v19 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a2, v19, 1, v6);
}

void sub_190B882CC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_190B1D6DC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B88304(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = sub_190BE4820();
  v32 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v29 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_190BE5B7C();
    v31 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v32 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      while (1)
      {
        v15 = v14 * v10;
        v30(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_190ADCAB4((unint64_t *)&qword_1ED034E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v16 = sub_190BE4EEC();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_24;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_24;
        }
        v20 = *(_QWORD *)(v7 + 48);
        v21 = v14 * a1;
        v22 = v20 + v14 * a1;
        v23 = v20 + v15 + v14;
        if (v14 * a1 < v15 || v22 >= v23)
          break;
        a1 = v10;
        if (v21 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        v10 = (v10 + 1) & v11;
        if (((*(_QWORD *)(v31 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          goto LABEL_25;
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_23:
      a1 = v10;
      goto LABEL_24;
    }
LABEL_25:
    *(_QWORD *)(v31 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v29;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v1;
  v26 = *(_QWORD *)(*v1 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
  return result;
}

void sub_190B88578(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t *v5;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    OUTLINED_FUNCTION_101(0, (uint64_t)a2, a3);
    sub_190ADCAB4(a4, a3, a5);
    v9 = sub_190BE5C24();
    if (!v10)
      atomic_store(v9, v5);
  }
}

void whenFirst<A, B, C>(on:providers:provide:where:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t (*v55)(char *);

  v49 = a6;
  v50 = a4;
  v47 = a5;
  v48 = (void *)a1;
  v55 = a3;
  v52 = a9;
  v13 = sub_190BE59A8();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v42 - v15;
  v43 = *(_QWORD *)(a8 - 8);
  v17 = *(_QWORD *)(v43 + 64);
  MEMORY[0x1E0C80A78](v14);
  v51 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_190BE59A8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v42 - v21;
  v54 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v20);
  v53 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a8;
  v45 = a2;
  v46 = a10;
  sub_190BE5774();
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, a7) == 1)
  {
    v24 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    OUTLINED_FUNCTION_15_25(v24, v25, v26, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v52);
    Promise.__allocating_init(value:)();
  }
  else
  {
    v29 = v52;
    v28 = v53;
    v42 = v13;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v22, a7);
    v30 = v28;
    v31 = v50;
    if (v55(v30))
    {
      v33 = v43;
      v32 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v51, v45, v44);
      v34 = (*(unsigned __int8 *)(v33 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      v35 = (v17 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      v36 = (char *)swift_allocObject();
      *((_QWORD *)v36 + 2) = a7;
      *((_QWORD *)v36 + 3) = v32;
      v37 = v46;
      *((_QWORD *)v36 + 4) = v29;
      *((_QWORD *)v36 + 5) = v37;
      v38 = v48;
      v39 = v49;
      *((_QWORD *)v36 + 6) = v47;
      *((_QWORD *)v36 + 7) = v39;
      *((_QWORD *)v36 + 8) = v38;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v36[v34], v51, v32);
      v40 = &v36[v35];
      *(_QWORD *)v40 = v55;
      *((_QWORD *)v40 + 1) = v31;
      swift_retain();
      v41 = v38;
      swift_retain();
      Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();
    }
    else
    {
      sub_190B8977C((uint64_t)v48, v45, (uint64_t)v55, v31, v47, v49, a7, v44, v29);
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, a7);
  }
  OUTLINED_FUNCTION_0_0();
}

#error "190B889DC: call analysis failed (funcsize=93)"

char *sub_190B88A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t TupleTypeMetadata3;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v7 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v48 = (char *)&v42 - v8;
  v50 = *(_QWORD *)(a4 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WhenEither3(0, a2, a3, a4);
  v53 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v42 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v42 - v20;
  v52 = a2;
  v22 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190BE5468();
  if (swift_getEnumCaseMultiPayload())
    goto LABEL_8;
  v44 = a4;
  v45 = v24;
  v25 = v22;
  v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v27 = v52;
  v26(v24, v21, v52);
  sub_190BE5468();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v15 = v18;
LABEL_7:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v45, v27);
    v21 = v15;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v12);
    sub_190B8D638();
    swift_allocError();
    *v40 = 0xD00000000000001FLL;
    v40[1] = 0x8000000190BF5060;
    swift_willThrow();
    return v15;
  }
  v28 = v51;
  v29 = v49;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v49, v18, a3);
  sub_190BE5468();
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, a3);
    goto LABEL_7;
  }
  v30 = v47;
  v31 = v44;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v15, v44);
  v32 = TupleTypeMetadata3;
  v53 = type metadata accessor for Promise(0, TupleTypeMetadata3, v33, v34);
  v42 = &v48[*(int *)(v32 + 48)];
  v43 = v25;
  v35 = &v48[*(int *)(v32 + 64)];
  v36 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v37 = v45;
  v36(v48, v45, v27);
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v42, v29, a3);
  v38 = v50;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v35, v30, v31);
  Promise.__allocating_init(value:)();
  v15 = v39;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v29, a3);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v52);
  return v15;
}

void when4<A, B, C, D>(on:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a5;
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_24();
  sub_190BE533C();
  v6 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_30_17(v6)[5] = *(_QWORD *)(v5 + 80);
  type metadata accessor for WhenEither4();
}

uint64_t sub_190B88EC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t TupleTypeMetadata;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v8 = (void *)OUTLINED_FUNCTION_31_14(v1);
  Promise.then<A>(on:closure:)();
  v10 = v9;
  swift_release();

  *v6 = v10;
  v11 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_11_27(v11);
  v12 = (void *)OUTLINED_FUNCTION_31_14(v2);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  v6[1] = v5;
  v13 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_11_27(v13);
  v14 = (void *)OUTLINED_FUNCTION_31_14(v3);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  v6[2] = v27;
  v15 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_11_27(v15);
  v16 = (void *)OUTLINED_FUNCTION_31_14(v4);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  v6[3] = v29;
  type metadata accessor for Promise(0, a1, v17, v18);
  sub_190ADE6B0();
  when<A>(on:_:)(v30, v28, a1, v19);
  OUTLINED_FUNCTION_2_0();
  v20 = (_QWORD *)OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_11_27(v20);
  v21 = sub_190BE5438();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v23 = (void *)sub_190AC06B8(v21, TupleTypeMetadata);
  OUTLINED_FUNCTION_38_13();
  v25 = v24;
  OUTLINED_FUNCTION_2();
  swift_release();

  return v25;
}

void sub_190B89094(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1, a2);
  type metadata accessor for WhenEither4();
}

uint64_t sub_190B890F0()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_190B8911C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
  type metadata accessor for WhenEither4();
}

uint64_t sub_190B89174()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_190B891A0(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1, a2);
  type metadata accessor for WhenEither4();
}

uint64_t sub_190B891FC()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_190B89228(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1, a2);
  type metadata accessor for WhenEither4();
}

uint64_t sub_190B89284()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_190B892B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];
  uint64_t TupleTypeMetadata;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v26 = a2;
  v27 = a3;
  v28 = a4;
  v29 = a5;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v18 = &v16[-v10];
  v21 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v20 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = *(_QWORD *)(a4 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v23 = &v16[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v13);
  v25 = &v16[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = a2;
  v27 = a3;
  v28 = a4;
  v29 = a5;
  v19 = a5;
  type metadata accessor for WhenEither4();
}

_BYTE *sub_190B893EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  void (*v33)(uint64_t, _BYTE *, _QWORD);
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  _QWORD *v46;
  _BYTE v48[96];

  *(_QWORD *)(v4 - 120) = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = &v48[-v10];
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = &v48[-v13];
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = &v48[-v16];
  *(_QWORD *)(v4 - 128) = v1;
  v18 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v15);
  v20 = &v48[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v4 - 72) = **(_QWORD **)(v4 - 72);
  sub_190BE5468();
  if (swift_getEnumCaseMultiPayload())
  {
    v21 = *(_QWORD *)(v4 - 120);
LABEL_12:
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v17, a1);
    sub_190B8D638();
    swift_allocError();
    *v46 = 0xD00000000000001FLL;
    v46[1] = 0x8000000190BF5040;
    swift_willThrow();
    return v17;
  }
  *(_QWORD *)(v4 - 224) = v8;
  *(_QWORD *)(v4 - 216) = v18;
  v22 = *(_QWORD *)(v4 - 128);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v20, v17, v22);
  sub_190BE5468();
  v23 = v20;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v45 = *(_QWORD *)(v4 - 216);
    v21 = *(_QWORD *)(v4 - 120);
LABEL_11:
    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v23, v22);
    v17 = v14;
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v4 - 144);
  v25 = *(_QWORD *)(v4 - 136);
  v26 = v14;
  v27 = v2;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v24 + 32))(v25, v26, v2);
  sub_190BE5468();
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    v31 = v11;
LABEL_10:
    v45 = *(_QWORD *)(v4 - 216);
    v21 = *(_QWORD *)(v4 - 120);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v27);
    v14 = v31;
    goto LABEL_11;
  }
  v28 = *(_QWORD *)(v4 - 160);
  v29 = v11;
  v30 = v3;
  (*(void (**)(_QWORD, _BYTE *, uint64_t))(v28 + 32))(*(_QWORD *)(v4 - 152), v29, v3);
  v31 = *(_BYTE **)(v4 - 224);
  sub_190BE5468();
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    (*(void (**)(_QWORD, uint64_t))(v28 + 8))(*(_QWORD *)(v4 - 152), v30);
    goto LABEL_10;
  }
  v32 = *(_QWORD *)(v4 - 176);
  v33 = *(void (**)(uint64_t, _BYTE *, _QWORD))(*(_QWORD *)(v4 - 168) + 32);
  *(_QWORD *)(v4 - 232) = v23;
  v33(v32, v31, *(_QWORD *)(v4 - 184));
  v34 = *(int **)(v4 - 208);
  *(_QWORD *)(v4 - 72) = type metadata accessor for Promise(0, (uint64_t)v34, v35, v36);
  v37 = v22;
  v38 = *(_QWORD *)(v4 - 200);
  v39 = v38 + v34[12];
  *(_QWORD *)(v4 - 120) = v38 + v34[16];
  v40 = v38 + v34[20];
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v4 - 216) + 16))(v38, v23, v37);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v39, v25, v27);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v28 + 16))(*(_QWORD *)(v4 - 120), *(_QWORD *)(v4 - 152), v30);
  v42 = *(_QWORD *)(v4 - 176);
  v41 = *(_QWORD *)(v4 - 168);
  v43 = *(_QWORD *)(v4 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v42, v43);
  Promise.__allocating_init(value:)();
  v17 = v44;
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  (*(void (**)(_QWORD, uint64_t))(v28 + 8))(*(_QWORD *)(v4 - 152), v30);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(*(_QWORD *)(v4 - 136), v27);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 216) + 8))(*(_QWORD *)(v4 - 232), *(_QWORD *)(v4 - 128));
  return v17;
}

uint64_t sub_190B8977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a6;
  v27 = a7;
  v24 = a4;
  v25 = a5;
  v23 = a3;
  v12 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v18 = (char *)&v22 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, a8);
  sub_190B29360();
  sub_190BE57B0();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = whenFirst<A, B, C>(on:providers:provide:where:)(a1, v18, v23, v24, v25, v26, v27, AssociatedTypeWitness, a9, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  return v20;
}

void sub_190B898DC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a7;
  v22 = a8;
  v16 = sub_190BE59A8();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v21 - v17;
  if ((a2(a1) & 1) != 0)
  {
    type metadata accessor for Promise(0, v16, v19, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 16))(v18, a1, a10);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, a10);
    Promise.__allocating_init(value:)();
  }
  else
  {
    sub_190B8977C(a4, a5, a6, v21, (uint64_t)a2, a3, v22, a9, a10);
  }
}

uint64_t sub_190B899FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_190B89A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 24) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (uint64_t *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_190B898DC(a1, *(uint64_t (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), v1 + v3, *v4, v4[1], *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_190B89AF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = a1;
  type metadata accessor for Result(0, a2, a3, a4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

#error "190B89C70: call analysis failed (funcsize=116)"

void sub_190B89D38()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_34();
  (*(void (**)(uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1);
  OUTLINED_FUNCTION_4_36();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_9_16();
}

void sub_190B89D7C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_34();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v0);
  OUTLINED_FUNCTION_4_36();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_9_16();
}

void sub_190B89DBC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_34();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v0);
  OUTLINED_FUNCTION_4_36();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_9_16();
}

void sub_190B89E00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t TupleTypeMetadata3;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v43 = a1;
  v40 = a4;
  v6 = sub_190BE59A8();
  v42 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - v7;
  v9 = sub_190BE59A8();
  v39 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  v36 = (char *)&v36 - v10;
  v37 = a2;
  v12 = sub_190BE59A8();
  v38 = *(_QWORD *)(v12 - 8);
  v44 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v41 = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v36 - v19;
  v21 = *v43;
  v43 = (uint64_t *)type metadata accessor for Promise(0, TupleTypeMetadata3, v22, v23);
  v50 = v21;
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, a2);
  v24 = (uint64_t)v11;
  v25 = a3;
  __swift_storeEnumTagSinglePayload(v24, 1, 1, a3);
  v26 = v40;
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v40);
  v27 = &v18[*(int *)(TupleTypeMetadata3 + 48)];
  v28 = &v18[*(int *)(TupleTypeMetadata3 + 64)];
  v38 = *(_QWORD *)(v38 + 32);
  ((void (*)(char *, char *, uint64_t))v38)(v18, v14, v44);
  v39 = *(_QWORD *)(v39 + 32);
  ((void (*)(char *, char *, uint64_t))v39)(v27, v36, v45);
  v42 = *(_QWORD *)(v42 + 32);
  ((void (*)(char *, char *, uint64_t))v42)(v28, v8, v46);
  v47 = v37;
  v48 = v25;
  v49 = v26;
  type metadata accessor for WhenEither3(255, v37, v25, v26);
  v29 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v29);
  sub_190BE5264();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v18, TupleTypeMetadata3);
  v30 = *(int *)(TupleTypeMetadata3 + 48);
  v31 = &v20[v30];
  v32 = *(int *)(TupleTypeMetadata3 + 64);
  v33 = &v20[v32];
  v34 = &v18[v30];
  v35 = &v18[v32];
  ((void (*)(char *, char *, uint64_t))v38)(v18, v20, v44);
  ((void (*)(char *, char *, uint64_t))v39)(v34, v31, v45);
  ((void (*)(char *, char *, uint64_t))v42)(v35, v33, v46);
  Promise.__allocating_init(value:)();
}

uint64_t sub_190B8A124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (**v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(_QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t (**v75)(uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  void (*v79)(char *, uint64_t);
  void (*v80)(char *, uint64_t, uint64_t);
  void (*v81)(char *, uint64_t, uint64_t);
  void (*v82)(_QWORD, _QWORD);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v89 = a1;
  v93 = sub_190BE59A8();
  v92 = sub_190BE59A8();
  v91 = sub_190BE59A8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v90 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v78 - v14;
  v16 = type metadata accessor for WhenEither3(0, a3, a4, (uint64_t)a5);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v78 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v78 - v17, a2, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v85 = (char *)(a6 + *(int *)(TupleTypeMetadata3 + 48));
    v87 = a6 + *(int *)(TupleTypeMetadata3 + 64);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a6, v18, a3);
    __swift_storeEnumTagSinglePayload(a6, 0, 1, a3);
    v40 = *(int *)(TupleTypeMetadata3 + 48);
    v41 = &v15[v40];
    v42 = *(int *)(TupleTypeMetadata3 + 64);
    v88 = &v15[v42];
    v43 = v89;
    v44 = (void (*)(char *, uint64_t, uint64_t))(v89 + v40);
    v45 = v89 + v42;
    v78 = &v15[v40];
    v79 = (void (*)(char *, uint64_t))(v89 + v42);
    v86 = *(char **)(v93 - 8);
    v46 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v86 + 2);
    v81 = v44;
    v82 = v46;
    v46(v15, v89);
    v47 = v92;
    v48 = *(_QWORD *)(v92 - 8);
    v80 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
    v84 = v48;
    v80(v41, (uint64_t)v44, v92);
    v49 = v91;
    v83 = *(_QWORD *)(v91 - 8);
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
    v50(v88, v45, v91);
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v85, v78, v47);
    v51 = v90;
    v52 = &v90[*(int *)(TupleTypeMetadata3 + 48)];
    v53 = &v90[*(int *)(TupleTypeMetadata3 + 64)];
    v36 = v93;
    ((void (*)(char *, uint64_t, uint64_t))v82)(v90, v43, v93);
    v80(v52, (uint64_t)v81, v47);
    v50(v53, (uint64_t)v79, v49);
    v54 = v83;
    (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v87, v53, v49);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v47);
    v38 = (void (*)(char *, uint64_t))*((_QWORD *)v86 + 1);
    v38(v51, v36);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v88, v49);
    v39 = (uint64_t)v15;
    return ((uint64_t (*)(uint64_t, uint64_t))v38)(v39, v36);
  }
  if (EnumCaseMultiPayload == 1)
  {
    v83 = a6 + *(int *)(TupleTypeMetadata3 + 48);
    (*(void (**)(void))(*(_QWORD *)(a4 - 8) + 32))();
    v21 = *(int *)(TupleTypeMetadata3 + 64);
    v85 = (char *)(a6 + v21);
    v22 = *(int *)(TupleTypeMetadata3 + 48);
    v23 = &v15[v22];
    v88 = &v15[v21];
    v24 = v89;
    v25 = v89 + v22;
    v26 = a6;
    v27 = v89 + v21;
    v28 = *(_QWORD *)(v93 - 8);
    v86 = &v15[v22];
    v87 = v28;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v80 = (void (*)(char *, uint64_t, uint64_t))(v89 + v22);
    v81 = v29;
    ((void (*)(char *, uint64_t))v29)(v15, v89);
    v84 = *(_QWORD *)(v92 - 8);
    v79 = *(void (**)(char *, uint64_t))(v84 + 16);
    v79(v23, v25);
    v30 = v91;
    v82 = *(void (**)(_QWORD, _QWORD))(v91 - 8);
    v31 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v82 + 2);
    v31(v88, v27, v91);
    v32 = v93;
    (*(void (**)(uint64_t, char *, uint64_t))(v87 + 32))(v26, v15, v93);
    __swift_storeEnumTagSinglePayload(v83, 0, 1, a4);
    v33 = v90;
    v34 = &v90[*(int *)(TupleTypeMetadata3 + 48)];
    v35 = &v90[*(int *)(TupleTypeMetadata3 + 64)];
    v81(v90, v24, v32);
    v36 = v92;
    ((void (*)(char *, _QWORD, uint64_t))v79)(v34, v80, v92);
    v31(v35, v27, v30);
    v37 = (void (**)(char *, uint64_t))v82;
    (*((void (**)(char *, char *, uint64_t))v82 + 4))(v85, v35, v30);
    v38 = *(void (**)(char *, uint64_t))(v84 + 8);
    v38(v34, v36);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v33, v32);
    v37[1](v88, v30);
    v39 = (uint64_t)v86;
    return ((uint64_t (*)(uint64_t, uint64_t))v38)(v39, v36);
  }
  v86 = (char *)(a6 + *(int *)(TupleTypeMetadata3 + 64));
  (*(void (**)(void))(*((_QWORD *)a5 - 1) + 32))();
  v56 = *(int *)(TupleTypeMetadata3 + 48);
  v84 = a6 + v56;
  v57 = &v15[v56];
  v58 = *(int *)(TupleTypeMetadata3 + 64);
  v59 = &v15[v58];
  v85 = &v15[v58];
  v60 = v89;
  v61 = (void (*)(char *, uint64_t))(v89 + v56);
  v62 = v89 + v58;
  v63 = *(_QWORD *)(v93 - 8);
  v87 = (uint64_t)v57;
  v88 = (char *)v63;
  v81 = a5;
  v64 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
  v79 = v61;
  v80 = v64;
  ((void (*)(char *, uint64_t))v64)(v15, v89);
  v65 = v92;
  v82 = *(void (**)(_QWORD, _QWORD))(v92 - 8);
  v78 = (char *)*((_QWORD *)v82 + 2);
  ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v78)(v57, v61, v92);
  v66 = v91;
  v83 = *(_QWORD *)(v91 - 8);
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  v68 = v59;
  v69 = v62;
  v67(v68, v62, v91);
  v70 = v67;
  v71 = v93;
  (*((void (**)(uint64_t, char *, uint64_t))v88 + 4))(a6, v15, v93);
  v72 = v90;
  v73 = &v90[*(int *)(TupleTypeMetadata3 + 48)];
  v74 = &v90[*(int *)(TupleTypeMetadata3 + 64)];
  v80(v90, v60, v71);
  ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v78)(v73, v79, v65);
  v70(v74, v69, v66);
  v75 = (uint64_t (**)(uint64_t, uint64_t))v82;
  v76 = v65;
  (*((void (**)(uint64_t, char *, uint64_t))v82 + 4))(v84, v73, v65);
  __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, (uint64_t)v81);
  v77 = *(void (**)(char *, uint64_t))(v83 + 8);
  v77(v74, v66);
  (*((void (**)(char *, uint64_t))v88 + 1))(v72, v71);
  v77(v85, v66);
  return v75[1](v87, v76);
}

uint64_t whenSome<A, B>(_:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[8] = a4;
  v5[9] = a5;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v5[10] = *(_QWORD *)(a5 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  OUTLINED_FUNCTION_43_0();
  v6 = OUTLINED_FUNCTION_17_22();
  v5[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 + 64);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190B8A7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 40);
  v3 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v0 + 144) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v4;
  v5 = sub_190BE5438();
  v6 = MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v5);
  *v4 = v0;
  v4[1] = sub_190B8A8C4;
  return Sequence<>.concurrentMap<A>(_:)((uint64_t)&unk_1EE200368, v3, v5, *(_QWORD *)(v0 + 104), v6);
}

uint64_t sub_190B8A8C4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_2();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B8A91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = sub_190BE4D78();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE5318();
  OUTLINED_FUNCTION_2_0();
  v22 = v0;
  if (v0 != MEMORY[0x194015698](v2, v3))
  {
    v5 = 0;
    v7 = *(_QWORD *)(v1 + 112);
    v6 = *(_QWORD *)(v1 + 120);
    v8 = *(_QWORD *)(v1 + 80);
    while (1)
    {
      v9 = sub_190BE539C();
      sub_190BE5348();
      if ((v9 & 1) != 0)
      {
        (*(void (**)(_QWORD, unint64_t, _QWORD))(v7 + 16))(*(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 160)+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v0, *(_QWORD *)(v1 + 104));
      }
      else
      {
        result = sub_190BE5C78();
        if (v6 != 8)
        {
          __break(1u);
          return result;
        }
        v17 = result;
        v18 = *(_QWORD *)(v1 + 136);
        v19 = *(_QWORD *)(v1 + 104);
        *(_QWORD *)(v1 + 24) = v17;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v18, v1 + 24, v19);
        swift_unknownObjectRelease();
      }
      v10 = *(_QWORD *)(v1 + 160);
      v11 = *(_QWORD *)(v1 + 104);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      MEMORY[0x1940156B0](&v22, v10, v11);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_20(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v13 = *(void ***)(v1 + 128);
      if (EnumCaseMultiPayload == 1)
      {
        OUTLINED_FUNCTION_38_10();
        v5 = *v13;
      }
      else
      {
        v14 = *(_QWORD *)(v1 + 96);
        v15 = *(_QWORD *)(v1 + 72);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v14, *(_QWORD *)(v1 + 128), v15);
        OUTLINED_FUNCTION_22_20(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
        OUTLINED_FUNCTION_35_14();
        sub_190BE53D8();
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v15);
      }
      v0 = v22;
      if (v0 == MEMORY[0x194015698](*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 104)))
        goto LABEL_13;
    }
  }
  v5 = 0;
LABEL_13:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v4;
  v20 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v20);
  if ((sub_190BE5798() & 1) != 0)
  {
    if (v5)
    {
      v21 = v5;
      swift_bridgeObjectRelease();
      swift_willThrow();
      OUTLINED_FUNCTION_38_10();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
  }
  else
  {
    OUTLINED_FUNCTION_38_10();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
}

uint64_t sub_190B8AC04(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v6[2] = a1;
  v6[3] = a6;
  v6[4] = *(_QWORD *)(a6 - 8);
  v9 = swift_task_alloc();
  v6[5] = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v10 = (_QWORD *)swift_task_alloc();
  v6[6] = v10;
  *v10 = v6;
  v10[1] = sub_190B8AC9C;
  return v12(v9, a2);
}

uint64_t sub_190B8AC9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B8ACF8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 32))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_17_22();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B8AD5C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_17_22();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B8ADB4()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8ADC0()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8ADCC()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8ADD8()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8ADE4()
{
  OUTLINED_FUNCTION_23_20();
  sub_190B89D38();
}

uint64_t type metadata accessor for WhenEither3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WhenEither3);
}

uint64_t sub_190B8AE08()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AE14()
{
  OUTLINED_FUNCTION_23_20();
  sub_190B89D7C();
}

uint64_t sub_190B8AE2C()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AE38()
{
  OUTLINED_FUNCTION_23_20();
  sub_190B89DBC();
}

uint64_t sub_190B8AE50()
{
  return OUTLINED_FUNCTION_1_4();
}

char *sub_190B8AE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_20();
  return sub_190B88A60(v0, v1, v2, v3);
}

uint64_t sub_190B8AE74()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_19();
  sub_190B89094(v0, v1, v2);
}

void type metadata accessor for WhenEither4()
{
  JUMPOUT(0x194016E74);
}

uint64_t sub_190B8AEA4()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_19();
  sub_190B8911C(v0, v1, v2);
}

uint64_t sub_190B8AEC8()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_19();
  sub_190B891A0(v0, v1, v2);
}

uint64_t sub_190B8AEEC()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_19();
  sub_190B89228(v0, v1, v2);
}

uint64_t sub_190B8AF10()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_24_19();
  sub_190B892B0(v0, v1, v2, v3, v4);
}

uint64_t sub_190B8AF34()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8AF40()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8AF4C()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8AF58()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8AF64()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8AF70()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8AF7C()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8AF88()
{
  return OUTLINED_FUNCTION_1_4();
}

void sub_190B8AF94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_20();
  sub_190B89E00(v0, v1, v2, v3);
}

uint64_t sub_190B8AFAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B8AFD0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = (int *)v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_190B51F84;
  return sub_190B8AC04(a1, a2, v9, v8, v6, v7);
}

ValueMetadata *type metadata accessor for WhenError()
{
  return &type metadata for WhenError;
}

uint64_t sub_190B8B060()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

_QWORD *sub_190B8B128(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *result;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  if (*(_QWORD *)(v5 + 64) <= *(_QWORD *)(v4 + 64))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a3[4] - 8);
  v8 = *(_QWORD *)(v7 + 64);
  if (v8 <= v6)
    v8 = v6;
  v9 = *(_QWORD *)(a3[5] - 8);
  if (*(_QWORD *)(v9 + 64) <= v8)
    v10 = v8;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80);
  v12 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80) | *(_BYTE *)(v7 + 80) | v11);
  if (v12 <= 7
    && v10 + 1 <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v7 + 80) | v11) & 0x100000) == 0)
  {
    switch(*((_BYTE *)a2 + v10))
    {
      case 0:
        (*(void (**)(_QWORD *))(v4 + 16))(a1);
        *((_BYTE *)a1 + v10) = 0;
        return a1;
      case 1:
        (*(void (**)(_QWORD *))(v5 + 16))(a1);
        v17 = 1;
        goto LABEL_27;
      case 2:
        (*(void (**)(_QWORD *))(v7 + 16))(a1);
        v17 = 2;
        goto LABEL_27;
      case 3:
        (*(void (**)(_QWORD *))(v9 + 16))(a1);
        v17 = 3;
LABEL_27:
        *((_BYTE *)a1 + v10) = v17;
        break;
      default:
        if (v10 <= 3)
          v16 = v10;
        else
          v16 = 4;
        __asm { BR              X3 }
        return result;
    }
  }
  else
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  return a1;
}

uint64_t sub_190B8B2CC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v2 = a2[3];
  v3 = *(_QWORD *)(a2[2] - 8);
  v4 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v4 + 64) <= *(_QWORD *)(v3 + 64))
    v5 = *(_QWORD *)(v3 + 64);
  else
    v5 = *(_QWORD *)(v4 + 64);
  v7 = a2[4];
  v6 = a2[5];
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  if (v8 <= v5)
    v8 = v5;
  v9 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v9 + 64) > v8)
    v8 = *(_QWORD *)(v9 + 64);
  switch(*(_BYTE *)(a1 + v8))
  {
    case 0:
      goto LABEL_17;
    case 1:
      v3 = *(_QWORD *)(v2 - 8);
      goto LABEL_17;
    case 2:
      v3 = *(_QWORD *)(v7 - 8);
      goto LABEL_17;
    case 3:
      v3 = *(_QWORD *)(v6 - 8);
LABEL_17:
      result = (*(uint64_t (**)(void))(v3 + 8))();
      break;
    default:
      if (*(unsigned __int8 *)(a1 + v8) <= 3u)
        v10 = *(unsigned __int8 *)(a1 + v8);
      else
        v10 = 4;
      result = ((uint64_t (*)(void))((char *)&loc_190B8B344 + 4 * byte_190BEDED1[v10]))();
      break;
  }
  return result;
}

uint64_t sub_190B8B3C8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;

  v4 = a3[3];
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v9 = a3[4];
  v8 = a3[5];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  if (v10 <= v7)
    v10 = v7;
  v11 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v11 + 64) <= v10)
    v12 = v10;
  else
    v12 = *(_QWORD *)(v11 + 64);
  v14 = 0;
  switch(*(_BYTE *)(a2 + v12))
  {
    case 0:
      break;
    case 1:
      v14 = 1;
      v5 = *(_QWORD *)(v4 - 8);
      break;
    case 2:
      v14 = 2;
      v5 = *(_QWORD *)(v9 - 8);
      break;
    case 3:
      v14 = 3;
      v5 = *(_QWORD *)(v8 - 8);
      break;
    default:
      if (v12 <= 3)
        v13 = v12;
      else
        v13 = 4;
      __asm { BR              X3 }
      return result;
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(_BYTE *)(a1 + v12) = v14;
  return a1;
}

uint64_t sub_190B8B504(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t v21;

  if (a1 != a2)
  {
    v5 = a3[2];
    v6 = a3[3];
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v21 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v21 + 64) > v8)
      v8 = *(_QWORD *)(v21 + 64);
    v9 = a3[4];
    v10 = a3[5];
    v11 = *(_QWORD *)(v9 - 8);
    if (*(_QWORD *)(v11 + 64) > v8)
      v8 = *(_QWORD *)(v11 + 64);
    v12 = *(_QWORD *)(v10 - 8);
    if (*(_QWORD *)(v12 + 64) <= v8)
      v13 = v8;
    else
      v13 = *(_QWORD *)(v12 + 64);
    v15 = *(_QWORD *)(v5 - 8);
    v16 = a3[2];
    switch(*(_BYTE *)(a1 + v13))
    {
      case 0:
        break;
      case 1:
        v15 = *(_QWORD *)(v6 - 8);
        v16 = a3[3];
        break;
      case 2:
        v15 = *(_QWORD *)(v9 - 8);
        v16 = a3[4];
        break;
      case 3:
        v15 = *(_QWORD *)(v10 - 8);
        v16 = a3[5];
        break;
      default:
        if (v13 <= 3)
          v14 = v13;
        else
          v14 = 4;
        __asm { BR              X12 }
        return result;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v16);
    v18 = v6;
    v19 = 0;
    switch(*(_BYTE *)(a2 + v13))
    {
      case 0:
        break;
      case 1:
        v19 = 1;
        v7 = v21;
        v5 = v18;
        break;
      case 2:
        v19 = 2;
        v7 = v11;
        v5 = v9;
        break;
      case 3:
        v19 = 3;
        v7 = v12;
        v5 = v10;
        break;
      default:
        if (v13 <= 3)
          v17 = v13;
        else
          v17 = 4;
        __asm { BR              X12 }
        return result;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v13) = v19;
  }
  return a1;
}

uint64_t sub_190B8B734(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;

  v4 = a3[3];
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v9 = a3[4];
  v8 = a3[5];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  if (v10 <= v7)
    v10 = v7;
  v11 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v11 + 64) <= v10)
    v12 = v10;
  else
    v12 = *(_QWORD *)(v11 + 64);
  v14 = 0;
  switch(*(_BYTE *)(a2 + v12))
  {
    case 0:
      break;
    case 1:
      v14 = 1;
      v5 = *(_QWORD *)(v4 - 8);
      break;
    case 2:
      v14 = 2;
      v5 = *(_QWORD *)(v9 - 8);
      break;
    case 3:
      v14 = 3;
      v5 = *(_QWORD *)(v8 - 8);
      break;
    default:
      if (v12 <= 3)
        v13 = v12;
      else
        v13 = 4;
      __asm { BR              X3 }
      return result;
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(_BYTE *)(a1 + v12) = v14;
  return a1;
}

uint64_t sub_190B8B870(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t v21;

  if (a1 != a2)
  {
    v5 = a3[2];
    v6 = a3[3];
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v21 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v21 + 64) > v8)
      v8 = *(_QWORD *)(v21 + 64);
    v9 = a3[4];
    v10 = a3[5];
    v11 = *(_QWORD *)(v9 - 8);
    if (*(_QWORD *)(v11 + 64) > v8)
      v8 = *(_QWORD *)(v11 + 64);
    v12 = *(_QWORD *)(v10 - 8);
    if (*(_QWORD *)(v12 + 64) <= v8)
      v13 = v8;
    else
      v13 = *(_QWORD *)(v12 + 64);
    v15 = *(_QWORD *)(v5 - 8);
    v16 = a3[2];
    switch(*(_BYTE *)(a1 + v13))
    {
      case 0:
        break;
      case 1:
        v15 = *(_QWORD *)(v6 - 8);
        v16 = a3[3];
        break;
      case 2:
        v15 = *(_QWORD *)(v9 - 8);
        v16 = a3[4];
        break;
      case 3:
        v15 = *(_QWORD *)(v10 - 8);
        v16 = a3[5];
        break;
      default:
        if (v13 <= 3)
          v14 = v13;
        else
          v14 = 4;
        __asm { BR              X12 }
        return result;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v16);
    v18 = v6;
    v19 = 0;
    switch(*(_BYTE *)(a2 + v13))
    {
      case 0:
        break;
      case 1:
        v19 = 1;
        v7 = v21;
        v5 = v18;
        break;
      case 2:
        v19 = 2;
        v7 = v11;
        v5 = v9;
        break;
      case 3:
        v19 = 3;
        v7 = v12;
        v5 = v10;
        break;
      default:
        if (v13 <= 3)
          v17 = v13;
        else
          v17 = 4;
        __asm { BR              X12 }
        return result;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v13) = v19;
  }
  return a1;
}

uint64_t sub_190B8BAA0(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a3[5] - 8) + 64);
  if (v4 <= v3)
    v4 = v3;
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_25;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 252) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v9 < 2)
    {
LABEL_25:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 4)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_25;
LABEL_18:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 253);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B8BB8C + 4 * byte_190BEDF10[(v5 - 1)]))();
}

void sub_190B8BBD8(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a4[4] - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(a4[4] - 8) + 64);
  v6 = a4[5];
  if (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v7 = v5 + 1;
  v8 = 8 * (v5 + 1);
  if (a3 < 0xFD)
  {
    v9 = 0u;
  }
  else if (v7 <= 3)
  {
    v11 = ((a3 + ~(-1 << v8) - 252) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v10 = a2 - 253;
  if (v7 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v12 = v10 & ~(-1 << v8);
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v7 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B8BDA4(uint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64) > v2)
    v2 = *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a2[4] - 8) + 64) > v2)
    v2 = *(_QWORD *)(*(_QWORD *)(a2[4] - 8) + 64);
  v3 = *(_QWORD *)(*(_QWORD *)(a2[5] - 8) + 64);
  if (v3 <= v2)
    v3 = v2;
  if (*(unsigned __int8 *)(a1 + v3) < 4u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B8BE14 + 4 * byte_190BEDF1E[v4]))();
}

void sub_190B8BE5C(_BYTE *a1, unsigned int a2, _QWORD *a3)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  if (a2 > 3)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64) > v7)
      v7 = *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64) > v7)
      v7 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
    v8 = a3[5];
    if (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) <= v7)
      v9 = v7;
    else
      v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
    v10 = a2 - 4;
    if (v9 < 4)
    {
      v11 = v10 >> (8 * v9);
      v12 = v10 & ~(-1 << (8 * v9));
      a1[v9] = v11 + 4;
      bzero(a1, v9);
      if ((_DWORD)v9 == 3)
      {
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
      }
      else if ((_DWORD)v9 == 2)
      {
        *(_WORD *)a1 = v12;
      }
      else
      {
        *a1 = v12;
      }
    }
    else
    {
      a1[v9] = 4;
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
    }
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a3[5] - 8) + 64);
    v5 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
    v6 = *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64);
    if (v6 <= *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64))
      v6 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
    if (v5 <= v6)
      v5 = v6;
    if (v4 <= v5)
      v4 = v5;
    a1[v4] = a2;
  }
}

uint64_t sub_190B8BF8C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_190B8C034(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;

  v3 = a1;
  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (v6 <= *(_QWORD *)(v4 + 64))
    v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(a3[4] - 8);
  if (*(_QWORD *)(v7 + 64) <= v6)
    v8 = v6;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80) | *(_BYTE *)(v7 + 80));
  if (v9 <= 7
    && v8 + 1 <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) == 0)
  {
    v13 = *((unsigned __int8 *)a2 + v8);
    if (v13 >= 3)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X17 }
    }
    if (v13 == 2)
    {
      (*(void (**)(uint64_t *))(v7 + 16))(a1);
      v15 = 2;
    }
    else
    {
      if (v13 != 1)
      {
        (*(void (**)(uint64_t *))(v4 + 16))(a1);
        *((_BYTE *)v3 + v8) = 0;
        return v3;
      }
      (*(void (**)(uint64_t *))(v5 + 16))(a1);
      v15 = 1;
    }
    *((_BYTE *)v3 + v8) = v15;
  }
  else
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v9 + 16) & ~v9));
    swift_retain();
  }
  return v3;
}

uint64_t sub_190B8C198(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v3 = a2[3];
  v2 = a2[4];
  v4 = *(_QWORD *)(a2[2] - 8);
  v5 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  if (v5 <= *(_QWORD *)(v4 + 64))
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v6 + 64) > v5)
    v5 = *(_QWORD *)(v6 + 64);
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (v7 < 3)
  {
    if (*(_BYTE *)(a1 + v5))
    {
      if (v7 == 2)
        v4 = *(_QWORD *)(v2 - 8);
      else
        v4 = *(_QWORD *)(v3 - 8);
    }
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  else
  {
    if (v5 <= 3)
      v8 = v5;
    else
      v8 = 4;
    return ((uint64_t (*)(void))((char *)&loc_190B8C1FC + 4 * byte_190BEDF28[v8]))();
  }
}

uint64_t sub_190B8C264(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (v7 <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  v8 = a3[4];
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= v7)
    v10 = v7;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X17 }
  }
  if (*(_BYTE *)(a2 + v10))
  {
    if (v11 == 2)
    {
      v13 = 2;
      v6 = *(_QWORD *)(v8 - 8);
    }
    else
    {
      v13 = 1;
    }
  }
  else
  {
    v13 = 0;
    v6 = *(_QWORD *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v6 + 16))(a1);
  *(_BYTE *)(a1 + v10) = v13;
  return a1;
}

uint64_t sub_190B8C370(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v5 = a3[2];
    v6 = a3[3];
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    v10 = a3[4];
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_QWORD *)(v11 + 64) <= v8)
      v12 = v8;
    else
      v12 = *(_QWORD *)(v11 + 64);
    v13 = *(unsigned __int8 *)(a1 + v12);
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    v15 = *(_QWORD *)(v5 - 8);
    v16 = a3[2];
    if (*(_BYTE *)(a1 + v12))
    {
      v15 = *(_QWORD *)(v10 - 8);
      v16 = a3[4];
      if (v13 != 2)
      {
        v15 = *(_QWORD *)(v6 - 8);
        v16 = a3[3];
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v16);
    v17 = *(unsigned __int8 *)(a2 + v12);
    if (v17 >= 3)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (*(_BYTE *)(a2 + v12))
    {
      if (v17 == 2)
      {
        v19 = 2;
        v7 = v11;
        v5 = v10;
      }
      else
      {
        v19 = 1;
        v7 = v9;
        v5 = v6;
      }
    }
    else
    {
      v19 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v12) = v19;
  }
  return a1;
}

uint64_t sub_190B8C544(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (v7 <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  v8 = a3[4];
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= v7)
    v10 = v7;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X17 }
  }
  if (*(_BYTE *)(a2 + v10))
  {
    if (v11 == 2)
    {
      v13 = 2;
      v6 = *(_QWORD *)(v8 - 8);
    }
    else
    {
      v13 = 1;
    }
  }
  else
  {
    v13 = 0;
    v6 = *(_QWORD *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v6 + 32))(a1);
  *(_BYTE *)(a1 + v10) = v13;
  return a1;
}

uint64_t sub_190B8C650(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v5 = a3[2];
    v6 = a3[3];
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    v10 = a3[4];
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_QWORD *)(v11 + 64) <= v8)
      v12 = v8;
    else
      v12 = *(_QWORD *)(v11 + 64);
    v13 = *(unsigned __int8 *)(a1 + v12);
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    v15 = *(_QWORD *)(v5 - 8);
    v16 = a3[2];
    if (*(_BYTE *)(a1 + v12))
    {
      v15 = *(_QWORD *)(v10 - 8);
      v16 = a3[4];
      if (v13 != 2)
      {
        v15 = *(_QWORD *)(v6 - 8);
        v16 = a3[3];
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v16);
    v17 = *(unsigned __int8 *)(a2 + v12);
    if (v17 >= 3)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (*(_BYTE *)(a2 + v12))
    {
      if (v17 == 2)
      {
        v19 = 2;
        v7 = v11;
        v5 = v10;
      }
      else
      {
        v19 = 1;
        v7 = v9;
        v5 = v6;
      }
    }
    else
    {
      v19 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v12) = v19;
  }
  return a1;
}

uint64_t sub_190B8C824(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
  if (v4 <= v3)
    v4 = v3;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_23:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B8C900 + 4 * byte_190BEDF4B[(v5 - 1)]))();
}

void sub_190B8C94C(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a4[4] - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(a4[4] - 8) + 64);
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B8CB08(uint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64) > v2)
    v2 = *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64);
  v3 = *(_QWORD *)(*(_QWORD *)(a2[4] - 8) + 64);
  if (v3 <= v2)
    v3 = v2;
  if (*(unsigned __int8 *)(a1 + v3) < 3u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B8CB68 + 4 * byte_190BEDF59[v4]))();
}

void sub_190B8CBB0(_BYTE *a1, unsigned int a2, _QWORD *a3)
{
  size_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64);
  if (a2 > 2)
  {
    if (v4 <= *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64) <= v4)
      v5 = v4;
    else
      v5 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
    v6 = a2 - 3;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 3;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    if (v4 <= *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64) > v4)
      v4 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
    a1[v4] = a2;
  }
}

uint64_t *sub_190B8CCBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v5 + 64) <= *(_QWORD *)(v4 + 64))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    v11 = *((unsigned __int8 *)a2 + v6);
    if (v11 >= 2)
    {
      if (v6 <= 3)
        v12 = v6;
      else
        v12 = 4;
      __asm { BR              X15 }
    }
    if (v11 == 1)
    {
      (*(void (**)(uint64_t *))(v5 + 16))(a1);
      *((_BYTE *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v6) = 0;
    }
  }
  else
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_190B8CDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_190B8CF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_190B8D038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_190B8D1B4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v3 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B8D27C + 4 * byte_190BEDF86[(v4 - 1)]))();
}

void sub_190B8D2C8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190B8D470(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (v2 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64))
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B8D4BC + 4 * byte_190BEDF94[v3]))();
}

void sub_190B8D504(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  if (a2 > 1)
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16)
                                                                                              - 8)
                                                                                  + 64))
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    else
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    if (v4 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    a1[v4] = a2;
  }
}

uint64_t sub_190B8D5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_190B8A124(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(char *, uint64_t, uint64_t))(v3 + 32), a3);
}

uint64_t sub_190B8D608()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t sub_190B8D614()
{
  return OUTLINED_FUNCTION_1_4();
}

id sub_190B8D620@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_190B89AF0(a1, *(_QWORD *)(v4 + 16), a2, a3, a4);
}

unint64_t sub_190B8D638()
{
  unint64_t result;

  result = qword_1EE200370;
  if (!qword_1EE200370)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for WhenError, &type metadata for WhenError);
    atomic_store(result, (unint64_t *)&qword_1EE200370);
  }
  return result;
}

void sub_190B8D674()
{
  sub_190B8ADE4();
}

void sub_190B8D688()
{
  sub_190B8AE14();
}

void sub_190B8D69C()
{
  sub_190B8AE38();
}

uint64_t sub_190B8D6C4()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_190B8D6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  OUTLINED_FUNCTION_0();
}

_QWORD *sub_190B8D728(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

void sub_190B8D784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B8D7C4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_190B8D804(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_190B8D844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190B8D85C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190B8D950);
}

uint64_t sub_190B8D850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190B8D85C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190B8DA28);
}

uint64_t sub_190B8D85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;

  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  a5(a1, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  return v10;
}

uint64_t sub_190B8D8E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_190B8D908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 1;
}

void sub_190B8D92C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B8D948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190B8D8E8(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t (*sub_190B8D950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_190B8DB40;
}

uint64_t sub_190B8DA18()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_190B8DA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190B8D908(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

void (*sub_190B8DA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_190B8DB20;
}

void sub_190B8DAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_190B8D92C(a1, a2, *(void (**)(void))(v2 + 8));
}

uint64_t sub_190B8DAFC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_0_61();
  return v0();
}

void sub_190B8DB20()
{
  void (*v0)(void);

  OUTLINED_FUNCTION_0_61();
  v0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B8DB40()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_0_61();
  return v0() & 1;
}

uint64_t static NetworkResponseOperationError.== infix(_:_:)(uint64_t *a1, id *a2)
{
  uint64_t v2;
  id v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (v3)
      goto LABEL_12;
    v2 = 0;
LABEL_10:
    v4 = 1;
    goto LABEL_13;
  }
  if (v2 == 1)
  {
    if (v3 != (id)1)
      goto LABEL_12;
    v2 = 1;
    goto LABEL_10;
  }
  if (v2 != 2)
  {
    if ((unint64_t)v3 >= 3)
    {
      sub_190B8DC5C();
      sub_190B8DC3C(v3);
      sub_190B8DC3C((id)v2);
      v4 = sub_190BE5978();
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v3 != (id)2)
  {
LABEL_12:
    sub_190B8DC3C(*a2);
    sub_190B8DC3C((id)v2);
    v4 = 0;
    goto LABEL_13;
  }
  v4 = 1;
  v2 = 2;
LABEL_13:
  sub_190B8DC4C((id)v2);
  sub_190B8DC4C(v3);
  return v4 & 1;
}

id sub_190B8DC3C(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

void sub_190B8DC4C(id a1)
{
  if ((unint64_t)a1 >= 3)

}

unint64_t sub_190B8DC5C()
{
  unint64_t result;

  result = qword_1ED034910;
  if (!qword_1ED034910)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED034910);
  }
  return result;
}

uint64_t NetworkOperationResult.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190B8DCA8(v1, a1);
}

uint64_t sub_190B8DCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190B1D6C0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *NetworkOperationResult.response.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 28));
  v3 = v2;
  return v2;
}

uint64_t NetworkOperationResult.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t sub_190B8DD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_190B8F998(a1, a5);
  v11 = type metadata accessor for NetworkOperationResult(0, a4, v9, v10);
  *(_QWORD *)(a5 + *(int *)(v11 + 28)) = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5 + *(int *)(v11 + 32), a3, a4);
}

uint64_t NetworkResponseOperation.eventHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + qword_1ED033838) + qword_1ED033D70);
  swift_beginAccess();
  v2 = *v1;
  sub_190AFCCE8(*v1);
  return v2;
}

uint64_t sub_190B8DDFC@<X0>(void (**a1)(uint64_t a1)@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  result = NetworkResponseOperation.eventHandler.getter();
  if (result)
  {
    v4 = result;
    v5 = v3;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v5;
    v6 = sub_190B8F990;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)(uint64_t))result;
  return result;
}

uint64_t sub_190B8DE60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_190B8F990;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_190AFCCE8(v1);
  return NetworkResponseOperation.eventHandler.setter((uint64_t)v4, v3);
}

uint64_t NetworkResponseOperation.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(*(_QWORD *)(v2 + qword_1ED033838) + qword_1ED033D70);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_190AB9930(v6);
}

uint64_t (*NetworkResponseOperation.eventHandler.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = NetworkResponseOperation.eventHandler.getter();
  a1[1] = v3;
  return sub_190B8DF80;
}

uint64_t sub_190B8DF80(uint64_t *a1, char a2)
{
  uint64_t v2;

  v2 = *a1;
  if ((a2 & 1) == 0)
    return OUTLINED_FUNCTION_19_24();
  sub_190AFCCE8(*a1);
  OUTLINED_FUNCTION_19_24();
  return sub_190AB9930(v2);
}

void NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_3_50();
  NetworkResponseOperation.init(requestAccessor:networkProxy:)(a1, a2);
  OUTLINED_FUNCTION_4();
}

id NetworkResponseOperation.init(requestAccessor:networkProxy:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  objc_class *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;
  _BYTE v12[48];

  v4 = (objc_class *)OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_6_40((uint64_t)v4, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xF0), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xF8), v5);
  sub_190B77F48(a2, (uint64_t)v12);
  v6 = v2;
  v7 = swift_retain();
  NetworkOperation.__allocating_init(requestAccessor:networkProxy:)(v7);
  *(_QWORD *)((char *)v6 + qword_1ED033838) = v8;

  v11.receiver = v6;
  v11.super_class = v4;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  OUTLINED_FUNCTION_18_0();
  return v9;
}

void NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_3_50();
  OUTLINED_FUNCTION_21_18();
  NetworkResponseOperation.init(requestAccessor:networkProxy:earliestBeginDate:)();
  OUTLINED_FUNCTION_4();
}

void NetworkResponseOperation.init(requestAccessor:networkProxy:earliestBeginDate:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_105();
  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = OUTLINED_FUNCTION_0_1();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_0();
  v6 = v5 - v4;
  OUTLINED_FUNCTION_6_40(v7, *(_QWORD *)(v1 + 240), *(_QWORD *)(v1 + 248), v8);
  OUTLINED_FUNCTION_17_23();
  OUTLINED_FUNCTION_9_37(v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v9 = v0;
  v10 = swift_retain();
  NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(v10, (uint64_t)&v13, v6);
  *(_QWORD *)((char *)v9 + qword_1ED033838) = v11;

  OUTLINED_FUNCTION_8_39(v12, sel_init);
  OUTLINED_FUNCTION_20_19();
  OUTLINED_FUNCTION_7_39(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

void NetworkResponseOperation.__allocating_init(request:networkProxy:)()
{
  OUTLINED_FUNCTION_3_50();
  NetworkResponseOperation.init(request:networkProxy:)();
  OUTLINED_FUNCTION_4();
}

void NetworkResponseOperation.init(request:networkProxy:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_72();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_105();
  v6 = *MEMORY[0x1E0DEEDD8] & *v0;
  v7 = sub_190BE428C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_6_40(v9, *(_QWORD *)(v6 + 240), *(_QWORD *)(v6 + 248), v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v1, v5, v7);
  sub_190B77F48(v3, (uint64_t)&v14);
  v11 = v0;
  NetworkOperation.__allocating_init(request:networkProxy:)();
  *(_QWORD *)((char *)v11 + qword_1ED033838) = v12;

  OUTLINED_FUNCTION_8_39(v13, sel_init);
  sub_190B77D18(v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

void NetworkResponseOperation.__allocating_init(request:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_3_50();
  OUTLINED_FUNCTION_21_18();
  NetworkResponseOperation.init(request:networkProxy:earliestBeginDate:)();
  OUTLINED_FUNCTION_4();
}

void NetworkResponseOperation.init(request:networkProxy:earliestBeginDate:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_72();
  v20 = v2;
  v21 = v3;
  v5 = v4;
  v19 = v4;
  OUTLINED_FUNCTION_105();
  v6 = *MEMORY[0x1E0DEEDD8] & *v0;
  v7 = OUTLINED_FUNCTION_0_1();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_0();
  v11 = v10 - v9;
  v12 = sub_190BE428C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_6_40(v14, *(_QWORD *)(v6 + 240), *(_QWORD *)(v6 + 248), v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v1, v5, v12);
  sub_190B77F48(v20, (uint64_t)&v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v21, v7);
  v16 = v0;
  NetworkOperation.__allocating_init(request:networkProxy:earliestBeginDate:)();
  *(_QWORD *)((char *)v16 + qword_1ED033838) = v17;

  OUTLINED_FUNCTION_8_39(v18, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v21, v7);
  sub_190B77D18(v20);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v19, v12);
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

void NetworkResponseOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_2_53();
  OUTLINED_FUNCTION_10_35();
  NetworkResponseOperation.init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)();
  OUTLINED_FUNCTION_9();
}

void NetworkResponseOperation.init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_72();
  swift_getObjectType();
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  v3 = OUTLINED_FUNCTION_0_1();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_6_40(v5, *(_QWORD *)(v2 + 240), *(_QWORD *)(v2 + 248), v6);
  OUTLINED_FUNCTION_17_23();
  OUTLINED_FUNCTION_9_37(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v7 = v0;
  swift_retain();
  NetworkOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)();
  *(_QWORD *)((char *)v7 + qword_1ED033838) = v8;

  OUTLINED_FUNCTION_8_39(v9, sel_init);
  OUTLINED_FUNCTION_20_19();
  OUTLINED_FUNCTION_7_39(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

void NetworkResponseOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)()
{
  OUTLINED_FUNCTION_2_53();
  OUTLINED_FUNCTION_10_35();
  NetworkResponseOperation.init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)();
  OUTLINED_FUNCTION_9();
}

void NetworkResponseOperation.init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_72();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v20 = v5;
  OUTLINED_FUNCTION_105();
  v7 = *MEMORY[0x1E0DEEDD8] & *v0;
  v8 = OUTLINED_FUNCTION_0_1();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_0();
  v12 = v11 - v10;
  v13 = sub_190BE4628();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_6_40(v15, *(_QWORD *)(v7 + 240), *(_QWORD *)(v7 + 248), v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v1, v6, v13);
  sub_190B77F48(v4, (uint64_t)&v21);
  OUTLINED_FUNCTION_9_37(v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v17 = v2;
  NetworkOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)();
  *(_QWORD *)&v17[qword_1ED033838] = v18;

  OUTLINED_FUNCTION_8_39(v19, sel_init);
  OUTLINED_FUNCTION_7_39(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_190B77D18(v4);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v20, v13);
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

uint64_t NetworkResponseOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *MEMORY[0x1E0DEEDD8] & *v2;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = *(_QWORD *)(v5 + 240);
  v6[3] = *(_QWORD *)(v5 + 248);
  v6[4] = a1;
  v6[5] = a2;
  swift_retain();
  sub_190B91E30((uint64_t)sub_190B8E8CC, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_190B8E7C0(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = type metadata accessor for NetworkOperationResult(255, AssociatedTypeWitness, v10, v11);
  v15 = type metadata accessor for Result(0, v12, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v21 - v17;
  type metadata accessor for NetworkResponseOperation(0, a4, a5, v19);
  sub_190B8E8D8(a1, v18);
  a2(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_190B8E8A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B8E8CC(uint64_t a1)
{
  uint64_t v1;

  return sub_190B8E7C0(a1, *(void (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_190B8E8D8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void *v15;
  void *v16;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for NetworkOperationResult(255, AssociatedTypeWitness, v5, v6);
  v10 = type metadata accessor for Result(0, v7, v8, v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (void **)((char *)&v18 - v11);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14((char *)&v18 - v11, a1, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = *v12;
    v16 = sub_190B8E9F4(*v12);

    *(_QWORD *)a2 = v16;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    v14(a2, a1, v10);
    return (*(uint64_t (**)(void **, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v12, v7);
  }
}

void *sub_190B8E9F4(void *a1)
{
  void *v1;
  id v2;
  _QWORD *v3;
  id v4;
  uint64_t v6;

  v1 = a1;
  v2 = a1;
  sub_190ABC730();
  if (swift_dynamicCast())
  {
    sub_190B8F9DC();
    v1 = (void *)swift_allocError();
    *v3 = v6;
  }
  else
  {
    v4 = v1;
  }
  return v1;
}

id NetworkResponseOperation.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_3_50(), sel_init);
}

void NetworkResponseOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_190B8EAC8()
{
  NetworkResponseOperation.init()();
}

void sub_190B8EAD4()
{
  uint64_t v0;

}

id NetworkResponseOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_105();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B8EB1C()
{
  return 16;
}

__n128 sub_190B8EB28(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for NetworkResponseOperationError(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for NetworkResponseOperationError(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for NetworkResponseOperationError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for NetworkResponseOperationError(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkResponseOperationError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NetworkResponseOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkResponseOperationError()
{
  return &type metadata for NetworkResponseOperationError;
}

void sub_190B8ED20()
{
  unint64_t v0;
  unint64_t v1;

  sub_190B1D6C0(319);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_190B8EDB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  void **v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  id v28;

  v6 = sub_190BE428C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84))
    v8 = *(_QWORD *)(v7 + 64);
  else
    v8 = *(_QWORD *)(v7 + 64) + 1;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  v13 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~(unint64_t)v11)
      + *(_QWORD *)(v10 + 64);
  v14 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  v15 = (*(_DWORD *)(v7 + 80) | v11) & 0x100000;
  if (v14 > 7 || v15 != 0 || v13 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    v19 = v6;
    v20 = ~v12;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v19);
    }
    v22 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    v23 = (void **)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    *v22 = *v23;
    v25 = ((unint64_t)v22 + v12 + 8) & v20;
    v26 = ((unint64_t)v23 + v12 + 8) & v20;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v28 = v24;
    v27(v25, v26, v9);
  }
  return a1;
}

uint64_t sub_190B8EF28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  uint64_t v6;
  uint64_t v7;
  id *v8;

  v4 = sub_190BE428C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v4);
  v6 = *(_QWORD *)(v4 - 8);
  if (!EnumTagSinglePayload)
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  v7 = a1 + *(_QWORD *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84))
    ++v7;
  v8 = (id *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);

  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)v8 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void *sub_190B8EFC4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  uint64_t v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;
  size_t v13;
  _QWORD *v14;
  void **v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  id v23;

  v6 = sub_190BE428C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v8 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(a1, a2, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  v13 = v12 + 7;
  v14 = (_QWORD *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  v15 = (void **)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  v16 = *v15;
  *v14 = *v15;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = ((unint64_t)v14 + v19 + 8) & ~v19;
  v21 = ((unint64_t)v15 + v19 + 8) & ~v19;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v23 = v16;
  v22(v20, v21, v17);
  return a1;
}

void *sub_190B8F0CC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;

  v6 = sub_190BE428C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v9 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v9 + 84))
    v10 = *(_QWORD *)(v9 + 64);
  else
    v10 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v11 = *(_QWORD *)(v9 + 64);
  else
    v11 = *(_QWORD *)(v9 + 64) + 1;
  v12 = v11 + 7;
  v13 = (void **)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (void **)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v14;
  v16 = *v13;
  *v13 = *v14;
  v17 = v15;

  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 24))(((unint64_t)v13 + *(unsigned __int8 *)(v18 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v14 + *(unsigned __int8 *)(v18 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

void *sub_190B8F214(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  uint64_t v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;
  size_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = sub_190BE428C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v8 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(a1, a2, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  v13 = v12 + 7;
  v14 = (_QWORD *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 32))(((unint64_t)v14 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((unint64_t)v15 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

void *sub_190B8F30C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  uint64_t v16;

  v6 = sub_190BE428C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v9 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v9 + 84))
    v10 = *(_QWORD *)(v9 + 64);
  else
    v10 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v11 = *(_QWORD *)(v9 + 64);
  else
    v11 = *(_QWORD *)(v9 + 64) + 1;
  v12 = v11 + 7;
  v13 = (void **)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (void **)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v13;
  *v13 = *v14;

  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 40))(((unint64_t)v13 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((unint64_t)v14 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

uint64_t sub_190B8F450(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned int EnumTagSinglePayload;

  v6 = sub_190BE428C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v9 <= v12)
    v13 = *(_DWORD *)(v11 + 84);
  else
    v13 = v9;
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v7 + 64);
  if ((_DWORD)v8)
    v16 = v15;
  else
    v16 = v15 + 1;
  if (!a2)
    return 0;
  v17 = *(unsigned __int8 *)(v11 + 80);
  if (a2 > v14)
  {
    v18 = ((v17 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + *(_QWORD *)(v11 + 64);
    v19 = 8 * v18;
    if (v18 > 3)
      goto LABEL_16;
    v21 = ((a2 - v14 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v21))
    {
      v20 = *(_DWORD *)(a1 + v18);
      if (!v20)
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v21 > 0xFF)
    {
      v20 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18))
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v21 >= 2)
    {
LABEL_16:
      v20 = *(unsigned __int8 *)(a1 + v18);
      if (!*(_BYTE *)(a1 + v18))
        goto LABEL_32;
LABEL_23:
      v22 = (v20 - 1) << v19;
      if (v18 > 3)
        v22 = 0;
      if ((_DWORD)v18)
      {
        if (v18 <= 3)
          v23 = v18;
        else
          v23 = 4;
        __asm { BR              X12 }
      }
      return v14 + v22 + 1;
    }
  }
LABEL_32:
  if (v9 == v14)
  {
    if (v8 < 2)
      return 0;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v8, v6);
    if (EnumTagSinglePayload >= 2)
      return EnumTagSinglePayload - 1;
    else
      return 0;
  }
  else
  {
    v24 = (unint64_t *)((a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v13 > 0x7FFFFFFE)
    {
      return __swift_getEnumTagSinglePayload(((unint64_t)v24 + v17 + 8) & ~v17, v12, v10);
    }
    else
    {
      v25 = *v24;
      if (v25 >= 0xFFFFFFFF)
        LODWORD(v25) = -1;
      if ((v25 + 1) >= 2)
        return v25;
      else
        return 0;
    }
  }
}

void sub_190B8F650(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  char v18;
  unsigned int v19;
  int v20;
  int v21;

  v8 = 0u;
  v9 = *(_QWORD *)(sub_190BE428C() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v9 + 64);
  if (v10)
    v16 = v15;
  else
    v16 = v15 + 1;
  v17 = ((*(unsigned __int8 *)(v12 + 80) + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(_QWORD *)(v12 + 64);
  v18 = 8 * v17;
  if (a3 > v14)
  {
    if (v17 <= 3)
    {
      v19 = ((a3 - v14 + ~(-1 << v18)) >> v18) + 1;
      if (HIWORD(v19))
      {
        v8 = 4u;
      }
      else if (v19 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v19 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  if (v14 < a2)
  {
    v20 = ~v14 + a2;
    if (v17 < 4)
    {
      if ((_DWORD)v17)
      {
        v21 = v20 & ~(-1 << v18);
        bzero(a1, v17);
        if ((_DWORD)v17 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if ((_DWORD)v17 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v20;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

void sub_190B8F880()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x190B8F8A8);
}

void sub_190B8F888()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x190B8F8A8);
}

void sub_190B8F890()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x190B8F8A8);
}

uint64_t type metadata accessor for NetworkOperationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NetworkOperationResult);
}

uint64_t sub_190B8F8CC()
{
  return swift_initClassMetadata2();
}

void sub_190B8F910(uint64_t a1)
{

}

uint64_t type metadata accessor for NetworkResponseOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NetworkResponseOperation);
}

uint64_t method lookup function for NetworkResponseOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(request:networkProxy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(request:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of NetworkResponseOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t sub_190B8F96C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190B8F990(uint64_t a1)
{
  uint64_t v1;

  sub_190B919CC(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_190B8F998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190B1D6C0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_190B8F9DC()
{
  unint64_t result;

  result = qword_1EE200378;
  if (!qword_1EE200378)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for NetworkResponseOperationError, &type metadata for NetworkResponseOperationError);
    atomic_store(result, (unint64_t *)&qword_1EE200378);
  }
  return result;
}

uint64_t BridgedAssembly.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t BridgedAssembly.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t method lookup function for BridgedAssembly()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedAssembly.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_190B8FA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x190B8FBB8);
}

uint64_t JSONBridge.object.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t JSONBridge.init(object:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t JSONBridge.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  sub_190BE42EC();
  OUTLINED_FUNCTION_181();
  _s13TeaFoundation16ReferenceEncoderCACycfc_0();
  v1 = sub_190BE42C8();
  v3 = v2;
  result = OUTLINED_FUNCTION_2();
  if (!v0)
  {
    v8 = sub_190BE470C();
    v5 = sub_190B1F838((uint64_t)&v8, (uint64_t)&v9);
    v7 = v6;
    sub_190BE4724();
    sub_190AEF3F4(v5, v7);
    sub_190BE4724();
    return sub_190AEF3F4(v1, v3);
  }
  return result;
}

void static JSONBridge.read(from:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  void (*v20)(char *, char *, uint64_t);
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v21 - v13;
  sub_190B631C8();
  if (!v4)
  {
    v16 = v15;
    v21[0] = a4;
    v21[1] = a3;
    v17 = *a1;
    v18 = a1[1];
    sub_190AFCA4C(*a1, v18);
    v25 = v16;
    v22 = v18;
    v23 = v17;
    sub_190B8FA80(v16, v17, v18);
    v19 = v24;
    sub_190BE42BC();
    OUTLINED_FUNCTION_181();
    sub_190BE42B0();
    sub_190BE42A4();
    sub_190AEF3F4(v19, *((unint64_t *)&v19 + 1));
    OUTLINED_FUNCTION_2();
    v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v20(v12, v14, a2);
    v20((char *)v21[0], v12, a2);
    sub_190B431C0(v25, v23, v22);
    *(_OWORD *)a1 = v24;
  }
}

uint64_t sub_190B8FEA0()
{
  return JSONBridge.write(to:)();
}

void sub_190B8FEB4(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  static JSONBridge.read(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_190B8FED0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_190B8FF3C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190B8FFEC + 4 * byte_190BEE2B8[(v8 - 1)]))();
}

void sub_190B90038(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for JSONBridge(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSONBridge);
}

uint64_t StringDeserializer.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t StringDeserializer.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t StringDeserializer.deserialize(_:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_190BE5060();
  MEMORY[0x1E0C80A78](v0);
  sub_190BE5048();
  result = sub_190BE5018();
  if (!v2)
  {
    sub_190B902B0();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_190B902B0()
{
  unint64_t result;

  result = qword_1EE2003E0;
  if (!qword_1EE2003E0)
  {
    result = MEMORY[0x194016EF8](&unk_190BF21AC, &type metadata for DeserializerError);
    atomic_store(result, (unint64_t *)&qword_1EE2003E0);
  }
  return result;
}

uint64_t StringDeserializer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t StringDeserializer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_190B90304@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = StringDeserializer.__allocating_init()();
  *a1 = result;
  return result;
}

uint64_t sub_190B90328@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = StringDeserializer.deserialize(_:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t type metadata accessor for StringDeserializer()
{
  return objc_opt_self();
}

uint64_t method lookup function for StringDeserializer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StringDeserializer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL static BinaryDecoder.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BinaryDecoder.Error.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t BinaryDecoder.Error.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t static BinaryDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v7)(uint64_t *, uint64_t, uint64_t);
  uint64_t v9;
  unint64_t v10;

  v10 = a3;
  v9 = a2;
  v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(a5 + 8);
  sub_190AFCA4C(a2, a3);
  v7(&v9, a4, a5);
  return sub_190AEF3F4(v9, v10);
}

uint64_t BinaryDecoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BinaryDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_190B904A8()
{
  unint64_t result;

  result = qword_1EE2003E8;
  if (!qword_1EE2003E8)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for BinaryDecoder.Error, &type metadata for BinaryDecoder.Error);
    atomic_store(result, (unint64_t *)&qword_1EE2003E8);
  }
  return result;
}

uint64_t type metadata accessor for BinaryDecoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for BinaryDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for BinaryDecoder.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190B9055C + 4 * byte_190BEE35D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190B90590 + 4 * byte_190BEE358[v4]))();
}

uint64_t sub_190B90590(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B90598(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190B905A0);
  return result;
}

uint64_t sub_190B905AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190B905B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190B905B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190B905C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BinaryDecoder.Error()
{
  return &type metadata for BinaryDecoder.Error;
}

uint64_t sub_190B905DC(uint64_t a1)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t j;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v4 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v4)
      goto LABEL_12;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v7 = MEMORY[0x194015F20](i, v3);
    }
    else
    {
      v7 = *(_QWORD *)(v3 + 8 * i + 32);
      swift_retain();
    }
    v8 = MEMORY[0x1940170E4](v7 + 32);
    swift_unknownObjectRelease();
    if (v8 && MEMORY[0x1940170E4](v7 + 16))
    {
      v9 = *(_QWORD *)(v7 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  v11 = *v2;
  v17 = MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)*v2 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v12)
      goto LABEL_14;
LABEL_27:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    *v2 = v16;
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  result = sub_190BE5EAC();
  v12 = result;
  if (!result)
    goto LABEL_27;
LABEL_14:
  if (v12 >= 1)
  {
    for (j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        v14 = MEMORY[0x194015F20](j, v11);
      }
      else
      {
        v14 = *(_QWORD *)(v11 + 8 * j + 32);
        swift_retain();
      }
      v15 = MEMORY[0x1940170E4](v14 + 32);
      swift_unknownObjectRelease();
      if (v15)
      {
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v16 = v17;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190B90828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 16);
  if (v7 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v8 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v8)
      goto LABEL_12;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x194015F20](i, v7);
    }
    else
    {
      v11 = *(_QWORD *)(v7 + 8 * i + 32);
      swift_retain();
    }
    v12 = MEMORY[0x1940170E4](v11 + 32);
    swift_unknownObjectRelease();
    if (v12 && MEMORY[0x1940170E4](v11 + 16))
    {
      v13 = *(_QWORD *)(v11 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32))(a2, a3, ObjectType, v13);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  v15 = *v6;
  v21 = MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)*v6 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v16)
      goto LABEL_14;
LABEL_27:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    *v6 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  result = sub_190BE5EAC();
  v16 = result;
  if (!result)
    goto LABEL_27;
LABEL_14:
  if (v16 >= 1)
  {
    for (j = 0; j != v16; ++j)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v18 = MEMORY[0x194015F20](j, v15);
      }
      else
      {
        v18 = *(_QWORD *)(v15 + 8 * j + 32);
        swift_retain();
      }
      v19 = MEMORY[0x1940170E4](v18 + 32);
      swift_unknownObjectRelease();
      if (v19)
      {
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v20 = v21;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190B90A9C(uint64_t a1)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t j;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v4 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v4)
      goto LABEL_12;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v7 = MEMORY[0x194015F20](i, v3);
    }
    else
    {
      v7 = *(_QWORD *)(v3 + 8 * i + 32);
      swift_retain();
    }
    v8 = MEMORY[0x1940170E4](v7 + 32);
    swift_unknownObjectRelease();
    if (v8 && MEMORY[0x1940170E4](v7 + 16))
    {
      v9 = *(_QWORD *)(v7 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  v11 = *v2;
  v17 = MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)*v2 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v12)
      goto LABEL_14;
LABEL_27:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    *v2 = v16;
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  result = sub_190BE5EAC();
  v12 = result;
  if (!result)
    goto LABEL_27;
LABEL_14:
  if (v12 >= 1)
  {
    for (j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        v14 = MEMORY[0x194015F20](j, v11);
      }
      else
      {
        v14 = *(_QWORD *)(v11 + 8 * j + 32);
        swift_retain();
      }
      v15 = MEMORY[0x1940170E4](v14 + 32);
      swift_unknownObjectRelease();
      if (v15)
      {
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v16 = v17;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190B90CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 16);
  if (v7 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v8 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v8)
      goto LABEL_12;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x194015F20](i, v7);
    }
    else
    {
      v11 = *(_QWORD *)(v7 + 8 * i + 32);
      swift_retain();
    }
    v12 = MEMORY[0x1940170E4](v11 + 32);
    swift_unknownObjectRelease();
    if (v12 && MEMORY[0x1940170E4](v11 + 16))
    {
      v13 = *(_QWORD *)(v11 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, a3, ObjectType, v13);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  v15 = *v6;
  v21 = MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)*v6 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v16)
      goto LABEL_14;
LABEL_27:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    *v6 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  result = sub_190BE5EAC();
  v16 = result;
  if (!result)
    goto LABEL_27;
LABEL_14:
  if (v16 >= 1)
  {
    for (j = 0; j != v16; ++j)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v18 = MEMORY[0x194015F20](j, v15);
      }
      else
      {
        v18 = *(_QWORD *)(v15 + 8 * j + 32);
        swift_retain();
      }
      v19 = MEMORY[0x1940170E4](v18 + 32);
      swift_unknownObjectRelease();
      if (v19)
      {
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v20 = v21;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190B90F5C(uint64_t a1)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t j;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v4 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v4)
      goto LABEL_12;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v7 = MEMORY[0x194015F20](i, v3);
    }
    else
    {
      v7 = *(_QWORD *)(v3 + 8 * i + 32);
      swift_retain();
    }
    v8 = MEMORY[0x1940170E4](v7 + 32);
    swift_unknownObjectRelease();
    if (v8 && MEMORY[0x1940170E4](v7 + 16))
    {
      v9 = *(_QWORD *)(v7 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 72))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  v11 = *v2;
  v17 = MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)*v2 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v12)
      goto LABEL_14;
LABEL_27:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    *v2 = v16;
    return swift_bridgeObjectRelease();
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  result = sub_190BE5EAC();
  v12 = result;
  if (!result)
    goto LABEL_27;
LABEL_14:
  if (v12 >= 1)
  {
    for (j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        v14 = MEMORY[0x194015F20](j, v11);
      }
      else
      {
        v14 = *(_QWORD *)(v11 + 8 * j + 32);
        swift_retain();
      }
      v15 = MEMORY[0x1940170E4](v14 + 32);
      swift_unknownObjectRelease();
      if (v15)
      {
        sub_190BE5D2C();
        sub_190BE5D5C();
        sub_190BE5D68();
        sub_190BE5D38();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v16 = v17;
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

Swift::Void __swiftcall SceneStateManager.willResignActive()()
{
  uint64_t v0;

  sub_190B905DC(v0);
}

Swift::Void __swiftcall SceneStateManager.willResignActive(with:)(Swift::String with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_60();
  sub_190B90828(v2, v3, v1);
}

Swift::Void __swiftcall SceneStateManager.didEnterBackground()()
{
  uint64_t v0;

  sub_190B90A9C(v0);
}

Swift::Void __swiftcall SceneStateManager.didEnterBackground(with:)(Swift::String with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_60();
  sub_190B90CE8(v2, v3, v1);
}

Swift::Void __swiftcall SceneStateManager.sceneDidDisconnect()()
{
  uint64_t v0;

  sub_190B90F5C(v0);
}

uint64_t SceneStateManager.remove(monitor:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_20_0();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (; v4; v4 = sub_190BE5EAC())
  {
    for (i = 0; ; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x194015F20](i, v3);
      }
      else
      {
        v6 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain();
      }
      v7 = i + 1;
      if (__OFADD__(i, 1))
        break;
      v8 = MEMORY[0x1940170E4](v6 + 16);
      if (v8)
      {
        v9 = v8;
        swift_unknownObjectRelease();
        if (v9 == a1)
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_20_0();
          sub_190B48A8C(i);
          swift_endAccess();
          swift_release();
          return swift_release();
        }
      }
      swift_release();
      if (v7 == v4)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_14:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t SceneStateManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SceneStateManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_190B913B8()
{
  SceneStateManager.willResignActive()();
}

void sub_190B913D8(uint64_t a1, uint64_t a2)
{
  SceneStateManager.willResignActive(with:)(*(Swift::String *)&a1);
}

void sub_190B913F8()
{
  SceneStateManager.didEnterBackground()();
}

void sub_190B91418(uint64_t a1, uint64_t a2)
{
  SceneStateManager.didEnterBackground(with:)(*(Swift::String *)&a1);
}

void sub_190B91438()
{
  SceneStateManager.sceneDidDisconnect()();
}

uint64_t sub_190B91458(uint64_t a1)
{
  return SceneStateManager.remove(monitor:)(a1);
}

uint64_t dispatch thunk of SceneStateManagerType.willResignActive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SceneStateManagerType.willResignActive(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SceneStateManagerType.didEnterBackground()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SceneStateManagerType.didEnterBackground(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of SceneStateManagerType.sceneDidDisconnect()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of SceneStateManagerType.remove(monitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t method lookup function for SceneStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t initializeWithCopy for SceneConnectionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for SceneConnectionOptions(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  return a1;
}

_OWORD *assignWithTake for SceneConnectionOptions(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for SceneConnectionOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneConnectionOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t dispatch thunk of BackgroundTaskManagerType.backgroundTask(withName:work:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

void sub_190B915C4(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void));
  _QWORD v14[2];
  void (*v15)(uint64_t);

  v5 = v3;
  v14[1] = a2;
  v15 = a1;
  v7 = sub_190BE47E4();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_1_2();
  sub_190AAC38C(0, &qword_1ED034808, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v14 - v11;
  sub_190B981D4(v5, (uint64_t)v14 - v11, (uint64_t)&qword_1ED034808, (uint64_t)v8, v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7) == 1)
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v4, v12, v7);
    v15(v4);
    OUTLINED_FUNCTION_16_27();
  }
  OUTLINED_FUNCTION_1_5();
}

uint64_t sub_190B916F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[2];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0() + 48;
  v3 = MEMORY[0x1E0DEE9D8];
  v4 = MEMORY[0x1E0DEE9B8] + 8;
  do
  {
    sub_190B981D4(v2, (uint64_t)&v10, (uint64_t)&qword_1ED034E00, v4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190ACF6F0);
    if (v11)
    {
      sub_190ACEE08(&v10, v12);
      *(_QWORD *)&v10 = 0;
      *((_QWORD *)&v10 + 1) = 0xE000000000000000;
      sub_190BE5114();
      sub_190BE5114();
      sub_190BE5DE0();
      v5 = v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190AFE0AC();
        v3 = v7;
      }
      v6 = *(_QWORD *)(v3 + 16);
      if (v6 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_190AFE0AC();
        v3 = v8;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      *(_OWORD *)(v3 + 16 * v6 + 32) = v5;
    }
    else
    {
      sub_190B142D8((uint64_t)&v10, (uint64_t)&qword_1ED034E00, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190ACF6F0);
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void NetworkOperation.__allocating_init(request:networkProxy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v3 = v2;
  v4 = sub_190BE428C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_16_6((uint64_t)v8, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_16_6(v10 + v9, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  sub_190AAC38C(0, qword_1ED033CD8, v5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  v11 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v11 + 16) = sub_190B923F0;
  *(_QWORD *)(v11 + 24) = v10;
  OUTLINED_FUNCTION_18_23();
  NetworkOperation.__allocating_init(requestAccessor:networkProxy:)(v11);
  sub_190B77D18(v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v4);
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

void sub_190B919CC(uint64_t a1, void (*a2)(void))
{
  a2();
  OUTLINED_FUNCTION_0();
}

void NetworkOperation.__allocating_init(requestAccessor:networkProxy:)(uint64_t a1)
{
  OUTLINED_FUNCTION_3_50();
  NetworkOperation.init(requestAccessor:networkProxy:)(a1);
  OUTLINED_FUNCTION_4();
}

void NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_3_50();
  NetworkOperation.init(requestAccessor:networkProxy:earliestBeginDate:)(a1, a2, a3);
  OUTLINED_FUNCTION_4();
}

void NetworkOperation.__allocating_init(request:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[48];

  OUTLINED_FUNCTION_72();
  v17 = v2;
  v18 = v0;
  v4 = v3;
  v6 = v5;
  v7 = v2;
  v8 = OUTLINED_FUNCTION_0_1();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_1_2();
  v10 = sub_190BE428C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_41_0((uint64_t)v13, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  OUTLINED_FUNCTION_41_0(v15 + v14, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  sub_190AAC38C(0, qword_1ED033CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  v16 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v16 + 16) = sub_190B923F0;
  *(_QWORD *)(v16 + 24) = v15;
  sub_190B77F48(v6, (uint64_t)v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v4, v8);
  NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(v16, (uint64_t)v19, v1);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
  sub_190B77D18(v6);
  OUTLINED_FUNCTION_27_18(v17, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

void NetworkOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE v15[48];

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_0_1();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_0();
  v12 = v11 - v10;
  v13 = (_QWORD *)OUTLINED_FUNCTION_24();
  v13[2] = v7;
  v13[3] = v5;
  v13[4] = v3;
  sub_190AAC38C(0, qword_1ED033CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  v14 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v14 + 16) = sub_190B929A4;
  *(_QWORD *)(v14 + 24) = v13;
  OUTLINED_FUNCTION_32_14(v14, (uint64_t)v15);
  OUTLINED_FUNCTION_16_6(v12, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)(v14, (uint64_t)v15, v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

void NetworkOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;

  OUTLINED_FUNCTION_72();
  v21[2] = v1;
  v22 = v0;
  v3 = v2;
  v5 = v4;
  v21[0] = v6;
  v21[1] = v7;
  v8 = v6;
  v9 = OUTLINED_FUNCTION_0_1();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_0();
  v13 = v12 - v11;
  v14 = sub_190BE4628();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v8, v14);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v19 + v18, v17, v14);
  sub_190AAC38C(0, &qword_1EE2003F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Accessor);
  v20 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v20 + 16) = sub_190B929F4;
  *(_QWORD *)(v20 + 24) = v19;
  OUTLINED_FUNCTION_18_23();
  OUTLINED_FUNCTION_41_0(v13, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  NetworkOperation.__allocating_init(endpointAccessor:parameters:headers:networkProxy:earliestBeginDate:)();
  OUTLINED_FUNCTION_27_18(v3, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  sub_190B77D18(v5);
  (*(void (**)(_QWORD, uint64_t))(v15 + 8))(v21[0], v14);
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190B91E30(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  id v6;

  v5 = (_QWORD *)OUTLINED_FUNCTION_24();
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  v6 = v2;
  OUTLINED_FUNCTION_9_0();
  sub_190B932F4();
  return swift_release();
}

BOOL static NetworkOperationError.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if (*((_BYTE *)a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      return (v7 & 1) != 0;
    }
    v4 = v3 == 1;
  }
  else
  {
    v4 = v3 == 0;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

uint64_t NetworkOperation.requestProcessors.getter()
{
  OUTLINED_FUNCTION_20_0();
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t NetworkOperation.requestProcessors.setter(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_3_51();
  *v1 = a1;
  return swift_bridgeObjectRelease();
}

void NetworkOperation.requestProcessors.modify()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B91FB8@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  v3 = (uint64_t *)(*a1 + qword_1ED033D70);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_190AF6F0C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())v6;
  return sub_190AFCCE8(v4);
}

uint64_t sub_190B9204C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_190AF6F0C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + qword_1ED033D70);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_190AFCCE8(v3);
  return sub_190AB9930(v8);
}

uint64_t NetworkOperation.eventHandler.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_0();
  v0 = OUTLINED_FUNCTION_30();
  sub_190AFCCE8(v0);
  return OUTLINED_FUNCTION_30();
}

uint64_t NetworkOperation.eventHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  OUTLINED_FUNCTION_3_51();
  v5 = *v2;
  *v2 = a1;
  v2[1] = a2;
  return sub_190AB9930(v5);
}

void NetworkOperation.eventHandler.modify()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

id NetworkOperation.init(requestAccessor:networkProxy:)(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OUTLINED_FUNCTION_0_1();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_0();
  v9 = v8 - v7;
  *(_QWORD *)&v2[qword_1ED033BA8] = MEMORY[0x1E0DEE9D8];
  v10 = &v2[qword_1ED033D70];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v2[qword_1ED033B98] = a1;
  OUTLINED_FUNCTION_32_14(v11, (uint64_t)&v2[qword_1ED033B90]);
  v12 = v2;
  swift_retain();
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(&v12[qword_1ED033D88], v9, v5);

  v15.receiver = v12;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  OUTLINED_FUNCTION_18_0();
  return v13;
}

id NetworkOperation.init(requestAccessor:networkProxy:earliestBeginDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[qword_1ED033BA8] = MEMORY[0x1E0DEE9D8];
  v7 = &v3[qword_1ED033D70];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v3[qword_1ED033B98] = a1;
  OUTLINED_FUNCTION_32_14((uint64_t)ObjectType, (uint64_t)&v3[qword_1ED033B90]);
  v8 = (uint64_t)&v3[qword_1ED033D88];
  v9 = *(_QWORD *)(OUTLINED_FUNCTION_0_1() - 8);
  OUTLINED_FUNCTION_41_0(v8, a3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v12.receiver = v3;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  OUTLINED_FUNCTION_27_18(a3, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  OUTLINED_FUNCTION_18_0();
  return v10;
}

uint64_t sub_190B923D8(uint64_t a1)
{
  return sub_190B929B0(a1, (void (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B923E4()
{
  return objectdestroyTm_2((uint64_t (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B923F0()
{
  return sub_190B92408((void (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B923FC()
{
  return objectdestroyTm_2((uint64_t (*)(_QWORD))MEMORY[0x1E0CADF50]);
}

uint64_t sub_190B92408(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a1)(0) - 8) + 80);
  return sub_190B929B0(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_190B92458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a2;
  v56 = a4;
  v6 = sub_190BE428C();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v55 = (uint64_t)&v48 - v11;
  sub_190AAC38C(0, (unint64_t *)&qword_1ED033970, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], v9);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v48 - v13;
  v15 = sub_190BE4448();
  v54 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_190BE4628();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v52 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v48 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v48 - v26;
  (*(void (**)(uint64_t))(a1 + 16))(v25);
  sub_190BE43DC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
  {
    sub_190B142D8((uint64_t)v14, (uint64_t)&qword_1ED033970, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v24, v27, v18);
    sub_190BE425C();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v27, v18);
  }
  v49 = v27;
  v57 = v19;
  v29 = v54;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v17, v14, v15);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE43D0();
  v30 = v55;
  sub_190BE43E8();
  if (__swift_getEnumTagSinglePayload(v30, 1, v18) == 1)
  {
    sub_190B142D8(v55, (uint64_t)&qword_1ED034BC0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
    v31 = v57;
    v32 = v49;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v24, v49, v18);
    sub_190BE425C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v18);
  }
  v48 = v17;
  v53 = v15;
  v33 = v57;
  v34 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v52, v55, v18);
  v35 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v55 = v18;
  v35(v24, v34, v18);
  sub_190BE425C();
  v36 = a3 + 64;
  v37 = 1 << *(_BYTE *)(a3 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & *(_QWORD *)(a3 + 64);
  v40 = (unint64_t)(v37 + 63) >> 6;
  result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v41 = 0;
  if (!v39)
    goto LABEL_9;
LABEL_8:
  for (v39 &= v39 - 1; ; v39 = (v44 - 1) & v44)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190BE4274();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v39)
      goto LABEL_8;
LABEL_9:
    v42 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    v43 = v57;
    if (v42 >= v40)
      goto LABEL_25;
    v44 = *(_QWORD *)(v36 + 8 * v42);
    ++v41;
    if (!v44)
    {
      v41 = v42 + 1;
      if (v42 + 1 >= v40)
        goto LABEL_25;
      v44 = *(_QWORD *)(v36 + 8 * v41);
      if (!v44)
      {
        v41 = v42 + 2;
        if (v42 + 2 >= v40)
          goto LABEL_25;
        v44 = *(_QWORD *)(v36 + 8 * v41);
        if (!v44)
          break;
      }
    }
LABEL_22:
    ;
  }
  v45 = v42 + 3;
  if (v45 >= v40)
  {
LABEL_25:
    swift_release();
    v46 = *(void (**)(char *, uint64_t))(v43 + 8);
    v47 = v55;
    v46(v52, v55);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v53);
    v46(v49, v47);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32))(v56, v8, v51);
  }
  v44 = *(_QWORD *)(v36 + 8 * v45);
  if (v44)
  {
    v41 = v45;
    goto LABEL_22;
  }
  while (1)
  {
    v41 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v41 >= v40)
      goto LABEL_25;
    v44 = *(_QWORD *)(v36 + 8 * v41);
    ++v45;
    if (v44)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_190B92970()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190B929A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_190B92458(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_190B929B0(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  a2(0);
  v2 = OUTLINED_FUNCTION_30();
  return v3(v2);
}

uint64_t sub_190B929E8()
{
  return objectdestroyTm_2((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_190B929F4()
{
  return sub_190B92408((void (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t NetworkOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v19;

  v5 = *v2;
  v6 = *MEMORY[0x1E0DEEDD8];
  if (qword_1ED034658 != -1)
    swift_once();
  v7 = sub_190BE4A30();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED039A58);
  v8 = v2;
  v9 = sub_190BE4A0C();
  v10 = sub_190BE58AC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v11 = 136446210;
    v13 = *(uint64_t *)((char *)v8 + qword_1ED034388);
    v12 = *(uint64_t *)((char *)v8 + qword_1ED034388 + 8);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v13, v12, &v19);
    sub_190BE5A2C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_190AA0000, v9, v10, "Network operation %{public}s started", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_12_0();
  }

  v14 = v6 & v5;
  v15 = (_QWORD *)OUTLINED_FUNCTION_24();
  v15[2] = *(_QWORD *)(v14 + 240);
  v15[3] = *(_QWORD *)(v14 + 248);
  v15[4] = a1;
  v15[5] = a2;
  v16 = (_QWORD *)OUTLINED_FUNCTION_24();
  v16[2] = v8;
  v16[3] = sub_190B92D48;
  v16[4] = v15;
  v17 = v8;
  OUTLINED_FUNCTION_9_0();
  swift_retain();
  sub_190B932F4();
  swift_release();
  return swift_release();
}

uint64_t sub_190B92C54(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = type metadata accessor for Result(0, AssociatedTypeWitness, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v18 - v14);
  type metadata accessor for NetworkOperation(0, a4, a5, v16);
  sub_190B92D54(a1, v15);
  a2(v15);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_190B92D30()
{
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

uint64_t sub_190B92D48(uint64_t a1)
{
  uint64_t v1;

  return sub_190B92C54(a1, *(void (**)(_QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_190B92D54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v24;
  _QWORD *v25;

  v25 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = type metadata accessor for Result(0, AssociatedTypeWitness, v4, v5);
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v11 = type metadata accessor for NetworkOperationResult(0, AssociatedTypeWitness, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v17 = type metadata accessor for Result(0, v11, v15, v16);
  MEMORY[0x1E0C80A78](v17);
  v19 = (void **)((char *)&v24 - v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v24 - v18, a1, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = *v19;
    v22 = sub_190B97C38(*v19);

    *v25 = v22;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v12 + 32))(v14, v19, v11);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v8, &v14[*(int *)(v11 + 32)], AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v24 + 32))(v25, v8, v6);
  }
}

uint64_t sub_190B92F24(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;

  v8 = sub_190B931B0(a1);
  if ((v9 & 1) != 0)
    return a3(a1);
  v10 = *(double *)&v8;
  if (qword_1ED034658 != -1)
    swift_once();
  v11 = v10;
  v12 = sub_190BE4A30();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED039A58);
  v13 = a2;
  v14 = sub_190BE4A0C();
  v15 = sub_190BE58AC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v25 = v17;
    *(_DWORD *)v16 = 136446466;
    v24 = a3;
    v19 = *(_QWORD *)&v13[qword_1ED034388];
    v18 = *(_QWORD *)&v13[qword_1ED034388 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v19, v18, &v25);
    sub_190BE5A2C();

    a3 = v24;
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2050;
    sub_190BE5A2C();
    _os_log_impl(&dword_190AA0000, v14, v15, "Network operation %{public}s will retry with longer timeout after delay: %{public}f", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194017000](v17, -1, -1);
    MEMORY[0x194017000](v16, -1, -1);

  }
  else
  {

  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v13;
  v21[3] = a3;
  v21[4] = a4;
  v22 = qword_1ED034570;
  v23 = v13;
  swift_retain();
  if (v22 != -1)
    swift_once();
  TaskScheduler.scheduleAfter(_:_:)((uint64_t)sub_190B98364, (uint64_t)v21, v11);
  return swift_release();
}

uint64_t sub_190B931A4(uint64_t a1)
{
  uint64_t v1;

  return sub_190B92F24(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190B931B0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for NetworkOperationResult(255, AssociatedTypeWitness, v3, v4);
  v8 = type metadata accessor for Result(0, v5, v6, v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (void **)((char *)&v15 - v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v15 - v9, a1, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = *v10;
    v13 = sub_190B97968(v12);

  }
  else
  {
    (*(void (**)(void **, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v10, v5);
    return 0;
  }
  return v13;
}

void sub_190B932C4()
{
  sub_190B932F4();
}

void sub_190B932F4()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_190B77F48(v0 + qword_1ED033B90, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_190B93348()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];
  __int128 v4;

  sub_190AAB5A4(&v4, (uint64_t)v3);
  sub_190B93680(v3, v1, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_190B93404(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;

  v8 = sub_190B931B0(a1);
  if ((v9 & 1) != 0)
    return a3(a1);
  v10 = *(double *)&v8;
  if (qword_1ED034658 != -1)
    swift_once();
  v11 = v10;
  v12 = sub_190BE4A30();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED039A58);
  v13 = a2;
  v14 = sub_190BE4A0C();
  v15 = sub_190BE58AC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v25 = v17;
    *(_DWORD *)v16 = 136446466;
    v24 = a3;
    v19 = *(_QWORD *)&v13[qword_1ED034388];
    v18 = *(_QWORD *)&v13[qword_1ED034388 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v19, v18, &v25);
    sub_190BE5A2C();

    a3 = v24;
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2050;
    sub_190BE5A2C();
    _os_log_impl(&dword_190AA0000, v14, v15, "Network operation %{public}s will retry with longer timeout after delay: %{public}f", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194017000](v17, -1, -1);
    MEMORY[0x194017000](v16, -1, -1);

  }
  else
  {

  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v13;
  v21[3] = a3;
  v21[4] = a4;
  v22 = qword_1ED034570;
  v23 = v13;
  swift_retain();
  if (v22 != -1)
    swift_once();
  TaskScheduler.scheduleAfter(_:_:)((uint64_t)sub_190B98388, (uint64_t)v21, v11);
  return swift_release();
}

uint64_t sub_190B93680(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void (*v51)(uint64_t *__return_ptr, char *, void (*)(uint64_t, unint64_t, void *, void *, void *), _QWORD *, uint64_t, uint64_t);
  id v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[3];
  uint64_t v66;
  uint64_t v67;

  v4 = v3;
  v63 = a3;
  v61 = a2;
  v6 = sub_190BE4628();
  v57 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034BC0, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v59 = ((char *)&v54 - v10);
  v11 = sub_190BE428C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v54 - v16;
  v60 = swift_allocBox();
  v19 = v18;
  (*(void (**)(void))(*(_QWORD *)&v3[qword_1ED033B98] + 16))();
  v20 = &v3[qword_1ED033BA8];
  swift_beginAccess();
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(*(_QWORD *)v20 + 16);
  v62 = v4;
  if (v22)
  {
    v54 = v21;
    v55 = v6;
    v58 = a1;
    v23 = v21 + 32;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    do
    {
      sub_190B03F14(v23, (uint64_t)v65);
      v24 = v66;
      v25 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v19, v11);
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 8))(v15, v24, v25);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v19, v17, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      v23 += 40;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v4 = v62;
    a1 = v58;
    v6 = v55;
  }
  v26 = v59;
  sub_190BE4268();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v6))
  {
    sub_190B142D8((uint64_t)v26, (uint64_t)&qword_1ED034BC0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
  }
  else
  {
    v27 = v56;
    v28 = v57;
    (*(void (**)(char *, NSObject *, uint64_t))(v57 + 16))(v56, v26, v6);
    sub_190B142D8((uint64_t)v26, (uint64_t)&qword_1ED034BC0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
    v55 = sub_190BE4574();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v6);
    if (qword_1ED034658 != -1)
      swift_once();
    v31 = sub_190BE4A30();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED039A58);
    v32 = v4;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v33 = sub_190BE4A0C();
    v34 = sub_190BE58AC();
    v35 = v34;
    v59 = v33;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v58 = a1;
      v37 = v36;
      v57 = swift_slowAlloc();
      v65[0] = v57;
      *(_DWORD *)v37 = 136446466;
      v54 = v37 + 4;
      LODWORD(v56) = v35;
      v38 = *(_QWORD *)&v32[qword_1ED034388];
      v39 = *(_QWORD *)&v32[qword_1ED034388 + 8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v38, v39, v65);
      v64 = v40;
      sub_190BE5A2C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v55, v30, v65);
      v64 = v41;
      sub_190BE5A2C();
      swift_bridgeObjectRelease_n();
      v42 = v59;
      _os_log_impl(&dword_190AA0000, v59, (os_log_type_t)v56, "Network operation %{public}s will issue request to URL: %{public}s", (uint8_t *)v37, 0x16u);
      v43 = v57;
      swift_arrayDestroy();
      MEMORY[0x194017000](v43, -1, -1);
      v44 = v37;
      a1 = v58;
      MEMORY[0x194017000](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v4 = v62;
  }
  sub_190BE4238();
  v45 = a1[3];
  v46 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v45);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v19, v11);
  v47 = (_QWORD *)swift_allocObject();
  v48 = v61;
  v47[2] = v4;
  v47[3] = v48;
  v49 = v4;
  v50 = v60;
  v47[4] = v63;
  v47[5] = v50;
  v51 = *(void (**)(uint64_t *__return_ptr, char *, void (*)(uint64_t, unint64_t, void *, void *, void *), _QWORD *, uint64_t, uint64_t))(v46 + 8);
  v52 = v49;
  swift_retain();
  swift_retain();
  v51(v65, v17, sub_190B98054, v47, v45, v46);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  sub_190B98078((uint64_t)v65);
  return swift_release();
}

uint64_t sub_190B93C04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79[3];
  uint64_t v80;
  uint64_t v81;

  v75 = a3;
  v76 = a1;
  v73 = a2;
  v4 = *(_QWORD *)v3;
  v72 = *MEMORY[0x1E0DEEDD8];
  v5 = sub_190BE4628();
  v69 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034BC0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v71 = (uint64_t)&v66 - v9;
  v10 = sub_190BE428C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v66 - v15;
  v74 = swift_allocBox();
  v18 = v17;
  (*(void (**)(void))(*(_QWORD *)&v3[qword_1ED033B98] + 16))();
  v77 = v3;
  v19 = &v3[qword_1ED033BA8];
  swift_beginAccess();
  v20 = *(_QWORD *)v19;
  v21 = *(_QWORD *)(*(_QWORD *)v19 + 16);
  if (v21)
  {
    v67 = v5;
    v70 = v4;
    v22 = v20 + 32;
    v66 = v20;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    do
    {
      sub_190B03F14(v22, (uint64_t)v79);
      v23 = v80;
      v24 = v81;
      __swift_project_boxed_opaque_existential_1(v79, v80);
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v18, v10);
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 8))(v14, v23, v24);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 40))(v18, v16, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      v22 += 40;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v4 = v70;
    v5 = v67;
  }
  v25 = v71;
  sub_190BE4268();
  if (__swift_getEnumTagSinglePayload(v25, 1, v5))
  {
    sub_190B142D8(v25, (uint64_t)&qword_1ED034BC0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
  }
  else
  {
    v26 = v69;
    v27 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v25, v5);
    sub_190B142D8(v25, (uint64_t)&qword_1ED034BC0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
    v71 = sub_190BE4574();
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v5);
    if (qword_1ED034658 != -1)
      swift_once();
    v30 = sub_190BE4A30();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED039A58);
    v31 = v77;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v32 = sub_190BE4A0C();
    v33 = sub_190BE58AC();
    v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      v35 = swift_slowAlloc();
      v67 = v29;
      v36 = v35;
      v69 = swift_slowAlloc();
      v79[0] = v69;
      *(_DWORD *)v36 = 136446466;
      LODWORD(v68) = v34;
      v70 = v4;
      v37 = *(_QWORD *)&v31[qword_1ED034388];
      v38 = *(_QWORD *)&v31[qword_1ED034388 + 8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v37, v38, v79);
      v78 = v39;
      sub_190BE5A2C();

      v4 = v70;
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2082;
      v40 = v67;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v71, v40, v79);
      v78 = v41;
      sub_190BE5A2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_190AA0000, v32, (os_log_type_t)v68, "Network operation %{public}s will issue background request to URL: %{public}s", (uint8_t *)v36, 0x16u);
      v42 = v69;
      swift_arrayDestroy();
      MEMORY[0x194017000](v42, -1, -1);
      MEMORY[0x194017000](v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  v43 = v72 & v4;
  sub_190BE4238();
  v45 = *(_QWORD *)&v77[qword_1ED034388];
  v44 = *(_QWORD *)&v77[qword_1ED034388 + 8];
  v72 = v76[7];
  v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v47 = (_QWORD *)swift_allocObject();
  v71 = *(_QWORD *)(v43 + 240);
  v47[2] = v71;
  v70 = *(_QWORD *)(v43 + 248);
  v47[3] = v70;
  v47[4] = v46;
  v47[5] = v45;
  v47[6] = v44;
  v48 = v44;
  v49 = v74;
  v50 = v75;
  v47[7] = v73;
  v47[8] = v50;
  v47[9] = v49;
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  swift_retain();
  sub_190B191CC(v45, v48, (uint64_t)sub_190B98284, (uint64_t)v47, v51, v52, v53, v54);
  swift_release();
  swift_release();
  v55 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v56 = (_QWORD *)swift_allocObject();
  v57 = v70;
  v56[2] = v71;
  v56[3] = v57;
  v56[4] = v55;
  v56[5] = v45;
  v58 = v73;
  v56[6] = v48;
  v56[7] = v58;
  v56[8] = v75;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  swift_retain();
  sub_190B19488(v45, v48, (uint64_t)sub_190B982EC, (uint64_t)v56, v59, v60, v61, v62);
  swift_release();
  swift_release();
  v63 = v76[5];
  v64 = v76[6];
  __swift_project_boxed_opaque_existential_1(v76 + 2, v63);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v18, v10);
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v64 + 16))(v79, v16, v45, v48, &v77[qword_1ED033D88], v63, v64);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  sub_190B98078((uint64_t)v79);
  return swift_release();
}

uint64_t sub_190B94328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t (*v24)(uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v27 = a2;
  v28 = a3;
  v4 = sub_190BE4C40();
  v33 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190BE4C88();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190BE4CAC();
  v11 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - v15;
  sub_190BC8E18();
  sub_190ADCB44(0, (unint64_t *)&qword_1ED035670);
  v17 = (void *)sub_190BE590C();
  sub_190BE4CA0();
  MEMORY[0x194014FA8](v14, 0.1);
  v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v29(v14, v10);
  v18 = (_QWORD *)swift_allocObject();
  v20 = v26;
  v19 = v27;
  v18[2] = v26;
  v18[3] = a1;
  v21 = v28;
  v18[4] = v19;
  v18[5] = v21;
  aBlock[4] = sub_190B98354;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190AB3224;
  aBlock[3] = &block_descriptor_13;
  v22 = _Block_copy(aBlock);
  v23 = v20;
  swift_retain();
  swift_retain();
  swift_release();
  sub_190BE4C64();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_190ADCAB4((unint64_t *)&qword_1ED034E18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034E20, v24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190B14CC4();
  sub_190BE5B70();
  MEMORY[0x194015B84](v16, v9, v6, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  return ((uint64_t (*)(char *, uint64_t))v29)(v16, v30);
}

uint64_t sub_190B945F4(uint64_t a1, unint64_t a2, void *a3, void *a4, void *a5, void *a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  void (*v41)(uint64_t *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  BOOL v51;
  void (*v52)(uint64_t *);
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  uint64_t *v58;
  id v59;
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t *);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  void (*v90)(uint64_t *);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  void *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t *v98;
  id v99;
  _QWORD v100[2];
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  void (*v110)(uint64_t *);
  uint64_t v111[3];
  id v112;

  v107 = a8;
  v110 = a7;
  sub_190AAC38C(0, &qword_1ED033E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v100 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = type metadata accessor for NetworkOperationResult(255, AssociatedTypeWitness, v18, v19);
  v108 = type metadata accessor for Result(0, v20, v21, v22);
  v106 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v109 = (_QWORD *)((char *)v100 - v23);
  v24 = sub_190BE428C();
  v25 = swift_projectBox();
  sub_190B950CC(a3, a4, a5);
  if (a5)
  {
    v26 = a5;
    if (qword_1ED034658 != -1)
      swift_once();
    v27 = sub_190BE4A30();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED039A58);
    v28 = a5;
    v29 = a5;
    v30 = a6;
    v31 = sub_190BE4A0C();
    v32 = sub_190BE5894();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v111[0] = v35;
      *(_DWORD *)v33 = 136446466;
      v37 = *(_QWORD *)&v30[qword_1ED034388];
      v36 = *(_QWORD *)&v30[qword_1ED034388 + 8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v37, v36, v111);
      v112 = v38;
      sub_190BE5A2C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2114;
      v39 = a5;
      v40 = _swift_stdlib_bridgeErrorToNSError();
      v112 = (id)v40;
      v41 = v110;
      sub_190BE5A2C();
      *v34 = v40;

      _os_log_impl(&dword_190AA0000, v31, v32, "Network operation %{public}s failed with error: %{public}@", (uint8_t *)v33, 0x16u);
      sub_190ACF6A0(0, (unint64_t *)&qword_1ED034970, (uint64_t)&qword_1ED034910, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_190ADCB44);
      swift_arrayDestroy();
      MEMORY[0x194017000](v34, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194017000](v35, -1, -1);
      MEMORY[0x194017000](v33, -1, -1);

      v42 = v108;
      v43 = v106;
    }
    else
    {

      v42 = v108;
      v43 = v106;
      v41 = v110;
    }
    v58 = v109;
    *v109 = (uint64_t)a5;
    swift_storeEnumTagMultiPayload();
    v59 = a5;
    v41(v58);

    return (*(uint64_t (**)(uint64_t *, uint64_t))(v43 + 8))(v58, v42);
  }
  v104 = v25;
  v105 = v24;
  if (!a3)
    goto LABEL_10;
  objc_opt_self();
  v44 = swift_dynamicCastObjCClass();
  if (!v44)
    goto LABEL_10;
  v45 = (void *)v44;
  v46 = a3;
  if (sub_190B1CFA0())
  {

LABEL_10:
    if (a2 >> 60 == 15)
    {
      if (qword_1ED034658 != -1)
        swift_once();
      v47 = sub_190BE4A30();
      __swift_project_value_buffer(v47, (uint64_t)qword_1ED039A58);
      v48 = a6;
      v49 = sub_190BE4A0C();
      v50 = sub_190BE5894();
      v51 = os_log_type_enabled(v49, v50);
      v52 = v110;
      if (v51)
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        v111[0] = v54;
        *(_DWORD *)v53 = 136446210;
        v55 = *(_QWORD *)&v48[qword_1ED034388];
        v56 = *(_QWORD *)&v48[qword_1ED034388 + 8];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190ACE890(v55, v56, v111);
        v112 = v57;
        sub_190BE5A2C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_190AA0000, v49, v50, "Network operation %{public}s failed with unknown error", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x194017000](v54, -1, -1);
        MEMORY[0x194017000](v53, -1, -1);

      }
      else
      {

      }
      v43 = v106;
      sub_190B980D4();
      v79 = swift_allocError();
      *(_QWORD *)v80 = 0;
      *(_BYTE *)(v80 + 8) = 1;
      v42 = v108;
      v58 = v109;
      *v109 = v79;
      swift_storeEnumTagMultiPayload();
      v52(v58);
    }
    else
    {
      sub_190AFCD54(a1, a2);
      v61 = a3;
      sub_190AFCD54(a1, a2);
      v62 = a4;
      v63 = sub_190B95420(a1, a2, (uint64_t)a3, a4);
      v65 = v64;
      sub_190AEF3F4(a1, a2);

      if (qword_1ED034658 != -1)
        swift_once();
      v66 = sub_190BE4A30();
      __swift_project_value_buffer(v66, (uint64_t)qword_1ED039A58);
      v67 = a6;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v68 = sub_190BE4A0C();
      v69 = sub_190BE58AC();
      v70 = v69;
      if (os_log_type_enabled(v68, v69))
      {
        v71 = swift_slowAlloc();
        v101 = v63;
        v72 = v71;
        v103 = swift_slowAlloc();
        v111[0] = v103;
        *(_DWORD *)v72 = 136446466;
        v100[1] = v72 + 4;
        v102 = v70;
        v73 = v67;
        v74 = *(_QWORD *)&v67[qword_1ED034388];
        v75 = *(_QWORD *)&v67[qword_1ED034388 + 8];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190ACE890(v74, v75, v111);
        v112 = v76;
        sub_190BE5A2C();

        swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 12) = 2082;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190ACE890(v101, v65, v111);
        v112 = v77;
        sub_190BE5A2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_190AA0000, v68, (os_log_type_t)v102, "Network operation %{public}s received response (%{public}s", (uint8_t *)v72, 0x16u);
        v78 = v103;
        swift_arrayDestroy();
        MEMORY[0x194017000](v78, -1, -1);
        MEMORY[0x194017000](v72, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v81 = v110;
      v82 = v105;
      v43 = v106;
      v83 = v104;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v16, v83, v82);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v82);
      v58 = v109;
      sub_190B95C4C(a3, (uint64_t)v16, a1, (char *)a2, (uint64_t)v109);
      sub_190B142D8((uint64_t)v16, (uint64_t)&qword_1ED033E30, (uint64_t)MEMORY[0x1E0CADF50], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
      v81(v58);
      sub_190AFCEB8(a1, a2);
      v42 = v108;
    }
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v43 + 8))(v58, v42);
  }
  if (qword_1ED034658 != -1)
    swift_once();
  v84 = sub_190BE4A30();
  __swift_project_value_buffer(v84, (uint64_t)qword_1ED039A58);
  v85 = a6;
  v86 = v46;
  v87 = sub_190BE4A0C();
  v88 = sub_190BE5894();
  v89 = os_log_type_enabled(v87, v88);
  v90 = v110;
  if (v89)
  {
    v91 = swift_slowAlloc();
    v92 = swift_slowAlloc();
    v111[0] = v92;
    *(_DWORD *)v91 = 136446466;
    v93 = *(_QWORD *)&v85[qword_1ED034388];
    v94 = *(_QWORD *)&v85[qword_1ED034388 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v93, v94, v111);
    v112 = v95;
    sub_190BE5A2C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v91 + 12) = 2050;
    v112 = objc_msgSend(v45, sel_statusCode);
    v90 = v110;
    sub_190BE5A2C();

    _os_log_impl(&dword_190AA0000, v87, v88, "Network operation %{public}s failed with HTTP status code: %{public}ld", (uint8_t *)v91, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194017000](v92, -1, -1);
    MEMORY[0x194017000](v91, -1, -1);

  }
  else
  {

  }
  v42 = v108;
  v43 = v106;
  sub_190B1D1A4();
  v96 = swift_allocError();
  *v97 = v45;
  v98 = v109;
  *v109 = v96;
  swift_storeEnumTagMultiPayload();
  v99 = v86;
  v90(v98);

  v58 = v98;
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v43 + 8))(v58, v42);
}

void sub_190B950CC(void *a1, void *a2, void *a3)
{
  void (**v3)(_QWORD);
  void (**v4)(_QWORD);
  void (**v6)(uint64_t *);
  void (*v7)(uint64_t *);
  id v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  void (**v15)(uint64_t *);
  void (*v16)(uint64_t *);
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void (*v23)(uint64_t *);
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void (**v29)(_QWORD);
  id v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  char v34;

  v4 = v3;
  if (a3)
  {
    v6 = (void (**)(uint64_t *))((char *)v3 + qword_1ED033D70);
    swift_beginAccess();
    v7 = *v6;
    if (*v6)
    {
      v32 = (uint64_t)a3;
      v33 = 0;
      v34 = 2;
      v8 = a3;
      sub_190AFCCE8((uint64_t)v7);
      v7(&v32);
      sub_190AB9930((uint64_t)v7);

    }
  }
  else if (a1)
  {
    objc_opt_self();
    v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      v12 = v11;
      v30 = a1;
      if (sub_190B1CFA0())
      {
        if (a2)
        {
          v13 = objc_msgSend(a2, sel_transactionMetrics);
          sub_190ADCB44(0, &qword_1ED033D38);
          v14 = sub_190BE530C();

        }
        else
        {
          v14 = MEMORY[0x1E0DEE9D8];
        }
        if (v14 >> 62)
          goto LABEL_30;
        v18 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
        while (v18)
        {
          v4 = (void (**)(_QWORD))((char *)v4 + qword_1ED033D70);
          v31 = v14 & 0xC000000000000001;
          swift_beginAccess();
          v19 = 4;
          v29 = v4;
          while (1)
          {
            v20 = v31 ? (id)MEMORY[0x194015F20](v19 - 4, v14) : *(id *)(v14 + 8 * v19);
            v21 = v20;
            v22 = v19 - 3;
            if (__OFADD__(v19 - 4, 1))
              break;
            if (objc_msgSend(v20, sel_resourceFetchType) == (id)3)
            {

LABEL_27:
              swift_bridgeObjectRelease();
              return;
            }
            v23 = (void (*)(uint64_t *))*v4;
            if (*v4)
            {
              v32 = v12;
              v33 = v21;
              v34 = 0;
              v24 = v18;
              v25 = v14;
              v26 = v12;
              v27 = v30;
              sub_190AFCCE8((uint64_t)v23);
              v28 = v21;
              v23(&v32);
              sub_190AB9930((uint64_t)v23);

              v12 = v26;
              v14 = v25;
              v18 = v24;
              v4 = v29;

            }
            else
            {

            }
            ++v19;
            if (v22 == v18)
              goto LABEL_27;
          }
          __break(1u);
LABEL_30:
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          v18 = sub_190BE5EAC();
          swift_bridgeObjectRelease();
        }

        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = (void (**)(uint64_t *))((char *)v4 + qword_1ED033D70);
        swift_beginAccess();
        v16 = *v15;
        if (*v15)
        {
          v32 = v12;
          v33 = 0;
          v34 = 1;
          v17 = v30;
          sub_190AFCCE8((uint64_t)v16);
          v16(&v32);
          sub_190AB9930((uint64_t)v16);

        }
        else
        {

        }
      }
    }
  }
}

uint64_t sub_190B95420(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  id v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t inited;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(void);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v79 = a3;
  v80 = a1;
  v81 = a2;
  v5 = sub_190BE4370();
  v77 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v76 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_190AAC38C(0, &qword_1ED033B70, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v82 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v85 = (uint64_t)&v75 - v12;
  sub_190AAC38C(0, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v7);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v75 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v75 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v75 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v75 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v75 - v29;
  v83 = v25;
  v84 = v5;
  if (a4)
  {
    v31 = objc_msgSend(a4, sel_transactionMetrics);
    sub_190ADCB44(0, &qword_1ED033D38);
    v32 = sub_190BE530C();

    if (v32 >> 62)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v49 = sub_190BE5EAC();
      swift_bridgeObjectRelease();
      if (v49)
      {
LABEL_4:
        sub_190B72EF0(0, (v32 & 0xC000000000000001) == 0, v32);
        if ((v32 & 0xC000000000000001) != 0)
          v33 = (id)MEMORY[0x194015F20](0, v32);
        else
          v33 = *(id *)(v32 + 32);
        v34 = v33;
        v5 = v84;
        swift_bridgeObjectRelease();
        if (v34)
        {
          v35 = objc_msgSend(v34, sel_fetchStartDate);
          if (v35)
          {
            v36 = v35;
            sub_190BE47B4();

            v37 = sub_190BE47E4();
            v38 = 0;
          }
          else
          {
            v37 = sub_190BE47E4();
            v38 = 1;
          }
          v42 = 1;
          __swift_storeEnumTagSinglePayload((uint64_t)v22, v38, 1, v37);
          sub_190B98178((uint64_t)v22, (uint64_t)v30);
          v43 = objc_msgSend(v34, sel_responseStartDate);
          if (v43)
          {
            v44 = v43;
            sub_190BE47B4();

            v42 = 0;
          }
          v45 = sub_190BE47E4();
          v46 = 1;
          __swift_storeEnumTagSinglePayload((uint64_t)v19, v42, 1, v45);
          sub_190B98178((uint64_t)v19, (uint64_t)v28);
          v47 = objc_msgSend(v34, sel_requestStartDate);
          if (v47)
          {
            v48 = v47;
            sub_190BE47B4();

            v46 = 0;
          }
          v5 = v84;
          v78 = v34;
          __swift_storeEnumTagSinglePayload((uint64_t)v16, v46, 1, v45);
          sub_190B98178((uint64_t)v16, (uint64_t)v83);
          goto LABEL_19;
        }
LABEL_18:
        v50 = sub_190BE47E4();
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 1, 1, v50);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v50);
        __swift_storeEnumTagSinglePayload((uint64_t)v83, 1, 1, v50);
        v78 = 0;
LABEL_19:
        v51 = objc_msgSend(a4, sel_taskInterval);
        v41 = v85;
        sub_190BE4334();

        v40 = 0;
        goto LABEL_20;
      }
    }
    else if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    v5 = v84;
    goto LABEL_18;
  }
  v39 = sub_190BE47E4();
  v40 = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v30, 1, 1, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v39);
  v78 = 0;
  v41 = v85;
LABEL_20:
  __swift_storeEnumTagSinglePayload(v41, v40, 1, v5);
  sub_190AAC38C(0, qword_1ED033D40, (uint64_t (*)(uint64_t))sub_190B1DF90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BE87D0;
  *(_QWORD *)(inited + 32) = 0x6F43737574617473;
  *(_QWORD *)(inited + 40) = 0xEA00000000006564;
  if (v79 && (objc_opt_self(), (v53 = (void *)swift_dynamicCastObjCClass()) != 0))
  {
    v54 = objc_msgSend(v53, sel_statusCode);
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 48) = v54;
  }
  else
  {
    *(_OWORD *)(inited + 48) = 0u;
    *(_OWORD *)(inited + 64) = 0u;
  }
  *(_QWORD *)(inited + 80) = 1702521203;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v55 = (void *)objc_opt_self();
  v56 = objc_msgSend(v55, sel_stringFromByteCount_countStyle_, sub_190BE470C(), 2);
  v57 = sub_190BE5000();
  v59 = v58;

  v60 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 96) = v57;
  *(_QWORD *)(inited + 104) = v59;
  *(_QWORD *)(inited + 120) = v60;
  *(_QWORD *)(inited + 128) = 0x646575657571;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  MEMORY[0x1E0C80A78](v61);
  *(&v75 - 2) = v41;
  v62 = (uint64_t)v30;
  sub_190B915C4((void (*)(uint64_t))sub_190B98110, (uint64_t)(&v75 - 4), v63);
  *(_QWORD *)(inited + 176) = 1650881652;
  *(_QWORD *)(inited + 184) = 0xE400000000000000;
  MEMORY[0x1E0C80A78](v64);
  v65 = (uint64_t)v83;
  *(&v75 - 2) = (uint64_t)v83;
  sub_190B915C4((void (*)(uint64_t))sub_190B98144, (uint64_t)(&v75 - 4), v66);
  *(_QWORD *)(inited + 224) = 0x6C61746F74;
  *(_QWORD *)(inited + 232) = 0xE500000000000000;
  v67 = v82;
  sub_190B981D4(v41, v82, (uint64_t)&qword_1ED033B70, (uint64_t)MEMORY[0x1E0CAE5D0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
  v68 = v84;
  if (__swift_getEnumTagSinglePayload(v67, 1, v84) == 1)
  {
    *(_OWORD *)(inited + 240) = 0u;
    *(_OWORD *)(inited + 256) = 0u;
  }
  else
  {
    v69 = v77;
    v70 = v67;
    v71 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v76, v70, v68);
    sub_190B1CD94((uint64_t *)(inited + 240));
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
  }
  v86 = sub_190B916F8(inited);
  sub_190ACF6F0(0, (unint64_t *)&qword_1ED034520, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190AD1E54();
  v72 = sub_190BE4F28();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_190B4BE38();

  v73 = MEMORY[0x1E0CB0870];
  sub_190B142D8((uint64_t)v28, (uint64_t)&qword_1ED034808, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
  sub_190B142D8(v62, (uint64_t)&qword_1ED034808, (uint64_t)v73, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
  sub_190B142D8(v85, (uint64_t)&qword_1ED033B70, (uint64_t)MEMORY[0x1E0CAE5D0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
  sub_190B142D8(v65, (uint64_t)&qword_1ED034808, (uint64_t)v73, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
  return v72;
}

void sub_190B95C4C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = v5;
  v33 = *v5;
  v34 = a2;
  v32 = *MEMORY[0x1E0DEEDD8];
  v11 = sub_190BE5060();
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED034658 != -1)
    swift_once();
  v13 = sub_190BE4A30();
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED039A58);
  v15 = v6;
  sub_190AFCA4C(a3, (unint64_t)a4);
  v31 = v14;
  v16 = sub_190BE4A0C();
  v17 = sub_190BE58AC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v35 = v28;
    *(_DWORD *)v18 = 136446466;
    v29 = a1;
    v19 = a3;
    v20 = a4;
    v21 = a5;
    v23 = *(_QWORD *)&v15[qword_1ED034388];
    v22 = *(_QWORD *)&v15[qword_1ED034388 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v23, v22, &v35);
    v36 = v24;
    sub_190BE5A2C();

    a5 = v21;
    a4 = v20;
    a3 = v19;
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2048;
    v36 = sub_190BE470C();
    a1 = v29;
    sub_190BE5A2C();
    sub_190AEF3F4(v19, (unint64_t)a4);
    _os_log_impl(&dword_190AA0000, v16, v17, "Network operation %{public}s attempting to parse response with %ld bytes", (uint8_t *)v18, 0x16u);
    v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x194017000](v25, -1, -1);
    MEMORY[0x194017000](v18, -1, -1);
  }
  else
  {

    sub_190AEF3F4(a3, (unint64_t)a4);
  }

  v26 = (void *)MEMORY[0x194016844]();
  sub_190B97458(a3, a4, (uint8_t *)v15, v34, a1, a5);
  objc_autoreleasePoolPop(v26);
}

uint64_t sub_190B96280(void *a1, char *a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *);
  uint64_t v46[4];

  v44 = a8;
  v45 = a7;
  v41 = a5;
  v42 = a6;
  sub_190AAC38C(0, &qword_1ED033E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v41 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = type metadata accessor for NetworkOperationResult(255, AssociatedTypeWitness, v16, v17);
  v21 = type metadata accessor for Result(0, v18, v19, v20);
  v43 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v41 - v22);
  v24 = a4 + 16;
  v25 = sub_190BE428C();
  v26 = swift_projectBox();
  swift_beginAccess();
  v27 = MEMORY[0x1940170E4](v24);
  if (v27)
  {
    v28 = (void *)v27;
    if ((a3 & 1) != 0)
    {
      *v23 = (uint64_t)a1;
      swift_storeEnumTagMultiPayload();
      sub_190B98318(a1, (unint64_t)a2, 1);
      v37 = a1;
      v45(v23);

      sub_190B98324(a1, (unint64_t)a2, 1);
    }
    else
    {
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v14, v26, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v25);
      sub_190AFCA4C((uint64_t)a1, (unint64_t)a2);
      sub_190B95C4C(0, (uint64_t)v14, (uint64_t)a1, a2, (uint64_t)v23);
      sub_190B142D8((uint64_t)v14, (uint64_t)&qword_1ED033E30, (uint64_t)MEMORY[0x1E0CADF50], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
      v45(v23);
      sub_190B98324(a1, (unint64_t)a2, 0);

    }
  }
  else
  {
    v30 = v41;
    v29 = v42;
    if (qword_1ED034658 != -1)
      swift_once();
    v31 = sub_190BE4A30();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED039A58);
    swift_bridgeObjectRetain_n();
    v32 = sub_190BE4A0C();
    v33 = sub_190BE58AC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v46[0] = v35;
      *(_DWORD *)v34 = 136446210;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v30, v29, v46);
      v46[3] = v36;
      sub_190BE5A2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_190AA0000, v32, v33, "Network operation %{public}s was abandoned", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194017000](v35, -1, -1);
      MEMORY[0x194017000](v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_190B980D4();
    v38 = swift_allocError();
    *(_QWORD *)v39 = 1;
    *(_BYTE *)(v39 + 8) = 1;
    *v23 = v38;
    swift_storeEnumTagMultiPayload();
    v45(v23);
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v43 + 8))(v23, v21);
}

void sub_190B9668C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(_QWORD), uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = type metadata accessor for NetworkOperationResult(255, AssociatedTypeWitness, v16, v17);
  v21 = type metadata accessor for Result(0, v18, v19, v20);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (uint64_t *)((char *)&v37 - v23);
  swift_beginAccess();
  v25 = MEMORY[0x1940170E4](a4 + 16);
  if (v25)
  {
    v26 = (void *)v25;
    sub_190B950CC(a1, a2, a3);

  }
  else
  {
    v38 = a5;
    if (qword_1ED034658 != -1)
      swift_once();
    v27 = sub_190BE4A30();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED039A58);
    swift_bridgeObjectRetain_n();
    v28 = sub_190BE4A0C();
    v29 = sub_190BE58AC();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v37 = a7;
      v31 = (uint8_t *)v30;
      v32 = swift_slowAlloc();
      v41 = v32;
      *(_DWORD *)v31 = 136446210;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v38, a6, &v41);
      v40 = v33;
      sub_190BE5A2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_190AA0000, v28, v29, "Network operation %{public}s was abandoned", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194017000](v32, -1, -1);
      v34 = v31;
      a7 = v37;
      MEMORY[0x194017000](v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_190B980D4();
    v35 = swift_allocError();
    *(_QWORD *)v36 = 1;
    *(_BYTE *)(v36 + 8) = 1;
    *v24 = v35;
    swift_storeEnumTagMultiPayload();
    a7(v24);
    (*(void (**)(uint64_t *, uint64_t))(v22 + 8))(v24, v21);
  }
}

uint64_t sub_190B96950(void *a1, _QWORD *a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  void *v19;
  void **v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t (*v85)(void);
  id v86;
  uint64_t v87;
  char *v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  id v96;
  uint64_t v97;
  _QWORD *v98;
  id v99;
  uint64_t v101;
  int v102;
  id v103;
  char *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t *);
  uint64_t v110;
  id v111;
  uint64_t v112[3];

  v108 = a4;
  v109 = a3;
  sub_190AAC38C(0, &qword_1ED033E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v101 - v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = type metadata accessor for NetworkOperationResult(255, AssociatedTypeWitness, v10, v11);
  v15 = type metadata accessor for Result(0, v12, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v106 = v15;
  v107 = v16;
  MEMORY[0x1E0C80A78](v15);
  v105 = (uint64_t *)((char *)&v101 - v17);
  v18 = (void **)(a2 + 4);
  swift_beginAccess();
  v19 = (void *)a2[4];
  v20 = (void **)(a2 + 5);
  swift_beginAccess();
  v21 = (void *)a2[5];
  swift_beginAccess();
  v22 = (void *)a2[6];
  v23 = v19;
  v24 = v21;
  v25 = v22;
  sub_190B950CC(v19, v21, v22);

  v26 = (void *)a2[6];
  if (!v26)
  {
    v104 = v8;
    v42 = *v18;
    if (*v18)
    {
      objc_opt_self();
      v43 = swift_dynamicCastObjCClass();
      if (v43)
      {
        v44 = (void *)v43;
        v45 = v42;
        if (!sub_190B1CFA0())
        {
          if (qword_1ED034658 != -1)
            swift_once();
          v87 = sub_190BE4A30();
          __swift_project_value_buffer(v87, (uint64_t)qword_1ED039A58);
          v88 = a1;
          v89 = v45;
          v90 = sub_190BE4A0C();
          v91 = sub_190BE5894();
          if (os_log_type_enabled(v90, v91))
          {
            v92 = swift_slowAlloc();
            v93 = swift_slowAlloc();
            v112[0] = v93;
            *(_DWORD *)v92 = 136446466;
            v94 = *(_QWORD *)&v88[qword_1ED034388];
            v95 = *(_QWORD *)&v88[qword_1ED034388 + 8];
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            sub_190ACE890(v94, v95, v112);
            v111 = v96;
            sub_190BE5A2C();

            swift_bridgeObjectRelease();
            *(_WORD *)(v92 + 12) = 2050;
            v111 = objc_msgSend(v44, sel_statusCode);
            sub_190BE5A2C();

            _os_log_impl(&dword_190AA0000, v90, v91, "Stub network operation %{public}s failed with HTTP status code: %{public}ld", (uint8_t *)v92, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x194017000](v93, -1, -1);
            MEMORY[0x194017000](v92, -1, -1);

          }
          else
          {

          }
          v57 = v106;
          sub_190B1D1A4();
          v97 = swift_allocError();
          *v98 = v44;
          v58 = v105;
          *v105 = v97;
          swift_storeEnumTagMultiPayload();
          v99 = v89;
          v109(v58);

          goto LABEL_31;
        }

      }
    }
    swift_beginAccess();
    v46 = a2[3];
    if (v46 >> 60 == 15)
    {
      if (qword_1ED034658 != -1)
        swift_once();
      v47 = sub_190BE4A30();
      __swift_project_value_buffer(v47, (uint64_t)qword_1ED039A58);
      v48 = a1;
      v49 = sub_190BE4A0C();
      v50 = sub_190BE5894();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        v52 = (id)swift_slowAlloc();
        v111 = v52;
        *(_DWORD *)v51 = 136446210;
        v53 = *(_QWORD *)&v48[qword_1ED034388];
        v54 = *(_QWORD *)&v48[qword_1ED034388 + 8];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190ACE890(v53, v54, (uint64_t *)&v111);
        v110 = v55;
        sub_190BE5A2C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_190AA0000, v49, v50, "Stub network operation %{public}s failed with unknown error", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x194017000](v52, -1, -1);
        MEMORY[0x194017000](v51, -1, -1);

      }
      else
      {

      }
      v58 = v105;
      v57 = v106;
      sub_190B980D4();
      v80 = swift_allocError();
      *(_QWORD *)v81 = 0;
      *(_BYTE *)(v81 + 8) = 1;
      *v58 = v80;
      swift_storeEnumTagMultiPayload();
      v109(v58);
    }
    else
    {
      v60 = a2[2];
      v61 = *v18;
      v62 = *v20;
      sub_190AFCD54(v60, v46);
      sub_190AFCD54(v60, v46);
      v63 = v62;
      v64 = v61;
      v65 = sub_190B95420(v60, v46, (uint64_t)v61, v62);
      v67 = v66;
      sub_190AEF3F4(v60, v46);

      if (qword_1ED034658 != -1)
        swift_once();
      v68 = sub_190BE4A30();
      __swift_project_value_buffer(v68, (uint64_t)qword_1ED039A58);
      v69 = a1;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v70 = sub_190BE4A0C();
      v71 = sub_190BE58AC();
      v72 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        v73 = swift_slowAlloc();
        v102 = v72;
        v74 = v73;
        v103 = (id)swift_slowAlloc();
        v111 = v103;
        *(_DWORD *)v74 = 136446466;
        v101 = v65;
        v75 = *(_QWORD *)&v69[qword_1ED034388];
        v76 = *(_QWORD *)&v69[qword_1ED034388 + 8];
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190ACE890(v75, v76, (uint64_t *)&v111);
        v110 = v77;
        sub_190BE5A2C();

        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2082;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190ACE890(v101, v67, (uint64_t *)&v111);
        v110 = v78;
        sub_190BE5A2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_190AA0000, v70, (os_log_type_t)v102, "Stub network operation %{public}s received response (%{public}s", (uint8_t *)v74, 0x16u);
        v79 = v103;
        swift_arrayDestroy();
        MEMORY[0x194017000](v79, -1, -1);
        MEMORY[0x194017000](v74, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v82 = (uint64_t)v104;
      v83 = *v18;
      v84 = sub_190BE428C();
      v85 = MEMORY[0x1E0CADF50];
      __swift_storeEnumTagSinglePayload(v82, 1, 1, v84);
      v86 = v83;
      v58 = v105;
      sub_190B95C4C(v83, v82, v60, (char *)v46, (uint64_t)v105);

      sub_190B142D8(v82, (uint64_t)&qword_1ED033E30, (uint64_t)v85, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
      v109(v58);
      sub_190AFCEB8(v60, v46);
      v57 = v106;
    }
LABEL_31:
    v56 = v107;
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v56 + 8))(v58, v57);
  }
  v27 = v26;
  if (qword_1ED034658 != -1)
    swift_once();
  v28 = sub_190BE4A30();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED039A58);
  v29 = v26;
  v30 = v26;
  v31 = a1;
  v32 = sub_190BE4A0C();
  v33 = sub_190BE5894();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v35 = (_QWORD *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v112[0] = v36;
    *(_DWORD *)v34 = 136446466;
    v38 = *(_QWORD *)&v31[qword_1ED034388];
    v37 = *(_QWORD *)&v31[qword_1ED034388 + 8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190ACE890(v38, v37, v112);
    v111 = v39;
    sub_190BE5A2C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2114;
    v40 = v26;
    v41 = (id)_swift_stdlib_bridgeErrorToNSError();
    v111 = v41;
    sub_190BE5A2C();
    *v35 = v41;

    _os_log_impl(&dword_190AA0000, v32, v33, "Stub network operation %{public}s failed with error: %{public}@", (uint8_t *)v34, 0x16u);
    sub_190ACF6A0(0, (unint64_t *)&qword_1ED034970, (uint64_t)&qword_1ED034910, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_190ADCB44);
    swift_arrayDestroy();
    MEMORY[0x194017000](v35, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x194017000](v36, -1, -1);
    MEMORY[0x194017000](v34, -1, -1);
  }
  else
  {

  }
  v56 = v107;
  v58 = v105;
  v57 = v106;
  *v105 = (uint64_t)v26;
  swift_storeEnumTagMultiPayload();
  v59 = v26;
  v109(v58);

  return (*(uint64_t (**)(uint64_t *, uint64_t))(v56 + 8))(v58, v57);
}

id sub_190B97458@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id result;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  uint8_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint8_t *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v53 = a2;
  v47 = a3;
  v48 = a5;
  v50 = a4;
  v51 = a6;
  v52 = a1;
  v6 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)a3;
  sub_190AAC38C(0, &qword_1ED033E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v49 = (uint64_t)&v46 - v9;
  v10 = *(_QWORD *)(v6 + 240);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v46 - v12;
  v14 = *(_QWORD *)(v6 + 248);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v46 - v20;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v10, v14);
  v22 = v54;
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v14 + 24))(v52, v53, v10, v14);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!v22)
  {
    v24 = v47;
    v25 = v48;
    v46 = v21;
    v52 = v16;
    v53 = v19;
    v54 = AssociatedTypeWitness;
    if (qword_1ED034658 != -1)
      swift_once();
    v26 = sub_190BE4A30();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED039A58);
    v27 = v24;
    v28 = sub_190BE4A0C();
    v29 = sub_190BE58AC();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v56 = v31;
      *(_DWORD *)v30 = 136446210;
      v47 = v30 + 4;
      v32 = *(_QWORD *)&v27[qword_1ED034388];
      v33 = *(_QWORD *)&v27[qword_1ED034388 + 8];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ACE890(v32, v33, &v56);
      v55 = v34;
      sub_190BE5A2C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_190AA0000, v28, v29, "Network operation %{public}s succeeded", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194017000](v31, -1, -1);
      MEMORY[0x194017000](v30, -1, -1);

    }
    else
    {

    }
    v35 = v51;
    v36 = v49;
    v38 = (uint64_t)v53;
    v37 = v54;
    v39 = v52;
    v40 = v46;
    sub_190B981D4(v50, v49, (uint64_t)&qword_1ED033E30, (uint64_t)MEMORY[0x1E0CADF50], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v38, v40, v37);
    sub_190B8DD30(v36, (uint64_t)v25, v38, v37, v35);
    v43 = type metadata accessor for NetworkOperationResult(255, v37, v41, v42);
    type metadata accessor for Result(0, v43, v44, v45);
    swift_storeEnumTagMultiPayload();
    return v25;
  }
  return result;
}

id NetworkOperation.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_3_50(), sel_init);
}

void NetworkOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_190B97850()
{
  NetworkOperation.init()();
}

uint64_t sub_190B9785C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  swift_bridgeObjectRelease();
  sub_190AB9930(*(_QWORD *)(v0 + qword_1ED033D70));
  swift_release();
  sub_190B77D18(v0 + qword_1ED033B90);
  OUTLINED_FUNCTION_0_1();
  v1 = OUTLINED_FUNCTION_22_21();
  return OUTLINED_FUNCTION_7_40(v1, v2, v3);
}

void NetworkOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_dealloc);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190B978F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  swift_bridgeObjectRelease();
  sub_190AB9930(*(_QWORD *)(a1 + qword_1ED033D70));
  swift_release();
  sub_190B77D18(a1 + qword_1ED033B90);
  OUTLINED_FUNCTION_0_1();
  v2 = OUTLINED_FUNCTION_22_21();
  return OUTLINED_FUNCTION_7_40(v2, v3, v4);
}

uint64_t sub_190B97968(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char v17;
  void (*v18)(char *, uint64_t);
  char v20;
  _QWORD v21[2];

  v2 = sub_190BE4958();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - v7;
  sub_190AAC38C(0, &qword_1ED032D40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - v10;
  v12 = sub_190BE4964();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = a1;
  v16 = a1;
  sub_190AA96FC(0, (unint64_t *)&qword_1ED034920);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_190ADCAB4(qword_1ED031A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], MEMORY[0x1E0CB15B8]);
    sub_190BE452C();
    sub_190BE494C();
    sub_190ADCAB4(&qword_1ED031A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1578], MEMORY[0x1E0CB1588]);
    v17 = sub_190BE4FD0();
    v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v6, v2);
    if ((v17 & 1) != 0)
    {
      v18(v8, v2);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return 0x3FF0000000000000;
    }
    else
    {
      sub_190BE4940();
      v20 = sub_190BE4FD0();
      v18(v6, v2);
      v18(v8, v2);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      if ((v20 & 1) != 0)
        return 0x3FF0000000000000;
      else
        return 0;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
    sub_190B142D8((uint64_t)v11, (uint64_t)&qword_1ED032D40, (uint64_t)MEMORY[0x1E0CB15C0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_190AAC38C);
    return 0;
  }
}

