void *sub_190B97C38(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v8;

  v1 = a1;
  v2 = a1;
  sub_190AA96FC(0, (unint64_t *)&qword_1ED034920);
  if (swift_dynamicCast())
  {
    sub_190B980D4();
    v1 = (void *)swift_allocError();
    v4 = v3;
    if ((unint64_t)v8 >= 3)
    {
      v5 = objc_msgSend(v8, sel_statusCode);
      sub_190B8DC4C(v8);
    }
    else
    {
      v5 = v8;
    }
    *(_QWORD *)v4 = v5;
    *(_BYTE *)(v4 + 8) = (unint64_t)v8 < 3;
  }
  else
  {
    v6 = v1;
  }
  return v1;
}

void sub_190B97D18()
{
  sub_190B97D24(qword_1ED033CF0);
}

void sub_190B97D24(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  objc_msgSend(v2, sel_setTs_timingDataEnabled_, 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v2);

  sub_190ADCB44(0, (unint64_t *)&qword_1ED033D20);
  a1[3] = v4;
  a1[4] = &protocol witness table for NSURLSession;

  *a1 = v3;
}

void sub_190B97DD8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X3>, unint64_t *a4@<X4>, void (*a5)(char *, uint64_t)@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void));
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);

  v21 = a5;
  v20 = a1;
  v11 = a3(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - v13;
  sub_190AAC38C(0, a4, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v19 - v16;
  sub_190B981D4(a2, (uint64_t)&v19 - v16, (uint64_t)a4, (uint64_t)a3, v18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v11) == 1)
  {
    *a6 = 0u;
    a6[1] = 0u;
LABEL_5:
    OUTLINED_FUNCTION_1_5();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
  v21(v14, v20);
  if (!v6)
  {
    OUTLINED_FUNCTION_15_27();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_15_27();
  __break(1u);
}

uint64_t sub_190B97F14()
{
  return 16;
}

__n128 sub_190B97F20(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkOperationError()
{
  return &type metadata for NetworkOperationError;
}

uint64_t sub_190B97F3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE47E4();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for NetworkOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NetworkOperation);
}

uint64_t method lookup function for NetworkOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NetworkOperation.__allocating_init(requestAccessor:networkProxy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of NetworkOperation.__allocating_init(requestAccessor:networkProxy:earliestBeginDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

ValueMetadata *type metadata accessor for NetworkOperationInternalError()
{
  return &type metadata for NetworkOperationInternalError;
}

uint64_t sub_190B98010()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B98034()
{
  OUTLINED_FUNCTION_23_21();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

void sub_190B98054(uint64_t a1, unint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v5;

  sub_190B945F4(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void (**)(uint64_t *))(v5 + 24), *(_QWORD *)(v5 + 32));
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190B98078(uint64_t a1)
{
  uint64_t v2;

  sub_190ACF6A0(0, (unint64_t *)&unk_1ED033B80, (uint64_t)&unk_1ED033B78, (uint64_t)&protocol descriptor for Cancellable, (void (*)(uint64_t, uint64_t, uint64_t))sub_190AA96FC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_190B980D4()
{
  unint64_t result;

  result = qword_1EE1FE2D8;
  if (!qword_1EE1FE2D8)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for NetworkOperationError, &type metadata for NetworkOperationError);
    atomic_store(result, (unint64_t *)&qword_1EE1FE2D8);
  }
  return result;
}

void sub_190B98110(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  sub_190B97DD8(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], &qword_1ED033B70, (void (*)(char *, uint64_t))sub_190B1CA74, a2);
}

void sub_190B98144(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  sub_190B97DD8(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], &qword_1ED034808, (void (*)(char *, uint64_t))sub_190B1CD10, a2);
}

uint64_t sub_190B98178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190AAC38C(0, &qword_1ED034808, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_190B981D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))
{
  uint64_t v7;

  v7 = a5(0, a3, a4, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B98228()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190B9824C()
{
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190B98284(void *a1, char *a2, char a3)
{
  uint64_t v3;

  return sub_190B96280(a1, a2, a3 & 1, *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(void (**)(uint64_t *))(v3 + 56), *(_QWORD *)(v3 + 64));
}

uint64_t sub_190B982BC()
{
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_190B982EC(void *a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_190B9668C(a1, a2, a3, *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(void (**)(_QWORD))(v3 + 56), *(_QWORD *)(v3 + 64));
  OUTLINED_FUNCTION_40_0();
}

id sub_190B98318(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)sub_190AFCA4C((uint64_t)a1, a2);
}

void sub_190B98324(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_190AEF3F4((uint64_t)a1, a2);
}

uint64_t sub_190B98330()
{
  OUTLINED_FUNCTION_23_21();
  swift_release();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_93();
  return swift_deallocObject();
}

uint64_t sub_190B98354()
{
  uint64_t v0;

  return sub_190B96950(*(void **)(v0 + 16), *(_QWORD **)(v0 + 24), *(void (**)(uint64_t *))(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_190B98364()
{
  sub_190B932C4();
}

uint64_t sub_190B98374(uint64_t a1)
{
  uint64_t v1;

  return sub_190B93404(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void URLHandlerMatcher.__allocating_init(url:)(uint64_t a1)
{
  swift_allocObject();
  URLHandlerMatcher.init(url:)(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t URLHandlerMatcher.match(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16[3];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v5 = 0;
    v13 = v4;
    while (1)
    {
      v15 = v3;
      v7 = *(_QWORD *)(v4 + v5 + 96);
      v6 = *(_QWORD *)(v4 + v5 + 104);
      v8 = *(_QWORD *)(v4 + v5 + 88);
      v10 = *(_QWORD *)(v4 + v5 + 40);
      v9 = *(_QWORD *)(v4 + v5 + 48);
      v16[0] = *(_QWORD *)(v4 + v5 + 32);
      v16[1] = v10;
      v16[2] = v9;
      v17 = *(_OWORD *)(v4 + v5 + 56);
      v18 = *(_OWORD *)(v4 + v5 + 72);
      v19 = v8;
      v20 = v7;
      v21 = v6;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      OUTLINED_FUNCTION_53();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190B98B6C(v16, a2);
      if (!v2)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v2 = 0;
      v5 += 80;
      v3 = v15 - 1;
      v4 = v13;
      if (v15 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    sub_190B992F4();
    swift_allocError();
    *(_OWORD *)v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_OWORD *)(v11 + 32) = 0u;
    *(_QWORD *)(v11 + 48) = 0;
    *(_BYTE *)(v11 + 56) = 9;
    return swift_willThrow();
  }
}

BOOL sub_190B98568(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  BOOL v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  BOOL v15;
  uint64_t v17;

  sub_190AC5EC4(0, &qword_1ED0337D8, (void (*)(uint64_t))MEMORY[0x1E0CAE4B8]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  if (a2)
  {
    if (a4)
    {
      v11 = a1 == a3 && a2 == a4;
      if (v11 || (sub_190BE60BC() & 1) != 0)
        return 1;
    }
  }
  else if (!a4)
  {
    return 1;
  }
  sub_190BE431C();
  v13 = sub_190BE4328();
  v14 = (void (*)(uint64_t))MEMORY[0x1E0CAE4B8];
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
  v15 = isNilOrEmpty(_:trim:)(a1, a2, (uint64_t)v10);
  sub_190B9BDA4((uint64_t)v10, &qword_1ED0337D8, v14);
  v12 = 0;
  if (v15)
  {
    sub_190BE431C();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
    v12 = isNilOrEmpty(_:trim:)(a3, a4, (uint64_t)v10);
    sub_190B9BDA4((uint64_t)v10, &qword_1ED0337D8, (void (*)(uint64_t))MEMORY[0x1E0CAE4B8]);
  }
  return v12;
}

uint64_t URLHandlerMatcher.init(url:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, unint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  v2 = v1;
  v4 = sub_190BE43A0();
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  MEMORY[0x1E0C80A78](v4);
  v62 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void (*)(uint64_t))MEMORY[0x1E0CAE890];
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v53 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - v14;
  v16 = v2 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_url;
  v17 = sub_190BE4628();
  v59 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v16, a1, v17);
  OUTLINED_FUNCTION_5_35();
  sub_190B9BDCC((uint64_t)v15, (uint64_t)v13, (unint64_t *)&qword_1ED033970, v6);
  v18 = sub_190BE4448();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v18) == 1)
  {
    sub_190B9BDA4((uint64_t)v13, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    goto LABEL_32;
  }
  v19 = sub_190BE43C4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v13, v18);
  if (!v19)
  {
LABEL_32:
    v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_33:
    OUTLINED_FUNCTION_5_35();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(a1, v17);
    sub_190B9BDA4((uint64_t)v15, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    sub_190B9B844((uint64_t)v10, v2 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_queryParamValues) = v25;
    return v2;
  }
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v54 = v17;
  v55 = v15;
  v56 = v10;
  v57 = a1;
  v58 = v2;
  v21 = v64;
  v22 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v53 = v19;
  v23 = v19 + v22;
  v24 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
  v60 = *(_QWORD *)(v63 + 72);
  v61 = v24;
  v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v26 = v62;
  while (1)
  {
    v65 = v20;
    v61(v26, v23, v21);
    v27 = sub_190BE4394();
    v29 = v28 ? v27 : 0;
    v30 = v28 ? v28 : 0xE000000000000000;
    v31 = sub_190BE4388();
    v33 = v32;
    if (v25[2])
    {
      OUTLINED_FUNCTION_53();
      v34 = OUTLINED_FUNCTION_2_54();
      v35 = MEMORY[0x1E0DEE9D8];
      if ((v36 & 1) != 0)
      {
        v35 = *(_QWORD *)(v25[7] + 8 * v34);
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = MEMORY[0x1E0DEE9D8];
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_37();
      v35 = v50;
    }
    v37 = *(_QWORD *)(v35 + 16);
    if (v37 >= *(_QWORD *)(v35 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_37();
      v35 = v51;
    }
    *(_QWORD *)(v35 + 16) = v37 + 1;
    v38 = v35 + 16 * v37;
    *(_QWORD *)(v38 + 32) = v29;
    *(_QWORD *)(v38 + 40) = v30;
    OUTLINED_FUNCTION_53();
    swift_isUniquelyReferenced_nonNull_native();
    v66 = v25;
    v39 = OUTLINED_FUNCTION_2_54();
    if (__OFADD__(v25[2], (v40 & 1) == 0))
      break;
    v41 = v39;
    v42 = v40;
    sub_190B47D4C();
    if ((sub_190BE5E04() & 1) != 0)
    {
      v43 = sub_190AEABD0();
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_36;
      v41 = v43;
    }
    v25 = v66;
    if ((v42 & 1) != 0)
    {
      v45 = v66[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v45 + 8 * v41) = v35;
    }
    else
    {
      v66[(v41 >> 6) + 8] |= 1 << v41;
      v46 = (uint64_t *)(v25[6] + 16 * v41);
      *v46 = v31;
      v46[1] = v33;
      *(_QWORD *)(v25[7] + 8 * v41) = v35;
      v47 = v25[2];
      v48 = __OFADD__(v47, 1);
      v49 = v47 + 1;
      if (v48)
        goto LABEL_35;
      v25[2] = v49;
      OUTLINED_FUNCTION_53();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v26 = v62;
    v21 = v64;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
    v23 += v60;
    v20 = v65 - 1;
    if (v65 == 1)
    {
      swift_bridgeObjectRelease();
      a1 = v57;
      v2 = v58;
      v15 = v55;
      v10 = v56;
      v17 = v54;
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = sub_190BE626C();
  __break(1u);
  return result;
}

uint64_t sub_190B98B6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v40;
  unint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  BOOL v60;
  BOOL v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v4 = v2;
  v86 = a2;
  sub_190AC5EC4(0, &qword_1ED0337D8, (void (*)(uint64_t))MEMORY[0x1E0CAE4B8]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v82 - v7;
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v87 = (uint64_t)&v82 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v88 = (unint64_t)&v82 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v82 - v17;
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  v22 = a1[3];
  v23 = a1[4];
  v93 = a1[5];
  v90 = a1[6];
  v91 = v23;
  v95 = a1[7];
  v96 = v21;
  v92 = a1[8];
  v94 = a1[9];
  v24 = v20 == 42 && v19 == 0xE100000000000000;
  v89 = v3;
  if (v24 || (sub_190BE60BC() & 1) != 0)
    goto LABEL_6;
  v84 = v4 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents;
  sub_190B9BDCC(v4 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents, (uint64_t)v18, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v34 = sub_190BE4448();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v34);
  v85 = v34;
  if (EnumTagSinglePayload == 1)
  {
    v83 = v4;
    sub_190B9BDA4((uint64_t)v18, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v82 = 0;
LABEL_31:
    v58 = 0;
    goto LABEL_32;
  }
  v36 = sub_190BE4418();
  v37 = v18;
  v39 = v38;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v37, v34);
  if (!v39)
  {
    v82 = v36;
    v83 = v4;
    goto LABEL_31;
  }
  v40 = v20 == v36 && v39 == v19;
  if (v40 || (sub_190BE60BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v82 = v36;
  v83 = v4;
  v58 = v39;
LABEL_32:
  sub_190BE431C();
  v59 = sub_190BE4328();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v59);
  v60 = isNilOrEmpty(_:trim:)(v20, v19, (uint64_t)v8);
  sub_190B9BDA4((uint64_t)v8, &qword_1ED0337D8, (void (*)(uint64_t))MEMORY[0x1E0CAE4B8]);
  if (!v60)
  {
    swift_bridgeObjectRelease();
LABEL_36:
    v62 = v19;
    v63 = v20;
    sub_190B9BDCC(v84, (uint64_t)v12, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v64 = v85;
    v65 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v85);
    v66 = v62;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (v65 == 1)
    {
      sub_190B9BDA4((uint64_t)v12, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
      v67 = 0;
      v68 = 0;
    }
    else
    {
      v67 = sub_190BE4418();
      v68 = v69;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v12, v64);
    }
    sub_190B992F4();
    swift_allocError();
    *(_QWORD *)v70 = v63;
    *(_QWORD *)(v70 + 8) = v66;
    *(_QWORD *)(v70 + 16) = v67;
    *(_QWORD *)(v70 + 24) = v68;
    *(_QWORD *)(v70 + 40) = 0;
    *(_QWORD *)(v70 + 48) = 0;
    *(_QWORD *)(v70 + 32) = 0;
    *(_BYTE *)(v70 + 56) = 0;
    return swift_willThrow();
  }
  sub_190BE431C();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v59);
  v61 = isNilOrEmpty(_:trim:)(v82, v58, (uint64_t)v8);
  sub_190B9BDA4((uint64_t)v8, &qword_1ED0337D8, (void (*)(uint64_t))MEMORY[0x1E0CAE4B8]);
  swift_bridgeObjectRelease();
  v4 = v83;
  if (!v61)
    goto LABEL_36;
LABEL_6:
  v25 = v4;
  v26 = v96;
  v27 = v22;
  if (v22)
  {
    v28 = v96 == 42 && v22 == 0xE100000000000000;
    if (!v28 && (sub_190BE60BC() & 1) == 0)
    {
      v29 = v25 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents;
      v30 = v88;
      sub_190B9BDCC(v25 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents, v88, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
      v31 = sub_190BE4448();
      if (__swift_getEnumTagSinglePayload(v30, 1, v31) == 1)
      {
        sub_190B9BDA4(v30, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
        v32 = 0;
        v33 = 0;
      }
      else
      {
        v32 = sub_190BE43F4();
        v33 = v41;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
      }
      v42 = v32;
      v26 = v96;
      v43 = sub_190B98568(v96, v27, v42, v33);
      swift_bridgeObjectRelease();
      if (!v43)
      {
        v54 = v87;
        sub_190B9BDCC(v29, v87, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
        v55 = __swift_getEnumTagSinglePayload(v54, 1, v31);
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if (v55 == 1)
        {
          sub_190B9BDA4(v54, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
          v56 = 0;
          v57 = 0;
        }
        else
        {
          v56 = sub_190BE43F4();
          v57 = v80;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v54, v31);
        }
        sub_190B992F4();
        swift_allocError();
        *(_QWORD *)v81 = v26;
        *(_QWORD *)(v81 + 8) = v27;
        *(_QWORD *)(v81 + 16) = v56;
        *(_QWORD *)(v81 + 24) = v57;
        *(_QWORD *)(v81 + 40) = 0;
        *(_QWORD *)(v81 + 48) = 0;
        *(_QWORD *)(v81 + 32) = 0;
        *(_BYTE *)(v81 + 56) = 1;
        return swift_willThrow();
      }
    }
  }
  v107 = MEMORY[0x1E0DEE9E0];
  v97 = v20;
  v98 = v19;
  v44 = v19;
  v99 = v26;
  v100 = v27;
  v45 = v90;
  v46 = v91;
  v47 = v92;
  v48 = v93;
  v101 = v91;
  v102 = v93;
  v103 = v90;
  v104 = v95;
  v88 = v27;
  v49 = v94;
  v105 = v92;
  v106 = v94;
  v50 = v89;
  sub_190B99330(&v97, &v107);
  if (v50)
    return swift_bridgeObjectRelease();
  v97 = v20;
  v98 = v44;
  v99 = v96;
  v100 = v88;
  v101 = v46;
  v102 = v48;
  v103 = v45;
  v104 = v95;
  v105 = v47;
  v106 = v49;
  sub_190B99E78((uint64_t)&v97, &v107);
  v51 = v47;
  v52 = v20;
  v97 = v20;
  v98 = v44;
  v99 = v96;
  v100 = v88;
  v101 = v46;
  v102 = v48;
  v103 = v45;
  v104 = v95;
  v53 = v51;
  v105 = v51;
  v106 = v49;
  sub_190B9A328((uint64_t)&v97, (uint64_t)&v107);
  v71 = v25 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_url;
  v72 = sub_190BE4628();
  v73 = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v86, v71, v72);
  v74 = v107;
  v75 = type metadata accessor for URLHandlerMatch();
  v76 = (uint64_t *)(v73 + *(int *)(v75 + 20));
  *v76 = v52;
  v76[1] = v44;
  v77 = v95;
  v78 = v88;
  v76[2] = v96;
  v76[3] = v78;
  v76[4] = v46;
  v76[5] = v48;
  v76[6] = v45;
  v76[7] = v77;
  v76[8] = v53;
  v76[9] = v94;
  *(_QWORD *)(v73 + *(int *)(v75 + 24)) = v74;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

unint64_t sub_190B992F4()
{
  unint64_t result;

  result = qword_1ED0324F0;
  if (!qword_1ED0324F0)
  {
    result = MEMORY[0x194016EF8](&unk_190BEE700, &type metadata for URLHandlerMatcher.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED0324F0);
  }
  return result;
}

uint64_t sub_190B99330(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  BOOL v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  unint64_t v95;
  char v96;
  char v97;
  _QWORD *v98;
  unint64_t v99;
  char v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  BOOL v120;
  int EnumTagSinglePayload;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;

  v4 = v3;
  v147 = a2;
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v132 - v11;
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v132 - v14;
  v16 = a1[5];
  if (!v16)
    return result;
  v17 = a1[4];
  if (v17 == 42 && v16 == 0xE100000000000000)
    return result;
  v19 = a1[9];
  result = sub_190BE60BC();
  if ((result & 1) != 0)
    return result;
  v134 = v19;
  v138 = v2;
  v151 = v17;
  v152 = v16;
  v149 = 14895;
  v150 = 0xE200000000000000;
  sub_190AD8E3C();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v20 = sub_190BE5A8C();
  if ((v20 & 1) == 0)
  {
    v151 = v17;
    v152 = v16;
    v149 = 10799;
    v150 = 0xE200000000000000;
    v20 = sub_190BE5A8C();
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v115 = v138 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents;
      sub_190B9BDCC(v138 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents, (uint64_t)v12, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
      v116 = sub_190BE4448();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v116) == 1)
      {
        sub_190B9BDA4((uint64_t)v12, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
        v117 = 0;
        v118 = 0;
      }
      else
      {
        v117 = sub_190BE4400();
        v118 = v119;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v116 - 8) + 8))(v12, v116);
      }
      v120 = sub_190B98568(v17, v16, v117, v118);
      result = swift_bridgeObjectRelease();
      if (v120)
        return result;
      sub_190B9BDCC(v115, (uint64_t)v9, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v116);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      if (EnumTagSinglePayload == 1)
      {
        sub_190B9BDA4((uint64_t)v9, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
        v122 = 0;
        v123 = 0;
      }
      else
      {
        v122 = sub_190BE4400();
        v123 = v124;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v116 - 8) + 8))(v9, v116);
      }
      sub_190B992F4();
      swift_allocError();
      *(_QWORD *)v113 = v17;
      *(_QWORD *)(v113 + 8) = v16;
      *(_QWORD *)(v113 + 16) = v122;
      *(_QWORD *)(v113 + 24) = v123;
      *(_QWORD *)(v113 + 40) = 0;
      *(_QWORD *)(v113 + 48) = 0;
      *(_QWORD *)(v113 + 32) = 0;
      v114 = 2;
LABEL_84:
      *(_BYTE *)(v113 + 56) = v114;
      return swift_willThrow();
    }
  }
  v151 = 47;
  v152 = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v20);
  v131 = &v151;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v21 = (_QWORD *)sub_190AE4F08(0x7FFFFFFFFFFFFFFFLL, 1u, (uint64_t (*)(uint64_t))sub_190AE528C, (uint64_t)(&v132 - 4), v17, v16);
  swift_bridgeObjectRelease();
  sub_190B9BDCC(v138 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents, (uint64_t)v15, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v22 = sub_190BE4448();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v22) == 1)
  {
    sub_190B9BDA4((uint64_t)v15, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v23 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v24 = sub_190BE4400();
    v26 = v25;
    v27 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v15, v22);
    v151 = 47;
    v152 = 0xE100000000000000;
    MEMORY[0x1E0C80A78](v27);
    v131 = &v151;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v23 = sub_190AE4F08(0x7FFFFFFFFFFFFFFFLL, 1u, (uint64_t (*)(uint64_t))sub_190B9BE14, (uint64_t)(&v132 - 4), v24, v26);
    swift_bridgeObjectRelease();
  }
  v28 = v21[2];
  v29 = *(_QWORD *)(v23 + 16);
  if (v28 != v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190B992F4();
    swift_allocError();
    *(_QWORD *)v113 = v28;
    *(_QWORD *)(v113 + 8) = v29;
    *(_OWORD *)(v113 + 16) = 0u;
    *(_OWORD *)(v113 + 32) = 0u;
    *(_QWORD *)(v113 + 48) = 0;
    v114 = 3;
    goto LABEL_84;
  }
  if (!v28)
  {
LABEL_74:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v139 = v21[2];
  v31 = v21[6];
  v30 = v21[7];
  v33 = v21[4];
  v32 = v21[5];
  v141 = v21;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v34 = 0;
  v35 = 1;
  v140 = v23;
  while (1)
  {
    v148 = v35;
    v153 = v34;
    v36 = *(_QWORD *)(v23 + v34 + 40);
    v143 = *(_QWORD *)(v23 + v34 + 32);
    v144 = v36;
    v37 = *(_QWORD *)(v23 + v34 + 56);
    v142 = *(_QWORD *)(v23 + v34 + 48);
    swift_bridgeObjectRetain_n();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v38 = MEMORY[0x194015C98](42, 0xE100000000000000);
    v145 = v33;
    v41 = v33 >> 16;
    v42 = v32 >> 16;
    if (v31 == v43 && v30 == v40 && v41 == v38 >> 16 && v42 == v39 >> 16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v52 = v139;
      v23 = v140;
      v66 = v153;
      v51 = v141;
      goto LABEL_68;
    }
    v47 = v32;
    v146 = v37;
    v48 = v4;
    LOBYTE(v131) = 0;
    v49 = v31;
    v50 = sub_190BE5FB4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if ((v50 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v48;
      v23 = v140;
      v51 = v141;
      v52 = v139;
LABEL_65:
      v66 = v153;
      goto LABEL_68;
    }
    if (sub_190B40534(58, 0xE100000000000000, v145, v47))
    {
      if (v47 >> 14 < (unint64_t)sub_190BE59D8() >> 14)
        goto LABEL_90;
      v53 = v48;
      v54 = sub_190BE5A08();
      v56 = v55;
      v58 = v57;
      v60 = v59;
      swift_bridgeObjectRelease();
      MEMORY[0x19401532C](v54, v56, v58, v60);
      v61 = v134;
      v62 = *(_QWORD *)(v134 + 16);
      v145 = v60;
      v136 = v56;
      v137 = v54;
      v135 = v58;
      if (v62 && (v63 = sub_190AEABD0(), (v64 & 1) != 0))
      {
        v65 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v63);
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      }
      else
      {
        v65 = 0;
      }
      swift_bridgeObjectRelease();
      v73 = v143;
      v74 = v144;
      v75 = v142;
      v76 = v146;
      v77 = MEMORY[0x19401532C](v143, v144, v142, v146);
      sub_190B9B5E4(v77, v78, v65);
      if (v53)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v133 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v79 = MEMORY[0x19401532C](v73, v74, v75, v76);
      v81 = v80;
      swift_bridgeObjectRelease();
      v82 = MEMORY[0x19401532C](v137, v136, v135, v145);
      v84 = v83;
      swift_bridgeObjectRelease();
      v85 = *v147;
      if (*(_QWORD *)(*v147 + 16))
      {
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        v86 = sub_190AEABD0();
        v87 = MEMORY[0x1E0DEE9D8];
        if ((v88 & 1) != 0)
        {
          v87 = *(_QWORD *)(*(_QWORD *)(v85 + 56) + 8 * v86);
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v87 = MEMORY[0x1E0DEE9D8];
      }
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190AFE0AC();
        v87 = v111;
      }
      v89 = *(_QWORD *)(v87 + 16);
      if (v89 >= *(_QWORD *)(v87 + 24) >> 1)
      {
        sub_190AFE0AC();
        v87 = v112;
      }
      *(_QWORD *)(v87 + 16) = v89 + 1;
      v90 = v87 + 16 * v89;
      *(_QWORD *)(v90 + 32) = v79;
      *(_QWORD *)(v90 + 40) = v81;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v91 = v147;
      swift_isUniquelyReferenced_nonNull_native();
      v151 = *v91;
      v92 = v151;
      *v91 = 0x8000000000000000;
      v93 = sub_190AEABD0();
      if (__OFADD__(*(_QWORD *)(v92 + 16), (v94 & 1) == 0))
        goto LABEL_91;
      v95 = v93;
      v96 = v94;
      sub_190B47D4C();
      v97 = sub_190BE5E04();
      v4 = v133;
      v98 = v141;
      if ((v97 & 1) != 0)
      {
        v99 = sub_190AEABD0();
        if ((v96 & 1) != (v100 & 1))
          goto LABEL_93;
        v95 = v99;
      }
      v101 = (_QWORD *)v151;
      if ((v96 & 1) != 0)
      {
        v102 = *(_QWORD *)(v151 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v102 + 8 * v95) = v87;
      }
      else
      {
        *(_QWORD *)(v151 + 8 * (v95 >> 6) + 64) |= 1 << v95;
        v103 = (uint64_t *)(v101[6] + 16 * v95);
        *v103 = v82;
        v103[1] = v84;
        *(_QWORD *)(v101[7] + 8 * v95) = v87;
        v104 = v101[2];
        v105 = __OFADD__(v104, 1);
        v106 = v104 + 1;
        if (v105)
          goto LABEL_92;
        v101[2] = v106;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      }
      v52 = v139;
      v51 = v98;
      *v147 = (uint64_t)v101;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v23 = v140;
      goto LABEL_65;
    }
    v67 = v146;
    v68 = v49 == v142 && v30 == v146;
    v69 = v68 && v41 == v143 >> 16;
    v70 = v69 && v42 == v144 >> 16;
    v4 = v48;
    v66 = v153;
    if (v70)
    {
      swift_bridgeObjectRelease_n();
      v51 = v141;
    }
    else
    {
      LOBYTE(v131) = 0;
      v71 = v142;
      v72 = sub_190BE5FB4();
      v51 = v141;
      if ((v72 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v125 = MEMORY[0x19401532C](v145, v47, v49, v30);
        v127 = v126;
        swift_bridgeObjectRelease();
        v128 = MEMORY[0x19401532C](v143, v144, v71, v67);
        v130 = v129;
        swift_bridgeObjectRelease();
        sub_190B992F4();
        swift_allocError();
        *(_QWORD *)v113 = v125;
        *(_QWORD *)(v113 + 8) = v127;
        *(_QWORD *)(v113 + 16) = v128;
        *(_QWORD *)(v113 + 24) = v130;
        *(_QWORD *)(v113 + 40) = 0;
        *(_QWORD *)(v113 + 48) = 0;
        *(_QWORD *)(v113 + 32) = 0;
        v114 = 4;
        goto LABEL_84;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v52 = v139;
    v23 = v140;
LABEL_68:
    if (v52 == v148)
      goto LABEL_74;
    if (v148 >= v51[2])
      break;
    v107 = v4;
    v108 = v148;
    v35 = v148 + 1;
    v31 = *(_QWORD *)((char *)v51 + v66 + 80);
    v30 = *(_QWORD *)((char *)v51 + v66 + 88);
    v33 = *(_QWORD *)((char *)v51 + v66 + 64);
    v32 = *(_QWORD *)((char *)v51 + v66 + 72);
    v109 = *(_QWORD *)(v23 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v34 = v66 + 32;
    v110 = v108 >= v109;
    v4 = v107;
    if (v110)
      goto LABEL_89;
  }
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  result = sub_190BE626C();
  __break(1u);
  return result;
}

void sub_190B99E78(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  int EnumTagSinglePayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[4];

  v3 = v2;
  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v51 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v51 - v13;
  v15 = *(_QWORD *)(a1 + 56);
  if (v15)
  {
    v16 = *(_QWORD *)(a1 + 48);
    v17 = v16 == 42 && v15 == 0xE100000000000000;
    if (!v17 && (sub_190BE60BC() & 1) == 0)
    {
      v51[2] = v16;
      v51[3] = v15;
      v51[0] = 58;
      v51[1] = 0xE100000000000000;
      sub_190AD8E3C();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      if ((sub_190BE5A8C() & 1) != 0)
      {
        sub_190B9BDCC(v3 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents, (uint64_t)v14, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
        v18 = sub_190BE4448();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v18) == 1)
        {
          swift_bridgeObjectRelease();
          sub_190B9BDA4((uint64_t)v14, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
        }
        else
        {
          v23 = sub_190BE4430();
          v25 = v24;
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v14, v18);
          if (v25)
          {
            v26 = sub_190BE50F0();
            v27 = sub_190AD8E78(v26, v16, v15);
            v29 = v28;
            v31 = v30;
            v33 = v32;
            swift_bridgeObjectRelease();
            v34 = MEMORY[0x19401532C](v27, v29, v31, v33);
            v36 = v35;
            swift_bridgeObjectRelease();
            v37 = *a2;
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            sub_190B20938(v34, v36, v37);
            v39 = v38;
            swift_bridgeObjectRelease();
            if (!v39)
              v39 = MEMORY[0x1E0DEE9D8];
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_190AFE0AC();
              v39 = v49;
            }
            v40 = *(_QWORD *)(v39 + 16);
            if (v40 >= *(_QWORD *)(v39 + 24) >> 1)
            {
              sub_190AFE0AC();
              v39 = v50;
            }
            *(_QWORD *)(v39 + 16) = v40 + 1;
            v41 = v39 + 16 * v40;
            *(_QWORD *)(v41 + 32) = v23;
            *(_QWORD *)(v41 + 40) = v25;
            _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
            sub_190B1D670(v39, v34, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v19 = v3 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents;
        sub_190B9BDCC(v3 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents, (uint64_t)v12, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
        v20 = sub_190BE4448();
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v20) == 1)
        {
          sub_190B9BDA4((uint64_t)v12, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
          v21 = 0;
          v22 = 0;
        }
        else
        {
          v21 = sub_190BE4430();
          v22 = v42;
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v12, v20);
        }
        v43 = sub_190B98568(v16, v15, v21, v22);
        swift_bridgeObjectRelease();
        if (!v43)
        {
          sub_190B9BDCC(v19, (uint64_t)v9, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v20);
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          if (EnumTagSinglePayload == 1)
          {
            sub_190B9BDA4((uint64_t)v9, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
            v45 = 0;
            v46 = 0;
          }
          else
          {
            v45 = sub_190BE4430();
            v46 = v47;
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v9, v20);
          }
          sub_190B992F4();
          swift_allocError();
          *(_QWORD *)v48 = v16;
          *(_QWORD *)(v48 + 8) = v15;
          *(_QWORD *)(v48 + 16) = v45;
          *(_QWORD *)(v48 + 24) = v46;
          *(_QWORD *)(v48 + 40) = 0;
          *(_QWORD *)(v48 + 48) = 0;
          *(_QWORD *)(v48 + 32) = 0;
          *(_BYTE *)(v48 + 56) = 7;
          swift_willThrow();
        }
      }
    }
  }
}

uint64_t sub_190B9A328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD v35[13];
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = v2;
  v41 = a2;
  v6 = sub_190BE4328();
  v42 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v35[3] = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v35[11] = (char *)v35 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v35[1] = (char *)v35 - v12;
  MEMORY[0x1E0C80A78](v11);
  v35[4] = (char *)v35 - v13;
  sub_190AC5EC4(0, &qword_1ED0337D8, v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v35[7] = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v39 = (char *)v35 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v43 = (char *)v35 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v46 = (char *)v35 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v35[2] = (char *)v35 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v35[6] = (char *)v35 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  result = MEMORY[0x1E0C80A78](v28);
  v40 = (char *)v35 - v31;
  v32 = *(_QWORD *)(a1 + 64);
  if (v32)
  {
    if (*(_QWORD *)(v32 + 16))
    {
      v35[5] = v30;
      v37 = OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_queryParamValues;
      v38 = (uint64_t *)(v32 + 32);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v35[12] = v4;
      v44 = v6;
      v35[9] = v32;
      v35[8] = v3;
      if (*(_QWORD *)(v32 + 16))
      {
        v33 = v38[1];
        v48 = *v38;
        v34 = (char *)&loc_190B9A5B8 + *((int *)qword_190B9B5D0 + *((unsigned __int8 *)v38 + 32));
        v47 = v38[2];
        v45 = v33;
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x190B9B5B0);
    }
  }
  return result;
}

uint64_t sub_190B9B5E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  _BYTE *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!a3)
    return result;
  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return result;
  v6 = result;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (i = (_BYTE *)(a3 + 48); ; i += 24)
  {
    v9 = *((_QWORD *)i - 2);
    v8 = *((_QWORD *)i - 1);
    if ((*i & 1) == 0)
      break;
    if (sub_190BE50C0() != v9)
    {
      swift_bridgeObjectRelease();
      v10 = sub_190BE5FC0();
      v12 = v11;
      sub_190BE50C0();
      v13 = sub_190BE5FC0();
      v15 = v14;
      sub_190B992F4();
      swift_allocError();
      *(_QWORD *)v16 = v9;
      *(_QWORD *)(v16 + 8) = v8;
      *(_QWORD *)(v16 + 16) = 1;
      *(_QWORD *)(v16 + 24) = v10;
      *(_QWORD *)(v16 + 32) = v12;
      *(_QWORD *)(v16 + 40) = v13;
      *(_QWORD *)(v16 + 48) = v15;
      *(_BYTE *)(v16 + 56) = 5;
      return swift_willThrow();
    }
LABEL_9:
    if (!--v4)
      return swift_bridgeObjectRelease();
  }
  sub_190B45B04(*((_QWORD *)i - 2), *((_QWORD *)i - 1), 0);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if ((sub_190B40660() & 1) != 0)
  {
    sub_190B45B24(v9, v8, 0);
    sub_190B45B24(v9, v8, 0);
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  sub_190B992F4();
  swift_allocError();
  *(_QWORD *)v17 = v9;
  *(_QWORD *)(v17 + 8) = v8;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = v9;
  *(_QWORD *)(v17 + 32) = v8;
  *(_QWORD *)(v17 + 40) = v6;
  *(_QWORD *)(v17 + 48) = a2;
  *(_BYTE *)(v17 + 56) = 5;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return swift_willThrow();
}

void URLHandlerMatcher.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_190BE4628();
  OUTLINED_FUNCTION_71_0(v1);
  sub_190B9BDA4(v0 + OBJC_IVAR____TtC13TeaFoundation17URLHandlerMatcher_urlComponents, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0();
}

uint64_t URLHandlerMatcher.__deallocating_deinit()
{
  URLHandlerMatcher.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190B9B844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190AC5EC4(0, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B9B898()
{
  return type metadata accessor for URLHandlerMatcher();
}

uint64_t type metadata accessor for URLHandlerMatcher()
{
  uint64_t result;

  result = qword_1ED0324F8;
  if (!qword_1ED0324F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_190B9B8D8()
{
  unint64_t v0;
  unint64_t v1;

  sub_190BE4628();
  if (v0 <= 0x3F)
  {
    sub_190AC5EC4(319, (unint64_t *)&qword_1ED033970, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for URLHandlerMatcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of URLHandlerMatcher.__allocating_init(url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_190B9B990(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, char a8)
{
  switch(a8)
  {
    case 0:
    case 1:
    case 2:
    case 4:
    case 7:
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      goto LABEL_5;
    case 5:
      sub_190B45B04(result, a2, a3 & 1);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      goto LABEL_5;
    case 6:
      goto LABEL_5;
    case 8:
      sub_190B45888(result, a2, a3, a4, a5);
LABEL_5:
      result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for URLHandlerMatcher.Errors(uint64_t a1)
{
  return sub_190B9BA74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t sub_190B9BA74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, char a8)
{
  switch(a8)
  {
    case 0:
    case 1:
    case 2:
    case 4:
    case 7:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 5:
      sub_190B45B24(result, a2, a3 & 1);
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 6:
      goto LABEL_3;
    case 8:
      sub_190B458F0(result, a2, a3, a4, a5);
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for URLHandlerMatcher.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_190B9B990(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for URLHandlerMatcher.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_190B9B990(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  sub_190B9BA74(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for URLHandlerMatcher.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_190B9BA74(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerMatcher.Errors(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xF7 && *(_BYTE *)(a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 246;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 56);
      if (v3 <= 9)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerMatcher.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 247;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_190B9BD54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 56) <= 8u)
    return *(unsigned __int8 *)(a1 + 56);
  else
    return (*(_DWORD *)a1 + 9);
}

uint64_t sub_190B9BD6C(uint64_t result, unsigned int a2)
{
  if (a2 >= 9)
  {
    *(_QWORD *)result = a2 - 9;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    LOBYTE(a2) = 9;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for URLHandlerMatcher.Errors()
{
  return &type metadata for URLHandlerMatcher.Errors;
}

void sub_190B9BDA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3;

  sub_190AC5EC4(0, a2, a3);
  OUTLINED_FUNCTION_71_0(v3);
  OUTLINED_FUNCTION_0();
}

void sub_190B9BDCC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_190AC5EC4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190B9BE14(uint64_t *a1)
{
  return sub_190AE528C(a1) & 1;
}

uint64_t dispatch thunk of StateMachineEvent.fromState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StateMachineEvent.toState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for XPCSelectorBuilder()
{
  return &type metadata for XPCSelectorBuilder;
}

uint64_t dispatch thunk of static BinaryDecodable.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of BinaryEncodable.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for AuthTokenResponse()
{
  return &type metadata for AuthTokenResponse;
}

uint64_t sub_190B9BE90(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736E656B6F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_190BE60BC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_190B9BF0C()
{
  return 0x736E656B6F74;
}

_QWORD *sub_190B9BF20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  sub_190B9C120();
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B9C178();
  sub_190BE6344();
  if (!v1)
  {
    sub_190B9C1B4();
    sub_190B9C208();
    sub_190BE5F3C();
    OUTLINED_FUNCTION_0_62();
    v4 = v6;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

uint64_t sub_190B9C040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190B9BE90(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_190B9C068()
{
  return sub_190B0F980();
}

uint64_t sub_190B9C080@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190B29360();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190B9C0A8()
{
  sub_190B9C178();
  return sub_190BE6404();
}

uint64_t sub_190B9C0D0()
{
  sub_190B9C178();
  return sub_190BE6410();
}

_QWORD *sub_190B9C0F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_190B9BF20(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_190B9C120()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02F3C0)
  {
    sub_190B9C178();
    v0 = sub_190BE5F54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02F3C0);
  }
}

unint64_t sub_190B9C178()
{
  unint64_t result;

  result = qword_1ED02F168;
  if (!qword_1ED02F168)
  {
    result = MEMORY[0x194016EF8](&unk_190BEE8B0, &type metadata for AuthTokenResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F168);
  }
  return result;
}

void sub_190B9C1B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED02F368)
  {
    type metadata accessor for AuthTokenResponseItem();
    v0 = sub_190BE5438();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED02F368);
  }
}

unint64_t sub_190B9C208()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED02F370;
  if (!qword_1ED02F370)
  {
    sub_190B9C1B4();
    v2 = v1;
    v3 = sub_190B9C268();
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED02F370);
  }
  return result;
}

unint64_t sub_190B9C268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED02F248;
  if (!qword_1ED02F248)
  {
    v1 = type metadata accessor for AuthTokenResponseItem();
    result = MEMORY[0x194016EF8](&unk_190BECCC0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED02F248);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AuthTokenResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190B9C2E8 + 4 * asc_190BEE7A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190B9C308 + 4 * byte_190BEE7A5[v4]))();
}

_BYTE *sub_190B9C2E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190B9C308(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B9C310(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B9C318(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190B9C320(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190B9C328(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AuthTokenResponse.CodingKeys()
{
  return &type metadata for AuthTokenResponse.CodingKeys;
}

unint64_t sub_190B9C348()
{
  unint64_t result;

  result = qword_1EE2003F8;
  if (!qword_1EE2003F8)
  {
    result = MEMORY[0x194016EF8](&unk_190BEE888, &type metadata for AuthTokenResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE2003F8);
  }
  return result;
}

unint64_t sub_190B9C388()
{
  unint64_t result;

  result = qword_1ED02F178;
  if (!qword_1ED02F178)
  {
    result = MEMORY[0x194016EF8](&unk_190BEE7F8, &type metadata for AuthTokenResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F178);
  }
  return result;
}

unint64_t sub_190B9C3C8()
{
  unint64_t result;

  result = qword_1ED02F170;
  if (!qword_1ED02F170)
  {
    result = MEMORY[0x194016EF8](&unk_190BEE820, &type metadata for AuthTokenResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED02F170);
  }
  return result;
}

uint64_t static TaskScheduler.promise<A>(_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1ED034570 != -1)
    swift_once();
  return TaskScheduler.promise<A>(_:)(a1, a2, a3, a4);
}

uint64_t static TaskScheduler.scheduleAfter(_:_:)(uint64_t a1, uint64_t a2, double a3)
{
  if (qword_1ED034570 != -1)
    swift_once();
  return TaskScheduler.scheduleAfter(_:_:)(a1, a2, a3);
}

uint64_t TaskScheduler.scheduleAfter(_:_:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unsigned int v21;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a1;
  v7 = sub_190BE4C40();
  v27 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_0();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_8_40();
  v25 = *(_QWORD *)(v12 - 8);
  v26 = v12;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_5_36();
  v14 = sub_190BE4CAC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - v19;
  v21 = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  v29 = *(_QWORD *)(v3 + 16);
  sub_190BE4CA0();
  MEMORY[0x194014FA8](v18, a3);
  v30 = *(void (**)(char *, uint64_t))(v15 + 8);
  v30(v18, v14);
  if (v21)
  {
    sub_190BE4C7C();
    v34 = v28;
    v35 = a2;
    v32 = MEMORY[0x1E0C809B0];
    v33 = 1107296256;
    OUTLINED_FUNCTION_11_28((uint64_t)sub_190AB3224);
    v31 = MEMORY[0x1E0DEE9D8];
    sub_190AC2574((unint64_t *)&qword_1ED034E18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    OUTLINED_FUNCTION_6_41();
    sub_190AC2574((unint64_t *)&qword_1ED034E28, (uint64_t (*)(uint64_t))sub_190ADCAF0, MEMORY[0x1E0DEAF38]);
    swift_retain();
    sub_190BE5B70();
    sub_190BE4CF4();
    OUTLINED_FUNCTION_181();
    sub_190BE4CD0();
    swift_release();
    sub_190BE58F4();
    swift_release();
    return OUTLINED_FUNCTION_7_41();
  }
  else
  {
    v34 = v28;
    v35 = a2;
    v32 = MEMORY[0x1E0C809B0];
    v33 = 1107296256;
    v23 = OUTLINED_FUNCTION_11_28((uint64_t)sub_190AB3224);
    swift_retain();
    sub_190BE4C64();
    v31 = MEMORY[0x1E0DEE9D8];
    sub_190AC2574((unint64_t *)&qword_1ED034E18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    OUTLINED_FUNCTION_6_41();
    sub_190AC2574((unint64_t *)&qword_1ED034E28, (uint64_t (*)(uint64_t))sub_190ADCAF0, MEMORY[0x1E0DEAF38]);
    sub_190BE5B70();
    MEMORY[0x194015B84](v20, v4, v11, v23);
    _Block_release(v23);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v11, v7);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v4, v26);
    OUTLINED_FUNCTION_7_41();
    return swift_release();
  }
}

id TaskScheduler.callbackQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

Swift::Void __swiftcall TaskScheduler.scheduleLowPriority(_:)(NSOperation a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + 32), sel_addOperation_, a1.super.isa);
}

uint64_t TaskScheduler.promise<A>(_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for Promise(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x50), a3, a4);
  v5 = a1;
  OUTLINED_FUNCTION_9_0();
  Promise.__allocating_init(_:scheduleOn:)();
  v7 = v6;
  swift_release();
  return v7;
}

id sub_190B9C8C0(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 24), sel_addOperation_, a1);
}

uint64_t TaskScheduler.scheduleAsync<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_25();
}

uint64_t sub_190B9C8E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = OUTLINED_FUNCTION_14_29(v1);
  return OUTLINED_FUNCTION_1_61(v2, v3);
}

uint64_t sub_190B9C92C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t TaskScheduler.scheduleLowPriorityAsync<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_25();
}

uint64_t sub_190B9C988()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = OUTLINED_FUNCTION_14_29(v1);
  return OUTLINED_FUNCTION_1_61(v2, v3);
}

id *TaskScheduler.deinit()
{
  id *v0;

  return v0;
}

uint64_t TaskScheduler.__deallocating_deinit()
{
  TaskScheduler.deinit();
  return swift_deallocClassInstance();
}

id static TaskScheduler.schedule(_:)()
{
  if (qword_1ED034570 != -1)
    swift_once();
  return OUTLINED_FUNCTION_4_38(*((id *)off_1ED034380 + 3), sel_addOperation_);
}

id static TaskScheduler.scheduleLowPriority(_:)()
{
  if (qword_1ED034570 != -1)
    swift_once();
  return OUTLINED_FUNCTION_4_38(*((id *)off_1ED034380 + 4), sel_addOperation_);
}

uint64_t method lookup function for TaskScheduler()
{
  return swift_lookUpClassMethod();
}

uint64_t withOSActivity<A>(_:block:)(const char *a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  os_activity_scope_state_s state;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if ((a3 & 1) != 0)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    if (a1 >> 11 == 27)
      __break(1u);
    if (a1 >> 16 > 0x10)
    {
      __break(1u);
    }
    else if ((a1 & 0xFFFFFF80) == 0 && a1 > 0xFF)
    {
      __break(1u);
      goto LABEL_19;
    }
    OUTLINED_FUNCTION_0_63();
    v15 = v8;
    if (qword_1ED032958 == -1)
    {
LABEL_11:
      v6 = qword_1ED032950;
      v7 = (const char *)&v15;
      goto LABEL_12;
    }
LABEL_19:
    swift_once();
    goto LABEL_11;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (qword_1ED032958 != -1)
LABEL_15:
    swift_once();
  v6 = qword_1ED032950;
  v7 = a1;
LABEL_12:
  v9 = _os_activity_create(&dword_190AA0000, v7, v6, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v9, &state);
  a4(v10, v11, v12, v13);
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

uint64_t withOSActivity<A>(_:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 64) = a6;
  *(_BYTE *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B9CD28()
{
  uint64_t v0;
  char v1;
  const char *v2;
  uint64_t v3;
  NSObject *v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v0 + 16) = 0;
  v1 = *(_BYTE *)(v0 + 96);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(swift_task_alloc() + 16) = &dword_190AA0000;
  v2 = *(const char **)(v0 + 48);
  if ((v1 & 1) == 0)
  {
    if (v2)
      goto LABEL_10;
    __break(1u);
  }
  if ((unint64_t)v2 >> 32)
  {
    __break(1u);
  }
  else
  {
    if (v2 >> 11 == 27)
      goto LABEL_17;
    if (v2 >> 16 <= 0x10)
    {
      if ((v2 & 0xFFFFFF80) != 0 || v2 <= 0xFF)
        goto LABEL_9;
      __break(1u);
LABEL_17:
      __break(1u);
    }
  }
  __break(1u);
LABEL_9:
  v2 = (const char *)(v0 + 32);
  OUTLINED_FUNCTION_0_63();
  *(_QWORD *)(v0 + 32) = v3;
LABEL_10:
  if (qword_1ED032958 != -1)
    swift_once();
  v4 = _os_activity_create(&dword_190AA0000, v2, (os_activity_t)qword_1ED032950, OS_ACTIVITY_FLAG_DEFAULT);
  *(_QWORD *)(v0 + 72) = v4;
  v5 = *(int **)(v0 + 56);
  swift_task_dealloc();
  os_activity_scope_enter(v4, (os_activity_scope_state_t)(v0 + 16));
  v6 = *v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v7;
  *v7 = v0;
  v7[1] = sub_190B9CF08;
  return ((uint64_t (*)(_QWORD))((char *)v5 + v6))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_190B9CF08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8();
}

uint64_t sub_190B9CFA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_52();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B9D000()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_52();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B9D058()
{
  qword_1ED032950 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t sub_190B9D080()
{
  return swift_initClassMetadata2();
}

void sub_190B9D0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  sub_190B9D264(a1, a2, a3, a4);
}

uint64_t sub_190B9D15C(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_190B9D1A4(a1, a2);
}

uint64_t sub_190B9D1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_190B9D1E0()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t sub_190B9D204()
{
  sub_190B9D1E0();
  return swift_deallocClassInstance();
}

BOOL sub_190B9D220()
{
  uint64_t v0;
  uint64_t v1;

  v1 = MEMORY[0x1940170E4](*(_QWORD *)(v0 + qword_1EE200418) + 32);
  if (v1)
    swift_unknownObjectRelease();
  return v1 == 0;
}

void sub_190B9D264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_BYTE *)(a4 + 16);
  *(_QWORD *)(v4 + qword_1EE200428) = a2;
  v7 = v4 + qword_1EE200420;
  *(_OWORD *)v7 = *(_OWORD *)a4;
  *(_BYTE *)(v7 + 16) = v6;
  v8 = v4 + qword_1EE200430;
  *(_OWORD *)v8 = *(_OWORD *)a3;
  *(_QWORD *)(v8 + 16) = v5;
  type metadata accessor for CallbackInstanceDefinition.Wrapper();
}

uint64_t sub_190B9D2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_190B9D15C(v2, v1);
  *(_QWORD *)(v0 + qword_1EE200418) = v4;
  v5 = sub_190AC6604(v3, (uint64_t)sub_190B9D754, v4);
  swift_retain();
  return v5;
}

uint64_t sub_190B9D348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = MEMORY[0x1940170E4](a3 + 32);
  if (result)
  {
    (*(void (**)(void))(a3 + 16))();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190B9D3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  _QWORD v24[4];
  _QWORD v25[2];
  unsigned __int8 v26;
  _QWORD v27[3];

  v7 = *v3;
  v8 = sub_190BE4820();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  v15 = *(_QWORD *)(v7 + 152);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v24[3] = v27[0];
    v24[1] = type metadata accessor for CallbackInstanceDefinition(0, *(_QWORD *)(v7 + 144), v15, v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, (uint64_t)v3 + qword_1ED039A98, v8);
    v18 = *(_QWORD *)((char *)v3 + qword_1EE200428);
    v19 = *(_QWORD *)((char *)v3 + qword_1EE200430 + 8);
    v20 = *(_QWORD *)((char *)v3 + qword_1EE200430 + 16);
    v27[0] = *(_QWORD *)((char *)v3 + qword_1EE200430);
    v27[1] = v19;
    v27[2] = v20;
    v24[2] = a1;
    v22 = *(_QWORD *)((char *)v3 + qword_1EE200420 + 8);
    v23 = *((_BYTE *)v3 + qword_1EE200420 + 16);
    v25[0] = *(_QWORD *)((char *)v3 + qword_1EE200420);
    v21 = v25[0];
    v25[1] = v22;
    v26 = v23;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B5B5C4(v21, v22, v23);
    swift_retain();
    sub_190B9D0E4((uint64_t)v12, v18, (uint64_t)v27, (uint64_t)v25);
  }
  return result;
}

uint64_t sub_190B9D618()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_0_64(v0 + qword_1EE200420);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B9D658()
{
  uint64_t v0;

  v0 = sub_190AA791C();
  swift_release();
  OUTLINED_FUNCTION_0_64(v0 + qword_1EE200420);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_190B9D6B0()
{
  sub_190B9D658();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CallbackInstanceDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallbackInstanceDefinition);
}

uint64_t sub_190B9D6DC()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for CallbackInstanceDefinition.Wrapper()
{
  JUMPOUT(0x194016E74);
}

uint64_t sub_190B9D734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190B9D3B4(a1, a2, a3);
}

uint64_t sub_190B9D754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190B9D348(a1, a2, v2);
}

uint64_t static Merging.firstWriteWins<A>(_:_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_65(a1, a2);
}

id (*static Merging.throwError<A>(_:)(void *a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = a1;
  return sub_190B9D814;
}

id sub_190B9D7C0(uint64_t a1, uint64_t a2, void *a3)
{
  swift_willThrow();
  return a3;
}

uint64_t sub_190B9D7F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_190B9D814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190B9D7C0(a1, a2, *(void **)(v2 + 24));
}

ValueMetadata *type metadata accessor for Merging()
{
  return &type metadata for Merging;
}

uint64_t dispatch thunk of BundleAssemblyType.assemblies.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL sub_190B9D844(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t sub_190B9D854@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (result < 0 || *(_QWORD *)(a3 + 16) < a2)
  {
    __break(1u);
  }
  else
  {
    a4[1] = a2;
    a4[2] = a3;
    *a4 = result;
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return result;
}

uint64_t sub_190B9D878@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  a2[1] = 0;
  a2[2] = *(_QWORD *)(a1 + 16);
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_190B9D888(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (a2 < 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v2 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v3 = a2 - 1;
    while (v2 > v3)
    {
      ++result;
      if (!--a2)
        return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_190B9D8B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (a2)
  {
    while (1)
    {
      if (a3 == result)
        return 0;
      if (result == 0x7FFFFFFFFFFFFFFFLL)
        break;
      ++result;
      if (!--a2)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_190B9D904(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;

  if (result >= a2)
  {
    v4 = __OFSUB__(result, a3);
    v3 = result - a3 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  if (v3 == v4)
    __break(1u);
  return result;
}

uint64_t sub_190B9D918(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

uint64_t sub_190B9D92C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2)
    __break(1u);
  return result;
}

uint64_t sub_190B9D940(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

const void *sub_190B9D948(uint64_t a1)
{
  const void *v1;

  v1 = sub_190BE2C3C(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_190B9D97C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

void JSON.difference(from:)()
{
  sub_190B9DA40();
}

void sub_190B9DA40()
{
  __asm { BR              X10 }
}

unint64_t sub_190B9DA9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t result;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[14];

  if (a1)
  {
    sub_190AEA618(v3);
    sub_190AEA618(v2);
    sub_190AED454(v2);
    sub_190AED454(v3);
    sub_190AC5F10(0, &qword_1EE1FF268, (uint64_t)&type metadata for JSONDifference.Change, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_190BE7CD0;
    *(_QWORD *)(v36 + 32) = v5;
    *(_QWORD *)(v36 + 40) = v2;
    *(_QWORD *)(v36 + 48) = v3;
    *(_QWORD *)(v36 + 56) = 0;
    *(_BYTE *)(v36 + 64) = 0;
    *v4 = v36;
    sub_190AEA618(v3);
    sub_190AEA618(v2);
    return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v6 - 88) = v1;
  v62 = (unint64_t *)v3;
  sub_190AEA618(v3);
  v61 = v2;
  sub_190AEA618(v2);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v9 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v10 = sub_190BE2F50(v9);
  swift_bridgeObjectRelease();
  v69[0] = (uint64_t)v10;
  sub_190B9D97C(v69, (uint64_t (*)(uint64_t))sub_190B40BFC, (uint64_t (*)(_QWORD *))sub_190BA2BE8);
  v59 = 0;
  v60 = v4;
  v11 = *(_QWORD *)(v69[0] + 16);
  if (v11)
  {
    v63 = v69[0];
    v12 = (unint64_t *)(v69[0] + 48);
    while (1)
    {
      v13 = *(v12 - 2);
      v14 = *(v12 - 1);
      v15 = *v12;
      v16 = *(_QWORD *)(v8 + 16);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AEA618(v15);
      if (!v16)
        goto LABEL_12;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v17 = sub_190AEABD0();
      if ((v18 & 1) == 0)
        break;
      v65 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17);
      sub_190AEA618(v65);
      swift_bridgeObjectRelease();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190B124D8();
        v5 = v34;
      }
      v19 = *(_QWORD *)(v5 + 16);
      if (v19 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_190B124D8();
        v5 = v35;
      }
      *(_QWORD *)(v5 + 16) = v19 + 1;
      v20 = v5 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v13;
      *(_QWORD *)(v20 + 40) = v14;
      swift_bridgeObjectRelease();
      v21 = v65;
      sub_190B9DA40();
      swift_bridgeObjectRelease();
      sub_190B4E264(v69[0], v22, v23, v24, v25, v26, v27, v28, v58, v59, (uint64_t)v60, v61, v62, v63, v65, v67, v68, v5, v65,
        v15,
        v69[0],
        v69[1],
        v69[2],
        v69[3],
        v69[4],
        v69[5],
        v69[6],
        v69[7],
        v69[8],
        v69[9]);
      sub_190AED454(v21);
      sub_190AED454(v15);
      v5 = v67;
LABEL_17:
      v12 += 3;
      if (!--v11)
        goto LABEL_20;
    }
    swift_bridgeObjectRelease();
LABEL_12:
    v29 = *(_QWORD *)(v6 - 88);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v15);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_190B12880();
      v29 = v32;
    }
    v30 = *(_QWORD *)(v29 + 16);
    if (v30 >= *(_QWORD *)(v29 + 24) >> 1)
    {
      sub_190B12880();
      v29 = v33;
    }
    *(_QWORD *)(v29 + 16) = v30 + 1;
    v31 = v29 + 40 * v30;
    v5 = v67;
    *(_QWORD *)(v31 + 32) = v15;
    *(_QWORD *)(v31 + 40) = v67;
    *(_QWORD *)(v31 + 48) = v13;
    *(_QWORD *)(v31 + 56) = v14;
    *(_BYTE *)(v31 + 64) = 2;
    sub_190AED454(v15);
    *(_QWORD *)(v6 - 88) = v29;
    goto LABEL_17;
  }
LABEL_20:
  swift_release();
  v38 = 0;
  v64 = v8 + 64;
  v39 = 1 << *(_BYTE *)(v8 + 32);
  v40 = -1;
  if (v39 < 64)
    v40 = ~(-1 << v39);
  v41 = v40 & *(_QWORD *)(v8 + 64);
  v66 = (unint64_t)(v39 + 63) >> 6;
  while (v41)
  {
    v42 = __clz(__rbit64(v41));
    v41 &= v41 - 1;
    v43 = v42 | (v38 << 6);
LABEL_39:
    v47 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v43);
    v48 = *v47;
    v49 = v47[1];
    v50 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v43);
    if (*(_QWORD *)(v7 + 16))
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AEA618(v50);
      sub_190AEABD0();
      v52 = v51;
      swift_bridgeObjectRelease();
      if ((v52 & 1) == 0)
        goto LABEL_43;
      sub_190AED454(v50);
      swift_bridgeObjectRelease();
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AEA618(v50);
LABEL_43:
      v53 = *(_QWORD *)(v6 - 88);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AEA618(v50);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_190B12880();
        v53 = v56;
      }
      v54 = *(_QWORD *)(v53 + 16);
      if (v54 >= *(_QWORD *)(v53 + 24) >> 1)
      {
        sub_190B12880();
        v53 = v57;
      }
      *(_QWORD *)(v53 + 16) = v54 + 1;
      v55 = v53 + 40 * v54;
      *(_QWORD *)(v55 + 32) = v50;
      *(_QWORD *)(v55 + 40) = v67;
      *(_QWORD *)(v55 + 48) = v48;
      *(_QWORD *)(v55 + 56) = v49;
      *(_BYTE *)(v55 + 64) = 3;
      sub_190AED454(v50);
      *(_QWORD *)(v6 - 88) = v53;
    }
  }
  v44 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
    JUMPOUT(0x190B9E5D8);
  }
  if (v44 >= v66)
    goto LABEL_48;
  v45 = *(_QWORD *)(v64 + 8 * v44);
  ++v38;
  if (v45)
    goto LABEL_38;
  v38 = v44 + 1;
  if (v44 + 1 >= v66)
    goto LABEL_48;
  v45 = *(_QWORD *)(v64 + 8 * v38);
  if (v45)
    goto LABEL_38;
  v38 = v44 + 2;
  if (v44 + 2 >= v66)
    goto LABEL_48;
  v45 = *(_QWORD *)(v64 + 8 * v38);
  if (v45)
  {
LABEL_38:
    v41 = (v45 - 1) & v45;
    v43 = __clz(__rbit64(v45)) + (v38 << 6);
    goto LABEL_39;
  }
  v46 = v44 + 3;
  if (v46 >= v66)
    goto LABEL_48;
  v45 = *(_QWORD *)(v64 + 8 * v46);
  if (v45)
  {
    v38 = v46;
    goto LABEL_38;
  }
  while (1)
  {
    v38 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      JUMPOUT(0x190B9E5E4);
    }
    if (v38 >= v66)
      break;
    v45 = *(_QWORD *)(v64 + 8 * v38);
    ++v46;
    if (v45)
      goto LABEL_38;
  }
LABEL_48:
  swift_release();
  sub_190B9D97C((uint64_t *)(v6 - 88), (uint64_t (*)(uint64_t))sub_190B407EC, sub_190BA19C8);
  sub_190AED454(v61);
  result = sub_190AED454((unint64_t)v62);
  *v60 = *(_QWORD *)(v6 - 88);
  return result;
}

uint64_t sub_190B9E620()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  sub_190B9EB28();
  v0 = *(_QWORD *)(v30 + 16);
  v1 = 47;
  if (!v0)
    v1 = 0;
  v2 = 0xE000000000000000;
  if (v0)
    v2 = 0xE100000000000000;
  *(_QWORD *)&v27 = v1;
  *((_QWORD *)&v27 + 1) = v2;
  if (v0)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AD2C9C();
    v3 = v26;
    sub_190AD8E3C();
    v4 = v30 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190BE5A68();
      v5 = sub_190BE5A68();
      v7 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = v3;
      v8 = *(_QWORD *)(v3 + 16);
      if (v8 >= *(_QWORD *)(v3 + 24) >> 1)
        sub_190AD2C9C();
      v4 += 16;
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      --v0;
    }
    while (v0);
    swift_bridgeObjectRelease();
  }
  v10 = MEMORY[0x1E0DEA968];
  sub_190AC5F10(0, (unint64_t *)&qword_1ED034520, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190BA0FC8(&qword_1ED034530, (unint64_t *)&qword_1ED034520, v10);
  sub_190BE4F28();
  swift_bridgeObjectRelease();
  sub_190BE5114();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)&v27 + 1);
  v12 = v27;
  sub_190B9EB28();
  v13 = *(_QWORD *)(v25 + 16);
  if (v13)
  {
    v14 = v27;
    v28 = 47;
    v29 = 0xE100000000000000;
    v24 = MEMORY[0x1E0DEE9D8];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AD2C9C();
    sub_190AD8E3C();
    v15 = v25 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190BE5A68();
      v16 = sub_190BE5A68();
      v18 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v24 + 16);
      if (v19 >= *(_QWORD *)(v24 + 24) >> 1)
        sub_190AD2C9C();
      v15 += 16;
      *(_QWORD *)(v24 + 16) = v19 + 1;
      v20 = v24 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v16;
      *(_QWORD *)(v20 + 40) = v18;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v11 = *((_QWORD *)&v14 + 1);
    v12 = v14;
  }
  else
  {
    v28 = 0;
    v29 = 0xE000000000000000;
  }
  sub_190BE4F28();
  swift_bridgeObjectRelease();
  sub_190BE5114();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12 == v28 && v11 == v29)
    v22 = 0;
  else
    v22 = sub_190BE60BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22 & 1;
}

void sub_190B9EB28()
{
  __asm { BR              X10 }
}

uint64_t sub_190B9EB68(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_190B9EB84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v0 = v1;
  swift_bridgeObjectRetain_n();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B0BF7C();
  OUTLINED_FUNCTION_97_3();
  v4 = *v0;
  *(_QWORD *)(v4 + 16) = v1 + 1;
  v5 = v4 + 16 * v1;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B9EBD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (v2 < 0)
  {
    __break(1u);
    JUMPOUT(0x190B9EBE0);
  }
  v3 = sub_190BE5FC0();
  v5 = v4;
  *v0 = v1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B0BF7C();
  OUTLINED_FUNCTION_97_3();
  v6 = *v0;
  *(_QWORD *)(v6 + 16) = v1 + 1;
  v7 = v6 + 16 * v1;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v5;
  result = OUTLINED_FUNCTION_81();
  *v0 = v6;
  return result;
}

uint64_t JSONDifference.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8 - v7, a1, a2);
  v9 = sub_190BE5450();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v9;
  return result;
}

void static JSONDifference.empty.getter(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

void static JSONDifference.Change.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_190B9ED7C()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  if (!v1)
  {
    v6 = *(_QWORD *)(v4 + 16);
    v7 = 47;
    if (!v6)
      v7 = 0;
    OUTLINED_FUNCTION_102_2(v7);
    if (v6)
    {
      OUTLINED_FUNCTION_78_4();
      OUTLINED_FUNCTION_74_3();
      OUTLINED_FUNCTION_13_25();
      OUTLINED_FUNCTION_113_1(MEMORY[0x1E0DEE9D8]);
      OUTLINED_FUNCTION_12_22();
      v8 = *(_QWORD *)(v5 - 112);
      sub_190AD8E3C();
      v9 = (uint64_t *)(v4 + 40);
      do
      {
        v10 = *v9;
        *(_QWORD *)(v5 - 128) = *(v9 - 1);
        *(_QWORD *)(v5 - 120) = v10;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        *(_QWORD *)(v5 - 128) = OUTLINED_FUNCTION_9_39();
        *(_QWORD *)(v5 - 120) = v11;
        v12 = OUTLINED_FUNCTION_9_39();
        v14 = v13;
        OUTLINED_FUNCTION_30_0();
        OUTLINED_FUNCTION_42();
        *(_QWORD *)(v5 - 112) = v8;
        v15 = *(_QWORD *)(v8 + 16);
        if (v15 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          OUTLINED_FUNCTION_1_62();
          v8 = *(_QWORD *)(v5 - 112);
        }
        v9 += 2;
        *(_QWORD *)(v8 + 16) = v15 + 1;
        v16 = v8 + 16 * v15;
        *(_QWORD *)(v16 + 32) = v12;
        *(_QWORD *)(v16 + 40) = v14;
        --v6;
      }
      while (v6);
      v37 = OUTLINED_FUNCTION_35();
      v2 = v74;
      v3 = v72;
    }
    else
    {
      OUTLINED_FUNCTION_78_4();
      OUTLINED_FUNCTION_74_3();
      v37 = OUTLINED_FUNCTION_13_25();
      v8 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v5 - 128) = v8;
    OUTLINED_FUNCTION_22_22(v37, v38, v39, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    OUTLINED_FUNCTION_39_15(&qword_1ED034530);
    OUTLINED_FUNCTION_62_7();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_21_19();
    OUTLINED_FUNCTION_3_1();
    v68 = *(_QWORD *)(v5 - 104);
    v69 = *(_QWORD *)(v5 - 96);
    v40 = *(_QWORD *)(v3 + 16);
    if (v40)
    {
      *(_QWORD *)(v5 - 104) = 47;
      *(_QWORD *)(v5 - 96) = 0xE100000000000000;
      OUTLINED_FUNCTION_114_1(MEMORY[0x1E0DEE9D8]);
      OUTLINED_FUNCTION_14_30();
      v41 = *(_QWORD *)(v5 - 112);
      sub_190AD8E3C();
      v42 = (uint64_t *)(v3 + 40);
      do
      {
        v43 = *v42;
        *(_QWORD *)(v5 - 128) = *(v42 - 1);
        *(_QWORD *)(v5 - 120) = v43;
        OUTLINED_FUNCTION_44();
        *(_QWORD *)(v5 - 128) = OUTLINED_FUNCTION_0_66();
        *(_QWORD *)(v5 - 120) = v44;
        v45 = OUTLINED_FUNCTION_0_66();
        v47 = v46;
        OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_30_0();
        *(_QWORD *)(v5 - 112) = v41;
        v48 = *(_QWORD *)(v41 + 16);
        if (v48 >= *(_QWORD *)(v41 + 24) >> 1)
        {
          OUTLINED_FUNCTION_1_62();
          v41 = *(_QWORD *)(v5 - 112);
        }
        v42 += 2;
        *(_QWORD *)(v41 + 16) = v48 + 1;
        v49 = v41 + 16 * v48;
        *(_QWORD *)(v49 + 32) = v45;
        *(_QWORD *)(v49 + 40) = v47;
        --v40;
      }
      while (v40);
      OUTLINED_FUNCTION_30_0();
      v2 = v74;
    }
    else
    {
      OUTLINED_FUNCTION_70_5();
      v41 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v5 - 128) = v41;
    sub_190BE4F28();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_20_20();
    OUTLINED_FUNCTION_16();
    v35 = *(_QWORD *)(v5 - 96);
    if (v68 == *(_QWORD *)(v5 - 104) && v69 == v35)
    {
      OUTLINED_FUNCTION_25_17();
      v53 = v70;
      v52 = v71;
    }
    else
    {
      v51 = OUTLINED_FUNCTION_36_10();
      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_20();
      v53 = v70;
      v52 = v71;
      if ((v51 & 1) == 0)
      {
LABEL_30:
        v64 = OUTLINED_FUNCTION_47_11();
        sub_190BA0E84(v64, v65, v66, v67, 0);
        v30 = OUTLINED_FUNCTION_99_3();
        goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 - 104) = v73;
    *(_QWORD *)(v5 - 128) = v2;
    OUTLINED_FUNCTION_28_19();
    if ((v54 & 1) != 0)
    {
      *(_QWORD *)(v5 - 104) = v53;
      *(_QWORD *)(v5 - 128) = v52;
      OUTLINED_FUNCTION_28_19();
      v55 = OUTLINED_FUNCTION_68_6();
      sub_190BA0E84(v55, v56, v57, v58, 0);
      v59 = OUTLINED_FUNCTION_99_3();
      sub_190BA0E84(v59, v60, v61, v62, v63);
      sub_190AED454(v52);
      sub_190AED454(v53);
      return v35 & 1;
    }
    goto LABEL_30;
  }
  v17 = OUTLINED_FUNCTION_101_3();
  sub_190B4E680(v17, v18, v19, v20, v21);
  v22 = OUTLINED_FUNCTION_115();
  sub_190B4E680(v22, v23, v24, v25, v0);
  v26 = OUTLINED_FUNCTION_115();
  sub_190BA0E84(v26, v27, v28, v29, v0);
  v30 = OUTLINED_FUNCTION_101_3();
LABEL_11:
  sub_190BA0E84(v30, v31, v32, v33, v34);
  LOBYTE(v35) = 0;
  return v35 & 1;
}

uint64_t JSONDifference.description.getter()
{
  uint64_t v0;

  sub_190BA0F20();
  sub_190BA1008();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v0 = sub_190BE4F28();
  OUTLINED_FUNCTION_20();
  return v0;
}

void JSONDifference.Change.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_190BA003C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  if (*(_QWORD *)(v0 + 16))
  {
    *(_QWORD *)(v3 - 104) = 0;
    *(_QWORD *)(v3 - 96) = 0xE000000000000000;
    OUTLINED_FUNCTION_81_5();
    sub_190BE5C54();
    v4 = *(_QWORD *)(v3 - 96);
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 104);
    *(_QWORD *)(v3 - 96) = v4;
    v5 = sub_190BE5114();
    v8 = *(_QWORD *)(v0 + 16);
    if (v8)
    {
      v17 = v2;
      v18 = v1;
      OUTLINED_FUNCTION_44_8();
      v19 = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_52();
      OUTLINED_FUNCTION_14_30();
      sub_190AD8E3C();
      v9 = v0 + 40;
      do
      {
        OUTLINED_FUNCTION_31_15();
        OUTLINED_FUNCTION_2_56();
        v10 = OUTLINED_FUNCTION_2_56();
        v12 = v11;
        OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_3_1();
        v13 = *(_QWORD *)(v19 + 16);
        if (v13 >= *(_QWORD *)(v19 + 24) >> 1)
          OUTLINED_FUNCTION_7_42();
        v9 += 16;
        *(_QWORD *)(v19 + 16) = v13 + 1;
        v14 = v19 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v12;
        --v8;
      }
      while (v8);
      v5 = swift_bridgeObjectRelease();
      v2 = v17;
      v1 = v18;
    }
    OUTLINED_FUNCTION_23_22(v5, v6, v7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    OUTLINED_FUNCTION_38_14(&qword_1ED034530);
    OUTLINED_FUNCTION_72_3();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_25_22();
    OUTLINED_FUNCTION_20();
    sub_190BE5114();
    OUTLINED_FUNCTION_37_15();
    OUTLINED_FUNCTION_43_9();
  }
  else
  {
    OUTLINED_FUNCTION_70_5();
    OUTLINED_FUNCTION_81_5();
    sub_190BE5C54();
    v15 = *(_QWORD *)(v3 - 96);
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 104);
    *(_QWORD *)(v3 - 96) = v15;
    sub_190BE5114();
    OUTLINED_FUNCTION_37_15();
    OUTLINED_FUNCTION_43_9();
  }
  OUTLINED_FUNCTION_37_15();
  sub_190AED454(v2);
  sub_190AED454(v1);
  return *(_QWORD *)(v3 - 104);
}

void sub_190BA0B90(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  JSONDifference.Change.description.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t JSONDifference.startIndex.getter()
{
  return 0;
}

uint64_t JSONDifference.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

Swift::Int __swiftcall JSONDifference.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

unint64_t JSONDifference.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v2 + 16) > result)
  {
    v3 = *(_QWORD *)v2 + 40 * result;
    v4 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
    v6 = *(_QWORD *)(v3 + 48);
    v7 = *(_QWORD *)(v3 + 56);
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
    v8 = *(_BYTE *)(v3 + 64);
    *(_BYTE *)(a2 + 32) = v8;
    return sub_190B4E680(v4, v5, v6, v7, v8);
  }
  __break(1u);
  return result;
}

uint64_t sub_190BA0C3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = JSONDifference.endIndex.getter();
  *a1 = result;
  return result;
}

void sub_190BA0C60(unint64_t ***a1, unint64_t *a2)
{
  unint64_t **v4;
  unint64_t *v5;

  v4 = (unint64_t **)malloc(0x28uLL);
  *a1 = v4;
  sub_190BA0CA4(v4, *a2);
  v4[4] = v5;
  OUTLINED_FUNCTION_4();
}

void sub_190BA0CA4(unint64_t **a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v5 = (unint64_t *)malloc(0x21uLL);
  *a1 = v5;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v2 + 16) > a2)
  {
    v6 = v5;
    v7 = *(_QWORD *)v2 + 40 * a2;
    v8 = *(_QWORD *)(v7 + 32);
    v9 = *(_QWORD *)(v7 + 40);
    v10 = *(_QWORD *)(v7 + 48);
    v11 = *(_QWORD *)(v7 + 56);
    v12 = *(_BYTE *)(v7 + 64);
    *v6 = v8;
    v6[1] = v9;
    v6[2] = v10;
    v6[3] = v11;
    *((_BYTE *)v6 + 32) = v12;
    sub_190B4E680(v8, v9, v10, v11, v12);
    OUTLINED_FUNCTION_4();
    return;
  }
  __break(1u);
}

void sub_190BA0D20(unint64_t **a1)
{
  unint64_t *v1;

  v1 = *a1;
  sub_190BA0E84(**a1, v1[1], v1[2], v1[3], *((_BYTE *)v1 + 32));
  OUTLINED_FUNCTION_23_0(v1);
}

uint64_t sub_190BA0D4C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_190B9D854(*a1, a1[1], *v2, a2);
}

uint64_t sub_190BA0D5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_190B9D878(*v1, a1);
}

BOOL sub_190BA0D64()
{
  uint64_t *v0;

  return sub_190B9D844(*v0);
}

uint64_t sub_190BA0D6C()
{
  uint64_t *v0;

  return sub_190B9D940(*v0);
}

uint64_t sub_190BA0D74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_190B9D888(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190BA0DA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_190B9D8B8(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_190BA0DD8(uint64_t *a1, uint64_t *a2)
{
  return sub_190BE26A0(*a1, *a2);
}

uint64_t sub_190BA0DE8(uint64_t *a1, uint64_t *a2)
{
  return sub_190B9D904(*a1, *a2, a2[1]);
}

uint64_t sub_190BA0DFC(uint64_t *a1, uint64_t *a2)
{
  return sub_190B9D918(*a1, *a2, a2[1]);
}

uint64_t sub_190BA0E10(uint64_t *a1, uint64_t *a2)
{
  return sub_190B9D92C(*a1, a1[1], *a2, a2[1]);
}

Swift::Int sub_190BA0E28@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = JSONDifference.index(after:)(*a1);
  *a2 = result;
  return result;
}

_QWORD *sub_190BA0E50(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

void sub_190BA0E68(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

const void *sub_190BA0E74()
{
  uint64_t *v0;

  return sub_190B9D948(*v0);
}

uint64_t sub_190BA0E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_190B9D978(a1, a2, a3, *v3);
}

unint64_t sub_190BA0E84(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease();
      sub_190AED454(a2);
      result = sub_190AED454(a3);
      break;
    case 2:
    case 3:
      sub_190AED454(result);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 4:
    case 5:
      sub_190AED454(result);
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_190BA0F20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE200438)
  {
    sub_190AC5F10(255, &qword_1EE200440, (uint64_t)&type metadata for JSONDifference.Change, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_190BA0FC8(&qword_1EE200448, &qword_1EE200440, (uint64_t)&type metadata for JSONDifference.Change);
    v0 = sub_190BE5DD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE200438);
  }
}

uint64_t sub_190BA0FC8(uint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_190AC5F10(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    OUTLINED_FUNCTION_110_1();
  }
  return result;
}

unint64_t sub_190BA1008()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE200450;
  if (!qword_1EE200450)
  {
    sub_190BA0F20();
    v2 = v1;
    v3 = sub_190BA0FC8(&qword_1EE200458, &qword_1EE200440, (uint64_t)&type metadata for JSONDifference.Change);
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEC850], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE200450);
  }
  return result;
}

unint64_t sub_190BA108C()
{
  unint64_t result;

  result = qword_1EE200460;
  if (!qword_1EE200460)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for JSONDifference, &type metadata for JSONDifference);
    atomic_store(result, (unint64_t *)&qword_1EE200460);
  }
  return result;
}

uint64_t sub_190BA10C8()
{
  return sub_190BA10FC(&qword_1EE200468, &qword_1EE200470, MEMORY[0x1E0DEA200]);
}

uint64_t sub_190BA10FC(uint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_190BA11D8(255, a2, a3);
    OUTLINED_FUNCTION_110_1();
  }
  return result;
}

unint64_t sub_190BA1134()
{
  unint64_t result;

  result = qword_1EE200478;
  if (!qword_1EE200478)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for JSONDifference, &type metadata for JSONDifference);
    atomic_store(result, (unint64_t *)&qword_1EE200478);
  }
  return result;
}

uint64_t sub_190BA1170()
{
  return sub_190BA10FC(&qword_1EE200480, &qword_1EE200488, MEMORY[0x1E0DEDE10]);
}

uint64_t sub_190BA11A4()
{
  return sub_190BA10FC(&qword_1EE200490, &qword_1EE200498, MEMORY[0x1E0DEC8F8]);
}

void sub_190BA11D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_190BA1134();
    v7 = a3(a1, &type metadata for JSONDifference, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_4();
}

ValueMetadata *type metadata accessor for JSONDifference()
{
  return &type metadata for JSONDifference;
}

unint64_t destroy for JSONDifference.Change(uint64_t a1)
{
  return sub_190BA0E84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for JSONDifference.Change(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_190B4E680(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for JSONDifference.Change(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_190B4E680(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_190BA0E84(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for JSONDifference.Change(uint64_t a1, uint64_t a2)
{
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_190BA0E84(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONDifference.Change(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONDifference.Change(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONDifference.Change()
{
  return &type metadata for JSONDifference.Change;
}

_QWORD *sub_190BA1400(_QWORD *result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;

  v5 = result;
  if (!a2)
  {
LABEL_11:
    v6 = 0;
    goto LABEL_14;
  }
  v6 = a3;
  if (!a3)
  {
LABEL_14:
    *v5 = a4;
    v5[1] = v6;
    return (_QWORD *)v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (*(_QWORD *)(a4 + 16))
    {
      v7 = a2;
      v8 = (char *)(a4 + 64);
      v9 = 1;
      while (1)
      {
        v10 = *((_QWORD *)v8 - 4);
        v11 = *((_QWORD *)v8 - 3);
        v12 = *((_QWORD *)v8 - 2);
        v13 = *((_QWORD *)v8 - 1);
        v14 = *v8;
        *(_QWORD *)v7 = v10;
        *(_QWORD *)(v7 + 8) = v11;
        *(_QWORD *)(v7 + 16) = v12;
        *(_QWORD *)(v7 + 24) = v13;
        *(_BYTE *)(v7 + 32) = v14;
        if (v6 == v9)
          break;
        v15 = *(_QWORD *)(a4 + 16);
        if (v9 == v15)
        {
          v6 = v9;
          break;
        }
        v8 += 40;
        v7 += 40;
        sub_190B4E680(v10, v11, v12, v13, v14);
        if (v9++ >= v15)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      sub_190B4E680(v10, v11, v12, v13, v14);
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_190BA14C4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;

  sub_190AF8C80();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_0();
  v10 = v9 - v8;
  v11 = sub_190BE4628();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_4_0();
  v36 = v14 - v13;
  v37 = a4;
  v15 = a4 + 64;
  v33 = -1 << *(_BYTE *)(v15 - 32);
  OUTLINED_FUNCTION_103_2();
  v18 = v17 & v16;
  v40 = a2;
  if (!a2)
  {
    v19 = 0;
LABEL_34:
    *a1 = v37;
    a1[1] = v15;
    a1[2] = ~v33;
    a1[3] = v19;
    a1[4] = v18;
    return;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
    goto LABEL_36;
  v19 = 0;
  v20 = 0;
  v34 = v15;
  v35 = (unint64_t)(63 - v33) >> 6;
  if (!v18)
    goto LABEL_6;
LABEL_5:
  v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v22 = v21 | (v19 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v12 + 72);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v10, *(_QWORD *)(v37 + 48) + v29 * v22, v11);
    OUTLINED_FUNCTION_84(v10, 0);
    if (__swift_getEnumTagSinglePayload(v10, 1, v11) == 1)
    {
      v15 = v34;
LABEL_33:
      sub_190B765F0(v10);
      goto LABEL_34;
    }
    v39 = v20 + 1;
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    v30(v36, v10, v11);
    v30(v40, v36, v11);
    v20 = v39;
    if (v39 == a3)
    {
      v15 = v34;
      goto LABEL_34;
    }
    v40 += v29;
    if (v18)
      goto LABEL_5;
LABEL_6:
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    v15 = v34;
    if (v23 >= v35)
      goto LABEL_32;
    if (*(_QWORD *)(v34 + 8 * v23))
      goto LABEL_16;
    v24 = v19 + 2;
    ++v19;
    if (v23 + 1 >= v35)
      goto LABEL_32;
    if (*(_QWORD *)(v34 + 8 * v24))
      goto LABEL_16;
    v19 = v23 + 1;
    if (v23 + 2 >= v35)
      goto LABEL_32;
    if (*(_QWORD *)(v34 + 8 * (v23 + 2)))
      goto LABEL_16;
    v19 = v23 + 2;
    if (v23 + 3 >= v35)
      goto LABEL_32;
    if (*(_QWORD *)(v34 + 8 * (v23 + 3)))
      goto LABEL_16;
    v31 = v23 + 4;
    v19 = v23 + 3;
    if (v23 + 4 >= v35)
    {
LABEL_32:
      OUTLINED_FUNCTION_84(v10, 1);
      v18 = 0;
      goto LABEL_33;
    }
    if (!*(_QWORD *)(v34 + 8 * v31))
    {
      do
      {
        v32 = v31 + 1;
        if (__OFADD__(v31, 1))
          goto LABEL_37;
        if (v32 >= v35)
        {
          v19 = v35 - 1;
          goto LABEL_32;
        }
        ++v31;
      }
      while (!*(_QWORD *)(v34 + 8 * v32));
    }
LABEL_16:
    OUTLINED_FUNCTION_98_2();
    v18 = v26 & v25;
    v22 = v28 + (v27 << 6);
    v19 = v27;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_190BA17D8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t v30;

  v6 = a4 + 64;
  OUTLINED_FUNCTION_103_2();
  v12 = v11 & v10;
  if (!v7)
  {
    v15 = 0;
LABEL_34:
    *a1 = a4;
    a1[1] = v6;
    a1[2] = ~v9;
    a1[3] = v15;
    a1[4] = v12;
    OUTLINED_FUNCTION_29();
    return;
  }
  v13 = v8;
  if (!v8)
  {
    v15 = 0;
    goto LABEL_34;
  }
  if (v8 < 0)
    goto LABEL_36;
  v14 = v7;
  v15 = 0;
  v16 = 0;
  v17 = (unint64_t)(63 - v9) >> 6;
  v30 = v9;
  if (!v12)
    goto LABEL_6;
LABEL_5:
  v18 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v19 = v18 | (v15 << 6);
  while (1)
  {
    ++v16;
    v25 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v19);
    v26 = v25[1];
    v27 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v19);
    *v14 = *v25;
    v14[1] = v26;
    v14[2] = v27;
    if (v16 == v13)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AEA618(v27);
LABEL_33:
      v9 = v30;
      goto LABEL_34;
    }
    v14 += 3;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v27);
    if (v12)
      goto LABEL_5;
LABEL_6:
    v20 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v20 >= v17)
      goto LABEL_29;
    if (!*(_QWORD *)(v6 + 8 * v20))
    {
      v15 += 2;
      if (v20 + 1 >= v17)
      {
        v12 = 0;
        v15 = v20;
        goto LABEL_33;
      }
      if (!*(_QWORD *)(v6 + 8 * v15))
      {
        if (v20 + 2 >= v17)
          goto LABEL_29;
        if (!*(_QWORD *)(v6 + 8 * (v20 + 2)))
        {
          v15 = v20 + 3;
          if (v20 + 3 >= v17)
          {
            v12 = 0;
            v15 = v20 + 2;
            goto LABEL_33;
          }
          if (*(_QWORD *)(v6 + 8 * v15))
            goto LABEL_14;
          v28 = v20 + 4;
          if (v20 + 4 >= v17)
          {
LABEL_29:
            v12 = 0;
            goto LABEL_33;
          }
          if (!*(_QWORD *)(v6 + 8 * v28))
          {
            do
            {
              v29 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_37;
              if (v29 >= v17)
              {
                v12 = 0;
                v15 = v17 - 1;
                goto LABEL_33;
              }
              ++v28;
            }
            while (!*(_QWORD *)(v6 + 8 * v29));
          }
        }
      }
    }
LABEL_14:
    OUTLINED_FUNCTION_98_2();
    v12 = v22 & v21;
    v19 = v24 + (v23 << 6);
    v15 = v23;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

int64_t sub_190BA19C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t result;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  unint64_t v105;
  char *v106;
  size_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;

  v2 = a1[1];
  result = sub_190BE5FA8();
  if (result >= v2)
  {
    if (v2 < 0)
      goto LABEL_127;
    if (v2)
      return sub_190BA32A0(0, v2, 1, a1);
    return result;
  }
  v111 = result;
  v116 = v2;
  sub_190B841A4(v2 / 2);
  v4 = v2;
  v112 = v5;
  v114 = v6;
  v7 = MEMORY[0x1E0DEE9D8];
  if (v2 > 0)
  {
    v8 = 0;
    v9 = *a1;
    v110 = *a1 + 56;
    v117 = (char *)MEMORY[0x1E0DEE9D8];
    v119 = *a1;
    while (1)
    {
      v10 = v8;
      v118 = v8;
      if (v8 + 1 >= v4)
      {
        v115 = v8 + 1;
      }
      else
      {
        v11 = v9 + 40 * (v8 + 1);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = *(_QWORD *)(v11 + 24);
        v14 = *(_BYTE *)(v11 + 32);
        v123 = *(_QWORD *)v11;
        v124 = *(_QWORD *)(v11 + 8);
        v15 = v9 + 40 * v8;
        v16 = *(_QWORD *)v15;
        v17 = *(_QWORD *)(v15 + 8);
        v18 = *(_QWORD *)(v15 + 16);
        v19 = *(_QWORD *)(v15 + 24);
        v20 = *(_BYTE *)(v15 + 32);
        sub_190B4E680(v123, v124, v12, v13, v14);
        sub_190B4E680(v16, v17, v18, v19, v20);
        v120 = sub_190B9E620();
        if (v1)
        {
          sub_190BA0E84(v16, v17, v18, v19, v20);
          sub_190BA0E84(v123, v124, v12, v13, v14);
LABEL_103:
          swift_bridgeObjectRelease();
          if (v116 < -1)
            goto LABEL_129;
          *(_QWORD *)(v112 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        sub_190BA0E84(v16, v17, v18, v19, v20);
        sub_190BA0E84(v123, v124, v12, v13, v14);
        v4 = v116;
        v115 = v10 + 2;
        if (v10 + 2 < v116)
        {
          v21 = v110 + 40 * v10;
          v22 = v21;
          while (1)
          {
            v23 = *(_QWORD *)(v22 + 40);
            v22 += 40;
            v25 = *(_QWORD *)(v21 + 24);
            v24 = *(_QWORD *)(v21 + 32);
            v26 = *(_QWORD *)(v21 - 16);
            v27 = *(_QWORD *)(v21 - 8);
            v29 = *(_QWORD *)v21;
            v28 = *(_QWORD *)(v21 + 8);
            v30 = *(_BYTE *)(v21 + 16);
            v122 = *(_QWORD *)(v21 + 48);
            v121 = *(_BYTE *)(v21 + 56);
            sub_190B4E680(v25, v24, v23, v122, v121);
            sub_190B4E680(v26, v27, v29, v28, v30);
            v31 = sub_190B9E620();
            sub_190BA0E84(v26, v27, v29, v28, v30);
            sub_190BA0E84(v25, v24, v23, v122, v121);
            if (((v120 ^ v31) & 1) != 0)
              break;
            v4 = v116;
            v21 = v22;
            if (++v115 >= v116)
            {
              v115 = v116;
              goto LABEL_13;
            }
          }
          v4 = v116;
LABEL_13:
          v10 = v118;
        }
        v7 = MEMORY[0x1E0DEE9D8];
        v9 = v119;
        if ((v120 & 1) != 0)
        {
          v32 = v115;
          if (v115 < v10)
            goto LABEL_132;
          if (v10 < v115)
          {
            v33 = 40 * v115;
            v34 = 40 * v10;
            v35 = v10;
            do
            {
              if (v35 != --v32)
              {
                if (!v119)
                  goto LABEL_136;
                v36 = v119 + v34;
                v37 = *(_BYTE *)(v119 + v34 + 32);
                v38 = v119 + v33;
                v39 = *(_OWORD *)(v119 + v34);
                v40 = *(_OWORD *)(v119 + v34 + 16);
                v41 = *(_QWORD *)(v119 + v33 - 8);
                v42 = *(_OWORD *)(v119 + v33 - 24);
                *(_OWORD *)v36 = *(_OWORD *)(v119 + v33 - 40);
                *(_OWORD *)(v36 + 16) = v42;
                *(_QWORD *)(v36 + 32) = v41;
                *(_OWORD *)(v38 - 40) = v39;
                *(_OWORD *)(v38 - 24) = v40;
                *(_BYTE *)(v38 - 8) = v37;
              }
              ++v35;
              v33 -= 40;
              v34 += 40;
            }
            while (v35 < v32);
            v4 = v116;
          }
        }
      }
      v8 = v115;
      if (v115 < v4)
      {
        if (__OFSUB__(v115, v10))
          goto LABEL_128;
        if (v115 - v10 >= v111)
        {
          v8 = v115;
        }
        else
        {
          v43 = v10 + v111;
          if (__OFADD__(v10, v111))
            goto LABEL_130;
          if (v43 >= v4)
            v43 = v4;
          if (v43 < v10)
          {
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
            goto LABEL_133;
          }
          v8 = v115;
          if (v115 != v43)
            __asm { BR              X8 }
        }
      }
      if (v8 < v10)
        goto LABEL_126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v44 = v117;
      else
        v44 = sub_190B40AAC(0, *((_QWORD *)v117 + 2) + 1, 1, v117);
      v46 = *((_QWORD *)v44 + 2);
      v45 = *((_QWORD *)v44 + 3);
      v117 = v44;
      v47 = v46 + 1;
      v4 = v116;
      v9 = v119;
      if (v46 >= v45 >> 1)
      {
        v96 = sub_190B40AAC((char *)(v45 > 1), v46 + 1, 1, v44);
        v9 = v119;
        v4 = v116;
        v117 = v96;
      }
      *((_QWORD *)v117 + 2) = v47;
      v48 = v117 + 32;
      v49 = &v117[16 * v46 + 32];
      *(_QWORD *)v49 = v10;
      *((_QWORD *)v49 + 1) = v8;
      if (v46)
      {
        while (1)
        {
          v50 = v47 - 1;
          if (v47 >= 4)
          {
            v55 = &v48[16 * v47];
            v56 = *((_QWORD *)v55 - 8);
            v57 = *((_QWORD *)v55 - 7);
            v61 = __OFSUB__(v57, v56);
            v58 = v57 - v56;
            if (v61)
            {
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
              goto LABEL_131;
            }
            v60 = *((_QWORD *)v55 - 6);
            v59 = *((_QWORD *)v55 - 5);
            v61 = __OFSUB__(v59, v60);
            v53 = v59 - v60;
            v54 = v61;
            if (v61)
              goto LABEL_112;
            v62 = v47 - 2;
            v63 = &v48[16 * v47 - 32];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            v61 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v61)
              goto LABEL_113;
            v61 = __OFADD__(v53, v66);
            v67 = v53 + v66;
            if (v61)
              goto LABEL_115;
            if (v67 >= v58)
            {
              v85 = &v48[16 * v50];
              v87 = *(_QWORD *)v85;
              v86 = *((_QWORD *)v85 + 1);
              v61 = __OFSUB__(v86, v87);
              v88 = v86 - v87;
              if (v61)
                goto LABEL_125;
              v78 = v53 < v88;
              goto LABEL_70;
            }
          }
          else
          {
            if (v47 != 3)
            {
              v79 = *((_QWORD *)v117 + 4);
              v80 = *((_QWORD *)v117 + 5);
              v61 = __OFSUB__(v80, v79);
              v72 = v80 - v79;
              v73 = v61;
              goto LABEL_64;
            }
            v52 = *((_QWORD *)v117 + 4);
            v51 = *((_QWORD *)v117 + 5);
            v61 = __OFSUB__(v51, v52);
            v53 = v51 - v52;
            v54 = v61;
          }
          if ((v54 & 1) != 0)
            goto LABEL_114;
          v62 = v47 - 2;
          v68 = &v48[16 * v47 - 32];
          v70 = *(_QWORD *)v68;
          v69 = *((_QWORD *)v68 + 1);
          v71 = __OFSUB__(v69, v70);
          v72 = v69 - v70;
          v73 = v71;
          if (v71)
            goto LABEL_116;
          v74 = &v48[16 * v50];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v61 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v61)
            goto LABEL_118;
          if (__OFADD__(v72, v77))
            goto LABEL_120;
          if (v72 + v77 >= v53)
          {
            v78 = v53 < v77;
LABEL_70:
            if (v78)
              v50 = v62;
            goto LABEL_72;
          }
LABEL_64:
          if ((v73 & 1) != 0)
            goto LABEL_117;
          v81 = &v48[16 * v50];
          v83 = *(_QWORD *)v81;
          v82 = *((_QWORD *)v81 + 1);
          v61 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          if (v61)
            goto LABEL_119;
          if (v84 < v72)
          {
            v4 = v116;
            goto LABEL_81;
          }
LABEL_72:
          v89 = v50 - 1;
          if (v50 - 1 >= v47)
          {
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
            JUMPOUT(0x190BA2B3CLL);
          }
          if (!v9)
          {
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
            JUMPOUT(0x190BA2BB8);
          }
          v90 = v7;
          v91 = &v48[16 * v89];
          v92 = *(_QWORD *)v91;
          v93 = &v48[16 * v50];
          v94 = *((_QWORD *)v93 + 1);
          sub_190BA352C((char *)(v9 + 40 * *(_QWORD *)v91), (char *)(v9 + 40 * *(_QWORD *)v93), v9 + 40 * v94, v114);
          if (v1)
            goto LABEL_103;
          if (v94 < v92)
            goto LABEL_108;
          if (v50 > *((_QWORD *)v117 + 2))
            goto LABEL_109;
          *(_QWORD *)v91 = v92;
          *(_QWORD *)&v48[16 * v89 + 8] = v94;
          v95 = *((_QWORD *)v117 + 2);
          if (v50 >= v95)
            goto LABEL_110;
          v47 = v95 - 1;
          memmove(&v48[16 * v50], v93 + 16, 16 * (v95 - 1 - v50));
          *((_QWORD *)v117 + 2) = v95 - 1;
          v4 = v116;
          v9 = v119;
          v7 = v90;
          if (v95 <= 2)
            goto LABEL_81;
        }
      }
      v47 = 1;
LABEL_81:
      if (v8 >= v4)
        goto LABEL_88;
    }
  }
  v47 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v117 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_88:
  if (v47 >= 2)
  {
    v97 = *a1;
    do
    {
      v98 = v47 - 2;
      if (v47 < 2)
        goto LABEL_121;
      if (!v97)
        goto LABEL_135;
      v99 = v47 - 1;
      v100 = *(_QWORD *)&v117[16 * v98 + 32];
      v101 = *(_QWORD *)&v117[16 * v47 + 24];
      sub_190BA352C((char *)(v97 + 40 * v100), (char *)(v97 + 40 * *(_QWORD *)&v117[16 * v47 + 16]), v97 + 40 * v101, v114);
      if (v1)
        goto LABEL_103;
      if (v101 < v100)
        goto LABEL_122;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v102 = v117;
      else
        v102 = sub_190B40B98();
      if (v98 >= *((_QWORD *)v102 + 2))
        goto LABEL_123;
      v103 = v102 + 32;
      v117 = v102;
      v104 = &v102[16 * v98 + 32];
      *(_QWORD *)v104 = v100;
      *((_QWORD *)v104 + 1) = v101;
      v105 = *((_QWORD *)v102 + 2);
      if (v47 > v105)
        goto LABEL_124;
      v106 = &v103[16 * v47];
      v107 = 16 * (v105 - v47);
      v108 = v102;
      memmove(&v103[16 * v99], v106, v107);
      *((_QWORD *)v108 + 2) = v105 - 1;
      v47 = v105 - 1;
      v4 = v116;
    }
    while (v105 > 2);
  }
  v109 = v4;
  swift_bridgeObjectRelease();
  if (v109 < -1)
  {
LABEL_133:
    __break(1u);
    JUMPOUT(0x190BA2BA8);
  }
  *(_QWORD *)(v112 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void sub_190BA2BE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;

  v3 = a1[1];
  v4 = sub_190BE5FA8();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_190BA3454(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_190B84214(v3 / 2);
  v105 = v6;
  v106 = v3;
  v108 = v7;
  v103 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v44 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_110:
    v93 = v10;
    if (v44 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v106 >= -1)
      {
        *(_QWORD *)(v105 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v94 = *v103;
    while (1)
    {
      v95 = v44 - 2;
      if (v44 < 2)
        break;
      if (!v94)
        goto LABEL_153;
      v96 = v93;
      v97 = *(_QWORD *)&v93[16 * v95 + 32];
      v98 = *(_QWORD *)&v93[16 * v44 + 24];
      sub_190BA390C((char *)(v94 + 24 * v97), (char *)(v94 + 24 * *(_QWORD *)&v93[16 * v44 + 16]), v94 + 24 * v98, v108);
      if (v1)
        goto LABEL_106;
      if (v98 < v97)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v96 = sub_190B40B98();
      if (v95 >= *((_QWORD *)v96 + 2))
        goto LABEL_140;
      v99 = &v96[16 * v95 + 32];
      *(_QWORD *)v99 = v97;
      *((_QWORD *)v99 + 1) = v98;
      v100 = *((_QWORD *)v96 + 2);
      if (v44 > v100)
        goto LABEL_141;
      memmove(&v96[16 * v44 + 16], &v96[16 * v44 + 32], 16 * (v100 - v44));
      v93 = v96;
      *((_QWORD *)v96 + 2) = v100 - 1;
      v44 = v100 - 1;
      if (v100 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v104 = v5;
  v8 = 0;
  v9 = *a1;
  v101 = *a1 - 24;
  v102 = *a1 + 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v107 = v9;
  while (1)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v12 = (uint64_t *)(v9 + 24 * v8);
    v13 = *v12;
    v14 = v12[1];
    v15 = (_QWORD *)(v9 + 24 * v11);
    if (v13 == *v15 && v14 == v15[1])
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v106)
        goto LABEL_31;
      v17 = 0;
    }
    else
    {
      v17 = sub_190BE60BC();
      v18 = v11 + 2;
      if (v11 + 2 >= v106)
        goto LABEL_23;
    }
    v19 = (_QWORD *)(v102 + 24 * v18);
    do
    {
      v20 = (_QWORD *)(v9 + 24 * v8);
      if (*(v19 - 1) == *v20 && *v19 == v20[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_24;
      }
      else if (((v17 ^ sub_190BE60BC()) & 1) != 0)
      {
        goto LABEL_23;
      }
      v19 += 3;
      v22 = v18 + 1;
      v8 = v18;
      v18 = v22;
    }
    while (v22 < v106);
    v18 = v22;
LABEL_23:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_24:
      if (v18 < v11)
        goto LABEL_148;
      if (v11 < v18)
      {
        v23 = 24 * v18;
        v24 = 24 * v11;
        v25 = v18;
        v26 = v11;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_152;
            v27 = v9 + v24;
            v28 = v9 + v23;
            v29 = *(_OWORD *)(v9 + v24);
            v30 = *(_QWORD *)(v9 + v24 + 16);
            v31 = *(_QWORD *)(v9 + v23 - 8);
            *(_OWORD *)v27 = *(_OWORD *)(v9 + v23 - 24);
            *(_QWORD *)(v27 + 16) = v31;
            *(_OWORD *)(v28 - 24) = v29;
            *(_QWORD *)(v28 - 8) = v30;
          }
          ++v26;
          v23 -= 24;
          v24 += 24;
        }
        while (v26 < v25);
      }
LABEL_31:
      v8 = v18;
    }
LABEL_32:
    if (v8 < v106)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_143;
      if (v8 - v11 < v104)
      {
        if (__OFADD__(v11, v104))
          goto LABEL_146;
        if (v11 + v104 >= v106)
          v32 = v106;
        else
          v32 = v11 + v104;
        if (v32 < v11)
          goto LABEL_147;
        if (v8 != v32)
        {
          v33 = (_QWORD *)(v101 + 24 * v8);
          do
          {
            v34 = (uint64_t *)(v9 + 24 * v8);
            v35 = *v34;
            v36 = v34[1];
            v37 = v11;
            v38 = v33;
            do
            {
              v39 = v35 == *v38 && v36 == v38[1];
              if (v39 || (sub_190BE60BC() & 1) == 0)
                break;
              if (!v9)
                goto LABEL_150;
              v36 = v38[4];
              v40 = v38[5];
              v41 = v38[2];
              v35 = v38[3];
              *(_OWORD *)(v38 + 3) = *(_OWORD *)v38;
              v38[5] = v41;
              *v38 = v35;
              v38[1] = v36;
              v38[2] = v40;
              v38 -= 3;
              ++v37;
            }
            while (v8 != v37);
            ++v8;
            v33 += 3;
          }
          while (v8 != v32);
          v8 = v32;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_190B40AAC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v43 = *((_QWORD *)v10 + 2);
    v42 = *((_QWORD *)v10 + 3);
    v44 = v43 + 1;
    if (v43 >= v42 >> 1)
      v10 = sub_190B40AAC((char *)(v42 > 1), v43 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v44;
    v45 = v10 + 32;
    v46 = &v10[16 * v43 + 32];
    *(_QWORD *)v46 = v11;
    *((_QWORD *)v46 + 1) = v8;
    if (v43)
      break;
    v44 = 1;
    v9 = v107;
LABEL_101:
    v3 = v106;
    if (v8 >= v106)
      goto LABEL_110;
  }
  v9 = v107;
  while (1)
  {
    v47 = v44 - 1;
    if (v44 >= 4)
    {
      v52 = &v45[16 * v44];
      v53 = *((_QWORD *)v52 - 8);
      v54 = *((_QWORD *)v52 - 7);
      v58 = __OFSUB__(v54, v53);
      v55 = v54 - v53;
      if (v58)
        goto LABEL_127;
      v57 = *((_QWORD *)v52 - 6);
      v56 = *((_QWORD *)v52 - 5);
      v58 = __OFSUB__(v56, v57);
      v50 = v56 - v57;
      v51 = v58;
      if (v58)
        goto LABEL_128;
      v59 = v44 - 2;
      v60 = &v45[16 * v44 - 32];
      v62 = *(_QWORD *)v60;
      v61 = *((_QWORD *)v60 + 1);
      v58 = __OFSUB__(v61, v62);
      v63 = v61 - v62;
      if (v58)
        goto LABEL_129;
      v58 = __OFADD__(v50, v63);
      v64 = v50 + v63;
      if (v58)
        goto LABEL_131;
      if (v64 >= v55)
      {
        v82 = &v45[16 * v47];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v58 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v58)
          goto LABEL_137;
        v75 = v50 < v85;
        goto LABEL_90;
      }
    }
    else
    {
      if (v44 != 3)
      {
        v76 = *((_QWORD *)v10 + 4);
        v77 = *((_QWORD *)v10 + 5);
        v58 = __OFSUB__(v77, v76);
        v69 = v77 - v76;
        v70 = v58;
        goto LABEL_84;
      }
      v49 = *((_QWORD *)v10 + 4);
      v48 = *((_QWORD *)v10 + 5);
      v58 = __OFSUB__(v48, v49);
      v50 = v48 - v49;
      v51 = v58;
    }
    if ((v51 & 1) != 0)
      goto LABEL_130;
    v59 = v44 - 2;
    v65 = &v45[16 * v44 - 32];
    v67 = *(_QWORD *)v65;
    v66 = *((_QWORD *)v65 + 1);
    v68 = __OFSUB__(v66, v67);
    v69 = v66 - v67;
    v70 = v68;
    if (v68)
      goto LABEL_132;
    v71 = &v45[16 * v47];
    v73 = *(_QWORD *)v71;
    v72 = *((_QWORD *)v71 + 1);
    v58 = __OFSUB__(v72, v73);
    v74 = v72 - v73;
    if (v58)
      goto LABEL_134;
    if (__OFADD__(v69, v74))
      goto LABEL_136;
    if (v69 + v74 >= v50)
    {
      v75 = v50 < v74;
LABEL_90:
      if (v75)
        v47 = v59;
      goto LABEL_92;
    }
LABEL_84:
    if ((v70 & 1) != 0)
      goto LABEL_133;
    v78 = &v45[16 * v47];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    v58 = __OFSUB__(v79, v80);
    v81 = v79 - v80;
    if (v58)
      goto LABEL_135;
    if (v81 < v69)
      goto LABEL_101;
LABEL_92:
    v86 = v47 - 1;
    if (v47 - 1 >= v44)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v87 = v9;
    v88 = &v45[16 * v86];
    v89 = *(_QWORD *)v88;
    v90 = &v45[16 * v47];
    v91 = *((_QWORD *)v90 + 1);
    sub_190BA390C((char *)(v87 + 24 * *(_QWORD *)v88), (char *)(v87 + 24 * *(_QWORD *)v90), v87 + 24 * v91, v108);
    if (v1)
      break;
    if (v91 < v89)
      goto LABEL_124;
    if (v47 > *((_QWORD *)v10 + 2))
      goto LABEL_125;
    *(_QWORD *)v88 = v89;
    *(_QWORD *)&v45[16 * v86 + 8] = v91;
    v92 = *((_QWORD *)v10 + 2);
    if (v47 >= v92)
      goto LABEL_126;
    v44 = v92 - 1;
    memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
    *((_QWORD *)v10 + 2) = v92 - 1;
    v75 = v92 > 2;
    v9 = v107;
    if (!v75)
      goto LABEL_101;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v106 < -1)
    goto LABEL_145;
  *(_QWORD *)(v105 + 16) = 0;
  swift_bridgeObjectRelease();
}

unint64_t sub_190BA32A0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v5 = v4;
  if (a3 != a2)
  {
    v24 = *a4;
    v6 = *a4 + 40 * a3 - 40;
    v21 = result;
LABEL_3:
    v23 = v6;
    v25 = a3;
    while (1)
    {
      v26 = result;
      v7 = v6 + 40;
      v31 = *(_QWORD *)(v6 + 40);
      v29 = *(_QWORD *)(v6 + 48);
      v30 = *(_QWORD *)(v6 + 56);
      v28 = *(_QWORD *)(v6 + 64);
      v27 = *(_BYTE *)(v6 + 72);
      v9 = *(_QWORD *)v6;
      v8 = *(_QWORD *)(v6 + 8);
      v10 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      v12 = *(_BYTE *)(v6 + 32);
      sub_190B4E680(v31, v29, v30, v28, v27);
      sub_190B4E680(v9, v8, v10, v11, v12);
      v13 = v5;
      v14 = sub_190B9E620();
      sub_190BA0E84(v9, v8, v10, v11, v12);
      result = sub_190BA0E84(v31, v29, v30, v28, v27);
      if (v13)
        break;
      if ((v14 & 1) == 0)
      {
        v5 = 0;
        v20 = v25;
LABEL_10:
        a3 = v20 + 1;
        v6 = v23 + 40;
        result = v21;
        if (a3 != a2)
          goto LABEL_3;
        return result;
      }
      if (!v24)
      {
        __break(1u);
        return result;
      }
      v15 = *(_BYTE *)(v6 + 72);
      v16 = *(_OWORD *)(v6 + 56);
      v17 = *(_OWORD *)v6;
      v18 = *(_OWORD *)(v6 + 16);
      v19 = *(_QWORD *)(v6 + 32);
      *(_OWORD *)v6 = *(_OWORD *)(v6 + 40);
      *(_OWORD *)(v6 + 16) = v16;
      *(_BYTE *)(v6 + 32) = v15;
      v6 -= 40;
      *(_OWORD *)v7 = v17;
      *(_OWORD *)(v7 + 16) = v18;
      *(_QWORD *)(v7 + 32) = v19;
      v20 = v25;
      result = v26 + 1;
      v5 = 0;
      if (v25 == v26 + 1)
        goto LABEL_10;
    }
  }
  return result;
}

uint64_t sub_190BA3454(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 24 * a3 - 24;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 24 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (_QWORD *)v8;
      do
      {
        if (result == *v12 && v10 == v12[1])
          break;
        result = sub_190BE60BC();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v10 = v12[4];
        v14 = v12[5];
        v15 = v12[2];
        result = v12[3];
        *(_OWORD *)(v12 + 3) = *(_OWORD *)v12;
        v12[5] = v15;
        *v12 = result;
        v12[1] = v10;
        v12[2] = v14;
        v12 -= 3;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 24;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_190BA352C(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  char v42;
  BOOL v43;
  BOOL v44;
  __int128 v45;
  __int128 v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  unint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;

  v5 = v4;
  v6 = a4;
  v8 = a1;
  v9 = a2 - a1;
  v10 = (a2 - a1) / 40;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  if (v10 >= v12)
  {
    sub_190B1300C(a2, (uint64_t)(a3 - (_QWORD)a2) / 40, a4);
    v30 = a2;
    v14 = &v6[40 * v12];
    if (v8 >= a2 || v11 < 40)
      goto LABEL_32;
    v32 = a3 - 40;
    v65 = v6;
    v61 = (unint64_t)v8;
    while (1)
    {
      v52 = v32;
      v63 = v14;
      v34 = *((_QWORD *)v14 - 5);
      v33 = *((_QWORD *)v14 - 4);
      v14 -= 40;
      v35 = *((_QWORD *)v30 - 5);
      v36 = *((_QWORD *)v30 - 4);
      v37 = v30 - 40;
      v39 = *((_QWORD *)v30 - 3);
      v38 = *((_QWORD *)v30 - 2);
      v40 = *(v30 - 8);
      v67 = v30;
      v57 = *((_QWORD *)v14 + 2);
      v59 = v33;
      v55 = *((_QWORD *)v14 + 3);
      v53 = v14[32];
      sub_190B4E680(v34, v33, v57, v55, v53);
      sub_190B4E680(v35, v36, v39, v38, v40);
      v41 = sub_190B9E620();
      if (v5)
      {
        sub_190BA0E84(v35, v36, v39, v38, v40);
        sub_190BA0E84(v34, v59, v57, v55, v53);
        v47 = v65;
        v48 = (v63 - v65) / 40;
        v49 = v67;
        goto LABEL_35;
      }
      v42 = v41;
      v51 = (char *)(v52 + 40);
      sub_190BA0E84(v35, v36, v39, v38, v40);
      sub_190BA0E84(v34, v59, v57, v55, v53);
      if ((v42 & 1) != 0)
      {
        v6 = v65;
        v43 = v51 != v67 || v52 >= (unint64_t)v67;
        v30 = v37;
        v14 = v63;
        if (!v43)
          goto LABEL_30;
      }
      else
      {
        v6 = v65;
        v44 = v51 != v63 || v52 >= (unint64_t)v63;
        v37 = v14;
        v30 = v67;
        if (!v44)
          goto LABEL_30;
      }
      v45 = *(_OWORD *)v37;
      v46 = *((_OWORD *)v37 + 1);
      *(_QWORD *)(v52 + 32) = *((_QWORD *)v37 + 4);
      *(_OWORD *)v52 = v45;
      *(_OWORD *)(v52 + 16) = v46;
LABEL_30:
      v5 = 0;
      if ((unint64_t)v30 > v61)
      {
        v32 = v52 - 40;
        if (v14 > v6)
          continue;
      }
      goto LABEL_32;
    }
  }
  sub_190B1300C(a1, (a2 - a1) / 40, a4);
  v14 = &v6[40 * v10];
  if ((unint64_t)a2 >= a3 || v9 < 40)
  {
LABEL_13:
    v30 = v8;
LABEL_32:
    sub_190B1300C(v6, (v14 - v6) / 40, v30);
    return 1;
  }
  v15 = a2;
  v62 = &v6[40 * v10];
  v54 = a3;
  while (1)
  {
    v60 = v8;
    v16 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    v18 = *((_QWORD *)v15 + 3);
    v64 = v6;
    v66 = v15;
    v19 = *(_QWORD *)v6;
    v20 = *((_QWORD *)v6 + 1);
    v21 = *((_QWORD *)v6 + 2);
    v22 = *((_QWORD *)v6 + 3);
    v23 = v6[32];
    v58 = *(_QWORD *)v15;
    v56 = v15[32];
    sub_190B4E680(*(_QWORD *)v15, v16, v17, v18, v56);
    sub_190B4E680(v19, v20, v21, v22, v23);
    v24 = sub_190B9E620();
    if (v5)
      break;
    v25 = v24;
    sub_190BA0E84(v19, v20, v21, v22, v23);
    sub_190BA0E84(v58, v16, v17, v18, v56);
    if ((v25 & 1) != 0)
    {
      v6 = v64;
      v26 = v66;
      v27 = v66;
      v15 = v66 + 40;
    }
    else
    {
      v26 = v64;
      v15 = v66;
      v27 = v64;
      v6 = v64 + 40;
    }
    v14 = v62;
    if (v60 != v26)
    {
      v28 = *(_OWORD *)v27;
      v29 = *((_OWORD *)v27 + 1);
      *((_QWORD *)v60 + 4) = *((_QWORD *)v27 + 4);
      *(_OWORD *)v60 = v28;
      *((_OWORD *)v60 + 1) = v29;
    }
    v8 = v60 + 40;
    v5 = 0;
    if (v6 >= v62 || (unint64_t)v15 >= v54)
      goto LABEL_13;
  }
  sub_190BA0E84(v19, v20, v21, v22, v23);
  sub_190BA0E84(v58, v16, v17, v18, v56);
  v47 = v64;
  v48 = (v62 - v64) / 40;
  v49 = v60;
LABEL_35:
  sub_190B1300C(v47, v48, v49);
  return 1;
}

uint64_t sub_190BA390C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v14;
  char *v15;
  __int128 v16;
  unint64_t v19;
  char *v20;
  char *v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  __int128 v25;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  if (v9 >= v11)
  {
    sub_190B13074(a2, (uint64_t)(a3 - (_QWORD)a2) / 24, a4);
    v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24)
      goto LABEL_47;
    v19 = a3 - 24;
    while (1)
    {
      v20 = (char *)(v19 + 24);
      v21 = v12 - 24;
      v22 = *((_QWORD *)v12 - 3) == *((_QWORD *)v6 - 3) && *((_QWORD *)v12 - 2) == *((_QWORD *)v6 - 2);
      if (v22 || (sub_190BE60BC() & 1) == 0)
      {
        v24 = v20 != v12 || v19 >= (unint64_t)v12;
        v12 -= 24;
        if (!v24)
          goto LABEL_43;
      }
      else
      {
        v23 = v20 != v6 || v19 >= (unint64_t)v6;
        v21 = v6 - 24;
        v6 -= 24;
        if (!v23)
          goto LABEL_43;
      }
      v25 = *(_OWORD *)v21;
      *(_QWORD *)(v19 + 16) = *((_QWORD *)v21 + 2);
      *(_OWORD *)v19 = v25;
LABEL_43:
      v19 -= 24;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_47;
    }
  }
  sub_190B13074(a1, (a2 - a1) / 24, a4);
  v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_190BE60BC() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 24;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 24;
    if (v14)
      goto LABEL_16;
LABEL_15:
    v16 = *(_OWORD *)v15;
    *((_QWORD *)v7 + 2) = *((_QWORD *)v15 + 2);
    *(_OWORD *)v7 = v16;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_190B13074(v4, (v12 - v4) / 24, v6);
  return 1;
}

uint64_t OUTLINED_FUNCTION_72_3()
{
  return sub_190BE4F28();
}

unint64_t OUTLINED_FUNCTION_88_3()
{
  unint64_t v0;
  unint64_t v1;

  sub_190AED454(v0);
  sub_190AED454(v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_89_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 16) = v0;
  v5 = v4 + 16 * v2;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v1;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_92_3()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 2126913;
  *(_QWORD *)(v0 - 96) = 0xE300000000000000;
}

uint64_t OUTLINED_FUNCTION_97_3()
{
  uint64_t v0;

  return sub_190B0C24C(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t OUTLINED_FUNCTION_100_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return sub_190BE5114();
}

unint64_t OUTLINED_FUNCTION_105_1()
{
  return sub_190AD8E3C();
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return 0x3A65766F6D657220;
}

uint64_t OUTLINED_FUNCTION_108_1()
{
  return 0x3A747265736E6920;
}

void OUTLINED_FUNCTION_110_1()
{
  JUMPOUT(0x194016EF8);
}

uint64_t OUTLINED_FUNCTION_114_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t sub_190BA3BF0()
{
  OUTLINED_FUNCTION_83();
  return swift_deallocObject();
}

uint64_t sub_190BA3C10()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

uint64_t sub_190BA3C34()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  return swift_deallocObject();
}

_QWORD *combine<A, B, C, D, E>(_:_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;

  OUTLINED_FUNCTION_42_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *v8;
  v11 = (_QWORD *)OUTLINED_FUNCTION_24();
  v12 = *(_QWORD *)(v10 + 80);
  v11[2] = v12;
  v11[3] = v7;
  v11[4] = v5;
  v11[5] = v3;
  v11[6] = v1;
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_46_10();
  v13 = (void *)OUTLINED_FUNCTION_168(v12);
  OUTLINED_FUNCTION_38_13();
  OUTLINED_FUNCTION_3_49();

  return v9;
}

uint64_t sub_190BA3D48(uint64_t a1, _QWORD *a2, uint64_t *a3, _QWORD *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v29 = a4;
  v30 = a2;
  v9 = *a2;
  v10 = *a4;
  v27 = *a3;
  v28 = v10;
  v11 = *a5;
  v12 = *(_QWORD *)(a6 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v14);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a6;
  v26 = *(_QWORD *)(v9 + 80);
  *((_QWORD *)v17 + 3) = v26;
  v27 = *(_QWORD *)(v27 + 80);
  *((_QWORD *)v17 + 4) = v27;
  v18 = v29;
  v28 = *(_QWORD *)(v28 + 80);
  *((_QWORD *)v17 + 5) = v28;
  v19 = *(_QWORD *)(v11 + 80);
  *((_QWORD *)v17 + 6) = v19;
  *((_QWORD *)v17 + 7) = a3;
  *((_QWORD *)v17 + 8) = v18;
  *((_QWORD *)v17 + 9) = a5;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v16], (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  swift_retain();
  swift_retain();
  swift_retain();
  v20 = v26;
  v31 = a6;
  v32 = v26;
  v33 = v27;
  v34 = v28;
  v35 = v19;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v22 = (void *)sub_190AC06B8(v20, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v24 = v23;
  swift_release();

  return v24;
}

uint64_t sub_190BA3EF0()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  return swift_deallocObject();
}

uint64_t sub_190BA3F1C(uint64_t a1)
{
  uint64_t v1;

  return sub_190BA3D48(a1, *(_QWORD **)(v1 + 24), *(uint64_t **)(v1 + 32), *(_QWORD **)(v1 + 40), *(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 16));
}

uint64_t sub_190BA3F3C(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t TupleTypeMetadata;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v45 = a2;
  v51 = a3;
  v39 = a1;
  v9 = *a3;
  v41 = *a2;
  v42 = v9;
  v43 = *a4;
  v44 = a4;
  v10 = *(_QWORD *)(*(_QWORD *)(a7 - 8) + 64);
  v11 = *(_QWORD *)(a7 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v18);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v20 = v11;
  v38 = v11;
  v21 = a7;
  v19((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v39, a7);
  v22 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = (v15 + *(unsigned __int8 *)(v20 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v24 = (char *)swift_allocObject();
  v25 = a6;
  *((_QWORD *)v24 + 2) = a6;
  *((_QWORD *)v24 + 3) = v21;
  v26 = v21;
  v27 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v24 + 4) = v27;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v24 + 5) = v42;
  v28 = v44;
  v29 = *(_QWORD *)(v43 + 80);
  v30 = v51;
  *((_QWORD *)v24 + 6) = v29;
  *((_QWORD *)v24 + 7) = v30;
  *((_QWORD *)v24 + 8) = v28;
  v31 = v16;
  v32 = v25;
  (*(void (**)(char *, char *))(v14 + 32))(&v24[v22], v31);
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v24[v23], v40, v26);
  swift_retain();
  swift_retain();
  v46 = v32;
  v47 = v26;
  v48 = v27;
  v49 = v42;
  v50 = v29;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v34 = (void *)sub_190AC06B8(v27, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v36 = v35;
  swift_release();

  return v36;
}

uint64_t sub_190BA4154(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t TupleTypeMetadata;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v49 = a2;
  v40 = a5;
  v41 = a1;
  v46 = *a2;
  v47 = *a3;
  v48 = a3;
  v55 = *(_QWORD *)(a8 - 8);
  v43 = *(_QWORD *)(v55 + 64);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v12;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  v39 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v16);
  v42 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v18 + 16))();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v38 = v14;
  v21 = a7;
  v20((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v40, a7);
  v22 = v55;
  v23 = a8;
  (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v12, v41, a8);
  v24 = (*(unsigned __int8 *)(v18 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v25 = (v19 + *(unsigned __int8 *)(v14 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v41 = (v15 + *(unsigned __int8 *)(v22 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v26 = (char *)swift_allocObject();
  v27 = v39;
  *((_QWORD *)v26 + 2) = v39;
  *((_QWORD *)v26 + 3) = v21;
  *((_QWORD *)v26 + 4) = v23;
  v28 = *(_QWORD *)(v46 + 80);
  *((_QWORD *)v26 + 5) = v28;
  v29 = v48;
  v30 = *(_QWORD *)(v47 + 80);
  *((_QWORD *)v26 + 6) = v30;
  *((_QWORD *)v26 + 7) = v29;
  v31 = &v26[v24];
  v32 = v27;
  (*(void (**)(char *, char *))(v18 + 32))(v31, v42);
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v26[v25], v44, v21);
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v26[v41], v45, v23);
  swift_retain();
  v50 = v32;
  v51 = v21;
  v52 = v23;
  v53 = v28;
  v54 = v30;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v34 = (void *)sub_190AC06B8(v28, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v36 = v35;
  swift_release();

  return v36;
}

uint64_t sub_190BA43C8(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *);
  uint64_t v38;
  uint64_t TupleTypeMetadata;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;

  v45 = a7;
  v52 = a5;
  v50 = a4;
  v60 = a9;
  v57 = *a2;
  v58 = a2;
  v59 = *(_QWORD *)(a9 - 8);
  v10 = *(_QWORD *)(v59 + 64);
  v55 = a1;
  v56 = v10;
  v11 = MEMORY[0x1E0C80A78](a1);
  v66 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 - 8);
  v48 = v13;
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x1E0C80A78](v20);
  v51 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v22 + 16))();
  v47 = v18;
  v24 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v50, v45);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v46 = v14;
  v25((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v52, a8);
  v26 = v59;
  (*(void (**)(char *, unint64_t, uint64_t))(v59 + 16))(v66, v55, v60);
  v27 = (*(unsigned __int8 *)(v22 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v28 = *(unsigned __int8 *)(v14 + 80);
  v29 = (v23 + *(unsigned __int8 *)(v18 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v55 = (v19 + v28 + v29) & ~v28;
  v30 = (v15 + *(unsigned __int8 *)(v26 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v31 = (char *)swift_allocObject();
  v32 = v49;
  *((_QWORD *)v31 + 2) = v49;
  *((_QWORD *)v31 + 3) = v24;
  v33 = v24;
  v34 = v48;
  v35 = v60;
  *((_QWORD *)v31 + 4) = v48;
  *((_QWORD *)v31 + 5) = v35;
  v36 = *(_QWORD *)(v57 + 80);
  *((_QWORD *)v31 + 6) = v36;
  v37 = *(void (**)(char *, char *))(v22 + 32);
  v38 = v32;
  v37(&v31[v27], v51);
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v31[v29], v53, v33);
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v31[v55], v54, v34);
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v31[v30], v66, v35);
  v61 = v38;
  v62 = v33;
  v63 = v34;
  v64 = v35;
  v65 = v36;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v40 = (void *)sub_190AC06B8(v36, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v42 = v41;
  swift_release();

  return v42;
}

uint64_t sub_190BA46B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *TupleTypeMetadata;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v16 = a9 + TupleTypeMetadata[12];
  v17 = a9 + TupleTypeMetadata[16];
  v18 = a9 + TupleTypeMetadata[20];
  v21 = a9 + TupleTypeMetadata[24];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(a9, a2, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(v16, a3, a7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 16))(v17, a4, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 16))(v18, a5, a10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 16))(v21, a1, a11);
}

uint64_t *combine<A, B, C, D, E, F>(_:_:_:_:_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;

  v12 = *a1;
  v13 = (_QWORD *)OUTLINED_FUNCTION_24();
  v14 = *(_QWORD *)(v12 + 80);
  v13[2] = v14;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = a5;
  v13[7] = a6;
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_46_10();
  v15 = (void *)OUTLINED_FUNCTION_168(v14);
  OUTLINED_FUNCTION_38_13();
  OUTLINED_FUNCTION_3_49();

  return a1;
}

uint64_t sub_190BA48EC(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, _QWORD *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t TupleTypeMetadata;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a5;
  v34 = a2;
  v11 = *a2;
  v12 = *a4;
  v29 = *a3;
  v30 = v12;
  v13 = *a6;
  v31 = *a5;
  v32 = v13;
  v14 = *(_QWORD *)(a7 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v16);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a7;
  v28 = *(_QWORD *)(v11 + 80);
  *((_QWORD *)v19 + 3) = v28;
  v29 = *(_QWORD *)(v29 + 80);
  *((_QWORD *)v19 + 4) = v29;
  v30 = *(_QWORD *)(v30 + 80);
  *((_QWORD *)v19 + 5) = v30;
  v31 = *(_QWORD *)(v31 + 80);
  *((_QWORD *)v19 + 6) = v31;
  v20 = v33;
  v32 = *(_QWORD *)(v32 + 80);
  *((_QWORD *)v19 + 7) = v32;
  *((_QWORD *)v19 + 8) = a3;
  *((_QWORD *)v19 + 9) = a4;
  *((_QWORD *)v19 + 10) = v20;
  *((_QWORD *)v19 + 11) = a6;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a7);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v21 = v28;
  v35 = a7;
  v36 = v28;
  v37 = v29;
  v38 = v30;
  v39 = v31;
  v40 = v32;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v23 = (void *)sub_190AC06B8(v21, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v25 = v24;
  swift_release();

  return v25;
}

uint64_t sub_190BA4ACC()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  return swift_deallocObject();
}

uint64_t sub_190BA4AFC(uint64_t a1)
{
  uint64_t v1;

  return sub_190BA48EC(a1, *(_QWORD **)(v1 + 24), *(uint64_t **)(v1 + 32), *(uint64_t **)(v1 + 40), *(_QWORD **)(v1 + 48), *(uint64_t **)(v1 + 56), *(_QWORD *)(v1 + 16));
}

uint64_t sub_190BA4B1C(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t TupleTypeMetadata;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  v49 = a2;
  v47 = a3;
  v48 = a5;
  v56 = a4;
  v11 = *a3;
  v43 = *a2;
  v44 = v11;
  v12 = *a5;
  v45 = *a4;
  v46 = v12;
  v13 = *(_QWORD *)(a8 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v42 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v20, v21);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v23 = a1;
  v24 = a8;
  v41 = a8;
  v22((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v23, a8);
  v25 = (*(unsigned __int8 *)(v17 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v26 = (v18 + *(unsigned __int8 *)(v13 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v27 = (char *)swift_allocObject();
  v28 = a7;
  *((_QWORD *)v27 + 2) = a7;
  *((_QWORD *)v27 + 3) = v24;
  v29 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v27 + 4) = v29;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v27 + 5) = v44;
  v45 = *(_QWORD *)(v45 + 80);
  *((_QWORD *)v27 + 6) = v45;
  v30 = v47;
  v46 = *(_QWORD *)(v46 + 80);
  *((_QWORD *)v27 + 7) = v46;
  *((_QWORD *)v27 + 8) = v30;
  v31 = v48;
  *((_QWORD *)v27 + 9) = v56;
  *((_QWORD *)v27 + 10) = v31;
  v32 = v19;
  v33 = v28;
  (*(void (**)(char *, char *))(v17 + 32))(&v27[v25], v32);
  v34 = &v27[v26];
  v35 = v41;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v34, v42, v41);
  swift_retain();
  swift_retain();
  swift_retain();
  v50 = v33;
  v51 = v35;
  v52 = v29;
  v53 = v44;
  v54 = v45;
  v55 = v46;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v37 = (void *)sub_190AC06B8(v29, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v39 = v38;
  swift_release();

  return v39;
}

uint64_t sub_190BA4D54(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v55 = a2;
  v44 = a6;
  v45 = a1;
  v53 = a3;
  v54 = a4;
  v10 = *a3;
  v50 = *a2;
  v51 = v10;
  v52 = *a4;
  v62 = *(_QWORD *)(a9 - 8);
  v47 = *(_QWORD *)(v62 + 64);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v13;
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x1E0C80A78](v11);
  v48 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v18 - 8);
  v43 = v18;
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](v17);
  v46 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v19 + 16))();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v42 = v15;
  v21((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v44, a8);
  v22 = v62;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v41 = a9;
  v23(v13, v45, a9);
  v24 = (*(unsigned __int8 *)(v19 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v25 = (v20 + *(unsigned __int8 *)(v15 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v26 = (v16 + *(unsigned __int8 *)(v22 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v27 = (char *)swift_allocObject();
  v28 = v43;
  *((_QWORD *)v27 + 2) = v43;
  *((_QWORD *)v27 + 3) = a8;
  *((_QWORD *)v27 + 4) = a9;
  v29 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v27 + 5) = v29;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v27 + 6) = v51;
  v30 = v53;
  v52 = *(_QWORD *)(v52 + 80);
  *((_QWORD *)v27 + 7) = v52;
  *((_QWORD *)v27 + 8) = v30;
  *((_QWORD *)v27 + 9) = v54;
  v31 = &v27[v24];
  v32 = v28;
  (*(void (**)(char *, char *))(v19 + 32))(v31, v46);
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v27[v25], v48, a8);
  v33 = &v27[v26];
  v34 = v41;
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v33, v49, v41);
  swift_retain();
  swift_retain();
  v56 = v32;
  v57 = a8;
  v58 = v34;
  v59 = v29;
  v60 = v51;
  v61 = v52;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v36 = (void *)sub_190AC06B8(v29, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v38 = v37;
  swift_release();

  return v38;
}

uint64_t sub_190BA5000(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(char *, char *);
  uint64_t v37;
  uint64_t TupleTypeMetadata;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;

  v49 = a6;
  v46 = a5;
  v56 = a3;
  v57 = a2;
  v60 = a10;
  v11 = *a3;
  v54 = *a2;
  v55 = v11;
  v59 = *(_QWORD *)(a10 - 8);
  v12 = *(_QWORD *)(v59 + 64);
  v52 = a1;
  v53 = v12;
  v13 = MEMORY[0x1E0C80A78](a1);
  v67 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = *(_QWORD *)(a9 - 8);
  v48 = *(_QWORD *)(v58 + 64);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v17;
  v19 = *(_QWORD *)(v18 - 8);
  v44 = v18;
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x1E0C80A78](v15);
  v50 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v21);
  v47 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v23 + 16))();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v43 = v19;
  v25((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v46, a8);
  v26 = v58;
  (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v17, v49, a9);
  v27 = v59;
  (*(void (**)(char *, unint64_t, uint64_t))(v59 + 16))(v67, v52, v60);
  v28 = (*(unsigned __int8 *)(v23 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v29 = (v24 + *(unsigned __int8 *)(v19 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v49 = (v20 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v52 = (v48 + *(unsigned __int8 *)(v27 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v30 = (char *)swift_allocObject();
  v31 = v45;
  v32 = v44;
  *((_QWORD *)v30 + 2) = v45;
  *((_QWORD *)v30 + 3) = v32;
  v33 = v60;
  *((_QWORD *)v30 + 4) = a9;
  *((_QWORD *)v30 + 5) = v33;
  v34 = *(_QWORD *)(v54 + 80);
  *((_QWORD *)v30 + 6) = v34;
  v35 = v56;
  v55 = *(_QWORD *)(v55 + 80);
  *((_QWORD *)v30 + 7) = v55;
  *((_QWORD *)v30 + 8) = v35;
  v36 = *(void (**)(char *, char *))(v23 + 32);
  v37 = v31;
  v36(&v30[v28], v47);
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v30[v29], v50, v32);
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(&v30[v49], v51, a9);
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v30[v52], v67, v33);
  swift_retain();
  v61 = v37;
  v62 = v32;
  v63 = a9;
  v64 = v33;
  v65 = v34;
  v66 = v55;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v39 = (void *)sub_190AC06B8(v34, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v41 = v40;
  swift_release();

  return v41;
}

uint64_t sub_190BA5334(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t TupleTypeMetadata;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;

  v67 = a6;
  v62 = a5;
  v60 = a4;
  v68 = a1;
  v74 = a10;
  v75 = a9;
  v66 = a11;
  v71 = *a2;
  v72 = a2;
  v76 = *(_QWORD *)(a11 - 8);
  v70 = *(_QWORD *)(v76 + 64);
  v12 = MEMORY[0x1E0C80A78](a1);
  v84 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = *(_QWORD *)(v14 - 8);
  v69 = *(_QWORD *)(v73 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  v61 = *(_QWORD *)(v18 + 64);
  v19 = v18;
  v20 = MEMORY[0x1E0C80A78](v15);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v22;
  v24 = *(_QWORD *)(v23 - 8);
  v58 = v23;
  v25 = *(_QWORD *)(v24 + 64);
  v26 = MEMORY[0x1E0C80A78](v20);
  v64 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  MEMORY[0x1E0C80A78](v26);
  v63 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(void (**)(void))(v28 + 16);
  v55 = v28;
  v30();
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v32 = v24;
  v56 = v24;
  v31((char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v60, a8);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v34 = v19;
  v57 = v19;
  v33(v22, v62, v75);
  v35 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v77, v67, v74);
  v36 = v76;
  v37 = v66;
  (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v84, v68, v66);
  v38 = (*(unsigned __int8 *)(v28 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v39 = (v29 + *(unsigned __int8 *)(v32 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v40 = (v25 + *(unsigned __int8 *)(v34 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v68 = (v61 + *(unsigned __int8 *)(v35 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v69 = (v69 + *(unsigned __int8 *)(v36 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v41 = (char *)swift_allocObject();
  v42 = v59;
  v43 = v58;
  *((_QWORD *)v41 + 2) = v59;
  *((_QWORD *)v41 + 3) = v43;
  v44 = v74;
  v45 = v75;
  *((_QWORD *)v41 + 4) = v75;
  *((_QWORD *)v41 + 5) = v44;
  *((_QWORD *)v41 + 6) = v37;
  v46 = *(_QWORD *)(v71 + 80);
  *((_QWORD *)v41 + 7) = v46;
  v47 = &v41[v38];
  v48 = v42;
  (*(void (**)(char *, char *))(v55 + 32))(v47, v63);
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v41[v39], v64, v43);
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v41[v40], v65, v45);
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v41[v68], v77, v44);
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(&v41[v69], v84, v37);
  v78 = v48;
  v79 = v43;
  v80 = v45;
  v81 = v44;
  v82 = v37;
  v83 = v46;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v50 = (void *)sub_190AC06B8(v46, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v52 = v51;
  swift_release();

  return v52;
}

uint64_t sub_190BA5710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int *TupleTypeMetadata;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v17 = a9 + TupleTypeMetadata[12];
  v18 = a9 + TupleTypeMetadata[16];
  v20 = a9 + TupleTypeMetadata[20];
  v21 = a9 + TupleTypeMetadata[24];
  v23 = a9 + TupleTypeMetadata[28];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(a9, a2, a7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 16))(v17, a3, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 16))(v18, a4, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 16))(v20, a5, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 16))(v21, a6, a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a13 - 8) + 16))(v23, a1, a13);
}

_QWORD *combine<A, B, C, D, E, F, G>(_:_:_:_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;

  OUTLINED_FUNCTION_31_13();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = *v12;
  OUTLINED_FUNCTION_154_0();
  OUTLINED_FUNCTION_153_0();
  v15 = (_QWORD *)OUTLINED_FUNCTION_24();
  v16 = *(_QWORD *)(v14 + 80);
  v15[2] = v16;
  v15[3] = v11;
  v15[4] = v9;
  v15[5] = v7;
  v15[6] = v5;
  v15[7] = v3;
  v15[8] = v1;
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_46_10();
  v17 = (void *)OUTLINED_FUNCTION_168(v16);
  OUTLINED_FUNCTION_38_13();
  OUTLINED_FUNCTION_3_49();

  return v13;
}

uint64_t sub_190BA5978(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t *a4, uint64_t *a5, _QWORD *a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v35 = a3;
  v36 = a6;
  v37 = a2;
  v12 = *a2;
  v32 = *a3;
  v33 = v12;
  v13 = *a4;
  v29 = *a5;
  v30 = v13;
  v31 = *a6;
  v34 = *a7;
  v14 = *(_QWORD *)(a8 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v16);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  v20 = a8;
  *((_QWORD *)v19 + 2) = a8;
  v33 = *(_QWORD *)(v33 + 80);
  *((_QWORD *)v19 + 3) = v33;
  v32 = *(_QWORD *)(v32 + 80);
  *((_QWORD *)v19 + 4) = v32;
  v30 = *(_QWORD *)(v30 + 80);
  *((_QWORD *)v19 + 5) = v30;
  v29 = *(_QWORD *)(v29 + 80);
  *((_QWORD *)v19 + 6) = v29;
  v31 = *(_QWORD *)(v31 + 80);
  *((_QWORD *)v19 + 7) = v31;
  v21 = v35;
  v34 = *(_QWORD *)(v34 + 80);
  *((_QWORD *)v19 + 8) = v34;
  *((_QWORD *)v19 + 9) = v21;
  *((_QWORD *)v19 + 10) = a4;
  *((_QWORD *)v19 + 11) = a5;
  *((_QWORD *)v19 + 12) = v36;
  *((_QWORD *)v19 + 13) = a7;
  v22 = v20;
  (*(void (**)(char *, char *))(v14 + 32))(&v19[v18], (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v23 = v33;
  v38 = v22;
  v39 = v33;
  v40 = v32;
  v41 = v30;
  v42 = v29;
  v43 = v31;
  v44 = v34;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v25 = (void *)sub_190AC06B8(v23, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v27 = v26;
  swift_release();

  return v27;
}

uint64_t sub_190BA5B94()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  return swift_deallocObject();
}

uint64_t sub_190BA5BC8(uint64_t a1)
{
  uint64_t v1;

  return sub_190BA5978(a1, *(_QWORD **)(v1 + 24), *(_QWORD **)(v1 + 32), *(uint64_t **)(v1 + 40), *(uint64_t **)(v1 + 48), *(_QWORD **)(v1 + 56), *(uint64_t **)(v1 + 64), *(_QWORD *)(v1 + 16));
}

uint64_t sub_190BA5BEC(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t TupleTypeMetadata;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;

  v52 = a2;
  v50 = a5;
  v51 = a6;
  v60 = a3;
  v11 = *a3;
  v44 = *a2;
  v45 = v11;
  v12 = *a5;
  v46 = *a4;
  v47 = v12;
  v48 = *a6;
  v49 = a4;
  v13 = *(_QWORD *)(a9 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v43 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v20, v21);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v42 = a9;
  v22((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a9);
  v23 = (*(unsigned __int8 *)(v17 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v24 = (v18 + v23 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v25 = (_QWORD *)swift_allocObject();
  v26 = a8;
  v25[2] = a8;
  v25[3] = a9;
  v44 = *(_QWORD *)(v44 + 80);
  v25[4] = v44;
  v45 = *(_QWORD *)(v45 + 80);
  v25[5] = v45;
  v46 = *(_QWORD *)(v46 + 80);
  v25[6] = v46;
  v47 = *(_QWORD *)(v47 + 80);
  v25[7] = v47;
  v27 = v49;
  v48 = *(_QWORD *)(v48 + 80);
  v28 = v60;
  v25[8] = v48;
  v25[9] = v28;
  v29 = v50;
  v30 = v51;
  v25[10] = v27;
  v25[11] = v29;
  v25[12] = v30;
  v31 = (char *)v25 + v23;
  v32 = v26;
  (*(void (**)(char *, char *))(v17 + 32))(v31, v19);
  v33 = (char *)v25 + v24;
  v34 = v42;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v33, v43, v42);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v53 = v32;
  v54 = v34;
  v35 = v44;
  v55 = v44;
  v56 = v45;
  v57 = v46;
  v58 = v47;
  v59 = v48;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v37 = (void *)sub_190AC06B8(v35, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v39 = v38;
  swift_release();

  return v39;
}

uint64_t sub_190BA5E54(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  void (*v32)(char *, char *);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t TupleTypeMetadata;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v44 = a7;
  v53 = a4;
  v54 = a5;
  v65 = a3;
  v55 = a2;
  v45 = a1;
  v57 = a10;
  v10 = *a3;
  v49 = *a2;
  v50 = v10;
  v11 = *a5;
  v51 = *a4;
  v52 = v11;
  v56 = *(_QWORD *)(a10 - 8);
  v12 = *(_QWORD *)(v56 + 64);
  v13 = MEMORY[0x1E0C80A78](a1);
  v48 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a9 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](v13);
  v47 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  v42 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v16);
  v46 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v18 + 16))();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v43 = v14;
  v20((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v44, a9);
  v21 = v56;
  v22 = v57;
  (*(void (**)(char *, uint64_t))(v56 + 16))((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v45);
  v23 = (*(unsigned __int8 *)(v18 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v24 = (v19 + v23 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v25 = (v15 + *(unsigned __int8 *)(v21 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v26 = (char *)swift_allocObject();
  v27 = v42;
  *((_QWORD *)v26 + 2) = v42;
  *((_QWORD *)v26 + 3) = a9;
  *((_QWORD *)v26 + 4) = v22;
  v28 = *(_QWORD *)(v49 + 80);
  *((_QWORD *)v26 + 5) = v28;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v26 + 6) = v50;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v26 + 7) = v51;
  v29 = v53;
  v52 = *(_QWORD *)(v52 + 80);
  v30 = v65;
  *((_QWORD *)v26 + 8) = v52;
  *((_QWORD *)v26 + 9) = v30;
  v31 = v54;
  *((_QWORD *)v26 + 10) = v29;
  *((_QWORD *)v26 + 11) = v31;
  v32 = *(void (**)(char *, char *))(v18 + 32);
  v33 = v27;
  v32(&v26[v23], v46);
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v26[v24], v47, a9);
  v34 = &v26[v25];
  v35 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v34, v48, v57);
  swift_retain();
  swift_retain();
  swift_retain();
  v58 = v33;
  v59 = a9;
  v60 = v35;
  v61 = v28;
  v62 = v50;
  v63 = v51;
  v64 = v52;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v37 = (void *)sub_190AC06B8(v28, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v39 = v38;
  swift_release();

  return v39;
}

uint64_t sub_190BA6134(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t TupleTypeMetadata;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v51 = a7;
  v48 = a6;
  v59 = a4;
  v60 = a2;
  v72 = a3;
  v53 = a1;
  v63 = a11;
  v11 = *a3;
  v56 = *a2;
  v57 = v11;
  v58 = *a4;
  v62 = *(_QWORD *)(a11 - 8);
  v55 = *(_QWORD *)(v62 + 64);
  v12 = MEMORY[0x1E0C80A78](a1);
  v64 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = *(_QWORD *)(a10 - 8);
  v45 = a10;
  v49 = *(_QWORD *)(v61 + 64);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v16;
  v17 = *(_QWORD *)(a9 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x1E0C80A78](v14);
  v52 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v19);
  v50 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v21 + 16))();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v46 = v17;
  v23((char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v48, a9);
  v24 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v16, v51, a10);
  v25 = v62;
  v26 = v63;
  (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v64, v53, v63);
  v27 = (*(unsigned __int8 *)(v21 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v28 = (v22 + v27 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v29 = (v18 + *(unsigned __int8 *)(v24 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v53 = (v49 + *(unsigned __int8 *)(v25 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v30 = (char *)swift_allocObject();
  v31 = v47;
  *((_QWORD *)v30 + 2) = v47;
  *((_QWORD *)v30 + 3) = a9;
  v32 = v45;
  *((_QWORD *)v30 + 4) = v45;
  *((_QWORD *)v30 + 5) = v26;
  v33 = *(_QWORD *)(v56 + 80);
  *((_QWORD *)v30 + 6) = v33;
  v57 = *(_QWORD *)(v57 + 80);
  *((_QWORD *)v30 + 7) = v57;
  v34 = v59;
  v58 = *(_QWORD *)(v58 + 80);
  v35 = v72;
  *((_QWORD *)v30 + 8) = v58;
  *((_QWORD *)v30 + 9) = v35;
  *((_QWORD *)v30 + 10) = v34;
  v36 = &v30[v27];
  v37 = v31;
  (*(void (**)(char *, char *))(v21 + 32))(v36, v50);
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v30[v28], v52, a9);
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(&v30[v29], v54, v32);
  v38 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v30[v53], v64, v63);
  swift_retain();
  swift_retain();
  v65 = v37;
  v66 = a9;
  v67 = v32;
  v68 = v38;
  v69 = v33;
  v70 = v57;
  v71 = v58;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v40 = (void *)sub_190AC06B8(v33, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v42 = v41;
  swift_release();

  return v42;
}

uint64_t sub_190BA64AC(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t TupleTypeMetadata;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;

  v60 = a7;
  v56 = a6;
  v54 = a5;
  v66 = a3;
  v67 = a2;
  v61 = a1;
  v72 = a12;
  v12 = *a3;
  v64 = *a2;
  v65 = v12;
  v13 = *(_QWORD *)(a12 - 8);
  v70 = a11;
  v71 = v13;
  v63 = *(_QWORD *)(v13 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v81 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = *(_QWORD *)(v16 - 8);
  v62 = *(_QWORD *)(v69 + 64);
  v17 = MEMORY[0x1E0C80A78](v14);
  v73 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = *(_QWORD *)(a10 - 8);
  v55 = *(_QWORD *)(v68 + 64);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v21;
  v22 = *(_QWORD *)(a9 - 8);
  v52 = a9;
  v23 = *(_QWORD *)(v22 + 64);
  v24 = MEMORY[0x1E0C80A78](v19);
  v58 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  MEMORY[0x1E0C80A78](v24);
  v57 = (char *)&v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void (**)(void))(v26 + 16);
  v50 = v26;
  v28();
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v51 = v22;
  v29((char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v54, a9);
  v30 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v21, v56, a10);
  v31 = v69;
  (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v73, v60, v70);
  v32 = v71;
  v33 = v72;
  (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v81, v61, v72);
  v34 = (*(unsigned __int8 *)(v26 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v35 = (v27 + v34 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v60 = (v23 + *(unsigned __int8 *)(v30 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v61 = (v55 + *(unsigned __int8 *)(v31 + 80) + v60) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v62 = (v62 + *(unsigned __int8 *)(v32 + 80) + v61) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v36 = (char *)swift_allocObject();
  v37 = v53;
  v38 = v52;
  *((_QWORD *)v36 + 2) = v53;
  *((_QWORD *)v36 + 3) = v38;
  v39 = v70;
  *((_QWORD *)v36 + 4) = a10;
  *((_QWORD *)v36 + 5) = v39;
  *((_QWORD *)v36 + 6) = v33;
  v40 = *(_QWORD *)(v64 + 80);
  *((_QWORD *)v36 + 7) = v40;
  v41 = v66;
  v65 = *(_QWORD *)(v65 + 80);
  *((_QWORD *)v36 + 8) = v65;
  *((_QWORD *)v36 + 9) = v41;
  v42 = v37;
  (*(void (**)(char *, char *))(v50 + 32))(&v36[v34], v57);
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v36[v35], v58, v38);
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v36[v60], v59, a10);
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v36[v61], v73, v39);
  v43 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v36[v62], v81, v72);
  swift_retain();
  v74 = v42;
  v75 = v38;
  v76 = a10;
  v77 = v39;
  v78 = v43;
  v79 = v40;
  v80 = v65;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v45 = (void *)sub_190AC06B8(v40, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v47 = v46;
  swift_release();

  return v47;
}

uint64_t sub_190BA68B8(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t TupleTypeMetadata;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;

  v71 = a7;
  v70 = a6;
  v64 = a5;
  v63 = a4;
  v72 = a1;
  v82 = a13;
  v83 = a11;
  v75 = *a2;
  v76 = a2;
  v13 = *(_QWORD *)(a13 - 8);
  v80 = a12;
  v81 = v13;
  v74 = *(_QWORD *)(v13 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v92 = (char *)&v56 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = *(_QWORD *)(v15 - 8);
  v73 = *(_QWORD *)(v79 + 64);
  v16 = MEMORY[0x1E0C80A78](v14);
  v84 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = *(_QWORD *)(v18 - 8);
  v69 = *(_QWORD *)(v78 + 64);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v21;
  v77 = *(_QWORD *)(a10 - 8);
  v58 = a10;
  v62 = *(_QWORD *)(v77 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v24;
  v25 = *(_QWORD *)(a9 - 8);
  v60 = a9;
  v59 = *(_QWORD *)(v25 + 64);
  v26 = MEMORY[0x1E0C80A78](v22);
  v28 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v28;
  v61 = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v26);
  v65 = (char *)&v56 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(void (**)(void))(v30 + 16);
  v56 = v30;
  v32();
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v57 = v25;
  v33(v28, v63, a9);
  v34 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v24, v64, a10);
  v35 = v78;
  (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v21, v70, v83);
  v37 = v79;
  v36 = v80;
  (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v84, v71, v80);
  v38 = v81;
  (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v92, v72, v82);
  v39 = (*(unsigned __int8 *)(v30 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v40 = (v31 + v39 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v70 = (v59 + *(unsigned __int8 *)(v34 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v71 = (v62 + *(unsigned __int8 *)(v35 + 80) + v70) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v72 = (v69 + *(unsigned __int8 *)(v37 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v73 = (v73 + *(unsigned __int8 *)(v38 + 80) + v72) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v41 = (char *)swift_allocObject();
  v42 = v61;
  v43 = v60;
  *((_QWORD *)v41 + 2) = v61;
  *((_QWORD *)v41 + 3) = v43;
  v44 = v58;
  v45 = v83;
  *((_QWORD *)v41 + 4) = v58;
  *((_QWORD *)v41 + 5) = v45;
  *((_QWORD *)v41 + 6) = v36;
  v46 = v82;
  *((_QWORD *)v41 + 7) = v82;
  v47 = *(_QWORD *)(v75 + 80);
  *((_QWORD *)v41 + 8) = v47;
  v48 = v42;
  (*(void (**)(char *, char *))(v56 + 32))(&v41[v39], v65);
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v41[v40], v66, v43);
  v49 = v44;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v41[v70], v67, v44);
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(&v41[v71], v68, v45);
  v50 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v41[v72], v84, v80);
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v41[v73], v92, v46);
  v85 = v48;
  v86 = v43;
  v87 = v49;
  v88 = v45;
  v89 = v50;
  v90 = v46;
  v91 = v47;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v52 = (void *)sub_190AC06B8(v47, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v54 = v53;
  swift_release();

  return v54;
}

uint64_t sub_190BA6D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int *TupleTypeMetadata;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v18 = a9 + TupleTypeMetadata[12];
  v19 = a9 + TupleTypeMetadata[16];
  v21 = a9 + TupleTypeMetadata[20];
  v22 = a9 + TupleTypeMetadata[24];
  v24 = a9 + TupleTypeMetadata[28];
  v25 = a9 + TupleTypeMetadata[32];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 16))(a9, a2, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 16))(v18, a3, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 16))(v19, a4, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 16))(v21, a5, a12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a13 - 8) + 16))(v22, a6, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 16))(v24, a7, a14);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 16))(v25, a1);
}

uint64_t combine<A, B, C, D, E, F, G, H>(_:_:_:_:_:_:_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  v15 = *a1;
  OUTLINED_FUNCTION_154_0();
  OUTLINED_FUNCTION_153_0();
  v22 = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_24();
  v18 = *(_QWORD *)(v15 + 80);
  v17[2] = v18;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = a6;
  v17[8] = a7;
  v17[9] = a8;
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  v19 = OUTLINED_FUNCTION_46_10();
  v20 = (void *)sub_190AC06B8(v18, v19);
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  return v22;
}

uint64_t sub_190BA7040(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, _QWORD *a6, uint64_t *a7, _QWORD *a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v37 = a6;
  v38 = a8;
  v39 = a2;
  v13 = *a2;
  v35 = *a3;
  v36 = v13;
  v14 = *a4;
  v33 = *a5;
  v34 = v14;
  v15 = *a6;
  v31 = *a7;
  v32 = v15;
  v30 = *a8;
  v16 = *(_QWORD *)(a9 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, a9);
  v29 = (*(unsigned __int8 *)(v16 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = a9;
  v36 = *(_QWORD *)(v36 + 80);
  *((_QWORD *)v20 + 3) = v36;
  v35 = *(_QWORD *)(v35 + 80);
  *((_QWORD *)v20 + 4) = v35;
  v34 = *(_QWORD *)(v34 + 80);
  *((_QWORD *)v20 + 5) = v34;
  v33 = *(_QWORD *)(v33 + 80);
  *((_QWORD *)v20 + 6) = v33;
  v32 = *(_QWORD *)(v32 + 80);
  *((_QWORD *)v20 + 7) = v32;
  v31 = *(_QWORD *)(v31 + 80);
  *((_QWORD *)v20 + 8) = v31;
  v30 = *(_QWORD *)(v30 + 80);
  *((_QWORD *)v20 + 9) = v30;
  *((_QWORD *)v20 + 10) = a3;
  *((_QWORD *)v20 + 11) = a4;
  *((_QWORD *)v20 + 12) = a5;
  v21 = v38;
  *((_QWORD *)v20 + 13) = v37;
  *((_QWORD *)v20 + 14) = a7;
  *((_QWORD *)v20 + 15) = v21;
  (*(void (**)(char *, char *))(v16 + 32))(&v20[v29], v18);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v22 = v36;
  v40 = a9;
  v41 = v36;
  v42 = v35;
  v43 = v34;
  v44 = v33;
  v45 = v32;
  v46 = v31;
  v47 = v30;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v24 = (void *)sub_190AC06B8(v22, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v26 = v25;
  swift_release();

  return v26;
}

uint64_t sub_190BA728C()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  return swift_deallocObject();
}

void sub_190BA72C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_121_2();
  sub_190BA7040(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BA72E4(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  unint64_t v22;
  unint64_t v23;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t TupleTypeMetadata;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v49 = a2;
  v47 = a6;
  v48 = a7;
  v45 = a3;
  v46 = a5;
  v58 = a4;
  v11 = *a3;
  v39 = *a2;
  v40 = v11;
  v12 = *a5;
  v41 = *a4;
  v42 = v12;
  v13 = *a7;
  v43 = *a6;
  v44 = v13;
  v14 = *(_QWORD *)(*(_QWORD *)(a10 - 8) + 64);
  v37 = *(_QWORD *)(a10 - 8);
  v15 = v37;
  v16 = MEMORY[0x1E0C80A78](a1);
  v38 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a9 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v20, a9);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v36 = a10;
  v21((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a10);
  v22 = (*(unsigned __int8 *)(v17 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v23 = (v18 + *(unsigned __int8 *)(v15 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = a9;
  *((_QWORD *)v24 + 3) = a10;
  v39 = *(_QWORD *)(v39 + 80);
  *((_QWORD *)v24 + 4) = v39;
  v40 = *(_QWORD *)(v40 + 80);
  *((_QWORD *)v24 + 5) = v40;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v24 + 6) = v41;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v24 + 7) = v42;
  v43 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v24 + 8) = v43;
  v25 = v45;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v24 + 9) = v44;
  *((_QWORD *)v24 + 10) = v25;
  v27 = v46;
  v26 = v47;
  *((_QWORD *)v24 + 11) = v58;
  *((_QWORD *)v24 + 12) = v27;
  v28 = v48;
  *((_QWORD *)v24 + 13) = v26;
  *((_QWORD *)v24 + 14) = v28;
  (*(void (**)(char *, char *))(v17 + 32))(&v24[v22], v19);
  v29 = v36;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v24[v23], v38, v36);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v50 = a9;
  v51 = v29;
  v30 = v39;
  v52 = v39;
  v53 = v40;
  v54 = v41;
  v55 = v42;
  v56 = v43;
  v57 = v44;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v32 = (void *)sub_190AC06B8(v30, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v34 = v33;
  swift_release();

  return v34;
}

uint64_t sub_190BA7590(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void (*v31)(char *, char *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v44 = a8;
  v57 = a5;
  v58 = a6;
  v55 = a3;
  v56 = a4;
  v59 = a2;
  v45 = a1;
  v11 = *a3;
  v50 = *a2;
  v51 = v11;
  v12 = *a5;
  v52 = *a4;
  v53 = v12;
  v54 = *a6;
  v68 = *(_QWORD *)(a11 - 8);
  v46 = *(_QWORD *)(v68 + 64);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v15;
  v16 = *(_QWORD *)(a10 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x1E0C80A78](v13);
  v48 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  v42 = v19;
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v18);
  v47 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v20 + 16))();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v43 = v16;
  v22((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v44, a10);
  v23 = v68;
  v24 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
  v41 = a11;
  v24(v15, v45, a11);
  v25 = (*(unsigned __int8 *)(v20 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v26 = (v21 + *(unsigned __int8 *)(v16 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v45 = (v17 + *(unsigned __int8 *)(v23 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v27 = (char *)swift_allocObject();
  v28 = v42;
  *((_QWORD *)v27 + 2) = v42;
  *((_QWORD *)v27 + 3) = a10;
  *((_QWORD *)v27 + 4) = a11;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v27 + 5) = v50;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v27 + 6) = v51;
  v52 = *(_QWORD *)(v52 + 80);
  *((_QWORD *)v27 + 7) = v52;
  v53 = *(_QWORD *)(v53 + 80);
  *((_QWORD *)v27 + 8) = v53;
  v29 = v55;
  v54 = *(_QWORD *)(v54 + 80);
  *((_QWORD *)v27 + 9) = v54;
  *((_QWORD *)v27 + 10) = v29;
  v30 = v57;
  *((_QWORD *)v27 + 11) = v56;
  *((_QWORD *)v27 + 12) = v30;
  *((_QWORD *)v27 + 13) = v58;
  v31 = *(void (**)(char *, char *))(v20 + 32);
  v32 = v28;
  v31(&v27[v25], v47);
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v27[v26], v48, a10);
  v33 = v41;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v27[v45], v49, v41);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v60 = v32;
  v61 = a10;
  v34 = v50;
  v62 = v33;
  v63 = v50;
  v64 = v51;
  v65 = v52;
  v66 = v53;
  v67 = v54;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v36 = (void *)sub_190AC06B8(v34, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v38 = v37;
  swift_release();

  return v38;
}

uint64_t sub_190BA78DC(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  void (*v36)(char *, char *);
  uint64_t v37;
  uint64_t v38;
  uint64_t TupleTypeMetadata;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;

  v51 = a8;
  v47 = a7;
  v59 = a3;
  v60 = a5;
  v74 = a4;
  v61 = a2;
  v50 = a1;
  v64 = a12;
  v12 = *a3;
  v55 = *a2;
  v56 = v12;
  v13 = *a5;
  v57 = *a4;
  v58 = v13;
  v63 = *(_QWORD *)(a12 - 8);
  v54 = *(_QWORD *)(v63 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v65 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *(_QWORD *)(a11 - 8);
  v48 = *(_QWORD *)(v62 + 64);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v18;
  v19 = *(_QWORD *)(a10 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x1E0C80A78](v16);
  v52 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v21);
  v49 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v23 + 16))();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v45 = v19;
  v25((char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v47, a10);
  v26 = v62;
  (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v18, v51, a11);
  v28 = v63;
  v27 = v64;
  (*(void (**)(char *, unint64_t, uint64_t))(v63 + 16))(v65, v50, v64);
  v50 = (*(unsigned __int8 *)(v23 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v29 = (v24 + *(unsigned __int8 *)(v19 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v30 = (v20 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v51 = (v48 + *(unsigned __int8 *)(v28 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v31 = (char *)swift_allocObject();
  v32 = v46;
  *((_QWORD *)v31 + 2) = v46;
  *((_QWORD *)v31 + 3) = a10;
  *((_QWORD *)v31 + 4) = a11;
  *((_QWORD *)v31 + 5) = v27;
  v33 = *(_QWORD *)(v55 + 80);
  *((_QWORD *)v31 + 6) = v33;
  v56 = *(_QWORD *)(v56 + 80);
  *((_QWORD *)v31 + 7) = v56;
  v57 = *(_QWORD *)(v57 + 80);
  *((_QWORD *)v31 + 8) = v57;
  v34 = v59;
  v58 = *(_QWORD *)(v58 + 80);
  *((_QWORD *)v31 + 9) = v58;
  *((_QWORD *)v31 + 10) = v34;
  v35 = v60;
  *((_QWORD *)v31 + 11) = v74;
  *((_QWORD *)v31 + 12) = v35;
  v36 = *(void (**)(char *, char *))(v23 + 32);
  v37 = v32;
  v36(&v31[v50], v49);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v31[v29], v52, a10);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v31[v30], v53, a11);
  v38 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v31[v51], v65, v64);
  swift_retain();
  swift_retain();
  swift_retain();
  v66 = v37;
  v67 = a10;
  v68 = a11;
  v69 = v38;
  v70 = v33;
  v71 = v56;
  v72 = v57;
  v73 = v58;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v40 = (void *)sub_190AC06B8(v33, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v42 = v41;
  swift_release();

  return v42;
}

uint64_t sub_190BA7C9C(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t TupleTypeMetadata;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;

  v62 = a8;
  v57 = a7;
  v56 = a6;
  v68 = a3;
  v69 = a4;
  v70 = a2;
  v63 = a1;
  v53 = a12;
  v74 = a13;
  v13 = *a3;
  v65 = *a2;
  v66 = v13;
  v67 = *a4;
  v73 = *(_QWORD *)(a13 - 8);
  v64 = *(_QWORD *)(v73 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v84 = (char *)&v48 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = *(_QWORD *)(v15 - 8);
  v61 = *(_QWORD *)(v72 + 64);
  v16 = MEMORY[0x1E0C80A78](v14);
  v75 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = *(_QWORD *)(a11 - 8);
  v51 = a11;
  v55 = *(_QWORD *)(v71 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v20;
  v21 = *(_QWORD *)(a10 - 8);
  v52 = a10;
  v22 = *(_QWORD *)(v21 + 64);
  v23 = MEMORY[0x1E0C80A78](v18);
  v59 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  MEMORY[0x1E0C80A78](v23);
  v58 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(void (**)(void))(v25 + 16);
  v49 = v25;
  v27();
  v28 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
  v50 = v21;
  v28((char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v56, a10);
  v29 = v71;
  (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v20, v57, a11);
  v30 = v72;
  v31 = v53;
  (*(void (**)(char *, unint64_t, uint64_t))(v72 + 16))(v75, v62, v53);
  v33 = v73;
  v32 = v74;
  (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v84, v63, v74);
  v34 = (*(unsigned __int8 *)(v25 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v56 = (v26 + *(unsigned __int8 *)(v21 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v57 = (v22 + *(unsigned __int8 *)(v29 + 80) + v56) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v62 = (v55 + *(unsigned __int8 *)(v30 + 80) + v57) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v63 = (v61 + *(unsigned __int8 *)(v33 + 80) + v62) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v35 = (char *)swift_allocObject();
  v36 = v54;
  v37 = v52;
  *((_QWORD *)v35 + 2) = v54;
  *((_QWORD *)v35 + 3) = v37;
  v38 = v51;
  *((_QWORD *)v35 + 4) = v51;
  *((_QWORD *)v35 + 5) = v31;
  *((_QWORD *)v35 + 6) = v32;
  v39 = *(_QWORD *)(v65 + 80);
  *((_QWORD *)v35 + 7) = v39;
  v66 = *(_QWORD *)(v66 + 80);
  *((_QWORD *)v35 + 8) = v66;
  v40 = v68;
  v67 = *(_QWORD *)(v67 + 80);
  *((_QWORD *)v35 + 9) = v67;
  *((_QWORD *)v35 + 10) = v40;
  *((_QWORD *)v35 + 11) = v69;
  v41 = v36;
  (*(void (**)(char *, char *))(v49 + 32))(&v35[v34], v58);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v35[v56], v59, v37);
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v35[v57], v60, v38);
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v35[v62], v75, v31);
  v42 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v35[v63], v84, v74);
  swift_retain();
  swift_retain();
  v76 = v41;
  v77 = v37;
  v78 = v38;
  v79 = v31;
  v80 = v42;
  v81 = v39;
  v82 = v66;
  v83 = v67;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v44 = (void *)sub_190AC06B8(v39, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v46 = v45;
  swift_release();

  return v46;
}

uint64_t sub_190BA812C(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;

  v78 = a8;
  v77 = a7;
  v71 = a6;
  v70 = a5;
  v84 = a3;
  v85 = a2;
  v79 = a1;
  v91 = a14;
  v92 = a12;
  v14 = *a3;
  v82 = *a2;
  v83 = v14;
  v15 = *(_QWORD *)(a14 - 8);
  v89 = a13;
  v90 = v15;
  v81 = *(_QWORD *)(v15 + 64);
  v16 = MEMORY[0x1E0C80A78](v81);
  v102 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = *(_QWORD *)(v17 - 8);
  v80 = *(_QWORD *)(v88 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = *(_QWORD *)(v20 - 8);
  v75 = *(_QWORD *)(v87 + 64);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v23;
  v86 = *(_QWORD *)(a11 - 8);
  v65 = a11;
  v69 = *(_QWORD *)(v86 + 64);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v26;
  v27 = *(_QWORD *)(a10 - 8);
  v67 = a10;
  v66 = *(_QWORD *)(v27 + 64);
  v28 = MEMORY[0x1E0C80A78](v24);
  v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v30;
  v68 = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 64);
  MEMORY[0x1E0C80A78](v28);
  v72 = (char *)&v62 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(void (**)(void))(v32 + 16);
  v63 = v32;
  v34();
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v64 = v27;
  v35(v30, v70, a10);
  v36 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v26, v71, a11);
  v37 = v87;
  (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v23, v77, v92);
  v38 = v88;
  v39 = v89;
  (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v93, v78, v89);
  v40 = v90;
  v41 = v91;
  (*(void (**)(char *, unint64_t, uint64_t))(v90 + 16))(v102, v79, v91);
  v42 = *(unsigned __int8 *)(v27 + 80);
  v43 = (*(unsigned __int8 *)(v32 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v44 = (v33 + v42 + v43) & ~v42;
  v77 = (v66 + *(unsigned __int8 *)(v36 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v78 = (v69 + *(unsigned __int8 *)(v37 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v79 = (v75 + *(unsigned __int8 *)(v38 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v80 = (v80 + *(unsigned __int8 *)(v40 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v45 = (char *)swift_allocObject();
  v46 = v68;
  v47 = v67;
  *((_QWORD *)v45 + 2) = v68;
  *((_QWORD *)v45 + 3) = v47;
  v48 = v65;
  v49 = v92;
  *((_QWORD *)v45 + 4) = v65;
  *((_QWORD *)v45 + 5) = v49;
  *((_QWORD *)v45 + 6) = v39;
  *((_QWORD *)v45 + 7) = v41;
  v50 = *(_QWORD *)(v82 + 80);
  *((_QWORD *)v45 + 8) = v50;
  v51 = v84;
  v83 = *(_QWORD *)(v83 + 80);
  *((_QWORD *)v45 + 9) = v83;
  *((_QWORD *)v45 + 10) = v51;
  v52 = v46;
  (*(void (**)(char *, char *))(v63 + 32))(&v45[v43], v72);
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v45[v44], v73, v47);
  v53 = v48;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v45[v77], v74, v48);
  v54 = v49;
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(&v45[v78], v76, v49);
  v55 = v89;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v45[v79], v93, v89);
  v56 = v91;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(&v45[v80], v102, v91);
  swift_retain();
  v94 = v52;
  v95 = v47;
  v96 = v53;
  v97 = v54;
  v98 = v55;
  v99 = v56;
  v100 = v50;
  v101 = v83;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v58 = (void *)sub_190AC06B8(v50, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v60 = v59;
  swift_release();

  return v60;
}

uint64_t sub_190BA8640(unint64_t a1, _QWORD *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v79 = a8;
  v77 = a7;
  v76 = a6;
  v64 = a5;
  v71 = a4;
  v84 = a2;
  v80 = a1;
  v94 = a13;
  v88 = a14;
  v92 = a15;
  v83 = *a2;
  v91 = *(_QWORD *)(a15 - 8);
  v82 = *(_QWORD *)(v91 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v104 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = *(_QWORD *)(v17 - 8);
  v81 = *(_QWORD *)(v87 + 64);
  v18 = MEMORY[0x1E0C80A78](v15);
  v95 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = *(_QWORD *)(v20 - 8);
  v78 = *(_QWORD *)(v86 + 64);
  v21 = MEMORY[0x1E0C80A78](v18);
  v93 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = *(_QWORD *)(a12 - 8);
  v65 = a12;
  v72 = *(_QWORD *)(v85 + 64);
  v23 = MEMORY[0x1E0C80A78](v21);
  v90 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(a11 - 8);
  v67 = a11;
  v69 = *(_QWORD *)(v25 + 64);
  v26 = v25;
  v27 = MEMORY[0x1E0C80A78](v23);
  v29 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v29;
  v30 = *(_QWORD *)(a10 - 8);
  v68 = a10;
  v66 = *(_QWORD *)(v30 + 64);
  v31 = MEMORY[0x1E0C80A78](v27);
  v33 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v33;
  v70 = v34;
  v35 = *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64);
  v89 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v31);
  v73 = (char *)&v62 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v36 + 16))();
  v37 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
  v62 = v30;
  v37(v33, v71, a10);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v39 = v26;
  v63 = v26;
  v38(v29, v64, a11);
  v40 = v85;
  (*(void (**)(char *, unint64_t, uint64_t))(v85 + 16))(v90, v76, a12);
  v41 = v86;
  (*(void (**)(char *, unint64_t, uint64_t))(v86 + 16))(v93, v77, v94);
  v43 = v87;
  v42 = v88;
  (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v95, v79, v88);
  v44 = v91;
  (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v104, v80, v92);
  v45 = (*(unsigned __int8 *)(v89 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v71 = (v35 + *(unsigned __int8 *)(v30 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v76 = (v66 + *(unsigned __int8 *)(v39 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v77 = (v69 + *(unsigned __int8 *)(v40 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v79 = (v72 + *(unsigned __int8 *)(v41 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v80 = (v78 + *(unsigned __int8 *)(v43 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v81 = (v81 + *(unsigned __int8 *)(v44 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v46 = (char *)swift_allocObject();
  v47 = v70;
  v48 = v68;
  *((_QWORD *)v46 + 2) = v70;
  *((_QWORD *)v46 + 3) = v48;
  v49 = v67;
  v50 = v65;
  *((_QWORD *)v46 + 4) = v67;
  *((_QWORD *)v46 + 5) = v50;
  v51 = v94;
  *((_QWORD *)v46 + 6) = v94;
  *((_QWORD *)v46 + 7) = v42;
  v52 = v92;
  *((_QWORD *)v46 + 8) = v92;
  v53 = *(_QWORD *)(v83 + 80);
  *((_QWORD *)v46 + 9) = v53;
  v54 = v47;
  (*(void (**)(char *, char *))(v89 + 32))(&v46[v45], v73);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v46[v71], v74, v48);
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v46[v76], v75, v49);
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(&v46[v77], v90, v50);
  v55 = v51;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v46[v79], v93, v51);
  v56 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(&v46[v80], v95, v88);
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(&v46[v81], v104, v52);
  v96 = v54;
  v97 = v48;
  v98 = v49;
  v99 = v50;
  v100 = v55;
  v101 = v56;
  v102 = v52;
  v103 = v53;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v58 = (void *)sub_190AC06B8(v53, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v60 = v59;
  swift_release();

  return v60;
}

uint64_t sub_190BA8C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int *TupleTypeMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v28;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v19 = a9 + TupleTypeMetadata[12];
  v20 = a9 + TupleTypeMetadata[16];
  v22 = a9 + TupleTypeMetadata[20];
  v23 = a9 + TupleTypeMetadata[24];
  v24 = a9 + TupleTypeMetadata[28];
  v26 = a9 + TupleTypeMetadata[32];
  v28 = a9 + TupleTypeMetadata[36];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 16))(a9, a2, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 16))(v19, a3, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 16))(v20, a4, a12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a13 - 8) + 16))(v22, a5, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 16))(v23, a6, a14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 16))(v24, a7, a15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 16))(v26, a8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a17 - 8) + 16))(v28, a1);
}

_QWORD *combine<A, B, C, D, E, F, G, H, I>(_:_:_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  _QWORD *v29;

  OUTLINED_FUNCTION_83_3();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v29 = v23;
  v24 = *v23;
  v25 = (_QWORD *)OUTLINED_FUNCTION_24();
  v25[2] = *(_QWORD *)(v24 + 80);
  v25[3] = v22;
  v25[4] = v20;
  v25[5] = v18;
  v25[6] = v16;
  v25[7] = v14;
  v25[8] = v12;
  v25[9] = v10;
  v25[10] = a9;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_66_6();
  v26 = OUTLINED_FUNCTION_46_10();
  v27 = (void *)OUTLINED_FUNCTION_94_3(v26);
  OUTLINED_FUNCTION_166();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  return v29;
}

uint64_t sub_190BA8F14(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, _QWORD *a8, _QWORD *a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t TupleTypeMetadata;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v43 = a2;
  v37 = a3;
  v38 = a8;
  v53 = a9;
  v14 = *a2;
  v41 = *a3;
  v42 = v14;
  v15 = *a4;
  v39 = *a5;
  v40 = v15;
  v16 = *a6;
  v35 = *a7;
  v36 = v16;
  v17 = *a8;
  v33 = *a9;
  v34 = v17;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](a1);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, a10);
  v32 = (*(unsigned __int8 *)(v18 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a10;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v22 + 3) = v42;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v22 + 4) = v41;
  v40 = *(_QWORD *)(v40 + 80);
  *((_QWORD *)v22 + 5) = v40;
  v39 = *(_QWORD *)(v39 + 80);
  *((_QWORD *)v22 + 6) = v39;
  v23 = v37;
  v36 = *(_QWORD *)(v36 + 80);
  *((_QWORD *)v22 + 7) = v36;
  v35 = *(_QWORD *)(v35 + 80);
  *((_QWORD *)v22 + 8) = v35;
  v34 = *(_QWORD *)(v34 + 80);
  *((_QWORD *)v22 + 9) = v34;
  v33 = *(_QWORD *)(v33 + 80);
  *((_QWORD *)v22 + 10) = v33;
  *((_QWORD *)v22 + 11) = v23;
  *((_QWORD *)v22 + 12) = a4;
  *((_QWORD *)v22 + 13) = a5;
  *((_QWORD *)v22 + 14) = a6;
  *((_QWORD *)v22 + 15) = a7;
  v24 = v53;
  *((_QWORD *)v22 + 16) = v38;
  *((_QWORD *)v22 + 17) = v24;
  (*(void (**)(char *, char *))(v18 + 32))(&v22[v32], v20);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v25 = v42;
  v44 = a10;
  v45 = v42;
  v46 = v41;
  v47 = v40;
  v48 = v39;
  v49 = v36;
  v50 = v35;
  v51 = v34;
  v52 = v33;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v27 = (void *)sub_190AC06B8(v25, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v29 = v28;
  swift_release();

  return v29;
}

uint64_t sub_190BA9190()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  return swift_deallocObject();
}

void sub_190BA91CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_121_2();
  sub_190BA8F14(v1, v2, v3, v4, v5, v6, v7, v8, *(_QWORD **)(v0 + 80), v9);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BA91F0(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  unint64_t v21;
  unint64_t v22;
  char *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t TupleTypeMetadata;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v51 = a4;
  v48 = a6;
  v49 = a8;
  v61 = a7;
  v46 = a3;
  v47 = a5;
  v50 = a2;
  v39 = *a2;
  v40 = *a3;
  v12 = *a5;
  v41 = *a4;
  v42 = v12;
  v13 = *a7;
  v43 = *a6;
  v44 = v13;
  v45 = *a8;
  v14 = *(_QWORD *)(a11 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v38 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a10 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v19);
  v37 = v14;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v36 = a11;
  v20((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a11);
  v21 = (*(unsigned __int8 *)(v17 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v22 = (v18 + *(unsigned __int8 *)(v14 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = a10;
  *((_QWORD *)v23 + 3) = a11;
  v39 = *(_QWORD *)(v39 + 80);
  *((_QWORD *)v23 + 4) = v39;
  v40 = *(_QWORD *)(v40 + 80);
  *((_QWORD *)v23 + 5) = v40;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v23 + 6) = v41;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v23 + 7) = v42;
  v43 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v23 + 8) = v43;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v23 + 9) = v44;
  v24 = v46;
  v45 = *(_QWORD *)(v45 + 80);
  *((_QWORD *)v23 + 10) = v45;
  *((_QWORD *)v23 + 11) = v24;
  v26 = v47;
  v25 = v48;
  *((_QWORD *)v23 + 12) = v51;
  *((_QWORD *)v23 + 13) = v26;
  v27 = v61;
  *((_QWORD *)v23 + 14) = v25;
  *((_QWORD *)v23 + 15) = v27;
  *((_QWORD *)v23 + 16) = v49;
  (*(void (**)(char *, char *))(v17 + 32))(&v23[v21], v19);
  v28 = v36;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v23[v22], v38, v36);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v52 = a10;
  v53 = v28;
  v29 = v39;
  v54 = v39;
  v55 = v40;
  v56 = v41;
  v57 = v42;
  v58 = v43;
  v59 = v44;
  v60 = v45;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v31 = (void *)sub_190AC06B8(v29, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v33 = v32;
  swift_release();

  return v33;
}

uint64_t sub_190BA94FC(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t TupleTypeMetadata;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;

  v65 = a2;
  v63 = a6;
  v64 = a7;
  v61 = a3;
  v62 = a5;
  v76 = a4;
  v51 = a1;
  v50 = a9;
  v55 = *a2;
  v12 = *a4;
  v56 = *a3;
  v57 = v12;
  v13 = *a6;
  v58 = *a5;
  v59 = v13;
  v60 = *a7;
  v66 = *(_QWORD *)(a12 - 8);
  v14 = *(_QWORD *)(v66 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v54 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a11 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v49 = v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v53 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  v48 = v19;
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v18);
  v52 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v20 + 16))();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v46 = a11;
  v22((char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v50, a11);
  v23 = v66;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
  v47 = a12;
  v24((char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v51, a12);
  v25 = (*(unsigned __int8 *)(v20 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v26 = (v21 + *(unsigned __int8 *)(v16 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v27 = (v17 + *(unsigned __int8 *)(v23 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v28 = (_QWORD *)swift_allocObject();
  v29 = v48;
  v28[2] = v48;
  v28[3] = a11;
  v28[4] = a12;
  v55 = *(_QWORD *)(v55 + 80);
  v28[5] = v55;
  v56 = *(_QWORD *)(v56 + 80);
  v28[6] = v56;
  v57 = *(_QWORD *)(v57 + 80);
  v28[7] = v57;
  v58 = *(_QWORD *)(v58 + 80);
  v28[8] = v58;
  v59 = *(_QWORD *)(v59 + 80);
  v28[9] = v59;
  v30 = v61;
  v60 = *(_QWORD *)(v60 + 80);
  v28[10] = v60;
  v28[11] = v30;
  v31 = v62;
  v32 = v63;
  v28[12] = v76;
  v28[13] = v31;
  v33 = v64;
  v28[14] = v32;
  v28[15] = v33;
  v34 = (char *)v28 + v25;
  v35 = v29;
  (*(void (**)(char *, char *))(v20 + 32))(v34, v52);
  v36 = (char *)v28 + v26;
  v37 = v46;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v36, v53, v46);
  v38 = (char *)v28 + v27;
  v39 = v47;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v38, v54, v47);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v67 = v35;
  v68 = v37;
  v40 = v55;
  v69 = v39;
  v70 = v55;
  v71 = v56;
  v72 = v57;
  v73 = v58;
  v74 = v59;
  v75 = v60;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v42 = (void *)sub_190AC06B8(v40, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v44 = v43;
  swift_release();

  return v44;
}

uint64_t sub_190BA9890(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t TupleTypeMetadata;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;

  v53 = a8;
  v65 = a4;
  v66 = a6;
  v81 = a5;
  v64 = a3;
  v67 = a2;
  v54 = a1;
  v51 = a9;
  v70 = a13;
  v59 = *a2;
  v60 = *a3;
  v13 = *a5;
  v61 = *a4;
  v62 = v13;
  v63 = *a6;
  v69 = *(_QWORD *)(a13 - 8);
  v58 = *(_QWORD *)(v69 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v71 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = *(_QWORD *)(a12 - 8);
  v47 = a12;
  v52 = *(_QWORD *)(v68 + 64);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = v18;
  v19 = *(_QWORD *)(a11 - 8);
  v48 = a11;
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v21);
  v55 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v23 + 16))();
  v25 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
  v49 = v19;
  v25((char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v53, a11);
  v26 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v18, v51, a12);
  v28 = v69;
  v27 = v70;
  (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v71, v54, v70);
  v29 = (*(unsigned __int8 *)(v23 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v53 = (v24 + *(unsigned __int8 *)(v19 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v30 = (v20 + *(unsigned __int8 *)(v26 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v54 = (v52 + *(unsigned __int8 *)(v28 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v31 = (char *)swift_allocObject();
  v32 = v50;
  v33 = v48;
  *((_QWORD *)v31 + 2) = v50;
  *((_QWORD *)v31 + 3) = v33;
  v34 = v47;
  *((_QWORD *)v31 + 4) = v47;
  *((_QWORD *)v31 + 5) = v27;
  v59 = *(_QWORD *)(v59 + 80);
  *((_QWORD *)v31 + 6) = v59;
  v60 = *(_QWORD *)(v60 + 80);
  *((_QWORD *)v31 + 7) = v60;
  v61 = *(_QWORD *)(v61 + 80);
  *((_QWORD *)v31 + 8) = v61;
  v62 = *(_QWORD *)(v62 + 80);
  *((_QWORD *)v31 + 9) = v62;
  v35 = v64;
  v63 = *(_QWORD *)(v63 + 80);
  *((_QWORD *)v31 + 10) = v63;
  *((_QWORD *)v31 + 11) = v35;
  v36 = v66;
  v37 = v81;
  *((_QWORD *)v31 + 12) = v65;
  *((_QWORD *)v31 + 13) = v37;
  *((_QWORD *)v31 + 14) = v36;
  v38 = *(void (**)(char *, char *))(v23 + 32);
  v39 = v32;
  v38(&v31[v29], v55);
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v31[v53], v56, v33);
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v31[v30], v57, v34);
  v40 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v31[v54], v71, v70);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v72 = v39;
  v73 = v33;
  v74 = v34;
  v75 = v40;
  v41 = v59;
  v76 = v59;
  v77 = v60;
  v78 = v61;
  v79 = v62;
  v80 = v63;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v43 = (void *)sub_190AC06B8(v41, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v45 = v44;
  swift_release();

  return v45;
}

uint64_t sub_190BA9CD4(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, uint64_t a7, unint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  void (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t TupleTypeMetadata;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;

  v61 = a8;
  v59 = a7;
  v73 = a4;
  v74 = a5;
  v72 = a3;
  v75 = a2;
  v66 = a1;
  v60 = a9;
  v76 = a12;
  v57 = a13;
  v80 = a14;
  v68 = *a2;
  v69 = *a3;
  v70 = *a4;
  v71 = *a5;
  v79 = *(_QWORD *)(a14 - 8);
  v67 = *(_QWORD *)(v79 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v91 = (char *)&v53 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)(v15 - 8);
  v65 = *(_QWORD *)(v77 + 64);
  v16 = MEMORY[0x1E0C80A78](v14);
  v81 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v18 - 8);
  v58 = *(_QWORD *)(v19 + 64);
  v20 = v19;
  v21 = MEMORY[0x1E0C80A78](v16);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = v23;
  v24 = *(_QWORD *)(a11 - 8);
  v56 = a11;
  v25 = *(_QWORD *)(v24 + 64);
  v26 = MEMORY[0x1E0C80A78](v21);
  v63 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  MEMORY[0x1E0C80A78](v26);
  v62 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(void (**)(void))(v28 + 16);
  v53 = v28;
  v30();
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v54 = v24;
  v31((char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v59, a11);
  v32 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
  v33 = v20;
  v55 = v20;
  v32(v23, v61, v76);
  v34 = v77;
  v35 = v57;
  (*(void (**)(char *, unint64_t))(v77 + 16))(v81, v60);
  v36 = v79;
  v37 = v80;
  (*(void (**)(char *, unint64_t))(v79 + 16))(v91, v66);
  v38 = (*(unsigned __int8 *)(v28 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v39 = (v29 + *(unsigned __int8 *)(v24 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v60 = (v25 + *(unsigned __int8 *)(v33 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v61 = (v58 + *(unsigned __int8 *)(v34 + 80) + v60) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v66 = (v65 + *(unsigned __int8 *)(v36 + 80) + v61) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v40 = (char *)swift_allocObject();
  v41 = v56;
  *((_QWORD *)v40 + 2) = v78;
  *((_QWORD *)v40 + 3) = v41;
  v42 = v76;
  *((_QWORD *)v40 + 4) = v76;
  *((_QWORD *)v40 + 5) = v35;
  v43 = v35;
  *((_QWORD *)v40 + 6) = v37;
  v68 = *(_QWORD *)(v68 + 80);
  *((_QWORD *)v40 + 7) = v68;
  v69 = *(_QWORD *)(v69 + 80);
  *((_QWORD *)v40 + 8) = v69;
  v70 = *(_QWORD *)(v70 + 80);
  *((_QWORD *)v40 + 9) = v70;
  v44 = v72;
  v71 = *(_QWORD *)(v71 + 80);
  *((_QWORD *)v40 + 10) = v71;
  *((_QWORD *)v40 + 11) = v44;
  v45 = v74;
  *((_QWORD *)v40 + 12) = v73;
  *((_QWORD *)v40 + 13) = v45;
  (*(void (**)(char *, char *))(v53 + 32))(&v40[v38], v62);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v40[v39], v63, v41);
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v40[v60], v64, v42);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v40[v61], v81, v43);
  v46 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v40[v66], v91, v80);
  swift_retain();
  swift_retain();
  swift_retain();
  v82 = v78;
  v83 = v41;
  v84 = v42;
  v85 = v43;
  v47 = v68;
  v86 = v46;
  v87 = v68;
  v88 = v69;
  v89 = v70;
  v90 = v71;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v49 = (void *)sub_190AC06B8(v47, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v51 = v50;
  swift_release();

  return v51;
}

uint64_t sub_190BAA1C8(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t TupleTypeMetadata;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v68 = a8;
  v62 = a7;
  v61 = a6;
  v76 = a4;
  v75 = a3;
  v77 = a2;
  v69 = a1;
  v67 = a9;
  v79 = a13;
  v83 = a14;
  v97 = a15;
  v72 = *a2;
  v73 = *a3;
  v74 = *a4;
  v84 = *(_QWORD *)(a15 - 8);
  v71 = *(_QWORD *)(v84 + 64);
  v15 = MEMORY[0x1E0C80A78](v71);
  v87 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = *(_QWORD *)(v16 - 8);
  v70 = *(_QWORD *)(v82 + 64);
  v17 = MEMORY[0x1E0C80A78](v15);
  v86 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = *(_QWORD *)(v19 - 8);
  v63 = *(_QWORD *)(v80 + 64);
  v20 = MEMORY[0x1E0C80A78](v17);
  v85 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = *(_QWORD *)(a12 - 8);
  v58 = a12;
  v60 = *(_QWORD *)(v78 + 64);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v24;
  v25 = *(_QWORD *)(a11 - 8);
  v59 = a11;
  v26 = *(_QWORD *)(v25 + 64);
  v27 = MEMORY[0x1E0C80A78](v22);
  v65 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v27);
  v64 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(void (**)(void))(v29 + 16);
  v56 = v29;
  v31();
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v57 = v25;
  v32((char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v61, a11);
  v33 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v24, v62, a12);
  v34 = v80;
  (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v85, v68, v79);
  v35 = v82;
  v36 = v83;
  (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v86, v67, v83);
  v37 = v84;
  (*(void (**)(char *, unint64_t, uint64_t))(v84 + 16))(v87, v69, v97);
  v38 = (*(unsigned __int8 *)(v29 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v39 = (v30 + *(unsigned __int8 *)(v25 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v67 = (v26 + *(unsigned __int8 *)(v33 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v68 = (v60 + *(unsigned __int8 *)(v34 + 80) + v67) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v69 = (v63 + *(unsigned __int8 *)(v35 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v70 = (v70 + *(unsigned __int8 *)(v37 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v40 = (char *)swift_allocObject();
  v41 = v59;
  *((_QWORD *)v40 + 2) = v81;
  *((_QWORD *)v40 + 3) = v41;
  v42 = v58;
  v43 = v79;
  *((_QWORD *)v40 + 4) = v58;
  *((_QWORD *)v40 + 5) = v43;
  v44 = v97;
  *((_QWORD *)v40 + 6) = v36;
  *((_QWORD *)v40 + 7) = v44;
  v45 = *(_QWORD *)(v72 + 80);
  *((_QWORD *)v40 + 8) = v45;
  v73 = *(_QWORD *)(v73 + 80);
  *((_QWORD *)v40 + 9) = v73;
  v74 = *(_QWORD *)(v74 + 80);
  v46 = v75;
  *((_QWORD *)v40 + 10) = v74;
  *((_QWORD *)v40 + 11) = v46;
  *((_QWORD *)v40 + 12) = v76;
  (*(void (**)(char *, char *))(v56 + 32))(&v40[v38], v64);
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v40[v39], v65, v41);
  v47 = v42;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(&v40[v67], v66, v42);
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v40[v68], v85, v43);
  v48 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v40[v69], v86, v83);
  v49 = v97;
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v40[v70], v87, v97);
  swift_retain();
  swift_retain();
  v88 = v81;
  v89 = v41;
  v90 = v47;
  v91 = v43;
  v92 = v48;
  v93 = v49;
  v94 = v45;
  v95 = v73;
  v96 = v74;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v51 = (void *)sub_190AC06B8(v45, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v53 = v52;
  swift_release();

  return v53;
}

uint64_t sub_190BAA73C(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v79 = a8;
  v76 = a7;
  v72 = a6;
  v69 = a5;
  v85 = a3;
  v86 = a2;
  v80 = a1;
  v78 = a9;
  v94 = a13;
  v96 = a14;
  v70 = a15;
  v108 = a16;
  v83 = *a2;
  v84 = *a3;
  v93 = *(_QWORD *)(a16 - 8);
  v82 = *(_QWORD *)(v93 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v98 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = *(_QWORD *)(v18 - 8);
  v81 = *(_QWORD *)(v91 + 64);
  v19 = MEMORY[0x1E0C80A78](v16);
  v97 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = *(_QWORD *)(v21 - 8);
  v77 = *(_QWORD *)(v88 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v95 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = *(_QWORD *)(v24 - 8);
  v71 = *(_QWORD *)(v87 + 64);
  v25 = MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a12 - 8);
  v67 = a12;
  v68 = *(_QWORD *)(v27 + 64);
  v28 = v27;
  v29 = MEMORY[0x1E0C80A78](v25);
  v31 = (char *)&v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v31;
  v32 = *(_QWORD *)(a11 - 8);
  v89 = a11;
  v66 = *(_QWORD *)(v32 + 64);
  v33 = MEMORY[0x1E0C80A78](v29);
  v35 = (char *)&v62 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v35;
  v90 = a10;
  v36 = *(_QWORD *)(a10 - 8);
  v37 = *(_QWORD *)(v36 + 64);
  MEMORY[0x1E0C80A78](v33);
  v73 = (char *)&v62 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(void (**)(void))(v36 + 16);
  v63 = v36;
  v38();
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v64 = v32;
  v39(v35, v69, a11);
  v40 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
  v41 = v28;
  v65 = v28;
  v40(v31, v72, a12);
  v42 = v87;
  (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v92, v76, v94);
  v43 = v88;
  (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v95, v79, v96);
  v44 = v91;
  v45 = v70;
  (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v97, v78, v70);
  v46 = v93;
  (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v98, v80, v108);
  v72 = (*(unsigned __int8 *)(v36 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v76 = (v37 + *(unsigned __int8 *)(v32 + 80) + v72) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v78 = (v66 + *(unsigned __int8 *)(v41 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v47 = (v68 + *(unsigned __int8 *)(v42 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v79 = (v71 + *(unsigned __int8 *)(v43 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v80 = (v77 + *(unsigned __int8 *)(v44 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v81 = (v81 + *(unsigned __int8 *)(v46 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v48 = (char *)swift_allocObject();
  v49 = v89;
  *((_QWORD *)v48 + 2) = v90;
  *((_QWORD *)v48 + 3) = v49;
  v50 = v67;
  v51 = v94;
  *((_QWORD *)v48 + 4) = v67;
  *((_QWORD *)v48 + 5) = v51;
  v52 = v96;
  *((_QWORD *)v48 + 6) = v96;
  *((_QWORD *)v48 + 7) = v45;
  *((_QWORD *)v48 + 8) = v108;
  v53 = *(_QWORD *)(v83 + 80);
  *((_QWORD *)v48 + 9) = v53;
  v84 = *(_QWORD *)(v84 + 80);
  v54 = v85;
  *((_QWORD *)v48 + 10) = v84;
  *((_QWORD *)v48 + 11) = v54;
  (*(void (**)(char *, char *))(v63 + 32))(&v48[v72], v73);
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v48[v76], v74, v49);
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v48[v78], v75, v50);
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(&v48[v47], v92, v51);
  v55 = v52;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v48[v79], v95, v52);
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(&v48[v80], v97, v45);
  v56 = v108;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(&v48[v81], v98, v108);
  swift_retain();
  v99 = v90;
  v100 = v89;
  v101 = v50;
  v102 = v51;
  v103 = v55;
  v104 = v45;
  v105 = v56;
  v106 = v53;
  v107 = v84;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v58 = (void *)sub_190AC06B8(v53, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v60 = v59;
  swift_release();

  return v60;
}

uint64_t sub_190BAAD5C(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  void (*v44)(char *, uint64_t, uint64_t);
  void (*v45)(char *, unint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t TupleTypeMetadata;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v86 = a8;
  v84 = a7;
  v82 = a6;
  v77 = a5;
  v75 = a4;
  v92 = a2;
  v88 = a1;
  v85 = a9;
  v103 = a14;
  v105 = a15;
  v99 = a16;
  v100 = a12;
  v117 = a17;
  v91 = *a2;
  v101 = *(_QWORD *)(a17 - 8);
  v90 = *(_QWORD *)(v101 + 64);
  v17 = MEMORY[0x1E0C80A78](a12);
  v107 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = *(_QWORD *)(v19 - 8);
  v89 = *(_QWORD *)(v98 + 64);
  v20 = MEMORY[0x1E0C80A78](v17);
  v106 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = *(_QWORD *)(v22 - 8);
  v87 = *(_QWORD *)(v95 + 64);
  v23 = MEMORY[0x1E0C80A78](v20);
  v104 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = *(_QWORD *)(v25 - 8);
  v83 = *(_QWORD *)(v94 + 64);
  v26 = MEMORY[0x1E0C80A78](v23);
  v102 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = *(_QWORD *)(a13 - 8);
  v73 = a13;
  v76 = *(_QWORD *)(v93 + 64);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = v30;
  v31 = *(_QWORD *)(v28 - 8);
  v74 = *(_QWORD *)(v31 + 64);
  v32 = v31;
  v33 = MEMORY[0x1E0C80A78](v28);
  v35 = (char *)&v69 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v35;
  v96 = a11;
  v36 = *(_QWORD *)(a11 - 8);
  v72 = *(_QWORD *)(v36 + 64);
  v37 = MEMORY[0x1E0C80A78](v33);
  v39 = (char *)&v69 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v39;
  v97 = v40;
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v37);
  v78 = (char *)&v69 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(void (**)(void))(v41 + 16);
  v69 = v41;
  v43();
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  v70 = v36;
  v44(v39, v75, a11);
  v45 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
  v46 = v32;
  v71 = v32;
  v45(v35, v77, v100);
  v47 = v93;
  (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v30, v82, a13);
  v48 = v94;
  (*(void (**)(char *, unint64_t, uint64_t))(v94 + 16))(v102, v84, v103);
  v49 = v95;
  (*(void (**)(char *, unint64_t, uint64_t))(v95 + 16))(v104, v86, v105);
  v50 = v98;
  (*(void (**)(char *, unint64_t, uint64_t))(v98 + 16))(v106, v85, v99);
  v51 = v101;
  (*(void (**)(char *, unint64_t, uint64_t))(v101 + 16))(v107, v88, v117);
  v77 = (*(unsigned __int8 *)(v41 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v82 = (v42 + *(unsigned __int8 *)(v36 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v84 = (v72 + *(unsigned __int8 *)(v46 + 80) + v82) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v52 = (v74 + *(unsigned __int8 *)(v47 + 80) + v84) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v85 = (v76 + *(unsigned __int8 *)(v48 + 80) + v52) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v86 = (v83 + *(unsigned __int8 *)(v49 + 80) + v85) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v88 = (v87 + *(unsigned __int8 *)(v50 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v89 = (v89 + *(unsigned __int8 *)(v51 + 80) + v88) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v53 = (char *)swift_allocObject();
  v54 = v96;
  *((_QWORD *)v53 + 2) = v97;
  *((_QWORD *)v53 + 3) = v54;
  v55 = v99;
  v56 = v100;
  v57 = v73;
  *((_QWORD *)v53 + 4) = v100;
  *((_QWORD *)v53 + 5) = v57;
  v58 = v103;
  v59 = v105;
  *((_QWORD *)v53 + 6) = v103;
  *((_QWORD *)v53 + 7) = v59;
  v60 = v117;
  *((_QWORD *)v53 + 8) = v55;
  *((_QWORD *)v53 + 9) = v60;
  v61 = *(_QWORD *)(v91 + 80);
  *((_QWORD *)v53 + 10) = v61;
  (*(void (**)(char *, char *))(v69 + 32))(&v53[v77], v78);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v53[v82], v79, v54);
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v53[v84], v80, v56);
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(&v53[v52], v81, v57);
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(&v53[v85], v102, v58);
  v62 = v59;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(&v53[v86], v104, v59);
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v53[v88], v106, v55);
  v63 = v117;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(&v53[v89], v107, v117);
  v108 = v97;
  v109 = v96;
  v110 = v56;
  v111 = v57;
  v112 = v58;
  v113 = v62;
  v114 = v55;
  v115 = v63;
  v116 = v61;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v65 = (void *)sub_190AC06B8(v61, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v67 = v66;
  swift_release();

  return v67;
}

uint64_t sub_190BAB3F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int *TupleTypeMetadata;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v21 = a9 + TupleTypeMetadata[12];
  v22 = a9 + TupleTypeMetadata[16];
  v24 = a9 + TupleTypeMetadata[20];
  v25 = a9 + TupleTypeMetadata[24];
  v26 = a9 + TupleTypeMetadata[28];
  v28 = a9 + TupleTypeMetadata[32];
  v29 = a9 + TupleTypeMetadata[36];
  v31 = a9 + TupleTypeMetadata[40];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 16))(a9, a2, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 16))(v21, a3, a12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a13 - 8) + 16))(v22, a4, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 16))(v24, a5, a14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 16))(v25, a6, a15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 16))(v26, a7, a16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a17 - 8) + 16))(v28, a8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v29, a10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 16))(v31, a1);
}

_QWORD *combine<A, B, C, D, E, F, G, H, I, J>(_:_:_:_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  _QWORD *v30;

  OUTLINED_FUNCTION_117_2();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v30 = v24;
  v29 = *v24;
  OUTLINED_FUNCTION_154_0();
  OUTLINED_FUNCTION_153_0();
  v25 = (_QWORD *)OUTLINED_FUNCTION_24();
  v25[2] = *(_QWORD *)(v29 + 80);
  v25[3] = v23;
  v25[4] = v21;
  v25[5] = v19;
  v25[6] = v17;
  v25[7] = v15;
  v25[8] = v13;
  v25[9] = v11;
  v25[10] = a9;
  v25[11] = a10;
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_66_6();
  v26 = OUTLINED_FUNCTION_46_10();
  v27 = (void *)OUTLINED_FUNCTION_94_3(v26);
  OUTLINED_FUNCTION_166();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  return v30;
}

uint64_t sub_190BAB750(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t *a5, _QWORD *a6, uint64_t *a7, uint64_t *a8, _QWORD *a9, _QWORD *a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  v35 = a6;
  v34 = a4;
  v33 = a3;
  v44 = a2;
  v56 = a10;
  v45 = a9;
  v14 = *a2;
  v15 = *a3;
  v41 = *a4;
  v42 = v15;
  v16 = *a5;
  v39 = *a6;
  v40 = v16;
  v17 = *a7;
  v37 = *a8;
  v38 = v17;
  v36 = *a9;
  v32 = *a10;
  v18 = *(_QWORD *)(a11 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v20, a11);
  v31 = (*(unsigned __int8 *)(v18 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = a11;
  v43 = *(_QWORD *)(v14 + 80);
  *((_QWORD *)v21 + 3) = v43;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v21 + 4) = v42;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v21 + 5) = v41;
  v40 = *(_QWORD *)(v40 + 80);
  *((_QWORD *)v21 + 6) = v40;
  v39 = *(_QWORD *)(v39 + 80);
  *((_QWORD *)v21 + 7) = v39;
  v38 = *(_QWORD *)(v38 + 80);
  *((_QWORD *)v21 + 8) = v38;
  v37 = *(_QWORD *)(v37 + 80);
  *((_QWORD *)v21 + 9) = v37;
  v36 = *(_QWORD *)(v36 + 80);
  *((_QWORD *)v21 + 10) = v36;
  v32 = *(_QWORD *)(v32 + 80);
  v22 = v33;
  *((_QWORD *)v21 + 11) = v32;
  *((_QWORD *)v21 + 12) = v22;
  *((_QWORD *)v21 + 13) = v34;
  *((_QWORD *)v21 + 14) = a5;
  *((_QWORD *)v21 + 15) = v35;
  *((_QWORD *)v21 + 16) = a7;
  v23 = v45;
  *((_QWORD *)v21 + 17) = a8;
  *((_QWORD *)v21 + 18) = v23;
  *((_QWORD *)v21 + 19) = v56;
  (*(void (**)(char *, char *))(v18 + 32))(&v21[v31], (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v24 = v43;
  v46 = a11;
  v47 = v43;
  v48 = v42;
  v49 = v41;
  v50 = v40;
  v51 = v39;
  v52 = v38;
  v53 = v37;
  v54 = v36;
  v55 = v32;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v26 = (void *)sub_190AC06B8(v24, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v28 = v27;
  swift_release();

  return v28;
}

uint64_t sub_190BABA34()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  return swift_deallocObject();
}

void sub_190BABA74()
{
  __n128 v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;

  v0 = OUTLINED_FUNCTION_144_0();
  sub_190BAB750(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_u64[0], (_QWORD *)v0.n128_u64[1], v9);
  OUTLINED_FUNCTION_88();
}

uint64_t sub_190BABA98(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, _QWORD *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  unint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t TupleTypeMetadata;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v54 = a3;
  v50 = a7;
  v51 = a8;
  v65 = a6;
  v48 = a4;
  v49 = a5;
  v53 = a2;
  v52 = a9;
  v40 = *a2;
  v41 = *a3;
  v42 = *a4;
  v43 = *a5;
  v44 = *a6;
  v13 = *a8;
  v45 = *a7;
  v46 = v13;
  v47 = *a9;
  v14 = *(_QWORD *)(a12 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v39 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a11 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v19);
  v38 = v14;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v36 = a12;
  v20((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a12);
  v21 = (*(unsigned __int8 *)(v17 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v37 = (v18 + *(unsigned __int8 *)(v14 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a11;
  *((_QWORD *)v22 + 3) = a12;
  v40 = *(_QWORD *)(v40 + 80);
  *((_QWORD *)v22 + 4) = v40;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v22 + 5) = v41;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v22 + 6) = v42;
  v43 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v22 + 7) = v43;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v22 + 8) = v44;
  v45 = *(_QWORD *)(v45 + 80);
  *((_QWORD *)v22 + 9) = v45;
  v46 = *(_QWORD *)(v46 + 80);
  *((_QWORD *)v22 + 10) = v46;
  v23 = v48;
  v47 = *(_QWORD *)(v47 + 80);
  v24 = v54;
  *((_QWORD *)v22 + 11) = v47;
  *((_QWORD *)v22 + 12) = v24;
  v26 = v49;
  v25 = v50;
  *((_QWORD *)v22 + 13) = v23;
  *((_QWORD *)v22 + 14) = v26;
  *((_QWORD *)v22 + 15) = v65;
  *((_QWORD *)v22 + 16) = v25;
  v27 = v52;
  *((_QWORD *)v22 + 17) = v51;
  *((_QWORD *)v22 + 18) = v27;
  (*(void (**)(char *, char *))(v17 + 32))(&v22[v21], v19);
  v28 = v36;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v22[v37], v39, v36);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v55 = a11;
  v56 = v28;
  v29 = v40;
  v57 = v40;
  v58 = v41;
  v59 = v42;
  v60 = v43;
  v61 = v44;
  v62 = v45;
  v63 = v46;
  v64 = v47;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v31 = (void *)sub_190AC06B8(v29, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v33 = v32;
  swift_release();

  return v33;
}

uint64_t sub_190BABE14(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v59 = a2;
  v57 = a7;
  v58 = a8;
  v55 = a5;
  v56 = a6;
  v72 = a4;
  v54 = a3;
  v43 = a1;
  v42 = a10;
  v60 = a13;
  v47 = *a2;
  v48 = *a3;
  v49 = *a4;
  v50 = *a5;
  v51 = *a6;
  v13 = *a8;
  v52 = *a7;
  v53 = v13;
  v61 = *(_QWORD *)(a13 - 8);
  v14 = *(_QWORD *)(v61 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v46 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a12 - 8);
  v40 = a12;
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a11 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](v18);
  v44 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v19 + 16))();
  v21 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
  v41 = v16;
  v21((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v42, a12);
  v22 = v60;
  v23 = v61;
  (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))((char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v43, v60);
  v42 = (*(unsigned __int8 *)(v19 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v43 = (v20 + *(unsigned __int8 *)(v16 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v24 = (v17 + *(unsigned __int8 *)(v23 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = (char *)swift_allocObject();
  v26 = v40;
  *((_QWORD *)v25 + 2) = a11;
  *((_QWORD *)v25 + 3) = v26;
  *((_QWORD *)v25 + 4) = v22;
  v47 = *(_QWORD *)(v47 + 80);
  *((_QWORD *)v25 + 5) = v47;
  v48 = *(_QWORD *)(v48 + 80);
  *((_QWORD *)v25 + 6) = v48;
  v49 = *(_QWORD *)(v49 + 80);
  *((_QWORD *)v25 + 7) = v49;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v25 + 8) = v50;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v25 + 9) = v51;
  v52 = *(_QWORD *)(v52 + 80);
  *((_QWORD *)v25 + 10) = v52;
  v27 = v54;
  v53 = *(_QWORD *)(v53 + 80);
  *((_QWORD *)v25 + 11) = v53;
  *((_QWORD *)v25 + 12) = v27;
  v29 = v55;
  v28 = v56;
  *((_QWORD *)v25 + 13) = v72;
  *((_QWORD *)v25 + 14) = v29;
  v31 = v57;
  v30 = v58;
  *((_QWORD *)v25 + 15) = v28;
  *((_QWORD *)v25 + 16) = v31;
  *((_QWORD *)v25 + 17) = v30;
  (*(void (**)(char *, char *))(v19 + 32))(&v25[v42], v44);
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v25[v43], v45, v26);
  v32 = &v25[v24];
  v33 = v60;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v32, v46, v60);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v62 = a11;
  v63 = v26;
  v64 = v33;
  v34 = v47;
  v65 = v47;
  v66 = v48;
  v67 = v49;
  v68 = v50;
  v69 = v51;
  v70 = v52;
  v71 = v53;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v36 = (void *)sub_190AC06B8(v34, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v38 = v37;
  swift_release();

  return v38;
}

uint64_t sub_190BAC220(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t TupleTypeMetadata;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;

  v79 = a2;
  v77 = a6;
  v78 = a7;
  v95 = a5;
  v76 = a4;
  v84 = a3;
  v64 = a1;
  v63 = a10;
  v61 = a9;
  v80 = a13;
  v83 = a14;
  v70 = *a2;
  v71 = *a3;
  v72 = *a4;
  v73 = *a5;
  v74 = *a6;
  v75 = *a7;
  v82 = *(_QWORD *)(a14 - 8);
  v68 = *(_QWORD *)(v82 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v16;
  v81 = *(_QWORD *)(v17 - 8);
  v62 = *(_QWORD *)(v81 + 64);
  v18 = MEMORY[0x1E0C80A78](v14);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v20;
  v21 = *(_QWORD *)(a12 - 8);
  v58 = a12;
  v22 = *(_QWORD *)(v21 + 64);
  v23 = MEMORY[0x1E0C80A78](v18);
  v66 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  MEMORY[0x1E0C80A78](v23);
  v65 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v25 + 16))();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v60 = v21;
  v27((char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v61, a12);
  v28 = v81;
  v29 = v20;
  v30 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v29, v63, v80);
  v31 = v82;
  v32 = v16;
  v33 = v83;
  (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v32, v64, v83);
  v34 = (*(unsigned __int8 *)(v25 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v35 = (v26 + *(unsigned __int8 *)(v21 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v36 = (v22 + *(unsigned __int8 *)(v28 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v64 = (v62 + *(unsigned __int8 *)(v31 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v37 = (char *)swift_allocObject();
  v38 = v59;
  v39 = v58;
  *((_QWORD *)v37 + 2) = v59;
  *((_QWORD *)v37 + 3) = v39;
  *((_QWORD *)v37 + 4) = v30;
  *((_QWORD *)v37 + 5) = v33;
  v70 = *(_QWORD *)(v70 + 80);
  *((_QWORD *)v37 + 6) = v70;
  v71 = *(_QWORD *)(v71 + 80);
  *((_QWORD *)v37 + 7) = v71;
  v72 = *(_QWORD *)(v72 + 80);
  *((_QWORD *)v37 + 8) = v72;
  v73 = *(_QWORD *)(v73 + 80);
  *((_QWORD *)v37 + 9) = v73;
  v74 = *(_QWORD *)(v74 + 80);
  *((_QWORD *)v37 + 10) = v74;
  v40 = v76;
  v75 = *(_QWORD *)(v75 + 80);
  v41 = v84;
  *((_QWORD *)v37 + 11) = v75;
  *((_QWORD *)v37 + 12) = v41;
  v42 = v95;
  *((_QWORD *)v37 + 13) = v40;
  *((_QWORD *)v37 + 14) = v42;
  v43 = v78;
  *((_QWORD *)v37 + 15) = v77;
  *((_QWORD *)v37 + 16) = v43;
  v44 = &v37[v34];
  v45 = v38;
  (*(void (**)(char *, char *))(v25 + 32))(v44, v65);
  v46 = &v37[v35];
  v47 = v39;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v46, v66, v39);
  v48 = &v37[v36];
  v49 = v80;
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v48, v67, v80);
  v50 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v37[v64], v69, v83);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v85 = v45;
  v86 = v47;
  v87 = v49;
  v88 = v50;
  v51 = v70;
  v89 = v70;
  v90 = v71;
  v91 = v72;
  v92 = v73;
  v93 = v74;
  v94 = v75;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v53 = (void *)sub_190AC06B8(v51, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v55 = v54;
  swift_release();

  return v55;
}

uint64_t sub_190BAC6BC(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, uint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t TupleTypeMetadata;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;

  v54 = a8;
  v69 = a5;
  v70 = a6;
  v68 = a4;
  v67 = a3;
  v71 = a2;
  v60 = a1;
  v55 = a10;
  v53 = a9;
  v76 = a12;
  v74 = a15;
  v62 = *a2;
  v63 = *a3;
  v64 = *a4;
  v65 = *a5;
  v66 = *a6;
  v75 = *(_QWORD *)(a15 - 8);
  v61 = *(_QWORD *)(v75 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v88 = (char *)&v48 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = *(_QWORD *)(a14 - 8);
  v57 = *(_QWORD *)(v72 + 64);
  v16 = MEMORY[0x1E0C80A78](v15);
  v77 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a13 - 8);
  v49 = a13;
  v52 = *(_QWORD *)(v18 + 64);
  v19 = v18;
  v20 = MEMORY[0x1E0C80A78](v16);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v22;
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  v26 = MEMORY[0x1E0C80A78](v20);
  v58 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  MEMORY[0x1E0C80A78](v26);
  v56 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v28 + 16))();
  v30 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
  v50 = v24;
  v30((char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v76);
  v31 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
  v32 = v19;
  v51 = v19;
  v31(v22, v53, a13);
  v33 = v72;
  (*(void (**)(char *, unint64_t, uint64_t))(v72 + 16))(v77, v55, a14);
  v34 = v74;
  v35 = v75;
  (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v88, v60, v74);
  v48 = (*(unsigned __int8 *)(v28 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v53 = (v29 + *(unsigned __int8 *)(v24 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v54 = (v25 + *(unsigned __int8 *)(v32 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v55 = (v52 + *(unsigned __int8 *)(v33 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v60 = (v57 + *(unsigned __int8 *)(v35 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v36 = (char *)swift_allocObject();
  v37 = v76;
  *((_QWORD *)v36 + 2) = v73;
  *((_QWORD *)v36 + 3) = v37;
  v38 = v49;
  *((_QWORD *)v36 + 4) = v49;
  *((_QWORD *)v36 + 5) = a14;
  *((_QWORD *)v36 + 6) = v34;
  v62 = *(_QWORD *)(v62 + 80);
  *((_QWORD *)v36 + 7) = v62;
  v63 = *(_QWORD *)(v63 + 80);
  *((_QWORD *)v36 + 8) = v63;
  v64 = *(_QWORD *)(v64 + 80);
  *((_QWORD *)v36 + 9) = v64;
  v65 = *(_QWORD *)(v65 + 80);
  *((_QWORD *)v36 + 10) = v65;
  v66 = *(_QWORD *)(v66 + 80);
  v39 = v67;
  *((_QWORD *)v36 + 11) = v66;
  *((_QWORD *)v36 + 12) = v39;
  v40 = v69;
  *((_QWORD *)v36 + 13) = v68;
  *((_QWORD *)v36 + 14) = v40;
  *((_QWORD *)v36 + 15) = v70;
  (*(void (**)(char *, char *))(v28 + 32))(&v36[v48], v56);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v36[v53], v58, v37);
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v36[v54], v59, v38);
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v36[v55], v77, a14);
  v41 = v74;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v36[v60], v88, v74);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v78 = v73;
  v79 = v37;
  v80 = v38;
  v81 = a14;
  v82 = v41;
  v42 = v62;
  v83 = v62;
  v84 = v63;
  v85 = v64;
  v86 = v65;
  v87 = v66;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v44 = (void *)sub_190AC06B8(v42, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v46 = v45;
  swift_release();

  return v46;
}

uint64_t sub_190BACC14(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void);
  void (*v36)(char *, unint64_t, uint64_t);
  void (*v37)(char *, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t TupleTypeMetadata;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;

  v64 = a8;
  v61 = a7;
  v80 = a5;
  v79 = a4;
  v78 = a3;
  v81 = a2;
  v71 = a1;
  v70 = a10;
  v62 = a9;
  v87 = a14;
  v88 = a13;
  v85 = a15;
  v65 = a16;
  v74 = *a2;
  v75 = *a3;
  v76 = *a4;
  v77 = *a5;
  v86 = *(_QWORD *)(a16 - 8);
  v73 = *(_QWORD *)(v86 + 64);
  v16 = MEMORY[0x1E0C80A78](v73);
  v100 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = *(_QWORD *)(v17 - 8);
  v72 = *(_QWORD *)(v84 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v89 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = *(_QWORD *)(v20 - 8);
  v63 = *(_QWORD *)(v82 + 64);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v23;
  v25 = *(_QWORD *)(v24 - 8);
  v60 = *(_QWORD *)(v25 + 64);
  v26 = v25;
  v27 = MEMORY[0x1E0C80A78](v21);
  v29 = (char *)&v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v29;
  v30 = *(_QWORD *)(a12 - 8);
  v59 = a12;
  v31 = *(_QWORD *)(v30 + 64);
  v32 = MEMORY[0x1E0C80A78](v27);
  v67 = (char *)&v56 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a11;
  v33 = *(_QWORD *)(a11 - 8);
  v34 = *(_QWORD *)(v33 + 64);
  MEMORY[0x1E0C80A78](v32);
  v66 = (char *)&v56 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(void (**)(void))(v33 + 16);
  v56 = v33;
  v35();
  v36 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
  v57 = v30;
  v36((char *)&v56 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v61, a12);
  v37 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
  v38 = v26;
  v58 = v26;
  v37(v29, v64, v88);
  v39 = v82;
  (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v23, v62, v87);
  v40 = v84;
  (*(void (**)(char *, unint64_t, uint64_t))(v84 + 16))(v89, v70, v85);
  v41 = v86;
  v42 = v65;
  (*(void (**)(char *, unint64_t, uint64_t))(v86 + 16))(v100, v71, v65);
  v61 = (*(unsigned __int8 *)(v33 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v62 = (v34 + *(unsigned __int8 *)(v30 + 80) + v61) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v64 = (v31 + *(unsigned __int8 *)(v38 + 80) + v62) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v70 = (v60 + *(unsigned __int8 *)(v39 + 80) + v64) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v71 = (v63 + *(unsigned __int8 *)(v40 + 80) + v70) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v72 = (v72 + *(unsigned __int8 *)(v41 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v43 = (char *)swift_allocObject();
  v44 = v59;
  *((_QWORD *)v43 + 2) = v83;
  *((_QWORD *)v43 + 3) = v44;
  v45 = v87;
  v46 = v88;
  *((_QWORD *)v43 + 4) = v88;
  *((_QWORD *)v43 + 5) = v45;
  v47 = v85;
  *((_QWORD *)v43 + 6) = v85;
  *((_QWORD *)v43 + 7) = v42;
  v74 = *(_QWORD *)(v74 + 80);
  *((_QWORD *)v43 + 8) = v74;
  v75 = *(_QWORD *)(v75 + 80);
  *((_QWORD *)v43 + 9) = v75;
  v76 = *(_QWORD *)(v76 + 80);
  *((_QWORD *)v43 + 10) = v76;
  v77 = *(_QWORD *)(v77 + 80);
  v48 = v78;
  *((_QWORD *)v43 + 11) = v77;
  *((_QWORD *)v43 + 12) = v48;
  v49 = v80;
  *((_QWORD *)v43 + 13) = v79;
  *((_QWORD *)v43 + 14) = v49;
  (*(void (**)(char *, char *))(v56 + 32))(&v43[v61], v66);
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v43[v62], v67, v44);
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(&v43[v64], v68, v46);
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v43[v70], v69, v45);
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v43[v71], v89, v47);
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v43[v72], v100, v42);
  swift_retain();
  swift_retain();
  swift_retain();
  v90 = v83;
  v91 = v44;
  v92 = v46;
  v93 = v45;
  v94 = v47;
  v95 = v42;
  v50 = v74;
  v96 = v74;
  v97 = v75;
  v98 = v76;
  v99 = v77;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v52 = (void *)sub_190AC06B8(v50, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v54 = v53;
  swift_release();

  return v54;
}

uint64_t sub_190BAD200(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  void (*v39)(char *, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t TupleTypeMetadata;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;

  v76 = a8;
  v70 = a7;
  v68 = a6;
  v86 = a4;
  v85 = a3;
  v87 = a2;
  v79 = a1;
  v78 = a10;
  v75 = a9;
  v90 = a15;
  v94 = a16;
  v97 = a17;
  v98 = a14;
  v82 = *a2;
  v83 = *a3;
  v84 = *a4;
  v96 = *(_QWORD *)(a17 - 8);
  v81 = *(_QWORD *)(v96 + 64);
  v17 = MEMORY[0x1E0C80A78](v81);
  v111 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = *(_QWORD *)(v18 - 8);
  v80 = *(_QWORD *)(v93 + 64);
  v19 = MEMORY[0x1E0C80A78](v17);
  v100 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = *(_QWORD *)(v21 - 8);
  v77 = *(_QWORD *)(v89 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v99 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = *(_QWORD *)(v24 - 8);
  v69 = *(_QWORD *)(v88 + 64);
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v27;
  v28 = *(_QWORD *)(a13 - 8);
  v66 = a13;
  v67 = *(_QWORD *)(v28 + 64);
  v29 = MEMORY[0x1E0C80A78](v25);
  v31 = (char *)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v31;
  v91 = a12;
  v32 = *(_QWORD *)(a12 - 8);
  v65 = *(_QWORD *)(v32 + 64);
  v33 = MEMORY[0x1E0C80A78](v29);
  v35 = (char *)&v63 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v35;
  v92 = a11;
  v36 = *(_QWORD *)(*(_QWORD *)(a11 - 8) + 64);
  v95 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](v33);
  v71 = (char *)&v63 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v37 + 16))();
  v38 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
  v63 = v32;
  v38(v35, v68, a12);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
  v40 = v28;
  v64 = v28;
  v39(v31, v70, a13);
  v41 = v88;
  (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v27, v76, v98);
  v42 = v89;
  (*(void (**)(char *, unint64_t, uint64_t))(v89 + 16))(v99, v75, v90);
  v43 = v93;
  v44 = v94;
  (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v100, v78, v94);
  v45 = v96;
  v46 = v97;
  (*(void (**)(char *, unint64_t))(v96 + 16))(v111, v79);
  v68 = (*(unsigned __int8 *)(v95 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v70 = (v36 + *(unsigned __int8 *)(v32 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v75 = (v65 + *(unsigned __int8 *)(v40 + 80) + v70) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v76 = (v67 + *(unsigned __int8 *)(v41 + 80) + v75) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v78 = (v69 + *(unsigned __int8 *)(v42 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v79 = (v77 + *(unsigned __int8 *)(v43 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v80 = (v80 + *(unsigned __int8 *)(v45 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v47 = (char *)swift_allocObject();
  v48 = v91;
  *((_QWORD *)v47 + 2) = v92;
  *((_QWORD *)v47 + 3) = v48;
  v49 = v66;
  v50 = v98;
  *((_QWORD *)v47 + 4) = v66;
  *((_QWORD *)v47 + 5) = v50;
  v51 = v90;
  *((_QWORD *)v47 + 6) = v90;
  *((_QWORD *)v47 + 7) = v44;
  *((_QWORD *)v47 + 8) = v46;
  v52 = *(_QWORD *)(v82 + 80);
  *((_QWORD *)v47 + 9) = v52;
  v83 = *(_QWORD *)(v83 + 80);
  *((_QWORD *)v47 + 10) = v83;
  v84 = *(_QWORD *)(v84 + 80);
  v53 = v85;
  *((_QWORD *)v47 + 11) = v84;
  *((_QWORD *)v47 + 12) = v53;
  *((_QWORD *)v47 + 13) = v86;
  (*(void (**)(char *, char *))(v95 + 32))(&v47[v68], v71);
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v47[v70], v72, v48);
  v54 = v49;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v47[v75], v73, v49);
  v55 = v50;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v47[v76], v74, v50);
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(&v47[v78], v99, v51);
  v56 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(&v47[v79], v100, v94);
  v57 = v97;
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(&v47[v80], v111, v97);
  swift_retain();
  swift_retain();
  v101 = v92;
  v102 = v91;
  v103 = v54;
  v104 = v55;
  v105 = v51;
  v106 = v56;
  v107 = v57;
  v108 = v52;
  v109 = v83;
  v110 = v84;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v59 = (void *)sub_190AC06B8(v52, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v61 = v60;
  swift_release();

  return v61;
}

uint64_t sub_190BAD888(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  void (*v44)(char *, unint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t TupleTypeMetadata;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v87 = a8;
  v84 = a7;
  v79 = a6;
  v77 = a5;
  v95 = a3;
  v96 = a2;
  v90 = a1;
  v88 = a10;
  v86 = a9;
  v100 = a14;
  v99 = a15;
  v109 = a16;
  v105 = a17;
  v123 = a18;
  v93 = *a2;
  v94 = *a3;
  v107 = *(_QWORD *)(a18 - 8);
  v92 = *(_QWORD *)(v107 + 64);
  v18 = MEMORY[0x1E0C80A78](a1);
  v112 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = *(_QWORD *)(v20 - 8);
  v91 = *(_QWORD *)(v104 + 64);
  v21 = MEMORY[0x1E0C80A78](v18);
  v111 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = *(_QWORD *)(v23 - 8);
  v89 = *(_QWORD *)(v101 + 64);
  v24 = MEMORY[0x1E0C80A78](v21);
  v110 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = *(_QWORD *)(v26 - 8);
  v85 = *(_QWORD *)(v98 + 64);
  v27 = MEMORY[0x1E0C80A78](v24);
  v108 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = *(_QWORD *)(v29 - 8);
  v78 = *(_QWORD *)(v97 + 64);
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v32;
  v33 = *(_QWORD *)(a13 - 8);
  v75 = a13;
  v76 = *(_QWORD *)(v33 + 64);
  v34 = MEMORY[0x1E0C80A78](v30);
  v36 = (char *)&v71 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = v36;
  v102 = a12;
  v37 = *(_QWORD *)(a12 - 8);
  v74 = *(_QWORD *)(v37 + 64);
  v38 = MEMORY[0x1E0C80A78](v34);
  v40 = (char *)&v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = v40;
  v103 = a11;
  v41 = *(_QWORD *)(*(_QWORD *)(a11 - 8) + 64);
  v106 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](v38);
  v80 = (char *)&v71 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v42 + 16))();
  v43 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
  v72 = v37;
  v43(v40, v77, a12);
  v44 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
  v45 = v33;
  v73 = v33;
  v44(v36, v79, a13);
  v46 = v97;
  (*(void (**)(char *, unint64_t, uint64_t))(v97 + 16))(v32, v84, v100);
  v47 = v98;
  (*(void (**)(char *, unint64_t, uint64_t))(v98 + 16))(v108, v87, v99);
  v48 = v101;
  (*(void (**)(char *, unint64_t, uint64_t))(v101 + 16))(v110, v86, v109);
  v49 = v104;
  v50 = v105;
  (*(void (**)(char *, unint64_t, uint64_t))(v104 + 16))(v111, v88, v105);
  v51 = v107;
  (*(void (**)(char *, unint64_t, uint64_t))(v107 + 16))(v112, v90, v123);
  v77 = (*(unsigned __int8 *)(v106 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
  v79 = (v41 + *(unsigned __int8 *)(v37 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v84 = (v74 + *(unsigned __int8 *)(v45 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v86 = (v76 + *(unsigned __int8 *)(v46 + 80) + v84) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v87 = (v78 + *(unsigned __int8 *)(v47 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v88 = (v85 + *(unsigned __int8 *)(v48 + 80) + v87) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v90 = (v89 + *(unsigned __int8 *)(v49 + 80) + v88) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v91 = (v91 + *(unsigned __int8 *)(v51 + 80) + v90) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v52 = (char *)swift_allocObject();
  v53 = v102;
  *((_QWORD *)v52 + 2) = v103;
  *((_QWORD *)v52 + 3) = v53;
  v54 = v75;
  v55 = v100;
  *((_QWORD *)v52 + 4) = v75;
  *((_QWORD *)v52 + 5) = v55;
  v56 = v99;
  v57 = v109;
  *((_QWORD *)v52 + 6) = v99;
  *((_QWORD *)v52 + 7) = v57;
  v58 = v123;
  *((_QWORD *)v52 + 8) = v50;
  *((_QWORD *)v52 + 9) = v58;
  v59 = *(_QWORD *)(v93 + 80);
  *((_QWORD *)v52 + 10) = v59;
  v94 = *(_QWORD *)(v94 + 80);
  v60 = v95;
  *((_QWORD *)v52 + 11) = v94;
  *((_QWORD *)v52 + 12) = v60;
  (*(void (**)(char *, char *))(v106 + 32))(&v52[v77], v80);
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v52[v79], v81, v53);
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v52[v84], v82, v54);
  v61 = v55;
  (*(void (**)(char *, char *, uint64_t))(v97 + 32))(&v52[v86], v83, v55);
  v62 = v56;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v52[v87], v108, v56);
  v63 = v57;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(&v52[v88], v110, v57);
  v64 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(&v52[v90], v111, v105);
  v65 = v123;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(&v52[v91], v112, v123);
  swift_retain();
  v113 = v103;
  v114 = v102;
  v115 = v54;
  v116 = v61;
  v117 = v62;
  v118 = v63;
  v119 = v64;
  v120 = v65;
  v121 = v59;
  v122 = v94;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v67 = (void *)sub_190AC06B8(v59, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v69 = v68;
  swift_release();

  return v69;
}

uint64_t sub_190BADFA8(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, unint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t TupleTypeMetadata;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v93 = a8;
  v90 = a7;
  v89 = a6;
  v83 = a5;
  v82 = a4;
  v100 = a2;
  v96 = a1;
  v94 = a10;
  v92 = a9;
  v112 = a14;
  v114 = a15;
  v116 = a16;
  v110 = a18;
  v130 = a19;
  v99 = *a2;
  v111 = *(_QWORD *)(a19 - 8);
  v98 = *(_QWORD *)(v111 + 64);
  v19 = MEMORY[0x1E0C80A78](a1);
  v119 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = *(_QWORD *)(a18 - 8);
  v97 = *(_QWORD *)(v107 + 64);
  v21 = v97;
  v22 = MEMORY[0x1E0C80A78](v19);
  v118 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = *(_QWORD *)(a17 - 8);
  v95 = *(_QWORD *)(v105 + 64);
  v23 = MEMORY[0x1E0C80A78](v22);
  v117 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *(_QWORD *)(v25 - 8);
  v91 = *(_QWORD *)(v103 + 64);
  v26 = MEMORY[0x1E0C80A78](v23);
  v115 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = *(_QWORD *)(v28 - 8);
  v85 = *(_QWORD *)(v101 + 64);
  v29 = MEMORY[0x1E0C80A78](v26);
  v113 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = *(_QWORD *)(v31 - 8);
  v81 = *(_QWORD *)(v102 + 64);
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v34;
  v35 = *(_QWORD *)(a13 - 8);
  v80 = a13;
  v79 = *(_QWORD *)(v35 + 64);
  v36 = v35;
  v37 = MEMORY[0x1E0C80A78](v32);
  v39 = (char *)&v76 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v39;
  v104 = a12;
  v40 = *(_QWORD *)(a12 - 8);
  v78 = *(_QWORD *)(v40 + 64);
  v109 = v40;
  v41 = MEMORY[0x1E0C80A78](v37);
  v43 = (char *)&v76 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v43;
  v106 = v44;
  v45 = *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64);
  v108 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v41);
  v84 = (char *)&v76 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v46 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v43, v82, a12);
  v47 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
  v48 = v36;
  v76 = v36;
  v47(v39, v83, a13);
  v49 = v102;
  (*(void (**)(char *, unint64_t, uint64_t))(v102 + 16))(v34, v89, v112);
  v50 = v101;
  (*(void (**)(char *, unint64_t, uint64_t))(v101 + 16))(v113, v90, v114);
  v51 = v103;
  (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v115, v93, v116);
  v52 = v105;
  v53 = *(void (**)(char *, unint64_t, uint64_t))(v105 + 16);
  v77 = a17;
  v53(v117, v92, a17);
  v54 = v107;
  v55 = v110;
  (*(void (**)(char *, unint64_t, uint64_t))(v107 + 16))(v118, v94, v110);
  v56 = v111;
  (*(void (**)(char *, unint64_t, uint64_t))(v111 + 16))(v119, v96, v130);
  v83 = (*(unsigned __int8 *)(v108 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  v89 = (v45 + *(unsigned __int8 *)(v109 + 80) + v83) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  v90 = (v78 + *(unsigned __int8 *)(v48 + 80) + v89) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v92 = (v79 + *(unsigned __int8 *)(v49 + 80) + v90) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v57 = (v81 + *(unsigned __int8 *)(v50 + 80) + v92) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v93 = (v85 + *(unsigned __int8 *)(v51 + 80) + v57) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v94 = (v91 + *(unsigned __int8 *)(v52 + 80) + v93) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v96 = (v95 + *(unsigned __int8 *)(v54 + 80) + v94) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v97 = (v97 + *(unsigned __int8 *)(v56 + 80) + v96) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v58 = (char *)swift_allocObject();
  v59 = v104;
  *((_QWORD *)v58 + 2) = v106;
  *((_QWORD *)v58 + 3) = v59;
  v60 = v80;
  v61 = v112;
  *((_QWORD *)v58 + 4) = v80;
  *((_QWORD *)v58 + 5) = v61;
  v62 = v114;
  v63 = v116;
  *((_QWORD *)v58 + 6) = v114;
  *((_QWORD *)v58 + 7) = v63;
  v64 = v77;
  *((_QWORD *)v58 + 8) = v77;
  *((_QWORD *)v58 + 9) = v55;
  *((_QWORD *)v58 + 10) = v130;
  v65 = *(_QWORD *)(v99 + 80);
  *((_QWORD *)v58 + 11) = v65;
  (*(void (**)(char *, char *))(v108 + 32))(&v58[v83], v84);
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v58[v89], v86, v59);
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(&v58[v90], v87, v60);
  v66 = v61;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(&v58[v92], v88, v61);
  v67 = &v58[v57];
  v68 = v62;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v67, v113, v62);
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(&v58[v93], v115, v63);
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v58[v94], v117, v64);
  v69 = v110;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(&v58[v96], v118, v110);
  v70 = v130;
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(&v58[v97], v119, v130);
  v120 = v106;
  v121 = v104;
  v122 = v60;
  v123 = v66;
  v124 = v68;
  v125 = v63;
  v126 = v64;
  v127 = v69;
  v128 = v70;
  v129 = v65;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v72 = (void *)sub_190AC06B8(v65, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v74 = v73;
  swift_release();

  return v74;
}

uint64_t sub_190BAE754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int *TupleTypeMetadata;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v23 = a9 + TupleTypeMetadata[12];
  v24 = a9 + TupleTypeMetadata[16];
  v26 = a9 + TupleTypeMetadata[20];
  v27 = a9 + TupleTypeMetadata[24];
  v28 = a9 + TupleTypeMetadata[28];
  v29 = a9 + TupleTypeMetadata[32];
  v31 = a9 + TupleTypeMetadata[36];
  v33 = a9 + TupleTypeMetadata[40];
  v34 = a9 + TupleTypeMetadata[44];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 16))(a9, a2, a12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a13 - 8) + 16))(v23, a3, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 16))(v24, a4, a14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 16))(v26, a5, a15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 16))(v27, a6, a16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a17 - 8) + 16))(v28, a7, a17);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v29, a8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 16))(v31, a10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 16))(v33, a11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a21 - 8) + 16))(v34, a1);
}

_QWORD *combine<A, B, C, D, E, F, G, H, I, J, K>(_:_:_:_:_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  _QWORD *v31;

  OUTLINED_FUNCTION_148_0();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v31 = v25;
  v30 = *v25;
  OUTLINED_FUNCTION_154_0();
  OUTLINED_FUNCTION_153_0();
  v26 = (_QWORD *)OUTLINED_FUNCTION_24();
  v26[2] = *(_QWORD *)(v30 + 80);
  v26[3] = v24;
  v26[4] = v22;
  v26[5] = v20;
  v26[6] = v18;
  v26[7] = v16;
  v26[8] = v14;
  v26[9] = v12;
  v26[10] = a9;
  v26[11] = a10;
  v26[12] = a11;
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_105_0();
  swift_retain();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  v27 = OUTLINED_FUNCTION_46_10();
  v28 = (void *)OUTLINED_FUNCTION_94_3(v27);
  OUTLINED_FUNCTION_166();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  return v31;
}

uint64_t sub_190BAEB00(uint64_t a1, _QWORD *a2, uint64_t *a3, _QWORD *a4, _QWORD *a5, uint64_t *a6, _QWORD *a7, uint64_t *a8, _QWORD *a9, _QWORD *a10, _QWORD *a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  void (*v28)(char *, char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t TupleTypeMetadata;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v40 = a7;
  v39 = a5;
  v38 = a4;
  v53 = a2;
  v65 = a11;
  v42 = a10;
  v41 = a9;
  v13 = *a2;
  v14 = *a3;
  v50 = *a4;
  v51 = v14;
  v15 = *a5;
  v48 = *a6;
  v49 = v15;
  v36[0] = a6;
  v17 = *a7;
  v46 = *a8;
  v47 = v17;
  v36[1] = a8;
  v45 = *a9;
  v44 = *a10;
  v43 = *a11;
  v19 = *(_QWORD *)(a12 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](a1);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v19 + 16))((char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
  v37 = (*(unsigned __int8 *)(v19 + 80) + 176) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = v22;
  v25 = v22;
  v52 = *(_QWORD *)(v13 + 80);
  *((_QWORD *)v24 + 3) = v52;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v24 + 4) = v51;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v24 + 5) = v50;
  v49 = *(_QWORD *)(v49 + 80);
  *((_QWORD *)v24 + 6) = v49;
  v48 = *(_QWORD *)(v48 + 80);
  *((_QWORD *)v24 + 7) = v48;
  v47 = *(_QWORD *)(v47 + 80);
  *((_QWORD *)v24 + 8) = v47;
  v46 = *(_QWORD *)(v46 + 80);
  *((_QWORD *)v24 + 9) = v46;
  v45 = *(_QWORD *)(v45 + 80);
  *((_QWORD *)v24 + 10) = v45;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v24 + 11) = v44;
  v43 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v24 + 12) = v43;
  *((_QWORD *)v24 + 13) = a3;
  v26 = v39;
  *((_QWORD *)v24 + 14) = v38;
  *((_QWORD *)v24 + 15) = v26;
  *((_QWORD *)v24 + 16) = a6;
  *((_QWORD *)v24 + 17) = v40;
  *((_QWORD *)v24 + 18) = a8;
  v27 = v42;
  *((_QWORD *)v24 + 19) = v41;
  *((_QWORD *)v24 + 20) = v27;
  *((_QWORD *)v24 + 21) = v65;
  v28 = *(void (**)(char *, char *))(v19 + 32);
  v29 = v25;
  v28(&v24[v37], (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v54 = v29;
  v30 = v52;
  v55 = v52;
  v56 = v51;
  v57 = v50;
  v58 = v49;
  v59 = v48;
  v60 = v47;
  v61 = v46;
  v62 = v45;
  v63 = v44;
  v64 = v43;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v32 = (void *)sub_190AC06B8(v30, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v34 = v33;
  swift_release();

  return v34;
}

uint64_t sub_190BAEE58()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  return swift_deallocObject();
}

void sub_190BAEE9C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_144_0();
  sub_190BAEB00(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_u64[0], (_QWORD *)v1.n128_u64[1], *(_QWORD **)(v0 + 96), v10);
  OUTLINED_FUNCTION_88();
}

uint64_t sub_190BAEEC4(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, _QWORD *a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  unint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t TupleTypeMetadata;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v54 = a7;
  v50 = a6;
  v51 = a8;
  v48 = a3;
  v49 = a5;
  v55 = a4;
  v53 = a2;
  v67 = a10;
  v52 = a9;
  v45 = *a2;
  v44 = *a3;
  v42 = *a4;
  v40 = *a5;
  v39 = *a6;
  v41 = *a7;
  v43 = *a8;
  v46 = *a9;
  v47 = *a10;
  v14 = *(_QWORD *)(a13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v38 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a12 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v19);
  v37 = v14;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v35 = a13;
  v20((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a13);
  v21 = (*(unsigned __int8 *)(v17 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v36 = (v18 + *(unsigned __int8 *)(v14 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a12;
  *((_QWORD *)v22 + 3) = a13;
  v45 = *(_QWORD *)(v45 + 80);
  *((_QWORD *)v22 + 4) = v45;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v22 + 5) = v44;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v22 + 6) = v42;
  v40 = *(_QWORD *)(v40 + 80);
  *((_QWORD *)v22 + 7) = v40;
  v39 = *(_QWORD *)(v39 + 80);
  *((_QWORD *)v22 + 8) = v39;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v22 + 9) = v41;
  v43 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v22 + 10) = v43;
  v46 = *(_QWORD *)(v46 + 80);
  *((_QWORD *)v22 + 11) = v46;
  v23 = v48;
  v47 = *(_QWORD *)(v47 + 80);
  *((_QWORD *)v22 + 12) = v47;
  *((_QWORD *)v22 + 13) = v23;
  v25 = v49;
  v24 = v50;
  *((_QWORD *)v22 + 14) = v55;
  *((_QWORD *)v22 + 15) = v25;
  v26 = v54;
  *((_QWORD *)v22 + 16) = v24;
  *((_QWORD *)v22 + 17) = v26;
  v27 = v52;
  *((_QWORD *)v22 + 18) = v51;
  *((_QWORD *)v22 + 19) = v27;
  *((_QWORD *)v22 + 20) = v67;
  (*(void (**)(char *, char *))(v17 + 32))(&v22[v21], v19);
  v28 = v35;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v22[v36], v38, v35);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v56 = a12;
  v57 = v28;
  v29 = v45;
  v58 = v45;
  v59 = v44;
  v60 = v42;
  v61 = v40;
  v62 = v39;
  v63 = v41;
  v64 = v43;
  v65 = v46;
  v66 = v47;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v31 = (void *)sub_190AC06B8(v29, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v33 = v32;
  swift_release();

  return v33;
}

uint64_t sub_190BAF2AC(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, _QWORD *a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t TupleTypeMetadata;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;

  v63 = a2;
  v60 = a6;
  v61 = a8;
  v66 = a7;
  v58 = a3;
  v59 = a5;
  v78 = a4;
  v46 = a1;
  v45 = a11;
  v64 = a14;
  v62 = a9;
  v50 = *a2;
  v51 = *a3;
  v52 = *a4;
  v53 = *a5;
  v54 = *a6;
  v55 = *a7;
  v56 = *a8;
  v57 = *a9;
  v65 = *(_QWORD *)(a14 - 8);
  v14 = *(_QWORD *)(v65 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v49 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a13 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x1E0C80A78](v15);
  v48 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v18);
  v47 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v20 + 16))();
  v22 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
  v44 = v16;
  v22((char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v45, a13);
  v23 = v65;
  v24 = v64;
  (*(void (**)(char *, unint64_t))(v65 + 16))((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v46);
  v45 = (*(unsigned __int8 *)(v20 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = (v21 + *(unsigned __int8 *)(v16 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v46 = (v17 + *(unsigned __int8 *)(v23 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v26 = (char *)swift_allocObject();
  v27 = v43;
  *((_QWORD *)v26 + 2) = v43;
  *((_QWORD *)v26 + 3) = a13;
  *((_QWORD *)v26 + 4) = v24;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v26 + 5) = v50;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v26 + 6) = v51;
  v52 = *(_QWORD *)(v52 + 80);
  *((_QWORD *)v26 + 7) = v52;
  v53 = *(_QWORD *)(v53 + 80);
  *((_QWORD *)v26 + 8) = v53;
  v54 = *(_QWORD *)(v54 + 80);
  *((_QWORD *)v26 + 9) = v54;
  v55 = *(_QWORD *)(v55 + 80);
  *((_QWORD *)v26 + 10) = v55;
  v56 = *(_QWORD *)(v56 + 80);
  *((_QWORD *)v26 + 11) = v56;
  v57 = *(_QWORD *)(v57 + 80);
  v29 = v58;
  v28 = v59;
  *((_QWORD *)v26 + 12) = v57;
  *((_QWORD *)v26 + 13) = v29;
  *((_QWORD *)v26 + 14) = v78;
  *((_QWORD *)v26 + 15) = v28;
  v30 = v61;
  v31 = v66;
  *((_QWORD *)v26 + 16) = v60;
  *((_QWORD *)v26 + 17) = v31;
  v32 = v62;
  *((_QWORD *)v26 + 18) = v30;
  *((_QWORD *)v26 + 19) = v32;
  v33 = *(void (**)(char *, char *))(v20 + 32);
  v34 = v27;
  v33(&v26[v45], v47);
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v26[v25], v48, a13);
  v35 = v64;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v26[v46], v49, v64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v67 = v34;
  v68 = a13;
  v69 = v35;
  v36 = v50;
  v70 = v50;
  v71 = v51;
  v72 = v52;
  v73 = v53;
  v74 = v54;
  v75 = v55;
  v76 = v56;
  v77 = v57;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v38 = (void *)sub_190AC06B8(v36, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v40 = v39;
  swift_release();

  return v40;
}

uint64_t sub_190BAF718(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, uint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t TupleTypeMetadata;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;

  v68 = a7;
  v69 = a8;
  v67 = a6;
  v87 = a5;
  v66 = a4;
  v75 = a3;
  v70 = a2;
  v54 = a1;
  v51 = a10;
  v53 = a11;
  v71 = a14;
  v52 = a15;
  v59 = *a2;
  v60 = *a3;
  v61 = *a4;
  v62 = *a5;
  v63 = *a6;
  v64 = *a7;
  v65 = *a8;
  v73 = *(_QWORD *)(a15 - 8);
  v55 = *(_QWORD *)(v73 + 64);
  v15 = MEMORY[0x1E0C80A78](a1);
  v74 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v72 + 64);
  v19 = MEMORY[0x1E0C80A78](v15);
  v58 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a13 - 8);
  v48 = a13;
  v21 = *(_QWORD *)(v20 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v57 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x1E0C80A78](v22);
  v56 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v24 + 16))();
  v26 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
  v50 = v20;
  v26((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v51, a13);
  v27 = v72;
  v28 = v71;
  (*(void (**)(char *, unint64_t, uint64_t))(v72 + 16))((char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v53, v71);
  v29 = v73;
  v30 = v52;
  (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v74, v54, v52);
  v51 = (*(unsigned __int8 *)(v24 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v31 = (v25 + *(unsigned __int8 *)(v20 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v53 = (v21 + *(unsigned __int8 *)(v27 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v54 = (v18 + *(unsigned __int8 *)(v29 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v32 = (char *)swift_allocObject();
  v33 = v49;
  v34 = v48;
  *((_QWORD *)v32 + 2) = v49;
  *((_QWORD *)v32 + 3) = v34;
  *((_QWORD *)v32 + 4) = v28;
  *((_QWORD *)v32 + 5) = v30;
  v59 = *(_QWORD *)(v59 + 80);
  *((_QWORD *)v32 + 6) = v59;
  v60 = *(_QWORD *)(v60 + 80);
  *((_QWORD *)v32 + 7) = v60;
  v61 = *(_QWORD *)(v61 + 80);
  *((_QWORD *)v32 + 8) = v61;
  v62 = *(_QWORD *)(v62 + 80);
  *((_QWORD *)v32 + 9) = v62;
  v63 = *(_QWORD *)(v63 + 80);
  *((_QWORD *)v32 + 10) = v63;
  v64 = *(_QWORD *)(v64 + 80);
  *((_QWORD *)v32 + 11) = v64;
  v65 = *(_QWORD *)(v65 + 80);
  v35 = v75;
  *((_QWORD *)v32 + 12) = v65;
  *((_QWORD *)v32 + 13) = v35;
  v36 = v87;
  *((_QWORD *)v32 + 14) = v66;
  *((_QWORD *)v32 + 15) = v36;
  v37 = v68;
  *((_QWORD *)v32 + 16) = v67;
  *((_QWORD *)v32 + 17) = v37;
  *((_QWORD *)v32 + 18) = v69;
  v38 = *(void (**)(char *, char *))(v24 + 32);
  v39 = v33;
  v38(&v32[v51], v56);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v32[v31], v57, v34);
  v40 = v71;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v32[v53], v58, v71);
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v32[v54], v74, v30);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v76 = v39;
  v77 = v34;
  v78 = v40;
  v79 = v30;
  v41 = v59;
  v80 = v59;
  v81 = v60;
  v82 = v61;
  v83 = v62;
  v84 = v63;
  v85 = v64;
  v86 = v65;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v43 = (void *)sub_190AC06B8(v41, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v45 = v44;
  swift_release();

  return v45;
}

uint64_t sub_190BAFC20(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, uint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t TupleTypeMetadata;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;

  v70 = a7;
  v69 = a6;
  v68 = a5;
  v67 = a4;
  v91 = a3;
  v71 = a2;
  v59 = a1;
  v53 = a10;
  v51 = a9;
  v54 = a11;
  v73 = a15;
  v77 = a16;
  v61 = *a2;
  v62 = *a3;
  v63 = *a4;
  v64 = *a5;
  v65 = *a6;
  v66 = *a7;
  v76 = *(_QWORD *)(a16 - 8);
  v60 = *(_QWORD *)(v76 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v79 = (char *)&v47 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = *(_QWORD *)(v17 - 8);
  v55 = *(_QWORD *)(v75 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = *(_QWORD *)(a14 - 8);
  v52 = *(_QWORD *)(v72 + 64);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v22;
  v23 = *(_QWORD *)(a13 - 8);
  v49 = a13;
  v24 = *(_QWORD *)(v23 + 64);
  v25 = MEMORY[0x1E0C80A78](v20);
  v57 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  MEMORY[0x1E0C80A78](v25);
  v56 = (char *)&v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v27 + 16))();
  v29 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
  v50 = v23;
  v29((char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v51, a13);
  v30 = v72;
  (*(void (**)(char *, unint64_t, uint64_t))(v72 + 16))(v22, v53, a14);
  v31 = v75;
  (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v78, v54, v73);
  v33 = v76;
  v32 = v77;
  (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v79, v59, v77);
  v48 = (*(unsigned __int8 *)(v27 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v51 = (v28 + *(unsigned __int8 *)(v23 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v53 = (v24 + *(unsigned __int8 *)(v30 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v54 = (v52 + *(unsigned __int8 *)(v31 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v59 = (v55 + *(unsigned __int8 *)(v33 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v34 = (char *)swift_allocObject();
  v35 = v73;
  v36 = v49;
  *((_QWORD *)v34 + 2) = v74;
  *((_QWORD *)v34 + 3) = v36;
  *((_QWORD *)v34 + 4) = a14;
  *((_QWORD *)v34 + 5) = v35;
  *((_QWORD *)v34 + 6) = v32;
  v61 = *(_QWORD *)(v61 + 80);
  *((_QWORD *)v34 + 7) = v61;
  v62 = *(_QWORD *)(v62 + 80);
  *((_QWORD *)v34 + 8) = v62;
  v63 = *(_QWORD *)(v63 + 80);
  *((_QWORD *)v34 + 9) = v63;
  v64 = *(_QWORD *)(v64 + 80);
  *((_QWORD *)v34 + 10) = v64;
  v65 = *(_QWORD *)(v65 + 80);
  *((_QWORD *)v34 + 11) = v65;
  v66 = *(_QWORD *)(v66 + 80);
  v37 = v91;
  *((_QWORD *)v34 + 12) = v66;
  *((_QWORD *)v34 + 13) = v37;
  v38 = v68;
  *((_QWORD *)v34 + 14) = v67;
  *((_QWORD *)v34 + 15) = v38;
  v39 = v70;
  *((_QWORD *)v34 + 16) = v69;
  *((_QWORD *)v34 + 17) = v39;
  (*(void (**)(char *, char *))(v27 + 32))(&v34[v48], v56);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v34[v51], v57, v36);
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v34[v53], v58, a14);
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v34[v54], v78, v35);
  v40 = v77;
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(&v34[v59], v79, v77);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v80 = v74;
  v81 = v36;
  v82 = a14;
  v83 = v35;
  v41 = v61;
  v84 = v40;
  v85 = v61;
  v86 = v62;
  v87 = v63;
  v88 = v64;
  v89 = v65;
  v90 = v66;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v43 = (void *)sub_190AC06B8(v41, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v45 = v44;
  swift_release();

  return v45;
}

uint64_t sub_190BB01C4(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, uint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t TupleTypeMetadata;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;

  v61 = a8;
  v90 = a6;
  v78 = a5;
  v77 = a4;
  v76 = a3;
  v79 = a2;
  v69 = a1;
  v63 = a10;
  v60 = a9;
  v66 = a11;
  v80 = a15;
  v85 = a16;
  v87 = a17;
  v71 = *a2;
  v72 = *a3;
  v73 = *a4;
  v74 = *a5;
  v75 = *a6;
  v86 = *(_QWORD *)(a17 - 8);
  v70 = *(_QWORD *)(v86 + 64);
  v17 = MEMORY[0x1E0C80A78](v70);
  v102 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = *(_QWORD *)(v18 - 8);
  v68 = *(_QWORD *)(v84 + 64);
  v19 = MEMORY[0x1E0C80A78](v17);
  v89 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = *(_QWORD *)(v21 - 8);
  v62 = *(_QWORD *)(v82 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v88 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = *(_QWORD *)(a14 - 8);
  v57 = a14;
  v59 = *(_QWORD *)(v81 + 64);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v26;
  v27 = *(_QWORD *)(a13 - 8);
  v58 = a13;
  v28 = *(_QWORD *)(v27 + 64);
  v29 = MEMORY[0x1E0C80A78](v24);
  v65 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a12;
  v30 = *(_QWORD *)(a12 - 8);
  v31 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v29);
  v64 = (char *)&v54 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(void (**)(void))(v30 + 16);
  v55 = v30;
  v32();
  v33 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
  v56 = v27;
  v33((char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v61, a13);
  v34 = v81;
  (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v26, v60, a14);
  v35 = v82;
  (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v88, v63, v80);
  v36 = v84;
  (*(void (**)(char *, unint64_t, uint64_t))(v84 + 16))(v89, v66, v85);
  v37 = v86;
  v38 = v87;
  (*(void (**)(char *, unint64_t, uint64_t))(v86 + 16))(v102, v69, v87);
  v54 = (*(unsigned __int8 *)(v30 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v60 = (v31 + *(unsigned __int8 *)(v27 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v61 = (v28 + *(unsigned __int8 *)(v34 + 80) + v60) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v63 = (v59 + *(unsigned __int8 *)(v35 + 80) + v61) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v66 = (v62 + *(unsigned __int8 *)(v36 + 80) + v63) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v69 = (v68 + *(unsigned __int8 *)(v37 + 80) + v66) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v39 = (char *)swift_allocObject();
  v40 = v58;
  *((_QWORD *)v39 + 2) = v83;
  *((_QWORD *)v39 + 3) = v40;
  v41 = v57;
  v42 = v80;
  *((_QWORD *)v39 + 4) = v57;
  *((_QWORD *)v39 + 5) = v42;
  v43 = v85;
  *((_QWORD *)v39 + 6) = v85;
  *((_QWORD *)v39 + 7) = v38;
  v71 = *(_QWORD *)(v71 + 80);
  *((_QWORD *)v39 + 8) = v71;
  v72 = *(_QWORD *)(v72 + 80);
  *((_QWORD *)v39 + 9) = v72;
  v73 = *(_QWORD *)(v73 + 80);
  *((_QWORD *)v39 + 10) = v73;
  v74 = *(_QWORD *)(v74 + 80);
  *((_QWORD *)v39 + 11) = v74;
  v75 = *(_QWORD *)(v75 + 80);
  v44 = v76;
  *((_QWORD *)v39 + 12) = v75;
  *((_QWORD *)v39 + 13) = v44;
  v45 = v78;
  *((_QWORD *)v39 + 14) = v77;
  *((_QWORD *)v39 + 15) = v45;
  *((_QWORD *)v39 + 16) = v90;
  (*(void (**)(char *, char *))(v55 + 32))(&v39[v54], v64);
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v39[v60], v65, v40);
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v39[v61], v67, v41);
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v39[v63], v88, v42);
  v46 = v43;
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v39[v66], v89, v43);
  v47 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v39[v69], v102, v87);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v91 = v83;
  v92 = v40;
  v93 = v41;
  v94 = v42;
  v95 = v46;
  v96 = v47;
  v48 = v71;
  v97 = v71;
  v98 = v72;
  v99 = v73;
  v100 = v74;
  v101 = v75;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v50 = (void *)sub_190AC06B8(v48, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v52 = v51;
  swift_release();

  return v52;
}

uint64_t sub_190BB0810(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t TupleTypeMetadata;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v75 = a8;
  v72 = a7;
  v92 = a5;
  v91 = a4;
  v90 = a3;
  v93 = a2;
  v83 = a1;
  v79 = a10;
  v74 = a9;
  v82 = a11;
  v94 = a15;
  v70 = a16;
  v100 = a17;
  v117 = a18;
  v86 = *a2;
  v87 = *a3;
  v88 = *a4;
  v89 = *a5;
  v101 = *(_QWORD *)(a18 - 8);
  v85 = *(_QWORD *)(v101 + 64);
  v18 = MEMORY[0x1E0C80A78](a1);
  v105 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = *(_QWORD *)(v20 - 8);
  v84 = *(_QWORD *)(v99 + 64);
  v21 = MEMORY[0x1E0C80A78](v18);
  v104 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = *(_QWORD *)(v23 - 8);
  v81 = *(_QWORD *)(v96 + 64);
  v24 = MEMORY[0x1E0C80A78](v21);
  v103 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = *(_QWORD *)(v26 - 8);
  v73 = *(_QWORD *)(v95 + 64);
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v29;
  v30 = *(_QWORD *)(a14 - 8);
  v69 = a14;
  v71 = *(_QWORD *)(v30 + 64);
  v31 = MEMORY[0x1E0C80A78](v27);
  v33 = (char *)&v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v33;
  v34 = *(_QWORD *)(a13 - 8);
  v97 = a13;
  v68 = *(_QWORD *)(v34 + 64);
  v35 = MEMORY[0x1E0C80A78](v31);
  v37 = (char *)&v65 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v37;
  v98 = a12;
  v38 = *(_QWORD *)(*(_QWORD *)(a12 - 8) + 64);
  v102 = *(_QWORD *)(a12 - 8);
  MEMORY[0x1E0C80A78](v35);
  v76 = (char *)&v65 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v39 + 16))();
  v40 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
  v66 = v34;
  v40(v37, v72, a13);
  v41 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
  v42 = v30;
  v67 = v30;
  v41(v33, v75, a14);
  v43 = v95;
  (*(void (**)(char *, unint64_t, uint64_t))(v95 + 16))(v29, v74, v94);
  v44 = v96;
  v45 = v70;
  (*(void (**)(char *, unint64_t, uint64_t))(v96 + 16))(v103, v79, v70);
  v46 = v99;
  v47 = v100;
  (*(void (**)(char *, unint64_t, uint64_t))(v99 + 16))(v104, v82, v100);
  v48 = v101;
  (*(void (**)(char *, unint64_t, uint64_t))(v101 + 16))(v105, v83, v117);
  v72 = (*(unsigned __int8 *)(v102 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  v74 = (v38 + *(unsigned __int8 *)(v34 + 80) + v72) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v75 = (v68 + *(unsigned __int8 *)(v42 + 80) + v74) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v79 = (v71 + *(unsigned __int8 *)(v43 + 80) + v75) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v82 = (v73 + *(unsigned __int8 *)(v44 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v83 = (v81 + *(unsigned __int8 *)(v46 + 80) + v82) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v84 = (v84 + *(unsigned __int8 *)(v48 + 80) + v83) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v49 = (char *)swift_allocObject();
  v50 = v97;
  *((_QWORD *)v49 + 2) = v98;
  *((_QWORD *)v49 + 3) = v50;
  v51 = v69;
  v52 = v94;
  *((_QWORD *)v49 + 4) = v69;
  *((_QWORD *)v49 + 5) = v52;
  *((_QWORD *)v49 + 6) = v45;
  *((_QWORD *)v49 + 7) = v47;
  *((_QWORD *)v49 + 8) = v117;
  v86 = *(_QWORD *)(v86 + 80);
  *((_QWORD *)v49 + 9) = v86;
  v87 = *(_QWORD *)(v87 + 80);
  *((_QWORD *)v49 + 10) = v87;
  v88 = *(_QWORD *)(v88 + 80);
  *((_QWORD *)v49 + 11) = v88;
  v89 = *(_QWORD *)(v89 + 80);
  v53 = v90;
  *((_QWORD *)v49 + 12) = v89;
  *((_QWORD *)v49 + 13) = v53;
  v54 = v92;
  *((_QWORD *)v49 + 14) = v91;
  *((_QWORD *)v49 + 15) = v54;
  (*(void (**)(char *, char *))(v102 + 32))(&v49[v72], v76);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v49[v74], v77, v50);
  v55 = v51;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v49[v75], v78, v51);
  v56 = v52;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(&v49[v79], v80, v52);
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(&v49[v82], v103, v45);
  v57 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(&v49[v83], v104, v100);
  v58 = v117;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(&v49[v84], v105, v117);
  swift_retain();
  swift_retain();
  swift_retain();
  v106 = v98;
  v107 = v97;
  v108 = v55;
  v109 = v56;
  v110 = v45;
  v111 = v57;
  v59 = v86;
  v112 = v58;
  v113 = v86;
  v114 = v87;
  v115 = v88;
  v116 = v89;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v61 = (void *)sub_190AC06B8(v59, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v63 = v62;
  swift_release();

  return v63;
}

uint64_t sub_190BB0F08(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, unint64_t, uint64_t);
  void (*v45)(char *, unint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t TupleTypeMetadata;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;

  v85 = a8;
  v78 = a7;
  v77 = a6;
  v95 = a4;
  v125 = a3;
  v96 = a2;
  v89 = a1;
  v86 = a10;
  v81 = a9;
  v87 = a11;
  v108 = a15;
  v99 = a16;
  v111 = a17;
  v104 = a18;
  v107 = a19;
  v92 = *a2;
  v93 = *a3;
  v94 = *a4;
  v106 = *(_QWORD *)(a19 - 8);
  v91 = *(_QWORD *)(v106 + 64);
  v19 = MEMORY[0x1E0C80A78](a1);
  v113 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *(_QWORD *)(v21 - 8);
  v90 = *(_QWORD *)(v103 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v112 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = *(_QWORD *)(v24 - 8);
  v88 = *(_QWORD *)(v100 + 64);
  v25 = MEMORY[0x1E0C80A78](v22);
  v110 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = *(_QWORD *)(v27 - 8);
  v82 = *(_QWORD *)(v98 + 64);
  v28 = MEMORY[0x1E0C80A78](v25);
  v109 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = *(_QWORD *)(v30 - 8);
  v76 = *(_QWORD *)(v97 + 64);
  v31 = MEMORY[0x1E0C80A78](v28);
  v33 = (char *)&v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v33;
  v34 = *(_QWORD *)(a14 - 8);
  v74 = a14;
  v75 = *(_QWORD *)(v34 + 64);
  v35 = MEMORY[0x1E0C80A78](v31);
  v37 = (char *)&v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v37;
  v101 = a13;
  v38 = *(_QWORD *)(a13 - 8);
  v73 = *(_QWORD *)(v38 + 64);
  v39 = MEMORY[0x1E0C80A78](v35);
  v41 = (char *)&v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v41;
  v102 = a12;
  v42 = *(_QWORD *)(*(_QWORD *)(a12 - 8) + 64);
  v105 = *(_QWORD *)(a12 - 8);
  MEMORY[0x1E0C80A78](v39);
  v79 = (char *)&v71 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v43 + 16))();
  v44 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
  v71 = v38;
  v44(v41, v77, a13);
  v45 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
  v46 = v34;
  v72 = v34;
  v45(v37, v78, a14);
  v47 = v97;
  (*(void (**)(char *, unint64_t, uint64_t))(v97 + 16))(v33, v85, v108);
  v48 = v98;
  (*(void (**)(char *, unint64_t, uint64_t))(v98 + 16))(v109, v81, v99);
  v49 = v100;
  (*(void (**)(char *, unint64_t, uint64_t))(v100 + 16))(v110, v86, v111);
  v50 = v103;
  v51 = v104;
  (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v112, v87, v104);
  v52 = v106;
  (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(v113, v89, v107);
  v77 = (*(unsigned __int8 *)(v105 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  v78 = (v42 + *(unsigned __int8 *)(v38 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v81 = (v73 + *(unsigned __int8 *)(v46 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v85 = (v75 + *(unsigned __int8 *)(v47 + 80) + v81) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v86 = (v76 + *(unsigned __int8 *)(v48 + 80) + v85) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v87 = (v82 + *(unsigned __int8 *)(v49 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v89 = (v88 + *(unsigned __int8 *)(v50 + 80) + v87) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v90 = (v90 + *(unsigned __int8 *)(v52 + 80) + v89) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v53 = (char *)swift_allocObject();
  v54 = v101;
  *((_QWORD *)v53 + 2) = v102;
  *((_QWORD *)v53 + 3) = v54;
  v55 = v74;
  v57 = v107;
  v56 = v108;
  *((_QWORD *)v53 + 4) = v74;
  *((_QWORD *)v53 + 5) = v56;
  v58 = v99;
  v59 = v111;
  *((_QWORD *)v53 + 6) = v99;
  *((_QWORD *)v53 + 7) = v59;
  *((_QWORD *)v53 + 8) = v51;
  *((_QWORD *)v53 + 9) = v57;
  v60 = *(_QWORD *)(v92 + 80);
  *((_QWORD *)v53 + 10) = v60;
  v93 = *(_QWORD *)(v93 + 80);
  *((_QWORD *)v53 + 11) = v93;
  v94 = *(_QWORD *)(v94 + 80);
  v61 = v125;
  *((_QWORD *)v53 + 12) = v94;
  *((_QWORD *)v53 + 13) = v61;
  *((_QWORD *)v53 + 14) = v95;
  (*(void (**)(char *, char *))(v105 + 32))(&v53[v77], v79);
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v53[v78], v80, v54);
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v53[v81], v83, v55);
  v62 = v56;
  (*(void (**)(char *, char *, uint64_t))(v97 + 32))(&v53[v85], v84, v56);
  v63 = v58;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v53[v86], v109, v58);
  v64 = v59;
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(&v53[v87], v110, v59);
  v65 = v104;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(&v53[v89], v112, v104);
  (*(void (**)(char *, char *, uint64_t))(v106 + 32))(&v53[v90], v113, v57);
  swift_retain();
  swift_retain();
  v114 = v102;
  v115 = v101;
  v116 = v55;
  v117 = v62;
  v118 = v63;
  v119 = v64;
  v120 = v65;
  v121 = v57;
  v122 = v60;
  v123 = v93;
  v124 = v94;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v67 = (void *)sub_190AC06B8(v60, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v69 = v68;
  swift_release();

  return v69;
}

uint64_t sub_190BB1688(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, unint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, unint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t TupleTypeMetadata;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v95 = a8;
  v93 = a7;
  v80 = a6;
  v87 = a5;
  v105 = a3;
  v106 = a2;
  v100 = a1;
  v97 = a10;
  v94 = a9;
  v98 = a11;
  v125 = a14;
  v119 = a16;
  v121 = a17;
  v112 = a18;
  v115 = a19;
  v137 = a20;
  v103 = *a2;
  v104 = *a3;
  v117 = *(_QWORD *)(a20 - 8);
  v102 = *(_QWORD *)(v117 + 64);
  v20 = MEMORY[0x1E0C80A78](a12);
  v124 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = *(_QWORD *)(a19 - 8);
  v101 = *(_QWORD *)(v113 + 64);
  v22 = v101;
  v23 = MEMORY[0x1E0C80A78](v20);
  v123 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = *(_QWORD *)(v24 - 8);
  v99 = *(_QWORD *)(v110 + 64);
  v25 = MEMORY[0x1E0C80A78](v23);
  v122 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = *(_QWORD *)(v27 - 8);
  v96 = *(_QWORD *)(v108 + 64);
  v28 = MEMORY[0x1E0C80A78](v25);
  v120 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = *(_QWORD *)(v30 - 8);
  v88 = *(_QWORD *)(v107 + 64);
  v31 = MEMORY[0x1E0C80A78](v28);
  v118 = (char *)&v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(a15 - 8);
  v84 = a15;
  v86 = *(_QWORD *)(v33 + 64);
  v34 = v33;
  v35 = MEMORY[0x1E0C80A78](v31);
  v37 = (char *)&v79 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v37;
  v39 = *(_QWORD *)(v38 - 8);
  v85 = *(_QWORD *)(v39 + 64);
  v40 = MEMORY[0x1E0C80A78](v35);
  v42 = (char *)&v79 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v42;
  v109 = a13;
  v43 = *(_QWORD *)(a13 - 8);
  v83 = *(_QWORD *)(v43 + 64);
  v116 = v43;
  v44 = MEMORY[0x1E0C80A78](v40);
  v46 = (char *)&v79 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = v46;
  v111 = v44;
  v47 = *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64);
  v114 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v89 = (char *)&v79 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v48 + 16))();
  (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v46, v87, a13);
  v49 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
  v50 = v39;
  v81 = v39;
  v49(v42, v80, v125);
  v51 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
  v52 = v34;
  v82 = v34;
  v51(v37, v93, a15);
  v53 = v107;
  (*(void (**)(char *, unint64_t, uint64_t))(v107 + 16))(v118, v95, v119);
  v54 = v108;
  (*(void (**)(char *, unint64_t, uint64_t))(v108 + 16))(v120, v94, v121);
  v55 = v110;
  v56 = v112;
  (*(void (**)(char *, unint64_t, uint64_t))(v110 + 16))(v122, v97, v112);
  v57 = v113;
  (*(void (**)(char *, unint64_t, uint64_t))(v113 + 16))(v123, v98, v115);
  v58 = v117;
  (*(void (**)(char *, unint64_t, uint64_t))(v117 + 16))(v124, v100, v137);
  v80 = (*(unsigned __int8 *)(v114 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
  v87 = (v47 + *(unsigned __int8 *)(v116 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  v93 = (v83 + *(unsigned __int8 *)(v50 + 80) + v87) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v94 = (v85 + *(unsigned __int8 *)(v52 + 80) + v93) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v95 = (v86 + *(unsigned __int8 *)(v53 + 80) + v94) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v97 = (v88 + *(unsigned __int8 *)(v54 + 80) + v95) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v98 = (v96 + *(unsigned __int8 *)(v55 + 80) + v97) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v100 = (v99 + *(unsigned __int8 *)(v57 + 80) + v98) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v101 = (v101 + *(unsigned __int8 *)(v58 + 80) + v100) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v59 = (char *)swift_allocObject();
  v60 = v109;
  *((_QWORD *)v59 + 2) = v111;
  *((_QWORD *)v59 + 3) = v60;
  v61 = v125;
  v62 = v84;
  *((_QWORD *)v59 + 4) = v125;
  *((_QWORD *)v59 + 5) = v62;
  v63 = v119;
  v64 = v121;
  *((_QWORD *)v59 + 6) = v119;
  *((_QWORD *)v59 + 7) = v64;
  *((_QWORD *)v59 + 8) = v56;
  v65 = v115;
  v66 = v137;
  *((_QWORD *)v59 + 9) = v115;
  *((_QWORD *)v59 + 10) = v66;
  v67 = *(_QWORD *)(v103 + 80);
  *((_QWORD *)v59 + 11) = v67;
  v104 = *(_QWORD *)(v104 + 80);
  v68 = v105;
  *((_QWORD *)v59 + 12) = v104;
  *((_QWORD *)v59 + 13) = v68;
  (*(void (**)(char *, char *))(v114 + 32))(&v59[v80], v89);
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v59[v87], v90, v60);
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v59[v93], v91, v61);
  v69 = v62;
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v59[v94], v92, v62);
  v70 = v63;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(&v59[v95], v118, v63);
  v71 = v64;
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v59[v97], v120, v64);
  v72 = v112;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(&v59[v98], v122, v112);
  (*(void (**)(char *, char *, uint64_t))(v113 + 32))(&v59[v100], v123, v65);
  v73 = v137;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(&v59[v101], v124, v137);
  swift_retain();
  v126 = v111;
  v127 = v109;
  v128 = v125;
  v129 = v69;
  v130 = v70;
  v131 = v71;
  v132 = v72;
  v133 = v65;
  v134 = v73;
  v135 = v67;
  v136 = v104;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v75 = (void *)sub_190AC06B8(v67, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v77 = v76;
  swift_release();

  return v77;
}

uint64_t sub_190BB1EA8(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, unint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t TupleTypeMetadata;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v98 = a8;
  v96 = a7;
  v93 = a6;
  v89 = a5;
  v107 = a2;
  v102 = a1;
  v99 = a10;
  v97 = a9;
  v101 = a11;
  v119 = a15;
  v124 = a16;
  v126 = a17;
  v112 = a18;
  v116 = a19;
  v121 = a20;
  v142 = a21;
  v106 = *a2;
  v122 = *(_QWORD *)(a21 - 8);
  v105 = *(_QWORD *)(v122 + 64);
  v22 = MEMORY[0x1E0C80A78](a1);
  v130 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = *(_QWORD *)(a20 - 8);
  v104 = *(_QWORD *)(v120 + 64);
  v24 = v104;
  v25 = MEMORY[0x1E0C80A78](v22);
  v129 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = *(_QWORD *)(v26 - 8);
  v103 = *(_QWORD *)(v115 + 64);
  v27 = MEMORY[0x1E0C80A78](v25);
  v128 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = *(_QWORD *)(v29 - 8);
  v100 = *(_QWORD *)(v111 + 64);
  v30 = MEMORY[0x1E0C80A78](v27);
  v127 = (char *)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = *(_QWORD *)(v32 - 8);
  v95 = *(_QWORD *)(v110 + 64);
  v33 = MEMORY[0x1E0C80A78](v30);
  v125 = (char *)&v82 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = *(_QWORD *)(v35 - 8);
  v88 = *(_QWORD *)(v109 + 64);
  v36 = MEMORY[0x1E0C80A78](v33);
  v123 = (char *)&v82 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = *(_QWORD *)(v38 - 8);
  v87 = *(_QWORD *)(v108 + 64);
  v39 = MEMORY[0x1E0C80A78](v36);
  v41 = (char *)&v82 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v41;
  v42 = *(_QWORD *)(a14 - 8);
  v86 = a14;
  v85 = *(_QWORD *)(v42 + 64);
  v43 = MEMORY[0x1E0C80A78](v39);
  v45 = (char *)&v82 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v45;
  v113 = a13;
  v46 = *(_QWORD *)(a13 - 8);
  v84 = *(_QWORD *)(v46 + 64);
  v118 = v46;
  v47 = MEMORY[0x1E0C80A78](v43);
  v49 = (char *)&v82 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v49;
  v114 = v50;
  v51 = *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64);
  v117 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v47);
  v90 = (char *)&v82 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v52 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v49, a4, a13);
  v53 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
  v54 = v42;
  v83 = v42;
  v53(v45, v89, a14);
  v55 = v108;
  (*(void (**)(char *, unint64_t, uint64_t))(v108 + 16))(v41, v93, v119);
  v56 = v109;
  (*(void (**)(char *, unint64_t, uint64_t))(v109 + 16))(v123, v96, v124);
  v57 = v110;
  (*(void (**)(char *, unint64_t, uint64_t))(v110 + 16))(v125, v98, v126);
  v58 = v111;
  (*(void (**)(char *, unint64_t, uint64_t))(v111 + 16))(v127, v97, v112);
  v59 = v115;
  (*(void (**)(char *, unint64_t, uint64_t))(v115 + 16))(v128, v99, v116);
  v60 = v120;
  (*(void (**)(char *, unint64_t, uint64_t))(v120 + 16))(v129, v101, v121);
  v61 = v122;
  (*(void (**)(char *, unint64_t, uint64_t))(v122 + 16))(v130, v102, v142);
  v89 = (*(unsigned __int8 *)(v117 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
  v93 = (v51 + *(unsigned __int8 *)(v118 + 80) + v89) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
  v96 = (v84 + *(unsigned __int8 *)(v54 + 80) + v93) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v97 = (v85 + *(unsigned __int8 *)(v55 + 80) + v96) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v98 = (v87 + *(unsigned __int8 *)(v56 + 80) + v97) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v99 = (v88 + *(unsigned __int8 *)(v57 + 80) + v98) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v101 = (v95 + *(unsigned __int8 *)(v58 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v102 = (v100 + *(unsigned __int8 *)(v59 + 80) + v101) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v103 = (v103 + *(unsigned __int8 *)(v60 + 80) + v102) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v104 = (v104 + *(unsigned __int8 *)(v61 + 80) + v103) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v62 = (char *)swift_allocObject();
  v63 = v113;
  *((_QWORD *)v62 + 2) = v114;
  *((_QWORD *)v62 + 3) = v63;
  v64 = v86;
  v65 = v119;
  *((_QWORD *)v62 + 4) = v86;
  *((_QWORD *)v62 + 5) = v65;
  v66 = v124;
  v67 = v126;
  *((_QWORD *)v62 + 6) = v124;
  *((_QWORD *)v62 + 7) = v67;
  v68 = v112;
  v69 = v116;
  *((_QWORD *)v62 + 8) = v112;
  *((_QWORD *)v62 + 9) = v69;
  v70 = v121;
  v71 = v142;
  *((_QWORD *)v62 + 10) = v121;
  *((_QWORD *)v62 + 11) = v71;
  v106 = *(_QWORD *)(v106 + 80);
  *((_QWORD *)v62 + 12) = v106;
  (*(void (**)(char *, char *))(v117 + 32))(&v62[v89], v90);
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v62[v93], v91, v63);
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(&v62[v96], v92, v64);
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v62[v97], v94, v65);
  v72 = v66;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v62[v98], v123, v66);
  v73 = v67;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(&v62[v99], v125, v67);
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(&v62[v101], v127, v68);
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v62[v102], v128, v69);
  v74 = v70;
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(&v62[v103], v129, v70);
  v75 = v142;
  (*(void (**)(char *, char *, uint64_t))(v122 + 32))(&v62[v104], v130, v142);
  v131 = v114;
  v132 = v113;
  v133 = v64;
  v134 = v65;
  v135 = v72;
  v136 = v73;
  v137 = v68;
  v138 = v69;
  v139 = v74;
  v140 = v75;
  v76 = v106;
  v141 = v106;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v78 = (void *)sub_190AC06B8(v76, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v80 = v79;
  swift_release();

  return v80;
}

uint64_t sub_190BB2750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int *TupleTypeMetadata;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v38;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v25 = a9 + TupleTypeMetadata[12];
  v26 = a9 + TupleTypeMetadata[16];
  v28 = a9 + TupleTypeMetadata[20];
  v29 = a9 + TupleTypeMetadata[24];
  v30 = a9 + TupleTypeMetadata[28];
  v31 = a9 + TupleTypeMetadata[32];
  v33 = a9 + TupleTypeMetadata[36];
  v34 = a9 + TupleTypeMetadata[40];
  v36 = a9 + TupleTypeMetadata[44];
  v38 = a9 + TupleTypeMetadata[48];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a13 - 8) + 16))(a9, a2, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 16))(v25, a3, a14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 16))(v26, a4, a15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 16))(v28, a5, a16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a17 - 8) + 16))(v29, a6, a17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v30, a7, a18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 16))(v31, a8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 16))(v33, a10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a21 - 8) + 16))(v34, a11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a22 - 8) + 16))(v36, a12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a23 - 8) + 16))(v38, a1);
}

uint64_t *combine<A, B, C, D, E, F, G, H, I, J, K, L>(_:_:_:_:_:_:_:_:_:_:_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v23;

  v23 = *a1;
  OUTLINED_FUNCTION_154_0();
  OUTLINED_FUNCTION_153_0();
  v17 = (_QWORD *)OUTLINED_FUNCTION_24();
  v17[2] = *(_QWORD *)(v23 + 80);
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = a6;
  v17[8] = a7;
  v17[9] = a8;
  v17[10] = a9;
  v17[11] = a10;
  v17[12] = a11;
  v17[13] = a12;
  swift_retain();
  OUTLINED_FUNCTION_34_1();
  swift_retain();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_66_6();
  v18 = OUTLINED_FUNCTION_46_10();
  v19 = (void *)OUTLINED_FUNCTION_94_3(v18);
  OUTLINED_FUNCTION_166();
  Promise.then<A>(on:closure:)();
  OUTLINED_FUNCTION_3_49();

  return a1;
}

uint64_t sub_190BB2B60(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t *a5, _QWORD *a6, _QWORD *a7, uint64_t *a8, _QWORD *a9, uint64_t *a10, _QWORD *a11, _QWORD *a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t TupleTypeMetadata;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[4];
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  v66 = a7;
  v38 = a6;
  v37 = a4;
  v36 = a3;
  v52 = a2;
  v53 = a12;
  v40 = a11;
  v39 = a9;
  v13 = *a2;
  v50 = *a3;
  v51 = v13;
  v14 = *a4;
  v48 = *a5;
  v49 = v14;
  v35[1] = a5;
  v16 = *a6;
  v46 = *a7;
  v47 = v16;
  v45 = *a8;
  v35[2] = a8;
  v44 = *a9;
  v43 = *a10;
  v35[3] = a10;
  v42 = *a11;
  v41 = *a12;
  v18 = *(_QWORD *)(a13 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](a1);
  v20 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v18 + 16))(v20, v23);
  v24 = (*(unsigned __int8 *)(v18 + 80) + 192) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = v22;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v25 + 3) = v51;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v25 + 4) = v50;
  v49 = *(_QWORD *)(v49 + 80);
  *((_QWORD *)v25 + 5) = v49;
  v48 = *(_QWORD *)(v48 + 80);
  *((_QWORD *)v25 + 6) = v48;
  v47 = *(_QWORD *)(v47 + 80);
  *((_QWORD *)v25 + 7) = v47;
  v46 = *(_QWORD *)(v46 + 80);
  *((_QWORD *)v25 + 8) = v46;
  v45 = *(_QWORD *)(v45 + 80);
  *((_QWORD *)v25 + 9) = v45;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v25 + 10) = v44;
  v43 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v25 + 11) = v43;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v25 + 12) = v42;
  v41 = *(_QWORD *)(v41 + 80);
  v26 = v36;
  *((_QWORD *)v25 + 13) = v41;
  *((_QWORD *)v25 + 14) = v26;
  *((_QWORD *)v25 + 15) = v37;
  *((_QWORD *)v25 + 16) = a5;
  v27 = v66;
  *((_QWORD *)v25 + 17) = v38;
  *((_QWORD *)v25 + 18) = v27;
  *((_QWORD *)v25 + 19) = a8;
  *((_QWORD *)v25 + 20) = v39;
  *((_QWORD *)v25 + 21) = a10;
  v28 = v53;
  *((_QWORD *)v25 + 22) = v40;
  *((_QWORD *)v25 + 23) = v28;
  (*(void (**)(char *, char *))(v18 + 32))(&v25[v24], v20);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v29 = v51;
  v54 = v22;
  v55 = v51;
  v56 = v50;
  v57 = v49;
  v58 = v48;
  v59 = v47;
  v60 = v46;
  v61 = v45;
  v62 = v44;
  v63 = v43;
  v64 = v42;
  v65 = v41;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v31 = (void *)sub_190AC06B8(v29, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v33 = v32;
  swift_release();

  return v33;
}

uint64_t sub_190BB2F18()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  return swift_deallocObject();
}

void sub_190BB2F60()
{
  _QWORD **v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_121_2();
  sub_190BB2B60(v1, v2, v3, v4, v5, v6, v7, v8, v0[10], v0[11], v0[12], v0[13], v9);
  OUTLINED_FUNCTION_77_5();
}

uint64_t sub_190BB2F88(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, _QWORD *a9, _QWORD *a10, _QWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t TupleTypeMetadata;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v58 = a8;
  v53 = a6;
  v54 = a7;
  v52 = a5;
  v51 = a4;
  v59 = a3;
  v57 = a2;
  v72 = a11;
  v55 = a9;
  v56 = a10;
  v50 = *a2;
  v49 = *a3;
  v48 = *a4;
  v47 = *a5;
  v46 = *a6;
  v44 = *a7;
  v42 = *a8;
  v41 = *a9;
  v43 = *a10;
  v45 = *a11;
  v15 = *(_QWORD *)(a14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a13 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v20);
  v39 = v15;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v36 = a14;
  v21((char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a14);
  v37 = (*(unsigned __int8 *)(v18 + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v38 = (v19 + *(unsigned __int8 *)(v15 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a13;
  *((_QWORD *)v22 + 3) = a14;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v22 + 4) = v50;
  v49 = *(_QWORD *)(v49 + 80);
  *((_QWORD *)v22 + 5) = v49;
  v48 = *(_QWORD *)(v48 + 80);
  *((_QWORD *)v22 + 6) = v48;
  v47 = *(_QWORD *)(v47 + 80);
  *((_QWORD *)v22 + 7) = v47;
  v46 = *(_QWORD *)(v46 + 80);
  *((_QWORD *)v22 + 8) = v46;
  v44 = *(_QWORD *)(v44 + 80);
  *((_QWORD *)v22 + 9) = v44;
  v42 = *(_QWORD *)(v42 + 80);
  *((_QWORD *)v22 + 10) = v42;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v22 + 11) = v41;
  v43 = *(_QWORD *)(v43 + 80);
  *((_QWORD *)v22 + 12) = v43;
  v45 = *(_QWORD *)(v45 + 80);
  v23 = v59;
  *((_QWORD *)v22 + 13) = v45;
  *((_QWORD *)v22 + 14) = v23;
  v24 = v52;
  v25 = v53;
  *((_QWORD *)v22 + 15) = v51;
  *((_QWORD *)v22 + 16) = v24;
  v26 = v54;
  v27 = v55;
  *((_QWORD *)v22 + 17) = v25;
  *((_QWORD *)v22 + 18) = v26;
  *((_QWORD *)v22 + 19) = v58;
  *((_QWORD *)v22 + 20) = v27;
  v28 = v72;
  *((_QWORD *)v22 + 21) = v56;
  *((_QWORD *)v22 + 22) = v28;
  (*(void (**)(char *, char *))(v18 + 32))(&v22[v37], v20);
  v29 = v36;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v22[v38], v40, v36);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v60 = a13;
  v61 = v29;
  v30 = v50;
  v62 = v50;
  v63 = v49;
  v64 = v48;
  v65 = v47;
  v66 = v46;
  v67 = v44;
  v68 = v42;
  v69 = v41;
  v70 = v43;
  v71 = v45;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v32 = (void *)sub_190AC06B8(v30, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v34 = v33;
  swift_release();

  return v34;
}

uint64_t sub_190BB33D4()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_146_0();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

void sub_190BB3434()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_106_2();
  OUTLINED_FUNCTION_143_0();
  sub_190BB2F88(v2, v3, v4, v5, v6, v7, v8, v0[20], v0[21], v0[22], v0[23], (uint64_t)v0 + v1, v9, v10);
  OUTLINED_FUNCTION_77_5();
}

uint64_t sub_190BB3478(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, _QWORD *a9, _QWORD *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  void (*v34)(char *, char *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t TupleTypeMetadata;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;

  v61 = a7;
  v62 = a8;
  v67 = a6;
  v60 = a5;
  v68 = a4;
  v59 = a3;
  v64 = a2;
  v46 = a1;
  v44 = a12;
  v65 = a15;
  v81 = a10;
  v63 = a9;
  v50 = *a2;
  v51 = *a3;
  v52 = *a4;
  v53 = *a5;
  v54 = *a6;
  v55 = *a7;
  v56 = *a8;
  v57 = *a9;
  v58 = *a10;
  v66 = *(_QWORD *)(a15 - 8);
  v15 = *(_QWORD *)(v66 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v49 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a14 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x1E0C80A78](v16);
  v48 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v20 - 8);
  v43 = v20;
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v19);
  v47 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v21 + 16))();
  v23 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
  v45 = v17;
  v23((char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v44, a14);
  v24 = v66;
  v25 = v65;
  (*(void (**)(char *, unint64_t))(v66 + 16))((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v46);
  v44 = (*(unsigned __int8 *)(v21 + 80) + 176) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v26 = (v22 + *(unsigned __int8 *)(v17 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v46 = (v18 + *(unsigned __int8 *)(v24 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v27 = (char *)swift_allocObject();
  v28 = v43;
  *((_QWORD *)v27 + 2) = v43;
  *((_QWORD *)v27 + 3) = a14;
  *((_QWORD *)v27 + 4) = v25;
  v50 = *(_QWORD *)(v50 + 80);
  *((_QWORD *)v27 + 5) = v50;
  v51 = *(_QWORD *)(v51 + 80);
  *((_QWORD *)v27 + 6) = v51;
  v52 = *(_QWORD *)(v52 + 80);
  *((_QWORD *)v27 + 7) = v52;
  v53 = *(_QWORD *)(v53 + 80);
  *((_QWORD *)v27 + 8) = v53;
  v54 = *(_QWORD *)(v54 + 80);
  *((_QWORD *)v27 + 9) = v54;
  v55 = *(_QWORD *)(v55 + 80);
  *((_QWORD *)v27 + 10) = v55;
  v56 = *(_QWORD *)(v56 + 80);
  *((_QWORD *)v27 + 11) = v56;
  v57 = *(_QWORD *)(v57 + 80);
  *((_QWORD *)v27 + 12) = v57;
  v58 = *(_QWORD *)(v58 + 80);
  v29 = v59;
  *((_QWORD *)v27 + 13) = v58;
  *((_QWORD *)v27 + 14) = v29;
  v30 = v60;
  *((_QWORD *)v27 + 15) = v68;
  *((_QWORD *)v27 + 16) = v30;
  v31 = v61;
  v32 = v62;
  *((_QWORD *)v27 + 17) = v67;
  *((_QWORD *)v27 + 18) = v31;
  v33 = v63;
  *((_QWORD *)v27 + 19) = v32;
  *((_QWORD *)v27 + 20) = v33;
  *((_QWORD *)v27 + 21) = v81;
  v34 = *(void (**)(char *, char *))(v21 + 32);
  v35 = v28;
  v34(&v27[v44], v47);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v27[v26], v48, a14);
  v36 = v65;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v27[v46], v49, v65);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v69 = v35;
  v70 = a14;
  v71 = v36;
  v37 = v50;
  v72 = v50;
  v73 = v51;
  v74 = v52;
  v75 = v53;
  v76 = v54;
  v77 = v55;
  v78 = v56;
  v79 = v57;
  v80 = v58;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v39 = (void *)sub_190AC06B8(v37, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v41 = v40;
  swift_release();

  return v41;
}

uint64_t sub_190BB394C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_72();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v4 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_146_0();
  swift_release();
  OUTLINED_FUNCTION_11_9(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_15_1(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

void sub_190BB39E8()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_143_0();
  sub_190BB3478(v3, v4, v5, v6, v7, v8, v9, v0[20], v0[21], v0[22], (uint64_t)v0 + v2, (unint64_t)v0 + v1, v10, v11, v12);
  OUTLINED_FUNCTION_125_0();
}

uint64_t sub_190BB3A30(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, _QWORD *a9, uint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  void (*v43)(char *, char *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t TupleTypeMetadata;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;

  v74 = a7;
  v75 = a8;
  v80 = a6;
  v73 = a5;
  v81 = a4;
  v72 = a3;
  v76 = a2;
  v58 = a1;
  v57 = a12;
  v55 = a11;
  v52 = a15;
  v78 = a16;
  v94 = a9;
  v64 = *a2;
  v65 = *a3;
  v66 = *a4;
  v67 = *a5;
  v68 = *a6;
  v69 = *a7;
  v70 = *a8;
  v71 = *a9;
  v79 = *(_QWORD *)(a16 - 8);
  v59 = *(_QWORD *)(v79 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v18;
  v77 = *(_QWORD *)(v19 - 8);
  v56 = *(_QWORD *)(v77 + 64);
  v20 = MEMORY[0x1E0C80A78](v16);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v22;
  v23 = *(_QWORD *)(a14 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  v25 = MEMORY[0x1E0C80A78](v20);
  v61 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  MEMORY[0x1E0C80A78](v25);
  v60 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v27 + 16))();
  v29 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
  v54 = v23;
  v29((char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v55, a14);
  v30 = v77;
  v31 = v52;
  (*(void (**)(char *, unint64_t, uint64_t))(v77 + 16))(v22, v57, v52);
  v32 = v79;
  v33 = v18;
  v34 = v78;
  (*(void (**)(char *, unint64_t))(v79 + 16))(v33, v58);
  v55 = (*(unsigned __int8 *)(v27 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v57 = (v28 + *(unsigned __int8 *)(v23 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v35 = (v24 + *(unsigned __int8 *)(v30 + 80) + v57) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v58 = (v56 + *(unsigned __int8 *)(v32 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v36 = (char *)swift_allocObject();
  v37 = v53;
  *((_QWORD *)v36 + 2) = v53;
  *((_QWORD *)v36 + 3) = a14;
  *((_QWORD *)v36 + 4) = v31;
  *((_QWORD *)v36 + 5) = v34;
  v64 = *(_QWORD *)(v64 + 80);
  *((_QWORD *)v36 + 6) = v64;
  v65 = *(_QWORD *)(v65 + 80);
  *((_QWORD *)v36 + 7) = v65;
  v66 = *(_QWORD *)(v66 + 80);
  *((_QWORD *)v36 + 8) = v66;
  v67 = *(_QWORD *)(v67 + 80);
  *((_QWORD *)v36 + 9) = v67;
  v68 = *(_QWORD *)(v68 + 80);
  *((_QWORD *)v36 + 10) = v68;
  v69 = *(_QWORD *)(v69 + 80);
  *((_QWORD *)v36 + 11) = v69;
  v70 = *(_QWORD *)(v70 + 80);
  *((_QWORD *)v36 + 12) = v70;
  v71 = *(_QWORD *)(v71 + 80);
  v38 = v72;
  *((_QWORD *)v36 + 13) = v71;
  *((_QWORD *)v36 + 14) = v38;
  v39 = v73;
  *((_QWORD *)v36 + 15) = v81;
  *((_QWORD *)v36 + 16) = v39;
  v41 = v74;
  v40 = v75;
  *((_QWORD *)v36 + 17) = v80;
  *((_QWORD *)v36 + 18) = v41;
  v42 = v94;
  *((_QWORD *)v36 + 19) = v40;
  *((_QWORD *)v36 + 20) = v42;
  v43 = *(void (**)(char *, char *))(v27 + 32);
  v44 = v37;
  v43(&v36[v55], v60);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v36[v57], v61, a14);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v36[v35], v62, v31);
  v45 = v78;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v36[v58], v63, v78);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v82 = v44;
  v83 = a14;
  v84 = v31;
  v85 = v45;
  v46 = v64;
  v86 = v64;
  v87 = v65;
  v88 = v66;
  v89 = v67;
  v90 = v68;
  v91 = v69;
  v92 = v70;
  v93 = v71;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v48 = (void *)sub_190AC06B8(v46, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v50 = v49;
  swift_release();

  return v50;
}

uint64_t sub_190BB3F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_165_0();
  v5 = (v4 + 176) & ~v4;
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (v5 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v0 - 8);
  v9 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  OUTLINED_FUNCTION_19_26();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_26_0(v1 + v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_11_9(v1 + v7, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_15_1(v1 + v9, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BB4038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_9_40();
  OUTLINED_FUNCTION_143_0();
  sub_190BB3A30(v4, v5, v6, v7, v8, v9, v10, *(_QWORD **)(v0 + 160), *(_QWORD **)(v0 + 168), v0 + v1, v0 + v2, v0 + v3, v11, v12, v13, v14);
  OUTLINED_FUNCTION_125_0();
}

uint64_t sub_190BB4080(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, uint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t TupleTypeMetadata;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;

  v84 = a8;
  v75 = a7;
  v74 = a6;
  v73 = a5;
  v98 = a4;
  v72 = a3;
  v76 = a2;
  v63 = a1;
  v59 = a12;
  v57 = a11;
  v56 = a10;
  v78 = a16;
  v82 = a17;
  v65 = *a2;
  v66 = *a3;
  v67 = *a4;
  v68 = *a5;
  v69 = *a6;
  v70 = *a7;
  v71 = *a8;
  v81 = *(_QWORD *)(a17 - 8);
  v64 = *(_QWORD *)(v81 + 64);
  v17 = MEMORY[0x1E0C80A78](a1);
  v85 = (char *)&v52 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = *(_QWORD *)(v18 - 8);
  v58 = *(_QWORD *)(v80 + 64);
  v19 = MEMORY[0x1E0C80A78](v17);
  v83 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = *(_QWORD *)(a15 - 8);
  v52 = a15;
  v55 = *(_QWORD *)(v79 + 64);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v23;
  v24 = *(_QWORD *)(a14 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  v26 = MEMORY[0x1E0C80A78](v21);
  v61 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  MEMORY[0x1E0C80A78](v26);
  v60 = (char *)&v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(void (**)(void))(v28 + 16);
  v53 = v28;
  v30();
  v31 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
  v54 = v24;
  v31((char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v56, a14);
  v32 = v79;
  (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v23, v57, a15);
  v33 = v80;
  v34 = v78;
  (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v83, v59, v78);
  v35 = v81;
  (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v85, v63, v82);
  v56 = (*(unsigned __int8 *)(v28 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v57 = (v29 + *(unsigned __int8 *)(v24 + 80) + v56) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v36 = (v25 + *(unsigned __int8 *)(v32 + 80) + v57) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v59 = (v55 + *(unsigned __int8 *)(v33 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v63 = (v58 + *(unsigned __int8 *)(v35 + 80) + v59) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v37 = (char *)swift_allocObject();
  *((_QWORD *)v37 + 2) = v77;
  *((_QWORD *)v37 + 3) = a14;
  v38 = v52;
  *((_QWORD *)v37 + 4) = v52;
  *((_QWORD *)v37 + 5) = v34;
  v39 = v82;
  *((_QWORD *)v37 + 6) = v82;
  v65 = *(_QWORD *)(v65 + 80);
  *((_QWORD *)v37 + 7) = v65;
  v66 = *(_QWORD *)(v66 + 80);
  *((_QWORD *)v37 + 8) = v66;
  v67 = *(_QWORD *)(v67 + 80);
  *((_QWORD *)v37 + 9) = v67;
  v68 = *(_QWORD *)(v68 + 80);
  *((_QWORD *)v37 + 10) = v68;
  v69 = *(_QWORD *)(v69 + 80);
  *((_QWORD *)v37 + 11) = v69;
  v70 = *(_QWORD *)(v70 + 80);
  *((_QWORD *)v37 + 12) = v70;
  v71 = *(_QWORD *)(v71 + 80);
  v40 = v72;
  *((_QWORD *)v37 + 13) = v71;
  *((_QWORD *)v37 + 14) = v40;
  v41 = v73;
  *((_QWORD *)v37 + 15) = v98;
  *((_QWORD *)v37 + 16) = v41;
  v42 = v75;
  *((_QWORD *)v37 + 17) = v74;
  *((_QWORD *)v37 + 18) = v42;
  *((_QWORD *)v37 + 19) = v84;
  (*(void (**)(char *, char *))(v53 + 32))(&v37[v56], v60);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v37[v57], v61, a14);
  v43 = &v37[v36];
  v44 = v38;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v43, v62, v38);
  v45 = v78;
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v37[v59], v83, v78);
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v37[v63], v85, v39);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v86 = v77;
  v87 = a14;
  v88 = v44;
  v89 = v45;
  v46 = v65;
  v90 = v39;
  v91 = v65;
  v92 = v66;
  v93 = v67;
  v94 = v68;
  v95 = v69;
  v96 = v70;
  v97 = v71;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v48 = (void *)sub_190AC06B8(v46, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v50 = v49;
  swift_release();

  return v50;
}

#error "190BB46D0: call analysis failed (funcsize=28)"

uint64_t sub_190BB46F8()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_112();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  return sub_190BB4080(v9, v0[14], v0[15], v0[16], v0[17], v0[18], v0[19], v0[20], (uint64_t)v0 + v8, (unint64_t)v0 + v3, (unint64_t)v0 + v4, (unint64_t)v0 + ((v4 + *(_QWORD *)(v5 + 64) + v7) & ~v7), v10, v11, v12, v6, v13);
}

uint64_t sub_190BB4784(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, uint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  void (*v37)(char *, unint64_t, uint64_t);
  void (*v38)(char *, unint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v99 = a7;
  v86 = a6;
  v85 = a5;
  v84 = a4;
  v83 = a3;
  v87 = a2;
  v75 = a1;
  v73 = a12;
  v69 = a11;
  v67 = a10;
  v66 = a9;
  v96 = a15;
  v88 = a16;
  v93 = a17;
  v112 = a18;
  v77 = *a2;
  v78 = *a3;
  v79 = *a4;
  v80 = *a5;
  v81 = *a6;
  v82 = *a7;
  v94 = *(_QWORD *)(a18 - 8);
  v76 = *(_QWORD *)(v94 + 64);
  v18 = MEMORY[0x1E0C80A78](v76);
  v98 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = *(_QWORD *)(v19 - 8);
  v74 = *(_QWORD *)(v92 + 64);
  v20 = MEMORY[0x1E0C80A78](v18);
  v97 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = *(_QWORD *)(v22 - 8);
  v68 = *(_QWORD *)(v90 + 64);
  v23 = MEMORY[0x1E0C80A78](v20);
  v95 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v25 - 8);
  v65 = *(_QWORD *)(v26 + 64);
  v27 = v26;
  v28 = MEMORY[0x1E0C80A78](v23);
  v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v30;
  v31 = *(_QWORD *)(a14 - 8);
  v89 = a14;
  v32 = *(_QWORD *)(v31 + 64);
  v33 = MEMORY[0x1E0C80A78](v28);
  v71 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = a13;
  v34 = *(_QWORD *)(a13 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  MEMORY[0x1E0C80A78](v33);
  v70 = (char *)&v62 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(void (**)(void))(v34 + 16);
  v62 = v34;
  v36();
  v37 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
  v63 = v31;
  v37((char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v66, a14);
  v38 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
  v39 = v27;
  v64 = v27;
  v38(v30, v67, v96);
  v40 = v90;
  (*(void (**)(char *, unint64_t, uint64_t))(v90 + 16))(v95, v69, v88);
  v41 = v92;
  v42 = v93;
  (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))(v97, v73, v93);
  v43 = v94;
  (*(void (**)(char *, unint64_t, uint64_t))(v94 + 16))(v98, v75, v112);
  v66 = (*(unsigned __int8 *)(v34 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v67 = (v35 + *(unsigned __int8 *)(v31 + 80) + v66) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v44 = (v32 + *(unsigned __int8 *)(v39 + 80) + v67) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v69 = (v65 + *(unsigned __int8 *)(v40 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v73 = (v68 + *(unsigned __int8 *)(v41 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v75 = (v74 + *(unsigned __int8 *)(v43 + 80) + v73) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v45 = (char *)swift_allocObject();
  v46 = v89;
  *((_QWORD *)v45 + 2) = v91;
  *((_QWORD *)v45 + 3) = v46;
  v47 = v96;
  v48 = v88;
  *((_QWORD *)v45 + 4) = v96;
  *((_QWORD *)v45 + 5) = v48;
  v49 = v112;
  *((_QWORD *)v45 + 6) = v42;
  *((_QWORD *)v45 + 7) = v49;
  v77 = *(_QWORD *)(v77 + 80);
  *((_QWORD *)v45 + 8) = v77;
  v78 = *(_QWORD *)(v78 + 80);
  *((_QWORD *)v45 + 9) = v78;
  v79 = *(_QWORD *)(v79 + 80);
  *((_QWORD *)v45 + 10) = v79;
  v80 = *(_QWORD *)(v80 + 80);
  *((_QWORD *)v45 + 11) = v80;
  v81 = *(_QWORD *)(v81 + 80);
  *((_QWORD *)v45 + 12) = v81;
  v82 = *(_QWORD *)(v82 + 80);
  v50 = v83;
  *((_QWORD *)v45 + 13) = v82;
  *((_QWORD *)v45 + 14) = v50;
  v51 = v85;
  *((_QWORD *)v45 + 15) = v84;
  *((_QWORD *)v45 + 16) = v51;
  v52 = v99;
  *((_QWORD *)v45 + 17) = v86;
  *((_QWORD *)v45 + 18) = v52;
  (*(void (**)(char *, char *))(v62 + 32))(&v45[v66], v70);
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v45[v67], v71, v46);
  v53 = v47;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v45[v44], v72, v47);
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(&v45[v69], v95, v48);
  v54 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v45[v73], v97, v93);
  v55 = v112;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(&v45[v75], v98, v112);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v100 = v91;
  v101 = v89;
  v102 = v53;
  v103 = v48;
  v104 = v54;
  v105 = v55;
  v56 = v77;
  v106 = v77;
  v107 = v78;
  v108 = v79;
  v109 = v80;
  v110 = v81;
  v111 = v82;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v58 = (void *)sub_190AC06B8(v56, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v60 = v59;
  swift_release();

  return v60;
}

#error "190BB4E68: call analysis failed (funcsize=33)"

void sub_190BB4EAC()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_49_8();
  OUTLINED_FUNCTION_59_9();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  sub_190BB4784(v14, v0[14], v0[15], v0[16], v0[17], v0[18], v0[19], (uint64_t)v0 + v3, (unint64_t)v0 + v4, (unint64_t)v0 + v8, (unint64_t)v0 + v11, (unint64_t)v0 + ((v11 + *(_QWORD *)(v10 + 64) + v13) & ~v13), v15, v16, v6, v9, v12, v17);
  OUTLINED_FUNCTION_128_1();
}

uint64_t sub_190BB4F5C(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, uint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t TupleTypeMetadata;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;

  v71 = a8;
  v118 = a6;
  v90 = a5;
  v89 = a4;
  v88 = a3;
  v91 = a2;
  v80 = a1;
  v79 = a12;
  v75 = a11;
  v72 = a10;
  v69 = a9;
  v102 = a16;
  v95 = a17;
  v68 = a18;
  v101 = a19;
  v83 = *a2;
  v84 = *a3;
  v85 = *a4;
  v86 = *a5;
  v87 = *a6;
  v99 = *(_QWORD *)(a19 - 8);
  v82 = *(_QWORD *)(v99 + 64);
  v19 = MEMORY[0x1E0C80A78](v82);
  v105 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = *(_QWORD *)(v20 - 8);
  v81 = *(_QWORD *)(v98 + 64);
  v21 = MEMORY[0x1E0C80A78](v19);
  v104 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = *(_QWORD *)(v23 - 8);
  v77 = *(_QWORD *)(v94 + 64);
  v24 = MEMORY[0x1E0C80A78](v21);
  v103 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = *(_QWORD *)(v26 - 8);
  v70 = *(_QWORD *)(v92 + 64);
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v29;
  v30 = *(_QWORD *)(a15 - 8);
  v93 = a15;
  v67 = *(_QWORD *)(v30 + 64);
  v31 = MEMORY[0x1E0C80A78](v27);
  v33 = (char *)&v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v33;
  v96 = a14;
  v34 = *(_QWORD *)(a14 - 8);
  v65 = *(_QWORD *)(v34 + 64);
  v35 = MEMORY[0x1E0C80A78](v31);
  v37 = (char *)&v64 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v37;
  v97 = a13;
  v38 = *(_QWORD *)(*(_QWORD *)(a13 - 8) + 64);
  v100 = *(_QWORD *)(a13 - 8);
  MEMORY[0x1E0C80A78](v35);
  v73 = (char *)&v64 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v39 + 16))();
  v40 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
  v64 = v34;
  v40(v37, v71, a14);
  v41 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
  v42 = v30;
  v66 = v30;
  v41(v33, v69, a15);
  v43 = v92;
  (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))(v29, v72, v102);
  v44 = v94;
  (*(void (**)(char *, unint64_t, uint64_t))(v94 + 16))(v103, v75, v95);
  v45 = v98;
  v46 = v68;
  (*(void (**)(char *, unint64_t, uint64_t))(v98 + 16))(v104, v79, v68);
  v47 = v99;
  v48 = v101;
  (*(void (**)(char *, unint64_t, uint64_t))(v99 + 16))(v105, v80, v101);
  v69 = (*(unsigned __int8 *)(v100 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  v71 = (v38 + *(unsigned __int8 *)(v34 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v72 = (v65 + *(unsigned __int8 *)(v42 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v75 = (v67 + *(unsigned __int8 *)(v43 + 80) + v72) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v79 = (v70 + *(unsigned __int8 *)(v44 + 80) + v75) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v80 = (v77 + *(unsigned __int8 *)(v45 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v81 = (v81 + *(unsigned __int8 *)(v47 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v49 = (char *)swift_allocObject();
  v50 = v96;
  *((_QWORD *)v49 + 2) = v97;
  *((_QWORD *)v49 + 3) = v50;
  v51 = v93;
  v52 = v102;
  *((_QWORD *)v49 + 4) = v93;
  *((_QWORD *)v49 + 5) = v52;
  v53 = v95;
  *((_QWORD *)v49 + 6) = v95;
  *((_QWORD *)v49 + 7) = v46;
  *((_QWORD *)v49 + 8) = v48;
  v83 = *(_QWORD *)(v83 + 80);
  *((_QWORD *)v49 + 9) = v83;
  v84 = *(_QWORD *)(v84 + 80);
  *((_QWORD *)v49 + 10) = v84;
  v85 = *(_QWORD *)(v85 + 80);
  *((_QWORD *)v49 + 11) = v85;
  v86 = *(_QWORD *)(v86 + 80);
  *((_QWORD *)v49 + 12) = v86;
  v87 = *(_QWORD *)(v87 + 80);
  v54 = v88;
  *((_QWORD *)v49 + 13) = v87;
  *((_QWORD *)v49 + 14) = v54;
  v55 = v90;
  *((_QWORD *)v49 + 15) = v89;
  *((_QWORD *)v49 + 16) = v55;
  *((_QWORD *)v49 + 17) = v118;
  (*(void (**)(char *, char *))(v100 + 32))(&v49[v69], v73);
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v49[v71], v74, v50);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v49[v72], v76, v51);
  v56 = v52;
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v49[v75], v78, v52);
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(&v49[v79], v103, v53);
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v49[v80], v104, v46);
  v57 = v101;
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(&v49[v81], v105, v101);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v106 = v97;
  v107 = v96;
  v108 = v93;
  v109 = v56;
  v110 = v53;
  v111 = v46;
  v58 = v83;
  v112 = v57;
  v113 = v83;
  v114 = v84;
  v115 = v85;
  v116 = v86;
  v117 = v87;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v60 = (void *)sub_190AC06B8(v58, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v62 = v61;
  swift_release();

  return v62;
}

#error "190BB5764: call analysis failed (funcsize=59)"

void sub_190BB57AC()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_33_17();
  v2 = (v1 + 152) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
  sub_190BB4F5C(v20, v0[14], v0[15], v0[16], v0[17], v0[18], (uint64_t)v0 + v2, (unint64_t)v0 + v6, (unint64_t)v0 + v9, (unint64_t)v0 + v12, (unint64_t)v0 + v16, (unint64_t)v0 + ((v16 + v17 + v19) & ~v19), v21, v4, v7, v10, v14, v18, v22);
  OUTLINED_FUNCTION_151();
}

uint64_t sub_190BB588C(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, unint64_t, uint64_t);
  void (*v46)(char *, unint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t TupleTypeMetadata;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;

  v81 = a8;
  v79 = a7;
  v99 = a5;
  v130 = a4;
  v98 = a3;
  v100 = a2;
  v91 = a1;
  v90 = a12;
  v88 = a11;
  v84 = a10;
  v80 = a9;
  v110 = a15;
  v114 = a17;
  v105 = a18;
  v108 = a19;
  v112 = a20;
  v94 = *a2;
  v95 = *a3;
  v96 = *a4;
  v97 = *a5;
  v111 = *(_QWORD *)(a20 - 8);
  v93 = *(_QWORD *)(v111 + 64);
  v20 = MEMORY[0x1E0C80A78](a15);
  v117 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = *(_QWORD *)(v22 - 8);
  v92 = *(_QWORD *)(v107 + 64);
  v23 = MEMORY[0x1E0C80A78](v20);
  v116 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *(_QWORD *)(v25 - 8);
  v89 = *(_QWORD *)(v103 + 64);
  v26 = MEMORY[0x1E0C80A78](v23);
  v115 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = *(_QWORD *)(v28 - 8);
  v82 = *(_QWORD *)(v102 + 64);
  v29 = MEMORY[0x1E0C80A78](v26);
  v113 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = *(_QWORD *)(a16 - 8);
  v76 = a16;
  v78 = *(_QWORD *)(v101 + 64);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v33;
  v34 = *(_QWORD *)(v31 - 8);
  v77 = *(_QWORD *)(v34 + 64);
  v35 = v34;
  v36 = MEMORY[0x1E0C80A78](v31);
  v38 = (char *)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v38;
  v104 = a14;
  v39 = *(_QWORD *)(a14 - 8);
  v75 = *(_QWORD *)(v39 + 64);
  v40 = MEMORY[0x1E0C80A78](v36);
  v42 = (char *)&v72 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v42;
  v106 = a13;
  v43 = *(_QWORD *)(*(_QWORD *)(a13 - 8) + 64);
  v109 = *(_QWORD *)(a13 - 8);
  MEMORY[0x1E0C80A78](v40);
  v83 = (char *)&v72 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v44 + 16))();
  v45 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
  v73 = v39;
  v45(v42, v79, a14);
  v46 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
  v47 = v35;
  v74 = v35;
  v46(v38, v81, v110);
  v48 = v101;
  (*(void (**)(char *, unint64_t, uint64_t))(v101 + 16))(v33, v80, a16);
  v49 = v102;
  (*(void (**)(char *, unint64_t, uint64_t))(v102 + 16))(v113, v84, v114);
  v50 = v103;
  (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v115, v88, v105);
  v51 = v107;
  v52 = v108;
  (*(void (**)(char *, unint64_t, uint64_t))(v107 + 16))(v116, v90, v108);
  v53 = v111;
  (*(void (**)(char *, unint64_t, uint64_t))(v111 + 16))(v117, v91, v112);
  v79 = (*(unsigned __int8 *)(v109 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  v80 = (v43 + *(unsigned __int8 *)(v39 + 80) + v79) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v81 = (v75 + *(unsigned __int8 *)(v47 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v84 = (v77 + *(unsigned __int8 *)(v48 + 80) + v81) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v88 = (v78 + *(unsigned __int8 *)(v49 + 80) + v84) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v90 = (v82 + *(unsigned __int8 *)(v50 + 80) + v88) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v91 = (v89 + *(unsigned __int8 *)(v51 + 80) + v90) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v92 = (v92 + *(unsigned __int8 *)(v53 + 80) + v91) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v54 = (char *)swift_allocObject();
  v55 = v104;
  *((_QWORD *)v54 + 2) = v106;
  *((_QWORD *)v54 + 3) = v55;
  v56 = v110;
  v57 = v76;
  *((_QWORD *)v54 + 4) = v110;
  *((_QWORD *)v54 + 5) = v57;
  v58 = v114;
  v59 = v105;
  *((_QWORD *)v54 + 6) = v114;
  *((_QWORD *)v54 + 7) = v59;
  v60 = v112;
  *((_QWORD *)v54 + 8) = v52;
  *((_QWORD *)v54 + 9) = v60;
  v94 = *(_QWORD *)(v94 + 80);
  *((_QWORD *)v54 + 10) = v94;
  v95 = *(_QWORD *)(v95 + 80);
  *((_QWORD *)v54 + 11) = v95;
  v96 = *(_QWORD *)(v96 + 80);
  *((_QWORD *)v54 + 12) = v96;
  v97 = *(_QWORD *)(v97 + 80);
  v61 = v98;
  *((_QWORD *)v54 + 13) = v97;
  *((_QWORD *)v54 + 14) = v61;
  v62 = v99;
  *((_QWORD *)v54 + 15) = v130;
  *((_QWORD *)v54 + 16) = v62;
  (*(void (**)(char *, char *))(v109 + 32))(&v54[v79], v83);
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v54[v80], v85, v55);
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v54[v81], v86, v56);
  v63 = v57;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(&v54[v84], v87, v57);
  v64 = v58;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(&v54[v88], v113, v58);
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(&v54[v90], v115, v59);
  v65 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(&v54[v91], v116, v108);
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(&v54[v92], v117, v60);
  swift_retain();
  swift_retain();
  swift_retain();
  v118 = v106;
  v119 = v104;
  v120 = v56;
  v121 = v63;
  v122 = v64;
  v123 = v59;
  v124 = v65;
  v125 = v60;
  v66 = v94;
  v126 = v94;
  v127 = v95;
  v128 = v96;
  v129 = v97;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v68 = (void *)sub_190AC06B8(v66, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v70 = v69;
  swift_release();

  return v70;
}

#error "190BB6144: call analysis failed (funcsize=70)"

uint64_t sub_190BB618C()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_60_9();
  v2 = (v1 + 144) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (v13 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 64);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (v17 + v18 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = *(_QWORD *)(v20 + 64);
  v24 = *(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80);
  return sub_190BB588C(v25, v0[14], v0[15], v0[16], v0[17], (uint64_t)v0 + v2, (unint64_t)v0 + v6, (unint64_t)v0 + v9, (unint64_t)v0 + v13, (unint64_t)v0 + v17, (unint64_t)v0 + v21, (unint64_t)v0 + ((v21 + v22 + v24) & ~v24), v26, v4, v7, v11, v15, v19, v23,
           v27);
}

uint64_t sub_190BB6298(unint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, unint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t TupleTypeMetadata;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;

  v89 = a8;
  v83 = a7;
  v81 = a6;
  v101 = a4;
  v137 = a3;
  v102 = a2;
  v95 = a1;
  v93 = a12;
  v92 = a11;
  v90 = a10;
  v84 = a9;
  v106 = a16;
  v104 = a17;
  v120 = a18;
  v111 = a19;
  v113 = a20;
  v118 = a21;
  v98 = *a2;
  v99 = *a3;
  v100 = *a4;
  v117 = *(_QWORD *)(a21 - 8);
  v97 = *(_QWORD *)(v117 + 64);
  v21 = MEMORY[0x1E0C80A78](a13);
  v124 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = *(_QWORD *)(a20 - 8);
  v96 = *(_QWORD *)(v112 + 64);
  v23 = v96;
  v24 = MEMORY[0x1E0C80A78](v21);
  v123 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = *(_QWORD *)(v25 - 8);
  v94 = *(_QWORD *)(v109 + 64);
  v26 = MEMORY[0x1E0C80A78](v24);
  v122 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = *(_QWORD *)(v28 - 8);
  v91 = *(_QWORD *)(v105 + 64);
  v29 = MEMORY[0x1E0C80A78](v26);
  v121 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *(_QWORD *)(v31 - 8);
  v82 = *(_QWORD *)(v103 + 64);
  v32 = MEMORY[0x1E0C80A78](v29);
  v119 = (char *)&v77 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(v34 - 8);
  v80 = *(_QWORD *)(v35 + 64);
  v36 = v35;
  v37 = MEMORY[0x1E0C80A78](v32);
  v39 = (char *)&v77 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v39;
  v40 = *(_QWORD *)(a15 - 8);
  v107 = a15;
  v79 = *(_QWORD *)(v40 + 64);
  v116 = v40;
  v41 = MEMORY[0x1E0C80A78](v37);
  v43 = (char *)&v77 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v43;
  v108 = a14;
  v44 = *(_QWORD *)(a14 - 8);
  v78 = *(_QWORD *)(v44 + 64);
  v115 = v44;
  v45 = MEMORY[0x1E0C80A78](v41);
  v47 = (char *)&v77 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v47;
  v110 = v45;
  v48 = *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64);
  v114 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v85 = (char *)&v77 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v49 + 16))();
  (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v47, v81, a14);
  (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v43, v83, a15);
  v50 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
  v51 = v36;
  v77 = v36;
  v50(v39, v89, v106);
  v52 = v103;
  (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v119, v84, v104);
  v53 = v105;
  (*(void (**)(char *, unint64_t, uint64_t))(v105 + 16))(v121, v90, v120);
  v54 = v109;
  v55 = v111;
  (*(void (**)(char *, unint64_t, uint64_t))(v109 + 16))(v122, v92, v111);
  v56 = v112;
  (*(void (**)(char *, unint64_t, uint64_t))(v112 + 16))(v123, v93, v113);
  v58 = v117;
  v57 = v118;
  (*(void (**)(char *, unint64_t, uint64_t))(v117 + 16))(v124, v95, v118);
  v81 = (*(unsigned __int8 *)(v114 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
  v83 = (v48 + *(unsigned __int8 *)(v115 + 80) + v81) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  v84 = (v78 + *(unsigned __int8 *)(v116 + 80) + v83) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  v89 = (v79 + *(unsigned __int8 *)(v51 + 80) + v84) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v90 = (v80 + *(unsigned __int8 *)(v52 + 80) + v89) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v92 = (v82 + *(unsigned __int8 *)(v53 + 80) + v90) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v93 = (v91 + *(unsigned __int8 *)(v54 + 80) + v92) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v95 = (v94 + *(unsigned __int8 *)(v56 + 80) + v93) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v96 = (v96 + *(unsigned __int8 *)(v58 + 80) + v95) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v59 = (char *)swift_allocObject();
  v60 = v108;
  *((_QWORD *)v59 + 2) = v110;
  *((_QWORD *)v59 + 3) = v60;
  v61 = v107;
  v62 = v106;
  *((_QWORD *)v59 + 4) = v107;
  *((_QWORD *)v59 + 5) = v62;
  v63 = v104;
  v64 = v120;
  *((_QWORD *)v59 + 6) = v104;
  *((_QWORD *)v59 + 7) = v64;
  *((_QWORD *)v59 + 8) = v55;
  v65 = v113;
  *((_QWORD *)v59 + 9) = v113;
  *((_QWORD *)v59 + 10) = v57;
  v98 = *(_QWORD *)(v98 + 80);
  *((_QWORD *)v59 + 11) = v98;
  v99 = *(_QWORD *)(v99 + 80);
  *((_QWORD *)v59 + 12) = v99;
  v100 = *(_QWORD *)(v100 + 80);
  v66 = v137;
  *((_QWORD *)v59 + 13) = v100;
  *((_QWORD *)v59 + 14) = v66;
  *((_QWORD *)v59 + 15) = v101;
  (*(void (**)(char *, char *))(v114 + 32))(&v59[v81], v85);
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v59[v83], v86, v60);
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v59[v84], v87, v61);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v59[v89], v88, v62);
  v67 = v63;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(&v59[v90], v119, v63);
  v68 = v64;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v59[v92], v121, v64);
  v69 = v111;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v59[v93], v122, v111);
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(&v59[v95], v123, v65);
  v70 = v118;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(&v59[v96], v124, v118);
  swift_retain();
  swift_retain();
  v125 = v110;
  v126 = v108;
  v127 = v107;
  v128 = v62;
  v129 = v67;
  v130 = v68;
  v131 = v69;
  v132 = v65;
  v71 = v98;
  v133 = v70;
  v134 = v98;
  v135 = v99;
  v136 = v100;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v73 = (void *)sub_190AC06B8(v71, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v75 = v74;
  swift_release();

  return v75;
}

#error "190BB6C38: call analysis failed (funcsize=93)"

void sub_190BB6C98()
{
  _QWORD **v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_84_4();
  v2 = (*(unsigned __int8 *)(v1 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (v20 + v21 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = *(_QWORD *)(v23 + 64);
  v27 = *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80);
  sub_190BB6298(v28, v0[14], v0[15], v0[16], (uint64_t)v0 + v2, (unint64_t)v0 + v5, (unint64_t)v0 + v8, (unint64_t)v0 + v12, (unint64_t)v0 + v16, (unint64_t)v0 + v20, (unint64_t)v0 + v24, (unint64_t)v0 + ((v24 + v25 + v27) & ~v27), v29, v3, v6, v10, v14, v18, v22,
    v26,
    v30);
  OUTLINED_FUNCTION_97_4();
}

uint64_t sub_190BB6DB8(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, unint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t TupleTypeMetadata;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v102 = a8;
  v98 = a7;
  v94 = a6;
  v92 = a5;
  v137 = a3;
  v113 = a2;
  v107 = a1;
  v106 = a12;
  v104 = a11;
  v103 = a10;
  v100 = a9;
  v125 = a15;
  v129 = a17;
  v131 = a18;
  v133 = a19;
  v120 = a20;
  v126 = a21;
  v150 = a22;
  v111 = *a2;
  v112 = *a3;
  v127 = *(_QWORD *)(a22 - 8);
  v110 = *(_QWORD *)(v127 + 64);
  v22 = MEMORY[0x1E0C80A78](a13);
  v136 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = *(_QWORD *)(a21 - 8);
  v109 = *(_QWORD *)(v121 + 64);
  v24 = v109;
  v25 = MEMORY[0x1E0C80A78](v22);
  v135 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = *(_QWORD *)(v26 - 8);
  v108 = *(_QWORD *)(v119 + 64);
  v27 = MEMORY[0x1E0C80A78](v25);
  v134 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = *(_QWORD *)(v29 - 8);
  v105 = *(_QWORD *)(v116 + 64);
  v30 = MEMORY[0x1E0C80A78](v27);
  v132 = (char *)&v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = *(_QWORD *)(v32 - 8);
  v101 = *(_QWORD *)(v115 + 64);
  v33 = MEMORY[0x1E0C80A78](v30);
  v130 = (char *)&v86 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = *(_QWORD *)(v35 - 8);
  v93 = *(_QWORD *)(v114 + 64);
  v36 = MEMORY[0x1E0C80A78](v33);
  v128 = (char *)&v86 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(_QWORD *)(a16 - 8);
  v90 = a16;
  v91 = *(_QWORD *)(v38 + 64);
  v39 = v38;
  v40 = MEMORY[0x1E0C80A78](v36);
  v42 = (char *)&v86 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = v42;
  v44 = *(_QWORD *)(v43 - 8);
  v89 = *(_QWORD *)(v44 + 64);
  v124 = v44;
  v45 = MEMORY[0x1E0C80A78](v40);
  v47 = (char *)&v86 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v47;
  v117 = a14;
  v48 = *(_QWORD *)(a14 - 8);
  v88 = *(_QWORD *)(v48 + 64);
  v123 = v48;
  v49 = MEMORY[0x1E0C80A78](v45);
  v51 = (char *)&v86 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = v51;
  v118 = v49;
  v52 = *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64);
  v122 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v95 = (char *)&v86 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v53 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v51, v92, a14);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v47, v94, v125);
  v54 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
  v55 = v39;
  v87 = v39;
  v54(v42, v98, a16);
  v56 = v114;
  (*(void (**)(char *, unint64_t, uint64_t))(v114 + 16))(v128, v102, v129);
  v57 = v115;
  (*(void (**)(char *, unint64_t, uint64_t))(v115 + 16))(v130, v100, v131);
  v58 = v116;
  (*(void (**)(char *, unint64_t, uint64_t))(v116 + 16))(v132, v103, v133);
  v59 = v119;
  v60 = v120;
  (*(void (**)(char *, unint64_t, uint64_t))(v119 + 16))(v134, v104, v120);
  v61 = v121;
  (*(void (**)(char *, unint64_t, uint64_t))(v121 + 16))(v135, v106, v126);
  v62 = v127;
  (*(void (**)(char *, unint64_t, uint64_t))(v127 + 16))(v136, v107, v150);
  v98 = (*(unsigned __int8 *)(v122 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
  v100 = (v52 + *(unsigned __int8 *)(v123 + 80) + v98) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
  v102 = (v88 + *(unsigned __int8 *)(v124 + 80) + v100) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
  v103 = (v89 + *(unsigned __int8 *)(v55 + 80) + v102) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v104 = (v91 + *(unsigned __int8 *)(v56 + 80) + v103) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v106 = (v93 + *(unsigned __int8 *)(v57 + 80) + v104) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v107 = (v101 + *(unsigned __int8 *)(v58 + 80) + v106) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v63 = (v105 + *(unsigned __int8 *)(v59 + 80) + v107) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v108 = (v108 + *(unsigned __int8 *)(v61 + 80) + v63) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v109 = (v109 + *(unsigned __int8 *)(v62 + 80) + v108) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  v64 = (char *)swift_allocObject();
  v65 = v117;
  *((_QWORD *)v64 + 2) = v118;
  *((_QWORD *)v64 + 3) = v65;
  v66 = v125;
  v67 = v90;
  *((_QWORD *)v64 + 4) = v125;
  *((_QWORD *)v64 + 5) = v67;
  v68 = v129;
  v69 = v131;
  *((_QWORD *)v64 + 6) = v129;
  *((_QWORD *)v64 + 7) = v69;
  v70 = v133;
  *((_QWORD *)v64 + 8) = v133;
  *((_QWORD *)v64 + 9) = v60;
  v71 = v126;
  v72 = v150;
  *((_QWORD *)v64 + 10) = v126;
  *((_QWORD *)v64 + 11) = v72;
  v111 = *(_QWORD *)(v111 + 80);
  *((_QWORD *)v64 + 12) = v111;
  v112 = *(_QWORD *)(v112 + 80);
  v73 = v137;
  *((_QWORD *)v64 + 13) = v112;
  *((_QWORD *)v64 + 14) = v73;
  (*(void (**)(char *, char *))(v122 + 32))(&v64[v98], v95);
  (*(void (**)(char *, char *, uint64_t))(v123 + 32))(&v64[v100], v96, v65);
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(&v64[v102], v97, v66);
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(&v64[v103], v99, v67);
  v74 = v68;
  (*(void (**)(char *, char *, uint64_t))(v114 + 32))(&v64[v104], v128, v68);
  v75 = v69;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v64[v106], v130, v69);
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v64[v107], v132, v70);
  v76 = &v64[v63];
  v77 = v120;
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v76, v134, v120);
  v78 = v71;
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(&v64[v108], v135, v71);
  v79 = v150;
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(&v64[v109], v136, v150);
  swift_retain();
  v138 = v118;
  v139 = v117;
  v140 = v66;
  v141 = v67;
  v142 = v74;
  v143 = v75;
  v144 = v70;
  v145 = v77;
  v146 = v78;
  v147 = v79;
  v80 = v111;
  v148 = v111;
  v149 = v112;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v82 = (void *)sub_190AC06B8(v80, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v84 = v83;
  swift_release();

  return v84;
}

#error "190BB77E4: call analysis failed (funcsize=99)"

void sub_190BB7848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_107_1();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (v13 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 64);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (v17 + v18 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = *(_QWORD *)(v20 + 64);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (v21 + v22 + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v26 = *(_QWORD *)(v24 + 64);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (v25 + v26 + *(unsigned __int8 *)(v28 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v30 = *(_QWORD *)(v28 + 64);
  v32 = *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80);
  sub_190BB6DB8(v33, *(_QWORD **)(v0 + 112), *(_QWORD **)(v0 + 120), v0 + v3, v0 + v6, v0 + v9, v0 + v13, v0 + v17, v0 + v21, v0 + v25, v0 + v29, v0 + ((v29 + v30 + v32) & ~v32), v1, v4, v7, v11, v15, v19, v23,
    v27,
    v31,
    v34);
  OUTLINED_FUNCTION_97_4();
}

uint64_t sub_190BB7984(unint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t TupleTypeMetadata;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  v101 = a8;
  v99 = a7;
  v93 = a6;
  v91 = a5;
  v90 = a4;
  v114 = a2;
  v107 = a1;
  v106 = a12;
  v104 = a11;
  v103 = a10;
  v100 = a9;
  v130 = a16;
  v132 = a17;
  v134 = a18;
  v89 = a19;
  v119 = a20;
  v140 = a21;
  v141 = a22;
  v154 = a23;
  v113 = *a2;
  v129 = *(_QWORD *)(a23 - 8);
  v112 = *(_QWORD *)(v129 + 64);
  v23 = MEMORY[0x1E0C80A78](a1);
  v139 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = *(_QWORD *)(v25 - 8);
  v111 = *(_QWORD *)(v127 + 64);
  v26 = MEMORY[0x1E0C80A78](v23);
  v138 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = *(_QWORD *)(v28 - 8);
  v110 = *(_QWORD *)(v123 + 64);
  v29 = MEMORY[0x1E0C80A78](v26);
  v137 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = *(_QWORD *)(v31 - 8);
  v109 = *(_QWORD *)(v118 + 64);
  v32 = MEMORY[0x1E0C80A78](v29);
  v136 = (char *)&v88 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = *(_QWORD *)(v34 - 8);
  v108 = *(_QWORD *)(v117 + 64);
  v35 = MEMORY[0x1E0C80A78](v32);
  v135 = (char *)&v88 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = *(_QWORD *)(v37 - 8);
  v105 = *(_QWORD *)(v116 + 64);
  v38 = MEMORY[0x1E0C80A78](v35);
  v133 = (char *)&v88 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = *(_QWORD *)(a17 - 8);
  v102 = *(_QWORD *)(v115 + 64);
  v40 = MEMORY[0x1E0C80A78](v38);
  v131 = (char *)&v88 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(_QWORD *)(v42 - 8);
  v98 = *(_QWORD *)(v43 + 64);
  v44 = v43;
  v125 = v43;
  v45 = MEMORY[0x1E0C80A78](v40);
  v47 = (char *)&v88 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v47;
  v48 = *(_QWORD *)(a15 - 8);
  v120 = a15;
  v92 = *(_QWORD *)(v48 + 64);
  v124 = v48;
  v49 = MEMORY[0x1E0C80A78](v45);
  v51 = (char *)&v88 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v51;
  v121 = a14;
  v52 = *(_QWORD *)(a14 - 8);
  v88 = *(_QWORD *)(v52 + 64);
  v126 = v52;
  v53 = MEMORY[0x1E0C80A78](v49);
  v55 = (char *)&v88 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = v55;
  v122 = v56;
  v57 = *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64);
  v128 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v53);
  v97 = (char *)&v88 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v58 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v55, v90, a14);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v51, v91, a15);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v47, v93, v130);
  v59 = v115;
  (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v131, v99, v132);
  v60 = v116;
  (*(void (**)(char *, unint64_t, uint64_t))(v116 + 16))(v133, v101, v134);
  v61 = v117;
  v62 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v135, v100, v89);
  v63 = v118;
  (*(void (**)(char *, unint64_t, uint64_t))(v118 + 16))(v136, v103, v119);
  v64 = v123;
  (*(void (**)(char *, unint64_t, uint64_t))(v123 + 16))(v137, v104, v140);
  v65 = v127;
  (*(void (**)(char *, unint64_t, uint64_t))(v127 + 16))(v138, v106, v141);
  v66 = v129;
  (*(void (**)(char *, unint64_t, uint64_t))(v129 + 16))(v139, v107, v154);
  v106 = (*(unsigned __int8 *)(v128 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
  v107 = (v57 + *(unsigned __int8 *)(v126 + 80) + v106) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
  v101 = (v88 + *(unsigned __int8 *)(v124 + 80) + v107) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
  v67 = (v92 + *(unsigned __int8 *)(v125 + 80) + v101) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
  v103 = (v98 + *(unsigned __int8 *)(v59 + 80) + v67) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v104 = (v102 + *(unsigned __int8 *)(v60 + 80) + v103) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v105 = (v105 + *(unsigned __int8 *)(v61 + 80) + v104) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v108 = (v108 + *(unsigned __int8 *)(v63 + 80) + v105) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v109 = (v109 + *(unsigned __int8 *)(v64 + 80) + v108) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v110 = (v110 + *(unsigned __int8 *)(v65 + 80) + v109) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v111 = (v111 + *(unsigned __int8 *)(v66 + 80) + v110) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v68 = (char *)swift_allocObject();
  v69 = v121;
  *((_QWORD *)v68 + 2) = v122;
  *((_QWORD *)v68 + 3) = v69;
  v70 = v120;
  v71 = v130;
  *((_QWORD *)v68 + 4) = v120;
  *((_QWORD *)v68 + 5) = v71;
  v72 = v132;
  v73 = v134;
  *((_QWORD *)v68 + 6) = v132;
  *((_QWORD *)v68 + 7) = v73;
  v74 = v119;
  *((_QWORD *)v68 + 8) = v62;
  *((_QWORD *)v68 + 9) = v74;
  v75 = v141;
  *((_QWORD *)v68 + 10) = v140;
  *((_QWORD *)v68 + 11) = v75;
  *((_QWORD *)v68 + 12) = v154;
  v113 = *(_QWORD *)(v113 + 80);
  *((_QWORD *)v68 + 13) = v113;
  (*(void (**)(char *, char *))(v128 + 32))(&v68[v106], v97);
  (*(void (**)(char *, char *, uint64_t))(v126 + 32))(&v68[v107], v96, v69);
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(&v68[v101], v94, v70);
  (*(void (**)(char *, char *, uint64_t))(v125 + 32))(&v68[v67], v95, v71);
  v76 = v72;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v68[v103], v131, v72);
  v77 = v73;
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v68[v104], v133, v73);
  v78 = v62;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(&v68[v105], v135, v62);
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v68[v108], v136, v74);
  v79 = v140;
  (*(void (**)(char *, char *, uint64_t))(v123 + 32))(&v68[v109], v137, v140);
  v80 = v141;
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(&v68[v110], v138, v141);
  v81 = v154;
  (*(void (**)(char *, char *, uint64_t))(v129 + 32))(&v68[v111], v139, v154);
  v142 = v122;
  v143 = v121;
  v144 = v120;
  v145 = v71;
  v146 = v76;
  v147 = v77;
  v148 = v78;
  v149 = v74;
  v150 = v79;
  v151 = v80;
  v82 = v113;
  v152 = v81;
  v153 = v113;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v84 = (void *)sub_190AC06B8(v82, TupleTypeMetadata);
  Promise.then<A>(on:closure:)();
  v86 = v85;
  swift_release();

  return v86;
}

#error "190BB8530: call analysis failed (funcsize=143)"

uint64_t sub_190BB8560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  OUTLINED_FUNCTION_107_1();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (v10 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (v14 + v15 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = *(_QWORD *)(v17 + 64);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (v18 + v19 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = *(_QWORD *)(v21 + 64);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (v22 + v23 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v27 = *(_QWORD *)(v25 + 64);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (v26 + v27 + *(unsigned __int8 *)(v29 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v31 = *(_QWORD *)(v29 + 64);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = (v30 + v31 + *(unsigned __int8 *)(v33 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v35 = *(_QWORD *)(v33 + 64);
  v37 = *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
  return sub_190BB7984(v38, *(_QWORD **)(v0 + 112), v0 + v3, v0 + v6, v0 + v10, v0 + v14, v0 + v18, v0 + v22, v0 + v26, v0 + v30, v0 + v34, v0 + ((v34 + v35 + v37) & ~v37), v1, v4, v8, v12, v16, v20, v24,
           v28,
           v32,
           v36,
           *(_QWORD *)(v0 + 96));
}

uint64_t sub_190BB86D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int *TupleTypeMetadata;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v27 = a9 + TupleTypeMetadata[12];
  v28 = a9 + TupleTypeMetadata[16];
  v30 = a9 + TupleTypeMetadata[20];
  v31 = a9 + TupleTypeMetadata[24];
  v32 = a9 + TupleTypeMetadata[28];
  v33 = a9 + TupleTypeMetadata[32];
  v34 = a9 + TupleTypeMetadata[36];
  v36 = a9 + TupleTypeMetadata[40];
  v38 = a9 + TupleTypeMetadata[44];
  v39 = a9 + TupleTypeMetadata[48];
  v41 = a9 + TupleTypeMetadata[52];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 16))(a9, a2, a14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a15 - 8) + 16))(v27, a3, a15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a16 - 8) + 16))(v28, a4, a16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a17 - 8) + 16))(v30, a5, a17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v31, a6, a18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a19 - 8) + 16))(v32, a7, a19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a20 - 8) + 16))(v33, a8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a21 - 8) + 16))(v34, a10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a22 - 8) + 16))(v36, a11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a23 - 8) + 16))(v38, a12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a24 - 8) + 16))(v39, a13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a25 - 8) + 16))(v41, a1);
}

#error "190BB8B90: call analysis failed (funcsize=152)"

uint64_t sub_190BB8BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_109_1();
  v2 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (v11 + *(_QWORD *)(v10 + 64) + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (v14 + *(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v17 + *(_QWORD *)(v16 + 64) + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (v20 + *(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (v23 + *(_QWORD *)(v22 + 64) + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (v26 + *(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v28 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v30 = *(_QWORD *)(v0 - 8);
  v31 = (v29 + *(_QWORD *)(v28 + 64) + *(unsigned __int8 *)(v30 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v32 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_190BB86D8(v33, v1 + v5, v1 + v8, v1 + v11, v1 + v14, v1 + v17, v1 + v20, v1 + v23, v34, v1 + v26, v1 + v29, v1 + v31, v1 + ((v31 + *(_QWORD *)(v30 + 64) + v32) & ~v32), v3, v6, v9, v12, v15, v18,
           v21,
           v24,
           v27,
           v0,
           v2,
           *(_QWORD *)(v1 + 104));
}

uint64_t sub_190BB8D64()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

void sub_190BB8DB8()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_106_2();
  OUTLINED_FUNCTION_142();
  sub_190BAEEC4(v2, v3, v4, v5, v6, v7, v8, v0[19], v0[20], v0[21], (uint64_t)v0 + v1, v9, v10);
  OUTLINED_FUNCTION_77_5();
}

uint64_t sub_190BB8DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_72();
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  OUTLINED_FUNCTION_8_41();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_11_9(v0 + v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_15_1(v0 + v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

void sub_190BB8E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_142();
  sub_190BAF2AC(v3, v4, v5, v6, v7, v8, v9, *(_QWORD **)(v0 + 152), *(_QWORD **)(v0 + 160), v0 + v1, v0 + v2, v10, v11, v12);
  OUTLINED_FUNCTION_77_5();
}

uint64_t sub_190BB8EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_165_0();
  v5 = (v4 + 160) & ~v4;
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (v5 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v0 - 8);
  v9 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  OUTLINED_FUNCTION_19_26();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_26_0(v1 + v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_11_9(v1 + v7, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_15_1(v1 + v9, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BB8F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_9_40();
  OUTLINED_FUNCTION_142();
  sub_190BAF718(v4, v5, v6, v7, v8, v9, v10, *(_QWORD **)(v0 + 152), v0 + v2, v0 + v1, v0 + v3, v11, v12, v13, v14);
  OUTLINED_FUNCTION_125_0();
}

#error "190BB8FE0: call analysis failed (funcsize=27)"

void sub_190BB9008()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_112();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  sub_190BAFC20(v9, v0[13], v0[14], v0[15], v0[16], v0[17], v0[18], (uint64_t)v0 + v8, (unint64_t)v0 + v3, (unint64_t)v0 + v4, (unint64_t)v0 + ((v4 + *(_QWORD *)(v5 + 64) + v7) & ~v7), v10, v11, v12, v6, v13);
  OUTLINED_FUNCTION_125_0();
}

#error "190BB90C4: call analysis failed (funcsize=32)"

void sub_190BB9108()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_49_8();
  OUTLINED_FUNCTION_59_9();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  sub_190BB01C4(v14, v0[13], v0[14], v0[15], v0[16], v0[17], (uint64_t)v0 + v3, (unint64_t)v0 + v4, (unint64_t)v0 + v8, (unint64_t)v0 + v11, (unint64_t)v0 + ((v11 + *(_QWORD *)(v10 + 64) + v13) & ~v13), v15, v16, v6, v9, v12, v17);
  OUTLINED_FUNCTION_128_1();
}

#error "190BB9258: call analysis failed (funcsize=58)"

uint64_t sub_190BB92A0()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_33_17();
  v2 = (v1 + 136) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
  return sub_190BB0810(v20, v0[13], v0[14], v0[15], v0[16], (uint64_t)v0 + v2, (unint64_t)v0 + v6, (unint64_t)v0 + v9, (unint64_t)v0 + v12, (unint64_t)v0 + v16, (unint64_t)v0 + ((v16 + v17 + v19) & ~v19), v21, v4, v7, v10, v14, v18, v22);
}

#error "190BB9450: call analysis failed (funcsize=69)"

void sub_190BB9498()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_60_9();
  v2 = (v1 + 128) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (v13 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 64);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (v17 + v18 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = *(_QWORD *)(v20 + 64);
  v24 = *(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80);
  sub_190BB0F08(v25, v0[13], v0[14], v0[15], (uint64_t)v0 + v2, (unint64_t)v0 + v6, (unint64_t)v0 + v9, (unint64_t)v0 + v13, (unint64_t)v0 + v17, (unint64_t)v0 + v21, (unint64_t)v0 + ((v21 + v22 + v24) & ~v24), v26, v4, v7, v11, v15, v19, v23, v27);
  OUTLINED_FUNCTION_151();
}

#error "190BB96A0: call analysis failed (funcsize=92)"

uint64_t sub_190BB9700()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_84_4();
  v2 = (*(unsigned __int8 *)(v1 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (v11 + v12 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (v15 + v16 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = *(_QWORD *)(v18 + 64);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (v19 + v20 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = *(_QWORD *)(v22 + 64);
  v26 = *(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80);
  return sub_190BB1688(v27, *(_QWORD **)(v0 + 104), *(_QWORD **)(v0 + 112), v0 + v2, v0 + v5, v0 + v8, v0 + v11, v0 + v15, v0 + v19, v0 + v23, v0 + ((v23 + v24 + v26) & ~v26), v28, v3, v6, v9, v13, v17, v21, v25,
           v29);
}

#error "190BB9944: call analysis failed (funcsize=98)"

void sub_190BB99A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_107_1();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (v13 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 64);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (v17 + v18 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = *(_QWORD *)(v20 + 64);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (v21 + v22 + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v26 = *(_QWORD *)(v24 + 64);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (v25 + v26 + *(unsigned __int8 *)(v28 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v30 = *(_QWORD *)(v28 + 64);
  v32 = *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80);
  sub_190BB1EA8(v33, *(_QWORD **)(v0 + 104), v0 + v3, v0 + v6, v0 + v9, v0 + v13, v0 + v17, v0 + v21, v0 + v25, v0 + v29, v0 + ((v29 + v30 + v32) & ~v32), v1, v4, v7, v11, v15, v19, v23, v27,
    v31,
    v34);
  OUTLINED_FUNCTION_97_4();
}

#error "190BB9CD0: call analysis failed (funcsize=136)"

uint64_t sub_190BB9D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_109_1();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (v10 + *(_QWORD *)(v9 + 64) + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v13 + *(_QWORD *)(v12 + 64) + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (v16 + *(_QWORD *)(v15 + 64) + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (v19 + *(_QWORD *)(v18 + 64) + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (v22 + *(_QWORD *)(v21 + 64) + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (v25 + *(_QWORD *)(v24 + 64) + *(unsigned __int8 *)(v27 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v29 = *(unsigned __int8 *)(*(_QWORD *)(v0 - 8) + 80);
  return sub_190BB2750(v30, v1 + v4, v1 + v7, v1 + v10, v1 + v13, v1 + v16, v1 + v19, v1 + v22, v31, v1 + v25, v1 + v28, v1 + ((v28 + *(_QWORD *)(v27 + 64) + v29) & ~v29), v2, v5, v8, v11, v14, v17, v20,
           v23,
           v26,
           v0,
           *(_QWORD *)(v1 + 96));
}

uint64_t sub_190BB9E6C()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

void sub_190BB9EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_106_2();
  OUTLINED_FUNCTION_149_0();
  sub_190BABA98(v2, v3, v4, v5, v6, v7, v8, *(_QWORD **)(v0 + 144), *(_QWORD **)(v0 + 152), v0 + v1, v9, v10);
  OUTLINED_FUNCTION_88();
}

uint64_t sub_190BB9EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_72();
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  OUTLINED_FUNCTION_8_41();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_11_9(v0 + v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_15_1(v0 + v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

void sub_190BB9F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_149_0();
  sub_190BABE14(v3, v4, v5, v6, v7, v8, v9, *(_QWORD **)(v0 + 144), v0 + v2, v0 + v1, v10, v11, v12);
  OUTLINED_FUNCTION_77_5();
}

uint64_t sub_190BB9FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_164_0();
  v4 = (v3 + 144) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_26_0(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_11_9(v0 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BBA02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_9_40();
  OUTLINED_FUNCTION_149_0();
  sub_190BAC220(v4, v5, v6, v7, v8, v9, v10, v0 + v1, v0 + v2, v0 + v3, v11, v12, v13, v14);
  OUTLINED_FUNCTION_77_5();
}

#error "190BBA0AC: call analysis failed (funcsize=26)"

void sub_190BBA0D4()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_112();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  sub_190BAC6BC(v9, v0[12], v0[13], v0[14], v0[15], v0[16], (uint64_t)v0 + v8, (unint64_t)v0 + v3, (unint64_t)v0 + v4, (unint64_t)v0 + ((v4 + *(_QWORD *)(v5 + 64) + v7) & ~v7), v10, v11, v12, v6, v13);
  OUTLINED_FUNCTION_125_0();
}

#error "190BBA18C: call analysis failed (funcsize=31)"

void sub_190BBA1D0()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_49_8();
  OUTLINED_FUNCTION_59_9();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  sub_190BACC14(v14, v0[12], v0[13], v0[14], v0[15], (uint64_t)v0 + v3, (unint64_t)v0 + v4, (unint64_t)v0 + v8, (unint64_t)v0 + v11, (unint64_t)v0 + ((v11 + *(_QWORD *)(v10 + 64) + v13) & ~v13), v15, v16, v6, v9, v12, v17);
  OUTLINED_FUNCTION_132_0();
}

#error "190BBA314: call analysis failed (funcsize=55)"

void sub_190BBA354()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_33_17();
  v2 = (v1 + 120) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
  sub_190BAD200(v20, v0[12], v0[13], v0[14], (uint64_t)v0 + v2, (unint64_t)v0 + v6, (unint64_t)v0 + v9, (unint64_t)v0 + v12, (unint64_t)v0 + v16, (unint64_t)v0 + ((v16 + v17 + v19) & ~v19), v21, v4, v7, v10, v14, v18, v22);
  OUTLINED_FUNCTION_160_0();
}

#error "190BBA4F0: call analysis failed (funcsize=70)"

void sub_190BBA540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_60_9();
  v2 = (v1 + 112) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80);
  sub_190BAD888(v24, *(_QWORD **)(v0 + 96), *(_QWORD **)(v0 + 104), v0 + v2, v0 + v6, v0 + v9, v0 + v12, v0 + v16, v0 + v20, v0 + ((v20 + v21 + v23) & ~v23), v25, v4, v7, v10, v14, v18, v22, v26);
  OUTLINED_FUNCTION_160_0();
}

#error "190BBA738: call analysis failed (funcsize=91)"

uint64_t sub_190BBA798()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_84_4();
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (v20 + v21 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = *(_QWORD *)(v23 + 64);
  v27 = *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80);
  return sub_190BADFA8(v28, *(_QWORD **)(v0 + 96), v0 + v2, v0 + v5, v0 + v8, v0 + v12, v0 + v16, v0 + v20, v0 + v24, v0 + ((v24 + v25 + v27) & ~v27), v29, v3, v6, v10, v14, v18, v22, v26, v30);
}

#error "190BBAA40: call analysis failed (funcsize=124)"

uint64_t sub_190BBAAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_109_1();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (v11 + v12 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (v15 + v16 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = *(_QWORD *)(v18 + 64);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (v19 + v20 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = *(_QWORD *)(v22 + 64);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = (v23 + v24 + *(unsigned __int8 *)(v26 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v28 = *(_QWORD *)(v26 + 64);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = (v27 + v28 + *(unsigned __int8 *)(v30 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v32 = *(_QWORD *)(v30 + 64);
  v34 = *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80);
  return sub_190BAE754(v35, v1 + v4, v1 + v7, v1 + v11, v1 + v15, v1 + v19, v1 + v23, v1 + v27, v36, v1 + v31, v1 + ((v31 + v32 + v34) & ~v34), v2, v5, v9, v13, v17, v21, v25, v29,
           v33,
           v0);
}

uint64_t sub_190BBABE4()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_54_9();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

void sub_190BBAC30()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_106_2();
  sub_190BA91F0(v2, v0[11], v0[12], v0[13], v0[14], v0[15], v0[16], v0[17], (uint64_t)v0 + ((v1 + 144) & ~v1), v3, v4);
  OUTLINED_FUNCTION_88();
}

uint64_t sub_190BBAC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_93_4();
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_35_16();
  OUTLINED_FUNCTION_15_1(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

void sub_190BBACC4()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_26_17();
  sub_190BA94FC(v3, v0[11], v0[12], v0[13], v0[14], v0[15], v0[16], (uint64_t)v0 + v1, (uint64_t)v0 + v2, v4, v5, v6);
  OUTLINED_FUNCTION_88();
}

uint64_t sub_190BBAD04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_164_0();
  v4 = (v3 + 128) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_26_0(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_11_9(v0 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BBAD84()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_9_40();
  sub_190BA9890(v4, v0[11], v0[12], v0[13], v0[14], v0[15], (uint64_t)v0 + v1, (unint64_t)v0 + v2, (uint64_t)v0 + v3, v5, v6, v7, v8);
  OUTLINED_FUNCTION_77_5();
}

#error "190BBAE5C: call analysis failed (funcsize=46)"

void sub_190BBAE84()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_112();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  sub_190BA9CD4(v9, v0[11], v0[12], v0[13], v0[14], (uint64_t)v0 + v8, (uint64_t)v0 + v3, (unint64_t)v0 + v4, (unint64_t)v0 + ((v4 + *(_QWORD *)(v5 + 64) + v7) & ~v7), v10, v11, v12, v6, v13);
  OUTLINED_FUNCTION_77_5();
}

#error "190BBAF68: call analysis failed (funcsize=42)"

void sub_190BBAFA4()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_49_8();
  OUTLINED_FUNCTION_59_9();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  sub_190BAA1C8(v14, v0[11], v0[12], v0[13], (uint64_t)v0 + v3, (uint64_t)v0 + v4, (uint64_t)v0 + v8, (unint64_t)v0 + v11, (unint64_t)v0 + ((v11 + *(_QWORD *)(v10 + 64) + v13) & ~v13), v15, v16, v6, v9, v12, v17);
  OUTLINED_FUNCTION_132_0();
}

#error "190BBB0E4: call analysis failed (funcsize=54)"

void sub_190BBB124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_33_17();
  v2 = (v1 + 104) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
  sub_190BAA73C(v20, *(_QWORD **)(v0 + 88), *(_QWORD **)(v0 + 96), v0 + v2, v0 + v6, v0 + v9, v0 + v12, v0 + v16, v0 + ((v16 + v17 + v19) & ~v19), v21, v4, v7, v10, v14, v18, v22);
  OUTLINED_FUNCTION_132_0();
}

#error "190BBB2E8: call analysis failed (funcsize=84)"

void sub_190BBB340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_60_9();
  v2 = (v1 + 96) & ~v1;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80);
  sub_190BAAD5C(v24, *(_QWORD **)(v0 + 88), v0 + v2, v0 + v6, v0 + v9, v0 + v12, v0 + v16, v0 + v20, v0 + ((v20 + v21 + v23) & ~v23), v25, v4, v7, v10, v14, v18, v22, v26);
  OUTLINED_FUNCTION_128_1();
}

#error "190BBB560: call analysis failed (funcsize=105)"

uint64_t sub_190BBB5D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_147_0();
  v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (v20 + v21 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = *(_QWORD *)(v23 + 64);
  v27 = *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80);
  return sub_190BAB3F8(v28, v0 + v2, v0 + v5, v0 + v8, v0 + v12, v0 + v16, v0 + v20, v0 + v24, v29, v0 + ((v24 + v25 + v27) & ~v27), v30, v3, v6, v10, v14, v18, v22, v26, *(_QWORD *)(v0 + 80));
}

uint64_t sub_190BBB6E4()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_25_23();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

void sub_190BBB72C()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_106_2();
  sub_190BA72E4(v2, v0[10], v0[11], v0[12], v0[13], v0[14], v0[15], (uint64_t)v0 + ((v1 + 128) & ~v1), v3, v4);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BBB764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_93_4();
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_16_29();
  OUTLINED_FUNCTION_15_1(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

void sub_190BBB7B4()
{
  unint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_129_1();
  sub_190BA7590(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_88();
}

uint64_t sub_190BBB7F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_98();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v4 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_11_9(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_26_0(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BBB878()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_9_40();
  sub_190BA78DC(v4, v0[10], v0[11], v0[12], v0[13], (uint64_t)v0 + v1, (uint64_t)v0 + v2, (unint64_t)v0 + v3, v5, v6, v7, v8);
  OUTLINED_FUNCTION_88();
}

#error "190BBB944: call analysis failed (funcsize=45)"

void sub_190BBB96C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_112();
  v13 = v0;
  v14 = v1;
  OUTLINED_FUNCTION_129_1();
  sub_190BA7C9C(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_77_5();
}

#error "190BBBA48: call analysis failed (funcsize=41)"

void sub_190BBBA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_49_8();
  OUTLINED_FUNCTION_59_9();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  sub_190BA812C(v14, *(_QWORD **)(v0 + 80), *(_QWORD **)(v0 + 88), v0 + v3, v0 + v4, v0 + v8, v0 + v11, v0 + ((v11 + *(_QWORD *)(v10 + 64) + v13) & ~v13), v15, v16, v6, v9, v12, v17);
  OUTLINED_FUNCTION_77_5();
}

#error "190BBBC10: call analysis failed (funcsize=82)"

void sub_190BBBC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_33_17();
  v17 = v0;
  v18 = v1;
  v15 = v2;
  v16 = v3;
  OUTLINED_FUNCTION_129_1();
  sub_190BA8640(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  OUTLINED_FUNCTION_125_0();
}

#error "190BBBE3C: call analysis failed (funcsize=88)"

uint64_t sub_190BBBE8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_147_0();
  v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (v2 + *(_QWORD *)(v1 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (v12 + v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80);
  return sub_190BA8C08(v24, v0 + v2, v0 + v5, v0 + v8, v0 + v12, v0 + v16, v0 + v20, v0 + ((v20 + v21 + v23) & ~v23), v25, v26, v3, v6, v10, v14, v18, v22, v27);
}

uint64_t sub_190BBBF7C()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_23_23();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

void sub_190BBBFC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_190BA5BEC(a1, *(_QWORD **)(v1 + 72), *(_QWORD **)(v1 + 80), *(_QWORD **)(v1 + 88), *(_QWORD **)(v1 + 96), *(_QWORD **)(v1 + 104), v1 + ((v3 + 112) & ~v3), v2, *(_QWORD *)(v1 + 24));
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BBC000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_93_4();
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_31_16();
  OUTLINED_FUNCTION_15_1(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

void sub_190BBC04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80);
  sub_190BA5E54(a1, *(_QWORD **)(v1 + 72), *(_QWORD **)(v1 + 80), *(_QWORD **)(v1 + 88), *(_QWORD **)(v1 + 96), v1 + v4, v1 + ((v4 + *(_QWORD *)(v3 + 64) + v5) & ~v5), v2, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BBC0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_126_1();
  v4 = (v3 + 96) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_15_1(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_11_9(v0 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_85_5();
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BBC120()
{
  unint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_150_0();
  OUTLINED_FUNCTION_129_1();
  sub_190BA6134(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_88();
}

#error "190BBC22C: call analysis failed (funcsize=51)"

void sub_190BBC254(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 24) - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)(v1 + 32) - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 40) - 8) + 80);
  sub_190BA64AC(a1, *(_QWORD **)(v1 + 72), *(_QWORD **)(v1 + 80), v1 + v4, v1 + v6, v1 + v8, v1 + ((v8 + *(_QWORD *)(v7 + 64) + v9) & ~v9), v2, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
  OUTLINED_FUNCTION_88();
}

#error "190BBC350: call analysis failed (funcsize=40)"

void sub_190BBC38C()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_129_1();
  sub_190BA68B8(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_77_5();
}

#error "190BBC524: call analysis failed (funcsize=72)"

uint64_t sub_190BBC560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_59_9();
  v4 = (v3 + v1 + v2) & ~v2;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (v11 + *(_QWORD *)(v10 + 64) + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v17 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
  return sub_190BA6D7C(v18, v0 + v3, v0 + v4, v0 + v8, v0 + v11, v0 + v14, v0 + ((v14 + v15 + v17) & ~v17), v19, v20, v21, v6, v9, v12, v16, *(_QWORD *)(v0 + 64));
}

uint64_t sub_190BBC62C()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_39_16();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

uint64_t sub_190BBC66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_190BA4B1C(a1, *(_QWORD **)(v1 + 64), *(_QWORD **)(v1 + 72), *(_QWORD **)(v1 + 80), *(_QWORD **)(v1 + 88), v1 + ((v3 + 96) & ~v3), v2, *(_QWORD *)(v1 + 24));
}

uint64_t sub_190BBC6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_93_4();
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_58_8();
  OUTLINED_FUNCTION_15_1(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

void sub_190BBC6E8()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_158_0();
  OUTLINED_FUNCTION_163_0();
  sub_190BA4D54(v3, v0[8], v0[9], v0[10], (uint64_t)v0 + v1, (uint64_t)v0 + v2, v4, v5, v6);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BBC734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_126_1();
  v4 = (v3 + 80) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_15_1(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_11_9(v0 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_85_5();
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BBC7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_145_0();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_190BA5000(v6, *(_QWORD **)(v0 + 64), *(_QWORD **)(v0 + 72), v0 + v4, v0 + v5, v0 + ((v5 + v3 + v2) & ~v2), v7, v8, v1, v9);
  OUTLINED_FUNCTION_40_0();
}

#error "190BBC8A4: call analysis failed (funcsize=48)"

void sub_190BBC8CC()
{
  unint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_150_0();
  OUTLINED_FUNCTION_129_1();
  sub_190BA5334(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_88();
}

#error "190BBCA10: call analysis failed (funcsize=58)"

uint64_t sub_190BBCA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v3 = v2[2];
  v4 = v2[3];
  v5 = *(_QWORD *)(v3 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v2[4] - 8);
  v10 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v2[5] - 8);
  v12 = (v10 + *(_QWORD *)(v9 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v2[6] - 8) + 80);
  return sub_190BA5710(a1, (uint64_t)v2 + v6, (uint64_t)v2 + v8, (uint64_t)v2 + v10, (uint64_t)v2 + v12, (uint64_t)v2 + ((v12 + *(_QWORD *)(v11 + 64) + v13) & ~v13), v3, v4, a2, v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_190BBCAEC()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

uint64_t sub_190BBCB28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_190BA3F3C(a1, *(_QWORD **)(v1 + 56), *(_QWORD **)(v1 + 64), *(_QWORD **)(v1 + 72), v1 + ((v3 + 80) & ~v3), v2, *(_QWORD *)(v1 + 24));
}

uint64_t sub_190BBCB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_93_4();
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_15_1(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

uint64_t sub_190BBCBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_159_0();
  return sub_190BA4154(v3, *(_QWORD **)(v0 + 56), *(_QWORD **)(v0 + 64), v0 + v1, v0 + v2, v4, v5, v6);
}

uint64_t sub_190BBCBE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_126_1();
  v4 = (v3 + 64) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_15_1(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_11_9(v0 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_85_5();
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

void sub_190BBCC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_158_0();
  OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_171_0();
  sub_190BA43C8(v4, *(_QWORD **)(v0 + 56), v0 + v1, v0 + v2, v0 + v3, v5, v6, v7, v8);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BBCCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_98();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  OUTLINED_FUNCTION_156_0();
  OUTLINED_FUNCTION_155_0();
  v3 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_173();
  v6 = v4 & ~v5;
  v7 = *(_QWORD *)(v2 - 8);
  v8 = (v6 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  OUTLINED_FUNCTION_37_12(v9);
  OUTLINED_FUNCTION_15_1(v0 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_11_9(v0 + v8, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_85_5();
  OUTLINED_FUNCTION_111_2();
  return OUTLINED_FUNCTION_0_67();
}

uint64_t sub_190BBCD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_145_0();
  v2 = *(_QWORD *)(v1 - 8);
  v5 = (v4 + v3 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  return sub_190BA46B4(v9, v0 + v8, v0 + v4, v0 + v5, v0 + ((v5 + *(_QWORD *)(v2 + 64) + v7) & ~v7), v10, v11, v1, v12, v6, *(_QWORD *)(v0 + 48));
}

uint64_t sub_190BBCDE0()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

uint64_t sub_190BBCE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_93_4();
  OUTLINED_FUNCTION_7_43();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_15_1(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

uint64_t sub_190BBCE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_72();
  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_156_0();
  OUTLINED_FUNCTION_155_0();
  v2 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_173();
  v5 = v3 & ~v4;
  OUTLINED_FUNCTION_37_12(v6);
  OUTLINED_FUNCTION_15_1(v0 + v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_42_12();
  return OUTLINED_FUNCTION_13_1();
}

uint64_t sub_190BBCEDC()
{
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

uint64_t sub_190BBCF10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_156_0();
  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_37_12(v0);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_11();
  return OUTLINED_FUNCTION_103();
}

uint64_t sub_190BBCF68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_156_0();
  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_37_12(v0);
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_91_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v17 + v18, a17);
}

uint64_t OUTLINED_FUNCTION_92_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a2(a1, a11);
}

uint64_t OUTLINED_FUNCTION_98_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_100_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23 + a15, a23);
}

uint64_t OUTLINED_FUNCTION_103_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_105_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22 + a16, a22);
}

void OUTLINED_FUNCTION_114_2()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[6];
  v3 = v0[7];
  *(_QWORD *)(v1 - 120) = v0[5];
  *(_QWORD *)(v1 - 112) = v2;
  v4 = v0[8];
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = v4;
}

uint64_t OUTLINED_FUNCTION_122_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return a2(a1, a17);
}

uint64_t OUTLINED_FUNCTION_130_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v16 + 8))(v15 + a15, *(_QWORD *)(v17 - 112));
}

uint64_t OUTLINED_FUNCTION_135()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_138_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v16 + 8))(v17 + a16, *(_QWORD *)(v18 - 120));
}

uint64_t OUTLINED_FUNCTION_139@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 112));
}

uint64_t OUTLINED_FUNCTION_140_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 120));
}

uint64_t OUTLINED_FUNCTION_141(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24 + a18, a24);
}

__n128 OUTLINED_FUNCTION_144_0()
{
  __n128 *v0;

  return v0[5];
}

uint64_t OUTLINED_FUNCTION_146_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_161_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_162_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_167()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_168(uint64_t a1)
{
  uint64_t v1;

  return sub_190AC06B8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_169@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 8))(a1, *(_QWORD *)(v2 - 128));
}

uint64_t sub_190BBD304()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BBD32C(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  char isEscapingClosureAtFileLocation;

  sub_190BE54EC();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    goto LABEL_6;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  a1();
  if (v2)
    return swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_190BE5C54();
    sub_190BE5114();
    sub_190BE644C();
    sub_190BE5114();
    swift_bridgeObjectRelease();
    sub_190BE5114();
    result = sub_190BE5E58();
    __break(1u);
  }
  return result;
}

uint64_t sub_190BBD4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_190BE54F8();
  v5[4] = sub_190BE54EC();
  sub_190BE5474();
  return swift_task_switch();
}

uint64_t sub_190BBD524()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release();
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190BBD55C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BBD588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_27_0(v3);
  v5 = OUTLINED_FUNCTION_5_39(v4);
  return sub_190BBD4B8(v5, v6, v7, v2, v1);
}

uint64_t sub_190BBD5EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_190BBD60C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 24) = a5;
  *(_QWORD *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a1;
  v7 = sub_190BE5DB0();
  *(_QWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 48) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190BBD670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = sub_190BE63C8();
  v3 = v2;
  sub_190BE5DA4();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1EE2004C8 + dword_1EE2004C8);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_190BBD704;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_190BBD704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return OUTLINED_FUNCTION_2_31();
}

uint64_t sub_190BBD780()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_3();
  *(_QWORD *)(v0 + 80) = sub_190BE54EC();
  sub_190BE5474();
  return OUTLINED_FUNCTION_2_31();
}

uint64_t sub_190BBD7E0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  v2 = swift_release();
  v1(v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190BBD82C()
{
  return swift_unexpectedError();
}

uint64_t sub_190BBD848()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BBD874()
{
  double *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[4];
  v3 = *((_QWORD *)v0 + 5);
  v2 = *((_QWORD *)v0 + 6);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_27_0(v4);
  v6 = OUTLINED_FUNCTION_5_39(v5);
  return sub_190BBD60C(v1, v6, v7, v8, v3, v2);
}

uint64_t sub_190BBD8E0(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_27_0(v4);
  *v5 = v2;
  v5[1] = sub_190B517D8;
  return v7(a1);
}

uint64_t sub_190BBD940()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BBD968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_190BE5D98();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_190BBDA0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_190BE5DB0();
  sub_190AC2574(qword_1ED033310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
  sub_190BE6278();
  sub_190AC2574((unint64_t *)&unk_1ED032960, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B90]);
  sub_190BE5DBC();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_190BBDB24;
  return sub_190BE6284();
}

uint64_t sub_190BBDB24()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_190BBDBD0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t dispatch thunk of ContextType.useOptional<A>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ContextType.useWeakOptional<A>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of ContextType.useOptional<A>(_:for:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 72))();
}

{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

uint64_t dispatch thunk of ContextType.useWeakOptional<A>(_:for:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t dispatch thunk of ContextType.bridgedContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_190BBDC50()
{
  uint64_t v0;
  void (*v1)(uint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v4;

  v1 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v0 + 16);
  v2 = swift_retain();
  v1(&v4, v2);
  swift_release();
  return v4;
}

id sub_190BBDC90()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  v1 = (objc_class *)type metadata accessor for BridgedContext();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC13TeaFoundation14BridgedContext_context] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  OUTLINED_FUNCTION_1();
  return objc_msgSendSuper2(&v4, sel_init);
}

void sub_190BBDCE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;

  OUTLINED_FUNCTION_72();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = OUTLINED_FUNCTION_27_20();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&a9 - v31;
  v33 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v30);
  v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v27, v28);
  OUTLINED_FUNCTION_27_8((uint64_t)v32);
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  }
  else
  {
    OUTLINED_FUNCTION_65((uint64_t)v35, (uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
    sub_190AF9FE8((uint64_t)v35, v25, v23);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v23);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190BBDDD0(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  if (result)
  {
    v7 = swift_unknownObjectRetain();
    a4(v7, a2, a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190BBDE24()
{
  toKey<A>(type:name:)();
  sub_190AFA138();
  return OUTLINED_FUNCTION_3_1();
}

void sub_190BBDE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_72();
  v16 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_190BE59A8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - v11;
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_30();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v7, v8);
  OUTLINED_FUNCTION_27_8((uint64_t)v12);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    OUTLINED_FUNCTION_65(v1, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
    sub_190B06EA8(v1, v5);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v3);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190BBDF90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  if (result)
  {
    v11 = swift_unknownObjectRetain();
    a6(v11, a2, a3, a4, a5);
    return swift_unknownObjectRelease();
  }
  return result;
}

#error "190BBE00C: call analysis failed (funcsize=8)"

uint64_t sub_190BBE01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190BBDDD0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_190AAF56C);
}

uint64_t sub_190BBE044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190BBDDD0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_190AAEC84);
}

uint64_t sub_190BBE06C()
{
  return sub_190BBDE24();
}

void sub_190BBE08C()
{
  sub_190BBDE94();
}

uint64_t sub_190BBE0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_190BBDF90(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_190BBDE24);
}

uint64_t sub_190BBE0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_190BBDF90(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_190AB0320);
}

id sub_190BBE0FC()
{
  return sub_190BBDC90();
}

uint64_t sub_190BBE11C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

TeaFoundation::PromiseDeduperFlags __swiftcall PromiseDeduperFlags.init(rawValue:)(TeaFoundation::PromiseDeduperFlags rawValue)
{
  TeaFoundation::PromiseDeduperFlags *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PromiseDeduperFlags.dedupeUntilSuccess.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t PromiseDeduperFlags.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaFoundation::PromiseDeduperFlags sub_190BBE154(Swift::Int *a1)
{
  return PromiseDeduperFlags.init(rawValue:)(*a1);
}

TeaFoundation::PromiseDeduperFlags sub_190BBE15C@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaFoundation::PromiseDeduperFlags result;

  result.rawValue = PromiseDeduperFlags.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_190BBE184@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PromiseDeduperFlags.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_190BBE1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v58;

  v15 = a4[6];
  v16 = a4[7];
  v17 = a4 + 3;
  __swift_project_boxed_opaque_existential_1(a4 + 3, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  OUTLINED_FUNCTION_20_0();
  sub_190B20998(a1, a4[2]);
  if (v18)
  {
    v19 = v18;
    OUTLINED_FUNCTION_23_25();
    OUTLINED_FUNCTION_1_65(v17);
    if (a3)
    {
      v20 = qword_1ED034A18;
      OUTLINED_FUNCTION_16_2();
      if (v20 != -1)
        swift_once();
      v21 = OUTLINED_FUNCTION_96();
      v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED039A70);
      OUTLINED_FUNCTION_16_2();
      sub_190BE4A0C();
      v23 = OUTLINED_FUNCTION_5_2();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)OUTLINED_FUNCTION_20_1();
        OUTLINED_FUNCTION_20_1();
        *(_DWORD *)v24 = 136315138;
        v25 = OUTLINED_FUNCTION_16_2();
        OUTLINED_FUNCTION_6_45(v25, v26, v27, v28, v29, v30, v31, v32, v58);
        OUTLINED_FUNCTION_22_24();
        sub_190BE5A2C();
        OUTLINED_FUNCTION_13_26();
        OUTLINED_FUNCTION_50(&dword_190AA0000, v22, v23, "Using existing Promise for key: %s", v24);
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_12_0();
      }
      swift_release();

      OUTLINED_FUNCTION_19_0();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    OUTLINED_FUNCTION_23_25();
    if (a3)
    {
      v33 = qword_1ED034A18;
      OUTLINED_FUNCTION_16_2();
      if (v33 != -1)
        swift_once();
      v34 = OUTLINED_FUNCTION_96();
      v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED039A70);
      OUTLINED_FUNCTION_16_2();
      sub_190BE4A0C();
      v36 = OUTLINED_FUNCTION_5_2();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)OUTLINED_FUNCTION_20_1();
        OUTLINED_FUNCTION_20_1();
        *(_DWORD *)v37 = 136315138;
        v38 = OUTLINED_FUNCTION_16_2();
        OUTLINED_FUNCTION_6_45(v38, v39, v40, v41, v42, v43, v44, v45, v58);
        OUTLINED_FUNCTION_22_24();
        sub_190BE5A2C();
        OUTLINED_FUNCTION_13_26();
        OUTLINED_FUNCTION_50(&dword_190AA0000, v35, v36, "Creating new Promise for key: %s", v37);
        OUTLINED_FUNCTION_82();
        OUTLINED_FUNCTION_12_0();
      }

      OUTLINED_FUNCTION_19_0();
    }
    a5(a7);
    v46 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v46 + 16) = a8;
    *(_QWORD *)(v46 + 24) = a9;
    v47 = qword_1ED035648;
    swift_retain();
    if (v47 != -1)
      swift_once();
    v48 = (id)qword_1ED035618;
    sub_190B5C040();
    v19 = v49;
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_5_0();

    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_44();
    v50 = swift_retain();
    sub_190B1D67C(v50, a1);
    OUTLINED_FUNCTION_23_25();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_65(v17);
    v51 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v51 + 16) = a4;
    *(_QWORD *)(v51 + 24) = a1;
    v52 = (void *)qword_1ED035618;
    OUTLINED_FUNCTION_44();
    swift_retain();
    v53 = v52;
    sub_190B2C22C();
    OUTLINED_FUNCTION_5_0();

    v54 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v54 + 16) = a4;
    *(_QWORD *)(v54 + 24) = a1;
    v55 = (void *)qword_1ED035618;
    OUTLINED_FUNCTION_44();
    swift_retain();
    v56 = v55;
    sub_190ADE658((uint64_t)v56, (uint64_t)sub_190BBEB54, v54);
    swift_release();
    OUTLINED_FUNCTION_5_0();

    swift_release();
    OUTLINED_FUNCTION_2();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_190BBE658(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2 + 3;
  v4 = a2[6];
  v5 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (!a2[8])
  {
    swift_beginAccess();
    sub_190B1D4CC();
    swift_endAccess();
    swift_release();
  }
  v7 = a2[6];
  v6 = a2[7];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
}

uint64_t sub_190BBE728(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2 + 3;
  v4 = a2[6];
  v5 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v6 = a2[8];
  if ((v6 & 1) == 0 && (!v6 || (v6 & 2) != 0))
  {
    swift_beginAccess();
    sub_190B1D4CC();
    swift_endAccess();
    swift_release();
  }
  v8 = a2[6];
  v7 = a2[7];
  __swift_project_boxed_opaque_existential_1(v3, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v8, v7);
}

void sub_190BBE7F0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  sub_190B06D9C(0, (unint64_t *)&qword_1ED02F2E8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
  v7 = swift_allocObject();
  if (v6)
  {
    v11 = 0;
    type metadata accessor for UnfairLock();
    swift_allocObject();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    UnfairLock.init(options:)((int *)&v11);
    v9 = v8;
    sub_190B06D9C(0, &qword_1ED02F2C0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
    swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_190AC8364(v9);
    swift_retain_n();
    sub_190BBE93C((uint64_t)sub_190BBEB68, v7, (uint64_t)sub_190BBEB70, v7, a2, a3, a1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
  }
  else
  {
    v10 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B71128(v10);
  }
}

void sub_190BBE93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  swift_retain();
  a5(a7);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = sub_190BBEB9C;
  v12[3] = v11;
  v12[4] = a7;
  v13 = qword_1ED035648;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v13 != -1)
    swift_once();
  v14 = (id)qword_1ED035618;
  sub_190B22150((uint64_t)v14, (uint64_t)sub_190BBEBF8, (uint64_t)v12);
  swift_release();
  swift_release();
  swift_release();

}

unint64_t sub_190BBEA4C()
{
  unint64_t result;

  result = qword_1EE2004D0;
  if (!qword_1EE2004D0)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for PromiseDeduperFlags, &type metadata for PromiseDeduperFlags);
    atomic_store(result, (unint64_t *)&qword_1EE2004D0);
  }
  return result;
}

unint64_t sub_190BBEA8C()
{
  unint64_t result;

  result = qword_1EE2004D8;
  if (!qword_1EE2004D8)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for PromiseDeduperFlags, &type metadata for PromiseDeduperFlags);
    atomic_store(result, (unint64_t *)&qword_1EE2004D8);
  }
  return result;
}

uint64_t method lookup function for PromiseDeduper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromiseDeduper.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_190BBEADC(uint64_t *a1, _QWORD *a2)
{
  return sub_190BBE658(*a1, a2);
}

uint64_t sub_190BBEAF8(uint64_t a1, _QWORD *a2)
{
  return sub_190BBE728(a1, a2);
}

void sub_190BBEB00(uint64_t *a1, void (*a2)(uint64_t), uint64_t a3)
{
  sub_190BBE7F0(*a1, a2, a3);
}

void sub_190BBEB18(uint64_t *a1)
{
  uint64_t v1;

  sub_190BBEB00(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_190BBEB34(uint64_t *a1)
{
  uint64_t v1;

  return sub_190BBEADC(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_190BBEB54(uint64_t a1)
{
  uint64_t v1;

  return sub_190BBEAF8(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_190BBEB60()
{
  return sub_190B75350();
}

uint64_t sub_190BBEB68()
{
  return sub_190BBEB60();
}

uint64_t sub_190BBEB70(uint64_t a1)
{
  uint64_t v1;

  return sub_190B21174(a1, v1);
}

uint64_t sub_190BBEB78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BBEB9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_190BBEBCC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BBEBF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

BOOL sub_190BBEC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD v9[4];
  _QWORD v10[4];

  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  v9[0] = a5;
  v9[1] = a6;
  v9[2] = a7;
  v9[3] = a8;
  return (static Version.< infix(_:_:)((uint64_t)v10, v9) & 1) == 0;
}

BOOL sub_190BBEC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_13_27();
  return (OUTLINED_FUNCTION_10_38(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12) & 1) == 0;
}

BOOL sub_190BBEC88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2;
  v4 = a1;
  return !static VersionNumber.< infix(_:_:)((_BOOL8)&v4, (uint64_t)&v3);
}

BOOL sub_190BBECB8()
{
  return (sub_190BE6380() & 1) == 0;
}

uint64_t sub_190BBECD4()
{
  _QWORD v1[3];
  _QWORD v2[3];

  OUTLINED_FUNCTION_13_27();
  return static VersionQualifier.< infix(_:_:)(v1, v2) & 1;
}

BOOL sub_190BBED00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2;
  v4 = a1;
  return static VersionNumber.< infix(_:_:)((_BOOL8)&v3, (uint64_t)&v4);
}

uint64_t sub_190BBED2C()
{
  return sub_190BE6380();
}

uint64_t Version.base.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t Version.qualifier.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_190AA27A0(v2, v3);
}

uint64_t Version.numbers.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

__n128 Version.init(base:qualifier:)@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  __n128 result;

  v3 = a2[1].n128_u64[0];
  *(_QWORD *)a3 = *a1;
  result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  *(_QWORD *)(a3 + 24) = v3;
  return result;
}

uint64_t sub_190BBED8C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B05A18(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190BDC87C);
}

uint64_t sub_190BBED98(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B05A18(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190BBEC24);
}

_QWORD *assignWithCopy for Version(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *a1 = *a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2 + 1;
  v6 = a2[2];
  if (a1[2])
  {
    if (v6)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_190BBEE9C((uint64_t)(a1 + 1));
      v7 = a2[3];
      *v4 = *v5;
      a1[3] = v7;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  else
  {
    v8 = *v5;
    a1[3] = a2[3];
    *v4 = v8;
  }
  return a1;
}

uint64_t sub_190BBEE9C(uint64_t a1)
{
  destroy for XPCArgument();
  return a1;
}

uint64_t RangeReplaceableCollection<>.applyChanges<A, B>(_:elementConstructor:)(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t AssociatedConformanceWitness;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t AssociatedTypeWitness;
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;

  v106 = a3;
  v105 = a2;
  v128 = a1;
  v109 = *(_QWORD *)(a4 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_1_0();
  v99 = v14;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v15);
  v104 = (uint64_t)&v96 - v16;
  v121 = *(_QWORD *)(v17 + 8);
  v122 = v17;
  v123 = v18;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v100 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_28();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v113 = (char *)&v96 - v23;
  v129 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_1_0();
  v108 = v25;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v26);
  v103 = (char *)&v96 - v27;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v28);
  v102 = (char *)&v96 - v29;
  v131 = a5;
  v112 = a8;
  v31 = type metadata accessor for CollectionChange(255, a5, a8, v30);
  v127 = v31;
  v97 = sub_190BE59A8();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v33 = (char *)&v96 - v32;
  v132 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_1_0();
  v124 = v35;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v96 - v37;
  v110 = a9;
  v39 = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_1_0();
  v120 = v41;
  OUTLINED_FUNCTION_13_0();
  v43 = MEMORY[0x1E0C80A78](v42);
  v45 = (char *)&v96 - v44;
  MEMORY[0x1E0C80A78](v43);
  v47 = (char *)&v96 - v46;
  sub_190BE57C8();
  v111 = a6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v125 = v39;
  v126 = v47;
  sub_190BE5774();
  v49 = v127;
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v127) != 1)
  {
    v115 = AssociatedConformanceWitness;
    v114 = v45;
    v118 = v40;
    v128 = 0;
    v107 = a10;
    v51 = v132;
    v119 = *(void (**)(char *, char *, uint64_t))(v132 + 32);
    v116 = v38;
    v117 = v33;
    v98 = v22;
    while (1)
    {
      v119(v38, v33, v49);
      v52 = v124;
      (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v124, v38, v49);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        v54 = v129;
        if (EnumCaseMultiPayload == 1)
        {
          v55 = v103;
          v56 = v131;
          (*(void (**)(char *, uint64_t, uint64_t))(v129 + 32))(v103, v52, v131);
          v57 = v109;
          v58 = v104;
          v59 = v123;
          v60 = OUTLINED_FUNCTION_65(v104, v130, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 16));
          MEMORY[0x1E0C80A78](v60);
          *(&v96 - 8) = v59;
          *(&v96 - 7) = v56;
          OUTLINED_FUNCTION_0_69((uint64_t)&v96);
          *(_QWORD *)(v61 - 16) = v62;
          *(_QWORD *)(v61 - 8) = v55;
          v63 = v128;
          sub_190BE5714();
          v128 = v63;
          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v59);
          if (v134 != 1)
          {
            OUTLINED_FUNCTION_3_57();
            v65 = *(_QWORD *)(v64 - 256);
            OUTLINED_FUNCTION_5_42();
            (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v65, AssociatedTypeWitness);
          }
          (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v131);
        }
        else
        {
          v70 = *(_QWORD *)(v52 + *(int *)(swift_getTupleTypeMetadata2() + 48));
          v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32);
          v72 = v108;
          OUTLINED_FUNCTION_65(v108, v52, v71);
          v73 = v123;
          if (v70 >= sub_190BE56A8())
          {
            (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v127);
            (*(void (**)(char *, uint64_t))(v118 + 8))(v126, v125);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v129 + 8))(v72, v131);
          }
          v74 = v99;
          v75 = v72;
          v76 = v109;
          v77 = OUTLINED_FUNCTION_65(v99, v130, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 16));
          v78 = v131;
          MEMORY[0x1E0C80A78](v77);
          *(&v96 - 8) = v73;
          *(&v96 - 7) = v78;
          OUTLINED_FUNCTION_0_69((uint64_t)&v96);
          *(_QWORD *)(v79 - 16) = v80;
          *(_QWORD *)(v79 - 8) = v75;
          v81 = v128;
          sub_190BE5714();
          (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
          v128 = v81;
          if (v134 != 1)
          {
            OUTLINED_FUNCTION_3_57();
            v83 = *(_QWORD *)(v82 - 256);
            OUTLINED_FUNCTION_5_42();
            v84 = v100;
            v85 = AssociatedTypeWitness;
            (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v98, v83, AssociatedTypeWitness);
            v133 = v70;
            sub_190BE581C();
            (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
          }
          (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v108, v78);
        }
        v51 = v132;
      }
      else
      {
        v66 = v129;
        v67 = v102;
        v68 = v52;
        v69 = v131;
        (*(void (**)(char *, uint64_t, uint64_t))(v129 + 32))(v102, v68, v131);
        v105(v67);
        sub_190BE5810();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v69);
      }
      v86 = v118;
      v87 = v114;
      v89 = v125;
      v88 = v126;
      (*(void (**)(uint64_t, char *, uint64_t))(v118 + 16))(v120, v126, v125);
      sub_190BE57B0();
      v90 = *(void (**)(char *, uint64_t))(v51 + 8);
      v38 = v116;
      v91 = v127;
      v90(v116, v127);
      v92 = v87;
      v50 = *(void (**)(char *, uint64_t))(v86 + 8);
      v50(v88, v89);
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v88, v92, v89);
      v33 = v117;
      sub_190BE5774();
      v49 = v91;
      v51 = v132;
      if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v49) == 1)
        goto LABEL_16;
    }
  }
  v50 = *(void (**)(char *, uint64_t))(v40 + 8);
LABEL_16:
  v93 = v97;
  v94 = v96;
  v50(v126, v125);
  return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v33, v93);
}

uint64_t type metadata accessor for CollectionChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollectionChange);
}

uint64_t sub_190BBF6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a9 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = v11(AssociatedTypeWitness, a9);
  v15 = v14;
  if (v13 == (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 8))(a4, a7) && v15 == v16)
    v18 = 1;
  else
    v18 = sub_190BE60BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t sub_190BBF798(uint64_t a1)
{
  return sub_190BBF7B0(a1) & 1;
}

uint64_t sub_190BBF7B0(uint64_t a1)
{
  uint64_t *v1;

  return sub_190BBF6B8(a1, v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]) & 1;
}

uint64_t RangeReplaceableCollection<>.applyChanges<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return RangeReplaceableCollection<>.applyChanges<A, B>(_:elementConstructor:)(a1, (void (*)(char *))sub_190BBF8E8, (uint64_t)v14, a2, AssociatedTypeWitness, a3, a4, a6, a5, a6);
}

uint64_t sub_190BBF890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_190BBF8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190BBF890(a1, a2);
}

uint64_t sub_190BBF8F8()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v3 = *(_QWORD *)(result - 8) + 64;
    v4 = v3;
    swift_getTupleTypeLayout2();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_190BBF97C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v11 = *((unsigned __int8 *)a2 + v7);
    if (v11 >= 3)
    {
      if (v7 <= 3)
        v12 = v7;
      else
        v12 = 4;
      __asm { BR              X13 }
    }
    if (v11 == 2)
    {
      (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
      *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
      v13 = 2;
    }
    else
    {
      if (v11 != 1)
      {
        (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
        *((_BYTE *)v4 + v7) = 0;
        return v4;
      }
      (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
      v13 = 1;
    }
    *((_BYTE *)v4 + v7) = v13;
  }
  return v4;
}

uint64_t sub_190BBFAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
    *(_QWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v10 = 2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
    v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
    v10 = 0;
  }
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_190BBFC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v9 = *(unsigned __int8 *)(a2 + v8);
    if (v9 >= 3)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      v11 = 2;
    }
    else if (v9 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v11 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v11 = 0;
    }
    *(_BYTE *)(a1 + v8) = v11;
  }
  return a1;
}

uint64_t sub_190BBFD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a1, a2);
    *(_QWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v10 = 2;
  }
  else if (v8 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a1, a2);
    v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a1, a2);
    v10 = 0;
  }
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_190BBFEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v9 = *(unsigned __int8 *)(a2 + v8);
    if (v9 >= 3)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      v11 = 2;
    }
    else if (v9 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      v11 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      v11 = 0;
    }
    *(_BYTE *)(a1 + v8) = v11;
  }
  return a1;
}

uint64_t sub_190BC0018(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 <= v3)
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_21:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_21;
LABEL_14:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190BC00E4 + 4 * byte_190BEEFF9[(v5 - 1)]))();
}

void sub_190BC0130(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v5)
    v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190BC02DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v3 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v3 <= v2)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v3) < 3u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190BC032C + 4 * byte_190BEF007[v4]))();
}

void sub_190BC0374(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v4)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  else
    v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a2 > 2)
  {
    v6 = a2 - 3;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 3;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

void SafeishArray.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v1 = OUTLINED_FUNCTION_3_58();
  OUTLINED_FUNCTION_7_46(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  sub_190BE5438();
  OUTLINED_FUNCTION_35_17();
}

void sub_190BC04A8(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  OUTLINED_FUNCTION_1_67();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
  OUTLINED_FUNCTION_5_43();
}

void sub_190BC04C4(_QWORD *a1)
{
  SafeishArray.encode(to:)(a1);
}

void SafeishSet.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v1 = OUTLINED_FUNCTION_3_58();
  OUTLINED_FUNCTION_7_46(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  sub_190BE5654();
  OUTLINED_FUNCTION_35_17();
}

void sub_190BC0540(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  OUTLINED_FUNCTION_1_67();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
  OUTLINED_FUNCTION_5_43();
}

void sub_190BC055C(_QWORD *a1)
{
  SafeishSet.encode(to:)(a1);
}

void SafeishDictionary.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD v38[13];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_25_18();
  v38[12] = v1;
  v3 = v2;
  v41 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v49 = v11;
  OUTLINED_FUNCTION_31_17();
  v12 = sub_190BE59A8();
  v38[10] = *(_QWORD *)(v12 - 8);
  v38[11] = v12;
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_1_0();
  v38[9] = v13;
  v15 = MEMORY[0x1E0C80A78](v14);
  v38[8] = (char *)v38 - v16;
  v50 = v6;
  v38[4] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v15);
  v38[3] = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_190BE59A8();
  v19 = *(_QWORD *)(v18 - 8);
  v47 = v18;
  v48 = v19;
  OUTLINED_FUNCTION_2_5();
  v21 = MEMORY[0x1E0C80A78](v20);
  v46 = (char *)v38 - v22;
  v51 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_1_0();
  v38[2] = v23;
  MEMORY[0x1E0C80A78](v24);
  v45 = (char *)v38 - v25;
  v52 = v8;
  v27 = type metadata accessor for SafeishCodingKey(0, v8, v3, v26);
  v39 = *(_QWORD *)(v27 - 8);
  v28 = *(_QWORD *)(v39 + 64);
  v29 = MEMORY[0x1E0C80A78](v27);
  v38[5] = (char *)v38 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v38 - v30;
  v32 = MEMORY[0x194016EF8](&unk_190BEF3DC, v27);
  v40 = type metadata accessor for SafeishKeyedDecodingContainer(0, v27, v32, v33);
  v34 = *(_QWORD *)(v40 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v38 - v36;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  Decoder.safeishContainer<A>(keyedBy:)();
  if (!v0)
  {
    v42 = v31;
    v38[0] = v28;
    v43 = v34;
    v44 = 0;
    swift_getTupleTypeMetadata2();
    sub_190BE5384();
    sub_190BE4DFC();
    SafeishKeyedDecodingContainer.allKeys.getter();
    MEMORY[0x194015650]();
    swift_bridgeObjectRelease();
    v38[1] = sub_190BE4E98();
    sub_190BE4DF0();
    v38[7] = v37;
    SafeishKeyedDecodingContainer.allKeys.getter();
    v53 = sub_190BE5318();
    OUTLINED_FUNCTION_28_20();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  OUTLINED_FUNCTION_1_5();
}

uint64_t SafeishKeyedDecodingContainer.allKeys.getter()
{
  OUTLINED_FUNCTION_32_17();
  return sub_190BE5F48();
}

void SafeishKeyedDecodingContainer.decode<A>(_:forKey:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_2_59();
  OUTLINED_FUNCTION_13_28();
  sub_190BE5F3C();
  if (v0)
  {
    OUTLINED_FUNCTION_29_18();
    if (v1)
    {
      OUTLINED_FUNCTION_4_42();
      OUTLINED_FUNCTION_24_23();
      OUTLINED_FUNCTION_8_42();
    }
    else
    {
      sub_190BC1574();
      v2 = OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_11_31(v2, v3);
    }
  }
  else
  {
    OUTLINED_FUNCTION_25_25();
  }
  OUTLINED_FUNCTION_6_46();
}

void SafeishDictionary.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v1 = OUTLINED_FUNCTION_3_58();
  OUTLINED_FUNCTION_7_46(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  sub_190BE4E98();
  OUTLINED_FUNCTION_35_17();
}

void sub_190BC0D10(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  OUTLINED_FUNCTION_1_67();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
  OUTLINED_FUNCTION_5_43();
}

void sub_190BC0D2C()
{
  SafeishDictionary.init(from:)();
}

void sub_190BC0D58(_QWORD *a1)
{
  SafeishDictionary.encode(to:)(a1);
}

void sub_190BC0D6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a5;
  OUTLINED_FUNCTION_31_17();
  v10 = sub_190BE59A8();
  v11 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  v16 = type metadata accessor for SafeishCodingKey(0, a3, a4, v15);
  v17 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_10_12();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, a3);
  v19 = v5 + *(int *)(v16 + 40);
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = (_QWORD *)(v5 + *(int *)(v16 + 36));
  *v20 = a1;
  v20[1] = a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BE6074();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 40))(v5, v14, v10);
  v21 = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v23, v5, v16);
  __swift_storeEnumTagSinglePayload(v21, 0, 1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v16);
  OUTLINED_FUNCTION_0_0();
}

void sub_190BC0EB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  _QWORD v24[2];

  v24[0] = a5;
  v9 = type metadata accessor for SafeishCodingKey(255, a2, a3, a4);
  v10 = sub_190BE59A8();
  v11 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v24 - v13;
  v15 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_10_12();
  v24[1] = a1;
  v17 = sub_190BE5FC0();
  sub_190BC0D6C(v17, v18, a2, a3, (uint64_t)v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v9))
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v19 = 1;
    v20 = v24[0];
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v21(v5, v14, v9);
    v22 = &v5[*(int *)(v9 + 40)];
    *(_QWORD *)v22 = a1;
    v22[8] = 0;
    v23 = v24[0];
    v21((char *)v24[0], v5, v9);
    v19 = 0;
    v20 = v23;
  }
  __swift_storeEnumTagSinglePayload(v20, v19, 1, v9);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_190BC0FF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v2;
}

void sub_190BC1024(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_190BC0D6C(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_190BC1030(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

void sub_190BC1044(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_190BC0EB0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t sub_190BC1050(uint64_t a1)
{
  MEMORY[0x194016EF8](&unk_190BEF3DC, a1);
  return sub_190BE6404();
}

uint64_t sub_190BC1084(uint64_t a1)
{
  MEMORY[0x194016EF8](&unk_190BEF3DC, a1);
  return sub_190BE6410();
}

_QWORD *Decoder.safeishSingleValueContainer()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  return sub_190AD99F0(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t, uint64_t))MEMORY[0x1E0DEE230], (uint64_t (*)(_QWORD *, BOOL *))sub_190AAB5A4, a3);
}

uint64_t SafeishUnkeyedDecodingContainer.init(safe:container:)@<X0>(char a1@<W0>, __int128 *a2@<X1>, _BYTE *a3@<X8>)
{
  *a3 = a1;
  return sub_190AAB5A4(a2, (uint64_t)(a3 + 8));
}

void sub_190BC10EC(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  NSObject *oslog;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED02F320 != -1)
    swift_once();
  v3 = sub_190BE4A30();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED0395F8);
  v4 = a2;
  v5 = a2;
  oslog = sub_190BE4A0C();
  v6 = sub_190BE5894();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v7 = 136446466;
    v10 = sub_190BE644C();
    sub_190ACE890(v10, v11, &v15);
    sub_190BE5A2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2114;
    v12 = a2;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    sub_190BE5A2C();
    *v8 = v14;

    _os_log_impl(&dword_190AA0000, oslog, v6, "Ignoring failure to decode %{public}s, error=%{public}@", (uint8_t *)v7, 0x16u);
    sub_190B14274();
    swift_arrayDestroy();
    MEMORY[0x194017000](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x194017000](v9, -1, -1);
    MEMORY[0x194017000](v7, -1, -1);

  }
  else
  {

  }
}

void SafeishSingleValueDecodingContainer.decode<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 32));
  OUTLINED_FUNCTION_34_17();
  sub_190BE6110();
  if (v1)
  {
    OUTLINED_FUNCTION_29_18();
    if (v2)
    {
      OUTLINED_FUNCTION_4_42();
      OUTLINED_FUNCTION_24_23();
      OUTLINED_FUNCTION_8_42();
    }
    else
    {
      sub_190BC1574();
      v3 = OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_11_31(v3, v4);
    }
  }
  else
  {
    OUTLINED_FUNCTION_25_25();
  }
  OUTLINED_FUNCTION_6_46();
}

uint64_t sub_190BC13D0()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_190BC13EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_190BC25F8();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BC2650();
  sub_190BE6374();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_190BC14AC(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_190BC14D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190BC13D0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190BC14FC()
{
  sub_190BC2650();
  return sub_190BE6404();
}

uint64_t sub_190BC1524()
{
  sub_190BC2650();
  return sub_190BE6410();
}

uint64_t sub_190BC154C(uint64_t a1)
{
  return sub_190BC14AC(a1);
}

uint64_t sub_190BC1560(_QWORD *a1)
{
  return sub_190BC13EC(a1);
}

unint64_t sub_190BC1574()
{
  unint64_t result;

  result = qword_1EE2004E0;
  if (!qword_1EE2004E0)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for SafeishError, &type metadata for SafeishError);
    atomic_store(result, (unint64_t *)&qword_1EE2004E0);
  }
  return result;
}

unint64_t sub_190BC15B0()
{
  unint64_t result;

  result = qword_1ED02EE88[0];
  if (!qword_1ED02EE88[0])
  {
    result = MEMORY[0x194016EF8](&unk_190BEF42C, &type metadata for SafeishUnkeyedDecodingContainer.Anything);
    atomic_store(result, qword_1ED02EE88);
  }
  return result;
}

uint64_t type metadata accessor for SafeishCodingKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SafeishCodingKey);
}

void type metadata accessor for SafeishError()
{
  OUTLINED_FUNCTION_23();
}

void type metadata accessor for SafeishDictionary()
{
  JUMPOUT(0x194016E74);
}

uint64_t *sub_190BC1610(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 36);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_190BE5F54();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_BYTE *sub_190BC169C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_190BE5F54();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_190BC16FC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_190BE5F54();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_190BC175C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_190BE5F54();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_190BC17BC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_190BE5F54();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_190BC181C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190BC1828(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = OUTLINED_FUNCTION_32_17();
    return __swift_getEnumTagSinglePayload((uint64_t)&a1[*(int *)(a3 + 36)], a2, v10);
  }
}

uint64_t sub_190BC189C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_190BC18A8(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_32_17();
    return (_BYTE *)__swift_storeEnumTagSinglePayload((uint64_t)&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

void type metadata accessor for SafeishSingleValueDecodingContainer()
{
  OUTLINED_FUNCTION_23();
}

uint64_t destroy for SafeishUnkeyedDecodingContainer(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t _s13TeaFoundation35SafeishSingleValueDecodingContainerVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

uint64_t assignWithCopy for SafeishUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t assignWithTake for SafeishUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for _JSONDecoder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _JSONDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SafeishUnkeyedDecodingContainer()
{
  OUTLINED_FUNCTION_23();
}

uint64_t sub_190BC1BEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE59A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190BC1C6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v10;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if ((v7 & 0x1000F8) != 0 || ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    }
    v12 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    v16 = *(_QWORD *)v15;
    *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
    *(_QWORD *)v14 = v16;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_190BC1DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return swift_bridgeObjectRelease();
}

void *sub_190BC1E0C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = v11 + 7;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = v17;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

void *sub_190BC1EF4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = v10 + 7;
  v12 = (_QWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v14 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v16 = v15;
  return a1;
}

void *sub_190BC2030(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  _OWORD *v13;
  _OWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = v11 + 7;
  v13 = (_OWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  v17 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v17 = v16;
  return a1;
}

void *sub_190BC2104(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = v10 + 7;
  v12 = (_QWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRelease();
  v14 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v16 = v15;
  return a1;
}

uint64_t sub_190BC2238(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int EnumTagSinglePayload;
  unint64_t v17;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  if (v8 < a2)
  {
    v10 = ((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
    v11 = (a2 - v8 + 255) >> (8 * v10);
    if (v10 < 4)
      v12 = v11 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    __asm { BR              X15 }
  }
  if (v7 < 0x7FFFFFFF)
  {
    v17 = *(_QWORD *)(((a1 + v9 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v17 >= 0xFFFFFFFF)
      LODWORD(v17) = -1;
    return (v17 + 1);
  }
  else
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
    if (EnumTagSinglePayload >= 2)
      return EnumTagSinglePayload - 1;
    else
      return 0;
  }
}

void sub_190BC2384(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v10 < a3)
  {
    v13 = (a3 - v10 + 255) >> (8 * v12);
    if (v12 <= 3)
      v14 = v13 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v6 = v15;
    else
      v6 = 0;
  }
  if (v10 < a2)
  {
    if (v12 >= 4)
      v16 = ~v10 + a2;
    else
      v16 = (~(_BYTE)v10 + a2);
    bzero(a1, v12);
    if ((_DWORD)v12 == 1)
      *a1 = v16;
    else
      *(_DWORD *)a1 = v16;
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_190BC24B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x190BC2590);
}

void sub_190BC24B8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x190BC24C0);
  JUMPOUT(0x190BC2590);
}

void sub_190BC252C()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x190BC2590);
}

void sub_190BC2550()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x190BC2590);
}

void sub_190BC2558()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x190BC2590);
}

void sub_190BC2560(unsigned int a1@<W1>, size_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  char *v4;
  uint64_t v5;

  *(_WORD *)&v4[v5] = 0;
  if (a1)
  {
    if (v3 < 0x7FFFFFFF)
      JUMPOUT(0x190BC2534);
    if (v3 >= a1)
      JUMPOUT(0x190BC256CLL);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v2 = a2;
      else
        v2 = 4;
      bzero(v4, a2);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x190BC2590);
}

void sub_190BC25A4()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x190BC2590);
}

void sub_190BC25B4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x190BC2590);
}

void sub_190BC25BC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x190BC2590);
}

ValueMetadata *type metadata accessor for SafeishUnkeyedDecodingContainer.Anything()
{
  return &type metadata for SafeishUnkeyedDecodingContainer.Anything;
}

void sub_190BC25D8()
{
  JUMPOUT(0x194016EF8);
}

void sub_190BC25E8()
{
  JUMPOUT(0x194016EF8);
}

void sub_190BC25F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE2004E8)
  {
    sub_190BC2650();
    v0 = sub_190BE5F9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE2004E8);
  }
}

unint64_t sub_190BC2650()
{
  unint64_t result;

  result = qword_1EE2004F0;
  if (!qword_1EE2004F0)
  {
    result = MEMORY[0x194016EF8](&unk_190BEF4B0, &type metadata for SafeishUnkeyedDecodingContainer.Anything.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE2004F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SafeishUnkeyedDecodingContainer.Anything.CodingKeys()
{
  return &type metadata for SafeishUnkeyedDecodingContainer.Anything.CodingKeys;
}

unint64_t sub_190BC26A0()
{
  unint64_t result;

  result = qword_1EE2004F8;
  if (!qword_1EE2004F8)
  {
    result = MEMORY[0x194016EF8](&unk_190BEF460, &type metadata for SafeishUnkeyedDecodingContainer.Anything.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE2004F8);
  }
  return result;
}

unint64_t sub_190BC26E0()
{
  unint64_t result;

  result = qword_1EE200500[0];
  if (!qword_1EE200500[0])
  {
    result = MEMORY[0x194016EF8](&unk_190BEF488, &type metadata for SafeishUnkeyedDecodingContainer.Anything.CodingKeys);
    atomic_store(result, qword_1EE200500);
  }
  return result;
}

uint64_t TrieNode.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = OUTLINED_FUNCTION_7_2();
  type metadata accessor for TrieNode(255, a1, a2, a3);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_7_0();
  result = sub_190BE4DFC();
  *(_QWORD *)(v8 + 16) = result;
  *a4 = v8 | 0x8000000000000000;
  return result;
}

uint64_t sub_190BC27C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL static TrieNode.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TrieNode.Error.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t TrieNode.Error.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190BC2874()
{
  sub_190BE62FC();
  TrieNode.Error.hash(into:)();
  return sub_190BE6314();
}

uint64_t TrieNode.insert<A>(_:keyPath:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_190BC2930(a4);
  sub_190BC29D0(a1, v6, v7, v8, v9, a3);
  return OUTLINED_FUNCTION_2_60();
}

uint64_t sub_190BC2930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  swift_getAssociatedTypeWitness();
  return sub_190BE5B4C();
}

uint64_t sub_190BC29D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v54 = a1;
  v7 = a6[2];
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v47 - v12;
  v61 = v14;
  v62 = v15;
  v57 = v16;
  v58 = v15;
  v56 = v17;
  v63 = v17;
  v64 = v16;
  v18 = sub_190BE5B40();
  v19 = MEMORY[0x194016EF8](MEMORY[0x1E0DEBF88], v18);
  if ((sub_190BE5798() & 1) == 0)
  {
    v52 = v8;
    v53 = v19;
    v51 = v11;
    v22 = *v59;
    if ((*v59 & 0x8000000000000000) == 0)
    {
      v23 = type metadata accessor for TrieNode.Error(0, v7, a6[3], a6[4]);
      MEMORY[0x194016EF8](&protocol conformance descriptor for TrieNode<A, B>.Error, v23);
      swift_allocError();
      *v24 = 1;
      return swift_willThrow();
    }
    v50 = v22 & 0x7FFFFFFFFFFFFFFFLL;
    v65 = *(_QWORD *)(v22 + 16);
    v26 = v65;
    swift_bridgeObjectRetain_n();
    v27 = v7;
    v28 = v13;
    v29 = sub_190BC3B00();
    v31 = v30;
    v61 = v29;
    v62 = v30;
    v48 = v33;
    v49 = v32;
    v63 = v32;
    v64 = v33;
    v34 = sub_190BE5798();
    v35 = a6;
    v36 = a6[4];
    v58 = v28;
    MEMORY[0x194015140](&v60, v28, v26, v27, a6, v36);
    swift_bridgeObjectRelease();
    v37 = v60;
    v57 = v36;
    if ((~v60 & 0xF000000000000007) != 0)
    {
      if ((v34 & 1) == 0)
      {
        v61 = v60;
        swift_retain();
        v46 = v55;
        sub_190BC29D0(v54, v29, v31, v49, v48, a6);
        v40 = v51;
        v39 = v52;
        if (v46)
        {
          sub_190BC3CC4(v37);
LABEL_17:
          swift_unknownObjectRelease();
          swift_release();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v58, v27);
          return swift_bridgeObjectRelease();
        }
        v56 = v29;
        swift_release();
        sub_190BC3CC4(v37);
LABEL_14:
        v45 = v58;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v40, v58, v27);
        v60 = v61;
        sub_190BE4E98();
        swift_retain();
        sub_190BE4EB0();
        swift_release();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v27);
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = v65;
        *v59 = result | 0x8000000000000000;
        return result;
      }
      v56 = v29;
      sub_190BC3CC4(v60);
      v40 = v51;
      v39 = v52;
    }
    else
    {
      v56 = v29;
      v38 = v55;
      v40 = v51;
      v39 = v52;
      if ((v34 & 1) == 0)
      {
        v41 = swift_allocObject();
        swift_getTupleTypeMetadata2();
        sub_190BE5384();
        *(_QWORD *)(v41 + 16) = sub_190BE4DFC();
        v61 = v41 | 0x8000000000000000;
        sub_190BC29D0(v54, v56, v31, v49, v48, v35);
        if (v38)
          goto LABEL_17;
        swift_release();
        goto LABEL_14;
      }
    }
    swift_release();
    v42 = v35[3];
    v43 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v44, v54, v42);
    v61 = v43;
    goto LABEL_14;
  }
  v20 = type metadata accessor for TrieNode.Error(0, v7, a6[3], a6[4]);
  MEMORY[0x194016EF8](&protocol conformance descriptor for TrieNode<A, B>.Error, v20);
  swift_allocError();
  *v21 = 0;
  return swift_willThrow();
}

uint64_t TrieNode.findValue<A>(keyPath:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_190BC2930(a2);
  sub_190BC2E88(v5, v6, v7, a1, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_190BC2E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v10 = *(_QWORD *)(a4 + 16);
  v42 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v43 = v13;
  v44 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v11);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v5;
  if ((*v5 & 0x8000000000000000) == 0)
  {
    v45 = a5;
    v20 = v16;
    v21 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v21, v14);
    v46 = a1;
    v47 = a2;
    v48 = a3;
    v49 = v20;
    v41 = v20;
    v22 = sub_190BE5B40();
    MEMORY[0x194016EF8](MEMORY[0x1E0DEBF88], v22);
    if ((sub_190BE5798() & 1) != 0)
    {
      v23 = v45;
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v45, v18, v14);
      v24 = v23;
      v25 = 0;
      return __swift_storeEnumTagSinglePayload(v24, v25, 1, v14);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    a5 = v45;
    v16 = v41;
  }
  v46 = a1;
  v47 = a2;
  v48 = a3;
  v49 = v16;
  v26 = sub_190BE5B40();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEBF88], v26);
  if ((sub_190BE5798() & 1) == 0 && v19 < 0)
  {
    v45 = a5;
    v28 = *(_QWORD *)(v19 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v29 = v44;
    v30 = v10;
    v31 = sub_190BC3B00();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v38 = v43;
    MEMORY[0x194015140](&v46, v29, v28, v30, v43, *(_QWORD *)(v43 + 32));
    swift_bridgeObjectRelease();
    v39 = v46;
    if ((~v46 & 0xF000000000000007) != 0)
    {
      sub_190BC2E88(v31, v33, v35, v37, v38);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
      return sub_190BC3CC4(v39);
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
    swift_unknownObjectRelease();
    v24 = v45;
  }
  else
  {
    v24 = a5;
  }
  v25 = 1;
  return __swift_storeEnumTagSinglePayload(v24, v25, 1, v14);
}

Swift::Void __swiftcall TrieNode.removeAll()()
{
  unint64_t *v0;
  uint64_t v1;

  swift_release();
  v1 = OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v1 + 16) = sub_190BE4DFC();
  *v0 = v1 | 0x8000000000000000;
}

uint64_t TrieNode.removeValue<A>(keyPath:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_190BC2930(a3);
  sub_190BC3208(v4, v5, v6, v7, a2);
  return OUTLINED_FUNCTION_2_60();
}

uint64_t sub_190BC3208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  unint64_t *v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v10 = a5[2];
  v11 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v11);
  v17 = *v5;
  if ((*v5 & 0x8000000000000000) == 0)
  {
    v18 = type metadata accessor for TrieNode.Error(0, v10, a5[3], a5[4]);
    MEMORY[0x194016EF8](&protocol conformance descriptor for TrieNode<A, B>.Error, v18);
    swift_allocError();
    *v19 = 2;
    return swift_willThrow();
  }
  v52 = v16;
  v53 = v5;
  v57 = v13;
  v58 = (char *)&v48 - v14;
  v54 = v6;
  v55 = v15;
  v20 = *(_QWORD *)(v17 + 16);
  v64 = v20;
  v60 = a1;
  v61 = a2;
  v56 = v12;
  v62 = v12;
  v63 = v13;
  v21 = sub_190BE5B40();
  swift_bridgeObjectRetain_n();
  v22 = MEMORY[0x194016EF8](MEMORY[0x1E0DEBF88], v21);
  if ((sub_190BE5798() & 1) != 0)
  {
    swift_bridgeObjectRelease_n();
    v23 = type metadata accessor for TrieNode.Error(0, v10, a5[3], a5[4]);
    MEMORY[0x194016EF8](&protocol conformance descriptor for TrieNode<A, B>.Error, v23);
    swift_allocError();
    *v24 = 0;
    return swift_willThrow();
  }
  v50 = v22;
  v51 = v21;
  v26 = v58;
  v27 = sub_190BC3B00();
  v57 = v28;
  v30 = v29;
  v32 = v31;
  v56 = a5[4];
  MEMORY[0x194015140](&v60, v26, v20, v10, a5);
  swift_bridgeObjectRelease();
  v33 = v60;
  if ((~v60 & 0xF000000000000007) == 0)
  {
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v10);
    return swift_bridgeObjectRelease();
  }
  v49 = v10;
  v59 = v60;
  v60 = v27;
  v34 = v57;
  v61 = v57;
  v62 = v30;
  v63 = v32;
  v35 = sub_190BE5798();
  if ((v33 & 0x8000000000000000) == 0)
  {
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v36 = v49;
      v37 = type metadata accessor for TrieNode.Error(0, v49, a5[3], v56);
      MEMORY[0x194016EF8](&protocol conformance descriptor for TrieNode<A, B>.Error, v37);
      swift_allocError();
      *v38 = 2;
      swift_willThrow();
      swift_unknownObjectRelease();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v58, v36);
    }
    goto LABEL_12;
  }
  if ((v35 & 1) != 0)
  {
LABEL_12:
    swift_release();
    v39 = v49;
    sub_190BE4E98();
    v40 = v58;
    sub_190BE4DD8();
    swift_unknownObjectRelease();
    sub_190BC3CC4(v60);
    sub_190BC3CC4(v33);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v39);
LABEL_13:
    v41 = v53;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v64;
    *v41 = result | 0x8000000000000000;
    return result;
  }
  v42 = v54;
  sub_190BC3208(v27, v34, v30, v32, a5);
  if (!v42)
  {
    swift_release();
    v43 = v59;
    v60 = v59;
    v44 = sub_190BC3ADC();
    v45 = v55;
    v46 = v58;
    v47 = v49;
    if (v44 < 1)
    {
      sub_190BE4E98();
      sub_190BE4DD8();
      swift_unknownObjectRelease();
      sub_190BC3CC4(v60);
      swift_release();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v52, v58, v49);
      v60 = v43;
      sub_190BE4E98();
      swift_retain();
      sub_190BE4EB0();
      swift_release();
      swift_unknownObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    goto LABEL_13;
  }
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v49);
  return swift_bridgeObjectRelease();
}

uint64_t TrieNode.traverse(_:_:depth:)(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(_QWORD, _QWORD);
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_QWORD, _QWORD);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v69 = a3;
  v70 = a4;
  v71 = a2;
  v72 = a1;
  v8 = *(_QWORD *)(a6 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_14_0();
  v13 = sub_190BE59A8();
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v57 - v16;
  v19 = *(_QWORD *)(v18 + 24);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v15);
  v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v6;
  if ((*v6 & 0x8000000000000000) == 0)
  {
    v28 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v26, v28, v19);
    v72(v26, a5);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v26, v19);
  }
  v67 = v9;
  v68 = v21;
  v65 = v24;
  v66 = v23;
  v30 = *(_QWORD *)(v27 + 16);
  v31 = *(_QWORD *)(v30 + 64);
  v58 = v30 + 64;
  v32 = 1 << *(_BYTE *)(v30 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & v31;
  v35 = (unint64_t)(v32 + 63) >> 6;
  v62 = a5 + 1;
  v63 = v22;
  v36 = __OFADD__(a5, 1);
  v64 = v36;
  v59 = v35;
  v57 = v35 - 1;
  v61 = v30;
  result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v73 = 0;
  v74 = a5;
  v37 = a5;
  v38 = v11;
  v60 = v12;
  while (1)
  {
    v39 = v68;
    if (v34)
    {
      v40 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v41 = v40 | (v73 << 6);
      v42 = v66;
      v43 = v67;
      v44 = v65;
      goto LABEL_11;
    }
    v47 = v73 + 1;
    if (__OFADD__(v73, 1))
      goto LABEL_34;
    v42 = v66;
    v43 = v67;
    v44 = v65;
    if (v47 < v59)
    {
      v48 = *(_QWORD *)(v58 + 8 * v47);
      if (v48)
        goto LABEL_15;
      v49 = v73 + 2;
      ++v73;
      if (v47 + 1 < v59)
      {
        v48 = *(_QWORD *)(v58 + 8 * v49);
        if (v48)
        {
          ++v47;
          goto LABEL_15;
        }
        v50 = v47 + 2;
        v73 = v47 + 1;
        if (v47 + 2 < v59)
          break;
      }
    }
LABEL_27:
    OUTLINED_FUNCTION_10_0(v68, 1);
    v34 = 0;
LABEL_28:
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v17, v39, v42);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v12) == 1)
      return swift_release();
    v51 = *(_QWORD *)&v17[*(int *)(v12 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v38, v17, v8);
    v52 = v38;
    v53 = v38;
    v54 = v70;
    v55 = v8;
    v56 = v69;
    result = v69(v52, v37);
    v75 = v51;
    if (v64)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    TrieNode.traverse(_:_:depth:)(v72, v71, v56, v54, v62, v63);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v53, v55);
    result = swift_release();
    v37 = v74;
    v8 = v55;
    v38 = v53;
  }
  v48 = *(_QWORD *)(v58 + 8 * v50);
  if (v48)
  {
    v47 += 2;
LABEL_15:
    v34 = (v48 - 1) & v48;
    v41 = __clz(__rbit64(v48)) + (v47 << 6);
    v73 = v47;
LABEL_11:
    v45 = v61;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v43 + 16))(v68, *(_QWORD *)(v61 + 48) + *(_QWORD *)(v43 + 72) * v41, v8);
    v46 = *(_QWORD *)(v45 + 56);
    v12 = v60;
    *(_QWORD *)(v39 + *(int *)(v60 + 48)) = *(_QWORD *)(v46 + 8 * v41);
    OUTLINED_FUNCTION_10_0(v39, 0);
    swift_retain();
    v37 = v74;
    goto LABEL_28;
  }
  while (1)
  {
    v47 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v47 >= v59)
    {
      v73 = v57;
      goto LABEL_27;
    }
    v48 = *(_QWORD *)(v58 + 8 * v47);
    ++v50;
    if (v48)
      goto LABEL_15;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_190BC3ADC()
{
  _QWORD *v0;

  if ((*v0 & 0x8000000000000000) != 0)
    return sub_190BE4E38();
  else
    return 0;
}

uint64_t sub_190BC3B00()
{
  uint64_t v0;
  uint64_t v2;

  sub_190BE5B04();
  sub_190BE5B58();
  v0 = sub_190BE5B40();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEBF88], v0);
  sub_190B29360();
  swift_unknownObjectRetain();
  sub_190BE57B0();
  return v2;
}

uint64_t type metadata accessor for TrieNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrieNode);
}

void sub_190BC3BEC()
{
  JUMPOUT(0x194016EF8);
}

uint64_t sub_190BC3BFC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190BC3C48 + 4 * byte_190BEF505[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190BC3C7C + 4 * byte_190BEF500[v4]))();
}

uint64_t sub_190BC3C7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BC3C84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BC3C8CLL);
  return result;
}

uint64_t sub_190BC3C98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BC3CA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190BC3CA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BC3CAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for TrieNode.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrieNode.Error);
}

uint64_t sub_190BC3CC4(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

void sub_190BC3CDC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_190BC3D14()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_190BC3D38()
{
  swift_release();
  return swift_deallocObject();
}

void String.write(to:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void **v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE __dst[14];
  char v18;
  char v19;
  char *v20;
  _QWORD v21[5];

  v21[4] = *MEMORY[0x1E0C80C00];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v5 = sub_190ACF894(a2, a3);
  swift_bridgeObjectRelease();
  v20 = *(char **)(v5 + 16);
  v6 = sub_190B1F838((uint64_t)&v20, (uint64_t)v21);
  v8 = v7;
  OUTLINED_FUNCTION_18_27();
  sub_190AEF3F4(v6, v8);
  v9 = *(_QWORD *)(v5 + 16);
  if (v9)
  {
    swift_retain();
    v10 = 0;
    v11 = MEMORY[0x1E0DEAC20];
    do
    {
      v19 = *(_BYTE *)(v5 + v10 + 32);
      v21[2] = v11;
      v21[3] = MEMORY[0x1E0CB1AA8];
      v20 = &v19;
      v21[0] = &v20;
      v12 = (const void **)__swift_project_boxed_opaque_existential_1(&v20, v11);
      v13 = *v12;
      if (*v12)
      {
        v14 = v12[1];
        v15 = v14 - v13;
        if (v14 != v13)
        {
          if (v15 <= 14)
          {
            memset(__dst, 0, sizeof(__dst));
            v18 = (_BYTE)v14 - (_BYTE)v13;
            memcpy(__dst, v13, v14 - v13);
          }
          else
          {
            sub_190BE4490();
            swift_allocObject();
            sub_190BE4460();
            if ((unint64_t)v15 >= 0x7FFFFFFF)
            {
              sub_190BE4688();
              v16 = swift_allocObject();
              *(_QWORD *)(v16 + 16) = 0;
              *(_QWORD *)(v16 + 24) = v15;
            }
          }
        }
      }
      ++v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
      OUTLINED_FUNCTION_18_27();
      OUTLINED_FUNCTION_3_59();
    }
    while (v9 != v10);
    swift_release();
  }
  swift_release();
  OUTLINED_FUNCTION_4_43();
}

uint64_t Dictionary<>.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v22 = sub_190BE4E38();
  v15 = sub_190B1F838((uint64_t)&v22, (uint64_t)v23);
  v17 = v16;
  sub_190BE4724();
  sub_190AEF3F4(v15, v17);
  v22 = a2;
  v24 = a3;
  v25 = a4;
  v26 = a5;
  v27 = a6;
  v28 = a7;
  v29 = a8;
  v30 = a9;
  v31 = a1;
  v18 = sub_190BE4E98();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEA0D0], v18);
  return sub_190BE527C();
}

char *static String.read(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v10;
  _QWORD v11[2];

  v3 = sub_190BE5060();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190BC4528(a1);
  if (!v1)
  {
    v11[1] = v6;
    sub_190BE5048();
    sub_190ACFA50(0, &qword_1ED033D98, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    sub_190B64F30();
    v5 = (char *)sub_190BE5024();
    v8 = v7;
    swift_bridgeObjectRelease();
    if (!v8)
    {
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      *v10 = 0;
      OUTLINED_FUNCTION_6_47();
    }
  }
  return v5;
}

void static Dictionary<>.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_25_18();
  v33 = v3;
  v38 = v5;
  v39 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_190BE59A8();
  OUTLINED_FUNCTION_27();
  v13 = MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v32 - v14;
  v15 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_1_31();
  v43 = v9;
  v16 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_13_29();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - v19;
  v21 = v11;
  sub_190B631C8();
  if (!v0)
  {
    v23 = v22;
    v40 = v16;
    v41 = v20;
    v34 = v2;
    v35 = v15;
    v42 = v1;
    v36 = v21;
    if (v22 < 0)
    {
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      v26 = 1;
      goto LABEL_6;
    }
    v24 = v36;
    if (sub_190BE470C() < v22)
    {
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      v26 = 2;
LABEL_6:
      *v25 = v26;
      OUTLINED_FUNCTION_6_47();
      goto LABEL_7;
    }
    sub_190BE4D6C();
    if (v23)
    {
      v32 = *(void (**)(uint64_t))(v38 + 8);
      v27 = v33;
      v28 = v43;
      do
      {
        v32(v24);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(v24, v7, v27);
        (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v34, v41, v28);
        v29 = v35;
        v30 = (uint64_t)v37;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v37, v42, v7);
        __swift_storeEnumTagSinglePayload(v30, 0, 1, v7);
        sub_190BE4E98();
        v31 = v41;
        sub_190BE4EB0();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v42, v7);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v28);
        --v23;
        v24 = v36;
      }
      while (v23);
    }
  }
LABEL_7:
  OUTLINED_FUNCTION_1_5();
}

uint64_t Array<A>.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = MEMORY[0x194015650](a2, a3);
  v5 = OUTLINED_FUNCTION_10_39(v3, v4);
  v7 = v6;
  sub_190BE4724();
  sub_190AEF3F4(v5, v7);
  v8 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v8);
  return OUTLINED_FUNCTION_9_43();
}

uint64_t sub_190BC4528(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char *v8;

  sub_190B631C8();
  if (!v1)
  {
    v5 = v4;
    if (v4 < 0)
    {
      v7 = 1;
      goto LABEL_6;
    }
    v6 = *(_QWORD *)(a1 + 8);
    if (sub_190BE470C() < v4)
    {
      v7 = 2;
LABEL_6:
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      *v8 = v7;
      OUTLINED_FUNCTION_6_47();
      return v2;
    }
    if (v5)
      __asm { BR              X8 }
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

void static Array<A>.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_25_18();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_13_29();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  sub_190B631C8();
  if (!v0)
  {
    v13 = v12;
    if (v12 < 0)
    {
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      v15 = 1;
      goto LABEL_6;
    }
    if (sub_190BE470C() < v12)
    {
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      v15 = 2;
LABEL_6:
      *v14 = v15;
      OUTLINED_FUNCTION_6_47();
      goto LABEL_7;
    }
    sub_190BE4D78();
    if (v13)
    {
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8);
      do
      {
        v17(v7, v5, v3);
        (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v1, v11, v5);
        sub_190BE5438();
        sub_190BE53D8();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v5);
        --v13;
      }
      while (v13);
    }
  }
LABEL_7:
  OUTLINED_FUNCTION_1_5();
}

void sub_190BC4AB8(uint64_t a1)
{
  uint64_t v1;

  String.write(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

char *sub_190BC4AD0@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;
  char *v5;

  result = static String.read(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_190BC4AF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Array<A>.write(to:)(a1, *v2, *(_QWORD *)(a2 + 16));
}

void sub_190BC4B1C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  static Array<A>.read(from:)();
  if (!v1)
    *a1 = v3;
}

uint64_t sub_190BC4B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a7 + 8))(a2, a3, a7);
  if (!v9)
  {
    swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a9 + 8))(a2, a4, a9);
  }
  return result;
}

uint64_t sub_190BC4BE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;

  return Dictionary<>.write(to:)(a1, *v3, a2[2], a2[3], a2[4], *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), *(_QWORD *)(a3 - 24), *(_QWORD *)(a3 - 32));
}

void sub_190BC4C20(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  static Dictionary<>.read(from:)();
  if (!v1)
    *a1 = v3;
}

void Set<>.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v0 = sub_190BE5600();
  v2 = OUTLINED_FUNCTION_10_39(v0, v1);
  v4 = v3;
  sub_190BE4724();
  sub_190AEF3F4(v2, v4);
  v5 = sub_190BE5654();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEB3D0], v5);
  OUTLINED_FUNCTION_9_43();
  OUTLINED_FUNCTION_4_43();
}

void static Set<>.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_25_18();
  v26 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_0();
  v11 = v9 - v10;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v23 - v16;
  sub_190B631C8();
  if (!v0)
  {
    v19 = v18;
    v25 = v3;
    if (v18 < 0)
    {
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      v21 = 1;
      goto LABEL_6;
    }
    if (sub_190BE470C() < v18)
    {
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      v21 = 2;
LABEL_6:
      *v20 = v21;
      OUTLINED_FUNCTION_6_47();
      goto LABEL_7;
    }
    sub_190BE4D90();
    if (v19)
    {
      v24 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      do
      {
        v24(v7, v5);
        (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v11, v17, v5);
        sub_190BE5654();
        sub_190BE560C();
        v22 = *(void (**)(char *, uint64_t))(v8 + 8);
        v22(v15, v5);
        v22(v17, v5);
        --v19;
      }
      while (v19);
    }
  }
LABEL_7:
  OUTLINED_FUNCTION_1_5();
}

void sub_190BC4EF8()
{
  Set<>.write(to:)();
}

void sub_190BC4F1C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  static Set<>.read(from:)();
  if (!v1)
    *a1 = v3;
}

uint64_t Optional<A>.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE v19[6];
  char v20;
  char v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t))(v13 + 16))(v12, v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) == 1)
  {
    v20 = 0;
    v15 = sub_190B1F838((uint64_t)&v20, (uint64_t)&v21);
    v17 = v16;
    sub_190BE4724();
    return sub_190AEF3F4(v15, v17);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v10, v12, v6);
    v21 = 1;
    sub_190B1F838((uint64_t)&v21, (uint64_t)&v22);
    sub_190BE4724();
    OUTLINED_FUNCTION_3_59();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, v6, a4);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void static Optional<A>.read(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v10 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_1_31();
  sub_190B631DC();
  if (!v4)
  {
    if ((v11 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(a1, a2, a3);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a4, v5, a2);
      v12 = a4;
      v13 = 0;
    }
    else
    {
      v12 = a4;
      v13 = 1;
    }
    __swift_storeEnumTagSinglePayload(v12, v13, 1, a2);
  }
  OUTLINED_FUNCTION_11_32();
}

uint64_t sub_190BC51A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>.write(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16));
}

void sub_190BC51C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  static Optional<A>.read(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t Date.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  sub_190BE47A8();
  v5 = v0;
  v1 = sub_190B1F838((uint64_t)&v5, (uint64_t)&v6);
  v3 = v2;
  OUTLINED_FUNCTION_18_27();
  return sub_190AEF3F4(v1, v3);
}

void static Date.read(from:)()
{
  uint64_t v0;

  sub_190B630B4();
  if (!v0)
    sub_190BE479C();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190BC52A4()
{
  return Date.write(to:)();
}

void sub_190BC52B8()
{
  static Date.read(from:)();
}

uint64_t Range<>.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190BC5330(a1, a2, a3, a4);
}

uint64_t static Range<>.read(from:)()
{
  return sub_190BC53B0();
}

uint64_t sub_190BC52FC()
{
  return static Range<>.read(from:)();
}

uint64_t ClosedRange<>.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190BC5330(a1, a2, a3, a4);
}

uint64_t sub_190BC5330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  result = v7(a1, v8, a4);
  if (!v4)
    return v7(a1, v8, a4);
  return result;
}

uint64_t static ClosedRange<>.read(from:)()
{
  return sub_190BC53B0();
}

uint64_t sub_190BC53B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_25_18();
  v45 = v1;
  v46 = v2;
  v40 = v4;
  v41 = v3;
  v44 = v0;
  v6 = v5;
  v8 = v7;
  v39 = v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  OUTLINED_FUNCTION_16_0();
  v13 = v11 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v38 - v16;
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_16_0();
  v42 = v19 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v38 - v22;
  v43 = v8;
  v24 = v44;
  result = OUTLINED_FUNCTION_19_28(v8);
  if (!v24)
  {
    v38 = v13;
    v26 = v42;
    OUTLINED_FUNCTION_19_28(v43);
    v44 = 0;
    result = sub_190BE4F4C();
    if ((result & 1) != 0)
    {
      v27 = TupleTypeMetadata2;
      v28 = *(int *)(TupleTypeMetadata2 + 48);
      v29 = (uint64_t)v17;
      v30 = (uint64_t)&v17[v28];
      OUTLINED_FUNCTION_7_47(v29, (uint64_t)v23);
      OUTLINED_FUNCTION_7_47(v30, v26);
      v31 = v38;
      v32 = v38 + *(int *)(v27 + 48);
      v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
      v33(v38, v29, v6);
      v33(v32, v30, v6);
      v34 = v39;
      OUTLINED_FUNCTION_7_47(v39, v31);
      v35 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v35(v32, v6);
      v36 = v31 + *(int *)(v27 + 48);
      OUTLINED_FUNCTION_7_47(v31, v29);
      OUTLINED_FUNCTION_7_47(v36, v30);
      v37 = v40(0, v6, v41);
      OUTLINED_FUNCTION_7_47(v34 + *(int *)(v37 + 36), v36);
      return ((uint64_t (*)(uint64_t, uint64_t))v35)(v31, v6);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_190BC55D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ClosedRange<>.write(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16));
}

uint64_t sub_190BC55E8()
{
  return static ClosedRange<>.read(from:)();
}

uint64_t URL.write(to:)(uint64_t a1)
{
  return sub_190BC5708(a1, MEMORY[0x1E0CAFDA0]);
}

void static URL.read(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_190BC578C(a1, (unint64_t *)&qword_1ED034BC0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(char *))MEMORY[0x1E0CAFF90], a2);
}

uint64_t sub_190BC5650(uint64_t a1)
{
  return URL.write(to:)(a1);
}

void sub_190BC5664(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  static URL.read(from:)(a1, a2);
}

uint64_t Locale.write(to:)(uint64_t a1)
{
  return sub_190BC5708(a1, MEMORY[0x1E0CB0A90]);
}

void static Locale.read(from:)(uint64_t a1)
{
  uint64_t v1;

  static String.read(from:)(a1);
  if (!v1)
    sub_190BE482C();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190BC56C4(uint64_t a1)
{
  return Locale.write(to:)(a1);
}

void sub_190BC56D8(uint64_t a1)
{
  static Locale.read(from:)(a1);
}

uint64_t TimeZone.write(to:)(uint64_t a1)
{
  return sub_190BC5708(a1, MEMORY[0x1E0CB1408]);
}

uint64_t sub_190BC5708(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2();
  String.write(to:)(a1, v3, v4);
  return swift_bridgeObjectRelease();
}

void static TimeZone.read(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_190BC578C(a1, qword_1EE1FE1F8, MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1400], a2);
}

void sub_190BC578C(uint64_t a1@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, void (*a4)(char *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  sub_190AC5EC4(0, a2, a3);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - v12;
  v14 = static String.read(from:)(a1);
  if (!v5)
  {
    a4(v14);
    swift_bridgeObjectRelease();
    v15 = ((uint64_t (*)(_QWORD))a3)(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15) == 1)
    {
      sub_190BC59A4((uint64_t)v13, a2, a3);
      sub_190B64F88();
      OUTLINED_FUNCTION_38();
      *v16 = 1;
      OUTLINED_FUNCTION_6_47();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, v13, v15);
    }
  }
  OUTLINED_FUNCTION_11_32();
}

uint64_t sub_190BC588C(uint64_t a1)
{
  return TimeZone.write(to:)(a1);
}

void sub_190BC58A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  static TimeZone.read(from:)(a1, a2);
}

void sub_190BC58B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!a1)
    goto LABEL_4;
  v4 = a2 - a1;
  if (a2 == a1)
  {
    a1 = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    a1 = sub_190BE4634();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    a1 = MEMORY[0x1940148E8]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    a1 = MEMORY[0x194014900]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = a1;
  a3[1] = v5;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190BC5924(uint64_t a1)
{
  uint64_t *v1;

  return sub_190BC4B4C(a1, v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_190BC5954()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_21_23(v0[5], v0[2], v0[4]);
}

uint64_t sub_190BC597C()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_21_23(v0[6], v0[2], v0[5]);
}

uint64_t sub_190BC59A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_190AC5EC4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_190BC59E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190BC55D0(a1, a2, a3);
}

uint64_t sub_190BC59F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_release();
}

void sub_190BC5A04(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

uint64_t sub_190BC5A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  int EnumTagSinglePayload;
  uint64_t v10;

  v5 = v2;
  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_2_5();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_51_9();
  UnfairLock.lock()();
  OUTLINED_FUNCTION_32_18(v4);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v3);
  OUTLINED_FUNCTION_9_44();
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_8();
    sub_190BC59F4(a1, a2);
  }
  v10 = OUTLINED_FUNCTION_4_2();
  sub_190AC57C8(v10);
  return v5;
}

TeaFoundation::LazyOptions __swiftcall LazyOptions.init(rawValue:)(TeaFoundation::LazyOptions rawValue)
{
  TeaFoundation::LazyOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t LazyOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaFoundation::LazyOptions sub_190BC5AD8(Swift::Int *a1)
{
  return LazyOptions.init(rawValue:)(*a1);
}

TeaFoundation::LazyOptions sub_190BC5AE0@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaFoundation::LazyOptions result;

  result.rawValue = LazyOptions.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_190BC5B08(uint64_t *a1@<X8>)
{
  *a1 = LazyOptions.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

void sub_190BC5B28(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
    v2 = &qword_1E2CDF788;
  else
    v2 = &qword_1E2CDF7C0;
  v3 = v2[1];
  if ((v3 & ~*v2) == 0)
    v3 = 0;
  v4 = v3 | *v2;
  v5 = v2[2];
  if ((v5 & ~v4) == 0)
    v5 = 0;
  *a1 = v5 | v4;
}

void EventLoadedLazy.__allocating_init(options:loadBlock:)()
{
  swift_allocObject();
  EventLoadedLazy.init(options:loadBlock:)();
}

void EventLoadedLazy.init(options:loadBlock:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t EventLoadedLazy.__deallocating_deinit()
{
  Lazy.deinit();
  OUTLINED_FUNCTION_39_17();
  return swift_deallocClassInstance();
}

void ReferenceCountedLazy.__allocating_init(options:loadBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190ABFB9C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))ReferenceCountedLazy.init(options:loadBlock:));
}

void ReferenceCountedLazy.value(_:)(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  v6 = v5 - v4;
  ReferenceCountedLazy.increase()(v5 - v4);
  a1(v6);
  ReferenceCountedLazy.decrease()();
  OUTLINED_FUNCTION_45(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_26();
}

void ReferenceCountedLazy.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83();
  v0 = OUTLINED_FUNCTION_10_40();
  OUTLINED_FUNCTION_71_0(v0);
  swift_release();
  OUTLINED_FUNCTION_4();
}

uint64_t ReferenceCountedLazy.__deallocating_deinit()
{
  return sub_190AD6140(ReferenceCountedLazy.deinit);
}

uint64_t sub_190BC5CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190AC54DC(0, v1, a1);
}

uint64_t sub_190BC5CDC()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

uint64_t sub_190BC5D00()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190BC5D24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BC5D48()
{
  OUTLINED_FUNCTION_22();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BC5D70()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_190BC5DC8()
{
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

void sub_190BC5DE8(uint64_t a1@<X8>)
{
  void (**v1)(_QWORD);

  sub_190AA798C(0, v1, a1);
}

unint64_t sub_190BC5E18()
{
  unint64_t result;

  result = qword_1EE200680;
  if (!qword_1EE200680)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for LazyOptions, &type metadata for LazyOptions);
    atomic_store(result, (unint64_t *)&qword_1EE200680);
  }
  return result;
}

unint64_t sub_190BC5E58()
{
  unint64_t result;

  result = qword_1EE200688;
  if (!qword_1EE200688)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for LazyOptions, &type metadata for LazyOptions);
    atomic_store(result, (unint64_t *)&qword_1EE200688);
  }
  return result;
}

uint64_t method lookup function for Lazy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Lazy.__allocating_init(options:loadBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of Lazy.updateValueIfNotLoaded(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t method lookup function for EventLoadedLazy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EventLoadedLazy.__allocating_init(eventManager:event:options:loadBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t sub_190BC5EC8(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_190BC5EFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_190BC5F04(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190BC5F44(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190BC5F7C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_190BC5FBC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_190BC6000(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t method lookup function for UnsafeLazy()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for ReferenceCountedLazy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReferenceCountedLazy.__allocating_init(options:loadBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

_QWORD *sub_190BC6028(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x20uLL)
    v5 = 32;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_17:
    swift_retain();
    return v3;
  }
  v9 = *((unsigned __int8 *)a2 + v5);
  if (v9 >= 3)
    v9 = *(_DWORD *)a2 + 3;
  if (v9 != 2)
  {
    if (v9 == 1)
    {
      *(_QWORD *)a1 = *a2;
      v10 = a2[3];
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      *(_QWORD *)(a1 + 24) = v10;
      *(_BYTE *)(a1 + v5) = 1;
      swift_retain();
    }
    else
    {
      v11 = a2[1];
      *v3 = *a2;
      v3[1] = v11;
      *((_BYTE *)v3 + v5) = 0;
    }
    goto LABEL_17;
  }
  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *((_BYTE *)v3 + v5) = 2;
  return v3;
}

_QWORD *sub_190BC6120(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x20uLL)
      v7 = 32;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    else
    {
      if (v8 == 1)
        swift_release();
      swift_release();
    }
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 2;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      if (v10 == 1)
      {
        v13 = a2[2];
        v14 = a2[3];
        a1[2] = v13;
        a1[3] = v14;
        *((_BYTE *)a1 + v7) = 1;
        swift_retain();
      }
      else
      {
        *((_BYTE *)a1 + v7) = 0;
      }
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_190BC62F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x20uLL)
    v5 = 32;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v9 = 2;
  }
  else if (v6 == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = 1;
  }
  else
  {
    v9 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

uint64_t sub_190BC63E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 32;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x20uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190BC64A4 + 4 * byte_190BEF993[(v4 - 1)]))();
}

void sub_190BC64F0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x20)
    v5 = 32;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_190BC6694(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 32;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x20uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_190BC66DC + 4 * byte_190BEF9A1[v3]))();
}

void sub_190BC6724(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x20uLL)
    v4 = 32;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_190BC67EC()
{
  return swift_deallocObject();
}

uint64_t Weak.value.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1940170E4](v0 + 16);
}

uint64_t Weak.__allocating_init(_:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  Weak.init(_:)();
  return v0;
}

uint64_t Weak.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t Weak.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_190BC68C4()
{
  return Weak.value.getter();
}

uint64_t Array<A>.removeDeallocatedValues()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;

  v2 = v1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF60], a1);
  v4 = sub_190BE5D20();
  result = swift_bridgeObjectRelease();
  *v2 = v4;
  return result;
}

BOOL sub_190BC6968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (v3)
    swift_unknownObjectRelease();
  return v3 != 0;
}

BOOL sub_190BC69B4(uint64_t a1)
{
  uint64_t v1;

  return sub_190BC6968(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_190BC69D8()
{
  return 8;
}

_QWORD *sub_190BC69E4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for Weak()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Weak.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WeakReferencing.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_190BC6A0C(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(_BYTE *), uint64_t a5, uint64_t a6, uint64_t (*a7)(char *))
{
  _BYTE *v12;
  char v13;
  uint64_t result;
  void *v15;
  _BYTE v16[24];
  char v17;

  v17 = a2;
  v12 = (_BYTE *)(a3 + 16);
  swift_beginAccess();
  if (*(_BYTE *)(a3 + 16) == 1)
  {
    if (!a4 || (v16[0] = a2 & 1, swift_retain(), v13 = a4(v16), result = sub_190AB9930((uint64_t)a4), (v13 & 1) != 0))
    {
      swift_beginAccess();
      v15 = *(void **)(a6 + 16);
      *(_QWORD *)(a6 + 16) = 0;

      return a7(&v17);
    }
  }
  else
  {
    result = swift_beginAccess();
    *v12 = 1;
  }
  return result;
}

void sub_190BC6B08()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(char *);
  void (*v3)(char *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t (*v22)(char *);
  char v23;
  void *v24;
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  OUTLINED_FUNCTION_72();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v26 = v12;
  v27 = v13;
  v14 = OUTLINED_FUNCTION_12_1();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (_QWORD *)OUTLINED_FUNCTION_24();
  v18[2] = v11;
  v18[3] = v9;
  v18[4] = v7;
  v18[5] = v5;
  v25 = v3;
  v18[6] = v3;
  v18[7] = v1;
  OUTLINED_FUNCTION_15_2();
  swift_retain();
  v28 = (uint64_t (*)(char *))v9;
  v29 = v7;
  sub_190AFCCE8(v9);
  v30 = v5;
  swift_retain();
  swift_retain();
  *v17 = sub_190BE590C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  LOBYTE(v3) = OUTLINED_FUNCTION_29_19();
  (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v3 & 1) != 0)
  {
    v19 = v27;
    sub_190BC70D8(v26, (uint64_t)sub_190BC7CA4, (uint64_t)v18);
    OUTLINED_FUNCTION_20_0();
    v20 = *(_BYTE *)(v19 + 24);
    v32 = v20;
    OUTLINED_FUNCTION_20_0();
    if (*(_BYTE *)(v11 + 16) == 1)
    {
      v21 = v30;
      v22 = v28;
      if (!v28 || (v31 = v20, swift_retain(), v23 = v22(&v31), OUTLINED_FUNCTION_28_21(), (v23 & 1) != 0))
      {
        OUTLINED_FUNCTION_20_0();
        v24 = *(void **)(v21 + 16);
        *(_QWORD *)(v21 + 16) = 0;

        v25(&v32);
      }
    }
    else
    {
      OUTLINED_FUNCTION_20_0();
      *(_BYTE *)(v11 + 16) = 1;
    }
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_28_21();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_0_0();
  }
  else
  {
    __break(1u);
  }
}

void ObservableProperty.eagerObserve<A>(disposeOn:block:)()
{
  uint64_t v0;
  void (*v1)(uint64_t, char *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(uint64_t, char *);
  _QWORD v13[2];
  void (*v14)(uint64_t, char *);

  OUTLINED_FUNCTION_72();
  v13[1] = v2;
  v14 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_25_26();
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_15_2();
  v11 = OUTLINED_FUNCTION_7_48();
  *v10 = v11;
  OUTLINED_FUNCTION_18_29(v11, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_29_19();
  OUTLINED_FUNCTION_13_30();
  if ((v0 & 1) != 0)
  {
    v12 = v14;
    ObservableProperty.observe<A>(disposeOn:block:)();
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_31_19((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    v12(v4, v7);
    OUTLINED_FUNCTION_15_1((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_0_0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_190BC6E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a3 + a2 - 8);
  v6 = *(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a4, v6, v5);
}

uint64_t sub_190BC6E98(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return ObservableProperty.wrappedValue.setter((uint64_t)v2);
}

uint64_t sub_190BC6F0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_190AB6170(a2);
    return swift_release();
  }
  return result;
}

uint64_t (*ObservableProperty.wrappedValue.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_20_0();
  return sub_190BC6FAC;
}

uint64_t sub_190BC6FAC(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_190AB5E68();
  return result;
}

void ObservableProperty.observe(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD v13[6];

  v6 = *v2;
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_27_22();
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_15_2();
  v10 = OUTLINED_FUNCTION_7_48();
  *v9 = v10;
  OUTLINED_FUNCTION_16_31(v10, *MEMORY[0x1E0DEF740]);
  v11 = sub_190BE4D24();
  OUTLINED_FUNCTION_45(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v11 & 1) != 0)
  {
    v12 = (_QWORD *)OUTLINED_FUNCTION_24();
    v12[2] = *(_QWORD *)(v6 + 80);
    v12[3] = a1;
    v12[4] = a2;
    v13[4] = sub_190AC57F8;
    v13[5] = v12;
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_10_41();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_4_2();
    OUTLINED_FUNCTION_30_19();
    swift_endAccess();
    OUTLINED_FUNCTION_26();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_190BC70D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v7 = sub_190BE4D00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190AC4980();
  *v10 = sub_190BE590C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = sub_190BE4D24();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v13;
    v14[3] = a2;
    v14[4] = a3;
    swift_beginAccess();
    swift_retain();
    swift_retain();
    sub_190B0BF88();
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
    sub_190B0C258(v15);
    v16 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v16 + 16) = v15 + 1;
    v17 = v16 + 16 * v15;
    *(_QWORD *)(v17 + 32) = sub_190BC7CE0;
    *(_QWORD *)(v17 + 40) = v14;
    swift_endAccess();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void ObservableProperty.observe<A>(disposeOn:block:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_72();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *v0;
  v10 = OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_16_5();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_2_63();
  *v1 = OUTLINED_FUNCTION_7_48();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF740], v10);
  v12 = OUTLINED_FUNCTION_23_27();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v10);
  if ((v12 & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_24();
    swift_unknownObjectWeakInit();
    v14 = (_QWORD *)OUTLINED_FUNCTION_24();
    v14[2] = *(_QWORD *)(v9 + 80);
    v14[3] = v4;
    v14[4] = v13;
    v14[5] = v8;
    v14[6] = v6;
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_10_41();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_4_2();
    OUTLINED_FUNCTION_30_19();
    swift_endAccess();
    swift_release();
    OUTLINED_FUNCTION_0_0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_190BC7388()
{
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

uint64_t sub_190BC73A8()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

void sub_190BC73C4(char a1, uint64_t a2, void (*a3)(uint64_t, char *))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;

  v7 = a1;
  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1940170E4](v4);
  if (v5)
  {
    v6 = (void *)v5;
    a3(v5, &v7);

  }
}

uint64_t sub_190BC742C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t result;

  v4 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1940170E4](v4);
  if (result)
  {
    a3();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190BC7498()
{
  OUTLINED_FUNCTION_22();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BC74C0(uint64_t a1)
{
  uint64_t v1;

  return sub_190BC742C(a1, *(_QWORD *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

uint64_t sub_190BC74D0()
{
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

void ObservableProperty.eagerObserve(block:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char *);
  void (*v5)(char *);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_72();
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_16_5();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2_63();
  v10 = OUTLINED_FUNCTION_7_48();
  *v1 = v10;
  OUTLINED_FUNCTION_17_25(v10, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_23_27();
  OUTLINED_FUNCTION_14_32();
  if ((v0 & 1) != 0)
  {
    ObservableProperty.observe(block:)((uint64_t)v5, v3);
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_31_19((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    v5(v8);
    OUTLINED_FUNCTION_15_1((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_0_0();
  }
  else
  {
    __break(1u);
  }
}

void ObservableProperty.eagerObserveUntil(block:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *__return_ptr, char *);
  void (*v5)(_QWORD *__return_ptr, char *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v17[8];

  OUTLINED_FUNCTION_72();
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_16_5();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2_63();
  v11 = OUTLINED_FUNCTION_7_48();
  *v1 = v11;
  OUTLINED_FUNCTION_17_25(v11, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_23_27();
  OUTLINED_FUNCTION_14_32();
  if ((v0 & 1) != 0)
  {
    v12 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
    OUTLINED_FUNCTION_20_0();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
    v5(v17, v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if ((v17[0] & 1) == 0)
    {
      v13 = OUTLINED_FUNCTION_24();
      type metadata accessor for ObservableProperty.Token(0, v6, v14, v15);
      *(_QWORD *)(v13 + 16) = sub_190B07EFC();
      v16 = (_QWORD *)OUTLINED_FUNCTION_24();
      v16[2] = v6;
      v16[3] = v13;
      v16[4] = v5;
      v16[5] = v3;
      v17[3] = sub_190BC7CEC;
      v17[4] = v16;
      OUTLINED_FUNCTION_20_0();
      OUTLINED_FUNCTION_9_45();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_121();
      OUTLINED_FUNCTION_4_2();
      sub_190BE53D8();
      swift_endAccess();
      swift_release();
    }
    OUTLINED_FUNCTION_0_0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ObservableProperty.map<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_72();
  v30 = v1;
  v31 = v2;
  v4 = v3;
  v28 = v5;
  v29 = v6;
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v5);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_25_26();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_15_2();
  v17 = OUTLINED_FUNCTION_7_48();
  *v16 = v17;
  OUTLINED_FUNCTION_18_29(v17, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_29_19();
  result = OUTLINED_FUNCTION_13_30();
  if ((v0 & 1) != 0)
  {
    type metadata accessor for ObservableProperty(0, v4, v19, v20);
    v21 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
    OUTLINED_FUNCTION_20_0();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v21, v7);
    v23 = v28;
    v22 = v29;
    v28(v11);
    OUTLINED_FUNCTION_45(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    ObservableProperty.__allocating_init(wrappedValue:)((uint64_t)v13);
    v25 = v24;
    v26 = (_QWORD *)OUTLINED_FUNCTION_24();
    v26[2] = v7;
    v26[3] = v25;
    v26[4] = v23;
    v26[5] = v22;
    OUTLINED_FUNCTION_121();
    swift_retain();
    ObservableProperty.eagerObserve<A>(disposeOn:block:)();
    swift_release();
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190BC7938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6(v5);
  sub_190AB6170((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t objectdestroy_11Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BC79F8(uint64_t a1)
{
  return sub_190BC7938(a1);
}

BOOL static ObservablePropertyUntilResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ObservablePropertyUntilResult.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t ObservablePropertyUntilResult.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

unint64_t sub_190BC7A98()
{
  unint64_t result;

  result = qword_1EE200690[0];
  if (!qword_1EE200690[0])
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for ObservablePropertyUntilResult, &type metadata for ObservablePropertyUntilResult);
    atomic_store(result, qword_1EE200690);
  }
  return result;
}

uint64_t sub_190BC7ADC()
{
  return 8;
}

_QWORD *sub_190BC7AE8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for ObservableProperty()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObservableProperty.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t storeEnumTagSinglePayload for ObservablePropertyUntilResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190BC7B54 + 4 * byte_190BEFCF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190BC7B88 + 4 * asc_190BEFCF0[v4]))();
}

uint64_t sub_190BC7B88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BC7B90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BC7B98);
  return result;
}

uint64_t sub_190BC7BA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BC7BACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190BC7BB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BC7BB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BC7BC4()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

uint64_t sub_190BC7BE0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  OUTLINED_FUNCTION_15_1(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t sub_190BC7C44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return sub_190BC6F0C(*(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_190BC7C60(uint64_t a1, char *a2, uint64_t a3, uint64_t (*a4)(_BYTE *), uint64_t a5, uint64_t a6, uint64_t (*a7)(char *))
{
  return sub_190BC6A0C(a1, *a2, a3, a4, a5, a6, a7);
}

uint64_t sub_190BC7C68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110();
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_22();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BC7CA4(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_190BC7C60(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(_BYTE *))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(uint64_t (**)(char *))(v2 + 48));
}

void sub_190BC7CB4(char *a1, uint64_t a2, void (*a3)(uint64_t, char *))
{
  sub_190BC73C4(*a1, a2, a3);
}

uint64_t sub_190BC7CBC()
{
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

void sub_190BC7CE0(char *a1)
{
  uint64_t v1;

  sub_190BC7CB4(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, char *))(v1 + 24));
}

uint64_t static ObjectReuseProtector.Errors.== infix(_:_:)()
{
  return 1;
}

uint64_t ObjectReuseProtector.Errors.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t ObjectReuseProtector.Errors.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190BC7D60()
{
  return ObjectReuseProtector.Errors.hashValue.getter();
}

uint64_t sub_190BC7D74()
{
  return ObjectReuseProtector.Errors.hash(into:)();
}

uint64_t sub_190BC7D88()
{
  sub_190BE62FC();
  ObjectReuseProtector.Errors.hash(into:)();
  return sub_190BE6314();
}

uint64_t ObjectReuseProtector.__allocating_init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_36();
  v0 = swift_allocObject();
  ObjectReuseProtector.init()();
  return v0;
}

void sub_190BC7DEC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_7;
  swift_beginAccess();
  v12 = MEMORY[0x1940170E4](a3 + 16);
  if (!v12)
  {
    Strong = swift_release();
LABEL_7:
    ((void (*)(uint64_t))a4)(Strong);
    return;
  }
  v13 = v12;
  v14 = sub_190ADFFC8();
  v15 = objc_msgSend(v14, sel_objectForKey_, v13);

  if (v15)
  {
    sub_190AB8568(0, (unint64_t *)&qword_1ED034910);
    if ((sub_190BE5978() & 1) != 0)
    {
      a7(a1);
      swift_release();
      swift_unknownObjectRelease();

      return;
    }

  }
  a4();
  swift_release();
  swift_unknownObjectRelease();
}

uint64_t ObjectReuseProtector.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ObjectReuseProtector.__deallocating_deinit()
{
  ObjectReuseProtector.deinit();
  OUTLINED_FUNCTION_36();
  return swift_deallocClassInstance();
}

void sub_190BC7F7C()
{
  JUMPOUT(0x194016EF8);
}

uint64_t method lookup function for ObjectReuseProtector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectReuseProtector.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_190BC7FA0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190BC7FE0 + 4 * byte_190BEFE00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190BC8000 + 4 * byte_190BEFE05[v4]))();
}

_BYTE *sub_190BC7FE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190BC8000(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BC8008(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BC8010(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BC8018(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BC8020(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for ObjectReuseProtector.Errors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObjectReuseProtector.Errors);
}

uint64_t sub_190BC8038()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BC805C()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

uint64_t sub_190BC8078()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_36();
  return swift_deallocObject();
}

void sub_190BC809C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  OUTLINED_FUNCTION_1_68();
  sub_190BC7DEC(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t ObservableResolver.__allocating_init(_:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_190AAB5A4(a1, v2 + 16);
  return v2;
}

uint64_t ObservableResolver.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ObservableResolver.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void ObservableResolver.resolve<A>(_:with:)()
{
  OUTLINED_FUNCTION_1_69();
  OUTLINED_FUNCTION_0_70();
  OUTLINED_FUNCTION_26();
}

void ObservableResolver.resolve<A>(_:name:)()
{
  OUTLINED_FUNCTION_1_69();
  OUTLINED_FUNCTION_0_70();
  OUTLINED_FUNCTION_26();
}

uint64_t ObservableResolver.resolve<A>(_:name:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v13;
  uint64_t v14;

  v13 = v6[5];
  v14 = v6[6];
  __swift_project_boxed_opaque_existential_1(v6 + 2, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a1, a2, a3, a4, a5, a6, v13, v14);
}

uint64_t ObservableResolver.bridgedResolver.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t sub_190BC8274(uint64_t a1, uint64_t a2)
{
  return ObservableResolver.resolve<A>(_:)(a1, a2);
}

uint64_t sub_190BC8294(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  ObservableResolver.resolve<A>(_:)(a1, a2);
  return v3;
}

void sub_190BC82C4()
{
  ObservableResolver.resolve<A>(_:with:)();
}

uint64_t sub_190BC82E4()
{
  uint64_t v1;

  ObservableResolver.resolve<A>(_:with:)();
  return v1;
}

void sub_190BC8314()
{
  ObservableResolver.resolve<A>(_:name:)();
}

uint64_t sub_190BC8334()
{
  uint64_t v1;

  ObservableResolver.resolve<A>(_:name:)();
  return v1;
}

uint64_t sub_190BC8364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ObservableResolver.resolve<A>(_:name:with:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_190BC8384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;

  ObservableResolver.resolve<A>(_:name:with:)(a1, a2, a3, a4, a5, a6);
  return v7;
}

uint64_t sub_190BC83B4()
{
  return ObservableResolver.bridgedResolver.getter();
}

uint64_t method lookup function for ObservableResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObservableResolver.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AssemblyType.load(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void Stack.remove(at:)()
{
  Stack.startIndex.getter();
  Stack.endIndex.getter();
}

Swift::Void __swiftcall Stack.removeAll()()
{
  sub_190ADAA00();
  OUTLINED_FUNCTION_87();
  sub_190BE5420();
}

Swift::Int sub_190BC84DC@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = Stack.index(after:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_190BC8504(uint64_t a1)
{
  MEMORY[0x194016EF8](&protocol conformance descriptor for Stack<A>, a1);
  return sub_190BE572C();
}

uint64_t URLHandlerMatch.Values.vals(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 16))
    return MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_1_60();
  OUTLINED_FUNCTION_2_65();
  if ((v2 & 1) != 0)
    OUTLINED_FUNCTION_0_71();
  else
    v1 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_20();
  return v1;
}

uint64_t URLHandlerMatch.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6_3();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t URLHandlerMatch.pattern.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_6_48() + 20);
  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 56);
  v5 = *(_QWORD *)(v2 + 64);
  v7 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)v0 = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 72) = v7;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t URLHandlerMatch.values.getter()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_6_48() + 24));
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

BOOL URLHandlerMatch.Values.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

uint64_t URLHandlerMatch.Values.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

void URLHandlerMatch.Values.subscript.getter()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 16))
  {
    OUTLINED_FUNCTION_1_60();
    OUTLINED_FUNCTION_2_65();
    if ((v2 & 1) != 0 && (OUTLINED_FUNCTION_0_71(), OUTLINED_FUNCTION_20(), *(_QWORD *)(v1 + 16)))
    {
      OUTLINED_FUNCTION_3_61();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_4();
}

Swift::String_optional __swiftcall URLHandlerMatch.Values.val(_:)(Swift::String a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  Swift::String_optional result;

  v2 = *v1;
  if (*(_QWORD *)(v2 + 16))
  {
    OUTLINED_FUNCTION_1_60();
    OUTLINED_FUNCTION_2_65();
    if ((v3 & 1) != 0 && (OUTLINED_FUNCTION_0_71(), OUTLINED_FUNCTION_20(), *(_QWORD *)(v2 + 16)))
    {
      OUTLINED_FUNCTION_3_61();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_4();
  result.value._object = v5;
  result.value._countAndFlagsBits = v4;
  return result;
}

uint64_t type metadata accessor for URLHandlerMatch()
{
  uint64_t result;

  result = qword_1ED032448;
  if (!qword_1ED032448)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for URLHandlerMatch(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190BE4628();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    v14 = v11[5];
    v10[4] = v11[4];
    v10[5] = v14;
    v15 = v11[7];
    v10[6] = v11[6];
    v10[7] = v15;
    v16 = v11[9];
    v10[8] = v11[8];
    v10[9] = v16;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t destroy for URLHandlerMatch(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for URLHandlerMatch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  v13 = v10[5];
  v9[4] = v10[4];
  v9[5] = v13;
  v14 = v10[7];
  v9[6] = v10[6];
  v9[7] = v14;
  v15 = v10[9];
  v9[8] = v10[8];
  v9[9] = v15;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for URLHandlerMatch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v8[6] = v9[6];
  v8[7] = v9[7];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v8[8] = v9[8];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v8[9] = v9[9];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for URLHandlerMatch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x50uLL);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for URLHandlerMatch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_190BE4628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  v13 = v9[7];
  v8[6] = v9[6];
  v8[7] = v13;
  swift_bridgeObjectRelease();
  v8[8] = v9[8];
  swift_bridgeObjectRelease();
  v8[9] = v9[9];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLHandlerMatch()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190BC8C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_6_3();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for URLHandlerMatch()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190BC8D14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_6_3();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_190BC8D88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE4628();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for URLHandlerMatch.Values()
{
  return &type metadata for URLHandlerMatch.Values;
}

void sub_190BC8E18()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  OUTLINED_FUNCTION_20_0();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 56) = v3;
    OUTLINED_FUNCTION_61();
  }
}

uint64_t BackgroundNetworkSession.__allocating_init(session:urlSessionDelegate:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_4_44();
  sub_190AAB5A4(a1, v4 + 16);
  *(_QWORD *)(v4 + 56) = a2;
  return v4;
}

uint64_t BackgroundNetworkSession.init(session:urlSessionDelegate:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  sub_190AAB5A4(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  return v2;
}

uint64_t BackgroundNetworkSession.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return v0;
}

uint64_t BackgroundNetworkSession.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t StubNetworkProxy.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_20_0();
  v1 = *(_QWORD *)(v0 + 16);
  sub_190AFCD54(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t StubNetworkProxy.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_20_0();
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_190AFCEB8(v5, v6);
}

void StubNetworkProxy.data.modify()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

void StubNetworkProxy.response.getter()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_20_0();
  v1 = *(id *)(v0 + 32);
  OUTLINED_FUNCTION_61();
}

void StubNetworkProxy.response.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_20_0();
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;

  OUTLINED_FUNCTION_61();
}

void StubNetworkProxy.response.modify()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

void StubNetworkProxy.metrics.getter()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_20_0();
  v1 = *(id *)(v0 + 40);
  OUTLINED_FUNCTION_61();
}

void StubNetworkProxy.metrics.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_20_0();
  v3 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;

  OUTLINED_FUNCTION_61();
}

void StubNetworkProxy.metrics.modify()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

void StubNetworkProxy.error.getter()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_20_0();
  v1 = *(id *)(v0 + 48);
  OUTLINED_FUNCTION_61();
}

void StubNetworkProxy.error.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_20_0();
  v3 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;

  OUTLINED_FUNCTION_61();
}

void StubNetworkProxy.error.modify()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

uint64_t StubNetworkProxy.requestCount.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_0();
  return *(_QWORD *)(v0 + 56);
}

uint64_t StubNetworkProxy.__allocating_init(data:response:metrics:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = OUTLINED_FUNCTION_4_44();
  StubNetworkProxy.init(data:response:metrics:error:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t assignWithCopy for NetworkProxy(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2 || v4 == 1)
    {
      swift_release();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2 || v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = v5;
      swift_retain();
    }
    else if (v5)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for NetworkProxy(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2 || v4 == 1)
    {
      swift_release();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = 2;
    }
    else
    {
      if (v5 != 1)
      {
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        if (v5)
        {
          *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        }
        else
        {
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = 0;
        }
        return a1;
      }
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = 1;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t sub_190BC940C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t type metadata accessor for BackgroundNetworkSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for BackgroundNetworkSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BackgroundNetworkSession.__allocating_init(session:urlSessionDelegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for StubNetworkProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StubNetworkProxy.__allocating_init(data:response:metrics:error:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void UniqueParentChildCollection.subscript.getter(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v4 = *v2;
  v6[0] = (*(uint64_t (**)(_QWORD))(a2[8] + 8))(a2[3]);
  v6[1] = v5;
  MEMORY[0x194015140](v6, v4, MEMORY[0x1E0DEA968], a2[2], MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_4();
}

void sub_190BC94EC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_190BC9550(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = v3;
  if (v3)
  {
    v34 = v3;
    v32 = v2;
    *(_QWORD *)(v7 - 104) = v5;
    v9 = v3 & ~(v3 >> 63);
    sub_190AD2C9C();
    v5 = *(_QWORD *)(v7 - 104);
    v35 = (int)v4;
    if ((_DWORD)v6)
    {
      if ((_DWORD)v6 == 1)
        v10 = (int)v4;
      else
        v10 = *(_QWORD *)(v4 + 16);
      if (v8 < 0)
        goto LABEL_40;
    }
    else
    {
      if (v8 < 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
      }
      v10 = 0;
    }
    v33 = (uint64_t)v4 >> 32;
    v30 = v4 >> 16;
    v31 = v4 >> 8;
    v28 = v4 >> 40;
    v29 = v4 >> 24;
    v26 = HIBYTE(v4);
    v27 = HIWORD(v4);
    *(_QWORD *)(v7 - 136) = v6;
    *(_QWORD *)(v7 - 128) = v4;
    while (v9)
    {
      if ((_DWORD)v6)
      {
        if ((_DWORD)v6 == 1)
        {
          if (v10 < v35 || v10 >= v33)
            goto LABEL_34;
          v12 = sub_190BE446C();
          if (!v12)
            goto LABEL_42;
          v13 = v12;
          v14 = sub_190BE4484();
          v15 = v10 - v14;
          if (__OFSUB__(v10, v14))
            goto LABEL_37;
        }
        else
        {
          if (v10 < *(_QWORD *)(v4 + 16))
            goto LABEL_36;
          if (v10 >= *(_QWORD *)(v4 + 24))
            goto LABEL_38;
          v17 = sub_190BE446C();
          if (!v17)
            goto LABEL_43;
          v13 = v17;
          v18 = sub_190BE4484();
          v15 = v10 - v18;
          if (__OFSUB__(v10, v18))
            goto LABEL_39;
        }
        v16 = *(_BYTE *)(v13 + v15);
      }
      else
      {
        if (v10 >= v34)
          goto LABEL_35;
        *(_BYTE *)(v7 - 118) = v4;
        *(_BYTE *)(v7 - 117) = v31;
        *(_BYTE *)(v7 - 116) = v30;
        *(_BYTE *)(v7 - 115) = v29;
        *(_BYTE *)(v7 - 114) = v32;
        *(_BYTE *)(v7 - 113) = v28;
        *(_BYTE *)(v7 - 112) = v27;
        *(_BYTE *)(v7 - 111) = v26;
        *(_DWORD *)(v7 - 110) = a2;
        *(_WORD *)(v7 - 106) = WORD2(a2);
        v16 = *(_BYTE *)(v7 - 118 + v10);
      }
      sub_190AAC38C(0, (unint64_t *)&qword_1ED034558, (uint64_t (*)(uint64_t))sub_190B06084, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_190BE7CD0;
      *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v19 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v19 + 32) = v16;
      v20 = sub_190BE503C();
      v22 = v21;
      *(_QWORD *)(v7 - 104) = v5;
      v23 = *(_QWORD *)(v5 + 16);
      if (v23 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_190AD2C9C();
        v5 = *(_QWORD *)(v7 - 104);
      }
      *(_QWORD *)(v5 + 16) = v23 + 1;
      v24 = v5 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v22;
      ++v10;
      --v9;
      --v8;
      v6 = *(_QWORD *)(v7 - 136);
      v4 = *(_QWORD *)(v7 - 128);
      if (!v8)
        return v5;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    JUMPOUT(0x190BC9868);
  }
  return v5;
}

uint64_t sub_190BC9890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v9;
  __int16 v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a2;
  v11 = BYTE2(a2);
  v12 = BYTE3(a2);
  v13 = BYTE4(a2);
  v14 = BYTE5(a2);
  sub_190BC9D68(&v9, (uint64_t)&v9 + a3, a4, a5, a6);
  return sub_190AEF3F4(a4, a5);
}

void sub_190BC9984(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || a1 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_190B1272C();
    v3 = v4;
  }
  *v1 = v3;
}

Swift::String __swiftcall String.normalized()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  v2 = v1;
  v3 = v0;
  sub_190AC5F54(0, &qword_1ED034918, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BEACC0;
  *(_QWORD *)(inited + 32) = 543516788;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = 2122092;
  *(_QWORD *)(inited + 56) = 0xE300000000000000;
  *(_QWORD *)(inited + 64) = 2123116;
  *(_QWORD *)(inited + 72) = 0xE300000000000000;
  sub_190BE5084();
  if ((OUTLINED_FUNCTION_4_46() & 1) == 0)
  {
    v8 = 0;
    while (1)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      if ((OUTLINED_FUNCTION_4_46() & 1) != 0)
        break;
      v8 += 16;
      OUTLINED_FUNCTION_81();
      if (v8 == 32)
      {
        swift_setDeallocating();
        sub_190AC5F9C();
        swift_bridgeObjectRelease();
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v5 = sub_190BE50C0();
  OUTLINED_FUNCTION_81();
  v6 = sub_190B430F4(v5, v3, v2);
  v3 = MEMORY[0x19401532C](v6);
  v2 = v7;
  swift_bridgeObjectRelease();
LABEL_7:
  v9 = v3;
  v10 = (void *)v2;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall String.sha1Hash()()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String result;

  OUTLINED_FUNCTION_2_67();
  sub_190B1F8F0(v1, v0);
  v3 = v2;
  v4 = sub_190BE5390();
  *(_QWORD *)(v4 + 16) = 20;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_DWORD *)(v4 + 48) = 0;
  __asm { BR              X10 }
  return result;
}

uint64_t sub_190BC9BCC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_190BC9890(v0, v1 & 0xFFFFFFFFFFFFLL, BYTE6(v1), v0, v1, (uint64_t)&v7);
  OUTLINED_FUNCTION_1_45();
  v2 = MEMORY[0x19401499C](v7 + 32, *(_QWORD *)(v7 + 16));
  v4 = v3;
  sub_190BC94EC(v2, v3);
  sub_190AC5F54(0, (unint64_t *)&qword_1ED034520, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_190AD1E54();
  v5 = sub_190BE4F28();
  OUTLINED_FUNCTION_1_45();
  sub_190AEF3F4(v2, v4);
  OUTLINED_FUNCTION_81();
  swift_bridgeObjectRelease();
  return v5;
}

unsigned __int8 *sub_190BC9D68(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7;
  CC_LONG v8;
  unsigned __int8 *result;

  v7 = sub_190BE470C();
  if ((v7 & 0x8000000000000000) != 0 || (v8 = v7, HIDWORD(v7)))
  {
    result = (unsigned __int8 *)sub_190BE5E4C();
    __break(1u);
  }
  else
  {
    sub_190BC9984(0);
    return CC_SHA1(a1, v8, (unsigned __int8 *)(*(_QWORD *)a5 + 32));
  }
  return result;
}

uint64_t sub_190BC9E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t result;
  char *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  result = sub_190BE446C();
  v12 = (char *)result;
  if (result)
  {
    result = sub_190BE4484();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  v13 = __OFSUB__(a2, a1);
  v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = sub_190BE4478();
  if (v15 >= v14)
    v16 = v14;
  else
    v16 = v15;
  v17 = &v12[v16];
  if (v12)
    v18 = (uint64_t)v17;
  else
    v18 = 0;
  sub_190BC9D68(v12, v18, a4, a5, a6);
  return sub_190AEF3F4(a4, a5);
}

uint64_t static BinaryEncoder.encode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  __int128 v6;

  v6 = xmmword_190BE87C0;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(a4 + 8))(&v6, a2, a4);
  result = v6;
  if (v4)
    return sub_190AEF3F4(v6, *((unint64_t *)&v6 + 1));
  return result;
}

uint64_t BinaryEncoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BinaryEncoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for BinaryEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScenePhaseObserver.scenePhaseChanged(old:new:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

BOOL static SemVer.matches(requirement:with:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  _BOOL8 v16;

  v9 = a1[1];
  v10 = a1[2];
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = *a1 == *a2 && v9 == v12;
  if (v14 || (v15 = sub_190BE60BC(), LOBYTE(v16) = 0, (v15 & 1) != 0))
  {
    v16 = (v10 | v13) == 0;
    if (v10 && v13)
      LOBYTE(v16) = OUTLINED_FUNCTION_1_70(v16, v9, v11, v12, a5, a6, a7, a8, v13, v10);
  }
  return v16;
}

ValueMetadata *type metadata accessor for SemVer()
{
  return &type metadata for SemVer;
}

void Collection<>.insertionIndex(of:orderBy:)(uint64_t a1, uint64_t (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  char v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t v23;
  char v24;
  _QWORD v25[7];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25[6] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)v25 - v12;
  v14 = sub_190BE56A8();
  v15 = v14 - 1;
  if (!__OFSUB__(v14, 1))
  {
    if (v15 < 0)
    {
LABEL_10:
      OUTLINED_FUNCTION_0_0();
      return;
    }
    v25[1] = v13;
    v25[2] = a5;
    v25[3] = AssociatedTypeWitness;
    v25[4] = a2;
    v25[5] = a3;
    v16 = 0;
    v28 = v5;
    v29 = a4;
    v25[0] = a1;
    while (1)
    {
      v17 = v16 + v15;
      if (__OFADD__(v16, v15))
        break;
      v26 = v15;
      v27 = v16;
      v18 = v17 / 2;
      v31 = v17 / 2;
      v19 = (void (*)(_BYTE *, _QWORD))sub_190BE5804();
      OUTLINED_FUNCTION_2_68((uint64_t)v19, v20);
      v19(v30, 0);
      v21 = a2(v13, a1);
      OUTLINED_FUNCTION_1_71();
      if ((v21 & 1) != 0)
      {
        v16 = v18 + 1;
        a1 = v25[0];
        v15 = v26;
      }
      else
      {
        v31 = v18;
        v22 = (void (*)(_BYTE *, _QWORD))sub_190BE5804();
        OUTLINED_FUNCTION_2_68((uint64_t)v22, v23);
        v22(v30, 0);
        a1 = v25[0];
        v24 = a2((char *)v25[0], (uint64_t)v13);
        OUTLINED_FUNCTION_1_71();
        v16 = v27;
        if ((v24 & 1) == 0)
          goto LABEL_10;
        v15 = v18 - 1;
      }
      if (v15 < v16)
        goto LABEL_10;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t Collection<>.chunk(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[10];

  result = sub_190BE56A8();
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (a1)
  {
    v13[7] = 0;
    v13[8] = result;
    v13[9] = a1;
    MEMORY[0x1E0C80A78](result);
    v13[2] = a2;
    v13[3] = a3;
    v13[4] = a1;
    v13[5] = v3;
    sub_190BCB034(0, &qword_1ED032D38, MEMORY[0x1E0DEB458], MEMORY[0x1E0DEE888]);
    v9 = v8;
    swift_getAssociatedTypeWitness();
    v10 = OUTLINED_FUNCTION_6();
    v11 = sub_190BCA4A4();
    return sub_190B421A4((uint64_t)sub_190BCA484, (uint64_t)v13, v9, v10, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_190BCA32C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = *a1;
  v9 = __OFADD__(v8, a2);
  v10 = v8 + a2;
  if (v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = sub_190BE56A8();
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  if (v11 >= v8)
  {
    sub_190BE57F8();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    result = sub_190BE5450();
    *a3 = result;
    return result;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_190BCA484@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_190BCA32C(a1, *(_QWORD *)(v2 + 32), a2);
}

unint64_t sub_190BCA4A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED032D30;
  if (!qword_1ED032D30)
  {
    sub_190BCB034(255, &qword_1ED032D38, MEMORY[0x1E0DEB458], MEMORY[0x1E0DEE888]);
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEE898], v1);
    atomic_store(result, (unint64_t *)&qword_1ED032D30);
  }
  return result;
}

void Collection<>.subcollectionPermutations.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[9];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1);
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = a3;
  v17[8] = sub_190BE524C();
  swift_getAssociatedTypeWitness();
  v9 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF28], v9);
  sub_190BE4FA0();
  swift_bridgeObjectRelease();
  v10 = v18;
  v11 = v19;
  v13 = v20;
  v12 = v21;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v15 = sub_190BCA83C();
  if (v15 < 0)
  {
    __break(1u);
  }
  else
  {
    v17[0] = v17;
    v18 = 0;
    v19 = v15;
    MEMORY[0x1E0C80A78](v15);
    v17[1] = v10;
    v17[-10] = a1;
    v17[-9] = a2;
    v17[-8] = a3;
    v17[-7] = v10;
    v17[-6] = v11;
    v17[-5] = v13;
    v17[-4] = v12;
    v17[-3] = sub_190BCA978;
    v17[-2] = v14;
    sub_190BCB034(0, (unint64_t *)&qword_1ED034900, MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB848]);
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_6();
    sub_190BCABC4();
    v18 = sub_190B78860();
    MEMORY[0x1E0C80A78](v18);
    v17[-4] = a1;
    v17[-3] = a2;
    v17[-2] = a3;
    v16 = sub_190BE5438();
    MEMORY[0x194016EF8](MEMORY[0x1E0DEAF60], v16);
    sub_190BE5D20();
    swift_unknownObjectRelease();
    swift_release();
    OUTLINED_FUNCTION_0_0();
  }
}

BOOL sub_190BCA7B8()
{
  swift_getAssociatedTypeWitness();
  return (sub_190BE56E4() & 1) == 0;
}

BOOL sub_190BCA81C()
{
  return sub_190BCA7B8();
}

uint64_t sub_190BCA83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  v0 = sub_190BE5B40();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEBF88], v0);
  v1 = sub_190B78860();
  result = swift_release();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v1 + 32);
    v5 = 1;
    while (1)
    {
      v6 = *v4++;
      v7 = v5 * v6;
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
        break;
      v5 = v7;
      if (!--v3)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v7 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_190BCA968()
{
  return swift_deallocObject();
}

uint64_t sub_190BCA978()
{
  return sub_190BCA83C();
}

uint64_t sub_190BCA984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getAssociatedTypeWitness();
  result = sub_190BE56A8();
  *a1 = result;
  return result;
}

uint64_t sub_190BCA9E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v23;
  char v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t *v47;

  v47 = a9;
  v23 = *a1;
  swift_getAssociatedTypeWitness();
  v14 = sub_190BE5B40();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEBF78], v14);
  sub_190BE521C();
  v43 = v45;
  v44 = v46;
  v33 = a8;
  v34 = a10;
  v35 = a11;
  v36 = a6;
  v37 = a7;
  v38 = a2;
  v39 = a3;
  v40 = a4;
  v41 = a5;
  v42 = v23;
  v27 = a8;
  v28 = a10;
  v29 = a11;
  v30 = sub_190BCAFD8;
  v31 = &v32;
  v15 = sub_190BE5EA0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = MEMORY[0x194016EF8](MEMORY[0x1E0DECC68], v15);
  v19 = sub_190B421A4((uint64_t)sub_190BCB010, (uint64_t)v26, v15, AssociatedTypeWitness, MEMORY[0x1E0DEDCE8], v17, MEMORY[0x1E0DEDD18], v18);
  result = swift_unknownObjectRelease();
  *v47 = v19;
  return result;
}

uint64_t sub_190BCAB88@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_190BCA9E0(a1, v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[2], a2, v2[3], v2[4]);
}

unint64_t sub_190BCABC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_1ED031B68;
  if (!qword_1ED031B68)
  {
    sub_190BCB034(255, (unint64_t *)&qword_1ED034900, MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB848]);
    v2 = v1;
    v3 = sub_190B067B0();
    v4[0] = MEMORY[0x1E0DEB458];
    v4[1] = v3;
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEB8C0], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED031B68);
  }
  return result;
}

uint64_t sub_190BCAC44@<X0>(uint64_t result@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t a3@<X8>, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  _QWORD v16[4];

  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_getAssociatedTypeWitness();
  v6 = sub_190BE5B40();
  sub_190BCB034(0, &qword_1ED031E38, MEMORY[0x1E0DEB430], MEMORY[0x1E0DEC910]);
  v8 = v7;
  MEMORY[0x194016EF8](MEMORY[0x1E0DEBF70], v6);
  MEMORY[0x194016EF8](MEMORY[0x1E0DEC928], v8);
  sub_190BE4F94();
  v9 = a2(v16[0], v16[1], v16[2], v16[3]);
  result = swift_unknownObjectRelease();
  v10 = floor((double)a4 / (double)v9);
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = sub_190BE56A8();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)v10 != 0x8000000000000000 || result != -1)
  {
    v12 = (uint64_t (*)(_QWORD *, _QWORD))sub_190BE5804();
    v14 = v13;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a3, v14, AssociatedTypeWitness);
    return v12(v16, 0);
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_190BCAE64(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v4 = *(_QWORD *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

BOOL sub_190BCAF00()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v0 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v0);
  return (sub_190BE5798() & 1) == 0;
}

BOOL sub_190BCAFB8()
{
  return sub_190BCAF00();
}

uint64_t sub_190BCAFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_190BCAC44(a1, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 + 40), a2, *(_QWORD *)(v2 + 88));
}

uint64_t sub_190BCB010(char *a1)
{
  uint64_t v1;

  return sub_190BCAE64(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 40));
}

void sub_190BCB034(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x1E0DEB418]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_190BCB080()
{
  return 24;
}

__n128 sub_190BCB08C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_190BCB0A0()
{
  return swift_getAtKeyPath();
}

uint64_t XPCArgument.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t XPCArgument.classes.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t XPCArgument.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  result = a3();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = result;
  return result;
}

ValueMetadata *type metadata accessor for XPCArgument()
{
  return &type metadata for XPCArgument;
}

uint64_t sub_190BCB14C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B5B5C4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CallbackScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190B5B5C4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_190B00CE0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CallbackScope(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_190B00CE0(v4, v5, v6);
  return a1;
}

void sub_190BCB22C()
{
  sub_190ADCE04();
}

void sub_190BCB250()
{
  sub_190AC9344();
}

uint64_t sub_190BCB274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_190BCB8D8(a1, a2, &qword_1EE200750, (uint64_t)&type metadata for RemoteNotificationFetchResult, (void (*)(uint64_t))sub_190AAE55C, (uint64_t (*)(void))sub_190BCBEAC, a3);
}

void sub_190BCB298()
{
  sub_190AC80D8();
}

void sub_190BCB2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14_33();
  OUTLINED_FUNCTION_33_19(v3, &qword_1ED02F270, &qword_1ED02F268, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_69();
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_20_24(v5, &qword_1EE200740);
    v12 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v12 + 16) = v1;
    *(_QWORD *)(v12 + 24) = v2;
    OUTLINED_FUNCTION_6_0();
    v13 = OUTLINED_FUNCTION_74_0();
    MEMORY[0x194015590](v13);
    v14 = OUTLINED_FUNCTION_6_50();
    sub_190AAE55C(v14);
    OUTLINED_FUNCTION_18_30();
    sub_190BE5330();
    v15 = OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_19_29(v15, &qword_1ED02F268);
    v8 = OUTLINED_FUNCTION_12_27();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_1_72();
  OUTLINED_FUNCTION_9_47();
  OUTLINED_FUNCTION_11_33();
  OUTLINED_FUNCTION_10_42(v6);
  if (!v7)
  {
    OUTLINED_FUNCTION_22_28();
    v8 = OUTLINED_FUNCTION_16_32();
LABEL_5:
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
    OUTLINED_FUNCTION_26();
    return;
  }
  __break(1u);
}

void sub_190BCB3E4()
{
  sub_190AC80D8();
}

uint64_t sub_190BCB400()
{
  return sub_190BCB58C();
}

void sub_190BCB41C()
{
  sub_190ADCE04();
}

void sub_190BCB440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14_33();
  OUTLINED_FUNCTION_33_19(v3, &qword_1EE1FEE18, &qword_1EE1FEE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_69();
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_20_24(v5, &qword_1EE1FEE30);
    v12 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v12 + 16) = v1;
    *(_QWORD *)(v12 + 24) = v2;
    OUTLINED_FUNCTION_6_0();
    v13 = OUTLINED_FUNCTION_74_0();
    MEMORY[0x194015590](v13);
    v14 = OUTLINED_FUNCTION_6_50();
    sub_190AAE55C(v14);
    OUTLINED_FUNCTION_18_30();
    sub_190BE5330();
    v15 = OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_19_29(v15, &qword_1EE1FEE10);
    v8 = OUTLINED_FUNCTION_12_27();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_1_72();
  OUTLINED_FUNCTION_9_47();
  OUTLINED_FUNCTION_11_33();
  OUTLINED_FUNCTION_10_42(v6);
  if (!v7)
  {
    OUTLINED_FUNCTION_22_28();
    v8 = OUTLINED_FUNCTION_16_32();
LABEL_5:
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
    OUTLINED_FUNCTION_26();
    return;
  }
  __break(1u);
}

uint64_t sub_190BCB570()
{
  return sub_190BCB58C();
}

uint64_t sub_190BCB58C()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t);
  void (*v2)(uint64_t, _QWORD, uint64_t);
  void (*v3)(_QWORD);
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_15_0();
  v2 = v1;
  v4 = v3;
  v5 = v0;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_2_69();
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    v4(0);
    v14 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v14 + 16) = v9;
    *(_QWORD *)(v14 + 24) = v7;
    OUTLINED_FUNCTION_6_0();
    v15 = OUTLINED_FUNCTION_74_0();
    MEMORY[0x194015590](v15);
    OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_21_25();
    sub_190BE5330();
    OUTLINED_FUNCTION_6_2();
    return 0;
  }
  result = OUTLINED_FUNCTION_7();
  v11 = *(unsigned __int8 *)(v0 + 56);
  if ((_DWORD)v11 != 255)
  {
    v13 = v5 + 40;
    v12 = *(_QWORD *)(v5 + 40);
    v2(v12, *(_QWORD *)(v13 + 8), v11);
    return v12;
  }
  __break(1u);
  return result;
}

void sub_190BCB664()
{
  sub_190AC80D8();
}

void sub_190BCB680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14_33();
  OUTLINED_FUNCTION_33_19(v3, &qword_1EE1FF878, &qword_1EE1FF628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_69();
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    OUTLINED_FUNCTION_20_24(v5, &qword_1EE200728);
    v12 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v12 + 16) = v1;
    *(_QWORD *)(v12 + 24) = v2;
    OUTLINED_FUNCTION_6_0();
    v13 = OUTLINED_FUNCTION_74_0();
    MEMORY[0x194015590](v13);
    v14 = OUTLINED_FUNCTION_6_50();
    sub_190AAE55C(v14);
    OUTLINED_FUNCTION_18_30();
    sub_190BE5330();
    v15 = OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_19_29(v15, &qword_1EE1FF628);
    v8 = OUTLINED_FUNCTION_12_27();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_1_72();
  OUTLINED_FUNCTION_9_47();
  OUTLINED_FUNCTION_11_33();
  OUTLINED_FUNCTION_10_42(v6);
  if (!v7)
  {
    OUTLINED_FUNCTION_22_28();
    v8 = OUTLINED_FUNCTION_16_32();
LABEL_5:
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
    OUTLINED_FUNCTION_26();
    return;
  }
  __break(1u);
}

void sub_190BCB7B0()
{
  sub_190AC9344();
}

uint64_t sub_190BCB7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_2_69();
  if ((*(_BYTE *)(v3 + 24) & 1) != 0)
  {
    result = OUTLINED_FUNCTION_7();
    v8 = *(unsigned __int8 *)(v3 + 56);
    if (v8 == 255)
    {
      __break(1u);
    }
    else
    {
      v9 = *(_QWORD *)(v3 + 40);
      v10 = *(_QWORD *)(v3 + 48);
      *(_QWORD *)a3 = v9;
      *(_QWORD *)(a3 + 8) = v10;
      *(_BYTE *)(a3 + 16) = v8;
      return sub_190B39604(v9, v10, v8);
    }
  }
  else
  {
    sub_190ACF6F0(0, &qword_1EE1FE288, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal.Handler);
    v11 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v11 + 16) = a1;
    *(_QWORD *)(v11 + 24) = a2;
    OUTLINED_FUNCTION_6_0();
    v12 = swift_retain();
    MEMORY[0x194015590](v12);
    v13 = OUTLINED_FUNCTION_6_50();
    sub_190AAE55C(v13);
    OUTLINED_FUNCTION_31_20();
    sub_190BE5330();
    result = OUTLINED_FUNCTION_6_2();
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = -1;
  }
  return result;
}

uint64_t sub_190BCB8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_190BCB8D8(a1, a2, &qword_1EE1FE4C8, (uint64_t)&type metadata for BackgroundFetchResult, (void (*)(uint64_t))sub_190AAE55C, (uint64_t (*)(void))sub_190ADCF0C, a3);
}

uint64_t sub_190BCB8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v12;
  _QWORD *v16;
  uint64_t result;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v12 = v7;
  OUTLINED_FUNCTION_2_69();
  if ((*(_BYTE *)(v7 + 24) & 1) != 0)
  {
    v16 = (_QWORD *)(v7 + 40);
    result = OUTLINED_FUNCTION_1_72();
    v18 = *(unsigned __int8 *)(v12 + 48);
    if (v18 == 255)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)a7 = *v16;
      *(_BYTE *)(a7 + 8) = v18;
      return a6();
    }
  }
  else
  {
    sub_190ACF6F0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal.Handler);
    v19 = OUTLINED_FUNCTION_5();
    *(_QWORD *)(v19 + 16) = a1;
    *(_QWORD *)(v19 + 24) = a2;
    OUTLINED_FUNCTION_6_0();
    v20 = swift_retain();
    MEMORY[0x194015590](v20);
    v21 = OUTLINED_FUNCTION_6_50();
    a5(v21);
    OUTLINED_FUNCTION_31_20();
    sub_190BE5330();
    result = OUTLINED_FUNCTION_6_2();
    *(_QWORD *)a7 = 0;
    *(_BYTE *)(a7 + 8) = -1;
  }
  return result;
}

void sub_190BCB9D0()
{
  sub_190AC9344();
}

void sub_190BCB9F4()
{
  sub_190AC80D8();
}

uint64_t sub_190BCBA10()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190BCBA20(void *a1)
{
  id v2;
  id v3;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v2 = a1;
  sub_190ABC730();
  if (!swift_dynamicCast())
    goto LABEL_6;
  if (v7 != 2 || v5 > 1)
  {
    sub_190B20F48(v5, v6, v7);
LABEL_6:

    v3 = a1;
    goto LABEL_7;
  }

  sub_190BE54A4();
  sub_190ADCAB4((unint64_t *)&qword_1EE1FFD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
  swift_allocError();
  sub_190BE4D84();
LABEL_7:
  sub_190BE5498();
  return sub_190BE5480();
}

uint64_t sub_190BCBB40(void *a1)
{
  OUTLINED_FUNCTION_43_0();
  sub_190BE5498();
  OUTLINED_FUNCTION_24_25();
  return sub_190BCBA20(a1);
}

uint64_t sub_190BCBB90()
{
  sub_190BE54A4();
  sub_190ADCAB4((unint64_t *)&qword_1EE1FFD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
  swift_allocError();
  sub_190BE4D84();
  sub_190ABC730();
  sub_190BE5498();
  return sub_190BE5480();
}

uint64_t sub_190BCBC3C()
{
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_34_19();
  return sub_190BCBB90();
}

void sub_190BCBC8C(uint64_t a1)
{
  sub_190B781F4(a1, &qword_1EE200720, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF120]);
}

void sub_190BCBCA8(uint64_t a1, unint64_t *a2, _QWORD *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_190B28A3C(255, a3, a4);
    v5 = sub_190BE59A8();
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_0();
}

void sub_190BCBCF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EE1FEE40)
  {
    sub_190ACF6F0(255, &qword_1ED032CF0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = type metadata accessor for Seal.Handler(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EE1FEE40);
  }
}

void sub_190BCBD64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_85_0();
  sub_190B28A3C(v0, v1, v2);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0();
}

void sub_190BCBD94(uint64_t a1)
{
  sub_190B781F4(a1, &qword_1ED02F290, (uint64_t (*)(uint64_t))sub_190B1DE20);
}

void sub_190BCBDB0(uint64_t a1)
{
  sub_190B781F4(a1, &qword_1EE200738, (uint64_t (*)(uint64_t))sub_190B399A0);
}

void sub_190BCBDCC(uint64_t a1)
{
  sub_190B781F4(a1, &qword_1EE1FEE38, (uint64_t (*)(uint64_t))sub_190B39B4C);
}

void sub_190BCBDE8(uint64_t a1)
{
  sub_190B781F4(a1, &qword_1ED02F298, (uint64_t (*)(uint64_t))sub_190B39C70);
}

void sub_190BCBE04()
{
  uint64_t v0;
  unint64_t *v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_85_0();
  sub_190BCBCA8(v0, v1, v2, v3);
  OUTLINED_FUNCTION_75(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_0();
}

void sub_190BCBE38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED02F2A8)
  {
    sub_190AC9A30(255, &qword_1ED02EB98, &qword_1ED02EB80, (uint64_t)&type metadata for AnyReference);
    v5 = type metadata accessor for Seal.Handler(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED02F2A8);
  }
}

uint64_t sub_190BCBEB0(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _BYTE v8[40];
  uint64_t v9;
  uint64_t v10;

  a2(&v9);
  sub_190B03F14(a1, (uint64_t)v8);
  v6 = v9;
  if (v9)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, _BYTE *))(a4 + 48))(&v10, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    return v10;
  }
  return v6;
}

void Container.__allocating_init(bundleAssemblies:assemblies:singletonPool:environment:)()
{
  OUTLINED_FUNCTION_13_31();
  OUTLINED_FUNCTION_11_6();
  Container.init(bundleAssemblies:assemblies:singletonPool:environment:)();
  OUTLINED_FUNCTION_9();
}

TeaFoundation::Container::TestSuite_optional __swiftcall Container.TestSuite.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  TeaFoundation::Container::TestSuite_optional result;

  v2 = v1;
  v3 = sub_190BE5EF4();
  swift_bridgeObjectRelease();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_4();
  return result;
}

void *static Container.TestSuite.allCases.getter()
{
  return &unk_1E2CE3088;
}

TeaFoundation::Container::TestSuite_optional sub_190BCBFD0(Swift::String *a1)
{
  return Container.TestSuite.init(rawValue:)(*a1);
}

void sub_190BCBFDC()
{
  sub_190BE2300();
}

uint64_t sub_190BCBFE4()
{
  return sub_190B2B134();
}

void sub_190BCBFEC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E2CE3088;
}

uint64_t Container.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC13TeaFoundation9Container_identifier;
  v4 = OUTLINED_FUNCTION_0_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Container.environment.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC13TeaFoundation9Container_environment);
  result = OUTLINED_FUNCTION_20_0();
  *a1 = *v3;
  return result;
}

uint64_t Container.environment.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC13TeaFoundation9Container_environment);
  result = OUTLINED_FUNCTION_1_6();
  *v3 = v2;
  return result;
}

uint64_t (*Container.environment.modify())()
{
  OUTLINED_FUNCTION_20_0();
  return j__swift_endAccess;
}

void Container.__allocating_init(bundleAssemblies:assemblies:singletonPool:environment:containerLock:)()
{
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_31_6();
  Container.init(bundleAssemblies:assemblies:singletonPool:environment:containerLock:)();
  OUTLINED_FUNCTION_9();
}

uint64_t Container.init(bundleAssemblies:assemblies:singletonPool:environment:containerLock:)()
{
  uint64_t v0;
  char v1;
  uint64_t *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_9_48();
  v11 = v1;
  v12 = *v2;
  sub_190BE4814();
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC13TeaFoundation9Container_environment);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC13TeaFoundation9Container_environment) = 3;
  v4 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13TeaFoundation9Container_definitions) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13TeaFoundation9Container_erasedDefinitions) = v4;
  OUTLINED_FUNCTION_29_21(OBJC_IVAR____TtC13TeaFoundation9Container_lazyRegistrations);
  v5 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_2();
  sub_190AA5514();
  *(_QWORD *)(v5 + 16) = OUTLINED_FUNCTION_7_50();
  OUTLINED_FUNCTION_24_26();
  OUTLINED_FUNCTION_24();
  v6 = OUTLINED_FUNCTION_20_25();
  OUTLINED_FUNCTION_21_26(v6, OBJC_IVAR____TtC13TeaFoundation9Container_containerStore);
  OUTLINED_FUNCTION_24();
  v7 = OUTLINED_FUNCTION_8();
  v8 = sub_190AF96C4(v7);
  OUTLINED_FUNCTION_22_29(v8, OBJC_IVAR____TtC13TeaFoundation9Container_pool);
  v9 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v4;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13TeaFoundation9Container_callbackStore) = v9;
  OUTLINED_FUNCTION_1_6();
  *v3 = v11;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13TeaFoundation9Container_containerLock) = v12;
  OUTLINED_FUNCTION_18_31();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_2();
  return v0;
}

uint64_t sub_190BCC2B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BCC2D4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(*(_QWORD *)(a2 + OBJC_IVAR____TtC13TeaFoundation9Container_callbackStore), a3, a4, v7, v8);
}

void Container.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_71_0(v1);
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_26_19();
  OUTLINED_FUNCTION_25_28();

  OUTLINED_FUNCTION_26_19();
  OUTLINED_FUNCTION_26_19();
  OUTLINED_FUNCTION_0();
}

uint64_t Container.__deallocating_deinit()
{
  Container.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190BCC3F0()
{
  swift_release();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

unint64_t sub_190BCC420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE200760;
  if (!qword_1EE200760)
  {
    sub_190AC5F10(255, &qword_1EE200768, (uint64_t)&type metadata for Container.TestSuite, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE200760);
  }
  return result;
}

uint64_t sub_190BCC478()
{
  return type metadata accessor for Container(0);
}

uint64_t method lookup function for Container()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Container.__allocating_init(bundleAssemblies:assemblies:singletonPool:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of Container.__allocating_init(bundleAssemblies:assemblies:singletonPool:environment:containerLock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for Container.TestSuite(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190BCC4E8 + 4 * byte_190BF03DD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190BCC51C + 4 * byte_190BF03D8[v4]))();
}

uint64_t sub_190BCC51C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BCC524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BCC52CLL);
  return result;
}

uint64_t sub_190BCC538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BCC540);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190BCC544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BCC54C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for Container.Environment(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_190BCC5A8 + 4 * byte_190BF03E2[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for Container.Environment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190BCC650 + 4 * byte_190BF03EC[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190BCC684 + 4 * byte_190BF03E7[v5]))();
}

uint64_t sub_190BCC684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BCC68C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BCC694);
  return result;
}

uint64_t sub_190BCC6A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BCC6A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_190BCC6AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BCC6B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for ContainerWrapper()
{
  return objc_opt_self();
}

_QWORD *sub_190BCC6E0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_190BE4820();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

_QWORD *sub_190BCC77C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190BE4820();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_190BCC7F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_190BE4820();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_190BCC84C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190BE4820();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_190BCC8B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190BCC8C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_0_2();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_190BCC934()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_190BCC940(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_4();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_0_2();
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

void sub_190BCC9A0(uint64_t **a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  sub_190BCCA18(v6, a2, a3);
  v6[4] = v7;
  OUTLINED_FUNCTION_4();
}

void sub_190BCC9EC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_190BCCA18(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;

  v6 = a3 & 0xC000000000000001;
  sub_190B72EF0(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = MEMORY[0x194015F20](a2, a3);
  else
    v7 = swift_retain();
  *a1 = v7;
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190BCCA7C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BCCAD0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_190BCCAFC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  *a2 = sub_190BCBEB0(a1, *(void (**)(uint64_t *__return_ptr))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190BCCB2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_190AD2C9C();
    v2 = v11;
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      v5 = CodingKey.pathSegment.getter();
      v7 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_190AD2C9C();
      v8 = *(_QWORD *)(v11 + 16);
      if (v8 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_190AD2C9C();
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t CodingKey.pathSegment.getter()
{
  char v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_190BE63F8();
  if ((v0 & 1) == 0)
  {
    v6 = 91;
    sub_190BE5FC0();
    OUTLINED_FUNCTION_2_70();
    OUTLINED_FUNCTION_20();
    sub_190BE5114();
    return v6;
  }
  v1 = OUTLINED_FUNCTION_1_73();
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = v1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v6 = 46;
    OUTLINED_FUNCTION_1_73();
    OUTLINED_FUNCTION_2_70();
    OUTLINED_FUNCTION_20();
    return v6;
  }
  return 0;
}

uint64_t Array<A>.path.getter(uint64_t a1)
{
  uint64_t v1;

  sub_190BCCB2C(a1);
  sub_190AFE28C();
  sub_190AD1E54();
  v1 = sub_190BE4F28();
  OUTLINED_FUNCTION_20();
  return v1;
}

uint64_t sub_190BCCD94(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return SyncValue.value.setter((uint64_t)v2);
}

uint64_t SyncValue.value.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v4 = *v1;
  v5 = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 96));
  UnfairLock.lock()();
  v6 = (uint64_t)v2 + *(_QWORD *)(*v2 + 88);
  swift_beginAccess();
  v7 = *(_QWORD *)(v4 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v6, a1, v7);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

void (*SyncValue.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  SyncValue.value.getter();
  return sub_190BCCF2C;
}

void sub_190BCCF2C(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    SyncValue.value.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    SyncValue.value.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t SyncValue.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SyncValue.init(_:)(a1);
  return v2;
}

uint64_t SyncValue.sync(_:)()
{
  swift_retain();
  sub_190ADBEE0((void (*)(void))sub_190BCD1B8);
  return swift_release();
}

uint64_t sub_190BCD04C(uint64_t a1, void (*a2)(_BYTE *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v14[-v9];
  v12 = v8 + *(_QWORD *)(v11 + 88);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v7, v12, v3);
  a2(v7);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 40))(v12, v10, v3);
  return swift_endAccess();
}

uint64_t SyncValue.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_release();
  return v0;
}

uint64_t SyncValue.__deallocating_deinit()
{
  SyncValue.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190BCD1B8()
{
  uint64_t v0;

  return sub_190BCD04C(*(_QWORD *)(v0 + 16), *(void (**)(_BYTE *))(v0 + 24));
}

uint64_t sub_190BCD1C4()
{
  return SyncValue.value.getter();
}

uint64_t sub_190BCD1E8()
{
  return 8;
}

_QWORD *sub_190BCD1F4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for SyncValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncValue.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

BOOL static Scope.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Scope.hash(into:)()
{
  return sub_190BE6308();
}

uint64_t Scope.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

unint64_t sub_190BCD2A4()
{
  unint64_t result;

  result = qword_1EE200770;
  if (!qword_1EE200770)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for Scope, &type metadata for Scope);
    atomic_store(result, (unint64_t *)&qword_1EE200770);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Scope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190BCD32C + 4 * byte_190BF05ED[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190BCD360 + 4 * asc_190BF05E8[v4]))();
}

uint64_t sub_190BCD360(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BCD368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BCD370);
  return result;
}

uint64_t sub_190BCD37C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BCD384);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_190BCD388(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BCD390(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void _TeaJSONDecoder.__allocating_init()()
{
  OUTLINED_FUNCTION_91_0();
  swift_allocObject();
  _TeaJSONDecoder.init()();
  OUTLINED_FUNCTION_0();
}

double sub_190BCD3C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_190AC78B8(a1 + 40 * v2 - 8, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_190BCD3F0(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_20_0();
  *(_QWORD *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_61();
}

void sub_190BCD428()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

void sub_190BCD45C()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

void sub_190BCD490()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

uint64_t static JSONDecoder.KeyDecodingStrategy.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t a1@<X0>, uint64_t *a2@<X8>)@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_5();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *a3 = sub_190BD3E10;
  a3[1] = (void (*)(uint64_t@<X0>, uint64_t *@<X8>))v6;
  v7 = sub_190BE4298();
  OUTLINED_FUNCTION_13_32(v7);
  return OUTLINED_FUNCTION_11_34();
}

void sub_190BCD520(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[4];

  sub_190BCD3C4(a1, (uint64_t)&v10);
  if (v11)
  {
    sub_190AAB5A4(&v10, (uint64_t)v12);
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    v5 = sub_190BE63E0();
    v6 = a2(v5);
    v8 = v7;
    swift_bridgeObjectRelease();
    a3[3] = (uint64_t)&type metadata for _JSONKey;
    a3[4] = sub_190AF1C90();
    v9 = swift_allocObject();
    *a3 = v9;
    *(_QWORD *)(v9 + 16) = v6;
    *(_QWORD *)(v9 + 24) = v8;
    *(_QWORD *)(v9 + 32) = 0;
    *(_BYTE *)(v9 + 40) = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t static _TeaJSONDecoder.KeyDecodingStrategy.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t@<X0>, uint64_t *@<X8>)@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_5();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = OUTLINED_FUNCTION_5();
  *(_QWORD *)(v7 + 16) = sub_190BD3E18;
  *(_QWORD *)(v7 + 24) = v6;
  *a3 = sub_190BD4BB0;
  a3[1] = (void (*)(uint64_t@<X0>, uint64_t *@<X8>))v7;
  v8 = sub_190BE4298();
  OUTLINED_FUNCTION_13_32(v8);
  return OUTLINED_FUNCTION_11_34();
}

uint64_t sub_190BCD674(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_190BE7CD0;
  *(_QWORD *)(v6 + 56) = &type metadata for _JSONKey;
  *(_QWORD *)(v6 + 64) = sub_190AF1C90();
  v7 = swift_allocObject();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = 0;
  *(_BYTE *)(v7 + 40) = 1;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  a3(v10, v6);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  v8 = sub_190BE63E0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

void sub_190BCD780()
{
  uint64_t v0;

  v0 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190BCD3F0(v0);
}

double sub_190BCD7A8@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;
  __int128 v4;
  char v5;

  sub_190AFCA90((uint64_t)&v4);
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v2;
  return result;
}

void sub_190BCD7E8(uint64_t a1)
{
  void *v1;
  char v2;
  id v3[2];
  char v4;

  v1 = *(void **)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v3[0] = *(id *)a1;
  v3[1] = v1;
  v4 = v2;
  sub_190AEA4F0(v3[0], (uint64_t)v1, v2);
  sub_190AAE3B4((uint64_t *)v3);
}

double sub_190BCD830@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_190AFCCB0((uint64_t *)&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

void sub_190BCD868(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2[2];

  v1 = a1[1];
  v2[0] = *a1;
  v2[1] = v1;
  sub_190AFCCE8(v2[0]);
  sub_190AB9898(v2);
}

unint64_t sub_190BCD8B8@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  _QWORD v23[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v5) = 1;
LABEL_46:
    *a3 = v7;
    a3[1] = v5;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B0E374();
    v9 = v22;
    result = swift_bridgeObjectRelease();
    LODWORD(v5) = (v9 >> 8) & 1;
    goto LABEL_43;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    result = (unint64_t)sub_190B0E020(v8, v6);
    LOBYTE(v9) = result;
    LODWORD(v5) = (result >> 8) & 1;
    goto LABEL_43;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      if (v5 != 1)
      {
        v9 = (result >> 8) - 48;
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_38;
        if (v5 != 2)
        {
          if ((BYTE2(result) - 48) > 9u)
            goto LABEL_38;
          v9 = (result >> 16) - 48 + 10 * v9;
          v14 = v5 - 3;
          if (v5 != 3)
          {
            v15 = (unsigned __int8 *)v23 + 3;
            while (1)
            {
              v16 = *v15 - 48;
              if (v16 > 9)
                goto LABEL_38;
              v17 = (char)(10 * v9);
              if (v17 != 10 * (char)v9)
                goto LABEL_38;
              v9 = v17 + (char)v16;
              if ((char)(v17 + v16) != v9)
                goto LABEL_38;
              LODWORD(v5) = 0;
              ++v15;
              if (!--v14)
                goto LABEL_43;
            }
          }
        }
        goto LABEL_42;
      }
      goto LABEL_56;
    }
  }
  else
  {
    if (result != 45)
    {
      if (!v5)
        goto LABEL_38;
      v9 = result - 48;
      if ((result - 48) > 9u)
        goto LABEL_38;
      if (v5 != 1)
      {
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_38;
        v9 = (result >> 8) - 48 + 10 * v9;
        v18 = v5 - 2;
        if (v5 != 2)
        {
          v19 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            v20 = *v19 - 48;
            if (v20 > 9)
              goto LABEL_38;
            v21 = (char)(10 * v9);
            if (v21 != 10 * (char)v9)
              goto LABEL_38;
            v9 = v21 + (char)v20;
            if ((char)(v21 + v20) != v9)
              goto LABEL_38;
            LODWORD(v5) = 0;
            ++v19;
            if (!--v18)
              goto LABEL_43;
          }
        }
      }
      goto LABEL_42;
    }
    if (v5)
    {
      if (v5 != 1)
      {
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_38;
        v9 = 48 - (result >> 8);
        if (v5 != 2)
        {
          if ((BYTE2(result) - 48) <= 9u)
          {
            v9 = 10 * v9 - ((result >> 16) - 48);
            v10 = v5 - 3;
            if (v5 != 3)
            {
              v11 = (unsigned __int8 *)v23 + 3;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_38;
                v13 = (char)(10 * v9);
                if (v13 != 10 * (char)v9)
                  goto LABEL_38;
                v9 = v13 - (char)v12;
                if ((char)(v13 - v12) != v9)
                  goto LABEL_38;
                LODWORD(v5) = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_43;
              }
            }
            goto LABEL_42;
          }
LABEL_38:
          LOBYTE(v9) = 0;
          LODWORD(v5) = 1;
          goto LABEL_43;
        }
LABEL_42:
        LODWORD(v5) = 0;
        goto LABEL_43;
      }
LABEL_56:
      LOBYTE(v9) = 0;
LABEL_43:
      if ((_DWORD)v5)
        LOBYTE(v7) = 0;
      else
        LOBYTE(v7) = v9;
      goto LABEL_46;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190BCDBA0@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  _QWORD v24[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v5) = 1;
LABEL_47:
    *(_WORD *)a3 = v7;
    *(_BYTE *)(a3 + 2) = v5;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B0E380();
    v9 = v23;
    result = swift_bridgeObjectRelease();
    LODWORD(v5) = HIWORD(v9) & 1;
    goto LABEL_44;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    result = (uint64_t)sub_190B0E034(v8, v6);
    LOWORD(v9) = result;
    LODWORD(v5) = WORD1(result) & 1;
    goto LABEL_44;
  }
  v24[0] = result;
  v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_59;
    if (v5 == 1)
    {
LABEL_57:
      LOWORD(v9) = 0;
LABEL_44:
      if ((_DWORD)v5)
        LOWORD(v7) = 0;
      else
        LOWORD(v7) = v9;
      goto LABEL_47;
    }
    v9 = (BYTE1(result) - 48);
    if (v9 > 9)
      goto LABEL_31;
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_31;
      LOWORD(v9) = 10 * v9 + (BYTE2(result) - 48);
      v11 = v5 - 3;
      if (v5 != 3)
      {
        v12 = (unsigned __int8 *)v24 + 3;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            goto LABEL_31;
          v14 = (__int16)(10 * v9);
          if (v14 != 10 * (__int16)v9)
            goto LABEL_31;
          v9 = v14 + v13;
          if ((__int16)(v14 + v13) != v9)
            goto LABEL_31;
          LODWORD(v5) = 0;
          ++v12;
          if (!--v11)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    LODWORD(v5) = 0;
    goto LABEL_44;
  }
  if (result != 45)
  {
    if (!v5)
      goto LABEL_31;
    v9 = (result - 48);
    if (v9 > 9)
      goto LABEL_31;
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      LOWORD(v9) = 10 * v9 + (BYTE1(result) - 48);
      v15 = v5 - 2;
      if (v5 != 2)
      {
        v16 = (unsigned __int8 *)v24 + 2;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_31;
          v18 = (__int16)(10 * v9);
          if (v18 != 10 * (__int16)v9)
            goto LABEL_31;
          v9 = v18 + v17;
          if ((__int16)(v18 + v17) != v9)
            goto LABEL_31;
          LODWORD(v5) = 0;
          ++v16;
          if (!--v15)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      v10 = (BYTE1(result) - 48);
      if (v10 <= 9)
      {
        if (v5 == 2)
        {
          LODWORD(v5) = 0;
          v9 = -(BYTE1(result) - 48);
          goto LABEL_44;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          LOWORD(v9) = -10 * v10 - (BYTE2(result) - 48);
          v19 = v5 - 3;
          if (v5 == 3)
            goto LABEL_43;
          v20 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            v21 = *v20 - 48;
            if (v21 > 9)
              break;
            v22 = (__int16)(10 * v9);
            if (v22 != 10 * (__int16)v9)
              break;
            v9 = v22 - v21;
            if ((__int16)(v22 - v21) != v9)
              break;
            LODWORD(v5) = 0;
            ++v20;
            if (!--v19)
              goto LABEL_44;
          }
        }
      }
LABEL_31:
      LOWORD(v9) = 0;
      LODWORD(v5) = 1;
      goto LABEL_44;
    }
    goto LABEL_57;
  }
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

void sub_190BCDE90()
{
  void (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_0_74();
  OUTLINED_FUNCTION_3_64(v0, v1, v2, (uint64_t)&v3);
  OUTLINED_FUNCTION_16_33();
}

unint64_t sub_190BCDEBC@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  _QWORD v20[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v5) = 1;
LABEL_51:
    *a3 = v7;
    a3[1] = v5;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B0E450();
    v9 = v19;
    result = swift_bridgeObjectRelease();
    LODWORD(v5) = (v9 >> 8) & 1;
    goto LABEL_48;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    result = (unint64_t)sub_190B0E070(v8, v6);
    LOBYTE(v9) = result;
    LODWORD(v5) = (result >> 8) & 1;
    goto LABEL_48;
  }
  v20[0] = result;
  v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_63;
    if (v5 == 1)
    {
LABEL_61:
      LOBYTE(v9) = 0;
LABEL_48:
      if ((_DWORD)v5)
        LOBYTE(v7) = 0;
      else
        LOBYTE(v7) = v9;
      goto LABEL_51;
    }
    v9 = (result >> 8) - 48;
    if ((BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v9 = (result >> 16) - 48 + 10 * v9;
      v10 = v5 - 3;
      if (v5 != 3)
      {
        v11 = (unsigned __int8 *)v20 + 3;
        while (1)
        {
          v12 = *v11 - 48;
          if (v12 > 9)
            goto LABEL_32;
          if (((10 * v9) & 0xF00) != 0)
            goto LABEL_32;
          v9 = (10 * v9) + v12;
          if (((v9 >> 8) & 1) != 0)
            goto LABEL_32;
          LODWORD(v5) = 0;
          ++v11;
          if (!--v10)
            goto LABEL_48;
        }
      }
    }
LABEL_47:
    LODWORD(v5) = 0;
    goto LABEL_48;
  }
  if (result != 45)
  {
    if (!v5)
      goto LABEL_32;
    v9 = result - 48;
    if ((result - 48) > 9u)
      goto LABEL_32;
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v9 = (result >> 8) - 48 + 10 * v9;
      v13 = v5 - 2;
      if (v5 != 2)
      {
        v14 = (unsigned __int8 *)v20 + 2;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            goto LABEL_32;
          if (((10 * v9) & 0xF00) != 0)
            goto LABEL_32;
          v9 = (10 * v9) + v15;
          if (((v9 >> 8) & 1) != 0)
            goto LABEL_32;
          LODWORD(v5) = 0;
          ++v14;
          if (!--v13)
            goto LABEL_48;
        }
      }
    }
    goto LABEL_47;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) <= 9u)
      {
        LOBYTE(v9) = 0;
        if ((-(BYTE1(result) - 48) & 0xFFFFFF00) != 0)
        {
LABEL_33:
          LODWORD(v5) = 1;
          goto LABEL_48;
        }
        if (v5 == 2)
        {
          LODWORD(v5) = 0;
          LOBYTE(v9) = 48 - BYTE1(result);
          goto LABEL_48;
        }
        if ((BYTE2(result) - 48) <= 9u && ((10 * (48 - BYTE1(result))) & 0xF00) == 0)
        {
          v9 = (10 * (48 - BYTE1(result))) - (BYTE2(result) - 48);
          if ((v9 & 0xFFFFFF00) == 0)
          {
            v16 = v5 - 3;
            if (v5 == 3)
              goto LABEL_47;
            v17 = (unsigned __int8 *)v20 + 3;
            while (1)
            {
              v18 = *v17 - 48;
              if (v18 > 9)
                break;
              if (((10 * v9) & 0xF00) != 0)
                break;
              v9 = (10 * v9) - v18;
              if ((v9 & 0xFFFFFF00) != 0)
                break;
              LODWORD(v5) = 0;
              ++v17;
              if (!--v16)
                goto LABEL_48;
            }
          }
        }
      }
LABEL_32:
      LOBYTE(v9) = 0;
      goto LABEL_33;
    }
    goto LABEL_61;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

void sub_190BCE1DC()
{
  void (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  OUTLINED_FUNCTION_0_74();
  OUTLINED_FUNCTION_3_64(v0, v1, v2, (uint64_t)&v3);
  OUTLINED_FUNCTION_16_33();
}

uint64_t sub_190BCE208@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  _QWORD v20[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v5) = 1;
LABEL_51:
    *(_WORD *)a3 = v7;
    *(_BYTE *)(a3 + 2) = v5;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190B0E4EC();
    v9 = v19;
    result = swift_bridgeObjectRelease();
    LODWORD(v5) = HIWORD(v9) & 1;
    goto LABEL_48;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    result = (uint64_t)sub_190B0E084(v8, v6);
    LOWORD(v9) = result;
    LODWORD(v5) = WORD1(result) & 1;
    goto LABEL_48;
  }
  v20[0] = result;
  v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_63;
    if (v5 == 1)
    {
LABEL_61:
      LOWORD(v9) = 0;
LABEL_48:
      if ((_DWORD)v5)
        LOWORD(v7) = 0;
      else
        LOWORD(v7) = v9;
      goto LABEL_51;
    }
    v9 = (BYTE1(result) - 48);
    if (v9 > 9)
      goto LABEL_32;
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      LOWORD(v9) = 10 * v9 + (BYTE2(result) - 48);
      v10 = v5 - 3;
      if (v5 != 3)
      {
        v11 = (unsigned __int8 *)v20 + 3;
        while (1)
        {
          v12 = *v11 - 48;
          if (v12 > 9)
            goto LABEL_32;
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0)
            goto LABEL_32;
          v9 = (unsigned __int16)(10 * v9) + v12;
          if ((v9 & 0x10000) != 0)
            goto LABEL_32;
          LODWORD(v5) = 0;
          ++v11;
          if (!--v10)
            goto LABEL_48;
        }
      }
    }
LABEL_47:
    LODWORD(v5) = 0;
    goto LABEL_48;
  }
  if (result != 45)
  {
    if (!v5)
      goto LABEL_32;
    v9 = (result - 48);
    if (v9 > 9)
      goto LABEL_32;
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      LOWORD(v9) = 10 * v9 + (BYTE1(result) - 48);
      v13 = v5 - 2;
      if (v5 != 2)
      {
        v14 = (unsigned __int8 *)v20 + 2;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            goto LABEL_32;
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0)
            goto LABEL_32;
          v9 = (unsigned __int16)(10 * v9) + v15;
          if ((v9 & 0x10000) != 0)
            goto LABEL_32;
          LODWORD(v5) = 0;
          ++v14;
          if (!--v13)
            goto LABEL_48;
        }
      }
    }
    goto LABEL_47;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) <= 9u)
      {
        LOWORD(v9) = 0;
        if ((-(BYTE1(result) - 48) & 0xFFFF0000) != 0)
        {
LABEL_33:
          LODWORD(v5) = 1;
          goto LABEL_48;
        }
        if (v5 == 2)
        {
          LODWORD(v5) = 0;
          LOWORD(v9) = -(BYTE1(result) - 48);
          goto LABEL_48;
        }
        if ((BYTE2(result) - 48) <= 9u
          && ((10 * (unsigned __int16)-(BYTE1(result) - 48)) & 0xF0000) == 0)
        {
          v9 = (unsigned __int16)(-10 * (BYTE1(result) - 48)) - (BYTE2(result) - 48);
          if ((v9 & 0xFFFF0000) == 0)
          {
            v16 = v5 - 3;
            if (v5 == 3)
              goto LABEL_47;
            v17 = (unsigned __int8 *)v20 + 3;
            while (1)
            {
              v18 = *v17 - 48;
              if (v18 > 9)
                break;
              if (((10 * (unsigned __int16)v9) & 0xF0000) != 0)
                break;
              v9 = (unsigned __int16)(10 * v9) - v18;
              if ((v9 & 0xFFFF0000) != 0)
                break;
              LODWORD(v5) = 0;
              ++v17;
              if (!--v16)
                goto LABEL_48;
            }
          }
        }
      }
LABEL_32:
      LOWORD(v9) = 0;
      goto LABEL_33;
    }
    goto LABEL_61;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

unint64_t sub_190BCE530@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned __int8 *v9;
  unsigned __int8 v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  char v29;

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v5) = 1;
LABEL_53:
    *(_DWORD *)a3 = v7;
    *(_BYTE *)(a3 + 4) = v5;
    return result;
  }
  v8 = result;
  if ((a2 & 0x1000000000000000) != 0)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v27 = sub_190B0E584();
    swift_bridgeObjectRelease();
    v5 = HIDWORD(v27) & 1;
    result = v27;
LABEL_50:
    if ((_DWORD)v5)
      LODWORD(v7) = 0;
    else
      LODWORD(v7) = result;
    goto LABEL_53;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v9 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v9 = (unsigned __int8 *)sub_190BE5CFC();
    result = (unint64_t)sub_190B0E098(v9, v6);
    v29 = BYTE4(result) & 1;
    LOBYTE(v5) = BYTE4(result) & 1;
    goto LABEL_49;
  }
  v28[0] = result;
  v28[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_65;
    if (v5 == 1)
      goto LABEL_63;
    result = (BYTE1(result) - 48);
    if (result > 9)
      goto LABEL_33;
    if (v5 != 2)
    {
      if ((BYTE2(v8) - 48) > 9u)
        goto LABEL_33;
      result = 10 * (_DWORD)result + (BYTE2(v8) - 48);
      v13 = v5 - 3;
      if (v5 != 3)
      {
        v14 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            goto LABEL_33;
          v16 = 10 * result;
          if ((v16 & 0xFFFFFFFF00000000) != 0)
            goto LABEL_33;
          result = v16 + v15;
          if (__CFADD__((_DWORD)v16, v15))
            goto LABEL_33;
          LOBYTE(v5) = 0;
          ++v14;
          if (!--v13)
            goto LABEL_49;
        }
      }
    }
LABEL_48:
    LOBYTE(v5) = 0;
    goto LABEL_49;
  }
  if (result != 45)
  {
    if (!v5)
      goto LABEL_33;
    result = (result - 48);
    if (result > 9)
      goto LABEL_33;
    if (v5 != 1)
    {
      if ((BYTE1(v8) - 48) > 9u)
        goto LABEL_33;
      result = 10 * (_DWORD)result + (BYTE1(v8) - 48);
      v17 = v5 - 2;
      if (v5 != 2)
      {
        v18 = (unsigned __int8 *)v28 + 2;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_33;
          v20 = 10 * result;
          if ((v20 & 0xFFFFFFFF00000000) != 0)
            goto LABEL_33;
          result = v20 + v19;
          if (__CFADD__((_DWORD)v20, v19))
            goto LABEL_33;
          LOBYTE(v5) = 0;
          ++v18;
          if (!--v17)
            goto LABEL_49;
        }
      }
    }
    goto LABEL_48;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      v10 = BYTE1(result) - 48;
      if ((BYTE1(result) - 48) <= 9u)
      {
        result = 0;
        v11 = v10 == 0;
        v12 = -v10;
        if (!v11)
          goto LABEL_34;
        if (v5 == 2)
        {
          LOBYTE(v5) = 0;
          result = v12;
LABEL_49:
          LODWORD(v5) = v5 & 1;
          goto LABEL_50;
        }
        v21 = BYTE2(v8) - 48;
        if ((BYTE2(v8) - 48) <= 9u)
        {
          v22 = 10 * v12;
          if ((v22 & 0xFFFFFFFF00000000) == 0)
          {
            result = v22 - v21;
            if (v22 >= v21)
            {
              v23 = v5 - 3;
              if (v5 == 3)
                goto LABEL_48;
              v24 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                v25 = *v24 - 48;
                if (v25 > 9)
                  break;
                v26 = 10 * result;
                if ((v26 & 0xFFFFFFFF00000000) != 0)
                  break;
                result = v26 - v25;
                if (v26 < v25)
                  break;
                LOBYTE(v5) = 0;
                ++v24;
                if (!--v23)
                  goto LABEL_49;
              }
            }
          }
        }
      }
LABEL_33:
      result = 0;
LABEL_34:
      LOBYTE(v5) = 1;
      goto LABEL_49;
    }
LABEL_63:
    result = 0;
    goto LABEL_49;
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

id sub_190BCE808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id result;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = *(void **)(v3 + 16);
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(_BYTE *)(v3 + 32);
  v12 = *(_QWORD *)(v3 + 40);
  result = (id)sub_190AEA510(a1, a2, &v27);
  if (!v4)
  {
    v26 = v10;
    if (v27 >> 61 == 1)
    {
      v14 = *(_QWORD *)(v27 + 16);
      v25 = v27;
      sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_190BE7CD0;
      v16 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(inited + 56) = v16;
      *(_QWORD *)(inited + 64) = *(_QWORD *)(a2 + 24);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_0, a1, v16);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v18 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AEAB18(v18);
      sub_190AED454(v25);
      swift_setDeallocating();
      sub_190B4BF80();
      a3[3] = (uint64_t)&type metadata for JSONUnkeyedDecodingContainer;
      a3[4] = sub_190AD0C88();
      v19 = swift_allocObject();
      *a3 = v19;
      *(_QWORD *)(v19 + 16) = v14;
      *(_QWORD *)(v19 + 24) = v8;
      *(_QWORD *)(v19 + 32) = v9;
      *(_QWORD *)(v19 + 40) = v26;
      *(_BYTE *)(v19 + 48) = v11;
      *(_QWORD *)(v19 + 56) = v12;
      *(_QWORD *)(v19 + 64) = 0;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      return sub_190AEA4F0(v9, v26, v11);
    }
    else
    {
      v20 = v27;
      sub_190AD166C();
      swift_allocError();
      v22 = v21;
      *v21 = v12;
      v23 = *(_QWORD *)(a2 + 16);
      v21[4] = v23;
      v21[5] = *(_QWORD *)(a2 + 24);
      v24 = __swift_allocate_boxed_opaque_existential_0(v21 + 1);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, a1, v23);
      v22[6] = 0x7961727261;
      v22[7] = 0xE500000000000000;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AD16A8(v20);
      v22[8] = 0;
      v22[9] = 0xE000000000000000;
      *((_BYTE *)v22 + 80) = 11;
      swift_willThrow();
      return (id)sub_190AED454(v20);
    }
  }
  return result;
}

id sub_190BCEA70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  void *v14;

  v3 = *v1;
  v4 = v1[1];
  v14 = (void *)v1[2];
  v13 = v1[3];
  v5 = *((_BYTE *)v1 + 32);
  v6 = v1[5];
  if (qword_1EE1FEF68 != -1)
    swift_once();
  v7 = 0x8000000000000010;
  __swift_project_boxed_opaque_existential_1(qword_1EE200778, qword_1EE200790);
  sub_190BE63E0();
  if (*(_QWORD *)(v3 + 16))
  {
    v8 = sub_190AEABD0();
    if ((v9 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v8);
      sub_190AEA618(v7);
    }
  }
  swift_bridgeObjectRelease();
  sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BE7CD0;
  sub_190AC78B8((uint64_t)qword_1EE200778, inited + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AEAB18(inited);
  a1[3] = (uint64_t)&type metadata for _JSONDecoder;
  a1[4] = sub_190AEA728();
  v11 = swift_allocObject();
  *a1 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 32) = v13;
  *(_BYTE *)(v11 + 40) = v5;
  *(_QWORD *)(v11 + 48) = v6;
  *(_QWORD *)(v11 + 56) = v4;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return sub_190AEA4F0(v14, v13, v5);
}

id sub_190BCEC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v15;
  char v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;

  v20 = 0x8000000000000010;
  v6 = *v3;
  v7 = v3[1];
  v18 = v3[3];
  v19 = (void *)v3[2];
  v17 = *((_BYTE *)v3 + 32);
  v8 = v3[5];
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  sub_190BE63E0();
  if (*(_QWORD *)(v6 + 16))
  {
    v11 = sub_190AEABD0();
    if ((v12 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v11);
      sub_190AEA618(v20);
    }
  }
  swift_bridgeObjectRelease();
  sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BE7CD0;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 64) = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a1, v10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AEAB18(inited);
  a3[3] = (uint64_t)&type metadata for _JSONDecoder;
  a3[4] = sub_190AEA728();
  v15 = swift_allocObject();
  *a3 = v15;
  *(_QWORD *)(v15 + 16) = v20;
  *(_QWORD *)(v15 + 24) = v19;
  *(_QWORD *)(v15 + 32) = v18;
  *(_BYTE *)(v15 + 40) = v17;
  *(_QWORD *)(v15 + 48) = v8;
  *(_QWORD *)(v15 + 56) = v7;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return sub_190AEA4F0(v19, v18, v17);
}

void sub_190BCEDA8()
{
  sub_190BCDE90();
}

void sub_190BCEDCC()
{
  sub_190BCE1DC();
}

unint64_t sub_190BCEDF0()
{
  return sub_190ABA670();
}

uint64_t sub_190BCEE14()
{
  return sub_190BE6200();
}

void sub_190BCEE28()
{
  sub_190BCDE90();
}

void sub_190BCEE4C()
{
  sub_190BCE1DC();
}

void sub_190BCEE70()
{
  sub_190ABA620();
}

unint64_t sub_190BCEE94()
{
  return sub_190ABA670();
}

uint64_t sub_190BCEEB8()
{
  return sub_190BE620C();
}

uint64_t sub_190BCEECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190AA67A4(a1, a2, a3, MEMORY[0x1E0DED7E8]);
}

void sub_190BCEEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190BCEF78(a1, a2, a3, MEMORY[0x1E0DED808]);
}

void sub_190BCEF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190BCEFB4(a1, a2, a3, MEMORY[0x1E0DED810]);
}

uint64_t sub_190BCEF20()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190BE61E8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_190BCEF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190BCF02C(a1, a2, a3, MEMORY[0x1E0DED830]);
}

void sub_190BCEF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190BCEF78(a1, a2, a3, MEMORY[0x1E0DED828]);
}

void sub_190BCEF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  __int16 v4;

  v4 = a4();
  OUTLINED_FUNCTION_32_19(v4 & 0x1FF);
  OUTLINED_FUNCTION_40_0();
}

void sub_190BCEF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190BCEFB4(a1, a2, a3, MEMORY[0x1E0DED838]);
}

void sub_190BCEFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;

  v4 = a4();
  OUTLINED_FUNCTION_32_19(v4 & 0x1FFFF);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BCEFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190AA67A4(a1, a2, a3, MEMORY[0x1E0DED840]);
}

uint64_t sub_190BCEFF0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190BE61F4();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_190BCF010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190BCF02C(a1, a2, a3, MEMORY[0x1E0DED850]);
}

uint64_t sub_190BCF02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

id sub_190BCF050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_190BCE808(a1, a2, a3);
}

id sub_190BCF064@<X0>(uint64_t *a1@<X8>)
{
  return sub_190BCEA70(a1);
}

id sub_190BCF078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_190BCEC18(a1, a2, a3);
}

BOOL sub_190BCF08C()
{
  uint64_t v0;
  BOOL v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v5;

  sub_190AF1CCC(&v5);
  if (!v0)
  {
    v2 = v5;
    v3 = 0x8000000000000010;
    v1 = v5 == 0x8000000000000010;
    if (v5 != 0x8000000000000010)
    {
      sub_190AEA618(v5);
      v3 = v2;
    }
    sub_190AED454(v3);
    sub_190AED454(0x8000000000000010);
    sub_190AED454(v3);
  }
  return v1;
}

void sub_190BCF118()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_190AF1CCC(&v12);
  if (!v1)
  {
    v2 = v12;
    if (v12 >> 61 != 4 || v12 != 0x8000000000000000 && v12 != 0x8000000000000008)
    {
      v3 = *(_QWORD *)(v0 + 48);
      v4 = __OFSUB__(v3, 1);
      v5 = v3 - 1;
      if (v4)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v0 + 48) = v5;
        sub_190AD166C();
        swift_allocError();
        v7 = v6;
        v8 = *(_QWORD *)(v0 + 40);
        v9 = *(_QWORD *)(v0 + 48);
        v12 = 0;
        v13 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v2);
        v10 = v12;
        v11 = v13;
        *(_QWORD *)v7 = v8;
        *(_QWORD *)(v7 + 8) = v9;
        *(_QWORD *)(v7 + 16) = 0x6E61656C6F6F62;
        *(_QWORD *)(v7 + 24) = 0xE700000000000000;
        *(_QWORD *)(v7 + 32) = v10;
        *(_QWORD *)(v7 + 40) = v11;
        *(_BYTE *)(v7 + 80) = 12;
        swift_willThrow();
        sub_190AED454(v2);
      }
    }
  }
}

void sub_190BCF230()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_190AF1CCC(&v12);
  if (!v1)
  {
    v2 = v12;
    if (v12 >> 61 == 2)
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AED454(v2);
    }
    else
    {
      v3 = *(_QWORD *)(v0 + 48);
      v4 = __OFSUB__(v3, 1);
      v5 = v3 - 1;
      if (v4)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v0 + 48) = v5;
        sub_190AD166C();
        swift_allocError();
        v7 = v6;
        v8 = *(_QWORD *)(v0 + 40);
        v9 = *(_QWORD *)(v0 + 48);
        v12 = 0;
        v13 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v2);
        v10 = v12;
        v11 = v13;
        *(_QWORD *)v7 = v8;
        *(_QWORD *)(v7 + 8) = v9;
        *(_QWORD *)(v7 + 16) = 0x676E69727473;
        *(_QWORD *)(v7 + 24) = 0xE600000000000000;
        *(_QWORD *)(v7 + 32) = v10;
        *(_QWORD *)(v7 + 40) = v11;
        *(_BYTE *)(v7 + 80) = 12;
        swift_willThrow();
        sub_190AED454(v2);
      }
    }
  }
}

void sub_190BCF334()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  sub_190AF1CCC(&v16);
  if (!v1)
  {
    v2 = v16;
    if (v16 >> 61 == 3)
    {
      v4 = *(_QWORD *)(v16 + 16);
      v3 = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain_n();
      sub_190AC5A10(v4, v3);
      if ((v5 & 1) == 0)
      {
        sub_190AED454(v2);
        swift_bridgeObjectRelease();
        return;
      }
      sub_190AD166C();
      swift_allocError();
      *(_QWORD *)v15 = *(_QWORD *)(v0 + 40);
      *(_QWORD *)(v15 + 8) = v4;
      *(_QWORD *)(v15 + 16) = v3;
      *(_BYTE *)(v15 + 80) = 13;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 48);
      v7 = __OFSUB__(v6, 1);
      v8 = v6 - 1;
      if (v7)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v0 + 48) = v8;
      sub_190AD166C();
      swift_allocError();
      v10 = v9;
      v11 = *(_QWORD *)(v0 + 40);
      v12 = *(_QWORD *)(v0 + 48);
      v16 = 0;
      v17 = 0xE000000000000000;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AD16A8(v2);
      v13 = v16;
      v14 = v17;
      *(_QWORD *)v10 = v11;
      *(_QWORD *)(v10 + 8) = v12;
      *(_QWORD *)(v10 + 16) = 0x7265626D756ELL;
      *(_QWORD *)(v10 + 24) = 0xE600000000000000;
      *(_QWORD *)(v10 + 32) = v13;
      *(_QWORD *)(v10 + 40) = v14;
      *(_BYTE *)(v10 + 80) = 12;
    }
    swift_willThrow();
    sub_190AED454(v2);
  }
}

void sub_190BCF490()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  sub_190AF1CCC(&v15);
  if (!v1)
  {
    v2 = v15;
    if (v15 >> 61 == 3)
    {
      v4 = *(_QWORD *)(v15 + 16);
      v3 = *(_QWORD *)(v15 + 24);
      swift_bridgeObjectRetain_n();
      if ((sub_190AB08A4(v4, v3) & 0x100000000) == 0)
      {
        sub_190AED454(v2);
        swift_bridgeObjectRelease();
        return;
      }
      sub_190AD166C();
      swift_allocError();
      *(_QWORD *)v14 = *(_QWORD *)(v0 + 40);
      *(_QWORD *)(v14 + 8) = v4;
      *(_QWORD *)(v14 + 16) = v3;
      *(_BYTE *)(v14 + 80) = 13;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
    else
    {
      v5 = *(_QWORD *)(v0 + 48);
      v6 = __OFSUB__(v5, 1);
      v7 = v5 - 1;
      if (v6)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v0 + 48) = v7;
      sub_190AD166C();
      swift_allocError();
      v9 = v8;
      v10 = *(_QWORD *)(v0 + 40);
      v11 = *(_QWORD *)(v0 + 48);
      v15 = 0;
      v16 = 0xE000000000000000;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AD16A8(v2);
      v12 = v15;
      v13 = v16;
      *(_QWORD *)v9 = v10;
      *(_QWORD *)(v9 + 8) = v11;
      *(_QWORD *)(v9 + 16) = 0x7265626D756ELL;
      *(_QWORD *)(v9 + 24) = 0xE600000000000000;
      *(_QWORD *)(v9 + 32) = v12;
      *(_QWORD *)(v9 + 40) = v13;
      *(_BYTE *)(v9 + 80) = 12;
    }
    swift_willThrow();
    sub_190AED454(v2);
  }
}

void sub_190BCF5EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  sub_190AF1CCC(&v38);
  if (!v1)
  {
    v4 = v38;
    if (v38 >> 61 != 3)
    {
      v11 = *(_QWORD *)(v0 + 48);
      v12 = __OFSUB__(v11, 1);
      v13 = v11 - 1;
      if (!v12)
      {
        *(_QWORD *)(v0 + 48) = v13;
        sub_190AD166C();
        swift_allocError();
        v15 = v14;
        v16 = *(_QWORD *)(v0 + 40);
        v17 = *(_QWORD *)(v0 + 48);
        v38 = 0;
        v39 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v4);
        v18 = v38;
        v19 = v39;
        *(_QWORD *)v15 = v16;
        *(_QWORD *)(v15 + 8) = v17;
        *(_QWORD *)(v15 + 16) = 0x7265626D756ELL;
        *(_QWORD *)(v15 + 24) = 0xE600000000000000;
        *(_QWORD *)(v15 + 32) = v18;
        *(_QWORD *)(v15 + 40) = v19;
        *(_BYTE *)(v15 + 80) = 12;
LABEL_59:
        swift_willThrow();
        sub_190AED454(v4);
        return;
      }
      __break(1u);
      goto LABEL_62;
    }
    v3 = *(_QWORD *)(v38 + 16);
    v2 = *(_QWORD *)(v38 + 24);
    v5 = HIBYTE(v2) & 0xF;
    v6 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v2) & 0xF;
    else
      v7 = v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      if ((v2 & 0x1000000000000000) == 0)
      {
        if ((v2 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v8 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_11:
            sub_190ABC798(v8, v6);
            v10 = v9 & 1;
            goto LABEL_48;
          }
LABEL_62:
          v8 = (unsigned __int8 *)sub_190BE5CFC();
          goto LABEL_11;
        }
        v38 = *(_QWORD *)(v38 + 16);
        v39 = v2 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (!v5)
            goto LABEL_64;
          if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
            goto LABEL_35;
          if (v5 != 2)
          {
            if ((BYTE2(v3) - 48) > 9u)
              goto LABEL_35;
            v20 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
            v21 = v5 - 3;
            if (v21)
            {
              v22 = (unsigned __int8 *)&v38 + 3;
              while (1)
              {
                v23 = *v22 - 48;
                if (v23 > 9)
                  goto LABEL_35;
                v24 = 10 * v20;
                if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
                  goto LABEL_35;
                v20 = v24 + v23;
                if (__OFADD__(v24, v23))
                  goto LABEL_35;
                v10 = 0;
                ++v22;
                if (!--v21)
                  goto LABEL_48;
              }
            }
          }
        }
        else
        {
          if (v3 == 45)
          {
            if (v5)
            {
              if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
              {
                if (v5 == 2)
                {
                  v10 = 0;
                  goto LABEL_48;
                }
                if ((BYTE2(v3) - 48) <= 9u)
                {
                  v30 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
                  v31 = v5 - 3;
                  if (!v31)
                    goto LABEL_47;
                  v32 = (unsigned __int8 *)&v38 + 3;
                  while (1)
                  {
                    v33 = *v32 - 48;
                    if (v33 > 9)
                      break;
                    v34 = 10 * v30;
                    if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
                      break;
                    v30 = v34 - v33;
                    if (__OFSUB__(v34, v33))
                      break;
                    v10 = 0;
                    ++v32;
                    if (!--v31)
                      goto LABEL_48;
                  }
                }
              }
LABEL_35:
              v10 = 1;
              goto LABEL_48;
            }
            __break(1u);
LABEL_64:
            __break(1u);
            return;
          }
          if (!v5 || (v3 - 48) > 9u)
            goto LABEL_35;
          if (v5 != 1)
          {
            if ((BYTE1(v3) - 48) > 9u)
              goto LABEL_35;
            v25 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
            v26 = v5 - 2;
            if (v26)
            {
              v27 = (unsigned __int8 *)&v38 + 2;
              while (1)
              {
                v28 = *v27 - 48;
                if (v28 > 9)
                  goto LABEL_35;
                v29 = 10 * v25;
                if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63)
                  goto LABEL_35;
                v25 = v29 + v28;
                if (__OFADD__(v29, v28))
                  goto LABEL_35;
                v10 = 0;
                ++v27;
                if (!--v26)
                  goto LABEL_48;
              }
            }
          }
        }
LABEL_47:
        v10 = 0;
LABEL_48:
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if ((v10 & 1) == 0)
        {
LABEL_49:
          sub_190AED454(v4);
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_58;
      }
      swift_bridgeObjectRetain_n();
      sub_190B0E0AC();
      v36 = v35;
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
        goto LABEL_49;
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
LABEL_58:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v37 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v37 + 8) = v3;
    *(_QWORD *)(v37 + 16) = v2;
    *(_BYTE *)(v37 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_59;
  }
}

void sub_190BCF9E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  int v28;
  int v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  int v33;
  __int16 v34;
  __int16 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  sub_190AF1CCC(&v37);
  if (!v1)
  {
    v4 = v37;
    if (v37 >> 61 != 3)
    {
      v10 = *(_QWORD *)(v0 + 48);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (!v11)
      {
        *(_QWORD *)(v0 + 48) = v12;
        sub_190AD166C();
        swift_allocError();
        v14 = v13;
        v15 = *(_QWORD *)(v0 + 40);
        v16 = *(_QWORD *)(v0 + 48);
        v37 = 0;
        v38 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v4);
        v17 = v37;
        v18 = v38;
        *(_QWORD *)v14 = v15;
        *(_QWORD *)(v14 + 8) = v16;
        *(_QWORD *)(v14 + 16) = 0x7265626D756ELL;
        *(_QWORD *)(v14 + 24) = 0xE600000000000000;
        *(_QWORD *)(v14 + 32) = v17;
        *(_QWORD *)(v14 + 40) = v18;
        *(_BYTE *)(v14 + 80) = 12;
LABEL_58:
        swift_willThrow();
        sub_190AED454(v4);
        return;
      }
      __break(1u);
      goto LABEL_61;
    }
    v3 = *(_QWORD *)(v37 + 16);
    v2 = *(_QWORD *)(v37 + 24);
    v5 = HIBYTE(v2) & 0xF;
    v6 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v2) & 0xF;
    else
      v7 = v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      if ((v2 & 0x1000000000000000) == 0)
      {
        if ((v2 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v8 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_11:
            v9 = (sub_190B0E020(v8, v6) >> 8) & 1;
            goto LABEL_47;
          }
LABEL_61:
          v8 = (unsigned __int8 *)sub_190BE5CFC();
          goto LABEL_11;
        }
        v37 = *(_QWORD *)(v37 + 16);
        v38 = v2 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (v5)
          {
            if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
            {
              if (v5 == 2)
                goto LABEL_46;
              if ((BYTE2(v3) - 48) <= 9u)
              {
                v24 = (v3 >> 16) - 48 + 10 * ((v3 >> 8) - 48);
                v25 = v5 - 3;
                if (v25)
                {
                  v26 = (unsigned __int8 *)&v37 + 3;
                  while (1)
                  {
                    v27 = *v26 - 48;
                    if (v27 > 9)
                      goto LABEL_42;
                    v28 = (char)(10 * v24);
                    if (v28 != 10 * (char)v24)
                      goto LABEL_42;
                    v24 = v28 + (char)v27;
                    if ((char)(v28 + v27) != v24)
                      goto LABEL_42;
                    v9 = 0;
                    ++v26;
                    if (!--v25)
                      goto LABEL_47;
                  }
                }
                goto LABEL_46;
              }
            }
            goto LABEL_42;
          }
        }
        else
        {
          if (v3 != 45)
          {
            if (v5 && (v3 - 48) <= 9u)
            {
              if (v5 == 1)
                goto LABEL_46;
              if ((BYTE1(v3) - 48) <= 9u)
              {
                v29 = (v3 >> 8) - 48 + 10 * (v3 - 48);
                v30 = v5 - 2;
                if (v30)
                {
                  v31 = (unsigned __int8 *)&v37 + 2;
                  while (1)
                  {
                    v32 = *v31 - 48;
                    if (v32 > 9)
                      goto LABEL_42;
                    v33 = (char)(10 * v29);
                    if (v33 != 10 * (char)v29)
                      goto LABEL_42;
                    v29 = v33 + (char)v32;
                    if ((char)(v33 + v32) != v29)
                      goto LABEL_42;
                    v9 = 0;
                    ++v31;
                    if (!--v30)
                      goto LABEL_47;
                  }
                }
                goto LABEL_46;
              }
            }
LABEL_42:
            v9 = 1;
            goto LABEL_47;
          }
          if (v5)
          {
            if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
            {
              if (v5 == 2)
                goto LABEL_46;
              if ((BYTE2(v3) - 48) <= 9u)
              {
                v19 = 10 * (48 - (v3 >> 8)) - ((v3 >> 16) - 48);
                v20 = v5 - 3;
                if (v20)
                {
                  v21 = (unsigned __int8 *)&v37 + 3;
                  while (1)
                  {
                    v22 = *v21 - 48;
                    if (v22 > 9)
                      goto LABEL_42;
                    v23 = (char)(10 * v19);
                    if (v23 != 10 * (char)v19)
                      goto LABEL_42;
                    v19 = v23 - (char)v22;
                    if ((char)(v23 - v22) != v19)
                      goto LABEL_42;
                    v9 = 0;
                    ++v21;
                    if (!--v20)
                      goto LABEL_47;
                  }
                }
LABEL_46:
                v9 = 0;
LABEL_47:
                _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
                if (!v9)
                {
LABEL_48:
                  sub_190AED454(v4);
                  swift_bridgeObjectRelease();
                  return;
                }
                goto LABEL_57;
              }
            }
            goto LABEL_42;
          }
          __break(1u);
        }
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain_n();
      sub_190B0E374();
      v35 = v34;
      swift_bridgeObjectRelease();
      if ((v35 & 0x100) == 0)
        goto LABEL_48;
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
LABEL_57:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v36 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v36 + 8) = v3;
    *(_QWORD *)(v36 + 16) = v2;
    *(_BYTE *)(v36 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_58;
  }
}

void sub_190BCFDD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  sub_190AF1CCC(&v38);
  if (!v1)
  {
    v4 = v38;
    if (v38 >> 61 != 3)
    {
      v10 = *(_QWORD *)(v0 + 48);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (!v11)
      {
        *(_QWORD *)(v0 + 48) = v12;
        sub_190AD166C();
        swift_allocError();
        v14 = v13;
        v15 = *(_QWORD *)(v0 + 40);
        v16 = *(_QWORD *)(v0 + 48);
        v38 = 0;
        v39 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v4);
        v17 = v38;
        v18 = v39;
        *(_QWORD *)v14 = v15;
        *(_QWORD *)(v14 + 8) = v16;
        *(_QWORD *)(v14 + 16) = 0x7265626D756ELL;
        *(_QWORD *)(v14 + 24) = 0xE600000000000000;
        *(_QWORD *)(v14 + 32) = v17;
        *(_QWORD *)(v14 + 40) = v18;
        *(_BYTE *)(v14 + 80) = 12;
LABEL_59:
        swift_willThrow();
        sub_190AED454(v4);
        return;
      }
      __break(1u);
      goto LABEL_62;
    }
    v3 = *(_QWORD *)(v38 + 16);
    v2 = *(_QWORD *)(v38 + 24);
    v5 = HIBYTE(v2) & 0xF;
    v6 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v2) & 0xF;
    else
      v7 = v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      if ((v2 & 0x1000000000000000) == 0)
      {
        if ((v2 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v8 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_11:
            v9 = (sub_190B0E034(v8, v6) >> 16) & 1;
            goto LABEL_48;
          }
LABEL_62:
          v8 = (unsigned __int8 *)sub_190BE5CFC();
          goto LABEL_11;
        }
        v38 = *(_QWORD *)(v38 + 16);
        v39 = v2 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (!v5)
            goto LABEL_64;
          if (v5 == 1)
            goto LABEL_35;
          v20 = (BYTE1(v3) - 48);
          if (v20 > 9)
            goto LABEL_35;
          if (v5 != 2)
          {
            if ((BYTE2(v3) - 48) > 9u)
              goto LABEL_35;
            LOWORD(v20) = 10 * v20 + (BYTE2(v3) - 48);
            v21 = v5 - 3;
            if (v21)
            {
              v22 = (unsigned __int8 *)&v38 + 3;
              while (1)
              {
                v23 = *v22 - 48;
                if (v23 > 9)
                  goto LABEL_35;
                v24 = (__int16)(10 * v20);
                if (v24 != 10 * (__int16)v20)
                  goto LABEL_35;
                v20 = v24 + v23;
                if ((__int16)(v24 + v23) != v20)
                  goto LABEL_35;
                v9 = 0;
                ++v22;
                if (!--v21)
                  goto LABEL_48;
              }
            }
          }
        }
        else
        {
          if (v3 == 45)
          {
            if (v5)
            {
              if (v5 != 1)
              {
                v19 = (BYTE1(v3) - 48);
                if (v19 <= 9)
                {
                  if (v5 == 2)
                  {
                    v9 = 0;
                    goto LABEL_48;
                  }
                  if ((BYTE2(v3) - 48) <= 9u)
                  {
                    LOWORD(v30) = -10 * v19 - (BYTE2(v3) - 48);
                    v31 = v5 - 3;
                    if (!v31)
                      goto LABEL_47;
                    v32 = (unsigned __int8 *)&v38 + 3;
                    while (1)
                    {
                      v33 = *v32 - 48;
                      if (v33 > 9)
                        break;
                      v34 = (__int16)(10 * v30);
                      if (v34 != 10 * (__int16)v30)
                        break;
                      v30 = v34 - v33;
                      if ((__int16)(v34 - v33) != v30)
                        break;
                      v9 = 0;
                      ++v32;
                      if (!--v31)
                        goto LABEL_48;
                    }
                  }
                }
              }
LABEL_35:
              v9 = 1;
              goto LABEL_48;
            }
            __break(1u);
LABEL_64:
            __break(1u);
            return;
          }
          if (!v5)
            goto LABEL_35;
          v25 = (v3 - 48);
          if (v25 > 9)
            goto LABEL_35;
          if (v5 != 1)
          {
            if ((BYTE1(v3) - 48) > 9u)
              goto LABEL_35;
            LOWORD(v25) = 10 * v25 + (BYTE1(v3) - 48);
            v26 = v5 - 2;
            if (v26)
            {
              v27 = (unsigned __int8 *)&v38 + 2;
              while (1)
              {
                v28 = *v27 - 48;
                if (v28 > 9)
                  goto LABEL_35;
                v29 = (__int16)(10 * v25);
                if (v29 != 10 * (__int16)v25)
                  goto LABEL_35;
                v25 = v29 + v28;
                if ((__int16)(v29 + v28) != v25)
                  goto LABEL_35;
                v9 = 0;
                ++v27;
                if (!--v26)
                  goto LABEL_48;
              }
            }
          }
        }
LABEL_47:
        v9 = 0;
LABEL_48:
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if (!v9)
        {
LABEL_49:
          sub_190AED454(v4);
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_58;
      }
      swift_bridgeObjectRetain_n();
      sub_190B0E380();
      v36 = v35;
      swift_bridgeObjectRelease();
      if ((v36 & 0x10000) == 0)
        goto LABEL_49;
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
LABEL_58:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v37 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v37 + 8) = v3;
    *(_QWORD *)(v37 + 16) = v2;
    *(_BYTE *)(v37 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_59;
  }
}

void sub_190BD01C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  sub_190AF1CCC(&v39);
  if (!v1)
  {
    v4 = v39;
    if (v39 >> 61 != 3)
    {
      v10 = *(_QWORD *)(v0 + 48);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (!v11)
      {
        *(_QWORD *)(v0 + 48) = v12;
        sub_190AD166C();
        swift_allocError();
        v14 = v13;
        v15 = *(_QWORD *)(v0 + 40);
        v16 = *(_QWORD *)(v0 + 48);
        v39 = 0;
        v40 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v4);
        v17 = v39;
        v18 = v40;
        *(_QWORD *)v14 = v15;
        *(_QWORD *)(v14 + 8) = v16;
        *(_QWORD *)(v14 + 16) = 0x7265626D756ELL;
        *(_QWORD *)(v14 + 24) = 0xE600000000000000;
        *(_QWORD *)(v14 + 32) = v17;
        *(_QWORD *)(v14 + 40) = v18;
        *(_BYTE *)(v14 + 80) = 12;
LABEL_59:
        swift_willThrow();
        sub_190AED454(v4);
        return;
      }
      __break(1u);
      goto LABEL_62;
    }
    v3 = *(_QWORD *)(v39 + 16);
    v2 = *(_QWORD *)(v39 + 24);
    v5 = HIBYTE(v2) & 0xF;
    v6 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v2) & 0xF;
    else
      v7 = v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      if ((v2 & 0x1000000000000000) == 0)
      {
        if ((v2 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v8 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_11:
            v9 = ((unint64_t)sub_190B0E048(v8, v6) >> 32) & 1;
            goto LABEL_48;
          }
LABEL_62:
          v8 = (unsigned __int8 *)sub_190BE5CFC();
          goto LABEL_11;
        }
        v39 = *(_QWORD *)(v39 + 16);
        v40 = v2 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (!v5)
            goto LABEL_64;
          if (v5 == 1)
            goto LABEL_35;
          v20 = (BYTE1(v3) - 48);
          if (v20 > 9)
            goto LABEL_35;
          if (v5 != 2)
          {
            if ((BYTE2(v3) - 48) > 9u)
              goto LABEL_35;
            v21 = 10 * v20 + (BYTE2(v3) - 48);
            v22 = v5 - 3;
            if (v22)
            {
              v23 = (unsigned __int8 *)&v39 + 3;
              while (1)
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  goto LABEL_35;
                v25 = 10 * v21;
                if (v25 != (int)v25)
                  goto LABEL_35;
                v21 = v25 + v24;
                if (__OFADD__((_DWORD)v25, v24))
                  goto LABEL_35;
                v9 = 0;
                ++v23;
                if (!--v22)
                  goto LABEL_48;
              }
            }
          }
        }
        else
        {
          if (v3 == 45)
          {
            if (v5)
            {
              if (v5 != 1)
              {
                v19 = (BYTE1(v3) - 48);
                if (v19 <= 9)
                {
                  if (v5 == 2)
                  {
                    v9 = 0;
                    goto LABEL_48;
                  }
                  if ((BYTE2(v3) - 48) <= 9u)
                  {
                    v32 = -10 * v19 - (BYTE2(v3) - 48);
                    v33 = v5 - 3;
                    if (!v33)
                      goto LABEL_47;
                    v34 = (unsigned __int8 *)&v39 + 3;
                    while (1)
                    {
                      v35 = *v34 - 48;
                      if (v35 > 9)
                        break;
                      v36 = 10 * v32;
                      if (v36 != (int)v36)
                        break;
                      v32 = v36 - v35;
                      if (__OFSUB__((_DWORD)v36, v35))
                        break;
                      v9 = 0;
                      ++v34;
                      if (!--v33)
                        goto LABEL_48;
                    }
                  }
                }
              }
LABEL_35:
              v9 = 1;
              goto LABEL_48;
            }
            __break(1u);
LABEL_64:
            __break(1u);
            return;
          }
          if (!v5)
            goto LABEL_35;
          v26 = (v3 - 48);
          if (v26 > 9)
            goto LABEL_35;
          if (v5 != 1)
          {
            if ((BYTE1(v3) - 48) > 9u)
              goto LABEL_35;
            v27 = 10 * v26 + (BYTE1(v3) - 48);
            v28 = v5 - 2;
            if (v28)
            {
              v29 = (unsigned __int8 *)&v39 + 2;
              while (1)
              {
                v30 = *v29 - 48;
                if (v30 > 9)
                  goto LABEL_35;
                v31 = 10 * v27;
                if (v31 != (int)v31)
                  goto LABEL_35;
                v27 = v31 + v30;
                if (__OFADD__((_DWORD)v31, v30))
                  goto LABEL_35;
                v9 = 0;
                ++v29;
                if (!--v28)
                  goto LABEL_48;
              }
            }
          }
        }
LABEL_47:
        v9 = 0;
LABEL_48:
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if ((v9 & 1) == 0)
        {
LABEL_49:
          sub_190AED454(v4);
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_58;
      }
      swift_bridgeObjectRetain_n();
      v37 = sub_190B0E38C();
      swift_bridgeObjectRelease();
      if ((v37 & 0x100000000) == 0)
        goto LABEL_49;
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
LABEL_58:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v38 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v38 + 8) = v3;
    *(_QWORD *)(v38 + 16) = v2;
    *(_BYTE *)(v38 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_59;
  }
}

void sub_190BD0588()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  __int16 v31;
  __int16 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  sub_190AF1CCC(&v34);
  if (!v1)
  {
    v4 = v34;
    if (v34 >> 61 != 3)
    {
      v10 = *(_QWORD *)(v0 + 48);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (!v11)
      {
        *(_QWORD *)(v0 + 48) = v12;
        sub_190AD166C();
        swift_allocError();
        v14 = v13;
        v15 = *(_QWORD *)(v0 + 40);
        v16 = *(_QWORD *)(v0 + 48);
        v34 = 0;
        v35 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v4);
        v17 = v34;
        v18 = v35;
        *(_QWORD *)v14 = v15;
        *(_QWORD *)(v14 + 8) = v16;
        *(_QWORD *)(v14 + 16) = 0x7265626D756ELL;
        *(_QWORD *)(v14 + 24) = 0xE600000000000000;
        *(_QWORD *)(v14 + 32) = v17;
        *(_QWORD *)(v14 + 40) = v18;
        *(_BYTE *)(v14 + 80) = 12;
LABEL_62:
        swift_willThrow();
        sub_190AED454(v4);
        return;
      }
      __break(1u);
      goto LABEL_65;
    }
    v3 = *(_QWORD *)(v34 + 16);
    v2 = *(_QWORD *)(v34 + 24);
    v5 = HIBYTE(v2) & 0xF;
    v6 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v2) & 0xF;
    else
      v7 = v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      if ((v2 & 0x1000000000000000) == 0)
      {
        if ((v2 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v8 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_11:
            v9 = (sub_190B0E070(v8, v6) >> 8) & 1;
            goto LABEL_51;
          }
LABEL_65:
          v8 = (unsigned __int8 *)sub_190BE5CFC();
          goto LABEL_11;
        }
        v34 = *(_QWORD *)(v34 + 16);
        v35 = v2 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (!v5)
            goto LABEL_67;
          if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
            goto LABEL_36;
          if (v5 != 2)
          {
            if ((BYTE2(v3) - 48) > 9u)
              goto LABEL_36;
            v19 = (v3 >> 16) - 48 + 10 * ((v3 >> 8) - 48);
            v20 = v5 - 3;
            if (v20)
            {
              v21 = (unsigned __int8 *)&v34 + 3;
              while (1)
              {
                v22 = *v21 - 48;
                if (v22 > 9)
                  goto LABEL_36;
                if (((10 * v19) & 0xF00) != 0)
                  goto LABEL_36;
                v19 = (10 * v19) + v22;
                if (((v19 >> 8) & 1) != 0)
                  goto LABEL_36;
                v9 = 0;
                ++v21;
                if (!--v20)
                  goto LABEL_51;
              }
            }
          }
        }
        else
        {
          if (v3 == 45)
          {
            if (v5)
            {
              if (v5 != 1
                && (BYTE1(v3) - 48) <= 9u
                && (-(BYTE1(v3) - 48) & 0xFFFFFF00) == 0)
              {
                if (v5 == 2)
                {
                  v9 = 0;
                  goto LABEL_51;
                }
                if ((BYTE2(v3) - 48) <= 9u && ((10 * (48 - BYTE1(v3))) & 0xF00) == 0)
                {
                  v27 = (10 * (48 - BYTE1(v3))) - (BYTE2(v3) - 48);
                  if ((v27 & 0xFFFFFF00) == 0)
                  {
                    v28 = v5 - 3;
                    if (!v28)
                      goto LABEL_50;
                    v29 = (unsigned __int8 *)&v34 + 3;
                    while (1)
                    {
                      v30 = *v29 - 48;
                      if (v30 > 9)
                        break;
                      if (((10 * v27) & 0xF00) != 0)
                        break;
                      v27 = (10 * v27) - v30;
                      if ((v27 & 0xFFFFFF00) != 0)
                        break;
                      v9 = 0;
                      ++v29;
                      if (!--v28)
                        goto LABEL_51;
                    }
                  }
                }
              }
LABEL_36:
              v9 = 1;
              goto LABEL_51;
            }
            __break(1u);
LABEL_67:
            __break(1u);
            return;
          }
          if (!v5 || (v3 - 48) > 9u)
            goto LABEL_36;
          if (v5 != 1)
          {
            if ((BYTE1(v3) - 48) > 9u)
              goto LABEL_36;
            v23 = (v3 >> 8) - 48 + 10 * (v3 - 48);
            v24 = v5 - 2;
            if (v24)
            {
              v25 = (unsigned __int8 *)&v34 + 2;
              while (1)
              {
                v26 = *v25 - 48;
                if (v26 > 9)
                  goto LABEL_36;
                if (((10 * v23) & 0xF00) != 0)
                  goto LABEL_36;
                v23 = (10 * v23) + v26;
                if (((v23 >> 8) & 1) != 0)
                  goto LABEL_36;
                v9 = 0;
                ++v25;
                if (!--v24)
                  goto LABEL_51;
              }
            }
          }
        }
LABEL_50:
        v9 = 0;
LABEL_51:
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if (!v9)
        {
LABEL_52:
          sub_190AED454(v4);
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_61;
      }
      swift_bridgeObjectRetain_n();
      sub_190B0E450();
      v32 = v31;
      swift_bridgeObjectRelease();
      if ((v32 & 0x100) == 0)
        goto LABEL_52;
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
LABEL_61:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v33 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v33 + 8) = v3;
    *(_QWORD *)(v33 + 16) = v2;
    *(_BYTE *)(v33 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_62;
  }
}

void sub_190BD09B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  sub_190AF1CCC(&v34);
  if (!v1)
  {
    v4 = v34;
    if (v34 >> 61 != 3)
    {
      v10 = *(_QWORD *)(v0 + 48);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (!v11)
      {
        *(_QWORD *)(v0 + 48) = v12;
        sub_190AD166C();
        swift_allocError();
        v14 = v13;
        v15 = *(_QWORD *)(v0 + 40);
        v16 = *(_QWORD *)(v0 + 48);
        v34 = 0;
        v35 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v4);
        v17 = v34;
        v18 = v35;
        *(_QWORD *)v14 = v15;
        *(_QWORD *)(v14 + 8) = v16;
        *(_QWORD *)(v14 + 16) = 0x7265626D756ELL;
        *(_QWORD *)(v14 + 24) = 0xE600000000000000;
        *(_QWORD *)(v14 + 32) = v17;
        *(_QWORD *)(v14 + 40) = v18;
        *(_BYTE *)(v14 + 80) = 12;
LABEL_62:
        swift_willThrow();
        sub_190AED454(v4);
        return;
      }
      __break(1u);
      goto LABEL_65;
    }
    v3 = *(_QWORD *)(v34 + 16);
    v2 = *(_QWORD *)(v34 + 24);
    v5 = HIBYTE(v2) & 0xF;
    v6 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v2) & 0xF;
    else
      v7 = v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      if ((v2 & 0x1000000000000000) == 0)
      {
        if ((v2 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v8 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_11:
            v9 = (sub_190B0E084(v8, v6) >> 16) & 1;
            goto LABEL_51;
          }
LABEL_65:
          v8 = (unsigned __int8 *)sub_190BE5CFC();
          goto LABEL_11;
        }
        v34 = *(_QWORD *)(v34 + 16);
        v35 = v2 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (!v5)
            goto LABEL_67;
          if (v5 == 1)
            goto LABEL_36;
          v19 = (BYTE1(v3) - 48);
          if (v19 > 9)
            goto LABEL_36;
          if (v5 != 2)
          {
            if ((BYTE2(v3) - 48) > 9u)
              goto LABEL_36;
            LOWORD(v19) = 10 * v19 + (BYTE2(v3) - 48);
            v20 = v5 - 3;
            if (v20)
            {
              v21 = (unsigned __int8 *)&v34 + 3;
              while (1)
              {
                v22 = *v21 - 48;
                if (v22 > 9)
                  goto LABEL_36;
                if (((10 * (unsigned __int16)v19) & 0xF0000) != 0)
                  goto LABEL_36;
                v19 = (unsigned __int16)(10 * v19) + v22;
                if ((v19 & 0x10000) != 0)
                  goto LABEL_36;
                v9 = 0;
                ++v21;
                if (!--v20)
                  goto LABEL_51;
              }
            }
          }
        }
        else
        {
          if (v3 == 45)
          {
            if (v5)
            {
              if (v5 != 1
                && (BYTE1(v3) - 48) <= 9u
                && (-(BYTE1(v3) - 48) & 0xFFFF0000) == 0)
              {
                if (v5 == 2)
                {
                  v9 = 0;
                  goto LABEL_51;
                }
                if ((BYTE2(v3) - 48) <= 9u
                  && ((10 * (unsigned __int16)-(BYTE1(v3) - 48)) & 0xF0000) == 0)
                {
                  v27 = (unsigned __int16)(-10 * (BYTE1(v3) - 48)) - (BYTE2(v3) - 48);
                  if ((v27 & 0xFFFF0000) == 0)
                  {
                    v28 = v5 - 3;
                    if (!v28)
                      goto LABEL_50;
                    v29 = (unsigned __int8 *)&v34 + 3;
                    while (1)
                    {
                      v30 = *v29 - 48;
                      if (v30 > 9)
                        break;
                      if (((10 * (unsigned __int16)v27) & 0xF0000) != 0)
                        break;
                      v27 = (unsigned __int16)(10 * v27) - v30;
                      if ((v27 & 0xFFFF0000) != 0)
                        break;
                      v9 = 0;
                      ++v29;
                      if (!--v28)
                        goto LABEL_51;
                    }
                  }
                }
              }
LABEL_36:
              v9 = 1;
              goto LABEL_51;
            }
            __break(1u);
LABEL_67:
            __break(1u);
            return;
          }
          if (!v5)
            goto LABEL_36;
          v23 = (v3 - 48);
          if (v23 > 9)
            goto LABEL_36;
          if (v5 != 1)
          {
            if ((BYTE1(v3) - 48) > 9u)
              goto LABEL_36;
            LOWORD(v23) = 10 * v23 + (BYTE1(v3) - 48);
            v24 = v5 - 2;
            if (v24)
            {
              v25 = (unsigned __int8 *)&v34 + 2;
              while (1)
              {
                v26 = *v25 - 48;
                if (v26 > 9)
                  goto LABEL_36;
                if (((10 * (unsigned __int16)v23) & 0xF0000) != 0)
                  goto LABEL_36;
                v23 = (unsigned __int16)(10 * v23) + v26;
                if ((v23 & 0x10000) != 0)
                  goto LABEL_36;
                v9 = 0;
                ++v25;
                if (!--v24)
                  goto LABEL_51;
              }
            }
          }
        }
LABEL_50:
        v9 = 0;
LABEL_51:
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if (!v9)
        {
LABEL_52:
          sub_190AED454(v4);
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_61;
      }
      swift_bridgeObjectRetain_n();
      sub_190B0E4EC();
      v32 = v31;
      swift_bridgeObjectRelease();
      if ((v32 & 0x10000) == 0)
        goto LABEL_52;
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
LABEL_61:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v33 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v33 + 8) = v3;
    *(_QWORD *)(v33 + 16) = v2;
    *(_BYTE *)(v33 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_62;
  }
}

void sub_190BD0DE0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  BOOL v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  sub_190AF1CCC(&v43);
  if (!v1)
  {
    v4 = v43;
    if (v43 >> 61 != 3)
    {
      v10 = *(_QWORD *)(v0 + 48);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (!v11)
      {
        *(_QWORD *)(v0 + 48) = v12;
        sub_190AD166C();
        swift_allocError();
        v14 = v13;
        v15 = *(_QWORD *)(v0 + 40);
        v16 = *(_QWORD *)(v0 + 48);
        v43 = 0;
        v44 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v4);
        v17 = v43;
        v18 = v44;
        *(_QWORD *)v14 = v15;
        *(_QWORD *)(v14 + 8) = v16;
        *(_QWORD *)(v14 + 16) = 0x7265626D756ELL;
        *(_QWORD *)(v14 + 24) = 0xE600000000000000;
        *(_QWORD *)(v14 + 32) = v17;
        *(_QWORD *)(v14 + 40) = v18;
        *(_BYTE *)(v14 + 80) = 12;
LABEL_63:
        swift_willThrow();
        sub_190AED454(v4);
        return;
      }
      __break(1u);
      goto LABEL_66;
    }
    v3 = *(_QWORD *)(v43 + 16);
    v2 = *(_QWORD *)(v43 + 24);
    v5 = HIBYTE(v2) & 0xF;
    v6 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v2) & 0xF;
    else
      v7 = v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      if ((v2 & 0x1000000000000000) == 0)
      {
        if ((v2 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v8 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_11:
            v9 = ((unint64_t)sub_190B0E098(v8, v6) >> 32) & 1;
            goto LABEL_52;
          }
LABEL_66:
          v8 = (unsigned __int8 *)sub_190BE5CFC();
          goto LABEL_11;
        }
        v43 = *(_QWORD *)(v43 + 16);
        v44 = v2 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (!v5)
            goto LABEL_68;
          if (v5 == 1)
            goto LABEL_37;
          v22 = (BYTE1(v3) - 48);
          if (v22 > 9)
            goto LABEL_37;
          if (v5 != 2)
          {
            if ((BYTE2(v3) - 48) > 9u)
              goto LABEL_37;
            v23 = 10 * v22 + (BYTE2(v3) - 48);
            v24 = v5 - 3;
            if (v24)
            {
              v25 = (unsigned __int8 *)&v43 + 3;
              while (1)
              {
                v26 = *v25 - 48;
                if (v26 > 9)
                  goto LABEL_37;
                v27 = 10 * v23;
                if ((v27 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_37;
                v23 = v27 + v26;
                if (__CFADD__((_DWORD)v27, v26))
                  goto LABEL_37;
                v9 = 0;
                ++v25;
                if (!--v24)
                  goto LABEL_52;
              }
            }
          }
        }
        else
        {
          if (v3 == 45)
          {
            if (v5)
            {
              if (v5 != 1)
              {
                v19 = BYTE1(v3) - 48;
                if ((BYTE1(v3) - 48) <= 9u)
                {
                  v20 = v19 == 0;
                  v21 = -v19;
                  if (v20)
                  {
                    if (v5 == 2)
                    {
                      v9 = 0;
                      goto LABEL_52;
                    }
                    v34 = BYTE2(v3) - 48;
                    if ((BYTE2(v3) - 48) <= 9u)
                    {
                      v35 = 10 * v21;
                      if ((v35 & 0xFFFFFFFF00000000) == 0)
                      {
                        v36 = v35 - v34;
                        if (v35 >= v34)
                        {
                          v37 = v5 - 3;
                          if (!v37)
                            goto LABEL_51;
                          v38 = (unsigned __int8 *)&v43 + 3;
                          while (1)
                          {
                            v39 = *v38 - 48;
                            if (v39 > 9)
                              break;
                            v40 = 10 * v36;
                            if ((v40 & 0xFFFFFFFF00000000) != 0)
                              break;
                            v36 = v40 - v39;
                            if (v40 < v39)
                              break;
                            v9 = 0;
                            ++v38;
                            if (!--v37)
                              goto LABEL_52;
                          }
                        }
                      }
                    }
                  }
                }
              }
LABEL_37:
              v9 = 1;
              goto LABEL_52;
            }
            __break(1u);
LABEL_68:
            __break(1u);
            return;
          }
          if (!v5)
            goto LABEL_37;
          v28 = (v3 - 48);
          if (v28 > 9)
            goto LABEL_37;
          if (v5 != 1)
          {
            if ((BYTE1(v3) - 48) > 9u)
              goto LABEL_37;
            v29 = 10 * v28 + (BYTE1(v3) - 48);
            v30 = v5 - 2;
            if (v30)
            {
              v31 = (unsigned __int8 *)&v43 + 2;
              while (1)
              {
                v32 = *v31 - 48;
                if (v32 > 9)
                  goto LABEL_37;
                v33 = 10 * v29;
                if ((v33 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_37;
                v29 = v33 + v32;
                if (__CFADD__((_DWORD)v33, v32))
                  goto LABEL_37;
                v9 = 0;
                ++v31;
                if (!--v30)
                  goto LABEL_52;
              }
            }
          }
        }
LABEL_51:
        v9 = 0;
LABEL_52:
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        if ((v9 & 1) == 0)
        {
LABEL_53:
          sub_190AED454(v4);
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_62;
      }
      swift_bridgeObjectRetain_n();
      v41 = sub_190B0E584();
      swift_bridgeObjectRelease();
      if ((v41 & 0x100000000) == 0)
        goto LABEL_53;
    }
    else
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    }
LABEL_62:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v42 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v42 + 8) = v3;
    *(_QWORD *)(v42 + 16) = v2;
    *(_BYTE *)(v42 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_63;
  }
}

void sub_190BD11BC(void (*a1)(uint64_t, unint64_t, uint64_t), void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned int v29;
  uint64_t v30;
  unsigned __int8 v31;
  unint64_t v32;
  unint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  unsigned __int8 v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unsigned __int8 v46;
  char v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;

  sub_190AF1CCC(&v50);
  if (v3)
    goto LABEL_67;
  v8 = v50;
  if (v50 >> 61 != 3)
  {
    v14 = *(_QWORD *)(v2 + 48);
    v15 = __OFSUB__(v14, 1);
    v16 = v14 - 1;
    if (!v15)
    {
      *(_QWORD *)(v2 + 48) = v16;
      sub_190AD166C();
      OUTLINED_FUNCTION_38();
      v18 = v17;
      v19 = *(_QWORD *)(v2 + 40);
      v20 = *(_QWORD *)(v2 + 48);
      v50 = 0;
      v51 = 0xE000000000000000;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190AD16A8(v8);
      v21 = v50;
      v22 = v51;
      *(_QWORD *)v18 = v19;
      *(_QWORD *)(v18 + 8) = v20;
      *(_QWORD *)(v18 + 16) = 0x7265626D756ELL;
      *(_QWORD *)(v18 + 24) = 0xE600000000000000;
      *(_QWORD *)(v18 + 32) = v21;
      *(_QWORD *)(v18 + 40) = v22;
      *(_BYTE *)(v18 + 80) = 12;
LABEL_66:
      swift_willThrow();
      sub_190AED454(v8);
      goto LABEL_67;
    }
    __break(1u);
    goto LABEL_69;
  }
  v5 = *(_QWORD *)(v50 + 16);
  v4 = *(_QWORD *)(v50 + 24);
  v9 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) != 0)
    v10 = HIBYTE(v4) & 0xF;
  else
    v10 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_65:
    sub_190AD166C();
    OUTLINED_FUNCTION_38();
    *(_QWORD *)v49 = *(_QWORD *)(v2 + 40);
    *(_QWORD *)(v49 + 8) = v5;
    *(_QWORD *)(v49 + 16) = v4;
    *(_BYTE *)(v49 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_66;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    a1(v5, v4, 10);
    v48 = v47;
    OUTLINED_FUNCTION_81();
    if ((v48 & 1) == 0)
      goto LABEL_54;
    goto LABEL_65;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v5 & 0x1000000000000000) != 0)
    {
      v11 = (v4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_11:
      a2(v11);
      v13 = v12 & 1;
      goto LABEL_53;
    }
LABEL_69:
    v11 = sub_190BE5CFC();
    goto LABEL_11;
  }
  v50 = *(_QWORD *)(v50 + 16);
  v51 = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v5 == 43)
  {
    if (!v9)
      goto LABEL_71;
    if (v9 == 1)
      goto LABEL_37;
    OUTLINED_FUNCTION_12();
    if (!v26 && v25)
      goto LABEL_37;
    v29 = v28;
    if (v27 != 2)
    {
      OUTLINED_FUNCTION_12();
      if (!v26 && v25)
        goto LABEL_37;
      v32 = 10 * v29 + v31;
      if (v30 != 3)
      {
        OUTLINED_FUNCTION_10_43();
        while (1)
        {
          OUTLINED_FUNCTION_37();
          if (!v26 && v25)
            goto LABEL_37;
          if (!is_mul_ok(v32, v33))
            goto LABEL_37;
          v25 = __CFADD__(10 * v32, v34);
          v32 = 10 * v32 + v34;
          if (v25)
            goto LABEL_37;
          v13 = 0;
          OUTLINED_FUNCTION_6_52();
          if (v26)
            goto LABEL_53;
        }
      }
    }
LABEL_52:
    v13 = 0;
LABEL_53:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if ((v13 & 1) == 0)
    {
LABEL_54:
      sub_190AED454(v8);
      OUTLINED_FUNCTION_81();
LABEL_67:
      OUTLINED_FUNCTION_9_49();
      return;
    }
    goto LABEL_65;
  }
  if (v5 != 45)
  {
    if (!v9 || (v5 - 48) > 9u)
      goto LABEL_37;
    if (v9 != 1)
    {
      OUTLINED_FUNCTION_12();
      if (!v26 && v25)
        goto LABEL_37;
      v37 = 10 * (v5 - 48) + v36;
      if (v35 != 2)
      {
        while (1)
        {
          OUTLINED_FUNCTION_37();
          if (!v26 && v25)
            goto LABEL_37;
          if (!is_mul_ok(v37, v38))
            goto LABEL_37;
          v25 = __CFADD__(10 * v37, v39);
          v37 = 10 * v37 + v39;
          if (v25)
            goto LABEL_37;
          v13 = 0;
          OUTLINED_FUNCTION_6_52();
          if (v26)
            goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
  if (v9)
  {
    if (v9 != 1)
    {
      OUTLINED_FUNCTION_12();
      if ((v26 || !v25) && !v24)
      {
        if (v23 == 2)
        {
          v13 = 0;
          goto LABEL_53;
        }
        OUTLINED_FUNCTION_20_26();
        if (v26 || !v25)
        {
          OUTLINED_FUNCTION_19_30();
          if (v26)
          {
            v43 = 10 * v41;
            v44 = v43 - v42;
            if (v43 >= v42)
            {
              if (v40 == 3)
                goto LABEL_52;
              OUTLINED_FUNCTION_10_43();
              while (1)
              {
                OUTLINED_FUNCTION_37();
                if (!v26 && v25)
                  break;
                if (!is_mul_ok(v44, v45))
                  break;
                v25 = 10 * v44 >= v46;
                v44 = 10 * v44 - v46;
                if (!v25)
                  break;
                v13 = 0;
                OUTLINED_FUNCTION_6_52();
                if (v26)
                  goto LABEL_53;
              }
            }
          }
        }
      }
    }
LABEL_37:
    v13 = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_71:
  __break(1u);
}

void sub_190BD1544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;

  v5 = v3;
  sub_190AF1CCC(&v37);
  if (!v4)
  {
    v8 = v37;
    if (v37 >> 61)
    {
      v26 = *(_QWORD *)(v3 + 48);
      v27 = __OFSUB__(v26, 1);
      v28 = v26 - 1;
      if (!v27)
      {
        *(_QWORD *)(v3 + 48) = v28;
        sub_190AD166C();
        swift_allocError();
        v30 = v29;
        v32 = *(_QWORD *)(v3 + 40);
        v31 = *(_QWORD *)(v3 + 48);
        v37 = 0;
        v38 = 0xE000000000000000;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AD16A8(v8);
        v33 = v37;
        v34 = v38;
        *(_QWORD *)v30 = v32;
        *(_QWORD *)(v30 + 8) = v31;
        *(_QWORD *)(v30 + 16) = 0x7463656A626FLL;
        *(_QWORD *)(v30 + 24) = 0xE600000000000000;
        *(_QWORD *)(v30 + 32) = v33;
        *(_QWORD *)(v30 + 40) = v34;
        *(_BYTE *)(v30 + 80) = 12;
        swift_willThrow();
        v25 = v8;
        goto LABEL_7;
      }
    }
    else
    {
      v9 = *(_QWORD *)(v37 + 16);
      v36 = *(_QWORD *)(v5 + 40);
      sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      v43 = v8;
      *(_OWORD *)(inited + 16) = xmmword_190BE7CD0;
      v11 = *(_QWORD *)(v5 + 48);
      v12 = v11 - 1;
      if (!__OFSUB__(v11, 1))
      {
        v13 = (_QWORD *)inited;
        v37 = v11 - 1;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        v35 = v9;
        v14 = sub_190BE5FC0();
        v16 = v15;
        v13[7] = &type metadata for _JSONKey;
        v13[8] = sub_190AF1C90();
        v17 = swift_allocObject();
        v13[4] = v17;
        *(_QWORD *)(v17 + 16) = v14;
        *(_QWORD *)(v17 + 24) = v16;
        *(_QWORD *)(v17 + 32) = v12;
        *(_BYTE *)(v17 + 40) = 0;
        v37 = v36;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AEAB18((uint64_t)v13);
        v18 = v37;
        v19 = *(_QWORD *)(v5 + 8);
        v20 = *(void **)(v5 + 16);
        v21 = *(_QWORD *)(v5 + 24);
        v22 = *(_BYTE *)(v5 + 32);
        v37 = v35;
        v38 = v19;
        v39 = v20;
        v40 = v21;
        v41 = v22;
        v42 = v18;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AEA4F0(v20, v21, v22);
        v24 = type metadata accessor for JSONKeyedDecodingContainer(0, a2, a3, v23);
        MEMORY[0x194016EF8](&unk_190BF08B4, v24);
        sub_190BE5F60();
        v25 = v43;
LABEL_7:
        sub_190AED454(v25);
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_190BD1798(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v3 = v1;
  sub_190AF1CCC(&v32);
  if (!v2)
  {
    v5 = v32;
    if (v32 >> 61 == 1)
    {
      v6 = *(_QWORD *)(v32 + 16);
      v7 = *(_QWORD *)(v3 + 40);
      sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_190BE7CD0;
      v9 = *(_QWORD *)(v3 + 48);
      v10 = v9 - 1;
      if (!__OFSUB__(v9, 1))
      {
        v11 = (_QWORD *)inited;
        v32 = v9 - 1;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        v34 = v6;
        v12 = sub_190BE5FC0();
        v14 = v13;
        v11[7] = &type metadata for _JSONKey;
        v11[8] = sub_190AF1C90();
        v15 = swift_allocObject();
        v11[4] = v15;
        *(_QWORD *)(v15 + 16) = v12;
        *(_QWORD *)(v15 + 24) = v14;
        *(_QWORD *)(v15 + 32) = v10;
        *(_BYTE *)(v15 + 40) = 0;
        v32 = v7;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        v16 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AEAB18(v16);
        sub_190AED454(v5);
        swift_setDeallocating();
        sub_190B4BF80();
        v17 = v32;
        v18 = *(_QWORD *)(v3 + 8);
        v19 = *(void **)(v3 + 16);
        v20 = *(_QWORD *)(v3 + 24);
        a1[3] = (uint64_t)&type metadata for JSONUnkeyedDecodingContainer;
        v21 = *(_BYTE *)(v3 + 32);
        a1[4] = sub_190AD0C88();
        v22 = swift_allocObject();
        *a1 = v22;
        *(_QWORD *)(v22 + 16) = v34;
        *(_QWORD *)(v22 + 24) = v18;
        *(_QWORD *)(v22 + 32) = v19;
        *(_QWORD *)(v22 + 40) = v20;
        *(_BYTE *)(v22 + 48) = v21;
        *(_QWORD *)(v22 + 56) = v17;
        *(_QWORD *)(v22 + 64) = 0;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        sub_190AEA4F0(v19, v20, v21);
        return;
      }
      __break(1u);
      goto LABEL_9;
    }
    v23 = *(_QWORD *)(v1 + 48);
    v24 = __OFSUB__(v23, 1);
    v25 = v23 - 1;
    if (v24)
    {
LABEL_9:
      __break(1u);
      return;
    }
    *(_QWORD *)(v1 + 48) = v25;
    sub_190AD166C();
    swift_allocError();
    v27 = v26;
    v29 = *(_QWORD *)(v1 + 40);
    v28 = *(_QWORD *)(v1 + 48);
    v32 = 0;
    v33 = 0xE000000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AD16A8(v5);
    v30 = v32;
    v31 = v33;
    *(_QWORD *)v27 = v29;
    *(_QWORD *)(v27 + 8) = v28;
    *(_QWORD *)(v27 + 16) = 0x7961727261;
    *(_QWORD *)(v27 + 24) = 0xE500000000000000;
    *(_QWORD *)(v27 + 32) = v30;
    *(_QWORD *)(v27 + 40) = v31;
    *(_BYTE *)(v27 + 80) = 12;
    swift_willThrow();
    sub_190AED454(v5);
  }
}

void sub_190BD19EC(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = v1[6];
  if (v4 >= *(_QWORD *)(*v1 + 16))
  {
    sub_190AD166C();
    swift_allocError();
    v20 = v19;
    v21 = v1[5];
    sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190BE7CD0;
    v23 = v1[6];
    v24 = sub_190BE5FC0();
    v26 = v25;
    *(_QWORD *)(inited + 56) = &type metadata for _JSONKey;
    *(_QWORD *)(inited + 64) = sub_190AF1C90();
    v27 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v26;
    *(_QWORD *)(v27 + 32) = v23;
    *(_BYTE *)(v27 + 40) = 0;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEAB18(inited);
    *(_QWORD *)v20 = v21;
    *(_BYTE *)(v20 + 80) = 0;
    swift_willThrow();
  }
  else if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(*v1 + 8 * v4 + 32);
    v1[6] = v4 + 1;
    v6 = v1[5];
    sub_190AAC38C(0, &qword_1ED034BA8, (uint64_t (*)(uint64_t))sub_190B06030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_initStackObject();
    *(_OWORD *)(v7 + 16) = xmmword_190BE7CD0;
    sub_190AEA618(v5);
    sub_190AEA618(v5);
    v8 = sub_190BE5FC0();
    v10 = v9;
    *(_QWORD *)(v7 + 56) = &type metadata for _JSONKey;
    *(_QWORD *)(v7 + 64) = sub_190AF1C90();
    v11 = swift_allocObject();
    *(_QWORD *)(v7 + 32) = v11;
    *(_QWORD *)(v11 + 16) = v8;
    *(_QWORD *)(v11 + 24) = v10;
    *(_QWORD *)(v11 + 32) = v4;
    *(_BYTE *)(v11 + 40) = 0;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v12 = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEAB18(v12);
    sub_190AED454(v5);
    swift_setDeallocating();
    sub_190B4BF80();
    v13 = v6;
    v14 = v2[1];
    v15 = (void *)v2[2];
    v16 = v2[3];
    a1[3] = (uint64_t)&type metadata for _JSONDecoder;
    v17 = *((_BYTE *)v2 + 32);
    a1[4] = sub_190AEA728();
    v18 = swift_allocObject();
    *a1 = v18;
    *(_QWORD *)(v18 + 16) = v5;
    *(_QWORD *)(v18 + 24) = v15;
    *(_QWORD *)(v18 + 32) = v16;
    *(_BYTE *)(v18 + 40) = v17;
    *(_QWORD *)(v18 + 48) = v13;
    *(_QWORD *)(v18 + 56) = v14;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA4F0(v15, v16, v17);
  }
}

uint64_t sub_190BD1C98()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

BOOL sub_190BD1CA0()
{
  return sub_190BCF08C();
}

uint64_t sub_190BD1CB8()
{
  char v0;

  sub_190BCF118();
  return v0 & 1;
}

void sub_190BD1CD0()
{
  sub_190BCF230();
}

void sub_190BD1CE4()
{
  sub_190BCF334();
}

void sub_190BD1CF8()
{
  sub_190BCF490();
}

void sub_190BD1D0C()
{
  sub_190BCF5EC();
}

void sub_190BD1D20()
{
  sub_190BCF9E4();
}

void sub_190BD1D34()
{
  sub_190BCFDD0();
}

void sub_190BD1D48()
{
  sub_190BD01C4();
}

uint64_t sub_190BD1D5C()
{
  return sub_190BE605C();
}

void sub_190BD1D70()
{
  sub_190BD11BC((void (*)(uint64_t, unint64_t, uint64_t))sub_190B0E444, (void (*)(uint64_t))sub_190B0E05C);
}

void sub_190BD1D94()
{
  sub_190BD0588();
}

void sub_190BD1DA8()
{
  sub_190BD09B0();
}

void sub_190BD1DBC()
{
  sub_190BD0DE0();
}

uint64_t sub_190BD1DD0()
{
  return sub_190BE6068();
}

uint64_t sub_190BD1DE4()
{
  return sub_190BE6008();
}

uint64_t sub_190BD1DF8()
{
  return sub_190BE5FFC();
}

uint64_t sub_190BD1E0C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190BE6014();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_190BD1E2C(uint64_t a1, uint64_t a2)
{
  return sub_190BD1FAC(a1, a2, MEMORY[0x1E0DED2E0]);
}

uint64_t sub_190BD1E48()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190BE6020();
  if (v0)
    return v2;
  return result;
}

void sub_190BD1E68(uint64_t a1, uint64_t a2)
{
  sub_190BD1F34(a1, a2, MEMORY[0x1E0DED300]);
}

void sub_190BD1E84(uint64_t a1, uint64_t a2)
{
  sub_190BD1F70(a1, a2, MEMORY[0x1E0DED308]);
}

uint64_t sub_190BD1EA0(uint64_t a1, uint64_t a2)
{
  return sub_190BD1FAC(a1, a2, MEMORY[0x1E0DED310]);
}

uint64_t sub_190BD1EBC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190BE6044();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_190BD1EDC(uint64_t a1, uint64_t a2)
{
  return sub_190BD2008(a1, a2, MEMORY[0x1E0DED328]);
}

uint64_t sub_190BD1EF8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190BE602C();
  if (v0)
    return v2;
  return result;
}

void sub_190BD1F18(uint64_t a1, uint64_t a2)
{
  sub_190BD1F34(a1, a2, MEMORY[0x1E0DED320]);
}

void sub_190BD1F34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  __int16 v3;

  v3 = a3();
  OUTLINED_FUNCTION_32_19(v3 & 0x1FF);
  OUTLINED_FUNCTION_40_0();
}

void sub_190BD1F54(uint64_t a1, uint64_t a2)
{
  sub_190BD1F70(a1, a2, MEMORY[0x1E0DED330]);
}

void sub_190BD1F70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;

  v3 = a3();
  OUTLINED_FUNCTION_32_19(v3 & 0x1FFFF);
  OUTLINED_FUNCTION_40_0();
}

uint64_t sub_190BD1F90(uint64_t a1, uint64_t a2)
{
  return sub_190BD1FAC(a1, a2, MEMORY[0x1E0DED338]);
}

uint64_t sub_190BD1FAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return OUTLINED_FUNCTION_22_30(v3);
}

uint64_t sub_190BD1FCC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_190BE6050();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_190BD1FEC(uint64_t a1, uint64_t a2)
{
  return sub_190BD2008(a1, a2, MEMORY[0x1E0DED348]);
}

uint64_t sub_190BD2008(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (v3)
    return v5;
  return result;
}

uint64_t sub_190BD202C()
{
  return sub_190BE6038();
}

void sub_190BD2054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_190BD1544(a1, a2, a3);
}

void sub_190BD2068(uint64_t *a1@<X8>)
{
  sub_190BD1798(a1);
}

void sub_190BD207C(uint64_t *a1@<X8>)
{
  sub_190BD19EC(a1);
}

void sub_190BD2090()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  int v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *v0;
  v2 = v0[5];
  if (*v0 >> 61 != 3)
  {
    sub_190AD166C();
    swift_allocError();
    v11 = v10;
    v30 = 0;
    v31 = 0xE000000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v1);
    sub_190AD16A8(v1);
    sub_190AED454(v1);
    *(_QWORD *)v11 = v2;
    *(_QWORD *)(v11 + 8) = 0x7265626D756ELL;
    *(_QWORD *)(v11 + 16) = 0xE600000000000000;
    *(_QWORD *)(v11 + 24) = v30;
    *(_QWORD *)(v11 + 32) = 0xE000000000000000;
    *(_BYTE *)(v11 + 80) = 10;
LABEL_56:
    swift_willThrow();
    return;
  }
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  v6 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v3) & 0xF;
  else
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_55:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v29 = v2;
    *(_QWORD *)(v29 + 8) = v4;
    *(_QWORD *)(v29 + 16) = v3;
    *(_BYTE *)(v29 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_56;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    sub_190B0E374();
    v28 = v27;
    swift_bridgeObjectRelease();
    if ((v28 & 0x100) == 0)
      goto LABEL_46;
    goto LABEL_55;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    v9 = (sub_190B0E020(v8, v6) >> 8) & 1;
LABEL_45:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v9)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_55;
  }
  v30 = *(_QWORD *)(v1 + 16);
  v31 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (v5)
    {
      if (v5 != 1 && (BYTE1(v4) - 48) <= 9u)
      {
        if (v5 == 2)
          goto LABEL_44;
        if ((BYTE2(v4) - 48) <= 9u)
        {
          v17 = (v4 >> 16) - 48 + 10 * ((v4 >> 8) - 48);
          v18 = v5 - 3;
          if (v18)
          {
            v19 = (unsigned __int8 *)&v30 + 3;
            while (1)
            {
              v20 = *v19 - 48;
              if (v20 > 9)
                goto LABEL_40;
              v21 = (char)(10 * v17);
              if (v21 != 10 * (char)v17)
                goto LABEL_40;
              v17 = v21 + (char)v20;
              if ((char)(v21 + v20) != v17)
                goto LABEL_40;
              v9 = 0;
              ++v19;
              if (!--v18)
                goto LABEL_45;
            }
          }
          goto LABEL_44;
        }
      }
      goto LABEL_40;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (v5 && (v4 - 48) <= 9u)
      {
        if (v5 == 1)
          goto LABEL_44;
        if ((BYTE1(v4) - 48) <= 9u)
        {
          v22 = (v4 >> 8) - 48 + 10 * (v4 - 48);
          v23 = v5 - 2;
          if (v23)
          {
            v24 = (unsigned __int8 *)&v30 + 2;
            while (1)
            {
              v25 = *v24 - 48;
              if (v25 > 9)
                goto LABEL_40;
              v26 = (char)(10 * v22);
              if (v26 != 10 * (char)v22)
                goto LABEL_40;
              v22 = v26 + (char)v25;
              if ((char)(v26 + v25) != v22)
                goto LABEL_40;
              v9 = 0;
              ++v24;
              if (!--v23)
                goto LABEL_45;
            }
          }
          goto LABEL_44;
        }
      }
LABEL_40:
      v9 = 1;
      goto LABEL_45;
    }
    if (v5)
    {
      if (v5 != 1 && (BYTE1(v4) - 48) <= 9u)
      {
        if (v5 == 2)
          goto LABEL_44;
        if ((BYTE2(v4) - 48) <= 9u)
        {
          v12 = 10 * (48 - (v4 >> 8)) - ((v4 >> 16) - 48);
          v13 = v5 - 3;
          if (v13)
          {
            v14 = (unsigned __int8 *)&v30 + 3;
            while (1)
            {
              v15 = *v14 - 48;
              if (v15 > 9)
                goto LABEL_40;
              v16 = (char)(10 * v12);
              if (v16 != 10 * (char)v12)
                goto LABEL_40;
              v12 = v16 - (char)v15;
              if ((char)(v16 - v15) != v12)
                goto LABEL_40;
              v9 = 0;
              ++v14;
              if (!--v13)
                goto LABEL_45;
            }
          }
LABEL_44:
          v9 = 0;
          goto LABEL_45;
        }
      }
      goto LABEL_40;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_190BD245C()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *v0;
  v2 = v0[5];
  if (*v0 >> 61 != 3)
  {
    sub_190AD166C();
    swift_allocError();
    v11 = v10;
    v31 = 0;
    v32 = 0xE000000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v1);
    sub_190AD16A8(v1);
    sub_190AED454(v1);
    *(_QWORD *)v11 = v2;
    *(_QWORD *)(v11 + 8) = 0x7265626D756ELL;
    *(_QWORD *)(v11 + 16) = 0xE600000000000000;
    *(_QWORD *)(v11 + 24) = v31;
    *(_QWORD *)(v11 + 32) = 0xE000000000000000;
    *(_BYTE *)(v11 + 80) = 10;
LABEL_57:
    swift_willThrow();
    return;
  }
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  v6 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v3) & 0xF;
  else
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_56:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v30 = v2;
    *(_QWORD *)(v30 + 8) = v4;
    *(_QWORD *)(v30 + 16) = v3;
    *(_BYTE *)(v30 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_57;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    sub_190B0E380();
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 0x10000) == 0)
      goto LABEL_47;
    goto LABEL_56;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    v9 = (sub_190B0E034(v8, v6) >> 16) & 1;
LABEL_46:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v9)
    {
LABEL_47:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_56;
  }
  v31 = *(_QWORD *)(v1 + 16);
  v32 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v5)
      goto LABEL_60;
    if (v5 == 1)
      goto LABEL_33;
    v13 = (BYTE1(v4) - 48);
    if (v13 > 9)
      goto LABEL_33;
    if (v5 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u)
        goto LABEL_33;
      LOWORD(v13) = 10 * v13 + (BYTE2(v4) - 48);
      v14 = v5 - 3;
      if (v14)
      {
        v15 = (unsigned __int8 *)&v31 + 3;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_33;
          v17 = (__int16)(10 * v13);
          if (v17 != 10 * (__int16)v13)
            goto LABEL_33;
          v13 = v17 + v16;
          if ((__int16)(v17 + v16) != v13)
            goto LABEL_33;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_46;
        }
      }
    }
LABEL_45:
    v9 = 0;
    goto LABEL_46;
  }
  if (v4 != 45)
  {
    if (!v5)
      goto LABEL_33;
    v18 = (v4 - 48);
    if (v18 > 9)
      goto LABEL_33;
    if (v5 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u)
        goto LABEL_33;
      LOWORD(v18) = 10 * v18 + (BYTE1(v4) - 48);
      v19 = v5 - 2;
      if (v19)
      {
        v20 = (unsigned __int8 *)&v31 + 2;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            goto LABEL_33;
          v22 = (__int16)(10 * v18);
          if (v22 != 10 * (__int16)v18)
            goto LABEL_33;
          v18 = v22 + v21;
          if ((__int16)(v22 + v21) != v18)
            goto LABEL_33;
          v9 = 0;
          ++v20;
          if (!--v19)
            goto LABEL_46;
        }
      }
    }
    goto LABEL_45;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      v12 = (BYTE1(v4) - 48);
      if (v12 <= 9)
      {
        if (v5 == 2)
        {
          v9 = 0;
          goto LABEL_46;
        }
        if ((BYTE2(v4) - 48) <= 9u)
        {
          LOWORD(v23) = -10 * v12 - (BYTE2(v4) - 48);
          v24 = v5 - 3;
          if (!v24)
            goto LABEL_45;
          v25 = (unsigned __int8 *)&v31 + 3;
          while (1)
          {
            v26 = *v25 - 48;
            if (v26 > 9)
              break;
            v27 = (__int16)(10 * v23);
            if (v27 != 10 * (__int16)v23)
              break;
            v23 = v27 - v26;
            if ((__int16)(v27 - v26) != v23)
              break;
            v9 = 0;
            ++v25;
            if (!--v24)
              goto LABEL_46;
          }
        }
      }
    }
LABEL_33:
    v9 = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

void sub_190BD2830()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v1 = *v0;
  v2 = v0[5];
  if (*v0 >> 61 != 3)
  {
    sub_190AD166C();
    swift_allocError();
    v11 = v10;
    v32 = 0;
    v33 = 0xE000000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v1);
    sub_190AD16A8(v1);
    sub_190AED454(v1);
    *(_QWORD *)v11 = v2;
    *(_QWORD *)(v11 + 8) = 0x7265626D756ELL;
    *(_QWORD *)(v11 + 16) = 0xE600000000000000;
    *(_QWORD *)(v11 + 24) = v32;
    *(_QWORD *)(v11 + 32) = 0xE000000000000000;
    *(_BYTE *)(v11 + 80) = 10;
LABEL_57:
    swift_willThrow();
    return;
  }
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  v6 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v3) & 0xF;
  else
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_56:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v31 = v2;
    *(_QWORD *)(v31 + 8) = v4;
    *(_QWORD *)(v31 + 16) = v3;
    *(_BYTE *)(v31 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_57;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v30 = sub_190B0E38C();
    swift_bridgeObjectRelease();
    if ((v30 & 0x100000000) == 0)
      goto LABEL_47;
    goto LABEL_56;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    v34 = ((unint64_t)sub_190B0E048(v8, v6) >> 32) & 1;
    v9 = v34;
LABEL_46:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if ((v9 & 1) == 0)
    {
LABEL_47:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_56;
  }
  v32 = *(_QWORD *)(v1 + 16);
  v33 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v5)
      goto LABEL_60;
    if (v5 == 1)
      goto LABEL_33;
    v13 = (BYTE1(v4) - 48);
    if (v13 > 9)
      goto LABEL_33;
    if (v5 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u)
        goto LABEL_33;
      v14 = 10 * v13 + (BYTE2(v4) - 48);
      v15 = v5 - 3;
      if (v15)
      {
        v16 = (unsigned __int8 *)&v32 + 3;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_33;
          v18 = 10 * v14;
          if (v18 != (int)v18)
            goto LABEL_33;
          v14 = v18 + v17;
          if (__OFADD__((_DWORD)v18, v17))
            goto LABEL_33;
          v9 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_46;
        }
      }
    }
LABEL_45:
    v9 = 0;
    goto LABEL_46;
  }
  if (v4 != 45)
  {
    if (!v5)
      goto LABEL_33;
    v19 = (v4 - 48);
    if (v19 > 9)
      goto LABEL_33;
    if (v5 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u)
        goto LABEL_33;
      v20 = 10 * v19 + (BYTE1(v4) - 48);
      v21 = v5 - 2;
      if (v21)
      {
        v22 = (unsigned __int8 *)&v32 + 2;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            goto LABEL_33;
          v24 = 10 * v20;
          if (v24 != (int)v24)
            goto LABEL_33;
          v20 = v24 + v23;
          if (__OFADD__((_DWORD)v24, v23))
            goto LABEL_33;
          v9 = 0;
          ++v22;
          if (!--v21)
            goto LABEL_46;
        }
      }
    }
    goto LABEL_45;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      v12 = (BYTE1(v4) - 48);
      if (v12 <= 9)
      {
        if (v5 == 2)
        {
          v9 = 0;
          goto LABEL_46;
        }
        if ((BYTE2(v4) - 48) <= 9u)
        {
          v25 = -10 * v12 - (BYTE2(v4) - 48);
          v26 = v5 - 3;
          if (!v26)
            goto LABEL_45;
          v27 = (unsigned __int8 *)&v32 + 3;
          while (1)
          {
            v28 = *v27 - 48;
            if (v28 > 9)
              break;
            v29 = 10 * v25;
            if (v29 != (int)v29)
              break;
            v25 = v29 - v28;
            if (__OFSUB__((_DWORD)v29, v28))
              break;
            v9 = 0;
            ++v27;
            if (!--v26)
              goto LABEL_46;
          }
        }
      }
    }
LABEL_33:
    v9 = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

void sub_190BD2BD4()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  __int16 v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *v0;
  v2 = v0[5];
  if (*v0 >> 61 != 3)
  {
    sub_190AD166C();
    swift_allocError();
    v11 = v10;
    v27 = 0;
    v28 = 0xE000000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v1);
    sub_190AD16A8(v1);
    sub_190AED454(v1);
    *(_QWORD *)v11 = v2;
    *(_QWORD *)(v11 + 8) = 0x7265626D756ELL;
    *(_QWORD *)(v11 + 16) = 0xE600000000000000;
    *(_QWORD *)(v11 + 24) = v27;
    *(_QWORD *)(v11 + 32) = 0xE000000000000000;
    *(_BYTE *)(v11 + 80) = 10;
LABEL_60:
    swift_willThrow();
    return;
  }
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  v6 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v3) & 0xF;
  else
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_59:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v26 = v2;
    *(_QWORD *)(v26 + 8) = v4;
    *(_QWORD *)(v26 + 16) = v3;
    *(_BYTE *)(v26 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_60;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    sub_190B0E450();
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 0x100) == 0)
      goto LABEL_50;
    goto LABEL_59;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    v9 = (sub_190B0E070(v8, v6) >> 8) & 1;
LABEL_49:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v9)
    {
LABEL_50:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_59;
  }
  v27 = *(_QWORD *)(v1 + 16);
  v28 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v5)
      goto LABEL_63;
    if (v5 == 1 || (BYTE1(v4) - 48) > 9u)
      goto LABEL_34;
    if (v5 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u)
        goto LABEL_34;
      v12 = (v4 >> 16) - 48 + 10 * ((v4 >> 8) - 48);
      v13 = v5 - 3;
      if (v13)
      {
        v14 = (unsigned __int8 *)&v27 + 3;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            goto LABEL_34;
          if (((10 * v12) & 0xF00) != 0)
            goto LABEL_34;
          v12 = (10 * v12) + v15;
          if (((v12 >> 8) & 1) != 0)
            goto LABEL_34;
          v9 = 0;
          ++v14;
          if (!--v13)
            goto LABEL_49;
        }
      }
    }
LABEL_48:
    v9 = 0;
    goto LABEL_49;
  }
  if (v4 != 45)
  {
    if (!v5 || (v4 - 48) > 9u)
      goto LABEL_34;
    if (v5 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u)
        goto LABEL_34;
      v16 = (v4 >> 8) - 48 + 10 * (v4 - 48);
      v17 = v5 - 2;
      if (v17)
      {
        v18 = (unsigned __int8 *)&v27 + 2;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_34;
          if (((10 * v16) & 0xF00) != 0)
            goto LABEL_34;
          v16 = (10 * v16) + v19;
          if (((v16 >> 8) & 1) != 0)
            goto LABEL_34;
          v9 = 0;
          ++v18;
          if (!--v17)
            goto LABEL_49;
        }
      }
    }
    goto LABEL_48;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v4) - 48) <= 9u && (-(BYTE1(v4) - 48) & 0xFFFFFF00) == 0)
    {
      if (v5 == 2)
      {
        v9 = 0;
        goto LABEL_49;
      }
      if ((BYTE2(v4) - 48) <= 9u && ((10 * (48 - BYTE1(v4))) & 0xF00) == 0)
      {
        v20 = (10 * (48 - BYTE1(v4))) - (BYTE2(v4) - 48);
        if ((v20 & 0xFFFFFF00) == 0)
        {
          v21 = v5 - 3;
          if (!v21)
            goto LABEL_48;
          v22 = (unsigned __int8 *)&v27 + 3;
          while (1)
          {
            v23 = *v22 - 48;
            if (v23 > 9)
              break;
            if (((10 * v20) & 0xF00) != 0)
              break;
            v20 = (10 * v20) - v23;
            if ((v20 & 0xFFFFFF00) != 0)
              break;
            v9 = 0;
            ++v22;
            if (!--v21)
              goto LABEL_49;
          }
        }
      }
    }
LABEL_34:
    v9 = 1;
    goto LABEL_49;
  }
  __break(1u);
LABEL_63:
  __break(1u);
}

void sub_190BD2FDC()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *v0;
  v2 = v0[5];
  if (*v0 >> 61 != 3)
  {
    sub_190AD166C();
    swift_allocError();
    v11 = v10;
    v27 = 0;
    v28 = 0xE000000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v1);
    sub_190AD16A8(v1);
    sub_190AED454(v1);
    *(_QWORD *)v11 = v2;
    *(_QWORD *)(v11 + 8) = 0x7265626D756ELL;
    *(_QWORD *)(v11 + 16) = 0xE600000000000000;
    *(_QWORD *)(v11 + 24) = v27;
    *(_QWORD *)(v11 + 32) = 0xE000000000000000;
    *(_BYTE *)(v11 + 80) = 10;
LABEL_60:
    swift_willThrow();
    return;
  }
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  v6 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v3) & 0xF;
  else
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_59:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v26 = v2;
    *(_QWORD *)(v26 + 8) = v4;
    *(_QWORD *)(v26 + 16) = v3;
    *(_BYTE *)(v26 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_60;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    sub_190B0E4EC();
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 0x10000) == 0)
      goto LABEL_50;
    goto LABEL_59;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    v9 = (sub_190B0E084(v8, v6) >> 16) & 1;
LABEL_49:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if (!v9)
    {
LABEL_50:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_59;
  }
  v27 = *(_QWORD *)(v1 + 16);
  v28 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v5)
      goto LABEL_63;
    if (v5 == 1)
      goto LABEL_34;
    v12 = (BYTE1(v4) - 48);
    if (v12 > 9)
      goto LABEL_34;
    if (v5 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u)
        goto LABEL_34;
      LOWORD(v12) = 10 * v12 + (BYTE2(v4) - 48);
      v13 = v5 - 3;
      if (v13)
      {
        v14 = (unsigned __int8 *)&v27 + 3;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            goto LABEL_34;
          if (((10 * (unsigned __int16)v12) & 0xF0000) != 0)
            goto LABEL_34;
          v12 = (unsigned __int16)(10 * v12) + v15;
          if ((v12 & 0x10000) != 0)
            goto LABEL_34;
          v9 = 0;
          ++v14;
          if (!--v13)
            goto LABEL_49;
        }
      }
    }
LABEL_48:
    v9 = 0;
    goto LABEL_49;
  }
  if (v4 != 45)
  {
    if (!v5)
      goto LABEL_34;
    v16 = (v4 - 48);
    if (v16 > 9)
      goto LABEL_34;
    if (v5 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u)
        goto LABEL_34;
      LOWORD(v16) = 10 * v16 + (BYTE1(v4) - 48);
      v17 = v5 - 2;
      if (v17)
      {
        v18 = (unsigned __int8 *)&v27 + 2;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_34;
          if (((10 * (unsigned __int16)v16) & 0xF0000) != 0)
            goto LABEL_34;
          v16 = (unsigned __int16)(10 * v16) + v19;
          if ((v16 & 0x10000) != 0)
            goto LABEL_34;
          v9 = 0;
          ++v18;
          if (!--v17)
            goto LABEL_49;
        }
      }
    }
    goto LABEL_48;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v4) - 48) <= 9u && (-(BYTE1(v4) - 48) & 0xFFFF0000) == 0)
    {
      if (v5 == 2)
      {
        v9 = 0;
        goto LABEL_49;
      }
      if ((BYTE2(v4) - 48) <= 9u
        && ((10 * (unsigned __int16)-(BYTE1(v4) - 48)) & 0xF0000) == 0)
      {
        v20 = (unsigned __int16)(-10 * (BYTE1(v4) - 48)) - (BYTE2(v4) - 48);
        if ((v20 & 0xFFFF0000) == 0)
        {
          v21 = v5 - 3;
          if (!v21)
            goto LABEL_48;
          v22 = (unsigned __int8 *)&v27 + 3;
          while (1)
          {
            v23 = *v22 - 48;
            if (v23 > 9)
              break;
            if (((10 * (unsigned __int16)v20) & 0xF0000) != 0)
              break;
            v20 = (unsigned __int16)(10 * v20) - v23;
            if ((v20 & 0xFFFF0000) != 0)
              break;
            v9 = 0;
            ++v22;
            if (!--v21)
              goto LABEL_49;
          }
        }
      }
    }
LABEL_34:
    v9 = 1;
    goto LABEL_49;
  }
  __break(1u);
LABEL_63:
  __break(1u);
}

void sub_190BD33EC()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v1 = *v0;
  v2 = v0[5];
  if (*v0 >> 61 != 3)
  {
    sub_190AD166C();
    swift_allocError();
    v11 = v10;
    v36 = 0;
    v37 = 0xE000000000000000;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    sub_190AEA618(v1);
    sub_190AD16A8(v1);
    sub_190AED454(v1);
    *(_QWORD *)v11 = v2;
    *(_QWORD *)(v11 + 8) = 0x7265626D756ELL;
    *(_QWORD *)(v11 + 16) = 0xE600000000000000;
    *(_QWORD *)(v11 + 24) = v36;
    *(_QWORD *)(v11 + 32) = 0xE000000000000000;
    *(_BYTE *)(v11 + 80) = 10;
LABEL_61:
    swift_willThrow();
    return;
  }
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  v6 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v3) & 0xF;
  else
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_60:
    sub_190AD166C();
    swift_allocError();
    *(_QWORD *)v35 = v2;
    *(_QWORD *)(v35 + 8) = v4;
    *(_QWORD *)(v35 + 16) = v3;
    *(_BYTE *)(v35 + 80) = 13;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    goto LABEL_61;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v34 = sub_190B0E584();
    swift_bridgeObjectRelease();
    if ((v34 & 0x100000000) == 0)
      goto LABEL_51;
    goto LABEL_60;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_190BE5CFC();
    v38 = ((unint64_t)sub_190B0E098(v8, v6) >> 32) & 1;
    v9 = v38;
LABEL_50:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if ((v9 & 1) == 0)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_60;
  }
  v36 = *(_QWORD *)(v1 + 16);
  v37 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v5)
      goto LABEL_64;
    if (v5 == 1)
      goto LABEL_35;
    v15 = (BYTE1(v4) - 48);
    if (v15 > 9)
      goto LABEL_35;
    if (v5 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u)
        goto LABEL_35;
      v16 = 10 * v15 + (BYTE2(v4) - 48);
      v17 = v5 - 3;
      if (v17)
      {
        v18 = (unsigned __int8 *)&v36 + 3;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_35;
          v20 = 10 * v16;
          if ((v20 & 0xFFFFFFFF00000000) != 0)
            goto LABEL_35;
          v16 = v20 + v19;
          if (__CFADD__((_DWORD)v20, v19))
            goto LABEL_35;
          v9 = 0;
          ++v18;
          if (!--v17)
            goto LABEL_50;
        }
      }
    }
LABEL_49:
    v9 = 0;
    goto LABEL_50;
  }
  if (v4 != 45)
  {
    if (!v5)
      goto LABEL_35;
    v21 = (v4 - 48);
    if (v21 > 9)
      goto LABEL_35;
    if (v5 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u)
        goto LABEL_35;
      v22 = 10 * v21 + (BYTE1(v4) - 48);
      v23 = v5 - 2;
      if (v23)
      {
        v24 = (unsigned __int8 *)&v36 + 2;
        while (1)
        {
          v25 = *v24 - 48;
          if (v25 > 9)
            goto LABEL_35;
          v26 = 10 * v22;
          if ((v26 & 0xFFFFFFFF00000000) != 0)
            goto LABEL_35;
          v22 = v26 + v25;
          if (__CFADD__((_DWORD)v26, v25))
            goto LABEL_35;
          v9 = 0;
          ++v24;
          if (!--v23)
            goto LABEL_50;
        }
      }
    }
    goto LABEL_49;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      v12 = BYTE1(v4) - 48;
      if ((BYTE1(v4) - 48) <= 9u)
      {
        v13 = v12 == 0;
        v14 = -v12;
        if (v13)
        {
          if (v5 == 2)
          {
            v9 = 0;
            goto LABEL_50;
          }
          v27 = BYTE2(v4) - 48;
          if ((BYTE2(v4) - 48) <= 9u)
          {
            v28 = 10 * v14;
            if ((v28 & 0xFFFFFFFF00000000) == 0)
            {
              v29 = v28 - v27;
              if (v28 >= v27)
              {
                v30 = v5 - 3;
                if (!v30)
                  goto LABEL_49;
                v31 = (unsigned __int8 *)&v36 + 3;
                while (1)
                {
                  v32 = *v31 - 48;
                  if (v32 > 9)
                    break;
                  v33 = 10 * v29;
                  if ((v33 & 0xFFFFFFFF00000000) != 0)
                    break;
                  v29 = v33 - v32;
                  if (v33 < v32)
                    break;
                  v9 = 0;
                  ++v31;
                  if (!--v30)
                    goto LABEL_50;
                }
              }
            }
          }
        }
      }
    }
LABEL_35:
    v9 = 1;
    goto LABEL_50;
  }
  __break(1u);
LABEL_64:
  __break(1u);
}

void sub_190BD37A8(void (*a1)(uint64_t, unint64_t, uint64_t), void (*a2)(uint64_t))
{
  unint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned int v21;
  uint64_t v22;
  unsigned __int8 v23;
  unint64_t v24;
  unint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  unsigned __int8 v28;
  unint64_t v29;
  unint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unsigned __int8 v38;
  char v40;
  char v41;
  uint64_t v42;

  v3 = *v2;
  v4 = v2[5];
  if (*v2 >> 61 != 3)
  {
    sub_190AD166C();
    OUTLINED_FUNCTION_38();
    v14 = v13;
    OUTLINED_FUNCTION_74();
    sub_190AEA618(v3);
    sub_190AD16A8(v3);
    sub_190AED454(v3);
    *(_QWORD *)v14 = v4;
    *(_QWORD *)(v14 + 8) = 0x7265626D756ELL;
    *(_QWORD *)(v14 + 16) = 0xE600000000000000;
    *(_QWORD *)(v14 + 24) = 0;
    *(_QWORD *)(v14 + 32) = 0xE000000000000000;
    *(_BYTE *)(v14 + 80) = 10;
LABEL_64:
    swift_willThrow();
    goto LABEL_65;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v8 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v6) & 0xF;
  else
    v9 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_63:
    sub_190AD166C();
    OUTLINED_FUNCTION_38();
    *(_QWORD *)v42 = v4;
    *(_QWORD *)(v42 + 8) = v7;
    *(_QWORD *)(v42 + 16) = v6;
    *(_BYTE *)(v42 + 80) = 13;
    OUTLINED_FUNCTION_74();
    goto LABEL_64;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    a1(v7, v6, 10);
    v41 = v40;
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
      goto LABEL_52;
    goto LABEL_63;
  }
  if ((v6 & 0x2000000000000000) == 0)
  {
    if ((v7 & 0x1000000000000000) != 0)
      v10 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v10 = sub_190BE5CFC();
    a2(v10);
    v12 = v11 & 1;
LABEL_51:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    if ((v12 & 1) == 0)
    {
LABEL_52:
      swift_bridgeObjectRelease();
LABEL_65:
      OUTLINED_FUNCTION_9_49();
      return;
    }
    goto LABEL_63;
  }
  if (*(_QWORD *)(v3 + 16) == 43)
  {
    if (!v8)
      goto LABEL_68;
    if (v8 == 1)
      goto LABEL_35;
    OUTLINED_FUNCTION_12();
    if (!v18 && v17)
      goto LABEL_35;
    v21 = v20;
    if (v19 != 2)
    {
      OUTLINED_FUNCTION_12();
      if (!v18 && v17)
        goto LABEL_35;
      v24 = 10 * v21 + v23;
      if (v22 != 3)
      {
        OUTLINED_FUNCTION_10_43();
        while (1)
        {
          OUTLINED_FUNCTION_37();
          if (!v18 && v17)
            goto LABEL_35;
          if (!is_mul_ok(v24, v25))
            goto LABEL_35;
          v17 = __CFADD__(10 * v24, v26);
          v24 = 10 * v24 + v26;
          if (v17)
            goto LABEL_35;
          v12 = 0;
          OUTLINED_FUNCTION_6_52();
          if (v18)
            goto LABEL_51;
        }
      }
    }
LABEL_50:
    v12 = 0;
    goto LABEL_51;
  }
  if (*(_QWORD *)(v3 + 16) != 45)
  {
    if (!v8 || (v7 - 48) > 9u)
      goto LABEL_35;
    if (v8 != 1)
    {
      OUTLINED_FUNCTION_12();
      if (!v18 && v17)
        goto LABEL_35;
      v29 = 10 * (v7 - 48) + v28;
      if (v27 != 2)
      {
        while (1)
        {
          OUTLINED_FUNCTION_37();
          if (!v18 && v17)
            goto LABEL_35;
          if (!is_mul_ok(v29, v30))
            goto LABEL_35;
          v17 = __CFADD__(10 * v29, v31);
          v29 = 10 * v29 + v31;
          if (v17)
            goto LABEL_35;
          v12 = 0;
          OUTLINED_FUNCTION_6_52();
          if (v18)
            goto LABEL_51;
        }
      }
    }
    goto LABEL_50;
  }
  if (v8)
  {
    if (v8 != 1)
    {
      OUTLINED_FUNCTION_12();
      if ((v18 || !v17) && !v16)
      {
        if (v15 == 2)
        {
          v12 = 0;
          goto LABEL_51;
        }
        OUTLINED_FUNCTION_20_26();
        if (v18 || !v17)
        {
          OUTLINED_FUNCTION_19_30();
          if (v18)
          {
            v35 = 10 * v33;
            v36 = v35 - v34;
            if (v35 >= v34)
            {
              if (v32 == 3)
                goto LABEL_50;
              OUTLINED_FUNCTION_10_43();
              while (1)
              {
                OUTLINED_FUNCTION_37();
                if (!v18 && v17)
                  break;
                if (!is_mul_ok(v36, v37))
                  break;
                v17 = 10 * v36 >= v38;
                v36 = 10 * v36 - v38;
                if (!v17)
                  break;
                v12 = 0;
                OUTLINED_FUNCTION_6_52();
                if (v18)
                  goto LABEL_51;
              }
            }
          }
        }
      }
    }
LABEL_35:
    v12 = 1;
    goto LABEL_51;
  }
  __break(1u);
LABEL_68:
  __break(1u);
}

void sub_190BD3B10()
{
  sub_190BD2090();
}

void sub_190BD3B24()
{
  sub_190BD245C();
}

void sub_190BD3B38()
{
  sub_190BD2830();
}

uint64_t sub_190BD3B4C()
{
  return sub_190BE6128();
}

void sub_190BD3B60()
{
  sub_190BD37A8((void (*)(uint64_t, unint64_t, uint64_t))sub_190B0E444, (void (*)(uint64_t))sub_190B0E05C);
}

void sub_190BD3B84()
{
  sub_190BD2BD4();
}

void sub_190BD3B98()
{
  sub_190BD2FDC();
}

void sub_190BD3BAC()
{
  sub_190BD33EC();
}

uint64_t sub_190BD3BC0()
{
  return sub_190BE6134();
}

id sub_190BD3BD4()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  result = objc_msgSend(v0, sel_setFormatOptions_, 1907);
  qword_1ED02F158 = (uint64_t)v0;
  return result;
}

uint64_t sub_190BD3C20()
{
  uint64_t result;

  qword_1EE200790 = (uint64_t)&type metadata for _JSONKey;
  qword_1EE200798 = sub_190AF1C90();
  result = swift_allocObject();
  qword_1EE200778 = result;
  *(_QWORD *)(result + 16) = 0x7265707573;
  *(_QWORD *)(result + 24) = 0xE500000000000000;
  *(_QWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 40) = 1;
  return result;
}

uint64_t sub_190BD3C98()
{
  return sub_190BE5FC0();
}

uint64_t sub_190BD3CE0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

void sub_190BD3D0C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_190BD3C8C();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
}

uint64_t sub_190BD3D38()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_190BD3D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;

  result = sub_190BD3C98();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_190BD3D70()
{
  sub_190AF1C90();
  return sub_190BE6404();
}

uint64_t sub_190BD3D98()
{
  sub_190AF1C90();
  return sub_190BE6410();
}

uint64_t sub_190BD3DC0()
{
  uint64_t v0;

  sub_190AED454(*(_QWORD *)(v0 + 16));
  OUTLINED_FUNCTION_29_22();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_91_0();
  return swift_deallocObject();
}

uint64_t sub_190BD3DEC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190BD3E10(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_190BCD520(a1, *(uint64_t (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_190BD3E18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190BCD674(a1, a2, *(void (**)(_QWORD *__return_ptr, uint64_t))(v2 + 16));
}

uint64_t sub_190BD3E20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190AC4BCC();
  *a1 = result;
  return result;
}

uint64_t method lookup function for _TeaJSONDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _TeaJSONDecoder.userInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of _TeaJSONDecoder.userInfo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of _TeaJSONDecoder.userInfo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of _TeaJSONDecoder.dateDecodingStrategy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of _TeaJSONDecoder.dateDecodingStrategy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of _TeaJSONDecoder.keyDecodingStrategy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of _TeaJSONDecoder.keyDecodingStrategy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of _TeaJSONDecoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

void destroy for _TeaJSONDecoder.DateDecodingStrategy(uint64_t a1)
{
  sub_190AEE528(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13TeaFoundation15_TeaJSONDecoderC20DateDecodingStrategyOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190AEA4F0(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for _TeaJSONDecoder.DateDecodingStrategy(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190AEA4F0(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_190AEE528(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for _TeaJSONDecoder.DateDecodingStrategy(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_190AEE528(v4, v5, v6);
  return a1;
}

_QWORD *destroy for _TeaJSONDecoder.KeyDecodingStrategy(_QWORD *result)
{
  if (*result >= 0xFFFFFFFFuLL)
    return (_QWORD *)swift_release();
  return result;
}

void _s13TeaFoundation15_TeaJSONDecoderC19KeyDecodingStrategyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
  }
  OUTLINED_FUNCTION_0();
}

unint64_t *assignWithCopy for _TeaJSONDecoder.KeyDecodingStrategy(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for _TeaJSONDecoder.KeyDecodingStrategy(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _TeaJSONDecoder.KeyDecodingStrategy(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for _TeaJSONDecoder.KeyDecodingStrategy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t destroy for _JSONDecoder(uint64_t a1)
{
  sub_190AED454(*(_QWORD *)a1);
  sub_190AEE528(*(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _JSONDecoder(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  sub_190AEA618(*(_QWORD *)a2);
  *(_QWORD *)a1 = v4;
  v5 = *(void **)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_190AEA4F0(v5, v6, v7);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for _JSONDecoder(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  sub_190AEA618(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_190AED454(v5);
  v6 = *(void **)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  sub_190AEA4F0(v6, v7, v8);
  v9 = *(void **)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v8;
  sub_190AEE528(v9, v10, v11);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for _JSONDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  sub_190AED454(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_190AEE528(v6, v7, v8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for _JSONDecoder()
{
  return &type metadata for _JSONDecoder;
}

uint64_t sub_190BD43A0()
{
  uint64_t v0;

  sub_190AED454(*(_QWORD *)(v0 + 16));
  OUTLINED_FUNCTION_124();
  sub_190AEE528(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_91_0();
  return swift_deallocObject();
}

uint64_t sub_190BD43D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_124();
  sub_190AEE528(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  OUTLINED_FUNCTION_28_22();
  return swift_deallocObject();
}

uint64_t sub_190BD4408()
{
  OUTLINED_FUNCTION_124();
  return swift_deallocObject();
}

void sub_190BD4428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_190AAC38C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_0();
}

uint64_t initializeWithCopy for _JSONKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for _JSONKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for _JSONKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for _JSONKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _JSONKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _JSONKey()
{
  return &type metadata for _JSONKey;
}

uint64_t sub_190BD45D8(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_190AEA4F0(v4, v5, v6);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_190AEE528(v7, v8, v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190BD4680(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  char v7;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_190AEE528(v5, v6, v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190BD46E8(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_190BD4728(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeWithCopy for JSONUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AEA4F0(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for JSONUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_190AEA4F0(v4, v5, v6);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_190AEE528(v7, v8, v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSONUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  char v7;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_190AEE528(v5, v6, v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONUnkeyedDecodingContainer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONUnkeyedDecodingContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONUnkeyedDecodingContainer()
{
  return &type metadata for JSONUnkeyedDecodingContainer;
}

uint64_t destroy for JSONSingleValueDecodingContainer(uint64_t a1)
{
  sub_190AED454(*(_QWORD *)a1);
  swift_bridgeObjectRelease();
  sub_190AEE528(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSONSingleValueDecodingContainer(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)a2;
  sub_190AEA618(*(_QWORD *)a2);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190AEA4F0(v6, v7, v8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for JSONSingleValueDecodingContainer(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  sub_190AEA618(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_190AED454(v5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_190AEA4F0(v6, v7, v8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v11 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_190AEE528(v9, v10, v11);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSONSingleValueDecodingContainer(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_190AED454(v4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_190AEE528(v6, v7, v8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for JSONSingleValueDecodingContainer()
{
  return &type metadata for JSONSingleValueDecodingContainer;
}

uint64_t sub_190BD4B9C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

id FrameworkAssembly.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FrameworkAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t *destroy for HttpResponse(uint64_t *result)
{
  unint64_t v1;

  v1 = result[1];
  if ((v1 & 0x1000000000000000) == 0)
    return (uint64_t *)sub_190B001D4(*result, v1);
  return result;
}

uint64_t initializeWithCopy for HttpResponse(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = a2[1];
  if ((v3 & 0x1000000000000000) != 0)
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    v4 = *a2;
    v5 = a2[2];
    v6 = a2[3];
    sub_190B001A4(*a2, a2[1]);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
  }
  return a1;
}

uint64_t *assignWithCopy for HttpResponse(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = a1[1];
  v5 = a2[1];
  if ((v4 & 0x1000000000000000) != 0)
  {
    if ((v5 & 0x1000000000000000) == 0)
    {
      v11 = *a2;
      v13 = a2[2];
      v12 = a2[3];
      sub_190B001A4(v11, v5);
      *a1 = v11;
      a1[1] = v5;
      a1[2] = v13;
      a1[3] = v12;
      return a1;
    }
LABEL_7:
    v14 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v14;
    return a1;
  }
  if ((v5 & 0x1000000000000000) != 0)
  {
    sub_190B001D4(*a1, v4);
    goto LABEL_7;
  }
  v6 = *a2;
  v8 = a2[2];
  v7 = a2[3];
  sub_190B001A4(v6, v5);
  v9 = *a1;
  v10 = a1[1];
  *a1 = v6;
  a1[1] = v5;
  a1[2] = v8;
  a1[3] = v7;
  sub_190B001D4(v9, v10);
  return a1;
}

uint64_t assignWithTake for HttpResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a1 + 8);
  if ((v4 & 0x1000000000000000) != 0)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if ((v5 & 0x1000000000000000) != 0)
  {
    sub_190B001D4(*(_QWORD *)a1, v4);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_190B001D4(v6, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HttpResponse(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  if ((_DWORD)a2)
  {
    if ((_DWORD)a2 == 1 || !*(_BYTE *)(a1 + 32))
    {
      v2 = ((2 * ((*(_QWORD *)(a1 + 8) & 0x1000000000000000) != 0)) | ((*(_QWORD *)(a1 + 8) >> 60) >> 1) & 1) ^ 3;
      if (v2 >= 2)
        v2 = -1;
      if (v2 + 1 >= 2)
        return v2;
      else
        return 0;
    }
    else
    {
      return (*(_DWORD *)a1 + 2);
    }
  }
  return a2;
}

uint64_t storeEnumTagSinglePayload for HttpResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_OWORD *)result = xmmword_190BF0CA0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_190BD4E5C(uint64_t a1)
{
  return ((int)(*(_QWORD *)(a1 + 8) >> 29) >> 31) & (((int)(*(_QWORD *)(a1 + 8) >> 60 << 30) >> 31)
                                                   - 2
                                                   * ((*(_QWORD *)(a1 + 8) & 0x1000000000000000) != 0)
                                                   + 4);
}

uint64_t destroy for HttpResponse.Body(uint64_t a1)
{
  return sub_190B001D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *initializeWithCopy for HttpResponse.Body(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_190B001A4(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for HttpResponse.Body(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_190B001A4(*a2, v4);
  v7 = *a1;
  v8 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_190B001D4(v7, v8);
  return a1;
}

uint64_t assignWithTake for HttpResponse.Body(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  sub_190B001D4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HttpResponse.Body(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 3 && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2;
    }
    else
    {
      v2 = ((2 * ((*(_QWORD *)(a1 + 8) & 0x1000000000000000) != 0)) | ((*(_QWORD *)(a1 + 8) >> 60) >> 1) & 1) ^ 3;
      if (v2 >= 2)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for HttpResponse.Body(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 3)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 3)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((2 * (a2 & 1)) | 1) << 60;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_190BD501C(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 8) >> 61) & 1;
}

uint64_t sub_190BD5028(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x2000000000000000uLL;
  return result;
}

uint64_t sub_190BD5038(uint64_t a1, unint64_t a2)
{
  if ((~a2 & 0x3000000000000000) != 0)
    return sub_190B001A4(a1, a2);
  return a1;
}

uint64_t Array.first<A>(ofType:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  sub_190BE59A8();
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v5);
  sub_190BE5240();
  v6 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a2, v6 ^ 1u, 1, a1);
}

uint64_t sub_190BD5134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *))(v9 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = swift_dynamicCast();
  if ((_DWORD)v10)
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v10;
}

uint64_t sub_190BD5210(uint64_t a1)
{
  uint64_t v1;

  return sub_190BD5134(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t Array.indexes(where:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a2;
  v36 = a1;
  v30 = *(_QWORD *)(a4 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_15_33();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = sub_190BE59A8();
  v35 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_16_0();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v29 - v17;
  v31 = a5;
  sub_190BE4928();
  v39 = a3;
  v19 = OUTLINED_FUNCTION_19_31();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v19);
  sub_190BE521C();
  v39 = v40;
  sub_190BE5EA0();
  sub_190BE5E7C();
  sub_190BE5E94();
  sub_190BE5E88();
  v20 = (uint64_t)v18;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
  v21(v20, v15, v11);
  if (__swift_getEnumTagSinglePayload(v20, 1, TupleTypeMetadata2) == 1)
    return swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v30 + 32);
  v34 = v11;
  v35 = v22;
  v23 = a4;
  v24 = v30;
  v32 = v21;
  v33 = TupleTypeMetadata2;
  while (1)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v5, v20 + *(int *)(TupleTypeMetadata2 + 48), v23);
    v25 = v38;
    v26 = v36(v5);
    if (v25)
      break;
    v38 = 0;
    if ((v26 & 1) != 0)
      sub_190BE491C();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v5, v23);
    sub_190BE5E88();
    v32(v20, v15, v34);
    TupleTypeMetadata2 = v33;
    if (__swift_getEnumTagSinglePayload(v20, 1, v33) == 1)
      return swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v5, v23);
  swift_bridgeObjectRelease();
  v28 = sub_190BE4934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v31, v28);
}

Swift::String_optional __swiftcall Array.jsonRepresentation(options:)(NSJSONWritingOptions options)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  Swift::String_optional result;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_190BE5060();
  OUTLINED_FUNCTION_28();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_15_33();
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_190BE5300();
  v17[0] = 0;
  v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, options, v17);

  v6 = v17[0];
  if (v5)
  {
    v7 = sub_190BE46F4();
    v9 = v8;

    sub_190BE5048();
    v10 = sub_190BE5018();
    v5 = v11;
    sub_190AEF3F4(v7, v9);
  }
  else
  {
    v12 = v6;
    v13 = (void *)sub_190BE4544();

    swift_willThrow();
    v10 = 0;
  }
  v14 = v10;
  v15 = v5;
  result.value._object = v15;
  result.value._countAndFlagsBits = v14;
  return result;
}

uint64_t Array<A>.average.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  char v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t AssociatedTypeWitness;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;

  v56 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_27();
  v6 = MEMORY[0x1E0C80A78](v5);
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_0();
  v57 = v8 - v9;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_13();
  v58 = v11;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_13();
  v62 = v13;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_13();
  v61 = v15;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_13();
  v59 = v17;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_13();
  v60 = v19;
  OUTLINED_FUNCTION_13_0();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v53 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v53 - v24;
  v64 = a1;
  v26 = OUTLINED_FUNCTION_87();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v26);
  result = sub_190BE5798();
  if ((result & 1) == 0)
  {
    v54 = a1;
    Array<A>.total.getter(a1, a2);
    v28 = sub_190BE5AD4();
    OUTLINED_FUNCTION_4_48((uint64_t)v23);
    if ((v28 & 1) != 0)
    {
      v29 = OUTLINED_FUNCTION_2_71();
      OUTLINED_FUNCTION_0_77((uint64_t)v23);
      if (v29 > 64)
      {
        v30 = v60;
        OUTLINED_FUNCTION_4_48(v60);
        v64 = 0x8000000000000000;
        if ((OUTLINED_FUNCTION_6_53() & 1) != 0)
        {
          v31 = OUTLINED_FUNCTION_2_71();
          v32 = v30;
          v33 = v54;
          v34 = v62;
          if (v31 >= 64)
          {
            sub_190AD1EA4();
            OUTLINED_FUNCTION_7_52();
            sub_190BE5A98();
            v35 = OUTLINED_FUNCTION_5_47();
            OUTLINED_FUNCTION_0_77(v7);
            result = OUTLINED_FUNCTION_0_77(v60);
            goto LABEL_25;
          }
        }
        else
        {
          v45 = OUTLINED_FUNCTION_6_53();
          v46 = OUTLINED_FUNCTION_2_71();
          if ((v45 & 1) != 0)
          {
            v53 = v7;
            if (v46 > 64)
            {
              sub_190AD1EA4();
              OUTLINED_FUNCTION_7_52();
              sub_190BE5A98();
              v35 = OUTLINED_FUNCTION_5_47();
              OUTLINED_FUNCTION_0_77(v7);
              result = OUTLINED_FUNCTION_0_77(v30);
              v7 = v53;
              v33 = v54;
              v34 = v62;
LABEL_25:
              v36 = v61;
              if ((v35 & 1) != 0)
                goto LABEL_38;
LABEL_9:
              v37 = OUTLINED_FUNCTION_2_71();
              OUTLINED_FUNCTION_4_48(v36);
              if (v37 < 65)
              {
                v38 = OUTLINED_FUNCTION_2_71();
                OUTLINED_FUNCTION_0_77(v36);
                if (v38 != 64 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
                  goto LABEL_20;
              }
              else
              {
                OUTLINED_FUNCTION_0_77(v36);
              }
              v39 = v7;
              OUTLINED_FUNCTION_4_48(v34);
              v64 = 0x7FFFFFFFFFFFFFFFLL;
              v40 = sub_190BE5AD4();
              v41 = sub_190BE5AC8();
              if ((v40 & 1) != 0)
              {
                if (v41 > 64)
                {
                  sub_190AD1EA4();
                  OUTLINED_FUNCTION_7_52();
                  OUTLINED_FUNCTION_18_32();
                  v42 = sub_190BE4F34();
                  OUTLINED_FUNCTION_0_77(v40);
                  v43 = v34;
LABEL_19:
                  OUTLINED_FUNCTION_0_77(v43);
                  if ((v42 & 1) == 0)
                    goto LABEL_20;
                  __break(1u);
LABEL_37:
                  result = OUTLINED_FUNCTION_0_77(v34);
LABEL_38:
                  __break(1u);
                  return result;
                }
              }
              else if (v41 > 63)
              {
                v63 = 0x7FFFFFFFFFFFFFFFLL;
                v44 = v59;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v59, v34, a2);
                sub_190AD1EA4();
                v34 = v58;
                OUTLINED_FUNCTION_18_32();
                v42 = OUTLINED_FUNCTION_5_47();
                OUTLINED_FUNCTION_0_77(v34);
                v43 = v44;
                goto LABEL_19;
              }
              sub_190BE5ABC();
              OUTLINED_FUNCTION_0_77(v34);
LABEL_20:
              OUTLINED_FUNCTION_10_44();
              OUTLINED_FUNCTION_0_77((uint64_t)v25);
              return MEMORY[0x194015650](v33, a2);
            }
            swift_getAssociatedConformanceWitness();
            sub_190BE6230();
            v49 = v59;
            OUTLINED_FUNCTION_17_26();
            v50 = OUTLINED_FUNCTION_5_47();
            OUTLINED_FUNCTION_0_77(v49);
            v34 = v57;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v57, v30, a2);
            if ((v50 & 1) != 0)
              goto LABEL_37;
            v51 = v64;
            v52 = OUTLINED_FUNCTION_10_44();
            result = OUTLINED_FUNCTION_0_77(v34);
            v48 = v52 < v51;
            v7 = v53;
            v33 = v54;
            v34 = v62;
LABEL_32:
            v36 = v61;
            if (v48)
              goto LABEL_38;
            goto LABEL_9;
          }
          v33 = v54;
          v34 = v62;
          if (v46 >= 64)
          {
            OUTLINED_FUNCTION_0_77(v60);
            v36 = v61;
            goto LABEL_9;
          }
          v32 = v60;
        }
        v47 = OUTLINED_FUNCTION_10_44();
        result = OUTLINED_FUNCTION_0_77(v32);
        v48 = v47 < v64;
        goto LABEL_32;
      }
    }
    else
    {
      OUTLINED_FUNCTION_0_77((uint64_t)v23);
    }
    v33 = v54;
    v36 = v61;
    v34 = v62;
    goto LABEL_9;
  }
  return result;
}

void Array<A>.uniqueInsert(_:at:)(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_16_34();
}

void sub_190BD5C80()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = OUTLINED_FUNCTION_21_28();
  OUTLINED_FUNCTION_16_34();
}

void sub_190BD5CAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_190BE5678();
  *(_OWORD *)(v7 - 128) = *(_OWORD *)(v7 - 112);
  *(_QWORD *)(v7 - 136) = v2;
  sub_190ADD190();
  if ((sub_190BE5864() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    *v0 = v1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v3, v4);
    sub_190BE53E4();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_0_0();
}

BOOL sub_190BD5D38()
{
  return sub_190BD5E28();
}

void Array<A>.uniqueAppend(_:)(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_4_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  OUTLINED_FUNCTION_16_34();
}

uint64_t sub_190BD5DC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_21_28();
  swift_bridgeObjectRelease();
  *v0 = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v2);
  return sub_190BE53D8();
}

BOOL sub_190BD5E28()
{
  return (sub_190BE4FD0() & 1) == 0;
}

uint64_t Node.isLinked.getter()
{
  _QWORD *v0;
  uint64_t result;

  OUTLINED_FUNCTION_8_45();
  OUTLINED_FUNCTION_20_0();
  if (!*v0)
  {
    OUTLINED_FUNCTION_20_0();
    result = OUTLINED_FUNCTION_11_35();
    if (!result)
      return result;
    swift_release();
  }
  return 1;
}

void Node.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_45();
  OUTLINED_FUNCTION_20_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 40))(v1, a1);
  swift_endAccess();
  OUTLINED_FUNCTION_67();
}

uint64_t (*Node.value.modify())()
{
  OUTLINED_FUNCTION_20_0();
  return j_j__swift_endAccess;
}

void Node.next.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
  OUTLINED_FUNCTION_1_6();
  *v3 = a1;
  swift_release();
  OUTLINED_FUNCTION_61();
}

uint64_t (*Node.next.modify())()
{
  OUTLINED_FUNCTION_8_45();
  OUTLINED_FUNCTION_20_0();
  return j__swift_endAccess;
}

uint64_t sub_190BD5FCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_190BD6020()
{
  swift_beginAccess();
  return swift_weakAssign();
}

void Node.previous.getter()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_11_35();
  OUTLINED_FUNCTION_61();
}

void Node.previous.setter()
{
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_14_34();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_61();
}

void (*Node.previous.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = *(_QWORD *)(*(_QWORD *)v1 + 104);
  OUTLINED_FUNCTION_20_0();
  v3[3] = OUTLINED_FUNCTION_11_35();
  return sub_190BD6154;
}

void sub_190BD6154(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_weakAssign();
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_2();
  }
  free(v3);
}

uint64_t DoublyLinkedList.tail.getter()
{
  OUTLINED_FUNCTION_20_0();
  return swift_retain();
}

uint64_t DoublyLinkedList.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t DoublyLinkedList.__deallocating_deinit()
{
  DoublyLinkedList.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190BD6238()
{
  return 8;
}

_QWORD *sub_190BD6244(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for Node()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Node.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for DoublyLinkedList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DoublyLinkedList.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void JSONDecodingError.description.getter()
{
  uint64_t v0;
  _BYTE v1[96];

  sub_190BD6AA8(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_190BD62C4()
{
  uint64_t v1;

  sub_190BE5C54();
  OUTLINED_FUNCTION_17_27();
  OUTLINED_FUNCTION_8_46();
  OUTLINED_FUNCTION_3_66();
  OUTLINED_FUNCTION_7_53(v1);
  OUTLINED_FUNCTION_0_78();
  OUTLINED_FUNCTION_29_23();
  OUTLINED_FUNCTION_14_35();
  OUTLINED_FUNCTION_12_29();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_22_31();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_29();
  return 0;
}

uint64_t sub_190BD6AA8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for JSONDecodingError(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for JSONDecodingError(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(unsigned __int8 *)(a2 + 80);
  while (2)
  {
    switch(v4)
    {
      case 0:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 80) = 0;
        goto LABEL_22;
      case 1:
        v5 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v5;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v6 = 1;
        goto LABEL_20;
      case 2:
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v6 = 2;
        goto LABEL_20;
      case 3:
        v8 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v8;
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        v9 = 3;
        goto LABEL_12;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        v6 = 4;
        goto LABEL_20;
      case 5:
        v10 = *(void **)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v10;
        v11 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v11;
        *(_BYTE *)(a1 + 80) = 5;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        v12 = v10;
        goto LABEL_22;
      case 6:
        v13 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v13;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v6 = 6;
        goto LABEL_20;
      case 7:
        v14 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v14;
        v9 = 7;
LABEL_12:
        *(_BYTE *)(a1 + 80) = v9;
        goto LABEL_22;
      case 8:
        v15 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v15;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v6 = 8;
        goto LABEL_20;
      case 9:
        v16 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v16;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v6 = 9;
        goto LABEL_20;
      case 10:
        v17 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v17;
        v18 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v18;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v19 = 10;
        goto LABEL_18;
      case 11:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v20 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 32) = v20;
        v21 = v20;
        v22 = **(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8);
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        v22(a1 + 8, a2 + 8, v21);
        v23 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v23;
        v24 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = v24;
        v6 = 11;
        goto LABEL_20;
      case 12:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v25 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = v25;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        v19 = 12;
LABEL_18:
        *(_BYTE *)(a1 + 80) = v19;
        _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
        break;
      case 13:
        v26 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v26;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v6 = 13;
LABEL_20:
        *(_BYTE *)(a1 + 80) = v6;
        break;
      default:
        v4 = *(_DWORD *)a2 + 14;
        continue;
    }
    break;
  }
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_22:
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for JSONDecodingError(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  char v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 80);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 7:
          break;
        case 1:
        case 2:
        case 4:
        case 6:
        case 8:
        case 9:
        case 13:
          swift_bridgeObjectRelease();
          break;
        case 3:
          __swift_destroy_boxed_opaque_existential_1(a1);
          break;
        case 5:
          swift_bridgeObjectRelease();

          break;
        case 10:
        case 12:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 11:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(a1 + 8);
          swift_bridgeObjectRelease();
          break;
        default:
          v4 = *(_DWORD *)a1 + 14;
          continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 80);
    while (2)
    {
      switch(v5)
      {
        case 0:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_BYTE *)(a1 + 80) = 0;
          goto LABEL_31;
        case 1:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 1;
          goto LABEL_29;
        case 2:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 2;
          goto LABEL_29;
        case 3:
          v7 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 24) = v7;
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          v8 = 3;
          goto LABEL_21;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          v6 = 4;
          goto LABEL_29;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v9 = *(void **)(a2 + 8);
          *(_QWORD *)(a1 + 8) = v9;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_BYTE *)(a1 + 80) = 5;
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          v10 = v9;
          goto LABEL_31;
        case 6:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 6;
          goto LABEL_29;
        case 7:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v8 = 7;
LABEL_21:
          *(_BYTE *)(a1 + 80) = v8;
          goto LABEL_31;
        case 8:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 8;
          goto LABEL_29;
        case 9:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 9;
          goto LABEL_29;
        case 10:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          v11 = 10;
          goto LABEL_27;
        case 11:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v12 = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 32) = v12;
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          v13(a1 + 8, a2 + 8, v12);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          v6 = 11;
          goto LABEL_29;
        case 12:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          v11 = 12;
LABEL_27:
          *(_BYTE *)(a1 + 80) = v11;
          _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
          break;
        case 13:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v6 = 13;
LABEL_29:
          *(_BYTE *)(a1 + 80) = v6;
          break;
        default:
          v5 = *(_DWORD *)a2 + 14;
          continue;
      }
      break;
    }
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_31:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

void *__swift_memcpy81_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t assignWithTake for JSONDecodingError(uint64_t a1, _OWORD *a2)
{
  int v4;
  int v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if ((_OWORD *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 80);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 7:
          break;
        case 1:
        case 2:
        case 4:
        case 6:
        case 8:
        case 9:
        case 13:
          swift_bridgeObjectRelease();
          break;
        case 3:
          __swift_destroy_boxed_opaque_existential_1(a1);
          break;
        case 5:
          swift_bridgeObjectRelease();

          break;
        case 10:
        case 12:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 11:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(a1 + 8);
          swift_bridgeObjectRelease();
          break;
        default:
          v4 = *(_DWORD *)a1 + 14;
          continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    v5 = *((unsigned __int8 *)a2 + 80);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          break;
        case 1:
          *(_OWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
          v6 = 1;
          break;
        case 2:
          *(_OWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
          v6 = 2;
          break;
        case 3:
          v7 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v7;
          *(_OWORD *)(a1 + 32) = a2[2];
          v6 = 3;
          break;
        case 4:
          v8 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v8;
          v6 = 4;
          break;
        case 5:
          v9 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v9;
          v6 = 5;
          break;
        case 6:
          *(_OWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
          v6 = 6;
          break;
        case 7:
          *(_OWORD *)a1 = *a2;
          v6 = 7;
          break;
        case 8:
          *(_OWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
          v6 = 8;
          break;
        case 9:
          *(_OWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
          v6 = 9;
          break;
        case 10:
          v10 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v10;
          *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
          v6 = 10;
          break;
        case 11:
          memcpy((void *)a1, a2, 0x50uLL);
          v6 = 11;
          break;
        case 12:
          v11 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v11;
          *(_OWORD *)(a1 + 32) = a2[2];
          v6 = 12;
          break;
        case 13:
          *(_OWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
          v6 = 13;
          break;
        default:
          v5 = *(_DWORD *)a2 + 14;
          continue;
      }
      break;
    }
    *(_BYTE *)(a1 + 80) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONDecodingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF3 && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 243);
  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 >= 0xE)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSONDecodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_BYTE *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 243;
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = -(char)a2;
  }
  return result;
}

uint64_t sub_190BD73A4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 80);
  if (result >= 0xE)
    return (*(_DWORD *)a1 + 14);
  return result;
}

uint64_t sub_190BD73C0(uint64_t result, unsigned int a2)
{
  if (a2 > 0xD)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 14;
    LOBYTE(a2) = 14;
  }
  *(_BYTE *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONDecodingError()
{
  return &type metadata for JSONDecodingError;
}

uint64_t LLVMFuzzerTestOneInput(uint64_t a1, int a2)
{
  fuzzJSONDecoder(Data:Size:)(a1, a2);
  return 0;
}

uint64_t fuzzJSONDecoder(Data:Size:)(uint64_t a1, int a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  v2 = MEMORY[0x19401499C](a1, a2);
  v4 = v3;
  type metadata accessor for JSONParser();
  swift_allocObject();
  sub_190AFCA4C(v2, v4);
  sub_190AFCBE4(v2, v4);
  sub_190AFCAF0(&v6);
  sub_190AED454(v6);
  OUTLINED_FUNCTION_3_67();
  swift_release();
  return 0;
}

uint64_t sub_190BD74C0(uint64_t a1)
{
  return sub_190AA49CC(a1, 8, &qword_1EE2007A8, &qword_1EE2007B0);
}

uint64_t sub_190BD74D4(uint64_t a1)
{
  return sub_190AA49CC(a1, 12, &qword_1EE2007B8, &qword_1EE2007C0);
}

uint64_t sub_190BD74E8(uint64_t a1)
{
  return sub_190AA49CC(a1, 13, &qword_1EE2007C8, &qword_1EE2007D0);
}

uint64_t sub_190BD74FC(uint64_t a1)
{
  return sub_190AA49CC(a1, 9, &qword_1EE1FE160, algn_1EE1FE168);
}

void sub_190BD7510(__int128 *a1)
{
  _BYTE v1[56];

  sub_190BD7F48(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_190BD7558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  char v8;
  _QWORD v10[24];

  v1 = v10[7];
  v2 = v10[8];
  v3 = v10[9];
  v4 = v10[10];
  OUTLINED_FUNCTION_1_76(a1, (uint64_t)v10);
  if (!v5 && (v1 == v10[0] ? (v6 = v2 == v10[1]) : (v6 = 0), v6))
  {
    if (v3 == v10[2] && v4 == v10[3])
      v8 = 1;
    else
      v8 = sub_190BE60BC();
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_190BD788C(__int128 *a1, __int128 *a2)
{
  char v3;
  __int128 v5[3];
  _BYTE v6[56];

  sub_190BD7F48(a1, (uint64_t)v5);
  sub_190BD7F48(a2, (uint64_t)v6);
  sub_190BD7510(v5);
  return v3 & 1;
}

uint64_t sub_190BD7954(uint64_t result, unsigned __int8 a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (v2[4] > result)
  {
    v5 = result;
    v6 = v2[2];
    v7 = v2[3];
    result = sub_190BE4730();
    if (result == a2)
      return result;
    v17 = v2[5];
    v18 = v2[7];
    v31 = v17 - v18;
    if (!__OFSUB__(v17, v18))
    {
      v19 = v2[6];
      sub_190ACFA50(0, &qword_1ED034A10, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_190BE7CD0;
      *(_BYTE *)(v20 + 32) = a2;
      v21 = sub_190BD7B78(v20);
      v23 = v22;
      result = swift_bridgeObjectRelease();
      if (!v3)
      {
        v24 = sub_190AF6DAC(v5, v5, v6, v7);
        v26 = v25;
        v27 = sub_190AEF438(v24, v25);
        v29 = v28;
        sub_190AEF3F4(v24, v26);
        sub_190AF68A8();
        swift_allocError();
        *(_QWORD *)v30 = v19;
        *(_QWORD *)(v30 + 8) = v31;
        *(_QWORD *)(v30 + 16) = v21;
        *(_QWORD *)(v30 + 24) = v23;
        *(_QWORD *)(v30 + 32) = v27;
        *(_QWORD *)(v30 + 40) = v29;
        *(_BYTE *)(v30 + 48) = 3;
        return swift_willThrow();
      }
      return result;
    }
LABEL_12:
    __break(1u);
    return result;
  }
  v8 = v2[5];
  v9 = v2[7];
  v10 = v8 - v9;
  if (__OFSUB__(v8, v9))
  {
    __break(1u);
    goto LABEL_12;
  }
  v11 = v2[6];
  sub_190ACFA50(0, &qword_1ED034A10, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_190BE7CD0;
  *(_BYTE *)(v12 + 32) = a2;
  v13 = sub_190BD7B78(v12);
  v15 = v14;
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_190AF68A8();
    swift_allocError();
    *(_QWORD *)v16 = v11;
    *(_QWORD *)(v16 + 8) = v10;
    *(_QWORD *)(v16 + 16) = v13;
    *(_QWORD *)(v16 + 24) = v15;
    *(_QWORD *)(v16 + 32) = 0;
    *(_QWORD *)(v16 + 40) = 0;
    *(_BYTE *)(v16 + 48) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_190BD7B78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_190BE5060();
  MEMORY[0x1E0C80A78](v3);
  sub_190BE5048();
  sub_190ACFA50(0, &qword_1ED033D98, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_190B64F30();
  result = sub_190BE5024();
  if (!v5)
  {
    v6 = v1[5];
    v7 = v1[7];
    v8 = v6 - v7;
    if (__OFSUB__(v6, v7))
    {
      __break(1u);
    }
    else
    {
      v9 = v1[6];
      sub_190AF68A8();
      swift_allocError();
      *(_QWORD *)v10 = v9;
      *(_QWORD *)(v10 + 8) = v8;
      *(_QWORD *)(v10 + 16) = a1;
      *(_QWORD *)(v10 + 24) = 0;
      *(_QWORD *)(v10 + 32) = 0;
      *(_QWORD *)(v10 + 40) = 0;
      *(_BYTE *)(v10 + 48) = 11;
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_190BD7C84()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BD7CA8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BD7CCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
    case 1:
    case 2:
    case 4:
    case 11:
      goto LABEL_2;
    case 3:
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
LABEL_2:
      result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      break;
    case 8:
    case 9:
    case 10:
    case 12:
      result = sub_190AFCA4C(a3, a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for JSONParser.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_190BD7CCC(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for JSONParser.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_190BD7CCC(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_190B04ED8(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for JSONParser.Errors(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_190B04ED8(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONParser.Errors(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xED && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 236;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 0x13)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONParser.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEC)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 237;
    if (a3 >= 0xED)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xED)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_190BD7F28(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_190BD7F30(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONParser.Errors()
{
  return &type metadata for JSONParser.Errors;
}

uint64_t sub_190BD7F48(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_190BD7F68(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_190BD7FA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_190BD7FD8()
{
  sub_190BD7FA8();
  return swift_deallocClassInstance();
}

uint64_t sub_190BD7FF8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190BD801C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BD8040()
{
  OUTLINED_FUNCTION_110();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BD8068()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110();
  sub_190AEF3F4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t ObjectAssociation.__allocating_init(policy:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ObjectAssociation.init(policy:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t ObjectAssociation.subscript.getter(void *a1)
{
  const void *v1;
  uint64_t v3;
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;
  __int128 v7;

  if (objc_getAssociatedObject(a1, v1))
  {
    sub_190BE5AF8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_190B6B364((uint64_t)v4, (uint64_t)&v5);
  if (v6)
  {
    sub_190ACEE08(&v5, &v7);
    swift_dynamicCast();
    return v3;
  }
  else
  {
    sub_190AD9BB8((uint64_t)&v5);
    return 0;
  }
}

uint64_t sub_190BD8180@<X0>(void **a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = ObjectAssociation.subscript.getter(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_190BD81AC(void **a1, uint64_t a2, void **a3)
{
  void *v3;
  void *v4;

  v3 = *a3;
  v4 = *a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return ObjectAssociation.subscript.setter(v4, v3);
}

uint64_t ObjectAssociation.subscript.setter(void *a1, void *a2)
{
  _QWORD *v2;
  void *v5;

  v5 = (void *)v2[2];
  swift_unknownObjectRetain();
  objc_setAssociatedObject(a2, v2, a1, v5);
  swift_unknownObjectRelease_n();
  return OUTLINED_FUNCTION_0_80();
}

uint64_t (*ObjectAssociation.subscript.modify(uint64_t *a1, void *a2))(uint64_t a1, char a2)
{
  uint64_t v2;

  a1[1] = (uint64_t)a2;
  a1[2] = v2;
  *a1 = ObjectAssociation.subscript.getter(a2);
  return sub_190BD8278;
}

uint64_t sub_190BD8278(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_1_77();
    return OUTLINED_FUNCTION_0_80();
  }
  else
  {
    swift_unknownObjectRetain();
    return OUTLINED_FUNCTION_1_77();
  }
}

uint64_t ObjectAssociation.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ObjectAssociation.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_190BD82F0()
{
  return 8;
}

_QWORD *sub_190BD82FC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_190BD8308()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ObjectAssociation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObjectAssociation);
}

uint64_t method lookup function for ObjectAssociation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectAssociation.__allocating_init(policy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ReferenceData.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_190AFCA4C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t ReferenceData.pool.getter()
{
  return swift_retain();
}

uint64_t sub_190BD83A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_190BE60BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1819242352 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_190BE60BC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_190BD8478(char a1)
{
  if ((a1 & 1) != 0)
    return 1819242352;
  else
    return 1635017060;
}

uint64_t sub_190BD8498()
{
  char *v0;

  return sub_190BD8478(*v0);
}

uint64_t sub_190BD84A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190BD83A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190BD84C4()
{
  sub_190BD8670();
  return sub_190BE6404();
}

uint64_t sub_190BD84EC()
{
  sub_190BD8670();
  return sub_190BE6410();
}

void ReferenceData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  char v14;

  sub_190BD888C(0, &qword_1EE2007D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v9 = *v1;
  v8 = v1[1];
  v11[0] = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BD8670();
  sub_190BE6374();
  v12 = v9;
  v13 = v8;
  v14 = 0;
  sub_190BD86AC();
  v10 = v11[1];
  sub_190BE5F90();
  if (!v10)
  {
    v12 = v11[0];
    v14 = 1;
    type metadata accessor for ReferenceEncodingPool();
    sub_190BD8924(&qword_1EE2007F0, (uint64_t)&protocol conformance descriptor for ReferenceEncodingPool);
    sub_190BE5F90();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_1_5();
}

unint64_t sub_190BD8670()
{
  unint64_t result;

  result = qword_1EE2007E0;
  if (!qword_1EE2007E0)
  {
    result = MEMORY[0x194016EF8](&unk_190BF11D8, &type metadata for ReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE2007E0);
  }
  return result;
}

unint64_t sub_190BD86AC()
{
  unint64_t result;

  result = qword_1EE2007E8;
  if (!qword_1EE2007E8)
  {
    result = MEMORY[0x194016EF8](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE2007E8);
  }
  return result;
}

void ReferenceData.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_190BD888C(0, &qword_1EE2007F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190BD8670();
  sub_190BE6344();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_190BD88E8();
    OUTLINED_FUNCTION_3_68();
    type metadata accessor for ReferenceEncodingPool();
    OUTLINED_FUNCTION_4_50();
    sub_190BD8924(&qword_1EE200808, (uint64_t)&protocol conformance descriptor for ReferenceEncodingPool);
    OUTLINED_FUNCTION_3_68();
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_4_50();
    swift_retain();
    OUTLINED_FUNCTION_1_78();
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    OUTLINED_FUNCTION_1_78();
    swift_release();
  }
  OUTLINED_FUNCTION_1_5();
}

void sub_190BD888C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_190BD8670();
    v7 = a3(a1, &type metadata for ReferenceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_190BD88E8()
{
  unint64_t result;

  result = qword_1EE200800;
  if (!qword_1EE200800)
  {
    result = MEMORY[0x194016EF8](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE200800);
  }
  return result;
}

uint64_t sub_190BD8924(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ReferenceEncodingPool();
    result = MEMORY[0x194016EF8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_190BD8964(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  ReferenceData.init(from:)(a1, a2);
}

void sub_190BD8978(_QWORD *a1)
{
  ReferenceData.encode(to:)(a1);
}

uint64_t destroy for ReferenceData(uint64_t a1)
{
  sub_190AEF3F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_release();
}

uint64_t *_s13TeaFoundation13ReferenceDataVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_190AFCA4C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for ReferenceData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_190AFCA4C(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_190AEF3F4(v6, v7);
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *assignWithTake for ReferenceData(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_190AEF3F4(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ReferenceData()
{
  return &type metadata for ReferenceData;
}

uint64_t storeEnumTagSinglePayload for ReferenceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190BD8B0C + 4 * byte_190BF10A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190BD8B40 + 4 * asc_190BF10A0[v4]))();
}

uint64_t sub_190BD8B40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BD8B48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BD8B50);
  return result;
}

uint64_t sub_190BD8B5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BD8B64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190BD8B68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BD8B70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReferenceData.CodingKeys()
{
  return &type metadata for ReferenceData.CodingKeys;
}

unint64_t sub_190BD8B90()
{
  unint64_t result;

  result = qword_1EE200810;
  if (!qword_1EE200810)
  {
    result = MEMORY[0x194016EF8](&unk_190BF11B0, &type metadata for ReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE200810);
  }
  return result;
}

unint64_t sub_190BD8BD0()
{
  unint64_t result;

  result = qword_1EE200818;
  if (!qword_1EE200818)
  {
    result = MEMORY[0x194016EF8](&unk_190BF1120, &type metadata for ReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE200818);
  }
  return result;
}

unint64_t sub_190BD8C10()
{
  unint64_t result;

  result = qword_1EE200820;
  if (!qword_1EE200820)
  {
    result = MEMORY[0x194016EF8](&unk_190BF1148, &type metadata for ReferenceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE200820);
  }
  return result;
}

uint64_t HttpRequest.path.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t HttpRequest.headers.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t destroy for HttpRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HttpRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t assignWithCopy for HttpRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HttpRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HttpRequest()
{
  return &type metadata for HttpRequest;
}

uint64_t sub_190BD8E2C()
{
  OUTLINED_FUNCTION_83();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BD8E54()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t firstly<A>(syncOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for Promise(0, a4, a3, a4);
  sub_190B68F84(a1, (void (*)(void))sub_190BD8F44);
  return v6;
}

void sub_190BD8EE4(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a1();
  if (v3)
  {
    type metadata accessor for Promise(0, a2, v7, v8);
    Promise.__allocating_init(error:)();
  }
  *a3 = v6;
}

void sub_190BD8F44(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_190BD8EE4(*(uint64_t (**)(void))(v1 + 24), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_190BD8F60()
{
  OUTLINED_FUNCTION_83();
  return swift_deallocObject();
}

uint64_t sub_190BD8F80()
{
  return DeferredPromise.reject(_:)();
}

uint64_t DiagnosticData.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___TFDiagnosticData_data);
  sub_190AFCA4C(v1, *(_QWORD *)(v0 + OBJC_IVAR___TFDiagnosticData_data + 8));
  return v1;
}

uint64_t DiagnosticData.filename.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___TFDiagnosticData_filename);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

id DiagnosticData.__allocating_init(data:filename:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_81());
  return DiagnosticData.init(data:filename:)();
}

id DiagnosticData.init(data:filename:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  objc_super v9;

  OUTLINED_FUNCTION_0_81();
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v1[OBJC_IVAR___TFDiagnosticData_data];
  *(_QWORD *)v6 = v4;
  *((_QWORD *)v6 + 1) = v3;
  v7 = &v1[OBJC_IVAR___TFDiagnosticData_filename];
  *(_QWORD *)v7 = v2;
  *((_QWORD *)v7 + 1) = v0;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id DiagnosticData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DiagnosticData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DiagnosticData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DiagnosticData()
{
  return objc_opt_self();
}

uint64_t method lookup function for DiagnosticData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DiagnosticData.__allocating_init(data:filename:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_190BD91DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);

  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_190AAC38C(0, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v55 = (uint64_t)&v46 - v7;
  v8 = sub_190BE4628();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v49 = (char *)&v46 - v13;
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)&v46 - v14;
  sub_190AAC38C(0, (unint64_t *)&qword_1ED034BC0, v15, v5);
  v17 = MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v57 = (char *)&v46 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  v46 = a1;
  v47 = v2;
  if (v20)
  {
    v48 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v21 = a1 + v48;
    v22 = *(_QWORD *)(v9 + 72);
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v56 = MEMORY[0x1E0DEE9D8];
    v23 = v9;
    v51 = v9;
    v52 = v22;
    v24 = v50;
    v25 = (uint64_t)v57;
    while (1)
    {
      v58(v25, v21, v8);
      __swift_storeEnumTagSinglePayload(v25, 0, 1, v8);
      if (__swift_getEnumTagSinglePayload(v25, 1, v8) == 1)
        break;
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
      v26(v24, v25, v8);
      if (*(_QWORD *)(a2 + 16) && (sub_190B136AC(), (v28 & 1) != 0))
      {
        v29 = v27;
        v30 = *(_QWORD *)(a2 + 56);
        v31 = type metadata accessor for AuthToken();
        v32 = v30 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v29;
        v33 = v55;
        sub_190B447F4(v32, v55);
        v34 = 1;
        v35 = v31;
        v23 = v51;
        __swift_storeEnumTagSinglePayload(v33, 0, 1, v35);
        sub_190BD4428(v33, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        v36 = (uint64_t)v53;
      }
      else
      {
        v37 = type metadata accessor for AuthToken();
        v38 = v55;
        __swift_storeEnumTagSinglePayload(v55, 1, 1, v37);
        sub_190BD4428(v38, (unint64_t *)&unk_1ED02F310, (uint64_t (*)(uint64_t))type metadata accessor for AuthToken);
        v36 = (uint64_t)v53;
        v58((uint64_t)v53, (uint64_t)v24, v8);
        v34 = 0;
      }
      __swift_storeEnumTagSinglePayload(v36, v34, 1, v8);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v8);
      if (__swift_getEnumTagSinglePayload(v36, 1, v8) == 1)
      {
        sub_190BD4428(v36, (unint64_t *)&qword_1ED034BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v25 = (uint64_t)v57;
        v39 = v52;
      }
      else
      {
        v40 = v49;
        v26(v49, v36, v8);
        v26(v54, (uint64_t)v40, v8);
        v41 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = sub_190B12418();
        v42 = *(_QWORD *)(v41 + 16);
        if (v42 >= *(_QWORD *)(v41 + 24) >> 1)
          v41 = sub_190B12418();
        *(_QWORD *)(v41 + 16) = v42 + 1;
        v56 = v41;
        v43 = v41 + v48;
        v39 = v52;
        v26((char *)(v43 + v42 * v52), (uint64_t)v54, v8);
        v24 = v50;
        v23 = v51;
        v25 = (uint64_t)v57;
      }
      v21 += v39;
      if (!--v20)
        goto LABEL_18;
    }
  }
  else
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v56 = MEMORY[0x1E0DEE9D8];
    v25 = (uint64_t)v57;
LABEL_18:
    __swift_storeEnumTagSinglePayload(v25, 1, 1, v8);
  }
  v44 = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_190BD9640(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  char *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t result;
  _QWORD v49[2];
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;

  v58 = sub_190BE4628();
  v4 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v6 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AuthToken();
  v54 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v53 = (uint64_t)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v56 = (uint64_t)v49 - v10;
  sub_190AAC38C(0, &qword_1ED02EF98, (uint64_t (*)(uint64_t))sub_190B6256C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v49 - v15;
  v17 = *(_QWORD *)(a2 + 64);
  v50 = a2 + 64;
  v18 = -1 << *(_BYTE *)(a2 + 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v17;
  v51 = (unint64_t)(63 - v18) >> 6;
  v49[0] = v51 - 1;
  v49[1] = v18;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v52 = a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v21 = 0;
  v57 = v14;
  while (1)
  {
    v22 = v6;
    if (v20)
    {
      v55 = (v20 - 1) & v20;
      v23 = __clz(__rbit64(v20)) | (v21 << 6);
      v24 = v21;
LABEL_7:
      v25 = v52;
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v14, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v4 + 72) * v23, v58);
      v26 = *(_QWORD *)(v25 + 56) + *(_QWORD *)(v54 + 72) * v23;
      sub_190B6256C();
      v28 = v27;
      v29 = (uint64_t)&v57[*(int *)(v27 + 48)];
      v30 = v26;
      v14 = v57;
      sub_190B447F4(v30, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v28);
      v31 = v24;
      goto LABEL_26;
    }
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
      goto LABEL_39;
    v31 = v21;
    if (v24 < v51)
    {
      v32 = *(_QWORD *)(v50 + 8 * v24);
      if (v32)
        goto LABEL_11;
      v33 = v21 + 2;
      v31 = v21 + 1;
      if (v21 + 2 < v51)
      {
        v32 = *(_QWORD *)(v50 + 8 * v33);
        if (v32)
          goto LABEL_14;
        v31 = v21 + 2;
        if (v21 + 3 < v51)
        {
          v32 = *(_QWORD *)(v50 + 8 * (v21 + 3));
          if (v32)
          {
            v24 = v21 + 3;
            goto LABEL_11;
          }
          v33 = v21 + 4;
          v31 = v21 + 3;
          if (v21 + 4 < v51)
            break;
        }
      }
    }
LABEL_25:
    sub_190B6256C();
    v28 = v34;
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v34);
    v55 = 0;
LABEL_26:
    sub_190BDC424((uint64_t)v14, (uint64_t)v16);
    sub_190B6256C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v28) == 1)
    {
      sub_190AD05B8();
      return (uint64_t)a1;
    }
    v6 = v22;
    v35 = (uint64_t)&v16[*(int *)(v28 + 48)];
    v36 = v56;
    sub_190B72A80(v35, v56);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v22, v16, v58);
    v37 = v53;
    sub_190B447F4(v36, v53);
    swift_isUniquelyReferenced_nonNull_native();
    v59 = a1;
    sub_190B136AC();
    if (__OFADD__(a1[2], (v39 & 1) == 0))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v40 = v38;
    v41 = v39;
    sub_190B06734(0, (unint64_t *)&qword_1ED02F378, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DECB20]);
    v42 = sub_190BE5E04();
    v14 = v57;
    if ((v42 & 1) != 0)
    {
      sub_190B136AC();
      if ((v41 & 1) != (v44 & 1))
        goto LABEL_41;
      v40 = v43;
    }
    a1 = v59;
    if ((v41 & 1) != 0)
    {
      sub_190B6250C(v37, v59[7] + *(_QWORD *)(v54 + 72) * v40);
    }
    else
    {
      v59[(v40 >> 6) + 8] |= 1 << v40;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 16))(a1[6] + *(_QWORD *)(v4 + 72) * v40, v6, v58);
      sub_190B72A80(v37, a1[7] + *(_QWORD *)(v54 + 72) * v40);
      v45 = a1[2];
      v46 = __OFADD__(v45, 1);
      v47 = v45 + 1;
      if (v46)
        goto LABEL_38;
      a1[2] = v47;
      a1 = v59;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v58);
    sub_190B466D4(v56);
    v21 = v31;
    v20 = v55;
  }
  v32 = *(_QWORD *)(v50 + 8 * v33);
  if (v32)
  {
LABEL_14:
    v24 = v33;
LABEL_11:
    v55 = (v32 - 1) & v32;
    v23 = __clz(__rbit64(v32)) + (v24 << 6);
    goto LABEL_7;
  }
  while (1)
  {
    v24 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v24 >= v51)
    {
      v31 = v49[0];
      goto LABEL_25;
    }
    v32 = *(_QWORD *)(v50 + 8 * v24);
    ++v33;
    if (v32)
      goto LABEL_11;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_190BE626C();
  __break(1u);
  return result;
}

uint64_t sub_190BD9B54(__n128 a1, uint64_t a2, unint64_t a3, char a4, uint64_t (*a5)(__n128))
{
  a1.n128_u64[0] = a3;
  if ((a4 & 1) != 0)
    a1.n128_f64[0] = 1.79769313e308;
  return a5(a1);
}

uint64_t sub_190BD9B88()
{
  swift_release();
  return swift_deallocObject();
}

void sub_190BD9BAC(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(a3 + 8) & 1) != 0)
    a1.n128_u64[0] = 0x7FEFFFFFFFFFFFFFLL;
  else
    a1.n128_u64[0] = *(_QWORD *)a3;
  (*(void (**)(__n128))(v3 + 40))(a1);
  OUTLINED_FUNCTION_0();
}

void (*sub_190BD9BE0(uint64_t a1, unint64_t a2, unsigned __int8 a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, void (*a7)(uint64_t), uint64_t *a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, __n128), uint64_t a14))(uint64_t)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t *v43;
  void (*v44)(uint64_t);
  void (*v45)(uint64_t);
  uint64_t v48[3];

  v20 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v20 + 16) = a13;
  *(_QWORD *)(v20 + 24) = a14;
  if (!*(_QWORD *)(a1 + 16))
  {
    v28 = qword_1ED034A18;
    OUTLINED_FUNCTION_7_54();
    if (v28 != -1)
      swift_once();
    v29 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED039A70);
    v30 = sub_190BE4A0C();
    v31 = sub_190BE58AC();
    if (os_log_type_enabled(v30, v31))
    {
      *(_WORD *)OUTLINED_FUNCTION_20_1() = 0;
      OUTLINED_FUNCTION_18_34(&dword_190AA0000, v30, v31, "Manager will not fetch because no keys were specified");
      OUTLINED_FUNCTION_12_0();
    }

    sub_190BE4628();
    type metadata accessor for AuthToken();
    sub_190B39230();
    v32 = sub_190BE4DFC();
    OUTLINED_FUNCTION_13_34();
    OUTLINED_FUNCTION_24();
    sub_190B71128(v32);
    goto LABEL_25;
  }
  v44 = a4;
  v45 = a7;
  a4 = (void (*)(uint64_t))a10;
  if (a11)
  {
    v42 = a5;
    v43 = a8;
    v21 = qword_1ED034A18;
    OUTLINED_FUNCTION_7_54();
    OUTLINED_FUNCTION_16_2();
    if (v21 != -1)
      swift_once();
    v22 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED039A70);
    OUTLINED_FUNCTION_16_2();
    v23 = sub_190BE4A0C();
    v24 = sub_190BE58AC();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = OUTLINED_FUNCTION_20_1();
      v48[0] = OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v25 = 136315394;
      v26 = CachePolicy.description.getter();
      sub_190ACE890(v26, v27, v48);
      sub_190BE5A2C();
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v25 + 12) = 2080;
      OUTLINED_FUNCTION_16_2();
      sub_190ACE890(a10, a11, v48);
      sub_190BE5A2C();
      OUTLINED_FUNCTION_22_32();
      _os_log_impl(&dword_190AA0000, v23, v24, "Manager will fetch using %s: %s", (uint8_t *)v25, 0x16u);
      OUTLINED_FUNCTION_17_28();
      OUTLINED_FUNCTION_12_0();
    }

    OUTLINED_FUNCTION_65_1();
    a5 = v42;
    a8 = v43;
  }
  else
  {
    OUTLINED_FUNCTION_7_54();
  }
  if (!a3)
  {
    v33.n128_u64[0] = a2;
LABEL_24:
    a13(a1, v33);
LABEL_25:
    OUTLINED_FUNCTION_6_56();
    OUTLINED_FUNCTION_60();
    goto LABEL_26;
  }
  if (a3 != 1 && a2 - 2 >= 2)
  {
    if (!a2)
    {
      OUTLINED_FUNCTION_44();
      sub_190B2FBCC();
      v39 = v38;
      OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_111();
      v40 = swift_retain();
      sub_190BBE1A8(v39, a10, a11, a8, v44, a5, a1, a6, v40);
      OUTLINED_FUNCTION_6_56();
      OUTLINED_FUNCTION_60();
      OUTLINED_FUNCTION_62();
      goto LABEL_26;
    }
    v33.n128_u64[0] = 0x7FEFFFFFFFFFFFFFLL;
    goto LABEL_24;
  }
  swift_retain();
  sub_190BDA688(a2, a3, a1, a13, v34);
  v35 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v35 + 16) = a12;
  *(_QWORD *)(v35 + 24) = a1;
  *(_QWORD *)(v35 + 32) = a2;
  *(_BYTE *)(v35 + 40) = a3;
  *(_QWORD *)(v35 + 48) = v44;
  *(_QWORD *)(v35 + 56) = a5;
  *(_QWORD *)(v35 + 64) = sub_190BDC258;
  *(_QWORD *)(v35 + 72) = v20;
  a4 = v45;
  *(_QWORD *)(v35 + 80) = a6;
  *(_QWORD *)(v35 + 88) = v45;
  *(_QWORD *)(v35 + 96) = a8;
  *(_QWORD *)(v35 + 104) = a9;
  *(_QWORD *)(v35 + 112) = a10;
  *(_QWORD *)(v35 + 120) = a11;
  v36 = qword_1ED035648;
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_111();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v36 != -1)
    swift_once();
  v37 = (id)qword_1ED035618;
  sub_190B5C040();
  OUTLINED_FUNCTION_6_56();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_2();
  swift_release();

LABEL_26:
  swift_release();
  return a4;
}

uint64_t static Manager.fetch(keys:cachePolicy:fetchWith:readCacheWithAge:writeCacheWith:deduper:options:loggingKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, unint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v13 = v12;
  v51 = *(_QWORD *)a2;
  v19 = *(unsigned __int8 *)(a2 + 8);
  v48 = *a10;
  v53 = a1;
  v20 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v20);
  v21 = sub_190BE5798();
  if ((v21 & 1) != 0)
  {
    if (qword_1ED034A18 != -1)
      swift_once();
    v22 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED039A70);
    v23 = sub_190BE4A0C();
    v24 = sub_190BE58AC();
    if (os_log_type_enabled(v23, v24))
    {
      *(_WORD *)OUTLINED_FUNCTION_20_1() = 0;
      OUTLINED_FUNCTION_18_34(&dword_190AA0000, v23, v24, "Manager will not fetch because no keys were specified");
      OUTLINED_FUNCTION_12_0();
    }

    v25 = sub_190BE4E98();
    OUTLINED_FUNCTION_62_1(v25, v26, v27, v28);
    OUTLINED_FUNCTION_17();
    sub_190BE5384();
    v53 = sub_190BE4DFC();
    Promise.__allocating_init(value:)();
    return v29;
  }
  if (a12)
  {
    v47 = a6;
    v30 = qword_1ED034A18;
    OUTLINED_FUNCTION_16_2();
    if (v30 != -1)
      swift_once();
    v31 = OUTLINED_FUNCTION_96();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED039A70);
    OUTLINED_FUNCTION_16_2();
    v32 = sub_190BE4A0C();
    v33 = sub_190BE58AC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = OUTLINED_FUNCTION_20_1();
      v46 = OUTLINED_FUNCTION_20_1();
      *(_DWORD *)v34 = 136315394;
      v52 = v46;
      v53 = v51;
      v54 = v19;
      v35 = CachePolicy.description.getter();
      sub_190ACE890(v35, v36, &v52);
      v53 = v37;
      sub_190BE5A2C();
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v34 + 12) = 2080;
      OUTLINED_FUNCTION_16_2();
      sub_190ACE890(a11, a12, &v52);
      v53 = v38;
      sub_190BE5A2C();
      OUTLINED_FUNCTION_22_32();
      _os_log_impl(&dword_190AA0000, v32, v33, "Manager will fetch using %s: %s", (uint8_t *)v34, 0x16u);
      OUTLINED_FUNCTION_17_28();
      OUTLINED_FUNCTION_12_0();
    }

    v21 = OUTLINED_FUNCTION_65_1();
    a6 = v47;
  }
  if (!v19)
  {
    v44 = 0;
    goto LABEL_21;
  }
  if (v19 != 1 && (unint64_t)(v51 - 2) >= 2)
  {
    if (!v51)
      return sub_190BDA5A0(a1, a3, a4, a7, a8, a9, a11, a12);
    v51 = 0;
    v44 = 1;
LABEL_21:
    v53 = v51;
    v54 = v44;
    return a5(a1, &v53);
  }
  MEMORY[0x1E0C80A78](v21);
  v39 = sub_190BE4E98();
  firstly<A>(closure:)((uint64_t (*)(void))sub_190BDA7EC);
  v40 = OUTLINED_FUNCTION_24();
  *(_QWORD *)(v40 + 16) = v13;
  *(_QWORD *)(v40 + 24) = a1;
  *(_QWORD *)(v40 + 32) = v51;
  *(_BYTE *)(v40 + 40) = v19;
  *(_QWORD *)(v40 + 48) = a3;
  *(_QWORD *)(v40 + 56) = a4;
  *(_QWORD *)(v40 + 64) = a5;
  *(_QWORD *)(v40 + 72) = a6;
  *(_QWORD *)(v40 + 80) = a7;
  *(_QWORD *)(v40 + 88) = a8;
  *(_QWORD *)(v40 + 96) = a9;
  *(_QWORD *)(v40 + 104) = v48;
  *(_QWORD *)(v40 + 112) = a11;
  *(_QWORD *)(v40 + 120) = a12;
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_44();
  swift_retain();
  OUTLINED_FUNCTION_111();
  swift_retain();
  swift_retain();
  v41 = (void *)sub_190AC06B8(v39, v39);
  Promise.then<A>(on:closure:)();
  v43 = v42;
  OUTLINED_FUNCTION_2();
  swift_release();

  return v43;
}

uint64_t sub_190BDA5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a1;
  v15 = v8[10];
  v16 = sub_190BE5438();
  v17 = v8[12];
  OUTLINED_FUNCTION_16_2();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v16);
  v31 = sub_190BE5660();
  v18 = v8[11];
  v23 = v15;
  v24 = v18;
  v25 = v17;
  v26 = a2;
  v27 = a3;
  v28 = a1;
  v29 = a4;
  v30 = a5;
  v19 = PromiseDeduper.promise(key:loggingKey:createBlock:)((uint64_t)&v31, a7, a8, (uint64_t (*)(uint64_t))sub_190BDBF54, (uint64_t)v22);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_190BDA688(unint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t (*a4)(uint64_t, __n128), __n128 a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a2 >= 2u)
  {
    a5.n128_u64[0] = 0x7FEFFFFFFFFFFFFFLL;
    goto LABEL_5;
  }
  a5.n128_u64[0] = a1;
  if (*(double *)&a1 > 0.0)
  {
LABEL_5:
    v5 = a4(a3, a5);
    goto LABEL_6;
  }
  sub_190B76680(0);
  swift_allocObject();
  sub_190B71128(MEMORY[0x1E0DEE9E0]);
LABEL_6:
  v6 = v5;
  swift_release();
  return v6;
}

void sub_190BDA718(unint64_t a1, unsigned __int8 a2, void (*a3)(uint64_t, _BOOL8 *, __n128), __n128 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  char v10;

  if (a2 >= 2u)
  {
    v9 = a1 > 2;
    v10 = 1;
    goto LABEL_5;
  }
  a4.n128_u64[0] = a1;
  if (*(double *)&a1 > 0.0)
  {
    v9 = a1;
    v10 = 0;
LABEL_5:
    a3(a6, &v9, a4);
    return;
  }
  v6 = sub_190BE4E98();
  type metadata accessor for Promise(0, v6, v7, v8);
  sub_190BE4D6C();
  Promise.__allocating_init(value:)();
}

void sub_190BDA7EC(__n128 a1)
{
  uint64_t v1;

  sub_190BDA718(*(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(void (**)(uint64_t, _BOOL8 *, __n128))(v1 + 56), a1, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_190BDA814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return sub_190BDA908(a3, a1, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_190BDA87C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v15;

  v13 = *a1;
  v15 = a13;
  return sub_190BDAC8C(a3, v13, a3, a6, a7, a8, a9, a10, a11, a12, &v15);
}

uint64_t sub_190BDA8EC(uint64_t a1)
{
  return sub_190BDC300(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190BDA87C);
}

uint64_t sub_190BDA908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37[3];

  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v21 = sub_190BD91DC(a1, a2);
  if (*(_QWORD *)(v21 + 16))
  {
    sub_190AAC38C(0, &qword_1EE1FEE68, (uint64_t (*)(uint64_t))sub_190B39B4C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    v22 = swift_allocObject();
    v37[0] = 0;
    type metadata accessor for UnfairLock();
    swift_allocObject();
    v36 = a1;
    v23 = v14;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_retain();
    swift_retain();
    swift_retain();
    UnfairLock.init(options:)((int *)v37);
    v25 = v24;
    sub_190AAC38C(0, &qword_1EE1FEE50, (uint64_t (*)(uint64_t))sub_190B39B4C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Seal);
    swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_190B27CB0(v25);
    swift_retain_n();
    v26 = v23;
    a1 = v36;
    sub_190BDB0A0((uint64_t)sub_190BDC3D0, v22, (uint64_t)sub_190BDC3D8, v22, v26, v21, a5, a6, a9, a10, a11, a13, a14, a2, a12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_190BE4628();
    type metadata accessor for AuthToken();
    sub_190B39230();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v27 = sub_190BE4DFC();
    sub_190AAC38C(0, &qword_1EE1FEE68, (uint64_t (*)(uint64_t))sub_190B39B4C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    swift_allocObject();
    sub_190B711A4(a2, v27);
  }
  if (qword_1ED035648 != -1)
    swift_once();
  v28 = (id)qword_1ED035618;
  sub_190B5C0F0();
  swift_release();

  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a12;
  v29[3] = a1;
  v29[4] = a7;
  v29[5] = a8;
  v30 = (void *)qword_1ED035618;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  v31 = v30;
  sub_190B5C1A4();
  swift_release();
  swift_release();

  v32 = (id)qword_1ED035618;
  sub_190B5C0F0();
  v34 = v33;
  swift_release();

  return v34;
}

uint64_t sub_190BDAC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v29 = *a11;
  v13 = v11[10];
  v14 = v11[11];
  v15 = v11[12];
  v16 = sub_190BE4E98();
  v17 = OUTLINED_FUNCTION_17();
  firstly<A>(closure:)(sub_190BDBFE0);
  v18 = (_QWORD *)OUTLINED_FUNCTION_24();
  v18[2] = v13;
  v18[3] = v14;
  v18[4] = v15;
  v19 = (_QWORD *)OUTLINED_FUNCTION_24();
  v19[2] = v13;
  v19[3] = v14;
  v19[4] = v15;
  v19[5] = sub_190BDC020;
  v19[6] = v18;
  v20 = (void *)OUTLINED_FUNCTION_12_30();
  OUTLINED_FUNCTION_23_30();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_60();

  v21 = (_QWORD *)OUTLINED_FUNCTION_24();
  v21[2] = v13;
  v21[3] = v14;
  v21[4] = v15;
  v21[5] = v29;
  v21[6] = a1;
  v21[7] = a6;
  v21[8] = a7;
  OUTLINED_FUNCTION_16_2();
  swift_retain();
  v22 = (void *)sub_190AC06B8(v16, v17);
  Promise.then<A>(on:closure:)();
  swift_release();
  OUTLINED_FUNCTION_60();

  v23 = (_QWORD *)OUTLINED_FUNCTION_24();
  v23[2] = v13;
  v23[3] = v14;
  v23[4] = v15;
  v24 = (_QWORD *)OUTLINED_FUNCTION_24();
  v24[2] = v13;
  v24[3] = v14;
  v24[4] = v15;
  v24[5] = sub_190BDC5A4;
  v24[6] = v23;
  v25 = (void *)OUTLINED_FUNCTION_12_30();
  OUTLINED_FUNCTION_23_30();
  v27 = v26;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_60();

  return v27;
}

uint64_t sub_190BDAE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a8;
  v29 = a6;
  v30 = a7;
  v27 = a4;
  v28 = a5;
  v13 = - infix<A, B>(_:_:)();
  v31 = v13;
  v14 = sub_190BE5438();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v14);
  if ((sub_190BE5798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_190BE4E98();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    type metadata accessor for Promise(0, TupleTypeMetadata2, v16, v17);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_getTupleTypeMetadata2();
    sub_190BE5384();
    v31 = a2;
    v32 = sub_190BE4DFC();
    Promise.__allocating_init(value:)();
    return v18;
  }
  else
  {
    v26[14] = a10;
    v26[15] = a11;
    sub_190BE4E98();
    v20 = swift_getTupleTypeMetadata2();
    v23 = type metadata accessor for Promise(0, v20, v21, v22);
    MEMORY[0x1E0C80A78](v23);
    v26[2] = a3;
    v26[3] = v13;
    v26[4] = v27;
    v26[5] = v28;
    v26[6] = v29;
    v26[7] = v30;
    v26[8] = v33;
    v26[9] = a9;
    v26[10] = a10;
    v26[11] = a2;
    v26[12] = a11;
    Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190BDC100, (uint64_t)v26);
    v19 = v24;
    swift_bridgeObjectRelease();
  }
  return v19;
}

void sub_190BDB0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  void *v26;
  id v30;

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  sub_190B2FBCC();
  v21 = v20;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  swift_retain();
  sub_190BBE1A8(v21, a12, a13, a11, a7, a8, a6, a9, a10);
  swift_bridgeObjectRelease();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = sub_190BDC4BC;
  v22[3] = v19;
  v22[4] = a14;
  v23 = qword_1ED035648;
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v23 != -1)
    swift_once();
  v24 = (id)qword_1ED035618;
  sub_190B2C22C();
  swift_release();
  swift_release();

  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a15;
  v25[3] = a14;
  v25[4] = sub_190BDC4BC;
  v25[5] = v19;
  v25[6] = a3;
  v25[7] = a4;
  v26 = (void *)qword_1ED035618;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  v30 = v26;
  sub_190ADE658((uint64_t)v30, (uint64_t)sub_190BDC554, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();

}

void sub_190BDB29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  id v32;

  v18 = (_QWORD *)swift_allocObject();
  v19 = a5[10];
  v20 = a5[11];
  v18[2] = v19;
  v18[3] = v20;
  v21 = a5[12];
  v18[4] = v21;
  v18[5] = a1;
  v18[6] = a2;
  swift_retain();
  sub_190BDA5A0(a6, a7, a8, a9, a10, a11, a12, a13);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v19;
  v22[3] = v20;
  v22[4] = v21;
  v22[5] = sub_190BDC13C;
  v22[6] = v18;
  v22[7] = a14;
  v23 = sub_190BE4E98();
  swift_retain();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v24 = (void *)sub_190AC06B8(v23, MEMORY[0x1E0DEE9C0] + 8);
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v19;
  v25[3] = v20;
  v25[4] = v21;
  v25[5] = a15;
  v25[6] = a14;
  v25[7] = sub_190BDC13C;
  v25[8] = v18;
  v25[9] = a3;
  v25[10] = a4;
  v26 = qword_1ED035648;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_retain();
  if (v26 != -1)
    swift_once();
  v32 = (id)qword_1ED035618;
  sub_190ADE658((uint64_t)v32, (uint64_t)sub_190BDC1E8, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_190BDB4BC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v5[2];

  v5[0] = a1;
  v5[1] = a2;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  a3(v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190BDB518(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  return a2(a4, a1);
}

uint64_t sub_190BDB54C(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v8;

  if ((a2 & 1) == 0 || !*(_QWORD *)(a3 + 16))
    return a6();
  sub_190BE4628();
  type metadata accessor for AuthToken();
  sub_190B39230();
  v8 = sub_190BE4DFC();
  a4(a3, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190BDB5F0(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;

  if ((a2 & 1) == 0 || (MEMORY[0x194015104](a3, a8, a9, a10) & 1) != 0)
    return a6(a1);
  swift_getTupleTypeMetadata2();
  sub_190BE5384();
  v15 = sub_190BE4DFC();
  a4(a3, v15);
  return swift_bridgeObjectRelease();
}

void sub_190BDB6D4(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if ((a2 & 2) == 0)
    goto LABEL_7;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v7 = sub_190BD91DC(a3, a1);
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_190BE4628();
    type metadata accessor for AuthToken();
    sub_190B39230();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v10 = sub_190BE4DFC();
    sub_190AAC38C(0, &qword_1EE1FEE68, (uint64_t (*)(uint64_t))sub_190B39B4C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Promise);
    swift_allocObject();
    sub_190B711A4(a1, v10);
    return;
  }
  v11 = 0;
  v12 = 1;
  a4(v7, &v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v8 = qword_1ED035648;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v8 != -1)
    swift_once();
  v9 = (id)qword_1ED035618;
  sub_190B2C16C();
  swift_release();
  swift_release();

}

uint64_t sub_190BDB884(uint64_t *a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v12 = *a1;
  if ((a2 & 2) != 0)
  {
    v33 = v8;
    v19 = - infix<A, B>(_:_:)();
    v31 = v19;
    v20 = sub_190BE5438();
    MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v20);
    if ((sub_190BE5798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_190BE4E98();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      type metadata accessor for Promise(0, TupleTypeMetadata2, v22, v23);
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_getTupleTypeMetadata2();
      sub_190BE5384();
      v31 = v12;
      v32 = sub_190BE4DFC();
      Promise.__allocating_init(value:)();
      return v24;
    }
    else
    {
      v31 = 0;
      LOBYTE(v32) = 1;
      a4(v19, &v31);
      swift_bridgeObjectRelease();
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = a6;
      v25[3] = a7;
      v25[4] = a8;
      v25[5] = v12;
      v26 = sub_190BE4E98();
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      v27 = swift_getTupleTypeMetadata2();
      v28 = (void *)sub_190AC06B8(v26, v27);
      Promise.then<A>(on:closure:)();
      v17 = v29;
      swift_release();
      swift_release();

    }
  }
  else
  {
    sub_190BE4E98();
    v13 = swift_getTupleTypeMetadata2();
    type metadata accessor for Promise(0, v13, v14, v15);
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    swift_getTupleTypeMetadata2();
    sub_190BE5384();
    v31 = v12;
    v32 = sub_190BE4DFC();
    Promise.__allocating_init(value:)();
    return v16;
  }
  return v17;
}

uint64_t sub_190BDBB28(uint64_t a1, uint64_t a2)
{
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a2;
}

uint64_t sub_190BDBB60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  *a3 = a2;
  a3[1] = v3;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

void sub_190BDBB90(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_190BD9640(a1, a2);
  OUTLINED_FUNCTION_13_34();
  OUTLINED_FUNCTION_24();
  sub_190B71128(v2);
  OUTLINED_FUNCTION_0();
}

void sub_190BDBBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_190BE4E98();
  OUTLINED_FUNCTION_62_1(v0, v1, v2, v3);
  + infix<A, B>(_:_:)();
  Promise.__allocating_init(value:)();
}

uint64_t sub_190BDBC4C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  a1(a3);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a6;
  v13[3] = a7;
  v13[4] = a8;
  v13[5] = a4;
  v13[6] = a5;
  v14 = sub_190BE4E98();
  swift_retain();
  v15 = (void *)sub_190AC06B8(v14, v14);
  Promise.then<A>(on:closure:)();
  v17 = v16;
  swift_release();
  swift_release();

  return v17;
}

void sub_190BDBD28(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[10];

  v11 = *a1;
  v12 = MEMORY[0x194015104](*a1, a4, a5, a6);
  v13 = sub_190BE4E98();
  v16 = type metadata accessor for Promise(0, v13, v14, v15);
  if ((v12 & 1) != 0)
  {
    v17[9] = v11;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    Promise.__allocating_init(value:)();
  }
  else
  {
    MEMORY[0x1E0C80A78](v16);
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a6;
    v17[5] = a2;
    v17[6] = a3;
    v17[7] = v11;
    Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t))sub_190BDBF88, (uint64_t)v17);
  }
}

void sub_190BDBE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v15;
  _QWORD *v16;
  id v17;

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a8;
  v15[3] = a9;
  v15[4] = a10;
  v15[5] = a1;
  v15[6] = a2;
  swift_retain();
  a5(a7);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a8;
  v16[3] = a9;
  v16[4] = a10;
  v16[5] = sub_190AE3A98;
  v16[6] = v15;
  v16[7] = a7;
  sub_190BE4E98();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v17 = sub_190ABD678();
  Promise.always(on:closure:)((uint64_t)v17, (uint64_t)sub_190BDBFB8, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t Manager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Manager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for Manager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_190BDBF54()
{
  uint64_t v0;

  return sub_190BDBC4C(*(void (**)(uint64_t))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_190BDBF68(_QWORD *a1)
{
  uint64_t *v1;

  sub_190BDBD28(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

void sub_190BDBF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190BDBE1C(a1, a2, a3, a4, *(void (**)(uint64_t))(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_190BDBFB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 40))(*(_QWORD *)(v0 + 56));
}

uint64_t sub_190BDBFE0()
{
  uint64_t *v0;

  return sub_190BDAE94(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12]);
}

void sub_190BDC020()
{
  sub_190BDBBC4();
}

uint64_t sub_190BDC03C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 40))(*a1, a1[1]);
}

uint64_t sub_190BDC06C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDC098(uint64_t *a1)
{
  uint64_t v1;

  return sub_190BDB884(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(uint64_t, uint64_t *))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190BDC0C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BDC0E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_190BDBB60(a1, *(_QWORD *)(v2 + 40), a2);
}

void sub_190BDC100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_190BDB29C(a1, a2, a3, a4, *(_QWORD **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96));
}

uint64_t sub_190BDC13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190BDB4BC(a1, a2, *(void (**)(_QWORD *))(v2 + 40));
}

uint64_t objectdestroy_11Tm_1()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BDC17C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 40))(*(_QWORD *)(v1 + 56), *a1);
}

uint64_t sub_190BDC1B4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDC1E8(uint64_t a1)
{
  uint64_t v1;

  return sub_190BDB5F0(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(uint64_t, uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t (**)(uint64_t))(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190BDC21C(uint64_t a1, uint64_t a2, uint64_t (*a3)(__n128), __n128 a4)
{
  return sub_190BD9B54(a4, a1, *(_QWORD *)a2, *(_BYTE *)(a2 + 8), a3);
}

uint64_t sub_190BDC234()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDC258(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;

  return sub_190BDC21C(a1, a2, *(uint64_t (**)(__n128))(v3 + 16), a3);
}

uint64_t sub_190BDC260(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return sub_190BDA814(*a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t objectdestroy_2Tm_1()
{
  OUTLINED_FUNCTION_124();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BDC2E4(uint64_t a1)
{
  return sub_190BDC300(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190BDC260);
}

uint64_t sub_190BDC300(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

void sub_190BDC350(uint64_t a1)
{
  sub_190BDBB90(*(_QWORD **)a1, *(_QWORD *)(a1 + 8));
}

void sub_190BDC37C(uint64_t *a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t *))
{
  sub_190BDB6D4(*a1, a2, a3, a4);
}

uint64_t sub_190BDC394@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = sub_190BDBB28(*a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_190BDC3C0(uint64_t *a1, uint64_t a2)
{
  return sub_190B75344(*a1, a1[1], a2);
}

uint64_t sub_190BDC3D0(uint64_t *a1)
{
  uint64_t v1;

  return sub_190BDC3C0(a1, v1);
}

uint64_t sub_190BDC3D8(uint64_t a1)
{
  uint64_t v1;

  return sub_190B21168(a1, v1);
}

uint64_t sub_190BDC3E0()
{
  OUTLINED_FUNCTION_124();
  swift_release();
  return swift_deallocObject();
}

void sub_190BDC408(uint64_t *a1)
{
  uint64_t v1;

  sub_190BDC37C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, uint64_t *))(v1 + 32));
}

uint64_t sub_190BDC424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190AAC38C(0, &qword_1ED02EF98, (uint64_t (*)(uint64_t))sub_190B6256C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190BDC480()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BDC4A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_190BDC394(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_190BDC4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_190BDB4BC(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t sub_190BDC4C4(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  return sub_190BDB518(*a1, a2, a3, a4);
}

uint64_t sub_190BDC4DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190BDC508(uint64_t *a1)
{
  uint64_t v1;

  return sub_190BDC4C4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_190BDC524()
{
  OUTLINED_FUNCTION_124();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDC554(uint64_t a1)
{
  uint64_t v1;

  return sub_190BDB54C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(void))(v1 + 48));
}

void sub_190BDC564(uint64_t a1)
{
  sub_190BDC350(a1);
}

uint64_t sub_190BDC590(_QWORD *a1)
{
  return sub_190BDC03C(a1);
}

id WeakProxy.__allocating_init(_:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return WeakProxy.init(_:)();
}

id WeakProxy.init(_:)()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v4.receiver = v0;
  v4.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v4, sel_init);
  swift_unknownObjectRelease();
  return v2;
}

double WeakProxy.forwardingTarget(for:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = *v1;
  v4 = *MEMORY[0x1E0DEEDD8];
  v5 = MEMORY[0x1940170E4]((char *)v1 + qword_1EE200838);
  if (v5)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)((v4 & v3) + 0x50);
    *(_QWORD *)a1 = v5;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_190BDC6B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  _QWORD v7[3];
  uint64_t v8;

  WeakProxy.forwardingTarget(for:)((uint64_t)v7);
  v0 = v8;
  if (!v8)
    return 0;
  v1 = __swift_project_boxed_opaque_existential_1(v7, v8);
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  v5 = (void *)sub_190BE60A4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v5;
}

id WeakProxy.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WeakProxy.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_190BDC7CC()
{
  WeakProxy.init()();
}

id WeakProxy.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190BDC80C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_190BDC84C()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t type metadata accessor for WeakProxy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakProxy);
}

uint64_t method lookup function for WeakProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeakProxy.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

BOOL sub_190BDC87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  _QWORD v10[4];
  _QWORD v11[4];

  v11[0] = a1;
  v11[1] = a2;
  v11[2] = a3;
  v11[3] = a4;
  v10[0] = a5;
  v10[1] = a6;
  v10[2] = a7;
  v10[3] = a8;
  v8 = static Version.< infix(_:_:)((uint64_t)v10, v11);
  return OUTLINED_FUNCTION_2_74(v8);
}

BOOL sub_190BDC8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  _QWORD v8[3];
  _QWORD v9[3];

  v9[0] = a1;
  v9[1] = a2;
  v9[2] = a3;
  v8[0] = a4;
  v8[1] = a5;
  v8[2] = a6;
  v6 = static VersionQualifier.< infix(_:_:)(v8, v9);
  return OUTLINED_FUNCTION_2_74(v6);
}

BOOL sub_190BDC8EC(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  uint64_t v5;

  v4 = a2;
  v5 = a1;
  v2 = static VersionNumber.< infix(_:_:)((_BOOL8)&v4, (uint64_t)&v5);
  return OUTLINED_FUNCTION_2_74(v2);
}

BOOL sub_190BDC918()
{
  char v0;

  v0 = sub_190BE6380();
  return OUTLINED_FUNCTION_2_74(v0);
}

uint64_t Array<A>.compatible(with:)()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_82();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF60], v0);
  return sub_190BE5D20();
}

uint64_t sub_190BDC9D4()
{
  return sub_190BDCAD8() & 1;
}

uint64_t Array<A>.firstCompatible(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  if (*a1)
  {
    MEMORY[0x1E0C80A78](a1);
    v1 = OUTLINED_FUNCTION_0_82();
    MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v1);
    return sub_190BE5240();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_0_82();
    MEMORY[0x194016EF8](MEMORY[0x1E0DEAF50], v3);
    return sub_190BE5774();
  }
}

uint64_t sub_190BDCAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 40);
  v6 = v2;
  return Versionable.isCompatible(with:)((uint64_t)&v4, v1) & 1;
}

uint64_t dispatch thunk of Versionable.minVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Versionable.maxVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t Reportable.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  Reportable.init()();
  return v0;
}

uint64_t Reportable.init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_83();
  *(_QWORD *)(v0 + 16) = sub_190BE5384();
  return v0;
}

uint64_t Reportable.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Reportable.__deallocating_deinit()
{
  Reportable.deinit();
  return swift_deallocClassInstance();
}

uint64_t Reportable.then(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v2;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = *(_QWORD *)(v5 + 80);
  v6[3] = a1;
  v6[4] = a2;
  OUTLINED_FUNCTION_1_11();
  swift_getFunctionTypeMetadata1();
  OUTLINED_FUNCTION_6();
  swift_retain();
  sub_190BE53D8();
  return swift_endAccess();
}

uint64_t Reportable.trigger(value:)()
{
  uint64_t v0;

  swift_beginAccess();
  OUTLINED_FUNCTION_0_83();
  v0 = OUTLINED_FUNCTION_6();
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  MEMORY[0x194016EF8](MEMORY[0x1E0DEAF38], v0);
  sub_190BE527C();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall Reportable.reset()()
{
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_0_83();
  sub_190ADAA00();
  sub_190BE5438();
  sub_190BE5420();
  swift_endAccess();
}

uint64_t sub_190BDCDA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDCDC4(uint64_t (**a1)(_QWORD))
{
  uint64_t v1;

  return (*a1)(*(_QWORD *)(v1 + 24));
}

uint64_t sub_190BDCDF4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Reportable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Reportable);
}

uint64_t method lookup function for Reportable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Reportable.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ClosedRange<>.shift(by:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata2;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - v14;
  OUTLINED_FUNCTION_1_80();
  OUTLINED_FUNCTION_1_80();
  v27 = a1;
  result = sub_190BE4F4C();
  if ((result & 1) != 0)
  {
    v17 = TupleTypeMetadata2;
    v18 = (uint64_t)&v8[*(int *)(TupleTypeMetadata2 + 48)];
    OUTLINED_FUNCTION_0_84((uint64_t)v8, (uint64_t)v15);
    OUTLINED_FUNCTION_0_84(v18, (uint64_t)v12);
    v19 = &v5[*(int *)(v17 + 48)];
    v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v20(v5, v8, v3);
    v20(v19, (char *)v18, v3);
    v21 = v26;
    OUTLINED_FUNCTION_0_84(v26, (uint64_t)v5);
    v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v19, v3);
    v23 = (uint64_t)&v5[*(int *)(v17 + 48)];
    OUTLINED_FUNCTION_0_84((uint64_t)v5, (uint64_t)v8);
    OUTLINED_FUNCTION_0_84(v23, v18);
    OUTLINED_FUNCTION_0_84(v21 + *(int *)(v27 + 36), v23);
    return ((uint64_t (*)(char *, uint64_t))v22)(v5, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ClosedRange<>.invert(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190BE5E70();
  sub_190BE5E64();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_190BDD104()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t FloatingPointTranslator.__allocating_init(value:within:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FloatingPointTranslator.init(value:within:)(a1);
  return v2;
}

void FloatingPointTranslator.translate(to:inverted:)(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  int v29;
  char *v30;
  uint64_t v31;

  v29 = a2;
  v31 = a1;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_13();
  v30 = (char *)v11;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - v16;
  v19 = type metadata accessor for FloatingPointTranslator.Translation(0, v6, *(_QWORD *)(v5 + 88), v18);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v26 - v21;
  (*(void (**)(char *, uint64_t, double))(v23 + 16))((char *)&v26 - v21, (uint64_t)v3 + *(_QWORD *)(v5 + 96), v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(a3, v31, v6);
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v28 = a3;
    v27(v17, v22, v6);
    v24 = sub_190BE4FC4();
    sub_190BE5E70();
    sub_190BE566C();
    sub_190BE5E64();
    OUTLINED_FUNCTION_3_71((uint64_t)v9);
    if ((v29 & 1) != 0)
    {
      v25 = (uint64_t)v30;
      ClosedRange<>.invert(value:)((uint64_t)v30, v24);
      OUTLINED_FUNCTION_3_71(v25);
      OUTLINED_FUNCTION_3_71((uint64_t)v14);
      OUTLINED_FUNCTION_3_71((uint64_t)v17);
    }
    else
    {
      OUTLINED_FUNCTION_3_71((uint64_t)v14);
      OUTLINED_FUNCTION_3_71((uint64_t)v17);
      v27(v28, v30, v6);
    }
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t method lookup function for FloatingPointTranslator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FloatingPointTranslator.__allocating_init(value:within:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_190BDD3BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_190BDD4E8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_190BDD67C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_190BDD684()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_190BDD6A8(uint64_t a1, uint64_t a2)
{
  return __swift_getEnumTagSinglePayload(a1, 1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_190BDD6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(a3 + 16));
}

uint64_t static XPCInterfaceBuilder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  *a2 = *(_QWORD *)a1;
  a2[1] = v3;
  v4 = v2;
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

ValueMetadata *type metadata accessor for XPCInterfaceBuilder()
{
  return &type metadata for XPCInterfaceBuilder;
}

TeaFoundation::StartupTaskExecutionPhase_optional __swiftcall StartupTaskExecutionPhase.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  TeaFoundation::StartupTaskExecutionPhase_optional result;
  char v5;

  v2 = v1;
  v3 = sub_190BE5EF4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t StartupTaskExecutionPhase.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0x75614C7265746661;
  if (*v0)
    return v1;
  else
    return 0xD000000000000013;
}

void sub_190BDD7BC(unsigned __int8 *a1, char *a2)
{
  sub_190B564B8(*a1, *a2);
}

void sub_190BDD7C8()
{
  sub_190BE230C();
}

uint64_t sub_190BDD7D0()
{
  return sub_190B2B244();
}

void sub_190BDD7D8()
{
  sub_190BE2390();
}

TeaFoundation::StartupTaskExecutionPhase_optional sub_190BDD7E0(Swift::String *a1)
{
  return StartupTaskExecutionPhase.init(rawValue:)(*a1);
}

unint64_t sub_190BDD7EC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = StartupTaskExecutionPhase.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_190BDD810(_QWORD *a1@<X8>)
{
  StartupTaskType.group.getter(a1);
}

void sub_190BDD824(_BYTE *a1@<X8>)
{
  StartupTaskType.executionPhase.getter(a1);
}

void sub_190BDD838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  StartupTaskType.run()(a1, a2, a3, a4);
}

void sub_190BDD84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED032C30)
  {
    v4 = type metadata accessor for Promise(0, MEMORY[0x1E0DEE9C0] + 8, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED032C30);
  }
}

unint64_t sub_190BDD8A0()
{
  unint64_t result;

  result = qword_1EE200940;
  if (!qword_1EE200940)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for StartupTaskExecutionPhase, &type metadata for StartupTaskExecutionPhase);
    atomic_store(result, (unint64_t *)&qword_1EE200940);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StartupTaskExecutionPhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190BDD928 + 4 * byte_190BF13A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190BDD95C + 4 * asc_190BF13A0[v4]))();
}

uint64_t sub_190BDD95C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BDD964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BDD96CLL);
  return result;
}

uint64_t sub_190BDD978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BDD980);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190BDD984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BDD98C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of StartupTaskType.group.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of StartupTaskType.executionPhase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StartupTaskType.run()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StartupTaskType.run(launchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t withPatience<A>(_:granularity:_:)(void (*a1)(uint64_t), void (*a2)(uint64_t), uint64_t a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;

  v9 = OUTLINED_FUNCTION_0_1();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - v14;
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  sub_190BE4784();
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  v17 = sub_190BDDAAC((uint64_t)v15, a1, a2, a3, a5);
  v16(v15, v9);
  return v17;
}

uint64_t sub_190BDDAAC(uint64_t a1, void (*a2)(uint64_t), void (*a3)(uint64_t), uint64_t a4, double a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (**v45)(uint64_t);
  void (*v46)(uint64_t);
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  void (*v75)(uint64_t);
  uint64_t v76;

  v74 = a2;
  v75 = a3;
  v8 = sub_190BE4CAC();
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v71 = (char *)&v63 - v11;
  v68 = sub_190BE59A8();
  v70 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v13 = (char *)&v63 - v12;
  v76 = a4;
  v14 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v63 - v19;
  v21 = sub_190BE47E4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s13TeaFoundation12DateProviderC3now0B00C0VyF_0();
  v25 = a1;
  LOBYTE(a1) = sub_190BE4778();
  v26 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if ((a1 & 1) != 0)
  {
    v63 = v17;
    v64 = v21;
    v65 = v23;
    v66 = v22;
    v29 = v72;
    v30 = v73;
    v32 = v70;
    v31 = v71;
    v67 = v25;
    v74(v26);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v76) == 1)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v68);
      v33 = v69;
      sub_190BE4CA0();
      MEMORY[0x194014FA8](v33, a5);
      v34 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
      v35 = v34(v33, v30);
      MEMORY[0x1E0C80A78](v35);
      *(&v63 - 2) = v31;
      sub_190BDD84C(0, v36, v37, v38);
      swift_allocObject();
      sub_190B20F94((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190B2843C, (uint64_t)(&v63 - 4));
      v34(v31, v30);
      v39 = v66;
      v40 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v24, v67, v64);
      v41 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      v42 = (v65 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      v43 = swift_allocObject();
      v44 = v76;
      *(_QWORD *)(v43 + 16) = v76;
      *(double *)(v43 + 24) = a5;
      (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v43 + v41, v24, v40);
      v45 = (void (**)(uint64_t))(v43 + v42);
      v46 = v75;
      *v45 = v74;
      v45[1] = v46;
      v47 = (_QWORD *)swift_allocObject();
      v47[2] = v44;
      v47[3] = sub_190BDDF90;
      v47[4] = v43;
      swift_retain();
      v48 = (void *)sub_190AC06B8(MEMORY[0x1E0DEE9C0] + 8, v44);
      Promise.then<A>(on:closure:)();
      v50 = v49;
      swift_release();
      swift_release();

    }
    else
    {
      v56 = v20;
      v57 = v13;
      v58 = v76;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v57, v76);
      type metadata accessor for Promise(0, v58, v59, v60);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v20, v58);
      Promise.__allocating_init(value:)();
      v50 = v61;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v56, v58);
    }
  }
  else
  {
    type metadata accessor for Promise(0, v76, v27, v28);
    v51 = sub_190BE644C();
    v53 = v52;
    sub_190BDDEE0();
    swift_allocError();
    *v54 = v51;
    v54[1] = v53;
    Promise.__allocating_init(error:)();
    return v55;
  }
  return v50;
}

ValueMetadata *type metadata accessor for PatienceTimeoutExpired()
{
  return &type metadata for PatienceTimeoutExpired;
}

unint64_t sub_190BDDEE0()
{
  unint64_t result;

  result = qword_1EE200948;
  if (!qword_1EE200948)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for PatienceTimeoutExpired, &type metadata for PatienceTimeoutExpired);
    atomic_store(result, (unint64_t *)&qword_1EE200948);
  }
  return result;
}

uint64_t sub_190BDDF1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_1();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDDF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(OUTLINED_FUNCTION_0_1() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_190BDDAAC(v0 + v3, *v4, v4[1], v1, *(double *)(v0 + 24));
}

uint64_t sub_190BDDFE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDE008()
{
  return type metadata accessor for CallbackRegistration();
}

uint64_t sub_190BDE010()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDE034()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDE060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~v2) == 0)
        v4 = 0;
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void sub_190BDE0B0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  swift_bridgeObjectRelease();
  *a2 = v4;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190BDE100(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

void sub_190BDE108(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

void sub_190BDE110(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

uint64_t sub_190BDE118(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

uint64_t sub_190BDE124(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = *v1 & a1;
  if (result)
    *v1 &= ~a1;
  return result;
}

void sub_190BDE148(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  _QWORD *v2;

  if ((*v2 & a2) != 0)
    *v2 &= ~a2;
  OUTLINED_FUNCTION_4_52(a1);
}

uint64_t sub_190BDE16C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

void sub_190BDE184(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  _QWORD *v2;

  *v2 |= a2;
  OUTLINED_FUNCTION_4_52(a1);
}

uint64_t sub_190BDE19C(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_190BDE1AC(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

void sub_190BDE1B4(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

BOOL sub_190BDE1BC(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_190BDE1C8(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_190BDE1D4(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

uint64_t sub_190BDE1E4(void (*a1)(__int128 *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  if (a3 >> 62)
    goto LABEL_19;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  for (; v5; v5 = sub_190BE5EAC())
  {
    v6 = MEMORY[0x1E0DEE9D8];
    for (i = 4; ; ++i)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x194015F20](i - 4, a3);
      }
      else
      {
        v8 = *(_QWORD *)(a3 + 8 * i);
        swift_retain();
      }
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v18 = v8;
      a1(&v17, &v18);
      if (v3)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_3_1();
        swift_release();
        return v6;
      }
      swift_release();
      if ((_QWORD)v17)
      {
        v16 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_8_47();
          v6 = v12;
        }
        v10 = *(_QWORD *)(v6 + 16);
        v11 = v16;
        if (v10 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          OUTLINED_FUNCTION_8_47();
          v11 = v16;
          v6 = v13;
        }
        *(_QWORD *)(v6 + 16) = v10 + 1;
        *(_OWORD *)(v6 + 16 * v10 + 32) = v11;
      }
      if (v9 == v5)
      {
        OUTLINED_FUNCTION_3_1();
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  OUTLINED_FUNCTION_3_1();
  return MEMORY[0x1E0DEE9D8];
}

BOOL sub_190BDE39C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  int v7;

  v3 = v2;
  v6 = *(_QWORD *)(v2 + 16);
  UnfairLock.lock()();
  swift_beginAccess();
  v7 = *(unsigned __int8 *)(v3 + 32);
  *(_BYTE *)(v3 + 32) = a1;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  if ((a2 & 1) == 0 || v7 != a1)
    sub_190BDE424(a1);
  return v7 != a1;
}

uint64_t sub_190BDE424(char a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  _QWORD v16[4];
  unint64_t v17;
  char v18;

  v18 = a1;
  v2 = *(_QWORD *)(v1 + 16);
  UnfairLock.lock()();
  v3 = (unint64_t *)(v1 + 24);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  v16[2] = &v18;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v5 = sub_190BDE1E4((void (*)(__int128 *__return_ptr, uint64_t *))sub_190BDEEF4, (uint64_t)v16, v4);
  swift_bridgeObjectRelease();
  v6 = *v3;
  v17 = MEMORY[0x1E0DEE9D8];
  if (v6 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v7 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (!v7)
    goto LABEL_14;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v10 = MEMORY[0x194015F20](i, v6);
    }
    else
    {
      v10 = *(_QWORD *)(v6 + 8 * i + 32);
      swift_retain();
    }
    if (MEMORY[0x1940170E4](v10 + 16))
    {
      swift_unknownObjectRelease();
      sub_190BE5D2C();
      sub_190BE5D5C();
      sub_190BE5D68();
      sub_190BE5D38();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v17;
LABEL_15:
  *v3 = v11;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  v12 = *(_QWORD *)(v5 + 16);
  if (v12)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v13 = v5 + 40;
    do
    {
      v14 = *(void (**)(uint64_t))(v13 - 8);
      v15 = swift_retain();
      v14(v15);
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_190BDE62C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  _QWORD v16[4];
  unint64_t v17;
  uint64_t v18;

  v18 = a1;
  v2 = *(_QWORD *)(v1 + 16);
  UnfairLock.lock()();
  v3 = (unint64_t *)(v1 + 24);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  v16[2] = &v18;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v5 = sub_190BDE1E4((void (*)(__int128 *__return_ptr, uint64_t *))sub_190BDEEA8, (uint64_t)v16, v4);
  swift_bridgeObjectRelease();
  v6 = *v3;
  v17 = MEMORY[0x1E0DEE9D8];
  if (v6 >> 62)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    result = sub_190BE5EAC();
    v7 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (!v7)
    goto LABEL_14;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v10 = MEMORY[0x194015F20](i, v6);
    }
    else
    {
      v10 = *(_QWORD *)(v6 + 8 * i + 32);
      swift_retain();
    }
    if (MEMORY[0x1940170E4](v10 + 16))
    {
      swift_unknownObjectRelease();
      sub_190BE5D2C();
      sub_190BE5D5C();
      sub_190BE5D68();
      sub_190BE5D38();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v17;
LABEL_15:
  *v3 = v11;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  v12 = *(_QWORD *)(v5 + 16);
  if (v12)
  {
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    v13 = v5 + 40;
    do
    {
      v14 = *(void (**)(uint64_t))(v13 - 8);
      v15 = swift_retain();
      v14(v15);
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void (*sub_190BDE834(uint64_t a1, char a2))()
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = MEMORY[0x1940170E4](a1 + 16);
  swift_unknownObjectRelease();
  if (!v4)
    return 0;
  v5 = *(void **)(a1 + 40);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 24) = a2;
  swift_retain();
  v7 = sub_190ADADE0(v5, (void (*)())sub_190BDEF2C, v6);
  v9 = v8;
  swift_release();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v9;
  return sub_190BDEF78;
}

void (*sub_190BDE900(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = MEMORY[0x1940170E4](a1 + 16);
  swift_unknownObjectRelease();
  if (!v4)
    return 0;
  v5 = *(void **)(a1 + 40);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = sub_190ADADE0(v5, (void (*)())sub_190BDEEE8, v6);
  v9 = v8;
  swift_release();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v9;
  return sub_190AF6F04;
}

uint64_t sub_190BDE9C8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v5 = a2;
  v3 = MEMORY[0x1940170E4](a1 + 16);
  result = swift_unknownObjectRelease();
  if (v3)
  {
    result = (*(uint64_t (**)(char *))(a1 + 24))(&v5);
    if (*(_BYTE *)(a1 + 48) == 1)
      return swift_unknownObjectWeakAssign();
  }
  return result;
}

uint64_t sub_190BDEA44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v5 = a2;
  v3 = MEMORY[0x1940170E4](a1 + 16);
  result = swift_unknownObjectRelease();
  if (v3)
  {
    result = (*(uint64_t (**)(uint64_t *))(a1 + 24))(&v5);
    if (*(_BYTE *)(a1 + 48) == 1)
      return swift_unknownObjectWeakAssign();
  }
  return result;
}

uint64_t sub_190BDEAC0(_QWORD *a1)
{
  return sub_190AA61F8(0, a1);
}

void sub_190BDEAEC(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

uint64_t sub_190BDEAF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = j__OUTLINED_FUNCTION_97();
  *a1 = result;
  return result;
}

uint64_t sub_190BDEB18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_190BDE100(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_190BDEB44(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_190B56728(*a1, *v2);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190BDEB6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_190BDE118(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_190BDEB98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_190BDE124(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_190BDEBC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_190BDE16C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_190BDEBF8(uint64_t *a1)
{
  return j__OUTLINED_FUNCTION_39_11(*a1);
}

uint64_t sub_190BDEC00(uint64_t *a1)
{
  return sub_190BDE19C(*a1);
}

uint64_t sub_190BDEC08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_190BDE1AC(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_190BDEC34(uint64_t *a1)
{
  uint64_t *v1;

  return sub_190BDE1BC(*a1, *v1);
}

uint64_t sub_190BDEC40(uint64_t *a1)
{
  return sub_190BDE1D4(*a1);
}

_QWORD *sub_190BDEC48@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_190BDEC58(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_8_0(a1);
}

uint64_t sub_190BDEC60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_190BDE060(a1);
  *a2 = result;
  return result;
}

uint64_t sub_190BDEC84()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110();

  swift_release();
  return v0;
}

uint64_t sub_190BDECAC()
{
  sub_190BDEC84();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

unint64_t sub_190BDECE0()
{
  unint64_t result;

  result = qword_1EE200950;
  if (!qword_1EE200950)
  {
    result = MEMORY[0x194016EF8](&unk_190BF1664, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_1EE200950);
  }
  return result;
}

unint64_t sub_190BDED20()
{
  unint64_t result;

  result = qword_1EE200958;
  if (!qword_1EE200958)
  {
    result = MEMORY[0x194016EF8](&unk_190BF1634, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_1EE200958);
  }
  return result;
}

unint64_t sub_190BDED60()
{
  unint64_t result;

  result = qword_1EE200960;
  if (!qword_1EE200960)
  {
    result = MEMORY[0x194016EF8](&unk_190BF168C, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_1EE200960);
  }
  return result;
}

unint64_t sub_190BDEDA0()
{
  unint64_t result;

  result = qword_1EE200968;
  if (!qword_1EE200968)
  {
    result = MEMORY[0x194016EF8](&unk_190BF16C4, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_1EE200968);
  }
  return result;
}

void (*sub_190BDEDDC@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, void (**a3)()@<X8>))()
{
  uint64_t v3;
  void (*result)();
  void (*v6)();

  result = sub_190BDE834(*a1, *a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_190BDEE0C(uint64_t a1, char *a2)
{
  return sub_190BDE9C8(a1, *a2);
}

uint64_t sub_190BDEE14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_190BDEAC0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_190BDEE3C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;

  return sub_190BDEE14(v1, a1);
}

uint64_t sub_190BDEE54()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void (*sub_190BDEE78@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (**a3)()@<X8>))()
{
  uint64_t v3;
  void (*result)();
  void (*v6)();

  result = sub_190BDE900(*a1, *a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

void (*sub_190BDEEA8@<X0>(uint64_t *a1@<X0>, void (**a2)()@<X8>))()
{
  uint64_t v2;

  return sub_190BDEE78(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_190BDEEC0(uint64_t a1, uint64_t *a2)
{
  return sub_190BDEA44(a1, *a2);
}

uint64_t sub_190BDEEC8()
{
  OUTLINED_FUNCTION_110();
  return swift_deallocObject();
}

uint64_t sub_190BDEEE8()
{
  uint64_t v0;

  return sub_190BDEEC0(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24));
}

void (*sub_190BDEEF4@<X0>(uint64_t *a1@<X0>, void (**a2)()@<X8>))()
{
  uint64_t v2;

  return sub_190BDEDDC(a1, *(char **)(v2 + 16), a2);
}

uint64_t sub_190BDEF0C()
{
  OUTLINED_FUNCTION_110();
  return swift_deallocObject();
}

uint64_t sub_190BDEF2C()
{
  uint64_t v0;

  return sub_190BDEE0C(*(_QWORD *)(v0 + 16), (char *)(v0 + 24));
}

uint64_t sub_190BDEF38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t dispatch thunk of DeserializerType.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DeserializerType.deserialize(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t MockServer.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_24();
  MockServer.init()();
  return v0;
}

uint64_t MockServer.listeningPort.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unsigned __int16 v6;
  uint64_t v7;

  sub_190AAC38C(0, &qword_1ED0320F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCE270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - v2;
  if (!*(_QWORD *)(v0 + 16))
    return 0;
  swift_retain();
  sub_190BE4A90();
  swift_release();
  v4 = sub_190BE4A6C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    sub_190BDF0BC((uint64_t)v3);
    return 0;
  }
  v6 = sub_190BE4A60();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v6;
}

uint64_t sub_190BDF0BC(uint64_t a1)
{
  uint64_t v2;

  sub_190AAC38C(0, &qword_1ED0320F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCE270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MockServer.run()()
{
  sub_190AA8A30();
}

Swift::Void __swiftcall MockServer.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  if (*(_QWORD *)(v0 + 16))
  {
    swift_retain();
    sub_190BE4ACC();
    swift_release();
  }
  *(_QWORD *)(v0 + 16) = 0;
  swift_release();
  v2 = *(_QWORD *)(v0 + 64);
  UnfairLock.lock()();
  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
}

uint64_t sub_190BDF200(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *))
{
  char v4;
  uint64_t v6;
  __int128 v7;
  char v8;
  __int128 v9;

  v4 = *((_BYTE *)a1 + 24);
  v6 = *a1;
  v7 = *(_OWORD *)(a1 + 1);
  v8 = v4;
  v9 = *((_OWORD *)a1 + 2);
  return a4(&v6);
}

uint64_t MockServer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t MockServer.__deallocating_deinit()
{
  MockServer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190BDF2B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDF2DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_190BDF200(a1, a2, a3, *(uint64_t (**)(uint64_t *))(v3 + 16));
}

uint64_t method lookup function for MockServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockServer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for MockServer.ServerError()
{
  return &type metadata for MockServer.ServerError;
}

unint64_t sub_190BDF308()
{
  unint64_t result;

  result = qword_1EE200970;
  if (!qword_1EE200970)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for MockServer.ServerError, &type metadata for MockServer.ServerError);
    atomic_store(result, (unint64_t *)&qword_1EE200970);
  }
  return result;
}

void NetworkOperationEvent.httpResponse.getter()
{
  uint64_t v0;
  id v1;

  if (*(unsigned __int8 *)(v0 + 16) <= 1u)
    v1 = *(id *)v0;
  OUTLINED_FUNCTION_0();
}

id NetworkOperationEvent.httpStatusCode.getter()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 16) > 1u)
    return 0;
  else
    return objc_msgSend(*(id *)v0, sel_statusCode);
}

void NetworkOperationEvent.error.getter()
{
  uint64_t v0;
  id v1;

  if (*(unsigned __int8 *)(v0 + 16) >= 2u)
    v1 = *(id *)v0;
  OUTLINED_FUNCTION_0();
}

void NetworkOperationEvent.errorCode.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;

  if (*(unsigned __int8 *)(v0 + 16) >= 2u)
  {
    v3 = v0;
    v2 = *(void **)v0;
    v1 = *(void **)(v3 + 8);
    v4 = v2;
    v5 = (void *)sub_190BE4538();
    objc_msgSend(v5, sel_code);

    sub_190B054C0(v2, v1, 2);
  }
  OUTLINED_FUNCTION_4();
}

void NetworkOperationEvent.metrics.getter()
{
  uint64_t v0;
  id v1;

  if (!*(_BYTE *)(v0 + 16))
    v1 = *(id *)(v0 + 8);
  OUTLINED_FUNCTION_0();
}

uint64_t assignWithCopy for NetworkOperationEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190AAF60C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_190B054C0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NetworkOperationEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_190B054C0(v4, v5, v6);
  return a1;
}

uint64_t static AsyncOperationError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_190BDF514(uint64_t a1, uint64_t a2)
{
  return sub_190BDF528(a1, a2, (void (*)(uint64_t, uint64_t))sub_190BE09F0, (void (*)(uint64_t, uint64_t))sub_190BE09F4);
}

uint64_t sub_190BDF528(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = v4;
  v10 = *(_QWORD *)(v4 + 16);
  UnfairLock.lock()();
  swift_beginAccess();
  v11 = *(_QWORD *)(v7 + 24);
  v12 = *(_QWORD *)(v7 + 32);
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  a3(a1, a2);
  a4(v11, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  return ((uint64_t (*)(uint64_t, uint64_t))a4)(a1, a2);
}

uint64_t sub_190BDF5C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDF5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    v4 = OUTLINED_FUNCTION_24();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
  }
  OUTLINED_FUNCTION_1();
  v5 = OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_16_36(v5, v6, (void (*)(uint64_t, uint64_t))sub_190BE09F0, (void (*)(uint64_t, uint64_t))sub_190BE09F4);
  OUTLINED_FUNCTION_12_31();
  return OUTLINED_FUNCTION_0_86();
}

void sub_190BDF66C(void (**a1)())
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  a1[2] = *(void (**)())(v1 + qword_1ED034648);
  swift_retain();
  v3 = sub_190ABC424();
  if (v3)
  {
    v5 = v3;
    v6 = v4;
    v3 = OUTLINED_FUNCTION_24();
    *(_QWORD *)(v3 + 16) = v5;
    *(_QWORD *)(v3 + 24) = v6;
    v7 = sub_190BDEF78;
  }
  else
  {
    v7 = 0;
  }
  *a1 = v7;
  a1[1] = (void (*)())v3;
  OUTLINED_FUNCTION_4();
}

uint64_t sub_190BDF6E4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = a1[1];
    if (v2)
    {
      v4 = OUTLINED_FUNCTION_24();
      *(_QWORD *)(v4 + 16) = v2;
      *(_QWORD *)(v4 + 24) = v3;
    }
    v8 = sub_190AFCCE8(v2);
    OUTLINED_FUNCTION_16_36(v8, v9, (void (*)(uint64_t, uint64_t))sub_190BE09F0, (void (*)(uint64_t, uint64_t))sub_190BE09F4);
    OUTLINED_FUNCTION_2();
    return sub_190AB9930(v2);
  }
  else
  {
    if (v2)
    {
      v5 = a1[1];
      v6 = OUTLINED_FUNCTION_24();
      *(_QWORD *)(v6 + 16) = v2;
      *(_QWORD *)(v6 + 24) = v5;
      v7 = (uint64_t)sub_190BDEF78;
    }
    else
    {
      v7 = OUTLINED_FUNCTION_11_37();
    }
    sub_190BDF528(v7, v6, (void (*)(uint64_t, uint64_t))sub_190BE09F0, (void (*)(uint64_t, uint64_t))sub_190BE09F4);
    return OUTLINED_FUNCTION_0_86();
  }
}

void sub_190BDF7D0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)();
  _QWORD v7[2];

  v4 = a1;
  if (a1)
  {
    v5 = *MEMORY[0x1E0DEEDD8] & *v2;
    a1 = (_QWORD *)OUTLINED_FUNCTION_24();
    a1[2] = *(_QWORD *)(v5 + 80);
    a1[3] = v4;
    a1[4] = a2;
    v6 = sub_190AC57DC;
  }
  else
  {
    v6 = 0;
  }
  v7[0] = v6;
  v7[1] = a1;
  swift_retain();
  OUTLINED_FUNCTION_122();
  Atomic.wrappedValue.setter((uint64_t)v7);
  OUTLINED_FUNCTION_12_31();
  swift_release();
  OUTLINED_FUNCTION_2_4();
}

void (*sub_190BDF86C(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)();

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = *MEMORY[0x1E0DEEDD8];
  v3[6] = *v1;
  v3[7] = v5;
  v3[8] = *(uint64_t *)((char *)v1 + qword_1ED034660);
  swift_retain();
  Atomic.wrappedValue.getter((uint64_t)(v3 + 2));
  v6 = v3[2];
  if (v6)
  {
    v7 = v5 & v4;
    v8 = v3[3];
    v9 = (_QWORD *)OUTLINED_FUNCTION_24();
    v9[2] = *(_QWORD *)(v7 + 80);
    v9[3] = v6;
    v9[4] = v8;
    v10 = sub_190BC6804;
  }
  else
  {
    v10 = 0;
    v9 = 0;
  }
  *v3 = v10;
  v3[1] = v9;
  return sub_190BDF930;
}

void sub_190BDF930(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)();
  uint64_t v9;
  _QWORD *v10;
  void (*v11)();

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 4);
  v5 = **a1;
  v4 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    if (v5)
    {
      v6 = v2[6] & v2[7];
      v7 = (_QWORD *)OUTLINED_FUNCTION_24();
      v7[2] = *(_QWORD *)(v6 + 80);
      v7[3] = v5;
      v7[4] = v4;
      v8 = sub_190BC6804;
    }
    else
    {
      v8 = 0;
      v7 = 0;
    }
    v2[4] = (uint64_t)v8;
    v2[5] = (uint64_t)v7;
    sub_190AFCCE8(v5);
    Atomic.wrappedValue.setter(v3);
    swift_release();
    sub_190AB9930(*v2);
  }
  else
  {
    if (v5)
    {
      v9 = v2[6] & v2[7];
      v10 = (_QWORD *)OUTLINED_FUNCTION_24();
      v10[2] = *(_QWORD *)(v9 + 80);
      v10[3] = v5;
      v10[4] = v4;
      v11 = sub_190BC6804;
    }
    else
    {
      v11 = 0;
      v10 = 0;
    }
    v2[4] = (uint64_t)v11;
    v2[5] = (uint64_t)v10;
    Atomic.wrappedValue.setter(v3);
    swift_release();
  }
  free(v2);
}

uint64_t sub_190BDFA34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_25();
}

uint64_t sub_190BDFA44()
{
  uint64_t *v0;
  _QWORD *v1;

  if (qword_1ED034570 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_190BDFAC4;
  return TaskScheduler.scheduleAsync<A>(_:)(v0[2], v0[3]);
}

uint64_t sub_190BDFAC4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_5();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190BDFAF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *MEMORY[0x1E0DEEDD8];
  v3[5] = *v2;
  v3[6] = v4;
  return OUTLINED_FUNCTION_25();
}

uint64_t sub_190BDFB20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  v2 = v0[4];
  v3 = OUTLINED_FUNCTION_14_36();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = OUTLINED_FUNCTION_14_36();
  v0[8] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_190BDFBC8;
  return sub_190BE60C8();
}

uint64_t sub_190BDFBC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return OUTLINED_FUNCTION_4_1();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_1(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_190BDFC38()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_7(*(uint64_t (**)(void))(v0 + 8));
}

void AsyncOperationError.hash(into:)()
{
  sub_190BE6308();
  OUTLINED_FUNCTION_0();
}

uint64_t AsyncOperationError.hashValue.getter()
{
  sub_190BE62FC();
  sub_190BE6308();
  return sub_190BE6314();
}

uint64_t sub_190BDFCCC()
{
  return AsyncOperationError.hashValue.getter();
}

void sub_190BDFCE0()
{
  AsyncOperationError.hash(into:)();
}

uint64_t sub_190BDFCF4()
{
  return sub_190B1E184();
}

uint64_t sub_190BDFD00()
{
  return sub_190B1E160();
}

uint64_t sub_190BDFD0C()
{
  sub_190BE62FC();
  sub_190B1E160();
  return sub_190BE6314();
}

BOOL sub_190BDFD50(char *a1, char *a2)
{
  return sub_190B1E150(*a1, *a2);
}

uint64_t AsyncOperation.operationID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1ED034388);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

void sub_190BDFD98(void (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  sub_190ABC3B4();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_190BDEF78;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)())v2;
}

uint64_t sub_190BDFDFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_190BDEF78;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_190AFCCE8(v1);
  return sub_190BDF5E8((uint64_t)v4, v3);
}

_QWORD *sub_190BDFE7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void (**a3)()@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)();

  v4 = *(_QWORD *)(a2 + a1 - 8);
  result = sub_190AE28C4();
  if (result)
  {
    v7 = result;
    v8 = v6;
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
    result[3] = v7;
    result[4] = v8;
    v9 = sub_190BC6804;
  }
  else
  {
    v9 = 0;
  }
  *a3 = v9;
  a3[1] = (void (*)())result;
  return result;
}

void sub_190BDFEEC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)();

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = *(_QWORD *)(a4 + a3 - 8);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v6;
    v7[3] = v4;
    v7[4] = v5;
    v8 = sub_190BC6804;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_190AFCCE8(v4);
  sub_190BDF7D0(v8, (uint64_t)v7);
}

uint64_t sub_190BDFF78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BDFF9C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = *MEMORY[0x1E0DEEDD8];
  v3[5] = *a2;
  v3[6] = v4;
  return swift_task_switch();
}

uint64_t sub_190BDFFCC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_14_36();
  *(_QWORD *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_190B529C0;
  return sub_190BE6218();
}

uint64_t sub_190BE006C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v5 = *(_QWORD **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_190B17F08;
  return sub_190BDFF9C(a1, v5, v4);
}

uint64_t sub_190BE00D0(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)();
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;
  id v17;

  v17 = a3;
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x50);
  sub_190ABC730();
  v6 = sub_190BE5498();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - v8;
  v10 = sub_190AE28C4();
  v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v5;
  *((_QWORD *)v14 + 3) = v10;
  *((_QWORD *)v14 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], v9, v6);
  sub_190AFCCE8((uint64_t)v10);
  sub_190BDF7D0(sub_190BE0988, (uint64_t)v14);
  objc_msgSend(v17, sel_addOperation_, a2);
  return sub_190AB9930((uint64_t)v10);
}

void sub_190BE0220(uint64_t a1, void (*a2)(uint64_t, double), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  id *v21;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD v25[3];
  id v26;

  v25[1] = a4;
  v8 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v25 - v12;
  v17 = type metadata accessor for Result(0, v16, v14, v15);
  v18 = *(_QWORD *)(v17 - 8);
  v19.n128_f64[0] = MEMORY[0x1E0C80A78](v17);
  v21 = (id *)((char *)v25 - v20);
  if (a2)
    a2(a1, v19.n128_f64[0]);
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v18 + 16))(v21, a1, v17, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = *v21;
    v22 = v26;
    v23 = v26;
    sub_190ABC730();
    if (swift_dynamicCast())
    {

      sub_190BE54A4();
      sub_190B53394();
      v24 = swift_allocError();
      sub_190BE4D84();
      v25[2] = v24;
      sub_190BE5498();
      sub_190BE5480();

    }
    else
    {

      v26 = v22;
      sub_190BE5498();
      sub_190BE5480();
    }
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v8 + 32))(v13, v21, a5);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, a5);
    sub_190ABC730();
    sub_190BE5498();
    sub_190BE548C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, a5);
  }
}

id sub_190BE046C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

uint64_t sub_190BE047C()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_190BE04A0()
{
  unint64_t result;

  result = qword_1EE1FEE78;
  if (!qword_1EE1FEE78)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for AsyncOperationError, &type metadata for AsyncOperationError);
    atomic_store(result, (unint64_t *)&qword_1EE1FEE78);
  }
  return result;
}

uint64_t sub_190BE04DC()
{
  return 1;
}

id AsyncOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AsyncOperation.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for AsyncOperation(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

unint64_t sub_190BE0554()
{
  unint64_t result;

  result = qword_1EE200998;
  if (!qword_1EE200998)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for AsyncOperationError, &type metadata for AsyncOperationError);
    atomic_store(result, (unint64_t *)&qword_1EE200998);
  }
  return result;
}

_QWORD *sub_190BE059C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t storeEnumTagSinglePayload for AsyncOperationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190BE05F4 + 4 * byte_190BF1900[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190BE0614 + 4 * byte_190BF1905[v4]))();
}

_BYTE *sub_190BE05F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190BE0614(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BE061C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BE0624(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BE062C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BE0634(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AsyncOperationError()
{
  return &type metadata for AsyncOperationError;
}

uint64_t method lookup function for AsyncOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncOperation.didStart.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AsyncOperation.didStart.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AsyncOperation.didStart.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AsyncOperation.completion.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AsyncOperation.completion.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AsyncOperation.completion.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AsyncOperation.perform(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AsyncOperation.value.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190B16F5C;
  return v7(a1);
}

uint64_t dispatch thunk of AsyncOperation.execute(on:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xD0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_190B17F08;
  return v9(a1, a2);
}

uint64_t sub_190BE081C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190BE0868 + 4 * byte_190BF190F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190BE089C + 4 * byte_190BF190A[v4]))();
}

uint64_t sub_190BE089C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BE08A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190BE08ACLL);
  return result;
}

uint64_t sub_190BE08B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190BE08C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190BE08C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190BE08CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_190BE08D8()
{
  JUMPOUT(0x194016EF8);
}

uint64_t sub_190BE08E8(uint64_t a1)
{
  uint64_t v1;

  return sub_190BE00D0(a1, *(_QWORD **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_190BE08F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_190ABC730();
  v1 = sub_190BE5498();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 40) & ~v3), v1);
  return swift_deallocObject();
}

void sub_190BE0988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  sub_190ABC730();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_190BE5498() - 8) + 80);
  sub_190BE0220(a1, *(void (**)(uint64_t, double))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v4 + 40) & ~v4), v3);
}

void UnfairLock.__allocating_init(options:)(int *a1)
{
  swift_allocObject();
  UnfairLock.init(options:)(a1);
  OUTLINED_FUNCTION_0();
}

void sub_190BE0A6C(uint64_t a1, _BYTE *a2, uint64_t a3, void *a4)
{
  sub_190AE18D8(a1, a2, a3, a4, (void (*)(void *))sub_190B2C914);
}

void sub_190BE0A78(uint64_t a1, _BYTE *a2, uint64_t a3, void *a4)
{
  sub_190AE18D8(a1, a2, a3, a4, (void (*)(void *))sub_190B2C928);
}

void sub_190BE0A84(uint64_t a1, _BYTE *a2, uint64_t a3, void *a4)
{
  sub_190AE18D8(a1, a2, a3, a4, (void (*)(void *))sub_190B2C9A4);
}

Swift::Void __swiftcall UnfairLock.assertOwner()()
{
  uint64_t v0;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

Swift::Void __swiftcall UnfairLock.assertNotOwner()()
{
  uint64_t v0;

  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v0 + 16));
}

TeaFoundation::UnfairLock::Options __swiftcall UnfairLock.Options.init(rawValue:)(TeaFoundation::UnfairLock::Options rawValue)
{
  TeaFoundation::UnfairLock::Options *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t UnfairLock.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

TeaFoundation::UnfairLock::Options sub_190BE0AB0(Swift::Int *a1)
{
  return UnfairLock.Options.init(rawValue:)(*a1);
}

void sub_190BE0AB8(_QWORD *a1@<X8>)
{
  sub_190BDE108(a1);
}

void sub_190BE0AC4(_QWORD *a1@<X8>)
{
  sub_190BDE110(a1);
}

void sub_190BE0AD0(_QWORD *a1@<X8>)
{
  sub_190BDE1B4(a1);
}

TeaFoundation::UnfairLock::Options sub_190BE0ADC@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  TeaFoundation::UnfairLock::Options result;

  result.rawValue = UnfairLock.Options.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_190BE0B04(uint64_t *a1@<X8>)
{
  *a1 = UnfairLock.Options.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

void UnfairLock.deinit()
{
  OUTLINED_FUNCTION_1_82();
}

uint64_t sub_190BE0B30()
{
  uint64_t v0;

  return v0;
}

void MutexLock.__allocating_init()()
{
  swift_allocObject();
  MutexLock.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t MutexLock.init()()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  OUTLINED_FUNCTION_20_0();
  pthread_mutex_init((pthread_mutex_t *)(v0 + 16), 0);
  swift_endAccess();
  return v0;
}

Swift::Void __swiftcall MutexLock.lock()()
{
  sub_190BE0BE0(MEMORY[0x1E0C84E28]);
}

Swift::Void __swiftcall MutexLock.unlock()()
{
  sub_190BE0BE0(MEMORY[0x1E0C84E38]);
}

uint64_t sub_190BE0BE0(void (*a1)(uint64_t))
{
  uint64_t v1;

  OUTLINED_FUNCTION_20_0();
  a1(v1 + 16);
  return swift_endAccess();
}

uint64_t MutexLock.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MutexLock.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_190BE0C44()
{
  unint64_t result;

  result = qword_1EE2009B0;
  if (!qword_1EE2009B0)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for UnfairLock.Options, &type metadata for UnfairLock.Options);
    atomic_store(result, (unint64_t *)&qword_1EE2009B0);
  }
  return result;
}

unint64_t sub_190BE0C84()
{
  unint64_t result;

  result = qword_1EE2009B8;
  if (!qword_1EE2009B8)
  {
    result = MEMORY[0x194016EF8](&protocol conformance descriptor for UnfairLock.Options, &type metadata for UnfairLock.Options);
    atomic_store(result, (unint64_t *)&qword_1EE2009B8);
  }
  return result;
}

void sub_190BE0CC0()
{
  MutexLock.lock()();
}

void sub_190BE0CE0()
{
  MutexLock.unlock()();
}

uint64_t dispatch thunk of Lock.lock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Lock.unlock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for UnfairLock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UnfairLock.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for MutexLock()
{
  return objc_opt_self();
}

uint64_t method lookup function for MutexLock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MutexLock.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t BridgedBundleAssembly.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_7_2();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t BridgedBundleAssembly.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t BridgedBundleAssembly.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for BridgedBundleAssembly()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedBundleAssembly.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t XPCSelector.selector.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t XPCSelector.arguments.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t XPCSelector.replyBlock.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_190B0ACA8(v2, v3, v4);
}

__n128 XPCSelector.init(_:_:)@<Q0>(unint64_t a1@<X0>, void (*a2)(__n128 *__return_ptr)@<X1>, __n128 *a3@<X8>)
{
  unint64_t v5;
  __n128 result;
  unint64_t v7;
  __n128 v8;
  unint64_t v9;

  a2(&v8);
  v5 = v9;
  result = v8;
  v7 = MEMORY[0x1E0DEE9D8];
  a3->n128_u64[0] = a1;
  a3->n128_u64[1] = v7;
  a3[1] = result;
  a3[2].n128_u64[0] = v5;
  return result;
}

uint64_t XPCSelector.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  result = a2();
  *a3 = a1;
  a3[1] = result;
  a3[3] = 0;
  a3[4] = 0;
  a3[2] = 0;
  return result;
}

uint64_t XPCSelector.withReply(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = *v4;
  v8 = v4[1];
  v10 = a3();
  *a4 = v9;
  a4[1] = v8;
  a4[2] = a1;
  a4[3] = a2;
  a4[4] = v10;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t destroy for XPCSelector(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for XPCSelector(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[4];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  if (v5)
  {
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    a1[4] = v5;
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
  }
  return a1;
}

_QWORD *assignWithCopy for XPCSelector(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *a1 = *a2;
  a1[1] = a2[1];
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a2[4];
  if (a1[4])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_190BE1098((uint64_t)(a1 + 2));
      v7 = a2[4];
      *v4 = *v5;
      a1[4] = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  else
  {
    v8 = *v5;
    a1[4] = a2[4];
    *v4 = v8;
  }
  return a1;
}

uint64_t sub_190BE1098(uint64_t a1)
{
  destroy for XPCArgument();
  return a1;
}

uint64_t assignWithTake for XPCSelector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 32);
  if (!v4)
  {
    sub_190BE1098(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return a1;
  }
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCSelector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCSelector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCSelector()
{
  return &type metadata for XPCSelector;
}

uint64_t *AddressCache.subscript.getter(uint64_t *result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) == 8)
  {
    v3 = *v2;
    v4 = *result;
    return (uint64_t *)MEMORY[0x194015140](&v4, v3, MEMORY[0x1E0DEBB98], *(_QWORD *)(a2 + 24), MEMORY[0x1E0DEBBA8]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_190BE1254(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for AddressCache(0, *(uint64_t *)((char *)a2 + a3 - 16), *(uint64_t *)((char *)a2 + a3 - 8), a4);
  return AddressCache.subscript.getter(a2, v5);
}

void sub_190BE12B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a4 + a3 - 16);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v8 = sub_190BE59A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v19 - v14);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v19 - v14, a3, v6, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v18 = type metadata accessor for AddressCache(0, v6, v7, v17);
  AddressCache.subscript.setter((uint64_t)v11, v15, v18);
}

void AddressCache.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v6 = sub_190BE59A8();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_QWORD *)(v11 + 64) == 8)
  {
    v12 = *a2;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)v13 - v8, a1, v6, v9);
    v13[1] = v12;
    sub_190BE4E98();
    sub_190BE4EB0();
    (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(a2, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  }
  else
  {
    __break(1u);
  }
}

void (*AddressCache.subscript.modify(_QWORD *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;

  v7 = malloc(0x50uLL);
  *a1 = v7;
  *v7 = a3;
  v7[1] = v3;
  v8 = sub_190BE59A8();
  v7[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[4] = malloc(v10);
  v11 = malloc(v10);
  v12 = *(_QWORD *)(a3 + 16);
  v7[5] = v11;
  v7[6] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[7] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v7[8] = malloc(v14);
  v7[9] = malloc(v14);
  (*(void (**)(void))(v13 + 16))();
  AddressCache.subscript.getter(a2, a3);
  return sub_190BE15A0;
}

void sub_190BE15A0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (uint64_t *)(*a1)[8];
  v4 = (uint64_t *)(*a1)[9];
  if ((a2 & 1) != 0)
  {
    v5 = v2[7];
    v11 = v2[6];
    v7 = (void *)v2[4];
    v6 = (void *)v2[5];
    v8 = v2[2];
    v9 = v2[3];
    v10 = *v2;
    (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 32))(v3, v4, v11);
    AddressCache.subscript.setter((uint64_t)v7, v3, v10);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    v7 = (void *)v2[4];
    v6 = (void *)v2[5];
    AddressCache.subscript.setter((uint64_t)v6, v4, *v2);
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  free(v2);
}

uint64_t sub_190BE168C()
{
  return 16;
}

__n128 sub_190BE1698(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t JSONDeserializer.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t JSONDeserializer.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t JSONDeserializer.deserialize(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;

  v7 = *v3;
  type metadata accessor for _TeaJSONDecoder();
  swift_initStackObject();
  _TeaJSONDecoder.init()();
  sub_190AFC3BC(*(_QWORD *)(v7 + 80), a1, a2, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), a3);
  return swift_release();
}

uint64_t JSONDeserializer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t JSONDeserializer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_190BE1760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = JSONDeserializer.__allocating_init()();
  *a1 = result;
  return result;
}

uint64_t sub_190BE1784@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return JSONDeserializer.deserialize(_:)(a1, a2, a3);
}

uint64_t sub_190BE17A4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for JSONDeserializer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JSONDeserializer);
}

uint64_t method lookup function for JSONDeserializer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSONDeserializer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_190BE17F8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_190BE1830()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_190BE1854()
{
  swift_release();
  return swift_deallocObject();
}

Swift::Void __swiftcall DeferredPromise.cancel()()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_1();
    sub_190AB2AD0();
    OUTLINED_FUNCTION_2();
  }
  *(_QWORD *)(v0 + 24) = 0;
  OUTLINED_FUNCTION_69();
}

void OnlyOnceDeferredPromise.reject(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_32();
  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_1();
    sub_190ADF674();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_1_84();
  }
  OUTLINED_FUNCTION_7_56(v0);
}

void OnlyOnceDeferredPromise.tryResolve(_:)(void (*a1)(uint64_t))
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_12_32();
  if (v1[3])
  {
    v7 = swift_retain();
    a1(v7);
    sub_190ADA078();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    OUTLINED_FUNCTION_1_84();
  }
  sub_190ADF2A0((uint64_t)v1);
}

uint64_t method lookup function for DeferredPromise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeferredPromise.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for OnlyOnceDeferredPromise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnlyOnceDeferredPromise.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_190BE1A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v10 = OUTLINED_FUNCTION_0_1();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(a5, a1, v10);
  v14 = type metadata accessor for SignpostReport(0, a4, v12, v13);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a5 + *(int *)(v14 + 28), a2, v10);
  *(_QWORD *)(a5 + *(int *)(v14 + 32)) = a3;
  return result;
}

uint64_t SignpostReport.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_4_6();
  return OUTLINED_FUNCTION_7_1(v0, v1, v2, v3);
}

uint64_t SignpostReport.endDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_4_6();
  return OUTLINED_FUNCTION_7_1(v0, v1, v2, v3);
}

uint64_t SignpostReport.entries.getter()
{
  return _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
}

uint64_t SignpostReport.timeInterval.getter()
{
  return sub_190BE4754();
}

uint64_t SignpostReport.shortDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_190B1820C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190BE8430;
  strcpy((char *)(inited + 32), "timeInterval");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  SignpostReport.timeInterval.getter();
  v6 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0x73656972746E65;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  v8 = *(_QWORD *)(v2 + *(int *)(a1 + 32));
  type metadata accessor for SignpostEntry(255, *(_QWORD *)(a1 + 16), v9, v10);
  *(_QWORD *)(inited + 120) = sub_190BE5438();
  *(_QWORD *)(inited + 96) = v8;
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  v11 = sub_190BE4DFC();
  a2[3] = type metadata accessor for ShortDescription(0, a1, v12, v13);
  a2[4] = (uint64_t)&protocol witness table for ShortDescription<A>;
  return ShortDescription.init(name:_:)(0x74726F706552, 0xE600000000000000, v11, a2);
}

uint64_t sub_190BE1C80(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x194016EF8](&protocol conformance descriptor for SignpostReport<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190BE1CAC(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x194016EF8](&protocol conformance descriptor for SignpostReport<A>, a1);
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t sub_190BE1CE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190BE47E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190BE1D58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190BE47E4();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 28)), (uint64_t *)((char *)a2 + *(int *)(a3 + 28)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  }
  return a1;
}

uint64_t sub_190BE1E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_190BE47E4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 28), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190BE1E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_190BE47E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return a1;
}

uint64_t sub_190BE1EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_190BE47E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190BE1F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_190BE47E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_190BE1FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_190BE47E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190BE2070()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190BE207C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_190BE20F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190BE20FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_0_1();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SignpostReport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SignpostReport);
}

void sub_190BE2178()
{
  uint64_t v0;

  v0 = sub_190BE62FC();
  OUTLINED_FUNCTION_30_22(v0);
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void sub_190BE21A8()
{
  sub_190BE24CC();
}

void sub_190BE21B4()
{
  sub_190BE2528();
}

void sub_190BE21C0()
{
  sub_190BE2474();
}

void sub_190BE21CC(uint64_t a1)
{
  uint64_t v2;
  char v3;
  char v4;

  v2 = sub_190BE62FC();
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_12_33();
    sub_190AD8E3C();
    do
    {
      OUTLINED_FUNCTION_3_74();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_20_28();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_24();
      if (v3)
        OUTLINED_FUNCTION_10_47();
      OUTLINED_FUNCTION_19_33();
    }
    while (!v4);
    v2 = swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_56(v2, (unint64_t *)&qword_1ED034520, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190AD1E54();
  OUTLINED_FUNCTION_9_54();
  OUTLINED_FUNCTION_17_29();
  OUTLINED_FUNCTION_27_24();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25_31();
  OUTLINED_FUNCTION_20();
  sub_190BE6314();
  OUTLINED_FUNCTION_8_48();
}

void sub_190BE2300()
{
  sub_190ABF158();
}

void sub_190BE230C()
{
  sub_190BE2390();
}

uint64_t sub_190BE2318()
{
  sub_190BE62FC();
  sub_190BE50B4();
  return sub_190BE6314();
}

void sub_190BE236C()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_5_51();
  OUTLINED_FUNCTION_30_22(v0);
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void sub_190BE2390()
{
  sub_190BE62FC();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

uint64_t sub_190BE2424()
{
  sub_190BE62FC();
  sub_190BE50B4();
  return sub_190BE6314();
}

void sub_190BE2474()
{
  OUTLINED_FUNCTION_5_51();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void sub_190BE24CC()
{
  OUTLINED_FUNCTION_5_51();
  OUTLINED_FUNCTION_7_57();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void sub_190BE2528()
{
  OUTLINED_FUNCTION_5_51();
  sub_190BE50B4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_3();
}

void sub_190BE2574(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;

  v3 = sub_190BE62FC();
  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_12_33();
    sub_190AD8E3C();
    do
    {
      OUTLINED_FUNCTION_3_74();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_20_28();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_24();
      if (v4)
        OUTLINED_FUNCTION_10_47();
      OUTLINED_FUNCTION_19_33();
    }
    while (!v5);
    v3 = swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_56(v3, (unint64_t *)&qword_1ED034520, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_190AD1E54();
  OUTLINED_FUNCTION_9_54();
  OUTLINED_FUNCTION_17_29();
  OUTLINED_FUNCTION_27_24();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25_31();
  OUTLINED_FUNCTION_20();
  sub_190BE6314();
  OUTLINED_FUNCTION_8_48();
}

uint64_t sub_190BE26A0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if (a2 < result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a2 == result)
    return 0;
  v2 = result;
  v3 = a2 - result;
  if (a2 > result)
  {
    result = 0;
    v4 = ~v2 + a2;
    while (v4 <= 0x7FFFFFFFFFFFFFFELL)
    {
      if (v3 == ++result)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ReferenceEncodingPool.__allocating_init()()
{
  uint64_t result;
  uint64_t v1;

  result = OUTLINED_FUNCTION_24();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(result + 24) = v1;
  return result;
}

void sub_190BE2724(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = *a2;
    v3 = a2[1];
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_31_23(v4);
    OUTLINED_FUNCTION_23_16();
    OUTLINED_FUNCTION_81();
    v5 = OUTLINED_FUNCTION_14_38();
    sub_190BE2868(v5);
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_18_2();
    sub_190ABE764(v6, v4, v3);
    OUTLINED_FUNCTION_23_16();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_26_21();
  }
}

uint64_t ReferenceEncodingPool.values.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_20_0();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

void ReferenceEncodingPool.values.modify()
{
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_190BE2868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 40;
    do
    {
      _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
      sub_190ABE62C();
      swift_bridgeObjectRelease();
      v2 += 16;
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t ReferenceEncodingPool.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v1;
  sub_190AAEAE4(0, &qword_1ED02EBD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190AAEC28();
  sub_190BE6374();
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 16);
  sub_190AAEBC0();
  sub_190BE2CE4();
  OUTLINED_FUNCTION_166();
  sub_190BE5F90();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL sub_190BE29F8()
{
  uint64_t v0;

  v0 = sub_190BE5EF4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_190BE2A3C()
{
  return sub_190BE29F8();
}

BOOL sub_190BE2A60@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_190BE29F8();
  *a1 = result;
  return result;
}

uint64_t sub_190BE2A90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_190B00FCC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_190BE2AB4@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_190BE2A3C();
  *a1 = result;
  return result;
}

uint64_t sub_190BE2ADC()
{
  sub_190AAEC28();
  return sub_190BE6404();
}

uint64_t sub_190BE2B04()
{
  sub_190AAEC28();
  return sub_190BE6410();
}

uint64_t sub_190BE2B2C(_QWORD *a1)
{
  return ReferenceEncodingPool.encode(to:)(a1);
}

unint64_t ReferenceEncodingPool.description.getter()
{
  sub_190BE5C54();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_0();
  sub_190B06408();
  sub_190B089F4();
  OUTLINED_FUNCTION_74();
  sub_190BE4DCC();
  sub_190BE5114();
  OUTLINED_FUNCTION_20();
  swift_bridgeObjectRelease();
  sub_190BE5114();
  return 0xD000000000000016;
}

unint64_t sub_190BE2C1C()
{
  return ReferenceEncodingPool.description.getter();
}

const void *sub_190BE2C3C(uint64_t a1)
{
  _QWORD *v1;
  const void *v2;
  size_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD **)(a1 + 16);
  if (!v1)
    return (const void *)MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_56(a1, &qword_1EE1FF268, (uint64_t)&type metadata for JSONDifference.Change, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = (const void *)OUTLINED_FUNCTION_24();
  v3 = _swift_stdlib_malloc_size(v2);
  OUTLINED_FUNCTION_21_30(v3);
  OUTLINED_FUNCTION_166();
  v8 = sub_190BA1400(v4, v5, v6, v7);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_81();
  if (v8 != v1)
  {
    __break(1u);
    return (const void *)MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

unint64_t sub_190BE2CE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED02EB68;
  if (!qword_1ED02EB68)
  {
    sub_190AAEBC0();
    v2 = v1;
    v3[0] = sub_190ABE864();
    v3[1] = sub_190B063AC(&qword_1ED02EBA8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    result = MEMORY[0x194016EF8](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1ED02EB68);
  }
  return result;
}

uint64_t method lookup function for ReferenceEncodingPool()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReferenceEncodingPool.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for ReferenceEncodingPool.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190BE2DB8 + 4 * byte_190BF1F00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190BE2DD8 + 4 * byte_190BF1F05[v4]))();
}

_BYTE *sub_190BE2DB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190BE2DD8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BE2DE0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BE2DE8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BE2DF0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BE2DF8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReferenceEncodingPool.CodingKeys()
{
  return &type metadata for ReferenceEncodingPool.CodingKeys;
}

unint64_t sub_190BE2E18()
{
  unint64_t result;

  result = qword_1EE2009C8;
  if (!qword_1EE2009C8)
  {
    result = MEMORY[0x194016EF8](&unk_190BF209C, &type metadata for ReferenceEncodingPool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE2009C8);
  }
  return result;
}

size_t sub_190BE2E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  size_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_190BE3020(0, &qword_1ED02F3E8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v2 = *(_QWORD *)(sub_190BE4628() - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v5);
  if (v3)
  {
    if (result - v4 != 0x8000000000000000 || v3 != -1)
    {
      v5[2] = v1;
      v5[3] = 2 * ((uint64_t)(result - v4) / v3);
      OUTLINED_FUNCTION_2_2();
      OUTLINED_FUNCTION_166();
      sub_190BA14C4(v8, v9, v10, v11);
      v13 = v12;
      sub_190AD05B8();
      if (v13 == v1)
        return (size_t)v5;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

const void *sub_190BE2F50(uint64_t a1)
{
  uint64_t v1;
  const void *v2;
  size_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (const void *)MEMORY[0x1E0DEE9D8];
  sub_190BE3020(0, &qword_1EE1FFA78, (void (*)(uint64_t))sub_190B14404);
  v2 = (const void *)OUTLINED_FUNCTION_24();
  v3 = _swift_stdlib_malloc_size(v2);
  OUTLINED_FUNCTION_21_30(v3);
  OUTLINED_FUNCTION_166();
  sub_190BA17D8(v4, v5, v6, v7);
  v9 = v8;
  OUTLINED_FUNCTION_2_2();
  sub_190AD05B8();
  if (v9 != v1)
  {
    __break(1u);
    return (const void *)MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

void sub_190BE3020(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_190BE5FCC();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for DeserializerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190BE30A8 + 4 * byte_190BF2120[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190BE30C8 + 4 * byte_190BF2125[v4]))();
}

_BYTE *sub_190BE30A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190BE30C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BE30D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BE30D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190BE30E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190BE30E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DeserializerError()
{
  return &type metadata for DeserializerError;
}

unint64_t sub_190BE3108()
{
  unint64_t result;

  result = qword_1EE2009D0;
  if (!qword_1EE2009D0)
  {
    result = MEMORY[0x194016EF8](&unk_190BF2184, &type metadata for DeserializerError);
    atomic_store(result, (unint64_t *)&qword_1EE2009D0);
  }
  return result;
}

uint64_t StateMachine.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  OUTLINED_FUNCTION_20_0();
  v4 = v1[2] + *(_QWORD *)(*(_QWORD *)v1[2] + 96);
  OUTLINED_FUNCTION_20_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_190BE31BC(uint64_t a1)
{
  double v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v6 - v2;
  (*(void (**)(char *, double))(v4 + 16))((char *)&v6 - v2, v1);
  return sub_190BE3230((uint64_t)v3);
}

uint64_t sub_190BE3230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_20_0();
  v6 = OUTLINED_FUNCTION_13_36();
  v7(v6);
  OUTLINED_FUNCTION_1();
  ObservableProperty.wrappedValue.setter(v2);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t StateMachine.$state.getter()
{
  OUTLINED_FUNCTION_20_0();
  return ObservableProperty.projectedValue.getter();
}

void StateMachine.__allocating_init(state:)(uint64_t a1)
{
  OUTLINED_FUNCTION_1_9();
  StateMachine.init(state:)(a1);
}

uint64_t sub_190BE332C()
{
  uint64_t v0;

  return v0;
}

void StateMachine.__allocating_init(state:log:)(uint64_t a1)
{
  OUTLINED_FUNCTION_1_9();
  StateMachine.init(state:log:)(a1);
}

uint64_t sub_190BE336C()
{
  uint64_t v0;

  return v0;
}

uint64_t StateMachine.fire(event:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[4];
  uint64_t v32;
  uint64_t v33;
  uint64_t AssociatedConformanceWitness;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v1;
  v5 = *v1;
  v38 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_1_0();
  v32 = v7;
  MEMORY[0x1E0C80A78](v8);
  v31[3] = (char *)v31 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v31 - v11;
  v13 = sub_190BE4D00();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_15();
  sub_190AB8568(0, (unint64_t *)&qword_1ED035670);
  *v2 = sub_190BE590C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v2, *MEMORY[0x1E0DEF740], v13);
  v15 = sub_190BE4D24();
  v16 = OUTLINED_FUNCTION_13_36();
  result = v17(v16);
  if ((v15 & 1) != 0)
  {
    v20 = *(_QWORD *)(v5 + 88);
    v19 = *(_QWORD *)(v5 + 96);
    (*(void (**)(unint64_t, uint64_t))(v19 + 24))(v20, v19);
    OUTLINED_FUNCTION_18_36();
    v35 = v19;
    v21 = v38;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v22 = sub_190BE563C();
    OUTLINED_FUNCTION_20();
    v37 = *(void (**)(char *, uint64_t))(v6 + 8);
    v37(v12, v21);
    v43 = a1;
    v36 = v20;
    if ((v22 & 1) != 0)
    {
      v31[1] = v12;
      OUTLINED_FUNCTION_18_36();
      OUTLINED_FUNCTION_10_48();
      v31[2] = v3;
      v39 = v38;
      v40 = v20;
      v41 = AssociatedConformanceWitness;
      v42 = v35;
      type metadata accessor for StateMachineTransition();
    }
    v33 = v3[4];
    LODWORD(v32) = sub_190BE5894();
    OUTLINED_FUNCTION_13_8();
    v23 = OUTLINED_FUNCTION_10_9();
    *(_OWORD *)(v23 + 16) = xmmword_190BE8430;
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_190BE6080();
    v24 = v39;
    v25 = v40;
    v26 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    v27 = sub_190B0C064();
    *(_QWORD *)(v23 + 64) = v27;
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v25;
    v39 = 0;
    v40 = 0xE000000000000000;
    StateMachine.state.getter((uint64_t)v12);
    v28 = v38;
    sub_190BE6080();
    OUTLINED_FUNCTION_4_53();
    v29 = v39;
    v30 = v40;
    *(_QWORD *)(v23 + 96) = v26;
    *(_QWORD *)(v23 + 104) = v27;
    *(_QWORD *)(v23 + 72) = v29;
    *(_QWORD *)(v23 + 80) = v30;
    OUTLINED_FUNCTION_3_75();
    OUTLINED_FUNCTION_42();
    v39 = v28;
    v40 = v36;
    OUTLINED_FUNCTION_1_85();
  }
  __break(1u);
  return result;
}

void sub_190BE3BFC()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for StateMachineTransition();
}

uint64_t StateMachine.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t StateMachine.__deallocating_deinit()
{
  StateMachine.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_190BE40D0()
{
  uint64_t v0;

  return sub_190B4B190(*(_QWORD *)(v0 + 40)) & 1;
}

uint64_t sub_190BE4104@<X0>(uint64_t a1@<X8>)
{
  return StateMachine.state.getter(a1);
}

uint64_t sub_190BE4128()
{
  return 24;
}

__n128 sub_190BE4134(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for StateMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateMachine.__allocating_init(state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of StateMachine.__allocating_init(state:log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_190BE4164()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_190BE41A0()
{
  sub_190BE4164();
  return swift_deallocClassInstance();
}

uint64_t sub_190BE41C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0();
  return v1;
}

uint64_t sub_190BE41F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190BE4214()
{
  return MEMORY[0x1E0CADE58]();
}

uint64_t sub_190BE4220()
{
  return MEMORY[0x1E0CADEB0]();
}

uint64_t sub_190BE422C()
{
  return MEMORY[0x1E0CADEC0]();
}

uint64_t sub_190BE4238()
{
  return MEMORY[0x1E0CADED0]();
}

uint64_t sub_190BE4244()
{
  return MEMORY[0x1E0CADEE8]();
}

uint64_t sub_190BE4250()
{
  return MEMORY[0x1E0CADF08]();
}

uint64_t sub_190BE425C()
{
  return MEMORY[0x1E0CADF10]();
}

uint64_t sub_190BE4268()
{
  return MEMORY[0x1E0CADF18]();
}

uint64_t sub_190BE4274()
{
  return MEMORY[0x1E0CADF30]();
}

uint64_t sub_190BE4280()
{
  return MEMORY[0x1E0CADF40]();
}

uint64_t sub_190BE428C()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t sub_190BE4298()
{
  return MEMORY[0x1E0CAE008]();
}

uint64_t sub_190BE42A4()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_190BE42B0()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_190BE42BC()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_190BE42C8()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_190BE42D4()
{
  return MEMORY[0x1E0CAE1B8]();
}

uint64_t _s13TeaFoundation16ReferenceEncoderCACycfc_0()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_190BE42EC()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t _s13TeaFoundation16ReferenceEncoderCfd_0()
{
  return MEMORY[0x1E0CAE1F8]();
}

uint64_t sub_190BE4304()
{
  return MEMORY[0x1E0CAE390]();
}

uint64_t sub_190BE4310()
{
  return MEMORY[0x1E0CAE3D8]();
}

uint64_t sub_190BE431C()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_190BE4328()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_190BE4334()
{
  return MEMORY[0x1E0CAE578]();
}

uint64_t sub_190BE4340()
{
  return MEMORY[0x1E0CAE590]();
}

uint64_t sub_190BE434C()
{
  return MEMORY[0x1E0CAE598]();
}

uint64_t sub_190BE4358()
{
  return MEMORY[0x1E0CAE5A0]();
}

uint64_t sub_190BE4364()
{
  return MEMORY[0x1E0CAE5C0]();
}

uint64_t sub_190BE4370()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_190BE437C()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_190BE4388()
{
  return MEMORY[0x1E0CAE670]();
}

uint64_t sub_190BE4394()
{
  return MEMORY[0x1E0CAE678]();
}

uint64_t sub_190BE43A0()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_190BE43AC()
{
  return MEMORY[0x1E0CAE6D0]();
}

uint64_t sub_190BE43B8()
{
  return MEMORY[0x1E0CAE6E0]();
}

uint64_t sub_190BE43C4()
{
  return MEMORY[0x1E0CAE768]();
}

uint64_t sub_190BE43D0()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t sub_190BE43DC()
{
  return MEMORY[0x1E0CAE7C8]();
}

uint64_t sub_190BE43E8()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_190BE43F4()
{
  return MEMORY[0x1E0CAE7E0]();
}

uint64_t sub_190BE4400()
{
  return MEMORY[0x1E0CAE800]();
}

uint64_t sub_190BE440C()
{
  return MEMORY[0x1E0CAE838]();
}

uint64_t sub_190BE4418()
{
  return MEMORY[0x1E0CAE840]();
}

uint64_t sub_190BE4424()
{
  return MEMORY[0x1E0CAE858]();
}

uint64_t sub_190BE4430()
{
  return MEMORY[0x1E0CAE868]();
}

uint64_t sub_190BE443C()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t sub_190BE4448()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_190BE4454()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_190BE4460()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_190BE446C()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_190BE4478()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_190BE4484()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_190BE4490()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_190BE449C()
{
  return MEMORY[0x1E0CAE940]();
}

uint64_t sub_190BE44A8()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_190BE44B4()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_190BE44C0()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_190BE44CC()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_190BE44D8()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_190BE44E4()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_190BE44F0()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_190BE44FC()
{
  return MEMORY[0x1E0CAF3A0]();
}

uint64_t sub_190BE4508()
{
  return MEMORY[0x1E0CAF3A8]();
}

uint64_t sub_190BE4514()
{
  return MEMORY[0x1E0CAF3B0]();
}

uint64_t sub_190BE4520()
{
  return MEMORY[0x1E0CAF3D8]();
}

uint64_t sub_190BE452C()
{
  return MEMORY[0x1E0CAF910]();
}

uint64_t sub_190BE4538()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_190BE4544()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_190BE4550()
{
  return MEMORY[0x1E0CAFD30]();
}

uint64_t sub_190BE455C()
{
  return MEMORY[0x1E0CAFD38]();
}

uint64_t sub_190BE4568()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_190BE4574()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_190BE4580()
{
  return MEMORY[0x1E0CAFDC0]();
}

uint64_t sub_190BE458C()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_190BE4598()
{
  return MEMORY[0x1E0CAFE08]();
}

uint64_t sub_190BE45A4()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_190BE45B0()
{
  return MEMORY[0x1E0CAFE48]();
}

uint64_t sub_190BE45BC()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_190BE45C8()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_190BE45D4()
{
  return MEMORY[0x1E0CAFF30]();
}

uint64_t sub_190BE45E0()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_190BE45EC()
{
  return MEMORY[0x1E0CAFF80]();
}

uint64_t sub_190BE45F8()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_190BE4604()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_190BE4610()
{
  return MEMORY[0x1E0CAFFB0]();
}

uint64_t sub_190BE461C()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_190BE4628()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_190BE4634()
{
  return MEMORY[0x1E0CB0080]();
}

uint64_t sub_190BE4640()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_190BE464C()
{
  return MEMORY[0x1E0CB0098]();
}

uint64_t sub_190BE4658()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_190BE4664()
{
  return MEMORY[0x1E0CB00F8]();
}

uint64_t sub_190BE4670()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_190BE467C()
{
  return MEMORY[0x1E0CB0138]();
}

uint64_t sub_190BE4688()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_190BE4694()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_190BE46A0()
{
  return MEMORY[0x1E0CB0178]();
}

uint64_t sub_190BE46AC()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_190BE46B8()
{
  return MEMORY[0x1E0CB01B0]();
}

uint64_t sub_190BE46C4()
{
  return MEMORY[0x1E0CB01B8]();
}

uint64_t sub_190BE46D0()
{
  return MEMORY[0x1E0CB01D0]();
}

uint64_t sub_190BE46DC()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_190BE46E8()
{
  return MEMORY[0x1E0CB0218]();
}

uint64_t sub_190BE46F4()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_190BE4700()
{
  return MEMORY[0x1E0CB0248]();
}

uint64_t sub_190BE470C()
{
  return MEMORY[0x1E0CB0260]();
}

uint64_t sub_190BE4718()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_190BE4724()
{
  return MEMORY[0x1E0CB0298]();
}

uint64_t sub_190BE4730()
{
  return MEMORY[0x1E0CB03A8]();
}

uint64_t sub_190BE473C()
{
  return MEMORY[0x1E0CB0580]();
}

uint64_t sub_190BE4748()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_190BE4754()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_190BE4760()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_190BE476C()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_190BE4778()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_190BE4784()
{
  return MEMORY[0x1E0CB06E8]();
}

uint64_t sub_190BE4790()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_190BE479C()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_190BE47A8()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_190BE47B4()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_190BE47C0()
{
  return MEMORY[0x1E0CB0808]();
}

uint64_t sub_190BE47CC()
{
  return MEMORY[0x1E0CB0840]();
}

uint64_t _s13TeaFoundation12DateProviderC3now0B00C0VyF_0()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_190BE47E4()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_190BE47F0()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_190BE47FC()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_190BE4808()
{
  return MEMORY[0x1E0CB0978]();
}

uint64_t sub_190BE4814()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_190BE4820()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_190BE482C()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t sub_190BE4838()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_190BE4844()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_190BE4850()
{
  return MEMORY[0x1E0CB0C38]();
}

uint64_t sub_190BE485C()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_190BE4868()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_190BE4874()
{
  return MEMORY[0x1E0CB0D68]();
}

uint64_t sub_190BE4880()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_190BE488C()
{
  return MEMORY[0x1E0CB0D98]();
}

uint64_t sub_190BE4898()
{
  return MEMORY[0x1E0CB0DA8]();
}

uint64_t sub_190BE48A4()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_190BE48B0()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_190BE48BC()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_190BE48C8()
{
  return MEMORY[0x1E0CB0F00]();
}

uint64_t sub_190BE48D4()
{
  return MEMORY[0x1E0CB0F20]();
}

uint64_t sub_190BE48E0()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t sub_190BE48EC()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t sub_190BE48F8()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_190BE4904()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_190BE4910()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_190BE491C()
{
  return MEMORY[0x1E0CB1308]();
}

uint64_t sub_190BE4928()
{
  return MEMORY[0x1E0CB1398]();
}

uint64_t sub_190BE4934()
{
  return MEMORY[0x1E0CB13A0]();
}

uint64_t sub_190BE4940()
{
  return MEMORY[0x1E0CB1528]();
}

uint64_t sub_190BE494C()
{
  return MEMORY[0x1E0CB1560]();
}

uint64_t sub_190BE4958()
{
  return MEMORY[0x1E0CB1578]();
}

uint64_t sub_190BE4964()
{
  return MEMORY[0x1E0CB15C0]();
}

uint64_t sub_190BE4970()
{
  return MEMORY[0x1E0DEF0B8]();
}

uint64_t sub_190BE497C()
{
  return MEMORY[0x1E0DEF0C8]();
}

uint64_t sub_190BE4988()
{
  return MEMORY[0x1E0DEF0D8]();
}

uint64_t sub_190BE4994()
{
  return MEMORY[0x1E0DEF0E0]();
}

uint64_t sub_190BE49A0()
{
  return MEMORY[0x1E0DEF0E8]();
}

uint64_t sub_190BE49AC()
{
  return MEMORY[0x1E0DEF0F0]();
}

uint64_t sub_190BE49B8()
{
  return MEMORY[0x1E0DEF0F8]();
}

uint64_t sub_190BE49C4()
{
  return MEMORY[0x1E0DEF100]();
}

uint64_t sub_190BE49D0()
{
  return MEMORY[0x1E0DEF110]();
}

uint64_t sub_190BE49DC()
{
  return MEMORY[0x1E0DEF118]();
}

uint64_t sub_190BE49E8()
{
  return MEMORY[0x1E0DEF120]();
}

uint64_t sub_190BE49F4()
{
  return MEMORY[0x1E0DEF138]();
}

uint64_t sub_190BE4A00()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_190BE4A0C()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_190BE4A18()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_190BE4A24()
{
  return MEMORY[0x1E0DF2250]();
}

uint64_t sub_190BE4A30()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_190BE4A3C()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_190BE4A48()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_190BE4A54()
{
  return MEMORY[0x1E0CCE260]();
}

uint64_t sub_190BE4A60()
{
  return MEMORY[0x1E0CCE268]();
}

uint64_t sub_190BE4A6C()
{
  return MEMORY[0x1E0CCE270]();
}

uint64_t sub_190BE4A78()
{
  return MEMORY[0x1E0CCE2B8]();
}

uint64_t sub_190BE4A84()
{
  return MEMORY[0x1E0CCE2C0]();
}

uint64_t sub_190BE4A90()
{
  return MEMORY[0x1E0CCE2C8]();
}

uint64_t sub_190BE4A9C()
{
  return MEMORY[0x1E0CCE2D0]();
}

uint64_t sub_190BE4AA8()
{
  return MEMORY[0x1E0CCE2E0]();
}

uint64_t sub_190BE4AB4()
{
  return MEMORY[0x1E0CCE2E8]();
}

uint64_t sub_190BE4AC0()
{
  return MEMORY[0x1E0CCE2F0]();
}

uint64_t sub_190BE4ACC()
{
  return MEMORY[0x1E0CCE2F8]();
}

uint64_t sub_190BE4AD8()
{
  return MEMORY[0x1E0CCE300]();
}

uint64_t sub_190BE4AE4()
{
  return MEMORY[0x1E0CCE388]();
}

uint64_t sub_190BE4AF0()
{
  return MEMORY[0x1E0CCE428]();
}

uint64_t sub_190BE4AFC()
{
  return MEMORY[0x1E0CCE448]();
}

uint64_t sub_190BE4B08()
{
  return MEMORY[0x1E0CCE468]();
}

uint64_t sub_190BE4B14()
{
  return MEMORY[0x1E0CCE4E8]();
}

uint64_t sub_190BE4B20()
{
  return MEMORY[0x1E0CCE5A0]();
}

uint64_t sub_190BE4B2C()
{
  return MEMORY[0x1E0CCE5E0]();
}

uint64_t sub_190BE4B38()
{
  return MEMORY[0x1E0CCE5F0]();
}

uint64_t sub_190BE4B44()
{
  return MEMORY[0x1E0CCE600]();
}

uint64_t sub_190BE4B50()
{
  return MEMORY[0x1E0CCE608]();
}

uint64_t sub_190BE4B5C()
{
  return MEMORY[0x1E0CCE6A8]();
}

uint64_t sub_190BE4B68()
{
  return MEMORY[0x1E0CCE6C8]();
}

uint64_t sub_190BE4B74()
{
  return MEMORY[0x1E0CCE6E0]();
}

uint64_t sub_190BE4B80()
{
  return MEMORY[0x1E0CCE6F0]();
}

uint64_t sub_190BE4B8C()
{
  return MEMORY[0x1E0CCE6F8]();
}

uint64_t sub_190BE4B98()
{
  return MEMORY[0x1E0CCE728]();
}

uint64_t sub_190BE4BA4()
{
  return MEMORY[0x1E0CCE730]();
}

uint64_t sub_190BE4BB0()
{
  return MEMORY[0x1E0CCE778]();
}

uint64_t sub_190BE4BBC()
{
  return MEMORY[0x1E0CCE780]();
}

uint64_t sub_190BE4BC8()
{
  return MEMORY[0x1E0CCEA28]();
}

uint64_t sub_190BE4BD4()
{
  return MEMORY[0x1E0CCEA48]();
}

uint64_t sub_190BE4BE0()
{
  return MEMORY[0x1E0CCEA70]();
}

uint64_t sub_190BE4BEC()
{
  return MEMORY[0x1E0CCEA80]();
}

uint64_t sub_190BE4BF8()
{
  return MEMORY[0x1E0CCEA88]();
}

uint64_t sub_190BE4C04()
{
  return MEMORY[0x1E0CCEAB8]();
}

uint64_t sub_190BE4C10()
{
  return MEMORY[0x1E0CCEAD0]();
}

uint64_t sub_190BE4C1C()
{
  return MEMORY[0x1E0CCEAD8]();
}

uint64_t sub_190BE4C28()
{
  return MEMORY[0x1E0CCEB10]();
}

uint64_t sub_190BE4C34()
{
  return MEMORY[0x1E0DEF4B8]();
}

uint64_t sub_190BE4C40()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_190BE4C4C()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_190BE4C58()
{
  return MEMORY[0x1E0DEF570]();
}

uint64_t sub_190BE4C64()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_190BE4C70()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_190BE4C7C()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_190BE4C88()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_190BE4C94()
{
  return MEMORY[0x1E0DEF678]();
}

uint64_t sub_190BE4CA0()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_190BE4CAC()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_190BE4CB8()
{
  return MEMORY[0x1E0DEF6D8]();
}

uint64_t sub_190BE4CC4()
{
  return MEMORY[0x1E0DEF6E8]();
}

uint64_t sub_190BE4CD0()
{
  return MEMORY[0x1E0DEF6F8]();
}

uint64_t sub_190BE4CDC()
{
  return MEMORY[0x1E0DEF708]();
}

uint64_t sub_190BE4CE8()
{
  return MEMORY[0x1E0DEF710]();
}

uint64_t sub_190BE4CF4()
{
  return MEMORY[0x1E0DEF728]();
}

uint64_t sub_190BE4D00()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_190BE4D0C()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_190BE4D18()
{
  return MEMORY[0x1E0DEF768]();
}

uint64_t sub_190BE4D24()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_190BE4D30()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t sub_190BE4D3C()
{
  return MEMORY[0x1E0CA92B0]();
}

uint64_t sub_190BE4D48()
{
  return MEMORY[0x1E0CA92C8]();
}

uint64_t sub_190BE4D54()
{
  return MEMORY[0x1E0CA9A18]();
}

uint64_t sub_190BE4D60()
{
  return MEMORY[0x1E0CA9A48]();
}

uint64_t sub_190BE4D6C()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_190BE4D78()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_190BE4D84()
{
  return MEMORY[0x1E0DF05B0]();
}

uint64_t sub_190BE4D90()
{
  return MEMORY[0x1E0DE9D78]();
}

uint64_t sub_190BE4D9C()
{
  return MEMORY[0x1E0CB17B8]();
}

uint64_t sub_190BE4DA8()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_190BE4DB4()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_190BE4DC0()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_190BE4DCC()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_190BE4DD8()
{
  return MEMORY[0x1E0DE9E40]();
}

uint64_t sub_190BE4DE4()
{
  return MEMORY[0x1E0DE9E58]();
}

uint64_t sub_190BE4DF0()
{
  return MEMORY[0x1E0DE9E60]();
}

uint64_t sub_190BE4DFC()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_190BE4E08()
{
  return MEMORY[0x1E0DE9E90]();
}

uint64_t sub_190BE4E14()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t _s13TeaFoundation18XPCArgumentBuilderV10buildBlockySayAA0C0VGAFd_tFZ_0()
{
  return MEMORY[0x1E0DE9EE8]();
}

uint64_t sub_190BE4E2C()
{
  return MEMORY[0x1E0DE9F20]();
}

uint64_t sub_190BE4E38()
{
  return MEMORY[0x1E0DE9F38]();
}

uint64_t sub_190BE4E44()
{
  return MEMORY[0x1E0DE9F40]();
}

uint64_t sub_190BE4E50()
{
  return MEMORY[0x1E0DE9F78]();
}

uint64_t sub_190BE4E5C()
{
  return MEMORY[0x1E0DE9FC0]();
}

uint64_t sub_190BE4E68()
{
  return MEMORY[0x1E0DE9FC8]();
}

uint64_t sub_190BE4E74()
{
  return MEMORY[0x1E0DE9FF8]();
}

uint64_t sub_190BE4E80()
{
  return MEMORY[0x1E0DEA038]();
}

uint64_t sub_190BE4E8C()
{
  return MEMORY[0x1E0DEA040]();
}

uint64_t sub_190BE4E98()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_190BE4EA4()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_190BE4EB0()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_190BE4EBC()
{
  return MEMORY[0x1E0DEA0B0]();
}

uint64_t sub_190BE4EC8()
{
  return MEMORY[0x1E0DEA108]();
}

uint64_t sub_190BE4ED4()
{
  return MEMORY[0x1E0DEA140]();
}

uint64_t sub_190BE4EE0()
{
  return MEMORY[0x1E0DEA198]();
}

uint64_t sub_190BE4EEC()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_190BE4EF8()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_190BE4F04()
{
  return MEMORY[0x1E0DEA318]();
}

uint64_t sub_190BE4F10()
{
  return MEMORY[0x1E0DEA340]();
}

uint64_t sub_190BE4F1C()
{
  return MEMORY[0x1E0DEA360]();
}

uint64_t sub_190BE4F28()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_190BE4F34()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_190BE4F40()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_190BE4F4C()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_190BE4F58()
{
  return MEMORY[0x1E0DEA3F0]();
}

uint64_t sub_190BE4F64()
{
  return MEMORY[0x1E0DEA408]();
}

uint64_t sub_190BE4F70()
{
  return MEMORY[0x1E0DEA410]();
}

uint64_t sub_190BE4F7C()
{
  return MEMORY[0x1E0DEA428]();
}

uint64_t sub_190BE4F88()
{
  return MEMORY[0x1E0DEA430]();
}

uint64_t sub_190BE4F94()
{
  return MEMORY[0x1E0DEA448]();
}

uint64_t sub_190BE4FA0()
{
  return MEMORY[0x1E0DEA450]();
}

uint64_t sub_190BE4FAC()
{
  return MEMORY[0x1E0DEA470]();
}

uint64_t sub_190BE4FB8()
{
  return MEMORY[0x1E0DEA478]();
}

uint64_t sub_190BE4FC4()
{
  return MEMORY[0x1E0DEA4B0]();
}

uint64_t sub_190BE4FD0()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_190BE4FDC()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_190BE4FE8()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_190BE4FF4()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_190BE5000()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_190BE500C()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_190BE5018()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_190BE5024()
{
  return MEMORY[0x1E0CB1998]();
}

uint64_t sub_190BE5030()
{
  return MEMORY[0x1E0CB19A8]();
}

uint64_t sub_190BE503C()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_190BE5048()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_190BE5054()
{
  return MEMORY[0x1E0CB19F0]();
}

uint64_t sub_190BE5060()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_190BE506C()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_190BE5078()
{
  return MEMORY[0x1E0DEA600]();
}

uint64_t sub_190BE5084()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_190BE5090()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_190BE509C()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_190BE50A8()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_190BE50B4()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_190BE50C0()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_190BE50CC()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_190BE50D8()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t sub_190BE50E4()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_190BE50F0()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_190BE50FC()
{
  return MEMORY[0x1E0DEA7F0]();
}

uint64_t sub_190BE5108()
{
  return MEMORY[0x1E0DEA7F8]();
}

uint64_t sub_190BE5114()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_190BE5120()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_190BE512C()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_190BE5138()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_190BE5144()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_190BE5150()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_190BE515C()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_190BE5168()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_190BE5174()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_190BE5180()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_190BE518C()
{
  return MEMORY[0x1E0DEA958]();
}

uint64_t sub_190BE5198()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_190BE51A4()
{
  return MEMORY[0x1E0DEAA38]();
}

uint64_t sub_190BE51B0()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_190BE51BC()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_190BE51C8()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_190BE51D4()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_190BE51E0()
{
  return MEMORY[0x1E0DEAA70]();
}

uint64_t sub_190BE51EC()
{
  return MEMORY[0x1E0DEAA78]();
}

uint64_t sub_190BE51F8()
{
  return MEMORY[0x1E0DEAA80]();
}

uint64_t sub_190BE5204()
{
  return MEMORY[0x1E0DEAAA0]();
}

uint64_t sub_190BE5210()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_190BE521C()
{
  return MEMORY[0x1E0DEAAB0]();
}

uint64_t sub_190BE5228()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t sub_190BE5234()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_190BE5240()
{
  return MEMORY[0x1E0DEAB00]();
}

uint64_t sub_190BE524C()
{
  return MEMORY[0x1E0DEAB08]();
}

uint64_t sub_190BE5258()
{
  return MEMORY[0x1E0DEAB20]();
}

uint64_t sub_190BE5264()
{
  return MEMORY[0x1E0DEAB28]();
}

uint64_t sub_190BE5270()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t sub_190BE527C()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_190BE5288()
{
  return MEMORY[0x1E0DEABA0]();
}

uint64_t sub_190BE5294()
{
  return MEMORY[0x1E0DEAC68]();
}

uint64_t sub_190BE52A0()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_190BE52AC()
{
  return MEMORY[0x1E0DEAC90]();
}

uint64_t sub_190BE52B8()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_190BE52C4()
{
  return MEMORY[0x1E0DEAD00]();
}

uint64_t sub_190BE52D0()
{
  return MEMORY[0x1E0DEAD08]();
}

uint64_t sub_190BE52DC()
{
  return MEMORY[0x1E0DEAD10]();
}

uint64_t sub_190BE52E8()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_190BE52F4()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_190BE5300()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_190BE530C()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_190BE5318()
{
  return MEMORY[0x1E0DEADA8]();
}

uint64_t sub_190BE5324()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_190BE5330()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_190BE533C()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_190BE5348()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_190BE5354()
{
  return MEMORY[0x1E0DEADD8]();
}

uint64_t sub_190BE5360()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_190BE536C()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_190BE5378()
{
  return MEMORY[0x1E0DEAE08]();
}

uint64_t sub_190BE5384()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_190BE5390()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_190BE539C()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_190BE53A8()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_190BE53B4()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_190BE53C0()
{
  return MEMORY[0x1E0DEAE68]();
}

uint64_t sub_190BE53CC()
{
  return MEMORY[0x1E0DEAE78]();
}

uint64_t sub_190BE53D8()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_190BE53E4()
{
  return MEMORY[0x1E0DEAE88]();
}

uint64_t sub_190BE53F0()
{
  return MEMORY[0x1E0DEAE90]();
}

uint64_t sub_190BE53FC()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_190BE5408()
{
  return MEMORY[0x1E0DEAEA0]();
}

uint64_t sub_190BE5414()
{
  return MEMORY[0x1E0DEAEA8]();
}

uint64_t sub_190BE5420()
{
  return MEMORY[0x1E0DEAEB8]();
}

uint64_t sub_190BE542C()
{
  return MEMORY[0x1E0DEAEC0]();
}

uint64_t sub_190BE5438()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_190BE5444()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t sub_190BE5450()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_190BE545C()
{
  return MEMORY[0x1E0DEAF08]();
}

uint64_t sub_190BE5468()
{
  return MEMORY[0x1E0DEAF78]();
}

uint64_t sub_190BE5474()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_190BE5480()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_190BE548C()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_190BE5498()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_190BE54A4()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t sub_190BE54B0()
{
  return MEMORY[0x1E0DF0608]();
}

uint64_t sub_190BE54BC()
{
  return MEMORY[0x1E0DF0640]();
}

uint64_t sub_190BE54C8()
{
  return MEMORY[0x1E0DF0650]();
}

uint64_t sub_190BE54D4()
{
  return MEMORY[0x1E0DF0670]();
}

uint64_t sub_190BE54E0()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_190BE54EC()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_190BE54F8()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_190BE5504()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_190BE5510()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_190BE551C()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_190BE5528()
{
  return MEMORY[0x1E0DF0918]();
}

uint64_t sub_190BE5534()
{
  return MEMORY[0x1E0DF0940]();
}

uint64_t sub_190BE5540()
{
  return MEMORY[0x1E0DF0950]();
}

uint64_t sub_190BE554C()
{
  return MEMORY[0x1E0DF0958]();
}

uint64_t sub_190BE5558()
{
  return MEMORY[0x1E0DF0980]();
}

uint64_t sub_190BE5564()
{
  return MEMORY[0x1E0DF0990]();
}

uint64_t sub_190BE5570()
{
  return MEMORY[0x1E0DF09A8]();
}

uint64_t sub_190BE557C()
{
  return MEMORY[0x1E0DF09B0]();
}

uint64_t sub_190BE5588()
{
  return MEMORY[0x1E0DF0A08]();
}

uint64_t sub_190BE5594()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_190BE55A0()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_190BE55AC()
{
  return MEMORY[0x1E0DEB120]();
}

uint64_t sub_190BE55B8()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_190BE55C4()
{
  return MEMORY[0x1E0CB1BB8]();
}

uint64_t sub_190BE55D0()
{
  return MEMORY[0x1E0DEB208]();
}

uint64_t sub_190BE55DC()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_190BE55E8()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_190BE55F4()
{
  return MEMORY[0x1E0DEB260]();
}

uint64_t sub_190BE5600()
{
  return MEMORY[0x1E0DEB2C8]();
}

uint64_t sub_190BE560C()
{
  return MEMORY[0x1E0DEB2E8]();
}

uint64_t sub_190BE5618()
{
  return MEMORY[0x1E0DEB2F0]();
}

uint64_t sub_190BE5624()
{
  return MEMORY[0x1E0DEB300]();
}

uint64_t sub_190BE5630()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_190BE563C()
{
  return MEMORY[0x1E0DEB340]();
}

uint64_t sub_190BE5648()
{
  return MEMORY[0x1E0DEB350]();
}

uint64_t sub_190BE5654()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_190BE5660()
{
  return MEMORY[0x1E0DEB3B0]();
}

uint64_t sub_190BE566C()
{
  return MEMORY[0x1E0DEB498]();
}

uint64_t sub_190BE5678()
{
  return MEMORY[0x1E0DEB518]();
}

uint64_t sub_190BE5684()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_190BE5690()
{
  return MEMORY[0x1E0DEB548]();
}

uint64_t sub_190BE569C()
{
  return MEMORY[0x1E0DEB550]();
}

uint64_t sub_190BE56A8()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_190BE56B4()
{
  return MEMORY[0x1E0DEB570]();
}

uint64_t sub_190BE56C0()
{
  return MEMORY[0x1E0DEB578]();
}

uint64_t sub_190BE56CC()
{
  return MEMORY[0x1E0DEB580]();
}

uint64_t sub_190BE56D8()
{
  return MEMORY[0x1E0DEB590]();
}

uint64_t sub_190BE56E4()
{
  return MEMORY[0x1E0DEB598]();
}

uint64_t sub_190BE56F0()
{
  return MEMORY[0x1E0DEB5A0]();
}

uint64_t sub_190BE56FC()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_190BE5708()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_190BE5714()
{
  return MEMORY[0x1E0DEB5D0]();
}

uint64_t sub_190BE5720()
{
  return MEMORY[0x1E0DEB5E0]();
}

uint64_t sub_190BE572C()
{
  return MEMORY[0x1E0DEB5E8]();
}

uint64_t sub_190BE5738()
{
  return MEMORY[0x1E0DEB5F0]();
}

uint64_t sub_190BE5744()
{
  return MEMORY[0x1E0DEB5F8]();
}

uint64_t sub_190BE5750()
{
  return MEMORY[0x1E0DEB600]();
}

uint64_t sub_190BE575C()
{
  return MEMORY[0x1E0DEB608]();
}

uint64_t sub_190BE5768()
{
  return MEMORY[0x1E0DEB618]();
}

uint64_t sub_190BE5774()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_190BE5780()
{
  return MEMORY[0x1E0DEB628]();
}

uint64_t sub_190BE578C()
{
  return MEMORY[0x1E0DEB630]();
}

uint64_t sub_190BE5798()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_190BE57A4()
{
  return MEMORY[0x1E0DEB668]();
}

uint64_t sub_190BE57B0()
{
  return MEMORY[0x1E0DEB678]();
}

uint64_t sub_190BE57BC()
{
  return MEMORY[0x1E0DEB690]();
}

uint64_t sub_190BE57C8()
{
  return MEMORY[0x1E0DEB698]();
}

uint64_t sub_190BE57D4()
{
  return MEMORY[0x1E0DEB6A0]();
}

uint64_t sub_190BE57E0()
{
  return MEMORY[0x1E0DEB6A8]();
}

uint64_t sub_190BE57EC()
{
  return MEMORY[0x1E0DEB6C0]();
}

uint64_t sub_190BE57F8()
{
  return MEMORY[0x1E0DEB6C8]();
}

uint64_t sub_190BE5804()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_190BE5810()
{
  return MEMORY[0x1E0DEB700]();
}

uint64_t sub_190BE581C()
{
  return MEMORY[0x1E0DEB710]();
}

uint64_t sub_190BE5828()
{
  return MEMORY[0x1E0DEB718]();
}

uint64_t sub_190BE5834()
{
  return MEMORY[0x1E0DEB748]();
}

uint64_t sub_190BE5840()
{
  return MEMORY[0x1E0DEB7A0]();
}

uint64_t sub_190BE584C()
{
  return MEMORY[0x1E0DEB7F8]();
}

uint64_t sub_190BE5858()
{
  return MEMORY[0x1E0CB1C58]();
}

uint64_t sub_190BE5864()
{
  return MEMORY[0x1E0DEB838]();
}

uint64_t sub_190BE5870()
{
  return MEMORY[0x1E0DEB848]();
}

uint64_t sub_190BE587C()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_190BE5888()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_190BE5894()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_190BE58A0()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_190BE58AC()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_190BE58B8()
{
  return MEMORY[0x1E0DEF7D8]();
}

uint64_t sub_190BE58C4()
{
  return MEMORY[0x1E0DEF7E8]();
}

uint64_t sub_190BE58D0()
{
  return MEMORY[0x1E0DEF800]();
}

uint64_t sub_190BE58DC()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_190BE58E8()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_190BE58F4()
{
  return MEMORY[0x1E0DEF848]();
}

uint64_t sub_190BE5900()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_190BE590C()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_190BE5918()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_190BE5924()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_190BE5930()
{
  return MEMORY[0x1E0DEF908]();
}

uint64_t sub_190BE593C()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_190BE5948()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_190BE5954()
{
  return MEMORY[0x1E0DEFA58]();
}

uint64_t sub_190BE5960()
{
  return MEMORY[0x1E0DEFA60]();
}

uint64_t sub_190BE596C()
{
  return MEMORY[0x1E0DEFA70]();
}

uint64_t sub_190BE5978()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_190BE5984()
{
  return MEMORY[0x1E0CB2190]();
}

uint64_t sub_190BE5990()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_190BE599C()
{
  return MEMORY[0x1E0DEB938]();
}

uint64_t sub_190BE59A8()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_190BE59B4()
{
  return MEMORY[0x1E0DEBA70]();
}

uint64_t sub_190BE59C0()
{
  return MEMORY[0x1E0DEBA78]();
}

uint64_t sub_190BE59CC()
{
  return MEMORY[0x1E0DEBA80]();
}

uint64_t sub_190BE59D8()
{
  return MEMORY[0x1E0DEBA88]();
}

uint64_t sub_190BE59E4()
{
  return MEMORY[0x1E0DEBAD8]();
}

uint64_t sub_190BE59F0()
{
  return MEMORY[0x1E0DEBB48]();
}

uint64_t sub_190BE59FC()
{
  return MEMORY[0x1E0DEBB50]();
}

uint64_t sub_190BE5A08()
{
  return MEMORY[0x1E0DEBB58]();
}

uint64_t sub_190BE5A14()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_190BE5A20()
{
  return MEMORY[0x1E0DEBC08]();
}

uint64_t sub_190BE5A2C()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_190BE5A38()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_190BE5A44()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_190BE5A50()
{
  return MEMORY[0x1E0CB2420]();
}

uint64_t sub_190BE5A5C()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_190BE5A68()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_190BE5A74()
{
  return MEMORY[0x1E0CB24B0]();
}

uint64_t sub_190BE5A80()
{
  return MEMORY[0x1E0CB2540]();
}

uint64_t sub_190BE5A8C()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_190BE5A98()
{
  return MEMORY[0x1E0DEBD70]();
}

uint64_t sub_190BE5AA4()
{
  return MEMORY[0x1E0DEBDA8]();
}

uint64_t sub_190BE5AB0()
{
  return MEMORY[0x1E0DEBDD8]();
}

uint64_t sub_190BE5ABC()
{
  return MEMORY[0x1E0DEBDF8]();
}

uint64_t sub_190BE5AC8()
{
  return MEMORY[0x1E0DEBE00]();
}

uint64_t sub_190BE5AD4()
{
  return MEMORY[0x1E0DEBE10]();
}

uint64_t sub_190BE5AE0()
{
  return MEMORY[0x1E0DEBE30]();
}

uint64_t sub_190BE5AEC()
{
  return MEMORY[0x1E0DEBE48]();
}

uint64_t sub_190BE5AF8()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_190BE5B04()
{
  return MEMORY[0x1E0DEBEA8]();
}

uint64_t sub_190BE5B10()
{
  return MEMORY[0x1E0DEBEB8]();
}

uint64_t sub_190BE5B1C()
{
  return MEMORY[0x1E0DEBEE0]();
}

uint64_t sub_190BE5B28()
{
  return MEMORY[0x1E0DEBF08]();
}

uint64_t sub_190BE5B34()
{
  return MEMORY[0x1E0DEBF18]();
}

uint64_t sub_190BE5B40()
{
  return MEMORY[0x1E0DEBF30]();
}

uint64_t sub_190BE5B4C()
{
  return MEMORY[0x1E0DEBF58]();
}

uint64_t sub_190BE5B58()
{
  return MEMORY[0x1E0DEBFB0]();
}

uint64_t sub_190BE5B64()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_190BE5B70()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_190BE5B7C()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_190BE5B88()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t sub_190BE5B94()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_190BE5BA0()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_190BE5BAC()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_190BE5BB8()
{
  return MEMORY[0x1E0DEC130]();
}

uint64_t sub_190BE5BC4()
{
  return MEMORY[0x1E0DEC160]();
}

uint64_t sub_190BE5BD0()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_190BE5BDC()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_190BE5BE8()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_190BE5BF4()
{
  return MEMORY[0x1E0DF0AF8]();
}

uint64_t sub_190BE5C00()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_190BE5C0C()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_190BE5C18()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_190BE5C24()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_190BE5C30()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_190BE5C3C()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_190BE5C48()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_190BE5C54()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_190BE5C60()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_190BE5C6C()
{
  return MEMORY[0x1E0DEC390]();
}

uint64_t sub_190BE5C78()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_190BE5C84()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_190BE5C90()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_190BE5C9C()
{
  return MEMORY[0x1E0DEC430]();
}

uint64_t sub_190BE5CA8()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_190BE5CB4()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_190BE5CC0()
{
  return MEMORY[0x1E0DEC4B8]();
}

uint64_t sub_190BE5CCC()
{
  return MEMORY[0x1E0DEC4D0]();
}

uint64_t sub_190BE5CD8()
{
  return MEMORY[0x1E0DEC4E0]();
}

uint64_t sub_190BE5CE4()
{
  return MEMORY[0x1E0DEC508]();
}

uint64_t sub_190BE5CF0()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_190BE5CFC()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_190BE5D08()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_190BE5D14()
{
  return MEMORY[0x1E0DF0B08]();
}

uint64_t sub_190BE5D20()
{
  return MEMORY[0x1E0DEC5F8]();
}

uint64_t sub_190BE5D2C()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_190BE5D38()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_190BE5D44()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_190BE5D50()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_190BE5D5C()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_190BE5D68()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_190BE5D74()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_190BE5D80()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_190BE5D8C()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_190BE5D98()
{
  return MEMORY[0x1E0DF0B60]();
}

uint64_t sub_190BE5DA4()
{
  return MEMORY[0x1E0DF0B98]();
}

uint64_t sub_190BE5DB0()
{
  return MEMORY[0x1E0DF0BA0]();
}

uint64_t sub_190BE5DBC()
{
  return MEMORY[0x1E0DEC7D0]();
}

uint64_t sub_190BE5DC8()
{
  return MEMORY[0x1E0DEC7D8]();
}

uint64_t sub_190BE5DD4()
{
  return MEMORY[0x1E0DEC808]();
}

uint64_t sub_190BE5DE0()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_190BE5DEC()
{
  return MEMORY[0x1E0DEC980]();
}

uint64_t sub_190BE5DF8()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_190BE5E04()
{
  return MEMORY[0x1E0DECAE0]();
}

uint64_t sub_190BE5E10()
{
  return MEMORY[0x1E0DECAF8]();
}

uint64_t sub_190BE5E1C()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t sub_190BE5E28()
{
  return MEMORY[0x1E0DECB20]();
}

uint64_t sub_190BE5E34()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_190BE5E40()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_190BE5E4C()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_190BE5E58()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_190BE5E64()
{
  return MEMORY[0x1E0DECC10]();
}

uint64_t sub_190BE5E70()
{
  return MEMORY[0x1E0DECC18]();
}

uint64_t sub_190BE5E7C()
{
  return MEMORY[0x1E0DECC38]();
}

uint64_t sub_190BE5E88()
{
  return MEMORY[0x1E0DECC40]();
}

uint64_t sub_190BE5E94()
{
  return MEMORY[0x1E0DECC48]();
}

uint64_t sub_190BE5EA0()
{
  return MEMORY[0x1E0DECC58]();
}

uint64_t sub_190BE5EAC()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_190BE5EB8()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_190BE5EC4()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_190BE5ED0()
{
  return MEMORY[0x1E0DECD58]();
}

uint64_t sub_190BE5EDC()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_190BE5EE8()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_190BE5EF4()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_190BE5F00()
{
  return MEMORY[0x1E0DF0D38]();
}

uint64_t sub_190BE5F0C()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_190BE5F18()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_190BE5F24()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_190BE5F30()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_190BE5F3C()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_190BE5F48()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_190BE5F54()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_190BE5F60()
{
  return MEMORY[0x1E0DED058]();
}

uint64_t sub_190BE5F6C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_190BE5F78()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_190BE5F84()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_190BE5F90()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_190BE5F9C()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_190BE5FA8()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_190BE5FB4()
{
  return MEMORY[0x1E0DED1B8]();
}

uint64_t sub_190BE5FC0()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_190BE5FCC()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_190BE5FD8()
{
  return MEMORY[0x1E0DED258]();
}

uint64_t sub_190BE5FE4()
{
  return MEMORY[0x1E0DED290]();
}

uint64_t sub_190BE5FF0()
{
  return MEMORY[0x1E0DED2B8]();
}

uint64_t sub_190BE5FFC()
{
  return MEMORY[0x1E0DED2C8]();
}

uint64_t sub_190BE6008()
{
  return MEMORY[0x1E0DED2D0]();
}

uint64_t sub_190BE6014()
{
  return MEMORY[0x1E0DED2D8]();
}

uint64_t sub_190BE6020()
{
  return MEMORY[0x1E0DED2E8]();
}

uint64_t sub_190BE602C()
{
  return MEMORY[0x1E0DED2F0]();
}

uint64_t sub_190BE6038()
{
  return MEMORY[0x1E0DED2F8]();
}

uint64_t sub_190BE6044()
{
  return MEMORY[0x1E0DED318]();
}

uint64_t sub_190BE6050()
{
  return MEMORY[0x1E0DED340]();
}

uint64_t sub_190BE605C()
{
  return MEMORY[0x1E0DED350]();
}

uint64_t sub_190BE6068()
{
  return MEMORY[0x1E0DED358]();
}

uint64_t sub_190BE6074()
{
  return MEMORY[0x1E0DED530]();
}

uint64_t sub_190BE6080()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_190BE608C()
{
  return MEMORY[0x1E0DED5A8]();
}

uint64_t sub_190BE6098()
{
  return MEMORY[0x1E0DED5C0]();
}

uint64_t sub_190BE60A4()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_190BE60B0()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t sub_190BE60BC()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_190BE60C8()
{
  return MEMORY[0x1E0DF0E78]();
}

uint64_t sub_190BE60D4()
{
  return MEMORY[0x1E0DED620]();
}

uint64_t sub_190BE60E0()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_190BE60EC()
{
  return MEMORY[0x1E0DED630]();
}

uint64_t sub_190BE60F8()
{
  return MEMORY[0x1E0DED638]();
}

uint64_t sub_190BE6104()
{
  return MEMORY[0x1E0DED648]();
}

uint64_t sub_190BE6110()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_190BE611C()
{
  return MEMORY[0x1E0DED690]();
}

uint64_t sub_190BE6128()
{
  return MEMORY[0x1E0DED698]();
}

uint64_t sub_190BE6134()
{
  return MEMORY[0x1E0DED6A0]();
}

uint64_t sub_190BE6140()
{
  return MEMORY[0x1E0DED6C8]();
}

uint64_t sub_190BE614C()
{
  return MEMORY[0x1E0DED6D0]();
}

uint64_t sub_190BE6158()
{
  return MEMORY[0x1E0DED6D8]();
}

uint64_t sub_190BE6164()
{
  return MEMORY[0x1E0DED6E8]();
}

uint64_t sub_190BE6170()
{
  return MEMORY[0x1E0DED6F8]();
}

uint64_t sub_190BE617C()
{
  return MEMORY[0x1E0DED740]();
}

uint64_t sub_190BE6188()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_190BE6194()
{
  return MEMORY[0x1E0DED788]();
}

uint64_t sub_190BE61A0()
{
  return MEMORY[0x1E0DED7D0]();
}

uint64_t sub_190BE61AC()
{
  return MEMORY[0x1E0DED7D8]();
}

uint64_t sub_190BE61B8()
{
  return MEMORY[0x1E0DED7E0]();
}

uint64_t sub_190BE61C4()
{
  return MEMORY[0x1E0DED7F0]();
}

uint64_t sub_190BE61D0()
{
  return MEMORY[0x1E0DED7F8]();
}

uint64_t sub_190BE61DC()
{
  return MEMORY[0x1E0DED800]();
}

uint64_t sub_190BE61E8()
{
  return MEMORY[0x1E0DED820]();
}

uint64_t sub_190BE61F4()
{
  return MEMORY[0x1E0DED848]();
}

uint64_t sub_190BE6200()
{
  return MEMORY[0x1E0DED858]();
}

uint64_t sub_190BE620C()
{
  return MEMORY[0x1E0DED860]();
}

uint64_t sub_190BE6218()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_190BE6224()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_190BE6230()
{
  return MEMORY[0x1E0DED9E8]();
}

uint64_t sub_190BE623C()
{
  return MEMORY[0x1E0DEDA10]();
}

uint64_t sub_190BE6248()
{
  return MEMORY[0x1E0DEDA20]();
}

uint64_t sub_190BE6254()
{
  return MEMORY[0x1E0DEDA30]();
}

uint64_t sub_190BE6260()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_190BE626C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_190BE6278()
{
  return MEMORY[0x1E0DF0EE8]();
}

uint64_t sub_190BE6284()
{
  return MEMORY[0x1E0DF0EF0]();
}

uint64_t sub_190BE6290()
{
  return MEMORY[0x1E0DF0F10]();
}

uint64_t sub_190BE629C()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_190BE62A8()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_190BE62B4()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_190BE62C0()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_190BE62CC()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_190BE62D8()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_190BE62E4()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_190BE62F0()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_190BE62FC()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_190BE6308()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_190BE6314()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_190BE6320()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_190BE632C()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_190BE6338()
{
  return MEMORY[0x1E0DEE238]();
}

uint64_t sub_190BE6344()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_190BE6350()
{
  return MEMORY[0x1E0DEE250]();
}

uint64_t sub_190BE635C()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_190BE6368()
{
  return MEMORY[0x1E0DEE268]();
}

uint64_t sub_190BE6374()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_190BE6380()
{
  return MEMORY[0x1E0DEE780]();
}

uint64_t sub_190BE638C()
{
  return MEMORY[0x1E0DEE798]();
}

uint64_t sub_190BE6398()
{
  return MEMORY[0x1E0DEE7A0]();
}

uint64_t sub_190BE63A4()
{
  return MEMORY[0x1E0DEE7A8]();
}

uint64_t sub_190BE63B0()
{
  return MEMORY[0x1E0DEE7B8]();
}

uint64_t _s13TeaFoundation11ManualClockV17minimumResolutions8DurationVvg_0()
{
  return MEMORY[0x1E0DEE7C0]();
}

uint64_t sub_190BE63C8()
{
  return MEMORY[0x1E0DEE7C8]();
}

uint64_t sub_190BE63D4()
{
  return MEMORY[0x1E0DEE8A8]();
}

uint64_t sub_190BE63E0()
{
  return MEMORY[0x1E0DEE8B8]();
}

uint64_t sub_190BE63EC()
{
  return MEMORY[0x1E0DEE8C8]();
}

uint64_t sub_190BE63F8()
{
  return MEMORY[0x1E0DEE8D0]();
}

uint64_t sub_190BE6404()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_190BE6410()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_190BE641C()
{
  return MEMORY[0x1E0DF0F28]();
}

uint64_t sub_190BE6428()
{
  return MEMORY[0x1E0DF0F38]();
}

uint64_t sub_190BE6434()
{
  return MEMORY[0x1E0DF0F48]();
}

uint64_t sub_190BE6440()
{
  return MEMORY[0x1E0DF0F58]();
}

uint64_t sub_190BE644C()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t BOMCopierCopyWithOptions()
{
  return MEMORY[0x1E0D034A8]();
}

uint64_t BOMCopierFree()
{
  return MEMORY[0x1E0D034B8]();
}

uint64_t BOMCopierNew()
{
  return MEMORY[0x1E0D034C0]();
}

uint64_t BOMCopierSetCopyFileFinishedHandler()
{
  return MEMORY[0x1E0D034D0]();
}

uint64_t BOMCopierSetUserData()
{
  return MEMORY[0x1E0D03508]();
}

uint64_t BOMCopierUserData()
{
  return MEMORY[0x1E0D03510]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80328](data, *(_QWORD *)&len, md);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  double v2;
  double v3;
  CLLocationCoordinate2D result;

  MEMORY[0x1E0C9E308](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

uint64_t CacheDeleteRegisterInfoCallbacksForProcess()
{
  return MEMORY[0x1E0D09BA0]();
}

uint64_t GSEventIsHardwareKeyboardAttached()
{
  return MEMORY[0x1E0D27B50]();
}

uint64_t IOPSDrawingUnlimitedPower()
{
  return MEMORY[0x1E0CBB890]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSUncaughtExceptionHandler *NSGetUncaughtExceptionHandler(void)
{
  return (NSUncaughtExceptionHandler *)MEMORY[0x1E0CB2B50]();
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return (Protocol *)MEMORY[0x1E0CB3118](namestr);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

void NSSetUncaughtExceptionHandler(NSUncaughtExceptionHandler *a1)
{
  MEMORY[0x1E0CB3198](a1);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return (SCNetworkReachabilityRef)MEMORY[0x1E0CE88B8](allocator, address);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return MEMORY[0x1E0CE88D8](target, flags);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x1E0DEEA58]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_lookUpClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7D10](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1E0C84480](a1, *(_QWORD *)&a2);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84988](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

uint64_t os_unfair_lock_lock_with_options()
{
  return MEMORY[0x1E0C849A0]();
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1E0C849F0]();
}

int pthread_kill(pthread_t a1, int a2)
{
  return MEMORY[0x1E0C84DF8](a1, *(_QWORD *)&a2);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x1E0C84E20](a1, a2);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x1E0C84ED8]();
}

int sigaction(int a1, const sigaction *a2, sigaction *a3)
{
  return MEMORY[0x1E0C853E0](*(_QWORD *)&a1, a2, a3);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x1E0DEEB70]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1E0DEEB90]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBB8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC60]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x1E0DEEC90]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x1E0DEEC98]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1E0DEEDB8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_getMainExecutor()
{
  return MEMORY[0x1E0DF1018]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x1E0DF1028]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x1E0DEEF60]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x1E0DEEF68]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x1E0DEEF70]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x1E0C85798](a1, *(_QWORD *)&a2, a3, a4, a5, a6);
}

